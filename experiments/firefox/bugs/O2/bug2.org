* Bug 2: False positive
  
** Sys' Output
   #+begin_src llvm
     Stack uninit bug
     Name "_ZN9SkOTUtils10RenameFontEP13SkStreamAssetPKci_53"
     in
     Name "_ZN9SkOTUtils10RenameFontEP13SkStreamAssetPKci"
     [UnName 3,UnName 15,UnName 37,UnName 40,UnName 47]
     "/home/s/git/firefox_ll_files/Unified_cpp_gfx_skia14.ll-O2_p"
     on line
     10
   #+end_src

** Source
   #+begin_src c++

 SkData* SkOTUtils::RenameFont(SkStreamAsset* fontData, const char* fontName, int fontNameLen) {

     // Get the sfnt header.
   SkSFNTHeader sfntHeader; // %4
     if (fontData->read(&sfntHeader, sizeof(sfntHeader)) < sizeof(sfntHeader)) {
         return nullptr;
     }

     // Find the existing 'name' table.
     int tableIndex;
     SkSFNTHeader::TableDirectoryEntry tableEntry; // %5
     int numTables /** %20 */ = SkEndian_SwapBE16(sfntHeader.numTables); /// %15
     for (tableIndex = 0; tableIndex < numTables; ++tableIndex) {
         if (fontData->read(&tableEntry, sizeof(tableEntry)) < sizeof(tableEntry)) {
             return nullptr;
         }
         if (SkOTTableName::TAG == tableEntry.tag) { // %22, %23
             break;
         }
     }
     if (tableIndex == numTables) { /// %37
         return nullptr; /// Can't have tableEntry uninit if the function exits early, FP
     }

     if (!fontData->rewind()) {
         return nullptr;
     }

     // The required 'name' record types: Family, Style, Unique, Full and PostScript.
     static constexpr std::array<SkOTTableName::Record::NameID::Predefined::Value, 5> names{{
         SkOTTableName::Record::NameID::Predefined::FontFamilyName,
         SkOTTableName::Record::NameID::Predefined::FontSubfamilyName,
         SkOTTableName::Record::NameID::Predefined::UniqueFontIdentifier,
         SkOTTableName::Record::NameID::Predefined::FullFontName,
         SkOTTableName::Record::NameID::Predefined::PostscriptName,
     }};

     // GDI will not use a Symbol cmap table if there is no Symbol encoded name.
     static constexpr std::array<SkOTTableName::Record::EncodingID::Windows::Value, 2> encodings{{
         SkOTTableName::Record::EncodingID::Windows::Symbol,
         SkOTTableName::Record::EncodingID::Windows::UnicodeBMPUCS2,
     }};

     // Copy the data, leaving out the old name table.
     // In theory, we could also remove the DSIG table if it exists.
     size_t nameTableLogicalSize = sizeof(SkOTTableName)
                                 + (encodings.size() * names.size() * sizeof(SkOTTableName::Record))
                                 + (fontNameLen * sizeof(SK_OT_USHORT));
     size_t nameTablePhysicalSize = (nameTableLogicalSize + 3) & ~3; // Rounded up to a multiple of 4.

     size_t oldNameTablePhysicalSize = (SkEndian_SwapBE32(tableEntry.logicalLength) + 3) & ~3; /// %53
     size_t oldNameTableOffset = SkEndian_SwapBE32(tableEntry.offset); /// %59

   #+end_src
  
** Bitcode
   #+begin_src llvm
	     ; Function Attrs: nounwind sspstrong uwtable
     define hidden %class.SkData* @_ZN9SkOTUtils10RenameFontEP13SkStreamAssetPKci(%class.SkStreamAsset*, i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 !dbg !11448 {
       %4 = alloca %struct.SkSFNTHeader, align 1
       %5 = alloca %"struct.SkSFNTHeader::TableDirectoryEntry", align 4
       %6 = alloca %class.sk_sp, align 8
       call void @llvm.dbg.value(metadata %class.SkStreamAsset* %0, metadata !11450, metadata !DIExpression()), !dbg !24373
       call void @llvm.dbg.value(metadata i8* %1, metadata !11451, metadata !DIExpression()), !dbg !24373
       call void @llvm.dbg.value(metadata i32 %2, metadata !11452, metadata !DIExpression()), !dbg !24373
       %7 = bitcast %struct.SkSFNTHeader* %4 to i8*, !dbg !24374
       call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #11, !dbg !24374
       %8 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %0, i64 0, i32 0, i32 0, i32 0, !dbg !24375
       %9 = bitcast %class.SkStreamAsset* %0 to i64 (%class.SkStream*, i8*, i64)***, !dbg !24375
       %10 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %9, align 8, !dbg !24375
       %11 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %10, i64 2, !dbg !24375
       %12 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %11, align 8, !dbg !24375
       %13 = call i64 %12(%class.SkStream* %8, i8* nonnull %7, i64 12) #11, !dbg !24375
       %14 = icmp ult i64 %13, 12, !dbg !24377
       br i1 %14, label %663, label %15, !dbg !24378

     15:                                               ; preds = %3
       %16 = bitcast %"struct.SkSFNTHeader::TableDirectoryEntry"* %5 to i8*, !dbg !24379
       call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11, !dbg !24379
       %17 = getelementptr inbounds %struct.SkSFNTHeader, %struct.SkSFNTHeader* %4, i64 0, i32 1, !dbg !24380
       %18 = load i16, i16* %17, align 1, !dbg !24380
       %19 = call i16 @llvm.bswap.i16(i16 %18) #11
       %20 = zext i16 %19 to i32, !dbg !24380
       call void @llvm.dbg.value(metadata i32 %20, metadata !11456, metadata !DIExpression()), !dbg !24373
       call void @llvm.dbg.value(metadata i32 0, metadata !11454, metadata !DIExpression()), !dbg !24373
       %21 = icmp eq i16 %18, 0, !dbg !24381
       br i1 %21, label %37, label %22, !dbg !24384

     22:                                               ; preds = %15
       %23 = getelementptr inbounds %"struct.SkSFNTHeader::TableDirectoryEntry", %"struct.SkSFNTHeader::TableDirectoryEntry"* %5, i64 0, i32 0, !dbg !24385
       br label %24, !dbg !24384

     24:                                               ; preds = %22, %34
       %25 = phi i32 [ 0, %22 ], [ %35, %34 ]
       call void @llvm.dbg.value(metadata i32 %25, metadata !11454, metadata !DIExpression()), !dbg !24373
       %26 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %9, align 8, !dbg !24388
       %27 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %26, i64 2, !dbg !24388
       %28 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %27, align 8, !dbg !24388
       %29 = call i64 %28(%class.SkStream* %8, i8* nonnull %16, i64 16) #11, !dbg !24388
       %30 = icmp ult i64 %29, 16, !dbg !24390
       br i1 %30, label %661, label %31, !dbg !24391

     31:                                               ; preds = %24
       %32 = load i32, i32* %23, align 4, !dbg !24392
       %33 = icmp eq i32 %32, 1701667182, !dbg !24393
       br i1 %33, label %37, label %34, !dbg !24394

     34:                                               ; preds = %31
       %35 = add nuw nsw i32 %25, 1, !dbg !24395
       call void @llvm.dbg.value(metadata i32 %35, metadata !11454, metadata !DIExpression()), !dbg !24373
       %36 = icmp ult i32 %35, %20, !dbg !24381
       br i1 %36, label %24, label %37, !dbg !24384, !llvm.loop !24396

     37:                                               ; preds = %34, %31, %15
       %38 = phi i32 [ 0, %15 ], [ %25, %31 ], [ %35, %34 ], !dbg !24398
       call void @llvm.dbg.value(metadata i32 %38, metadata !11454, metadata !DIExpression()), !dbg !24373
       call void @llvm.dbg.value(metadata i32 %38, metadata !11454, metadata !DIExpression()), !dbg !24373
       %39 = icmp eq i32 %38, %20, !dbg !24399
       br i1 %39, label %661, label %40, !dbg !24401

     40:                                               ; preds = %37
       %41 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %0, i64 0, i32 0, i32 0, !dbg !24402
       %42 = bitcast %class.SkStreamAsset* %0 to i1 (%class.SkStreamRewindable*)***, !dbg !24402
       %43 = load i1 (%class.SkStreamRewindable*)**, i1 (%class.SkStreamRewindable*)*** %42, align 8, !dbg !24402
       %44 = getelementptr inbounds i1 (%class.SkStreamRewindable*)*, i1 (%class.SkStreamRewindable*)** %43, i64 5, !dbg !24402
       %45 = load i1 (%class.SkStreamRewindable*)*, i1 (%class.SkStreamRewindable*)** %44, align 8, !dbg !24402
       %46 = call zeroext i1 %45(%class.SkStreamRewindable* %41) #11, !dbg !24402
       br i1 %46, label %47, label %661, !dbg !24404

     47:                                               ; preds = %40
       %48 = sext i32 %2 to i64, !dbg !24405
       %49 = shl nsw i64 %48, 1, !dbg !24406
       %50 = add nsw i64 %49, 126, !dbg !24407
       call void @llvm.dbg.value(metadata i64 %50, metadata !11457, metadata !DIExpression()), !dbg !24373
       %51 = add nsw i64 %49, 129, !dbg !24408
       %52 = and i64 %51, -4, !dbg !24409
       call void @llvm.dbg.value(metadata i64 %52, metadata !11458, metadata !DIExpression()), !dbg !24373
       %53 = getelementptr inbounds %"struct.SkSFNTHeader::TableDirectoryEntry", %"struct.SkSFNTHeader::TableDirectoryEntry"* %5, i64 0, i32 3, !dbg !24410
       %54 = load i32, i32* %53, align 4, !dbg !24410
       call void @llvm.dbg.value(metadata i32 %54, metadata !24362, metadata !DIExpression()) #11, !dbg !24411
       %55 = call i32 @llvm.bswap.i32(i32 %54) #11, !dbg !24413
       %56 = add i32 %55, 3, !dbg !24414
       %57 = and i32 %56, -4, !dbg !24415
       %58 = zext i32 %57 to i64, !dbg !24416
       call void @llvm.dbg.value(metadata i64 %58, metadata !11459, metadata !DIExpression()), !dbg !24373
       %59 = getelementptr inbounds %"struct.SkSFNTHeader::TableDirectoryEntry", %"struct.SkSFNTHeader::TableDirectoryEntry"* %5, i64 0, i32 2, !dbg !24417
       %60 = load i32, i32* %59, align 4, !dbg !24417
       call void @llvm.dbg.value(metadata i32 %60, metadata !24362, metadata !DIExpression()) #11, !dbg !24418
       %61 = call i32 @llvm.bswap.i32(i32 %60) #11, !dbg !24420
       %62 = zext i32 %61 to i64, !dbg !24417
       call void @llvm.dbg.value(metadata i64 %62, metadata !11460, metadata !DIExpression()), !dbg !24373
       %63 = bitcast %class.SkStreamAsset* %0 to i64 (%class.SkStreamAsset*)***, !dbg !24421
       %64 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %63, align 8, !dbg !24421
       %65 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %64, i64 11, !dbg !24421
       %66 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %65, align 8, !dbg !24421
       %67 = call i64 %66(%class.SkStreamAsset* nonnull %0) #11, !dbg !24421
       %68 = sub i64 %67, %58, !dbg !24422
       call void @llvm.dbg.value(metadata i64 %68, metadata !11461, metadata !DIExpression()), !dbg !24373
       %69 = add i64 %68, %52, !dbg !24423
       call void @llvm.dbg.value(metadata i64 %69, metadata !11462, metadata !DIExpression()), !dbg !24373
       %70 = bitcast %class.sk_sp* %6 to i8*, !dbg !24424
       call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #11, !dbg !24424
       call void @llvm.dbg.value(metadata %class.sk_sp* %6, metadata !11463, metadata !DIExpression(DW_OP_deref)), !dbg !24373
       call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp* nonnull sret %6, i64 %69) #11, !dbg !24425
       call void @llvm.dbg.value(metadata %class.sk_sp* %6, metadata !11463, metadata !DIExpression(DW_OP_deref)), !dbg !24373
       call void @llvm.dbg.value(metadata %class.sk_sp* %6, metadata !24426, metadata !DIExpression()), !dbg !24430
       %71 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0, !dbg !24432
       %72 = load %class.SkData*, %class.SkData** %71, align 8, !dbg !24432
       call void @llvm.dbg.value(metadata %class.SkData* %72, metadata !24433, metadata !DIExpression()), !dbg !24436
       %73 = getelementptr inbounds %class.SkData, %class.SkData* %72, i64 0, i32 3, !dbg !24438
       %74 = load i8*, i8** %73, align 8, !dbg !24438
       %75 = ptrtoint i8* %74 to i64
       call void @llvm.dbg.value(metadata i8* %74, metadata !11464, metadata !DIExpression()), !dbg !24373
       %76 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %9, align 8, !dbg !24439
       %77 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %76, i64 2, !dbg !24439
       %78 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %77, align 8, !dbg !24439
       %79 = call i64 %78(%class.SkStream* nonnull %8, i8* %74, i64 %62) #11, !dbg !24439
       %80 = icmp ult i64 %79, %62, !dbg !24441
       br i1 %80, label %650, label %81, !dbg !24442
   #+end_src
