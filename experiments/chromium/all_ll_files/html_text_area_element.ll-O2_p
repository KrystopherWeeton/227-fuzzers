; ModuleID = '../../third_party/blink/renderer/core/html/forms/html_text_area_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/html_text_area_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.147", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.147" = type { %"class.base::RefCounted.148" }
%"class.base::RefCounted.148" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.151" }
%"class.blink::HeapHashMap.151" = type { %"class.WTF::HashMap.154" }
%"class.WTF::HashMap.154" = type { %"class.WTF::HashTable.155" }
%"class.WTF::HashTable.155" = type <{ %"struct.WTF::KeyValuePair.157"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.157" = type { %"class.blink::WeakMember.158", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.158" = type { %"class.blink::MemberBase.159" }
%"class.blink::MemberBase.159" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.160", i32, [4 x i8], %"class.std::__1::unique_ptr.296", %"class.std::__1::unique_ptr.296", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.312", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.330", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.337", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.276", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i64 }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::Worklist.207"* }
%"class.blink::Worklist.207" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::Worklist.221"* }
%"class.blink::Worklist.221" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::Worklist.228"* }
%"class.blink::Worklist.228" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::Worklist.235"* }
%"class.blink::Worklist.235" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::Worklist.242"* }
%"class.blink::Worklist.242" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::Worklist.249"* }
%"class.blink::Worklist.249" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.256", %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.270", [4 x i8] }>
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258", %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { i64 }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { float }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.279", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.288" }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.304" }
%"class.WTF::VectorBuffer.304" = type { %"class.WTF::VectorBufferBase.305" }
%"class.WTF::VectorBufferBase.305" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.318" }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.207"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.214"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.221"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.228"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.235"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.600" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.336 }
%class.scoped_refptr.336 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.337" = type { %"struct.std::__1::__atomic_base.338" }
%"struct.std::__1::__atomic_base.338" = type { %"struct.std::__1::__cxx_atomic_impl.339" }
%"struct.std::__1::__cxx_atomic_impl.339" = type { %"struct.std::__1::__cxx_atomic_base_impl.340" }
%"struct.std::__1::__cxx_atomic_base_impl.340" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLTextAreaElement" = type <{ %"class.blink::TextControlElement", i32, i32, i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.25", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.27", %"class.blink::Member.29", %"class.blink::Member.0", %"class.blink::Member.31", %"class.blink::Member.31", %"class.blink::Member.50", %"class.blink::Member.52", %"class.blink::Member.54", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.59", %"class.blink::HeapVector.61" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::Document"* }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.38" }
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.42", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::Element"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.46" }
%"class.WTF::Vector.46" = type { %"class.WTF::VectorBuffer.47" }
%"class.WTF::VectorBuffer.47" = type { %"class.WTF::VectorBufferBase.48" }
%"class.WTF::VectorBufferBase.48" = type { %"class.blink::Member.42"*, i32, i32 }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.56" }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::HeapHashMap.58"* }
%"class.blink::HeapHashMap.58" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.61" = type { %"class.WTF::Vector.64" }
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.blink::Member.67"*, i32, i32 }
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.69", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.71, %"class.WTF::Vector.72", %"class.WTF::Vector.72", %"class.blink::Member", %"class.blink::Member.77", %"class.blink::HeapHashSet", %"class.blink::Member.29", %"class.WTF::HashSet.85", %"class.WTF::TextPosition", %"class.blink::Member.89", %"class.blink::HeapVector.91", %"class.blink::Member.98" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.71 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74" }
%"class.WTF::VectorBufferBase.74" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.79" }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.83" }
%"class.WTF::HashTable.83" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.85" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.89" = type { %"class.blink::MemberBase.90" }
%"class.blink::MemberBase.90" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.91" = type { %"class.WTF::Vector.94" }
%"class.WTF::Vector.94" = type { %"class.WTF::VectorBuffer.95" }
%"class.WTF::VectorBuffer.95" = type { %"class.WTF::VectorBufferBase.96" }
%"class.WTF::VectorBufferBase.96" = type { %"class.blink::Member.77"*, i32, i32 }
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.19", %"class.blink::Member.21", %"class.blink::Member.23", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.108", %"class.WTF::Vector.108", i8, i32, %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.123", %"class.blink::Member.125", %"class.blink::Member.127", %"class.blink::Member.129", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.132", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.138", %"class.blink::Member.140", %"class.blink::Member.67", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.143", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.42", %"class.blink::Member.353", %"class.blink::Member.42", %"class.blink::Member.42", %"class.blink::Member.42", %"class.blink::UserActionElementSet", %"class.blink::Member.362", double, double, i64, i64, %"class.blink::HeapHashSet.364", %"class.blink::HeapHashSet.371", i16, i8, %"class.blink::Member.378", %"class.blink::Member.380", %"class.blink::Member.382", %"class.blink::Member.384", %"class.blink::TextLinkColors", %"class.blink::Member.409", i8, [7 x i8], %"class.blink::HeapHashMap.411", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.42", %"class.WTF::Vector.418", %"class.blink::Member.423", %"class.blink::Member.427", i8, %"class.blink::Member.42", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.std::__1::unique_ptr.439", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.445", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.458", %"class.WTF::Vector.460", i8, i8, %"class.std::__1::unique_ptr.465", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.471", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.479", i8, i32, %"class.blink::Member.481", %"class.blink::Member.483", %"class.blink::Member.485", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.487", %"class.WTF::HashMap.489", %"class.blink::Member.494", %"class.blink::Member.496", %"class.blink::Member.498", %"class.blink::Member.500", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.502", i8, i32, %"class.blink::Member.509", %"class.blink::Member.511", i32, %"class.blink::Member.513", %"class.blink::Member.515", %"class.blink::Member.517", %"class.std::__1::unique_ptr.519", i64, %"class.std::__1::unique_ptr.525", i32, i32, %"class.blink::Member.536", %"class.blink::Member.538", %"class.blink::Member.540", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.542", %"class.WTF::Vector.544", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.549", %"class.blink::Member.556", %"class.std::__1::unique_ptr.558", %"class.blink::Member.564", i8, i8, %"class.WTF::String", %"class.blink::Member.566", i8, [7 x i8], %"class.blink::HeapHashMap.568", %"class.blink::HeapObserverSet", %"class.blink::Member.582", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.584", i32, i8, i8, %"class.blink::WeakMember.586", %"class.blink::Member.587" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.101" }
%"class.blink::HeapHashMap.101" = type { %"class.WTF::HashMap.104" }
%"class.WTF::HashMap.104" = type { %"class.WTF::HashTable.105" }
%"class.WTF::HashTable.105" = type <{ %"struct.WTF::KeyValuePair.107"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.107" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.108" = type { %"class.WTF::VectorBuffer.109" }
%"class.WTF::VectorBuffer.109" = type { %"class.WTF::VectorBufferBase.110" }
%"class.WTF::VectorBufferBase.110" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.111 }
%class.scoped_refptr.111 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.112" }
%"struct.std::__1::atomic.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__cxx_atomic_impl.115" }
%"struct.std::__1::__cxx_atomic_impl.115" = type { %"struct.std::__1::__cxx_atomic_base_impl.116" }
%"struct.std::__1::__cxx_atomic_base_impl.116" = type { i32 }
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.605", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.673", i32, i8, [3 x i8], %"class.blink::HeapVector.675", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.683", %"class.blink::Member.685", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.694", %"class.blink::Member.822", %"class.blink::Member.824", i8, [7 x i8] }>
%"class.blink::Supplementable.605" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.606" }
%"class.blink::HeapHashMap.606" = type { %"class.WTF::HashMap.609" }
%"class.WTF::HashMap.609" = type { %"class.WTF::HashTable.610" }
%"class.WTF::HashTable.610" = type <{ %"struct.WTF::KeyValuePair.612"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.612" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.621" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.613" }
%"class.blink::HeapObserverSet.613" = type { i32, [4 x i8], %"class.blink::HeapHashSet.614" }
%"class.blink::HeapHashSet.614" = type { %"class.WTF::HashSet.617" }
%"class.WTF::HashSet.617" = type { %"class.WTF::HashTable.618" }
%"class.WTF::HashTable.618" = type <{ %"class.blink::WeakMember.620"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.620" = type opaque
%"class.blink::Supplementable.621" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.622" }
%"class.blink::HeapHashMap.622" = type { %"class.WTF::HashMap.625" }
%"class.WTF::HashMap.625" = type { %"class.WTF::HashTable.626" }
%"class.WTF::HashTable.626" = type <{ %"struct.WTF::KeyValuePair.628"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.628" = type { i8*, %"class.blink::Member.2515" }
%"class.blink::Member.2515" = type { %"class.blink::MemberBase.2516" }
%"class.blink::MemberBase.2516" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2517" }
%"class.blink::Member.2517" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.629, %"class.std::__1::unique_ptr.633", %"class.std::__1::unique_ptr.633", %"class.std::__1::unique_ptr.663", %"class.std::__1::unique_ptr.663", %"class.blink::Member.121", i32, [4 x i8], %"class.WTF::HashSet.669", i32, i32 }
%class.scoped_refptr.629 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.630", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.632 }
%"class.WTF::RefCounted.630" = type { %"class.base::RefCounted.631" }
%"class.base::RefCounted.631" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.632 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.633" = type { %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.650", %"class.std::__1::map.659"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.638 }
%union.anon.638 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.642", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::map.650" = type { %"class.std::__1::__tree.651" }
%"class.std::__1::__tree.651" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.652", %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::map.659" = type opaque
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.669" = type { %"class.WTF::HashTable.670" }
%"class.WTF::HashTable.670" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.675" = type { %"class.WTF::Vector.678" }
%"class.WTF::Vector.678" = type { %"class.WTF::VectorBuffer.679" }
%"class.WTF::VectorBuffer.679" = type { %"class.WTF::VectorBufferBase.680" }
%"class.WTF::VectorBufferBase.680" = type { %"class.blink::Member.681"*, i32, i32 }
%"class.blink::Member.681" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.687", i32, i32 }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.697" }
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.700" }
%"class.WTF::Vector.700" = type { %"class.WTF::VectorBuffer.701" }
%"class.WTF::VectorBuffer.701" = type { %"class.WTF::VectorBufferBase.702" }
%"class.WTF::VectorBufferBase.702" = type { %"class.mojo::StructPtr.703"*, i32, i32 }
%"class.mojo::StructPtr.703" = type { %"class.std::__1::unique_ptr.704" }
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.707", %"class.WTF::HashMap.714", %"class.WTF::HashMap.719", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.724", i32, %"class.mojo::StructPtr.729", %"class.WTF::Vector.724" }
%"class.mojo::StructPtr.707" = type { %"class.std::__1::unique_ptr.708" }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.714" = type { %"class.WTF::HashTable.715" }
%"class.WTF::HashTable.715" = type <{ %"struct.WTF::KeyValuePair.718"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.718" = type opaque
%"class.WTF::HashMap.719" = type { %"class.WTF::HashTable.720" }
%"class.WTF::HashTable.720" = type <{ %"struct.WTF::KeyValuePair.723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.723" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.729" = type { %"class.std::__1::unique_ptr.730" }
%"class.std::__1::unique_ptr.730" = type { %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.724", i8, i8, [6 x i8] }>
%"class.WTF::Vector.724" = type { %"class.WTF::VectorBuffer.725" }
%"class.WTF::VectorBuffer.725" = type { %"class.WTF::VectorBufferBase.726" }
%"class.WTF::VectorBufferBase.726" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.813" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.744", i32 }>
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.747", %"class.absl::optional.748", %"class.absl::optional.753", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.766", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.788", %"class.std::__1::map.799", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.808", i8, %class.scoped_refptr.758, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.809" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.747" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.748" = type { %"class.absl::optional_internal::optional_data.749" }
%"class.absl::optional_internal::optional_data.749" = type { %"class.absl::optional_internal::optional_data_base.750" }
%"class.absl::optional_internal::optional_data_base.750" = type { %"class.absl::optional_internal::optional_data_dtor_base.751" }
%"class.absl::optional_internal::optional_data_dtor_base.751" = type { i8, %union.anon.752 }
%union.anon.752 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.753" = type { %"class.absl::optional_internal::optional_data.754" }
%"class.absl::optional_internal::optional_data.754" = type { %"class.absl::optional_internal::optional_data_base.755" }
%"class.absl::optional_internal::optional_data_base.755" = type { %"class.absl::optional_internal::optional_data_dtor_base.756" }
%"class.absl::optional_internal::optional_data_dtor_base.756" = type { i8, %union.anon.757 }
%union.anon.757 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.758, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.759" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.759" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.346", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.346" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.347" }
%"struct.std::__1::atomic.347" = type { %"struct.std::__1::__atomic_base.348" }
%"struct.std::__1::__atomic_base.348" = type { %"struct.std::__1::__atomic_base.349" }
%"struct.std::__1::__atomic_base.349" = type { %"struct.std::__1::__cxx_atomic_impl.350" }
%"struct.std::__1::__cxx_atomic_impl.350" = type { %"struct.std::__1::__cxx_atomic_base_impl.351" }
%"struct.std::__1::__cxx_atomic_base_impl.351" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.764 }
%class.scoped_refptr.764 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.826", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.758, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.826" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.765 }
%class.scoped_refptr.765 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.769", %class.scoped_refptr.770 }
%"class.base::RepeatingCallback.769" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.770 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.771", [4 x i8] }>
%"class.base::RefCountedThreadSafe.771" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.775", %"class.std::__1::unique_ptr.781", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.787" }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.787" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.788" = type { %"class.std::__1::__tree.789" }
%"class.std::__1::__tree.789" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.790", %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::map.799" = type { %"class.std::__1::__tree.800" }
%"class.std::__1::__tree.800" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.801", %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.base::OnceCallback.808" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.758 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.344" }>
%"class.base::RefCountedThreadSafe.344" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.809" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.143" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.146 }
%class.scoped_refptr.146 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.29", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.355" }
%"class.blink::HeapHashMap.355" = type { %"class.WTF::HashMap.358" }
%"class.WTF::HashMap.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.364" = type { %"class.WTF::HashSet.367" }
%"class.WTF::HashSet.367" = type { %"class.WTF::HashTable.368" }
%"class.WTF::HashTable.368" = type <{ %"class.blink::WeakMember.370"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.370" = type opaque
%"class.blink::HeapHashSet.371" = type { %"class.WTF::HashSet.374" }
%"class.WTF::HashSet.374" = type { %"class.WTF::HashTable.375" }
%"class.WTF::HashTable.375" = type <{ %"class.blink::WeakMember.377"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.377" = type opaque
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.61" }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type <{ %"class.blink::Member.29", %"class.blink::Member.388", %"class.WTF::HashMap.402", %"class.blink::Member.407", i8, [7 x i8] }>
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type <{ %"class.blink::Member.29", %"class.blink::HeapVector.392", i8, [7 x i8] }>
%"class.blink::HeapVector.392" = type { %"class.WTF::Vector.395" }
%"class.WTF::Vector.395" = type { %"class.WTF::VectorBuffer.396" }
%"class.WTF::VectorBuffer.396" = type { %"class.WTF::VectorBufferBase.397", [512 x i8] }
%"class.WTF::VectorBufferBase.397" = type { %"class.blink::Member.398"*, i32, i32 }
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::ListedElement"* }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.19", %"class.blink::Member.21", %"class.blink::Member.23", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.WTF::HashMap.402" = type { %"class.WTF::HashTable.403" }
%"class.WTF::HashTable.403" = type <{ %"struct.WTF::KeyValuePair.406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.406" = type opaque
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::FormKeyGenerator"* }
%"class.blink::FormKeyGenerator" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.411" = type { %"class.WTF::HashMap.414" }
%"class.WTF::HashMap.414" = type { %"class.WTF::HashTable.415" }
%"class.WTF::HashTable.415" = type <{ %"struct.WTF::KeyValuePair.417"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.417" = type opaque
%"class.WTF::Vector.418" = type { %"class.WTF::VectorBuffer.419" }
%"class.WTF::VectorBuffer.419" = type { %"class.WTF::VectorBufferBase.420" }
%"class.WTF::VectorBufferBase.420" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.437"*, i32, i32 }
%"class.blink::Member.437" = type opaque
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.445" = type { %"class.WTF::HashSet.448" }
%"class.WTF::HashSet.448" = type { %"class.WTF::HashTable.449" }
%"class.WTF::HashTable.449" = type <{ %"class.blink::WeakMember.451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.451" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.452", i32, [4 x i8] }>
%"class.WTF::Vector.452" = type { %"class.WTF::VectorBuffer.453" }
%"class.WTF::VectorBuffer.453" = type { %"class.WTF::VectorBufferBase.454" }
%"class.WTF::VectorBufferBase.454" = type { %"struct.std::__1::pair.455"*, i32, i32 }
%"struct.std::__1::pair.455" = type opaque
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.460" = type { %"class.WTF::VectorBuffer.461" }
%"class.WTF::VectorBuffer.461" = type { %"class.WTF::VectorBufferBase.462" }
%"class.WTF::VectorBufferBase.462" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.471" = type { %"class.WTF::Vector.474" }
%"class.WTF::Vector.474" = type { %"class.WTF::VectorBuffer.475" }
%"class.WTF::VectorBuffer.475" = type { %"class.WTF::VectorBufferBase.476" }
%"class.WTF::VectorBufferBase.476" = type { %"class.blink::Member.477"*, i32, i32 }
%"class.blink::Member.477" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.29" }
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.489" = type { %"class.WTF::HashTable.490" }
%"class.WTF::HashTable.490" = type <{ %"struct.WTF::KeyValuePair.493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.493" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.352", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.343, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.343 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.352" = type { %"class.blink::MemberBase.30" }
%"class.blink::HeapHashSet.502" = type { %"class.WTF::HashSet.505" }
%"class.WTF::HashSet.505" = type { %"class.WTF::HashTable.506" }
%"class.WTF::HashTable.506" = type <{ %"class.blink::Member.508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.508" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.85", %"class.WTF::HashSet.85", %"class.WTF::HashSet.85", %"class.WTF::HashSet.85", %"class.WTF::HashSet.85", %"class.WTF::HashSet.85", i32, [4 x i8], %"class.WTF::HashMap.528", %"class.WTF::HashMap.528", %"class.WTF::HashMap.528", %"class.WTF::HashMap.528", %"class.WTF::HashMap.528", %"class.WTF::HashMap.528", %"class.WTF::HashMap.528", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.528" = type { %"class.WTF::HashTable.529" }
%"class.WTF::HashTable.529" = type <{ %"struct.WTF::KeyValuePair.532"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.532" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.544" = type { %"class.WTF::VectorBuffer.545" }
%"class.WTF::VectorBuffer.545" = type { %"class.WTF::VectorBufferBase.546" }
%"class.WTF::VectorBufferBase.546" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.549" = type { %"class.WTF::HashMap.552" }
%"class.WTF::HashMap.552" = type { %"class.WTF::HashTable.553" }
%"class.WTF::HashTable.553" = type <{ %"struct.WTF::KeyValuePair.555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.555" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.568" = type { %"class.WTF::HashMap.571" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.574" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.575" }
%"class.blink::HeapHashSet.575" = type { %"class.WTF::HashSet.578" }
%"class.WTF::HashSet.578" = type { %"class.WTF::HashTable.579" }
%"class.WTF::HashTable.579" = type <{ %"class.blink::WeakMember.581"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.581" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.29", %"class.blink::HeapHashSet.591", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.598", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.591" = type { %"class.WTF::HashSet.594" }
%"class.WTF::HashSet.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"class.blink::Member.597"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.597" = type opaque
%"class.blink::HeapTaskRunnerTimer.598" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.599", { i64, i64 } }
%"class.blink::WeakMember.599" = type { %"class.blink::MemberBase.585" }
%"class.blink::WeakMember.586" = type { %"class.blink::MemberBase" }
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.382", %"class.blink::Member.827", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::FormControlState" = type { i32, %"class.WTF::Vector.724" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1427, %"class.WTF::Vector.1428", %"class.std::__1::unique_ptr.1433", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1454, %"class.blink::Persistent.1455" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.831, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.831 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1259", %"class.std::__1::unique_ptr.1261" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.896", %"class.blink::DataRef.976", %"class.blink::DataRef.980", %"class.blink::DataRef.1175", %"class.blink::DataRef.1242", %"class.blink::DataRef.1246", %"class.blink::DataRef.1250", %"class.blink::DataRef.1254", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.832 }
%class.scoped_refptr.832 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.833", %"class.blink::DataRef.835", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.833" = type { %"class.base::RefCounted.834" }
%"class.base::RefCounted.834" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.835" = type { %class.scoped_refptr.836 }
%class.scoped_refptr.836 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.837", %"class.blink::Font" }
%"class.WTF::RefCounted.837" = type { %"class.base::RefCounted.838" }
%"class.base::RefCounted.838" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.865 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.840, %class.scoped_refptr.848, %class.scoped_refptr.858, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.864 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.839 }
%class.scoped_refptr.839 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1473", [4 x i8] }>
%"class.WTF::RefCounted.1473" = type { %"class.base::RefCounted.1474" }
%"class.base::RefCounted.1474" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.840 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.846", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.841" }
%"class.WTF::Vector.841" = type { %"class.WTF::VectorBuffer.842" }
%"class.WTF::VectorBuffer.842" = type { %"class.WTF::VectorBufferBase.843" }
%"class.WTF::VectorBufferBase.843" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.846" = type { %"class.base::RefCounted.847" }
%"class.base::RefCounted.847" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.848 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.849", %"class.WTF::RefCounted.856", [4 x i8] }>
%"class.blink::FontSettings.849" = type { %"class.WTF::Vector.850" }
%"class.WTF::Vector.850" = type { %"class.WTF::VectorBuffer.851" }
%"class.WTF::VectorBuffer.851" = type { %"class.WTF::VectorBufferBase.852" }
%"class.WTF::VectorBufferBase.852" = type { %"class.blink::FontTagValuePair.853"*, i32, i32 }
%"class.blink::FontTagValuePair.853" = type { i32, float }
%"class.WTF::RefCounted.856" = type { %"class.base::RefCounted.857" }
%"class.base::RefCounted.857" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.858 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.859", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.861, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.859" = type { %"class.base::RefCounted.860" }
%"class.base::RefCounted.860" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.861 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.862", [4 x i8] }>
%"class.WTF::RefCounted.862" = type { %"class.base::RefCounted.863" }
%"class.base::RefCounted.863" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.864 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.865 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.866", %"class.WTF::Vector.868", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.866" = type { %"class.base::RefCounted.867" }
%"class.base::RefCounted.867" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.868" = type { %"class.WTF::VectorBuffer.869" }
%"class.WTF::VectorBuffer.869" = type { %"class.WTF::VectorBufferBase.870", [8 x i8] }
%"class.WTF::VectorBufferBase.870" = type { %class.scoped_refptr.871*, i32, i32 }
%class.scoped_refptr.871 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.872", [4 x i8] }>
%"class.WTF::RefCounted.872" = type { %"class.base::RefCounted.873" }
%"class.base::RefCounted.873" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.882", %class.scoped_refptr.889, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.872" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.876", %"class.absl::optional.876", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.876" = type { %"class.absl::optional_internal::optional_data.877" }
%"class.absl::optional_internal::optional_data.877" = type { %"class.absl::optional_internal::optional_data_base.878" }
%"class.absl::optional_internal::optional_data_base.878" = type { %"class.absl::optional_internal::optional_data_dtor_base.879" }
%"class.absl::optional_internal::optional_data_dtor_base.879" = type { i8, %union.anon.880 }
%union.anon.880 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.881, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.112" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.112" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.347" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.881 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.885, %class.scoped_refptr.885 }
%class.scoped_refptr.885 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.889 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.890", [4 x i8] }>
%"class.WTF::RefCounted.890" = type { %"class.base::RefCounted.891" }
%"class.base::RefCounted.891" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.892" }
%"class.blink::PersistentBase.892" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.893" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.893" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.894 }
%class.scoped_refptr.894 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.895, i8, i8, i8, i8 }>
%union.anon.895 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.896" = type { %class.scoped_refptr.897 }
%class.scoped_refptr.897 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.898", [4 x i8], %"class.blink::DataRef.900", %"class.blink::DataRef.941", %"class.WTF::Vector.945", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.949, %class.scoped_refptr.958, %"class.blink::Persistent.966", %"class.blink::Persistent.968", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.898" = type { %"class.base::RefCounted.899" }
%"class.base::RefCounted.899" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.900" = type { %class.scoped_refptr.901 }
%class.scoped_refptr.901 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.902", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.904, %class.scoped_refptr.911, %"class.blink::Persistent.928", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.902" = type { %"class.base::RefCounted.903" }
%"class.base::RefCounted.903" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.904 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.905", %"class.WTF::Vector.906" }
%"class.base::RefCountedThreadSafe.905" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.911 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.912", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.912" = type { %"class.base::RefCounted.913" }
%"class.base::RefCounted.913" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.914", %"class.blink::Persistent.919" }
%"class.WTF::HashMap.914" = type { %"class.WTF::HashTable.915" }
%"class.WTF::HashTable.915" = type <{ %"struct.WTF::KeyValuePair.918"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.918" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2592 }
%class.scoped_refptr.2592 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2593", %"class.WTF::Vector.724", %"class.WTF::Vector.2595", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2593" = type { %"class.base::RefCounted.2594" }
%"class.base::RefCounted.2594" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2595" = type { %"class.WTF::VectorBuffer.2596" }
%"class.WTF::VectorBuffer.2596" = type { %"class.WTF::VectorBufferBase.2597" }
%"class.WTF::VectorBufferBase.2597" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2598 }
%union.anon.2598 = type { double }
%"class.blink::Persistent.919" = type { %"class.blink::PersistentBase.920" }
%"class.blink::PersistentBase.920" = type { %"class.blink::HeapHashMap.921"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.921" = type { %"class.WTF::HashMap.924" }
%"class.WTF::HashMap.924" = type { %"class.WTF::HashTable.925" }
%"class.WTF::HashTable.925" = type <{ %"struct.WTF::KeyValuePair.927"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.927" = type opaque
%"class.blink::Persistent.928" = type { %"class.blink::PersistentBase.929" }
%"class.blink::PersistentBase.929" = type { %"class.blink::HeapVector.930"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.930" = type { %"class.WTF::Vector.933" }
%"class.WTF::Vector.933" = type { %"class.WTF::VectorBuffer.934" }
%"class.WTF::VectorBuffer.934" = type { %"class.WTF::VectorBufferBase.935" }
%"class.WTF::VectorBufferBase.935" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.936", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.941" = type { %class.scoped_refptr.942 }
%class.scoped_refptr.942 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.943", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.943" = type { %"class.base::RefCounted.944" }
%"class.base::RefCounted.944" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.945" = type { %"class.WTF::VectorBuffer.946" }
%"class.WTF::VectorBuffer.946" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.949 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.950", %"class.WTF::Vector.952" }
%"class.WTF::RefCounted.950" = type { %"class.base::RefCounted.951" }
%"class.base::RefCounted.951" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.952" = type { %"class.WTF::VectorBuffer.953" }
%"class.WTF::VectorBuffer.953" = type { %"class.WTF::VectorBufferBase.954" }
%"class.WTF::VectorBufferBase.954" = type { %"struct.std::__1::pair.955"*, i32, i32 }
%"struct.std::__1::pair.955" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.958 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.959", [4 x i8], %"class.WTF::Vector.961" }
%"class.WTF::RefCounted.959" = type { %"class.base::RefCounted.960" }
%"class.base::RefCounted.960" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.961" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.963", [28 x i8] }>
%"class.WTF::VectorBufferBase.963" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.966" = type { %"class.blink::PersistentBase.967" }
%"class.blink::PersistentBase.967" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.968" = type { %"class.blink::PersistentBase.969" }
%"class.blink::PersistentBase.969" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.972", %"class.blink::Member.974" }
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.976" = type { %class.scoped_refptr.977 }
%class.scoped_refptr.977 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.978", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.978" = type { %"class.base::RefCounted.979" }
%"class.base::RefCounted.979" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.980" = type { %class.scoped_refptr.981 }
%class.scoped_refptr.981 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.982", [4 x i8], %"class.blink::DataRef.984", %"class.blink::DataRef.1050", %"class.blink::TransformOperations", %class.scoped_refptr.958, %"class.blink::Persistent.1169", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.982" = type { %"class.base::RefCounted.983" }
%"class.base::RefCounted.983" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.984" = type { %class.scoped_refptr.985 }
%class.scoped_refptr.985 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.986", [4 x i8], %"class.blink::DataRef.988", %"class.blink::Persistent.1026", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.986" = type { %"class.base::RefCounted.987" }
%"class.base::RefCounted.987" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.988" = type { %class.scoped_refptr.989 }
%class.scoped_refptr.989 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.990", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1008, %class.scoped_refptr.1011, %class.scoped_refptr.1014, %class.scoped_refptr.1017, %class.scoped_refptr.1018, %class.scoped_refptr.1019, %"class.blink::Persistent.1026", %"class.blink::Persistent.1041", %"class.absl::optional.1045", %"class.absl::optional.1045", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.990" = type { %"class.base::RefCounted.991" }
%"class.base::RefCounted.991" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.992", %"class.std::__1::unique_ptr.997" }
%"class.WTF::Vector.992" = type { %"class.WTF::VectorBuffer.993" }
%"class.WTF::VectorBuffer.993" = type { %"class.WTF::VectorBufferBase.994" }
%"class.WTF::VectorBufferBase.994" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1000", %"class.WTF::Vector.992", i32, i32 }
%"class.WTF::Vector.1000" = type { %"class.WTF::VectorBuffer.1001" }
%"class.WTF::VectorBuffer.1001" = type { %"class.WTF::VectorBufferBase.1002" }
%"class.WTF::VectorBufferBase.1002" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1008 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1009", [4 x i8] }>
%"class.WTF::RefCounted.1009" = type { %"class.base::RefCounted.1010" }
%"class.base::RefCounted.1010" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1011 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1012", [4 x i8] }>
%"class.WTF::RefCounted.1012" = type { %"class.base::RefCounted.1013" }
%"class.base::RefCounted.1013" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1014 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1015" }>
%"class.WTF::RefCounted.1015" = type { %"class.base::RefCounted.1016" }
%"class.base::RefCounted.1016" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1017 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1018 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1019 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1020", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1020" = type { %"class.base::RefCounted.1021" }
%"class.base::RefCounted.1021" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1022" }
%"class.blink::DataRef.1022" = type { %class.scoped_refptr.1023 }
%class.scoped_refptr.1023 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.966", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1024" }
%"class.WTF::RefCounted.1024" = type { %"class.base::RefCounted.1025" }
%"class.base::RefCounted.1025" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1041" = type { %"class.blink::PersistentBase.1042" }
%"class.blink::PersistentBase.1042" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1011, %"class.blink::Member.936", i32, [4 x i8] }>
%"class.absl::optional.1045" = type { %"class.absl::optional_internal::optional_data.1046" }
%"class.absl::optional_internal::optional_data.1046" = type { %"class.absl::optional_internal::optional_data_base.1047" }
%"class.absl::optional_internal::optional_data_base.1047" = type { %"class.absl::optional_internal::optional_data_dtor_base.1048" }
%"class.absl::optional_internal::optional_data_dtor_base.1048" = type { i8, [3 x i8], %union.anon.1049 }
%union.anon.1049 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1026" = type { %"class.blink::PersistentBase.1027" }
%"class.blink::PersistentBase.1027" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1030" }
%"class.blink::HeapVector.1030" = type { %"class.WTF::Vector.1033" }
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"class.blink::Member.1036"*, i32, i32 }
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1050" = type { %class.scoped_refptr.1051 }
%class.scoped_refptr.1051 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1052", %"class.blink::DataRef.1054", %"class.blink::DataRef.1058", %"class.blink::DataRef.1067", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1086", %"class.std::__1::unique_ptr.1097", %"class.std::__1::unique_ptr.1135", %"class.std::__1::unique_ptr.1146", %"class.std::__1::unique_ptr.1157", %"class.WTF::Vector.724", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1052" = type { %"class.base::RefCounted.1053" }
%"class.base::RefCounted.1053" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1054" = type { %class.scoped_refptr.1055 }
%class.scoped_refptr.1055 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1056", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1056" = type { %"class.base::RefCounted.1057" }
%"class.base::RefCounted.1057" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1058" = type { %class.scoped_refptr.1059 }
%class.scoped_refptr.1059 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1060", [4 x i8], %"class.WTF::Vector.1062", i8, [7 x i8] }>
%"class.WTF::RefCounted.1060" = type { %"class.base::RefCounted.1061" }
%"class.base::RefCounted.1061" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1062" = type { %"class.WTF::VectorBuffer.1063" }
%"class.WTF::VectorBuffer.1063" = type { %"class.WTF::VectorBufferBase.1064" }
%"class.WTF::VectorBufferBase.1064" = type { i32*, i32, i32 }
%"class.blink::DataRef.1067" = type { %class.scoped_refptr.1068 }
%class.scoped_refptr.1068 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1069", [4 x i8], %"class.WTF::HashMap.1071", %"class.WTF::HashMap.1071", %"class.WTF::HashMap.1071", %"class.WTF::HashMap.1071", %"class.WTF::HashMap.1071", %"class.WTF::HashMap.1071", %"class.WTF::HashMap.1076", %"class.WTF::HashMap.1076", %"class.WTF::HashMap.1076", %"class.WTF::HashMap.1076", %"class.WTF::HashMap.1081", %"class.WTF::Vector.992", %"class.WTF::Vector.992", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1069" = type { %"class.base::RefCounted.1070" }
%"class.base::RefCounted.1070" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1071" = type { %"class.WTF::HashTable.1072" }
%"class.WTF::HashTable.1072" = type <{ %"struct.WTF::KeyValuePair.1075"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1075" = type { %"class.WTF::String", %"class.WTF::Vector.2582" }
%"class.WTF::Vector.2582" = type { %"class.WTF::VectorBuffer.2583" }
%"class.WTF::VectorBuffer.2583" = type { %"class.WTF::VectorBufferBase.2584" }
%"class.WTF::VectorBufferBase.2584" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1076" = type { %"class.WTF::HashTable.1077" }
%"class.WTF::HashTable.1077" = type <{ %"struct.WTF::KeyValuePair.1080"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1080" = type { i64, %"class.WTF::Vector.724" }
%"class.WTF::HashMap.1081" = type { %"class.WTF::HashTable.1082" }
%"class.WTF::HashTable.1082" = type <{ %"struct.WTF::KeyValuePair.1085"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1085" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1089" }
%"class.WTF::HashMap.1089" = type { %"class.WTF::HashTable.1090" }
%"class.WTF::HashTable.1090" = type <{ %"struct.WTF::KeyValuePair.1093"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1093" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2587", %"class.absl::optional.2587", %"class.absl::optional.2587" }
%"class.absl::optional.2587" = type { %"class.absl::optional_internal::optional_data.2588" }
%"class.absl::optional_internal::optional_data.2588" = type { %"class.absl::optional_internal::optional_data_base.2589" }
%"class.absl::optional_internal::optional_data_base.2589" = type { %"class.absl::optional_internal::optional_data_dtor_base.2590" }
%"class.absl::optional_internal::optional_data_dtor_base.2590" = type { i8, %union.anon.2591 }
%union.anon.2591 = type { i32 }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.945", %"class.WTF::Vector.1112", %"class.WTF::Vector.1100", %"class.WTF::Vector.1117", %"class.WTF::Vector.1122", %"class.WTF::Vector.1127" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1100", %"class.WTF::Vector.1100", %"class.WTF::Vector.1105" }
%"class.WTF::Vector.1105" = type { %"class.WTF::VectorBuffer.1106" }
%"class.WTF::VectorBuffer.1106" = type { %"class.WTF::VectorBufferBase.1107" }
%"class.WTF::VectorBufferBase.1107" = type { %class.scoped_refptr.1108*, i32, i32 }
%class.scoped_refptr.1108 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1109" }
%"class.base::RefCountedThreadSafe.1109" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1112" = type { %"class.WTF::VectorBuffer.1113" }
%"class.WTF::VectorBuffer.1113" = type { %"class.WTF::VectorBufferBase.1114" }
%"class.WTF::VectorBufferBase.1114" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1100" = type { %"class.WTF::VectorBuffer.1101" }
%"class.WTF::VectorBuffer.1101" = type { %"class.WTF::VectorBufferBase.1102" }
%"class.WTF::VectorBufferBase.1102" = type { double*, i32, i32 }
%"class.WTF::Vector.1117" = type { %"class.WTF::VectorBuffer.1118" }
%"class.WTF::VectorBuffer.1118" = type { %"class.WTF::VectorBufferBase.1119" }
%"class.WTF::VectorBufferBase.1119" = type { i32*, i32, i32 }
%"class.WTF::Vector.1122" = type { %"class.WTF::VectorBuffer.1123" }
%"class.WTF::VectorBuffer.1123" = type { %"class.WTF::VectorBufferBase.1124" }
%"class.WTF::VectorBufferBase.1124" = type { i32*, i32, i32 }
%"class.WTF::Vector.1127" = type { %"class.WTF::VectorBuffer.1128" }
%"class.WTF::VectorBuffer.1128" = type { %"class.WTF::VectorBufferBase.1129" }
%"class.WTF::VectorBufferBase.1129" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1138" }
%"class.WTF::Vector.1138" = type { %"class.WTF::VectorBuffer.1139" }
%"class.WTF::VectorBuffer.1139" = type { %"class.WTF::VectorBufferBase.1140" }
%"class.WTF::VectorBufferBase.1140" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1149" }
%"class.WTF::Vector.1149" = type { %"class.WTF::VectorBuffer.1150" }
%"class.WTF::VectorBuffer.1150" = type { %"class.WTF::VectorBufferBase.1151" }
%"class.WTF::VectorBufferBase.1151" = type { %"class.blink::Persistent.966"*, i32, i32 }
%"class.std::__1::unique_ptr.1157" = type { %"class.std::__1::__compressed_pair.1158" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.1159" }
%"struct.std::__1::__compressed_pair_elem.1159" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.966", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1163" }
%"class.WTF::Vector.1163" = type { %"class.WTF::VectorBuffer.1164" }
%"class.WTF::VectorBuffer.1164" = type { %"class.WTF::VectorBufferBase.1165" }
%"class.WTF::VectorBufferBase.1165" = type { %class.scoped_refptr.1166*, i32, i32 }
%class.scoped_refptr.1166 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1015", [4 x i8] }>
%"class.blink::Persistent.1169" = type { %"class.blink::PersistentBase.1170" }
%"class.blink::PersistentBase.1170" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1173" }
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1175" = type { %class.scoped_refptr.1176 }
%class.scoped_refptr.1176 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1177", [4 x i8], %"class.blink::DataRef.1179", %"class.blink::DataRef.1183", %"class.blink::DataRef.1204", %"class.blink::DataRef.1222", %"class.blink::DataRef.1234", %"class.blink::DataRef.1238", %class.scoped_refptr.1208, i32, [4 x i8] }>
%"class.WTF::RefCounted.1177" = type { %"class.base::RefCounted.1178" }
%"class.base::RefCounted.1178" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1179" = type { %class.scoped_refptr.1180 }
%class.scoped_refptr.1180 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1181", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1181" = type { %"class.base::RefCounted.1182" }
%"class.base::RefCounted.1182" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1183" = type { %class.scoped_refptr.1184 }
%class.scoped_refptr.1184 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1185", %class.scoped_refptr.1187, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1185" = type { %"class.base::RefCounted.1186" }
%"class.base::RefCounted.1186" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1187 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1188", %"class.std::__1::unique_ptr.1194", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1012" }>
%"class.std::__1::unique_ptr.1188" = type { %"class.std::__1::__compressed_pair.1189" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1197, i32, %"struct.std::__1::atomic.347", %"struct.std::__1::atomic.347", i8, i8 }>
%class.sk_sp.1197 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1198, %class.SkTDArray.1199, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.112" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1198 = type { i8*, i32, i32 }
%class.SkTDArray.1199 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1200 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.112", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1200 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.337", [3 x i8] }
%"class.blink::DataRef.1204" = type { %class.scoped_refptr.1205 }
%class.scoped_refptr.1205 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1206", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1206" = type { %"class.base::RefCounted.1207" }
%"class.base::RefCounted.1207" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1208, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1222" = type { %class.scoped_refptr.1223 }
%class.scoped_refptr.1223 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1224", [4 x i8], %class.scoped_refptr.1226, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1224" = type { %"class.base::RefCounted.1225" }
%"class.base::RefCounted.1225" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1226 = type { %"class.base::RefCountedData.1227"* }
%"class.base::RefCountedData.1227" = type { %"class.base::RefCountedThreadSafe.1228", %"class.WTF::Vector.1229" }
%"class.base::RefCountedThreadSafe.1228" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1229" = type { %"class.WTF::VectorBuffer.1230" }
%"class.WTF::VectorBuffer.1230" = type { %"class.WTF::VectorBufferBase.1231" }
%"class.WTF::VectorBufferBase.1231" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1234" = type { %class.scoped_refptr.1235 }
%class.scoped_refptr.1235 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1236", %class.scoped_refptr.1208, %class.scoped_refptr.1208, %class.scoped_refptr.1208 }
%"class.WTF::RefCounted.1236" = type { %"class.base::RefCounted.1237" }
%"class.base::RefCounted.1237" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1238" = type { %class.scoped_refptr.1239 }
%class.scoped_refptr.1239 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1240", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1240" = type { %"class.base::RefCounted.1241" }
%"class.base::RefCounted.1241" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1208 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1209", %"class.blink::Persistent.1211", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1209" = type { %"class.base::RefCounted.1210" }
%"class.base::RefCounted.1210" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1211" = type { %"class.blink::PersistentBase.1212" }
%"class.blink::PersistentBase.1212" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.42", %"class.blink::HeapHashMap.1215" }
%"class.blink::HeapHashMap.1215" = type { %"class.WTF::HashMap.1218" }
%"class.WTF::HashMap.1218" = type { %"class.WTF::HashTable.1219" }
%"class.WTF::HashTable.1219" = type <{ %"struct.WTF::KeyValuePair.1221"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1221" = type opaque
%"class.blink::DataRef.1242" = type { %class.scoped_refptr.1243 }
%class.scoped_refptr.1243 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1244", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1244" = type { %"class.base::RefCounted.1245" }
%"class.base::RefCounted.1245" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1246" = type { %class.scoped_refptr.1247 }
%class.scoped_refptr.1247 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1248", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1248" = type { %"class.base::RefCounted.1249" }
%"class.base::RefCounted.1249" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1250" = type { %class.scoped_refptr.1251 }
%class.scoped_refptr.1251 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1252", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1252" = type { %"class.base::RefCounted.1253" }
%"class.base::RefCounted.1253" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1254" = type { %class.scoped_refptr.1255 }
%class.scoped_refptr.1255 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1256", %class.scoped_refptr.1258 }
%"class.WTF::RefCounted.1256" = type { %"class.base::RefCounted.1257" }
%"class.base::RefCounted.1257" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1258 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1471", %"class.blink::StyleVariables", %class.scoped_refptr.1258 }
%"class.WTF::RefCounted.1471" = type { %"class.base::RefCounted.1472" }
%"class.base::RefCounted.1472" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1259" = type { %"class.base::RefCounted.1260" }
%"class.base::RefCounted.1260" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1261" = type { %"class.std::__1::__compressed_pair.1262" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.1263" }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1264" }
%"class.std::__1::unique_ptr.1264" = type { %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1266" = type { %"class.WTF::Vector.1267"* }
%"class.WTF::Vector.1267" = type { %"class.WTF::VectorBuffer.2602" }
%"class.WTF::VectorBuffer.2602" = type { %"class.WTF::VectorBufferBase.2603", [32 x i8] }
%"class.WTF::VectorBufferBase.2603" = type { %class.scoped_refptr.831*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1275" }
%"class.std::__1::unique_ptr.1275" = type { %"class.std::__1::__compressed_pair.1276" }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1278", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1284", %"class.std::__1::unique_ptr.1407", i8, %"class.absl::optional.1413", %class.scoped_refptr.1389, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1418" }
%"class.std::__1::unique_ptr.1278" = type { %"class.std::__1::__compressed_pair.1279" }
%"class.std::__1::__compressed_pair.1279" = type { %"struct.std::__1::__compressed_pair_elem.1280" }
%"struct.std::__1::__compressed_pair_elem.1280" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1284" = type { %"class.std::__1::__compressed_pair.1285" }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1287, %class.scoped_refptr.1287, %class.scoped_refptr.1287, %class.scoped_refptr.1287, %class.scoped_refptr.1287, %class.scoped_refptr.1287, %class.scoped_refptr.1322, %class.scoped_refptr.1338, %class.scoped_refptr.1339, %class.scoped_refptr.1339, %class.scoped_refptr.1339, %class.scoped_refptr.1339, %class.scoped_refptr.1339, %class.scoped_refptr.1339, %class.scoped_refptr.1379, %class.scoped_refptr.1380, %class.scoped_refptr.1380, %class.scoped_refptr.1380, %class.scoped_refptr.1380, %class.scoped_refptr.1380, %class.scoped_refptr.1380, %class.scoped_refptr.1380, %class.scoped_refptr.1380, %class.scoped_refptr.1403 }
%class.scoped_refptr.1287 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1304" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1288", i8, i8, %class.scoped_refptr.1290, i32, i32 }
%"class.WTF::RefCounted.1288" = type { %"class.base::RefCounted.1289" }
%"class.base::RefCounted.1289" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1290 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1297, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1298", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1291" }
%"class.std::__1::unique_ptr.1291" = type { %"class.std::__1::__compressed_pair.1292" }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1297 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1323", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1323" = type { %"class.WTF::RefCounted.1324", i8, i8, %class.scoped_refptr.1297, i32, i32 }
%"class.WTF::RefCounted.1324" = type { %"class.base::RefCounted.1325" }
%"class.base::RefCounted.1325" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1326" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1326" = type { %"class.absl::optional_internal::optional_data.1327" }
%"class.absl::optional_internal::optional_data.1327" = type { %"class.absl::optional_internal::optional_data_base.1328" }
%"class.absl::optional_internal::optional_data_base.1328" = type { %"class.absl::optional_internal::optional_data_dtor_base.1329" }
%"class.absl::optional_internal::optional_data_dtor_base.1329" = type { i8, %union.anon.1330 }
%union.anon.1330 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1331", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1331" = type { %"class.std::__1::__vector_base.1332" }
%"class.std::__1::__vector_base.1332" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1333" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1298" = type { %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1304" = type { %"class.std::__1::__compressed_pair.1305" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1307", %"class.std::__1::unique_ptr.1313", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1307" = type { %"class.std::__1::__compressed_pair.1308" }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1313" = type { %"class.std::__1::__compressed_pair.1314" }
%"class.std::__1::__compressed_pair.1314" = type { %"struct.std::__1::__compressed_pair_elem.1315" }
%"struct.std::__1::__compressed_pair_elem.1315" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1322 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1338 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1339 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1340" }
%"class.blink::PaintPropertyNode.1340" = type { %"class.WTF::RefCounted.1341", i8, i8, %class.scoped_refptr.1343, i32, i32 }
%"class.WTF::RefCounted.1341" = type { %"class.base::RefCounted.1342" }
%"class.base::RefCounted.1342" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1343 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1290, %class.scoped_refptr.1344, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1366", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1344 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1381" }
%"class.blink::PaintPropertyNode.1381" = type { %"class.WTF::RefCounted.1382", i8, i8, %class.scoped_refptr.1344, i32, i32 }
%"class.WTF::RefCounted.1382" = type { %"class.base::RefCounted.1383" }
%"class.base::RefCounted.1383" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1345" }
%"class.std::__1::vector.1345" = type { %"class.std::__1::__vector_base.1346" }
%"class.std::__1::__vector_base.1346" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1361" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1347, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1354", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1347 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1348, i32, %"class.absl::optional.1349", i8, i32 }
%class.sk_sp.1348 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1349" = type { %"class.absl::optional_internal::optional_data.1350" }
%"class.absl::optional_internal::optional_data.1350" = type { %"class.absl::optional_internal::optional_data_base.1351" }
%"class.absl::optional_internal::optional_data_base.1351" = type { %"class.absl::optional_internal::optional_data_dtor_base.1352" }
%"class.absl::optional_internal::optional_data_dtor_base.1352" = type { i8, %union.anon.1353 }
%union.anon.1353 = type { %struct.SkRect }
%"class.std::__1::vector.1354" = type { %"class.std::__1::__vector_base.1355" }
%"class.std::__1::__vector_base.1355" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1356" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1356" = type { %"struct.std::__1::__compressed_pair_elem.1357" }
%"struct.std::__1::__compressed_pair_elem.1357" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1361" = type { %"struct.std::__1::__compressed_pair_elem.1362" }
%"struct.std::__1::__compressed_pair_elem.1362" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1366" = type { %"class.std::__1::__compressed_pair.1367" }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1368" }
%"struct.std::__1::__compressed_pair_elem.1368" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1372" }
%"class.std::__1::vector.1372" = type { %"class.std::__1::__vector_base.1373" }
%"class.std::__1::__vector_base.1373" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1374" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.1375" }
%"struct.std::__1::__compressed_pair_elem.1375" = type { i32* }
%class.scoped_refptr.1379 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1380 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1392" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1290, %"class.absl::optional.1384", %class.scoped_refptr.1389, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1384" = type { %"class.absl::optional_internal::optional_data.1385" }
%"class.absl::optional_internal::optional_data.1385" = type { %"class.absl::optional_internal::optional_data_base.1386" }
%"class.absl::optional_internal::optional_data_base.1386" = type { %"class.absl::optional_internal::optional_data_dtor_base.1387" }
%"class.absl::optional_internal::optional_data_dtor_base.1387" = type { i8, [3 x i8], %union.anon.1388 }
%union.anon.1388 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1392" = type { %"class.std::__1::__compressed_pair.1393" }
%"class.std::__1::__compressed_pair.1393" = type { %"struct.std::__1::__compressed_pair_elem.1394" }
%"struct.std::__1::__compressed_pair_elem.1394" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1395", i32, [4 x i8] }>
%"class.WTF::Vector.1395" = type { %"class.WTF::VectorBuffer.1396" }
%"class.WTF::VectorBuffer.1396" = type { %"class.WTF::VectorBufferBase.1397" }
%"class.WTF::VectorBufferBase.1397" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1403 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1407" = type { %"class.std::__1::__compressed_pair.1408" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.1409" }
%"struct.std::__1::__compressed_pair_elem.1409" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1290, %class.scoped_refptr.1344, %class.scoped_refptr.1343 }
%"class.absl::optional.1413" = type { %"class.absl::optional_internal::optional_data.1414" }
%"class.absl::optional_internal::optional_data.1414" = type { %"class.absl::optional_internal::optional_data_base.1415" }
%"class.absl::optional_internal::optional_data_base.1415" = type { %"class.absl::optional_internal::optional_data_dtor_base.1416" }
%"class.absl::optional_internal::optional_data_dtor_base.1416" = type { i8, %union.anon.1417 }
%union.anon.1417 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1389 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1390", [4 x i8] }
%"class.WTF::RefCounted.1390" = type { %"class.base::RefCounted.1391" }
%"class.base::RefCounted.1391" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1418" = type { %"class.std::__1::__compressed_pair.1419" }
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.1420" }
%"struct.std::__1::__compressed_pair_elem.1420" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1427 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1428" = type { %"class.WTF::VectorBuffer.1429" }
%"class.WTF::VectorBuffer.1429" = type { %"class.WTF::VectorBufferBase.1430", [8 x i8] }
%"class.WTF::VectorBufferBase.1430" = type { %class.scoped_refptr.1427*, i32, i32 }
%"class.std::__1::unique_ptr.1433" = type { %"class.std::__1::__compressed_pair.1434" }
%"class.std::__1::__compressed_pair.1434" = type { %"struct.std::__1::__compressed_pair_elem.1435" }
%"struct.std::__1::__compressed_pair_elem.1435" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1436", %"class.absl::optional.1441", %"class.absl::optional.1446" }
%"class.absl::optional.1436" = type { %"class.absl::optional_internal::optional_data.1437" }
%"class.absl::optional_internal::optional_data.1437" = type { %"class.absl::optional_internal::optional_data_base.1438" }
%"class.absl::optional_internal::optional_data_base.1438" = type { %"class.absl::optional_internal::optional_data_dtor_base.1439" }
%"class.absl::optional_internal::optional_data_dtor_base.1439" = type { i8, %union.anon.1440 }
%union.anon.1440 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1441" = type { %"class.absl::optional_internal::optional_data.1442" }
%"class.absl::optional_internal::optional_data.1442" = type { %"class.absl::optional_internal::optional_data_base.1443" }
%"class.absl::optional_internal::optional_data_base.1443" = type { %"class.absl::optional_internal::optional_data_dtor_base.1444" }
%"class.absl::optional_internal::optional_data_dtor_base.1444" = type { i8, [3 x i8], %union.anon.1445 }
%union.anon.1445 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1446" = type { %"class.absl::optional_internal::optional_data.1447" }
%"class.absl::optional_internal::optional_data.1447" = type { %"class.absl::optional_internal::optional_data_base.1448" }
%"class.absl::optional_internal::optional_data_base.1448" = type { %"class.absl::optional_internal::optional_data_dtor_base.1449" }
%"class.absl::optional_internal::optional_data_dtor_base.1449" = type { i8, %union.anon.1450 }
%union.anon.1450 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1454 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.1455" = type { %"class.blink::PersistentBase.1456" }
%"class.blink::PersistentBase.1456" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1459", %"struct.blink::PhysicalRect", %"class.blink::Member.1469" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.1459" = type { %"class.std::__1::__compressed_pair.1460" }
%"class.std::__1::__compressed_pair.1460" = type { %"struct.std::__1::__compressed_pair_elem.1461" }
%"struct.std::__1::__compressed_pair_elem.1461" = type { %"class.WTF::HashSet.1462"* }
%"class.WTF::HashSet.1462" = type { %"class.WTF::HashTable.1463" }
%"class.WTF::HashTable.1463" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.1475", %"class.WTF::String"* }
%"class.blink::HeapVector.1475" = type { %"class.WTF::Vector.1478" }
%"class.WTF::Vector.1478" = type { %"class.WTF::VectorBuffer.1479" }
%"class.WTF::VectorBuffer.1479" = type { %"class.WTF::VectorBufferBase.1480" }
%"class.WTF::VectorBufferBase.1480" = type { %"class.blink::Member"*, i32, i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2458, i32, i8, i8, [2 x i8] }>
%union.anon.2458 = type { %"class.WTF::Vector.2459" }
%"class.WTF::Vector.2459" = type { %"class.WTF::VectorBuffer.2460" }
%"class.WTF::VectorBuffer.2460" = type { %"class.WTF::VectorBufferBase.2461", [16 x i8] }
%"class.WTF::VectorBufferBase.2461" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ParkableString" = type { %class.scoped_refptr.2469 }
%class.scoped_refptr.2469 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2470", %"class.WTF::String", %"class.std::__1::unique_ptr.2472" }
%"class.WTF::RefCounted.2470" = type { %"class.base::RefCounted.2471" }
%"class.base::RefCounted.2471" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2472" = type { %"class.std::__1::__compressed_pair.2473" }
%"class.std::__1::__compressed_pair.2473" = type { %"struct.std::__1::__compressed_pair_elem.2474" }
%"struct.std::__1::__compressed_pair_elem.2474" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2475", %"class.std::__1::unique_ptr.2485", %"class.WTF::Vector.2491", i8, i32 }
%"class.std::__1::unique_ptr.2475" = type { %"class.std::__1::__compressed_pair.2476" }
%"class.std::__1::__compressed_pair.2476" = type { %"struct.std::__1::__compressed_pair_elem.2477" }
%"struct.std::__1::__compressed_pair_elem.2477" = type { %"class.WTF::Vector.2478"* }
%"class.WTF::Vector.2478" = type { %"class.WTF::VectorBuffer.2479" }
%"class.WTF::VectorBuffer.2479" = type { %"class.WTF::VectorBufferBase.2461" }
%"class.std::__1::unique_ptr.2485" = type { %"class.std::__1::__compressed_pair.2486" }
%"class.std::__1::__compressed_pair.2486" = type { %"struct.std::__1::__compressed_pair_elem.2487" }
%"struct.std::__1::__compressed_pair_elem.2487" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2491" = type { %"class.WTF::VectorBuffer.2492" }
%"class.WTF::VectorBuffer.2492" = type { %"class.WTF::VectorBufferBase.2461", [32 x i8] }
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2610", %"class.blink::Member.2612", %"class.blink::Member.2614", %"class.blink::Member.2633", %"class.blink::Member.2635" }
%"class.blink::Member.2610" = type { %"class.blink::MemberBase.2611" }
%"class.blink::MemberBase.2611" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.831 }
%"class.blink::Member.2612" = type { %"class.blink::MemberBase.2613" }
%"class.blink::MemberBase.2613" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2614" = type { %"class.blink::MemberBase.2615" }
%"class.blink::MemberBase.2615" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2618", %"class.blink::HeapHashSet.2627" }
%"class.blink::HeapVector.2618" = type { %"class.WTF::Vector.2621" }
%"class.WTF::Vector.2621" = type { %"class.WTF::VectorBuffer.2622" }
%"class.WTF::VectorBuffer.2622" = type { %"class.WTF::VectorBufferBase.2623" }
%"class.WTF::VectorBufferBase.2623" = type { %"class.blink::Member.2624"*, i32, i32 }
%"class.blink::Member.2624" = type { %"class.blink::MemberBase.2625" }
%"class.blink::MemberBase.2625" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2627" = type { %"class.WTF::HashSet.2630" }
%"class.WTF::HashSet.2630" = type { %"class.WTF::HashTable.2631" }
%"class.WTF::HashTable.2631" = type <{ %"class.blink::Member.2624"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2633" = type { %"class.blink::MemberBase.2634" }
%"class.blink::MemberBase.2634" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2635" = type { %"class.blink::MemberBase.2636" }
%"class.blink::MemberBase.2636" = type { %"class.blink::HeapHashSet.2637"* }
%"class.blink::HeapHashSet.2637" = type opaque
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::TextEncoding", %"class.blink::HeapVector.1482", i8, [7 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapVector.1482" = type { %"class.WTF::Vector.1485" }
%"class.WTF::Vector.1485" = type { %"class.WTF::VectorBuffer.1486" }
%"class.WTF::VectorBuffer.1486" = type { %"class.WTF::VectorBufferBase.1487" }
%"class.WTF::VectorBufferBase.1487" = type { %"class.blink::Member.1488"*, i32, i32 }
%"class.blink::Member.1488" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.2664" }
%"class.WTF::Vector.2664" = type { %"class.WTF::VectorBuffer.2665" }
%"class.WTF::VectorBuffer.2665" = type { %"class.WTF::VectorBufferBase.2666", [64 x i8] }
%"class.WTF::VectorBufferBase.2666" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::FocusOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1665", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1673", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1687", %"class.blink::FrameLoader", %"class.blink::Member.1708", %"class.blink::Member.42", %"class.blink::Member.1710", %"class.blink::Member.1712", %"class.blink::Member.1728", %"class.blink::Member.1730", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1732", %class.scoped_refptr.1952, %"class.blink::Member.1953", %"class.blink::Member.1955", %"class.blink::Member.1957", %"class.blink::Member.1959", %"class.blink::Member.1961", %"class.blink::Member.1965", %"class.blink::Member.1967", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1971", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1977", %"class.std::__1::unique_ptr.1978", %"class.absl::optional.1653", i32, [4 x i8], %"class.std::__1::unique_ptr.1984", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1992", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1997", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2002", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2005", %"class.blink::Member.2007", %"class.blink::Member.2009", %"class.blink::Member.2011", %"class.mojo::StructPtr.2014", %"class.blink::Member.2023", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2025", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1496", %"class.blink::Member.1498", %"class.blink::Member.1500", i8, i32, i8, i32, %"class.blink::Member.1633", %"class.blink::Member.1523", %"class.blink::FrameLifecycle", %"class.blink::Member.1494", %"class.blink::Member.1494", %"class.blink::Member.1494", %"class.blink::Member.1494", %"class.blink::Member.1494", %"class.blink::Member.1494", %"class.blink::Member.1635", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1646", i8, %"class.base::UnguessableToken", %"class.absl::optional.1648", %"class.absl::optional.1653", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1494", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2333", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.1494", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2347", %"class.blink::Member.2351", %"class.blink::Member.2353", %"class.blink::Member.2357", %"class.blink::Member.2359", %"class.blink::Member.2361", %"class.blink::Member.2363", %"class.blink::Member.2365", %"class.blink::HeapObserverSet.2367", %"class.blink::Member.2375", %"class.blink::Member.2377", %"class.blink::Member.2379", %"class.blink::Member.2381", %"class.blink::Member.2383", %"class.blink::Member.2385", %"class.blink::Member.2387", %"class.blink::Member.2389", %"class.blink::Member.2391", %"class.blink::Member.2393", %"class.blink::Member.2395", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2420", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2427", %"class.blink::Member.1496", %"class.blink::Member.1496", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2435", %"class.std::__1::unique_ptr.2441", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2333" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2334" }
%"class.blink::HeapHashMap.2334" = type { %"class.WTF::HashMap.2337" }
%"class.WTF::HashMap.2337" = type { %"class.WTF::HashTable.2338" }
%"class.WTF::HashTable.2338" = type <{ %"struct.WTF::KeyValuePair.2340"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2340" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2341" }
%"class.std::__1::unique_ptr.2341" = type { %"class.std::__1::__compressed_pair.2342" }
%"class.std::__1::__compressed_pair.2342" = type { %"struct.std::__1::__compressed_pair_elem.2343" }
%"struct.std::__1::__compressed_pair_elem.2343" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2347" = type { %"class.blink::MemberBase.2348" }
%"class.blink::MemberBase.2348" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.1496", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2351" = type { %"class.blink::MemberBase.2352" }
%"class.blink::MemberBase.2352" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2353" = type { %"class.blink::MemberBase.2354" }
%"class.blink::MemberBase.2354" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.586", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.2357" = type { %"class.blink::MemberBase.2358" }
%"class.blink::MemberBase.2358" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2359" = type { %"class.blink::MemberBase.2360" }
%"class.blink::MemberBase.2360" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2361" = type { %"class.blink::MemberBase.2362" }
%"class.blink::MemberBase.2362" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2363" = type { %"class.blink::MemberBase.2364" }
%"class.blink::MemberBase.2364" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2365" = type { %"class.blink::MemberBase.2366" }
%"class.blink::MemberBase.2366" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2367" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2368" }
%"class.blink::HeapHashSet.2368" = type { %"class.WTF::HashSet.2371" }
%"class.WTF::HashSet.2371" = type { %"class.WTF::HashTable.2372" }
%"class.WTF::HashTable.2372" = type <{ %"class.blink::WeakMember.2374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2374" = type opaque
%"class.blink::Member.2375" = type { %"class.blink::MemberBase.2376" }
%"class.blink::MemberBase.2376" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2377" = type { %"class.blink::MemberBase.2378" }
%"class.blink::MemberBase.2378" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2379" = type { %"class.blink::MemberBase.2380" }
%"class.blink::MemberBase.2380" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2381" = type { %"class.blink::MemberBase.2382" }
%"class.blink::MemberBase.2382" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2383" = type { %"class.blink::MemberBase.2384" }
%"class.blink::MemberBase.2384" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2385" = type { %"class.blink::MemberBase.2386" }
%"class.blink::MemberBase.2386" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2387" = type { %"class.blink::MemberBase.2388" }
%"class.blink::MemberBase.2388" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2389" = type { %"class.blink::MemberBase.2390" }
%"class.blink::MemberBase.2390" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2391" = type { %"class.blink::MemberBase.2392" }
%"class.blink::MemberBase.2392" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2393" = type { %"class.blink::MemberBase.2394" }
%"class.blink::MemberBase.2394" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2395" = type { %"class.blink::MemberBase.2396" }
%"class.blink::MemberBase.2396" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2397" }
%"class.WTF::Deque.2397" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2400" }
%"class.WTF::VectorBuffer.2400" = type { %"class.WTF::VectorBufferBase.2401" }
%"class.WTF::VectorBufferBase.2401" = type { %"class.std::__1::unique_ptr.2402"*, i32, i32 }
%"class.std::__1::unique_ptr.2402" = type { %"class.std::__1::__compressed_pair.2403" }
%"class.std::__1::__compressed_pair.2403" = type { %"struct.std::__1::__compressed_pair_elem.2404" }
%"struct.std::__1::__compressed_pair_elem.2404" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2408", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2408" = type { %"class.std::__1::__bitset.2409" }
%"class.std::__1::__bitset.2409" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2410" }
%"class.absl::optional.2410" = type { %"class.absl::optional_internal::optional_data.2411" }
%"class.absl::optional_internal::optional_data.2411" = type { %"class.absl::optional_internal::optional_data_base.2412" }
%"class.absl::optional_internal::optional_data_base.2412" = type { %"class.absl::optional_internal::optional_data_dtor_base.2413" }
%"class.absl::optional_internal::optional_data_dtor_base.2413" = type { i8, %union.anon.2414 }
%union.anon.2414 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2415", i64, %"class.absl::optional.748", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2415" = type { %"class.absl::optional_internal::optional_data.2416" }
%"class.absl::optional_internal::optional_data.2416" = type { %"class.absl::optional_internal::optional_data_base.2417" }
%"class.absl::optional_internal::optional_data_base.2417" = type { %"class.absl::optional_internal::optional_data_dtor_base.2418" }
%"class.absl::optional_internal::optional_data_dtor_base.2418" = type { i8, %union.anon.2419 }
%union.anon.2419 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2420" = type { %"class.std::__1::unique_ptr.2421" }
%"class.std::__1::unique_ptr.2421" = type { %"class.std::__1::__compressed_pair.2422" }
%"class.std::__1::__compressed_pair.2422" = type { %"struct.std::__1::__compressed_pair_elem.2423" }
%"struct.std::__1::__compressed_pair_elem.2423" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2427" = type { %"class.WTF::HashSet.2430" }
%"class.WTF::HashSet.2430" = type { %"class.WTF::HashTable.2431" }
%"class.WTF::HashTable.2431" = type <{ %"class.blink::WeakMember.2433"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2433" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2434" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2434" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2435" = type { %"class.std::__1::__compressed_pair.2436" }
%"class.std::__1::__compressed_pair.2436" = type { %"struct.std::__1::__compressed_pair_elem.2437" }
%"struct.std::__1::__compressed_pair_elem.2437" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2441" = type { %"class.std::__1::__compressed_pair.2442" }
%"class.std::__1::__compressed_pair.2442" = type { %"struct.std::__1::__compressed_pair_elem.2443" }
%"struct.std::__1::__compressed_pair_elem.2443" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1494", %"class.blink::Member.1523", %"class.blink::Member.1525", %"class.blink::Member.1527", i8, %"class.WTF::Vector.1529" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1516" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1504" }
%"class.blink::HeapVector.1504" = type { %"class.WTF::Vector.1507" }
%"class.WTF::Vector.1507" = type { %"class.WTF::VectorBuffer.1508" }
%"class.WTF::VectorBuffer.1508" = type { %"class.WTF::VectorBufferBase.1509", [32 x i8] }
%"class.WTF::VectorBufferBase.1509" = type { %"struct.std::__1::pair.1510"*, i32, i32 }
%"struct.std::__1::pair.1510" = type { %"class.WTF::AtomicString", %"class.blink::Member.1511" }
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::HeapVector.1513"* }
%"class.blink::HeapVector.1513" = type opaque
%"class.std::__1::unique_ptr.1516" = type { %"class.std::__1::__compressed_pair.1517" }
%"class.std::__1::__compressed_pair.1517" = type { %"struct.std::__1::__compressed_pair_elem.1518" }
%"struct.std::__1::__compressed_pair_elem.1518" = type { %"class.WTF::Vector.1519"* }
%"class.WTF::Vector.1519" = type opaque
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1529" = type { %"class.WTF::VectorBuffer.1530" }
%"class.WTF::VectorBuffer.1530" = type { %"class.WTF::VectorBufferBase.1531" }
%"class.WTF::VectorBufferBase.1531" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1625" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1532, %"class.std::__1::unique_ptr.744", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.758, i32 }>
%class.scoped_refptr.1532 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.758, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1591", %"class.absl::optional.1596", %"class.absl::optional.1549", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1616", i8, [7 x i8], %class.scoped_refptr.758, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.771" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.758, %"class.std::__1::unique_ptr.1533", %"class.absl::optional.1543", %"struct.std::__1::atomic.337", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1549", %"class.std::__1::unique_ptr.1554", i8, i64, %class.scoped_refptr.1588, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1589", %"class.base::WeakPtrFactory.1590" }
%"class.std::__1::unique_ptr.1533" = type { %"class.std::__1::__compressed_pair.1534" }
%"class.std::__1::__compressed_pair.1534" = type { %"struct.std::__1::__compressed_pair_elem.1535" }
%"struct.std::__1::__compressed_pair_elem.1535" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.758, i8, %"class.mojo::ScopedHandleBase.1536", %class.scoped_refptr.1537, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1538", i8*, %"class.base::WeakPtrFactory.1539" }
%"class.mojo::ScopedHandleBase.1536" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1537 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1538" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1539" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1543" = type { %"class.absl::optional_internal::optional_data.1544" }
%"class.absl::optional_internal::optional_data.1544" = type { %"class.absl::optional_internal::optional_data_base.1545" }
%"class.absl::optional_internal::optional_data_base.1545" = type { %"class.absl::optional_internal::optional_data_dtor_base.1546" }
%"class.absl::optional_internal::optional_data_dtor_base.1546" = type { i8, %union.anon.1547 }
%union.anon.1547 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1548", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1548" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1554" = type { %"class.std::__1::__compressed_pair.1555" }
%"class.std::__1::__compressed_pair.1555" = type { %"struct.std::__1::__compressed_pair_elem.1556" }
%"struct.std::__1::__compressed_pair_elem.1556" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1557", i8, i64, %class.scoped_refptr.1558, %class.scoped_refptr.1583 }
%"class.base::RepeatingCallback.1557" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1558 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1559", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1561", %"class.std::__1::map.1572", i8, [7 x i8] }>
%"class.base::RefCounted.1559" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1560 }
%class.scoped_refptr.1560 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1561" = type { %"class.std::__1::__tree.1562" }
%"class.std::__1::__tree.1562" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1563", %"class.std::__1::__compressed_pair.1567" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"class.std::__1::__compressed_pair.1567" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::map.1572" = type { %"class.std::__1::__tree.1573" }
%"class.std::__1::__tree.1573" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1574", %"class.std::__1::__compressed_pair.1578" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"class.std::__1::__compressed_pair.1578" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%class.scoped_refptr.1583 = type { %"class.base::RefCountedData.1584"* }
%"class.base::RefCountedData.1584" = type opaque
%class.scoped_refptr.1588 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1589" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1590" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1591" = type { %"class.absl::optional_internal::optional_data.1592" }
%"class.absl::optional_internal::optional_data.1592" = type { %"class.absl::optional_internal::optional_data_base.1593" }
%"class.absl::optional_internal::optional_data_base.1593" = type { %"class.absl::optional_internal::optional_data_dtor_base.1594" }
%"class.absl::optional_internal::optional_data_dtor_base.1594" = type { i8, %union.anon.1595 }
%union.anon.1595 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1596" = type { %"class.absl::optional_internal::optional_data.1597" }
%"class.absl::optional_internal::optional_data.1597" = type { %"class.absl::optional_internal::optional_data_base.1598" }
%"class.absl::optional_internal::optional_data_base.1598" = type { %"class.absl::optional_internal::optional_data_dtor_base.1599" }
%"class.absl::optional_internal::optional_data_dtor_base.1599" = type { i8, [7 x i8], %union.anon.1600 }
%union.anon.1600 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1549" = type { %"class.absl::optional_internal::optional_data.1550" }
%"class.absl::optional_internal::optional_data.1550" = type { %"class.absl::optional_internal::optional_data_base.1551" }
%"class.absl::optional_internal::optional_data_base.1551" = type { %"class.absl::optional_internal::optional_data_dtor_base.1552" }
%"class.absl::optional_internal::optional_data_dtor_base.1552" = type { i8, %union.anon.1553 }
%union.anon.1553 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1601 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1601 = type { %"class.std::__1::map.1604" }
%"class.std::__1::map.1604" = type { %"class.std::__1::__tree.1605" }
%"class.std::__1::__tree.1605" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1606", %"class.std::__1::__compressed_pair.1610" }
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"class.std::__1::__compressed_pair.1610" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1615"*, i64 }
%"class.std::__1::unique_ptr.1615" = type opaque
%"class.std::__1::map.1616" = type { %"class.std::__1::__tree.1617" }
%"class.std::__1::__tree.1617" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1618", %"class.std::__1::__compressed_pair.1622" }
%"class.std::__1::__compressed_pair.1618" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"class.std::__1::__compressed_pair.1622" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1625" = type { %"class.std::__1::__compressed_pair.1626" }
%"class.std::__1::__compressed_pair.1626" = type { %"struct.std::__1::__compressed_pair_elem.1627" }
%"struct.std::__1::__compressed_pair_elem.1627" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1633" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::Frame"* }
%"class.blink::Member.1635" = type { %"class.blink::MemberBase.1636" }
%"class.blink::MemberBase.1636" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1494", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1637" }
%"class.base::internal::flat_tree.1637" = type { %"class.std::__1::vector.1638" }
%"class.std::__1::vector.1638" = type { %"class.std::__1::__vector_base.1639" }
%"class.std::__1::__vector_base.1639" = type { %"struct.std::__1::pair.1640"*, %"struct.std::__1::pair.1640"*, %"class.std::__1::__compressed_pair.1641" }
%"struct.std::__1::pair.1640" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1641" = type { %"struct.std::__1::__compressed_pair_elem.1642" }
%"struct.std::__1::__compressed_pair_elem.1642" = type { %"struct.std::__1::pair.1640"* }
%"class.blink::Member.1646" = type { %"class.blink::MemberBase.1647" }
%"class.blink::MemberBase.1647" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1648" = type { %"class.absl::optional_internal::optional_data.1649" }
%"class.absl::optional_internal::optional_data.1649" = type { %"class.absl::optional_internal::optional_data_base.1650" }
%"class.absl::optional_internal::optional_data_base.1650" = type { %"class.absl::optional_internal::optional_data_dtor_base.1651" }
%"class.absl::optional_internal::optional_data_dtor_base.1651" = type { i8, %union.anon.1652 }
%union.anon.1652 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1658" }
%"class.blink::HeapHashSet.1658" = type { %"class.WTF::HashSet.1661" }
%"class.WTF::HashSet.1661" = type { %"class.WTF::HashTable.1662" }
%"class.WTF::HashTable.1662" = type <{ %"class.blink::WeakMember.1664"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1664" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1665" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1666" }
%"class.blink::HeapHashMap.1666" = type { %"class.WTF::HashMap.1669" }
%"class.WTF::HashMap.1669" = type { %"class.WTF::HashTable.1670" }
%"class.WTF::HashTable.1670" = type <{ %"struct.WTF::KeyValuePair.1672"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1672" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1673" = type { %"class.std::__1::__compressed_pair.1674" }
%"class.std::__1::__compressed_pair.1674" = type { %"struct.std::__1::__compressed_pair_elem.1675" }
%"struct.std::__1::__compressed_pair_elem.1675" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1676", %"class.base::WeakPtrFactory.1681" }
%"class.WTF::HashMap.1676" = type { %"class.WTF::HashTable.1677" }
%"class.WTF::HashTable.1677" = type <{ %"struct.WTF::KeyValuePair.1680"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1680" = type opaque
%"class.base::WeakPtrFactory.1681" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1685" }
%"class.blink::Member.1685" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2521" }
%"class.blink::WeakMember.2521" = type { %"class.blink::MemberBase.2522" }
%"class.blink::MemberBase.2522" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2523", i64, %"class.std::__1::map.2524", i8*, i64, %"class.base::WeakPtrFactory.2533" }
%"class.base::RepeatingCallback.2523" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2524" = type { %"class.std::__1::__tree.2525" }
%"class.std::__1::__tree.2525" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2526", %"class.std::__1::__compressed_pair.2530" }
%"class.std::__1::__compressed_pair.2526" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"class.std::__1::__compressed_pair.2530" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.base::WeakPtrFactory.2533" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1687" = type { %"class.WTF::HashSet.1690" }
%"class.WTF::HashSet.1690" = type { %"class.WTF::HashTable.1691" }
%"class.WTF::HashTable.1691" = type <{ %"class.blink::WeakMember.1693"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1693" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1635", %"class.blink::Member.1694", %"class.blink::Member.1696", %"class.std::__1::unique_ptr.1698", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1704" }
%"class.blink::Member.1694" = type { %"class.blink::MemberBase.1695" }
%"class.blink::MemberBase.1695" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1696" = type { %"class.blink::MemberBase.1697" }
%"class.blink::MemberBase.1697" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1698" = type { %"class.std::__1::__compressed_pair.1699" }
%"class.std::__1::__compressed_pair.1699" = type { %"struct.std::__1::__compressed_pair_elem.1700" }
%"struct.std::__1::__compressed_pair_elem.1700" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.1704" = type { %"class.WTF::HashTable.1705" }
%"class.WTF::HashTable.1705" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2104", %"class.blink::Member.1635", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2109", i8, i32, %"class.blink::Color", %"class.absl::optional.2111", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2116", %"class.blink::Member.2118", %"class.blink::Member.2118", %"class.std::__1::unique_ptr.2121", i32, [4 x i8], %"class.WTF::HashSet.2124", %"class.blink::Member.2131", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2133", %"class.blink::HeapHashSet.2140", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2148", i8, %"class.blink::Member.2154", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2166", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2180", i8, %"class.std::__1::unique_ptr.2186", %"class.std::__1::unique_ptr.2267", %"class.WTF::Vector.2273", i32, %class.scoped_refptr.2278, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2279", %"class.blink::Member.2281", %"class.blink::Member.2283", %"class.blink::HeapHashSet.2285", %"class.blink::HeapHashSet.2292", %"class.std::__1::unique_ptr.2299", %"class.std::__1::unique_ptr.2306", %"class.WTF::Vector.108" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.2104" = type { %"class.WTF::HashTable.2105" }
%"class.WTF::HashTable.2105" = type <{ %class.scoped_refptr.2108*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2108 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2109" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2110", { i64, i64 } }
%"class.blink::WeakMember.2110" = type { %"class.blink::MemberBase.1709" }
%"class.absl::optional.2111" = type { %"class.absl::optional_internal::optional_data.2112" }
%"class.absl::optional_internal::optional_data.2112" = type { %"class.absl::optional_internal::optional_data_base.2113" }
%"class.absl::optional_internal::optional_data_base.2113" = type { %"class.absl::optional_internal::optional_data_dtor_base.2114" }
%"class.absl::optional_internal::optional_data_dtor_base.2114" = type { i8, %union.anon.2115 }
%union.anon.2115 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2116" = type { %"class.blink::MemberBase.2117" }
%"class.blink::MemberBase.2117" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2118" = type { %"class.blink::MemberBase.2119" }
%"class.blink::MemberBase.2119" = type { %"class.blink::HeapHashSet.2120"* }
%"class.blink::HeapHashSet.2120" = type opaque
%"class.std::__1::unique_ptr.2121" = type { %"class.std::__1::__compressed_pair.2122" }
%"class.std::__1::__compressed_pair.2122" = type { %"struct.std::__1::__compressed_pair_elem.2123" }
%"struct.std::__1::__compressed_pair_elem.2123" = type { %"class.WTF::HashSet.2124"* }
%"class.WTF::HashSet.2124" = type { %"class.WTF::HashTable.2125" }
%"class.WTF::HashTable.2125" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2131" = type { %"class.blink::MemberBase.2132" }
%"class.blink::MemberBase.2132" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2133" = type { %"class.WTF::HashSet.2136" }
%"class.WTF::HashSet.2136" = type { %"class.WTF::HashTable.2137" }
%"class.WTF::HashTable.2137" = type <{ %"class.blink::Member.2139"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2139" = type opaque
%"class.blink::HeapHashSet.2140" = type { %"class.WTF::HashSet.2143" }
%"class.WTF::HashSet.2143" = type { %"class.WTF::HashTable.2144" }
%"class.WTF::HashTable.2144" = type <{ %"class.blink::Member.2146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2319", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2329", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.42" }
%"class.blink::Member.2319" = type { %"class.blink::MemberBase.2320" }
%"class.blink::MemberBase.2320" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2321", %"class.blink::Member.2323", %"class.blink::Member.2325", %"class.blink::Member.2327", %"class.WTF::Vector.108", i16, %class.scoped_refptr.343 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2321" = type { %"class.blink::MemberBase.2322" }
%"class.blink::MemberBase.2322" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2323" = type { %"class.blink::MemberBase.2324" }
%"class.blink::MemberBase.2324" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2325" = type { %"class.blink::MemberBase.2326" }
%"class.blink::MemberBase.2326" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2327" = type { %"class.blink::MemberBase.2328" }
%"class.blink::MemberBase.2328" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2329" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2330", { i64, i64 } }
%"class.blink::WeakMember.2330" = type { %"class.blink::MemberBase.2147" }
%"class.std::__1::unique_ptr.2148" = type { %"class.std::__1::__compressed_pair.2149" }
%"class.std::__1::__compressed_pair.2149" = type { %"struct.std::__1::__compressed_pair_elem.2150" }
%"struct.std::__1::__compressed_pair_elem.2150" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2154" = type { %"class.blink::MemberBase.2155" }
%"class.blink::MemberBase.2155" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2158", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2158" = type { %"class.WTF::HashTable.2159" }
%"class.WTF::HashTable.2159" = type <{ %"struct.WTF::KeyValuePair.2161"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2161" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2162", i32, i32 }
%"class.WTF::Vector.2162" = type { %"class.WTF::VectorBuffer.2163" }
%"class.WTF::VectorBuffer.2163" = type { %"class.WTF::VectorBufferBase.2164" }
%"class.WTF::VectorBufferBase.2164" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2166" = type { %"class.WTF::LinkedHashSet.2169" }
%"class.WTF::LinkedHashSet.2169" = type { %"class.WTF::HashMap.2170", %"class.WTF::VectorBackedLinkedList.2174" }
%"class.WTF::HashMap.2170" = type { %"class.WTF::HashTable.2171" }
%"class.WTF::HashTable.2171" = type <{ %"struct.WTF::KeyValuePair.2173"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2173" = type opaque
%"class.WTF::VectorBackedLinkedList.2174" = type { %"class.WTF::Vector.2175", i32, i32 }
%"class.WTF::Vector.2175" = type { %"class.WTF::VectorBuffer.2176" }
%"class.WTF::VectorBuffer.2176" = type { %"class.WTF::VectorBufferBase.2177" }
%"class.WTF::VectorBufferBase.2177" = type { %"class.WTF::VectorBackedLinkedListNode.2178"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2178" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2180" = type { %"class.std::__1::__compressed_pair.2181" }
%"class.std::__1::__compressed_pair.2181" = type { %"struct.std::__1::__compressed_pair_elem.2182" }
%"struct.std::__1::__compressed_pair_elem.2182" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2186" = type { %"class.std::__1::__compressed_pair.2187" }
%"class.std::__1::__compressed_pair.2187" = type { %"struct.std::__1::__compressed_pair_elem.2188" }
%"struct.std::__1::__compressed_pair_elem.2188" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2189, %class.scoped_refptr.2189, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2244", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2249", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2189 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2190", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2197" }
%"class.WTF::RefCounted.2190" = type { %"class.base::RefCounted.2191" }
%"class.base::RefCounted.2191" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2192", i32, [4 x i8] }>
%"class.WTF::Vector.2192" = type { %"class.WTF::VectorBuffer.2193" }
%"class.WTF::VectorBuffer.2193" = type { %"class.WTF::VectorBufferBase.2194" }
%"class.WTF::VectorBufferBase.2194" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2197" = type { %"class.WTF::VectorBuffer.2198" }
%"class.WTF::VectorBuffer.2198" = type { %"class.WTF::VectorBufferBase.2199" }
%"class.WTF::VectorBufferBase.2199" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2200", %"class.std::__1::unique_ptr.2216", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2200" = type { %"class.std::__1::__compressed_pair.2201" }
%"class.std::__1::__compressed_pair.2201" = type { %"struct.std::__1::__compressed_pair_elem.2202" }
%"struct.std::__1::__compressed_pair_elem.2202" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2203", %"class.WTF::Vector.2208", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2203" = type { %"class.WTF::VectorBuffer.2204" }
%"class.WTF::VectorBuffer.2204" = type { %"class.WTF::VectorBufferBase.2205" }
%"class.WTF::VectorBufferBase.2205" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2208" = type { %"class.WTF::VectorBuffer.2209" }
%"class.WTF::VectorBuffer.2209" = type { %"class.WTF::VectorBufferBase.2210" }
%"class.WTF::VectorBufferBase.2210" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2216" = type { %"class.std::__1::__compressed_pair.2217" }
%"class.std::__1::__compressed_pair.2217" = type { %"struct.std::__1::__compressed_pair_elem.2218" }
%"struct.std::__1::__compressed_pair_elem.2218" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2219", %"class.absl::optional.2219" }
%"class.absl::optional.2219" = type { %"class.absl::optional_internal::optional_data.2220" }
%"class.absl::optional_internal::optional_data.2220" = type { %"class.absl::optional_internal::optional_data_base.2221" }
%"class.absl::optional_internal::optional_data_base.2221" = type { %"class.absl::optional_internal::optional_data_dtor_base.2222" }
%"class.absl::optional_internal::optional_data_dtor_base.2222" = type { i8, [3 x i8], %union.anon.2223 }
%union.anon.2223 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2197"*, %"class.absl::optional.2229", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2229" = type { %"class.absl::optional_internal::optional_data.2230" }
%"class.absl::optional_internal::optional_data.2230" = type { %"class.absl::optional_internal::optional_data_base.2231" }
%"class.absl::optional_internal::optional_data_base.2231" = type { %"class.absl::optional_internal::optional_data_dtor_base.2232" }
%"class.absl::optional_internal::optional_data_dtor_base.2232" = type { i8, %union.anon.2233 }
%union.anon.2233 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2234", %"class.WTF::Vector.2239" }
%"class.WTF::Vector.2234" = type { %"class.WTF::VectorBuffer.2235" }
%"class.WTF::VectorBuffer.2235" = type { %"class.WTF::VectorBufferBase.2236", [128 x i8] }
%"class.WTF::VectorBufferBase.2236" = type { i32*, i32, i32 }
%"class.WTF::Vector.2239" = type { %"class.WTF::VectorBuffer.2240" }
%"class.WTF::VectorBuffer.2240" = type { %"class.WTF::VectorBufferBase.2241", [128 x i8] }
%"class.WTF::VectorBufferBase.2241" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2244" = type { %"class.WTF::VectorBuffer.2245" }
%"class.WTF::VectorBuffer.2245" = type { %"class.WTF::VectorBufferBase.2246" }
%"class.WTF::VectorBufferBase.2246" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2249" = type { %"class.WTF::HashTable.2250" }
%"class.WTF::HashTable.2250" = type <{ %"struct.WTF::KeyValuePair.2253"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2253" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2254", %"class.WTF::Vector.2259" }
%"class.WTF::HashMap.2254" = type { %"class.WTF::HashTable.2255" }
%"class.WTF::HashTable.2255" = type <{ %"struct.WTF::KeyValuePair.2258"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2258" = type opaque
%"class.WTF::Vector.2259" = type { %"class.WTF::VectorBuffer.2260" }
%"class.WTF::VectorBuffer.2260" = type { %"class.WTF::VectorBufferBase.2261" }
%"class.WTF::VectorBufferBase.2261" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2267" = type { %"class.std::__1::__compressed_pair.2268" }
%"class.std::__1::__compressed_pair.2268" = type { %"struct.std::__1::__compressed_pair_elem.2269" }
%"struct.std::__1::__compressed_pair_elem.2269" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2273" = type { %"class.WTF::VectorBuffer.2274" }
%"class.WTF::VectorBuffer.2274" = type { %"class.WTF::VectorBufferBase.2275" }
%"class.WTF::VectorBufferBase.2275" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2278 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2279" = type { %"class.blink::MemberBase.2280" }
%"class.blink::MemberBase.2280" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2281" = type { %"class.blink::MemberBase.2282" }
%"class.blink::MemberBase.2282" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2283" = type { %"class.blink::MemberBase.2284" }
%"class.blink::MemberBase.2284" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2285" = type { %"class.WTF::HashSet.2288" }
%"class.WTF::HashSet.2288" = type { %"class.WTF::HashTable.2289" }
%"class.WTF::HashTable.2289" = type <{ %"class.blink::WeakMember.2291"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2291" = type opaque
%"class.blink::HeapHashSet.2292" = type { %"class.WTF::HashSet.2295" }
%"class.WTF::HashSet.2295" = type { %"class.WTF::HashTable.2296" }
%"class.WTF::HashTable.2296" = type <{ %"class.blink::WeakMember.2298"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2298" = type opaque
%"class.std::__1::unique_ptr.2299" = type { %"class.std::__1::__compressed_pair.2300" }
%"class.std::__1::__compressed_pair.2300" = type { %"struct.std::__1::__compressed_pair_elem.2301" }
%"struct.std::__1::__compressed_pair_elem.2301" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2302" }
%"class.base::time_internal::TimeBase.2302" = type { i64 }
%"class.std::__1::unique_ptr.2306" = type { %"class.std::__1::__compressed_pair.2307" }
%"class.std::__1::__compressed_pair.2307" = type { %"struct.std::__1::__compressed_pair_elem.2308" }
%"struct.std::__1::__compressed_pair_elem.2308" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2309", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2309" = type { %"class.absl::optional_internal::optional_data.2310" }
%"class.absl::optional_internal::optional_data.2310" = type { %"class.absl::optional_internal::optional_data_base.2311" }
%"class.absl::optional_internal::optional_data_base.2311" = type { %"class.absl::optional_internal::optional_data_dtor_base.2312" }
%"class.absl::optional_internal::optional_data_dtor_base.2312" = type { i8, %union.anon.2313 }
%union.anon.2313 = type { %"class.base::Time" }
%"class.blink::Member.1710" = type { %"class.blink::MemberBase.1711" }
%"class.blink::MemberBase.1711" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1712" = type { %"class.blink::MemberBase.1713" }
%"class.blink::MemberBase.1713" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1635", %"class.blink::Member.1716", %"class.blink::Member.1718", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1720", %"class.blink::Member.1726" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.352" }
%"class.blink::Member.1716" = type { %"class.blink::MemberBase.1717" }
%"class.blink::MemberBase.1717" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.1718" = type { %"class.blink::MemberBase.1719" }
%"class.blink::MemberBase.1719" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.1720" = type { %"class.std::__1::__compressed_pair.1721" }
%"class.std::__1::__compressed_pair.1721" = type { %"struct.std::__1::__compressed_pair_elem.1722" }
%"struct.std::__1::__compressed_pair_elem.1722" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.1726" = type { %"class.blink::MemberBase.1727" }
%"class.blink::MemberBase.1727" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.1728" = type { %"class.blink::MemberBase.1729" }
%"class.blink::MemberBase.1729" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1730" = type { %"class.blink::MemberBase.1731" }
%"class.blink::MemberBase.1731" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1732" = type { %"class.blink::MemberBase.1733" }
%"class.blink::MemberBase.1733" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1743", %"class.blink::HeapListHashSet.1754", %"class.blink::HeapListHashSet.1765", %"class.blink::HeapListHashSet.1776", %"class.blink::HeapListHashSet.1787", %"class.blink::HeapListHashSet.1798", %"class.blink::HeapListHashSet.1809", %"class.blink::HeapListHashSet.1820", %"class.blink::HeapListHashSet.1831", %"class.blink::HeapListHashSet.1842", %"class.blink::HeapListHashSet.1853", %"class.blink::HeapListHashSet.1864", %"class.blink::HeapListHashSet.1875", %"class.blink::HeapListHashSet.1886", %"class.blink::HeapListHashSet.1897", %"class.blink::HeapListHashSet.1908", %"class.blink::HeapListHashSet.1919", %"class.blink::HeapListHashSet.1930", %"class.blink::HeapListHashSet.1941" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1739", %"class.blink::Member.1741", %"class.blink::Member.1741", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1739" = type <{ %"class.blink::Member.1741"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1741" = type { %"class.blink::MemberBase.1742" }
%"class.blink::MemberBase.1742" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1955", %"class.blink::Member.1741", %"class.blink::Member.1741" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1743" = type { %"class.WTF::ListHashSet.base.1753", [7 x i8] }
%"class.WTF::ListHashSet.base.1753" = type <{ %"class.WTF::HashTable.1748", %"class.blink::Member.1750", %"class.blink::Member.1750", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1748" = type <{ %"class.blink::Member.1750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1750" = type { %"class.blink::MemberBase.1751" }
%"class.blink::MemberBase.1751" = type { %"class.blink::HeapListHashSetNode.1752"* }
%"class.blink::HeapListHashSetNode.1752" = type { %"class.blink::Member.2098", %"class.blink::Member.1750", %"class.blink::Member.1750" }
%"class.blink::Member.2098" = type { %"class.blink::MemberBase.2099" }
%"class.blink::MemberBase.2099" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1754" = type { %"class.WTF::ListHashSet.base.1764", [7 x i8] }
%"class.WTF::ListHashSet.base.1764" = type <{ %"class.WTF::HashTable.1759", %"class.blink::Member.1761", %"class.blink::Member.1761", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1759" = type <{ %"class.blink::Member.1761"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1761" = type { %"class.blink::MemberBase.1762" }
%"class.blink::MemberBase.1762" = type { %"class.blink::HeapListHashSetNode.1763"* }
%"class.blink::HeapListHashSetNode.1763" = type { %"class.blink::Member.2094", %"class.blink::Member.1761", %"class.blink::Member.1761" }
%"class.blink::Member.2094" = type { %"class.blink::MemberBase.2095" }
%"class.blink::MemberBase.2095" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1765" = type { %"class.WTF::ListHashSet.base.1775", [7 x i8] }
%"class.WTF::ListHashSet.base.1775" = type <{ %"class.WTF::HashTable.1770", %"class.blink::Member.1772", %"class.blink::Member.1772", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1770" = type <{ %"class.blink::Member.1772"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1772" = type { %"class.blink::MemberBase.1773" }
%"class.blink::MemberBase.1773" = type { %"class.blink::HeapListHashSetNode.1774"* }
%"class.blink::HeapListHashSetNode.1774" = type { %"class.blink::Member.2090", %"class.blink::Member.1772", %"class.blink::Member.1772" }
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1776" = type { %"class.WTF::ListHashSet.base.1786", [7 x i8] }
%"class.WTF::ListHashSet.base.1786" = type <{ %"class.WTF::HashTable.1781", %"class.blink::Member.1783", %"class.blink::Member.1783", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1781" = type <{ %"class.blink::Member.1783"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::HeapListHashSetNode.1785"* }
%"class.blink::HeapListHashSetNode.1785" = type { %"class.blink::Member.2086", %"class.blink::Member.1783", %"class.blink::Member.1783" }
%"class.blink::Member.2086" = type { %"class.blink::MemberBase.2087" }
%"class.blink::MemberBase.2087" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1787" = type { %"class.WTF::ListHashSet.base.1797", [7 x i8] }
%"class.WTF::ListHashSet.base.1797" = type <{ %"class.WTF::HashTable.1792", %"class.blink::Member.1794", %"class.blink::Member.1794", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1792" = type <{ %"class.blink::Member.1794"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1794" = type { %"class.blink::MemberBase.1795" }
%"class.blink::MemberBase.1795" = type { %"class.blink::HeapListHashSetNode.1796"* }
%"class.blink::HeapListHashSetNode.1796" = type { %"class.blink::Member.2082", %"class.blink::Member.1794", %"class.blink::Member.1794" }
%"class.blink::Member.2082" = type { %"class.blink::MemberBase.2083" }
%"class.blink::MemberBase.2083" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1798" = type { %"class.WTF::ListHashSet.base.1808", [7 x i8] }
%"class.WTF::ListHashSet.base.1808" = type <{ %"class.WTF::HashTable.1803", %"class.blink::Member.1805", %"class.blink::Member.1805", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1803" = type <{ %"class.blink::Member.1805"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1805" = type { %"class.blink::MemberBase.1806" }
%"class.blink::MemberBase.1806" = type { %"class.blink::HeapListHashSetNode.1807"* }
%"class.blink::HeapListHashSetNode.1807" = type { %"class.blink::Member.2078", %"class.blink::Member.1805", %"class.blink::Member.1805" }
%"class.blink::Member.2078" = type { %"class.blink::MemberBase.2079" }
%"class.blink::MemberBase.2079" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1809" = type { %"class.WTF::ListHashSet.base.1819", [7 x i8] }
%"class.WTF::ListHashSet.base.1819" = type <{ %"class.WTF::HashTable.1814", %"class.blink::Member.1816", %"class.blink::Member.1816", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1814" = type <{ %"class.blink::Member.1816"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1816" = type { %"class.blink::MemberBase.1817" }
%"class.blink::MemberBase.1817" = type { %"class.blink::HeapListHashSetNode.1818"* }
%"class.blink::HeapListHashSetNode.1818" = type { %"class.blink::Member.2074", %"class.blink::Member.1816", %"class.blink::Member.1816" }
%"class.blink::Member.2074" = type { %"class.blink::MemberBase.2075" }
%"class.blink::MemberBase.2075" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1820" = type { %"class.WTF::ListHashSet.base.1830", [7 x i8] }
%"class.WTF::ListHashSet.base.1830" = type <{ %"class.WTF::HashTable.1825", %"class.blink::Member.1827", %"class.blink::Member.1827", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1825" = type <{ %"class.blink::Member.1827"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1827" = type { %"class.blink::MemberBase.1828" }
%"class.blink::MemberBase.1828" = type { %"class.blink::HeapListHashSetNode.1829"* }
%"class.blink::HeapListHashSetNode.1829" = type { %"class.blink::Member.2070", %"class.blink::Member.1827", %"class.blink::Member.1827" }
%"class.blink::Member.2070" = type { %"class.blink::MemberBase.2071" }
%"class.blink::MemberBase.2071" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1831" = type { %"class.WTF::ListHashSet.base.1841", [7 x i8] }
%"class.WTF::ListHashSet.base.1841" = type <{ %"class.WTF::HashTable.1836", %"class.blink::Member.1838", %"class.blink::Member.1838", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1836" = type <{ %"class.blink::Member.1838"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1838" = type { %"class.blink::MemberBase.1839" }
%"class.blink::MemberBase.1839" = type { %"class.blink::HeapListHashSetNode.1840"* }
%"class.blink::HeapListHashSetNode.1840" = type { %"class.blink::Member.2066", %"class.blink::Member.1838", %"class.blink::Member.1838" }
%"class.blink::Member.2066" = type { %"class.blink::MemberBase.2067" }
%"class.blink::MemberBase.2067" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1842" = type { %"class.WTF::ListHashSet.base.1852", [7 x i8] }
%"class.WTF::ListHashSet.base.1852" = type <{ %"class.WTF::HashTable.1847", %"class.blink::Member.1849", %"class.blink::Member.1849", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1847" = type <{ %"class.blink::Member.1849"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1849" = type { %"class.blink::MemberBase.1850" }
%"class.blink::MemberBase.1850" = type { %"class.blink::HeapListHashSetNode.1851"* }
%"class.blink::HeapListHashSetNode.1851" = type { %"class.blink::Member.1959", %"class.blink::Member.1849", %"class.blink::Member.1849" }
%"class.blink::HeapListHashSet.1853" = type { %"class.WTF::ListHashSet.base.1863", [7 x i8] }
%"class.WTF::ListHashSet.base.1863" = type <{ %"class.WTF::HashTable.1858", %"class.blink::Member.1860", %"class.blink::Member.1860", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1858" = type <{ %"class.blink::Member.1860"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1860" = type { %"class.blink::MemberBase.1861" }
%"class.blink::MemberBase.1861" = type { %"class.blink::HeapListHashSetNode.1862"* }
%"class.blink::HeapListHashSetNode.1862" = type { %"class.blink::Member.2060", %"class.blink::Member.1860", %"class.blink::Member.1860" }
%"class.blink::Member.2060" = type { %"class.blink::MemberBase.2061" }
%"class.blink::MemberBase.2061" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1864" = type { %"class.WTF::ListHashSet.base.1874", [7 x i8] }
%"class.WTF::ListHashSet.base.1874" = type <{ %"class.WTF::HashTable.1869", %"class.blink::Member.1871", %"class.blink::Member.1871", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1869" = type <{ %"class.blink::Member.1871"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1871" = type { %"class.blink::MemberBase.1872" }
%"class.blink::MemberBase.1872" = type { %"class.blink::HeapListHashSetNode.1873"* }
%"class.blink::HeapListHashSetNode.1873" = type { %"class.blink::Member.2056", %"class.blink::Member.1871", %"class.blink::Member.1871" }
%"class.blink::Member.2056" = type { %"class.blink::MemberBase.2057" }
%"class.blink::MemberBase.2057" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1875" = type { %"class.WTF::ListHashSet.base.1885", [7 x i8] }
%"class.WTF::ListHashSet.base.1885" = type <{ %"class.WTF::HashTable.1880", %"class.blink::Member.1882", %"class.blink::Member.1882", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1880" = type <{ %"class.blink::Member.1882"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1882" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::HeapListHashSetNode.1884"* }
%"class.blink::HeapListHashSetNode.1884" = type { %"class.blink::Member.2052", %"class.blink::Member.1882", %"class.blink::Member.1882" }
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1886" = type { %"class.WTF::ListHashSet.base.1896", [7 x i8] }
%"class.WTF::ListHashSet.base.1896" = type <{ %"class.WTF::HashTable.1891", %"class.blink::Member.1893", %"class.blink::Member.1893", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1891" = type <{ %"class.blink::Member.1893"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1893" = type { %"class.blink::MemberBase.1894" }
%"class.blink::MemberBase.1894" = type { %"class.blink::HeapListHashSetNode.1895"* }
%"class.blink::HeapListHashSetNode.1895" = type { %"class.blink::Member.2048", %"class.blink::Member.1893", %"class.blink::Member.1893" }
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1897" = type { %"class.WTF::ListHashSet.base.1907", [7 x i8] }
%"class.WTF::ListHashSet.base.1907" = type <{ %"class.WTF::HashTable.1902", %"class.blink::Member.1904", %"class.blink::Member.1904", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1902" = type <{ %"class.blink::Member.1904"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1904" = type { %"class.blink::MemberBase.1905" }
%"class.blink::MemberBase.1905" = type { %"class.blink::HeapListHashSetNode.1906"* }
%"class.blink::HeapListHashSetNode.1906" = type { %"class.blink::Member.2044", %"class.blink::Member.1904", %"class.blink::Member.1904" }
%"class.blink::Member.2044" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1908" = type { %"class.WTF::ListHashSet.base.1918", [7 x i8] }
%"class.WTF::ListHashSet.base.1918" = type <{ %"class.WTF::HashTable.1913", %"class.blink::Member.1915", %"class.blink::Member.1915", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1913" = type <{ %"class.blink::Member.1915"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1915" = type { %"class.blink::MemberBase.1916" }
%"class.blink::MemberBase.1916" = type { %"class.blink::HeapListHashSetNode.1917"* }
%"class.blink::HeapListHashSetNode.1917" = type { %"class.blink::Member.2040", %"class.blink::Member.1915", %"class.blink::Member.1915" }
%"class.blink::Member.2040" = type { %"class.blink::MemberBase.2041" }
%"class.blink::MemberBase.2041" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1919" = type { %"class.WTF::ListHashSet.base.1929", [7 x i8] }
%"class.WTF::ListHashSet.base.1929" = type <{ %"class.WTF::HashTable.1924", %"class.blink::Member.1926", %"class.blink::Member.1926", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1924" = type <{ %"class.blink::Member.1926"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1926" = type { %"class.blink::MemberBase.1927" }
%"class.blink::MemberBase.1927" = type { %"class.blink::HeapListHashSetNode.1928"* }
%"class.blink::HeapListHashSetNode.1928" = type { %"class.blink::Member.2036", %"class.blink::Member.1926", %"class.blink::Member.1926" }
%"class.blink::Member.2036" = type { %"class.blink::MemberBase.2037" }
%"class.blink::MemberBase.2037" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1930" = type { %"class.WTF::ListHashSet.base.1940", [7 x i8] }
%"class.WTF::ListHashSet.base.1940" = type <{ %"class.WTF::HashTable.1935", %"class.blink::Member.1937", %"class.blink::Member.1937", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1935" = type <{ %"class.blink::Member.1937"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1937" = type { %"class.blink::MemberBase.1938" }
%"class.blink::MemberBase.1938" = type { %"class.blink::HeapListHashSetNode.1939"* }
%"class.blink::HeapListHashSetNode.1939" = type { %"class.blink::Member.1961", %"class.blink::Member.1937", %"class.blink::Member.1937" }
%"class.blink::HeapListHashSet.1941" = type { %"class.WTF::ListHashSet.base.1951", [7 x i8] }
%"class.WTF::ListHashSet.base.1951" = type <{ %"class.WTF::HashTable.1946", %"class.blink::Member.1948", %"class.blink::Member.1948", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1946" = type <{ %"class.blink::Member.1948"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1948" = type { %"class.blink::MemberBase.1949" }
%"class.blink::MemberBase.1949" = type { %"class.blink::HeapListHashSetNode.1950"* }
%"class.blink::HeapListHashSetNode.1950" = type { %"class.blink::Member.1953", %"class.blink::Member.1948", %"class.blink::Member.1948" }
%class.scoped_refptr.1952 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1953" = type { %"class.blink::MemberBase.1954" }
%"class.blink::MemberBase.1954" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1955" = type { %"class.blink::MemberBase.1956" }
%"class.blink::MemberBase.1956" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1957" = type { %"class.blink::MemberBase.1958" }
%"class.blink::MemberBase.1958" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1959" = type { %"class.blink::MemberBase.1960" }
%"class.blink::MemberBase.1960" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1969" }
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2536" }
%"class.mojo::Remote.2536" = type { %"class.mojo::internal::InterfacePtrState.2537" }
%"class.mojo::internal::InterfacePtrState.2537" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2538" }
%"class.std::__1::unique_ptr.2538" = type { %"class.std::__1::__compressed_pair.2539" }
%"class.std::__1::__compressed_pair.2539" = type { %"struct.std::__1::__compressed_pair_elem.2540" }
%"struct.std::__1::__compressed_pair_elem.2540" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1971" = type { %"class.std::__1::__compressed_pair.1972" }
%"class.std::__1::__compressed_pair.1972" = type { %"struct.std::__1::__compressed_pair_elem.1973" }
%"struct.std::__1::__compressed_pair_elem.1973" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1977" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1978" = type { %"class.std::__1::__compressed_pair.1979" }
%"class.std::__1::__compressed_pair.1979" = type { %"struct.std::__1::__compressed_pair_elem.1980" }
%"struct.std::__1::__compressed_pair_elem.1980" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1653" = type { %"class.absl::optional_internal::optional_data.1654" }
%"class.absl::optional_internal::optional_data.1654" = type { %"class.absl::optional_internal::optional_data_base.1655" }
%"class.absl::optional_internal::optional_data_base.1655" = type { %"class.absl::optional_internal::optional_data_dtor_base.1656" }
%"class.absl::optional_internal::optional_data_dtor_base.1656" = type { i8, %union.anon.1657 }
%union.anon.1657 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1984" = type { %"class.std::__1::__compressed_pair.1985" }
%"class.std::__1::__compressed_pair.1985" = type { %"struct.std::__1::__compressed_pair_elem.1986" }
%"struct.std::__1::__compressed_pair_elem.1986" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1990" }
%"class.blink::Member.1990" = type { %"class.blink::MemberBase.1991" }
%"class.blink::MemberBase.1991" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2546" }
%"class.mojo::AssociatedRemote.2546" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2547" }
%"class.mojo::internal::AssociatedInterfacePtrState.2547" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2548" }
%"class.std::__1::unique_ptr.2548" = type { %"class.std::__1::__compressed_pair.2549" }
%"class.std::__1::__compressed_pair.2549" = type { %"struct.std::__1::__compressed_pair_elem.2550" }
%"struct.std::__1::__compressed_pair_elem.2550" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1992" = type { %"class.blink::Member.1993" }
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2556" }
%"class.mojo::AssociatedRemote.2556" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2557" }
%"class.mojo::internal::AssociatedInterfacePtrState.2557" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2558" }
%"class.std::__1::unique_ptr.2558" = type { %"class.std::__1::__compressed_pair.2559" }
%"class.std::__1::__compressed_pair.2559" = type { %"struct.std::__1::__compressed_pair_elem.2560" }
%"struct.std::__1::__compressed_pair_elem.2560" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1995" }
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2566", %"class.blink::Member.1635", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2566" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2567" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.744" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2567" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1997" = type { %"class.blink::Member.1998" }
%"class.blink::Member.1998" = type { %"class.blink::MemberBase.1999" }
%"class.blink::MemberBase.1999" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2570", %"class.blink::Member.1635", %"class.mojo::AssociatedReceiver.2571" }
%"class.blink::ThreadState::PrefinalizerRegistration.2570" = type { i8 }
%"class.mojo::AssociatedReceiver.2571" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2572" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2572" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2000" }
%"class.blink::Member.2000" = type { %"class.blink::MemberBase.2001" }
%"class.blink::MemberBase.2001" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2575", %"class.blink::Member.1635", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2575" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1532, %"class.std::__1::unique_ptr.744", %"class.base::WeakPtrFactory.2576" }
%"class.base::WeakPtrFactory.2576" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2002" = type { %"class.blink::Member.2003" }
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2579", %"class.blink::Member.1635", %"class.mojo::AssociatedReceiver.2580" }
%"class.blink::ThreadState::PrefinalizerRegistration.2579" = type { i8 }
%"class.mojo::AssociatedReceiver.2580" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2581" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2581" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2011" = type { %"class.blink::MemberBase.2012" }
%"class.blink::MemberBase.2012" = type { %"class.blink::HeapHashMap.2013"* }
%"class.blink::HeapHashMap.2013" = type opaque
%"class.mojo::StructPtr.2014" = type { %"class.std::__1::unique_ptr.2015" }
%"class.std::__1::unique_ptr.2015" = type { %"class.std::__1::__compressed_pair.2016" }
%"class.std::__1::__compressed_pair.2016" = type { %"struct.std::__1::__compressed_pair_elem.2017" }
%"struct.std::__1::__compressed_pair_elem.2017" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2018", %"class.mojo::InlinedStructPtr.2019" }
%"class.mojo::InlinedStructPtr.2018" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2019" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2023" = type { %"class.blink::MemberBase.2024" }
%"class.blink::MemberBase.2024" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2025" = type { %"class.absl::optional_internal::optional_data.2026" }
%"class.absl::optional_internal::optional_data.2026" = type { %"class.absl::optional_internal::optional_data_base.2027" }
%"class.absl::optional_internal::optional_data_base.2027" = type { %"class.absl::optional_internal::optional_data_dtor_base.2028" }
%"class.absl::optional_internal::optional_data_dtor_base.2028" = type { i8, %union.anon.2029 }
%union.anon.2029 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::mojom::blink::ScrollAlignment" = type { i32, i32, i32 }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.2452", %"class.blink::Member.2452", %"class.blink::Member.2454", %"class.blink::Member.2456", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.2447" }
%"class.absl::optional.2447" = type { %"class.absl::optional_internal::optional_data.2448" }
%"class.absl::optional_internal::optional_data.2448" = type { %"class.absl::optional_internal::optional_data_base.2449" }
%"class.absl::optional_internal::optional_data_base.2449" = type { %"class.absl::optional_internal::optional_data_dtor_base.2450" }
%"class.absl::optional_internal::optional_data_dtor_base.2450" = type { i8, %union.anon.2451 }
%union.anon.2451 = type { i64 }
%"class.blink::Member.2452" = type { %"class.blink::MemberBase.2453" }
%"class.blink::MemberBase.2453" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.2454" = type { %"class.blink::MemberBase.2455" }
%"class.blink::MemberBase.2455" = type { %"class.blink::Event"* }
%"class.blink::Member.2456" = type { %"class.blink::MemberBase.2457" }
%"class.blink::MemberBase.2457" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::BeforeTextInsertedEvent" = type { %"class.blink::Event", %"class.WTF::String" }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::HTMLFormControlElementWithState" = type { %"class.blink::HTMLFormControlElement.base", i8, [2 x i8] }
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2502, %"class.blink::Member.2503", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2507" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2502 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2503" = type { %"class.blink::MemberBase.2504" }
%"class.blink::MemberBase.2504" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2505" }
%"class.blink::Persistent.2505" = type { %"class.blink::PersistentBase.2506" }
%"class.blink::PersistentBase.2506" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2507" = type { %"class.base::StrongAlias.2508" }
%"class.base::StrongAlias.2508" = type { %"class.base::UnguessableToken" }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2509", i8, [7 x i8] }>
%"class.blink::Member.2509" = type { %"class.blink::MemberBase.2510" }
%"class.blink::MemberBase.2510" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2511" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2511" = type { %"class.v8::TracedReference.2512" }
%"class.v8::TracedReference.2512" = type { %"class.v8::BasicTracedReference.2513" }
%"class.v8::BasicTracedReference.2513" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.WTF::HashMap.2514" = type opaque
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%class.anon.2638 = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2652" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2652" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2639", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2639" = type { %"class.std::__1::__vector_base.2640" }
%"class.std::__1::__vector_base.2640" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2647" }
%"class.std::__1::__compressed_pair.2647" = type { %"struct.std::__1::__compressed_pair_elem.2648" }
%"struct.std::__1::__compressed_pair_elem.2648" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2641", i64, i64 }
%"class.std::__1::unique_ptr.2641" = type { %"class.std::__1::__compressed_pair.2642" }
%"class.std::__1::__compressed_pair.2642" = type { %"struct.std::__1::__compressed_pair_elem.2643" }
%"struct.std::__1::__compressed_pair_elem.2643" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK5blink19HTMLTextAreaElement21IsRequiredFormControlEv = comdat any

$_ZNK5blink19HTMLTextAreaElement20IsPlaceholderVisibleEv = comdat any

$_ZN5blink19HTMLTextAreaElementD2Ev = comdat any

$_ZN5blink19HTMLTextAreaElementD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink19HTMLTextAreaElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink19HTMLTextAreaElement13IsTextControlEv = comdat any

$_ZNK5blink19HTMLTextAreaElement21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink19HTMLTextAreaElement23AreAuthorShadowsAllowedEv = comdat any

$_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink19HTMLTextAreaElement11IsLabelableEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv = comdat any

$_ZNK5blink19HTMLTextAreaElement14IsEnumeratableEv = comdat any

$_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv = comdat any

$_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv = comdat any

$_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv = comdat any

$_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv = comdat any

$_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb = comdat any

$_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv = comdat any

$_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE = comdat any

$_ZNK5blink19HTMLTextAreaElement19SupportsPlaceholderEv = comdat any

$_ZNK5blink19HTMLTextAreaElement12IsEmptyValueEv = comdat any

$_ZN5blink18TextControlElement16HandleFocusEventEPNS_7ElementENS_5mojom9FocusTypeE = comdat any

$_ZN5blink18TextControlElement15HandleBlurEventEv = comdat any

$_ZThn104_N5blink19HTMLTextAreaElementD1Ev = comdat any

$_ZThn104_N5blink19HTMLTextAreaElementD0Ev = comdat any

$_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv = comdat any

$_ZThn104_NK5blink19HTMLTextAreaElement14IsEnumeratableEv = comdat any

$_ZN5blink13ListedElement27DisabledStateMightBeChangedEv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink19HTMLTextAreaElementE = hidden unnamed_addr constant { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] } { [214 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*)* @_ZN5blink19HTMLTextAreaElementD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*)* @_ZN5blink19HTMLTextAreaElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Visitor"*)* @_ZNK5blink18TextControlElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, i1, i32)* @_ZN5blink18TextControlElement10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink22HTMLFormControlElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink22HTMLFormControlElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"class.blink::Event"*)* @_ZN5blink19HTMLTextAreaElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::Document"*)* @_ZN5blink22HTMLFormControlElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink19HTMLTextAreaElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.2514"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLTextAreaElement"*)* @_ZN5blink19HTMLTextAreaElement11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLTextAreaElement"*)* @_ZN5blink19HTMLTextAreaElement12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink19HTMLTextAreaElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink19HTMLTextAreaElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink19HTMLTextAreaElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"class.blink::Element"*, i32)* @_ZN5blink19HTMLTextAreaElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::HTMLTextAreaElement"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink19HTMLTextAreaElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, i32)* @_ZN5blink19HTMLTextAreaElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink19HTMLTextAreaElement32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink18TextControlElement18DispatchFocusEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink18TextControlElement17DispatchBlurEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElementWithState"*)* @_ZN5blink31HTMLFormControlElementWithState21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"class.blink::ShadowRoot"*)* @_ZN5blink19HTMLTextAreaElement25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement14IsEnumeratableEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement15FormControlTypeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement21ResultForDialogSubmitEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, i1)* @_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLFormControlElement"*)* @_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, i32)* @_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*)* @_ZN5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement24RequiredAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZN5blink22HTMLFormControlElement13DidChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*)* @_ZN5blink19HTMLTextAreaElement9ResetImplEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState18ShouldAutocompleteEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZNK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement20IsPlaceholderVisibleEv to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, i1)* @_ZN5blink19HTMLTextAreaElement24SetPlaceholderVisibilityEb to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement19SupportsPlaceholderEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.WTF::String"*, i32, i32, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringEjjS4_RNS_14ExceptionStateE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement5valueEv to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"*, i32, i32)* @_ZN5blink19HTMLTextAreaElement8setValueERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.WTF::String"*)* @_ZN5blink18TextControlElement19SetInnerEditorValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"*)* @_ZN5blink19HTMLTextAreaElement17SetSuggestedValueERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*)* @_ZN5blink19HTMLTextAreaElement21UpdatePlaceholderTextEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement19GetPlaceholderValueEv to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*)* @_ZN5blink19HTMLTextAreaElement17SubtreeHasChangedEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement12IsEmptyValueEv to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32)* @_ZN5blink18TextControlElement16HandleFocusEventEPNS_7ElementENS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::TextControlElement"*)* @_ZN5blink18TextControlElement15HandleBlurEventEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement17validationMessageEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement12ValueMissingEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement7TooLongEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement8TooShortEv to i8*), i8* bitcast (void (%"class.blink::FormControlState"*, %"class.blink::HTMLTextAreaElement"*)* @_ZNK5blink19HTMLTextAreaElement20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"class.blink::FormControlState"*)* @_ZN5blink19HTMLTextAreaElement23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"class.blink::FormData"*)* @_ZN5blink19HTMLTextAreaElement16AppendToFormDataERNS_8FormDataE to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [34 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::TextControlElement"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink18TextControlElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*)* @_ZThn104_N5blink19HTMLTextAreaElementD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*)* @_ZThn104_N5blink19HTMLTextAreaElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18IsElementInternalsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZThn104_NK5blink19HTMLTextAreaElement14IsEnumeratableEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7GetNameEv to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"class.blink::FormData"*)* @_ZThn104_N5blink19HTMLTextAreaElement16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11CustomErrorEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11HasBadInputEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement15PatternMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement13RangeOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement14RangeUnderflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12StepMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZThn104_NK5blink19HTMLTextAreaElement7TooLongEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZThn104_NK5blink19HTMLTextAreaElement8TooShortEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLTextAreaElement"*)* @_ZThn104_NK5blink19HTMLTextAreaElement12ValueMissingEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLTextAreaElement"*)* @_ZThn104_NK5blink19HTMLTextAreaElement17validationMessageEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement20ValidationSubMessageEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.WTF::String"*)* @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement16ValidationAnchorEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLFormControlElementWithState"*)* @_ZThn104_NK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::FormControlState"*, %"class.blink::HTMLTextAreaElement"*)* @_ZThn104_NK5blink19HTMLTextAreaElement20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::HTMLTextAreaElement"*, %"class.blink::FormControlState"*)* @_ZThn104_N5blink19HTMLTextAreaElement23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::HTMLFormControlElement"*)* @_ZThn104_N5blink22HTMLFormControlElement13DidChangeFormEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18RecalcWillValidateEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*)* @_ZThn168_N5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE to i8*)] }, align 8
@_ZZNK5blink19HTMLTextAreaElement15FormControlTypeEvE10s_textarea = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink19HTMLTextAreaElement15FormControlTypeEvE10s_textarea = internal global i64 0, align 8
@_ZN5blink10html_names10kAlignAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kWrapAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kRowsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink26layout_invalidation_reason17kAttributeChangedE = external constant [0 x i8], align 1
@_ZN5blink10html_names9kColsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [9 x i8] c"physical\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"hard\00", align 1
@_ZN5blink10html_names14kAccesskeyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kMaxlengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kMinlengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kDirnameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink21event_interface_names11kWheelEventE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names5kBlurE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink19style_change_reason13kControlValueE = external constant [0 x i8], align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"-webkit-input-placeholder\00", align 1
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink20shadow_element_names14kIdPlaceholderE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kPlaceholderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.10 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase34is_layout_ng_text_control_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase22is_editing_ng_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.13 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZN5blink19HTMLTextAreaElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.15 = private unnamed_addr constant [9 x i8] c"textarea\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink19HTMLTextAreaElementC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::HTMLTextAreaElement"*, %"class.blink::Document"*), void (%"class.blink::HTMLTextAreaElement"*, %"class.blink::Document"*)* @_ZN5blink19HTMLTextAreaElementC2ERNS_8DocumentE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElementC2ERNS_8DocumentE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink18TextControlElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::TextControlElement"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.blink::Document"* dereferenceable(2848) %1) #13
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 1
  store i32 2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 2
  store i32 20, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 3
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 6
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 7
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, -2
  store i8 %16, i8* %14, align 1
  %17 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = tail call dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"* %17) #13
  ret void
}

declare void @_ZN5blink18TextControlElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::TextControlElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare dereferenceable(208) %"class.blink::ShadowRoot"* @_ZN5blink7Element25EnsureUserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::ShadowRoot"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %5 = tail call %"class.blink::HTMLElement"* @_ZN5blink18TextControlElement24CreateInnerEditorElementEv(%"class.blink::TextControlElement"* %4) #13
  %6 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %3, %"class.blink::Node"* %6) #13
  ret void
}

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::HTMLElement"* @_ZN5blink18TextControlElement24CreateInnerEditorElementEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink19HTMLTextAreaElement15FormControlTypeEv(%"class.blink::HTMLTextAreaElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink19HTMLTextAreaElement15FormControlTypeEvE10s_textarea to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink19HTMLTextAreaElement15FormControlTypeEvE10s_textarea) #13
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink19HTMLTextAreaElement15FormControlTypeEvE10s_textarea to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i64 8) #13
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink19HTMLTextAreaElement15FormControlTypeEvE10s_textarea) #13
  br label %8

8:                                                ; preds = %4, %7, %1
  ret %"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink19HTMLTextAreaElement15FormControlTypeEvE10s_textarea to %"class.WTF::AtomicString"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19HTMLTextAreaElement20SaveFormControlStateEv(%"class.blink::FormControlState"* noalias sret, %"class.blink::HTMLTextAreaElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %1, i64 0, i32 6
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %50, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %1, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #13
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #13
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %7, %12, %27
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 1, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %33 = bitcast %"class.WTF::Vector.724"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #13
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.724"* %32, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #13
  br label %49

49:                                               ; preds = %29, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  br label %54

50:                                               ; preds = %2
  %51 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %53 = bitcast %"class.WTF::Vector.724"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #13
  br label %54

54:                                               ; preds = %50, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19HTMLTextAreaElement5valueEv(%"class.blink::HTMLTextAreaElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #13
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !4

19:                                               ; preds = %10
  tail call void @llvm.trap() #13
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink19HTMLTextAreaElement20SaveFormControlStateEv(%"class.blink::FormControlState"* noalias sret, %"class.blink::HTMLTextAreaElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %1, i64 -1, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast i32* %3 to %"class.blink::HTMLTextAreaElement"*
  tail call void @_ZNK5blink19HTMLTextAreaElement20SaveFormControlStateEv(%"class.blink::FormControlState"* sret %0, %"class.blink::HTMLTextAreaElement"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::FormControlState"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1
  %4 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.724"* %3, i32 0) #13
  tail call void @_ZN5blink19HTMLTextAreaElement14SetValueCommonERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"* %0, %"class.WTF::String"* dereferenceable(8) %4, i32 0, i32 0) #13
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 6
  store i8 1, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement8setValueERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19HTMLTextAreaElement14SetValueCommonERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %2, i32 %3)
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 6
  store i8 1, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink19HTMLTextAreaElement23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::FormControlState"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast i32* %3 to %"class.blink::HTMLTextAreaElement"*
  %5 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %1, i64 0, i32 1
  %6 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.724"* %5, i32 0) #13
  tail call void @_ZN5blink19HTMLTextAreaElement14SetValueCommonERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"* %4, %"class.WTF::String"* dereferenceable(8) %6, i32 0, i32 0) #13
  %7 = getelementptr inbounds i32, i32* %3, i64 68
  %8 = bitcast i32* %7 to i8*
  store i8 1, i8* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19HTMLTextAreaElement11scrollWidthEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* %2) #13
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = tail call i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"* %12) #13
  br label %83

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %19, %"class.blink::Node"* %15, i32 15) #13
  %20 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %20, align 8
  %22 = icmp eq %"class.blink::TextControlInnerEditorElement"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %24) #13
  br label %26

26:                                               ; preds = %14, %23
  %27 = phi %"class.blink::LayoutBox"* [ %25, %23 ], [ null, %14 ]
  %28 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %15) #13
  %29 = icmp ne %"class.blink::LayoutBox"* %28, null
  %30 = icmp ne %"class.blink::LayoutBox"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = tail call i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"* %33) #13
  br label %83

35:                                               ; preds = %26
  %36 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* nonnull %27) #13
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 0
  %38 = bitcast %"class.blink::LayoutBox"* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %39 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %38, align 8
  %40 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %39, i64 120
  %41 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %40, align 8
  %42 = tail call i32 %41(%"class.blink::LayoutBoxModelObject"* %37) #13
  %43 = icmp slt i32 %42, 0
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %42) #13
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !4
  %49 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %38, align 8
  %50 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %49, i64 121
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, align 8
  %52 = tail call i32 %51(%"class.blink::LayoutBoxModelObject"* %37) #13
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 %52) #13
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !4
  %59 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 0, i32 0, i32 5, i32 0
  %60 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 1, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %62, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %64, i64 0, i32 6
  %66 = load float, float* %65, align 8
  %67 = sitofp i32 %58 to float
  %68 = fmul float %67, 1.562500e-02
  %69 = fdiv float %68, %66
  %70 = fmul float %69, 6.400000e+01
  %71 = fcmp ult float %70, 0xC1E0000000000000
  %72 = fcmp ugt float %70, 0x41DFFFFFE0000000
  %73 = fcmp ogt float %70, 0xC1E0000000000000
  %74 = select i1 %73, float %70, float 0xC1E0000000000000
  %75 = fptosi float %74 to i32
  %76 = select i1 %71, i32 0, i32 2147483647
  %77 = select i1 %72, i32 %76, i32 %75
  %78 = sdiv i32 %77, 64
  %79 = srem i32 %77, 64
  %80 = add nsw i32 %79, 32
  %81 = ashr i32 %80, 6
  %82 = add nsw i32 %81, %78
  br label %83

83:                                               ; preds = %32, %35, %11
  %84 = phi i32 [ %13, %11 ], [ %82, %35 ], [ %34, %32 ]
  ret i32 %84
}

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"*, %"class.blink::Node"*, i32) local_unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink19HTMLTextAreaElement12scrollHeightEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* %2) #13
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = tail call i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"* %12) #13
  br label %83

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %19, %"class.blink::Node"* %15, i32 15) #13
  %20 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %20, align 8
  %22 = icmp eq %"class.blink::TextControlInnerEditorElement"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %24) #13
  br label %26

26:                                               ; preds = %14, %23
  %27 = phi %"class.blink::LayoutBox"* [ %25, %23 ], [ null, %14 ]
  %28 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %15) #13
  %29 = icmp ne %"class.blink::LayoutBox"* %28, null
  %30 = icmp ne %"class.blink::LayoutBox"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = tail call i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"* %33) #13
  br label %83

35:                                               ; preds = %26
  %36 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* nonnull %27) #13
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 0
  %38 = bitcast %"class.blink::LayoutBox"* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %39 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %38, align 8
  %40 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %39, i64 118
  %41 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %40, align 8
  %42 = tail call i32 %41(%"class.blink::LayoutBoxModelObject"* %37) #13
  %43 = icmp slt i32 %42, 0
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %42) #13
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !4
  %49 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %38, align 8
  %50 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %49, i64 119
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, align 8
  %52 = tail call i32 %51(%"class.blink::LayoutBoxModelObject"* %37) #13
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 %52) #13
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !4
  %59 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 0, i32 0, i32 5, i32 0
  %60 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 1, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %62, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %64, i64 0, i32 6
  %66 = load float, float* %65, align 8
  %67 = sitofp i32 %58 to float
  %68 = fmul float %67, 1.562500e-02
  %69 = fdiv float %68, %66
  %70 = fmul float %69, 6.400000e+01
  %71 = fcmp ult float %70, 0xC1E0000000000000
  %72 = fcmp ugt float %70, 0x41DFFFFFE0000000
  %73 = fcmp ogt float %70, 0xC1E0000000000000
  %74 = select i1 %73, float %70, float 0xC1E0000000000000
  %75 = fptosi float %74 to i32
  %76 = select i1 %71, i32 0, i32 2147483647
  %77 = select i1 %72, i32 %76, i32 %75
  %78 = sdiv i32 %77, 64
  %79 = srem i32 %77, 64
  %80 = add nsw i32 %79, 32
  %81 = ashr i32 %80, 6
  %82 = add nsw i32 %81, %78
  br label %83

83:                                               ; preds = %32, %35, %11
  %84 = phi i32 [ %13, %11 ], [ %82, %35 ], [ %34, %32 ]
  ret i32 %84
}

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLTextAreaElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"* %5, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56) %1) #13
  %6 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %50, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #13
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !4

30:                                               ; preds = %21
  tail call void @llvm.trap() #13
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %11, %16, %31
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %34, align 8
  call void @_ZN5blink18TextControlElement19SetInnerEditorValueERKN3WTF6StringE(%"class.blink::TextControlElement"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %68, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %68

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #13
  br label %68

50:                                               ; preds = %2
  %51 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #13
  %52 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19HTMLTextAreaElement12defaultValueEv(%"class.blink::HTMLTextAreaElement"* %0)
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %53, align 8
  call void @_ZN5blink19HTMLTextAreaElement14SetValueCommonERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0, i32 1) #13
  store i8 0, i8* %8, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %68

68:                                               ; preds = %67, %64, %50, %49, %46, %33
  %69 = phi i8* [ %12, %33 ], [ %12, %46 ], [ %12, %49 ], [ %51, %50 ], [ %51, %64 ], [ %51, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13
  ret void
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare void @_ZN5blink18TextControlElement19SetInnerEditorValueERKN3WTF6StringE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement16SetNonDirtyValueERKN3WTF6StringENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19HTMLTextAreaElement14SetValueCommonERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 0, i32 %2)
  %4 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 6
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19HTMLTextAreaElement12defaultValueEv(%"class.blink::HTMLTextAreaElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %7 = bitcast %union.anon.2458* %6 to i8*
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.WTF::StringView"* %3 to i8*
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  %19 = bitcast %"class.WTF::StringView"* %3 to i64*
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %39

21:                                               ; preds = %70, %1
  %22 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #13
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #13
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #13
  br label %38

38:                                               ; preds = %21, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #13
  ret %"class.WTF::StringImpl"* %22

39:                                               ; preds = %14, %70
  %40 = phi %"class.blink::Node"* [ %12, %14 ], [ %72, %70 ]
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 12
  %44 = icmp eq i32 %43, 4
  br i1 %44, label %45, label %70

45:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #13
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 1
  %47 = bitcast %"class.blink::Node"* %46 to i8*
  %48 = load i8, i8* %47, align 8, !range !3
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 1, i32 0, i32 0, i32 1
  %52 = bitcast %"class.blink::TraceWrapperV8Reference"* %51 to %"class.blink::ParkableString"*
  %53 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %52) #13
  br label %57

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 1, i32 1
  %56 = bitcast i32* %55 to %"class.WTF::String"*
  br label %57

57:                                               ; preds = %50, %54
  %58 = phi %"class.WTF::String"* [ %53, %50 ], [ %56, %54 ]
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  store i8* null, i8** %17, align 8
  %63 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %63, i64* %19, align 8
  br label %68

64:                                               ; preds = %57
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %16, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %18, align 8
  br label %68

68:                                               ; preds = %62, %64
  %69 = phi i32 [ %66, %64 ], [ 0, %62 ]
  store i32 %69, i32* %20, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #13
  br label %70

70:                                               ; preds = %39, %68
  %71 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 5, i32 0, i32 0
  %72 = load %"class.blink::Node"*, %"class.blink::Node"** %71, align 8
  %73 = icmp eq %"class.blink::Node"* %72, null
  br i1 %73, label %21, label %39
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kAlignAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kWrapAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"* %15, %"class.blink::QualifiedName"* dereferenceable(8) %1) #13
  br label %17

17:                                               ; preds = %9, %2, %14
  %18 = phi i1 [ %16, %14 ], [ false, %2 ], [ true, %9 ]
  ret i1 %18
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kWrapAttrE, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %7, %9
  br i1 %10, label %11, label %18

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %14, label %17, label %16

16:                                               ; preds = %11
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %15, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 436, i32 493) #13
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %15, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 264, i32 546) #13
  br label %20

17:                                               ; preds = %11
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %15, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 436, i32 491) #13
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"* %15, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 264, i32 56) #13
  br label %20

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"* %19, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #13
  br label %20

20:                                               ; preds = %16, %17, %18
  ret void
}

declare void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDENS_10CSSValueIDE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink11HTMLElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLTextAreaElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kRowsAttrE, align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %8, i64 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %13, %15
  br i1 %16, label %17, label %70

17:                                               ; preds = %2
  %18 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #13
  store i32 0, i32* %3, align 4
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0
  %28 = call zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8) %27, i32* nonnull dereferenceable(4) %3) #13
  %29 = xor i1 %28, true
  %30 = load i32, i32* %3, align 4
  %31 = icmp slt i32 %30, 1
  %32 = or i1 %31, %29
  br i1 %32, label %33, label %34

33:                                               ; preds = %17, %26, %22
  store i32 2, i32* %3, align 4
  br label %34

34:                                               ; preds = %26, %33
  %35 = phi i32 [ %30, %26 ], [ 2, %33 ]
  %36 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, %35
  br i1 %38, label %69, label %39

39:                                               ; preds = %34
  store i32 %35, i32* %36, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %43, label %49, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::NodeData"** %44 to %"class.blink::NodeRareData"**
  %47 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %47, i64 0, i32 1, i32 0, i32 0
  br label %51

49:                                               ; preds = %39
  %50 = bitcast %"class.blink::NodeData"** %44 to %"class.blink::NodeRenderingData"**
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi %"class.blink::NodeRenderingData"** [ %48, %45 ], [ %50, %49 ]
  %53 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %53, i64 0, i32 1
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = icmp eq %"class.blink::LayoutObject"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  br i1 %43, label %62, label %58

58:                                               ; preds = %57
  %59 = bitcast %"class.blink::NodeData"** %44 to %"class.blink::NodeRareData"**
  %60 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %60, i64 0, i32 1, i32 0, i32 0
  br label %64

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::NodeData"** %44 to %"class.blink::NodeRenderingData"**
  br label %64

64:                                               ; preds = %58, %62
  %65 = phi %"class.blink::NodeRenderingData"** [ %61, %58 ], [ %63, %62 ]
  %66 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %66, i64 0, i32 1
  %68 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %67, align 8
  call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %68, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason17kAttributeChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %68, i8 zeroext 3) #13
  call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %68, i32 1) #13
  br label %69

69:                                               ; preds = %51, %34, %64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #13
  br label %356

70:                                               ; preds = %2
  %71 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kColsAttrE, align 8
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %13, %73
  br i1 %74, label %75, label %117

75:                                               ; preds = %70
  %76 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #13
  store i32 0, i32* %4, align 4
  %77 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0
  %86 = call zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8) %85, i32* nonnull dereferenceable(4) %4) #13
  %87 = xor i1 %86, true
  %88 = load i32, i32* %4, align 4
  %89 = icmp slt i32 %88, 1
  %90 = or i1 %89, %87
  br i1 %90, label %91, label %92

91:                                               ; preds = %75, %84, %80
  store i32 20, i32* %4, align 4
  br label %92

92:                                               ; preds = %84, %91
  %93 = phi i32 [ %88, %84 ], [ 20, %91 ]
  %94 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, %93
  br i1 %96, label %116, label %97

97:                                               ; preds = %92
  store i32 %93, i32* %94, align 4
  %98 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %101, label %107, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.blink::NodeData"** %102 to %"class.blink::NodeRareData"**
  %105 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %105, i64 0, i32 1, i32 0, i32 0
  br label %109

107:                                              ; preds = %97
  %108 = bitcast %"class.blink::NodeData"** %102 to %"class.blink::NodeRenderingData"**
  br label %109

109:                                              ; preds = %103, %107
  %110 = phi %"class.blink::NodeRenderingData"** [ %106, %103 ], [ %108, %107 ]
  %111 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %111, i64 0, i32 1
  %113 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %112, align 8
  %114 = icmp eq %"class.blink::LayoutObject"* %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %109
  call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* nonnull %113, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason17kAttributeChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* nonnull %113, i8 zeroext 3) #13
  call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* nonnull %113, i32 1) #13
  br label %116

116:                                              ; preds = %115, %109, %92
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #13
  br label %356

117:                                              ; preds = %70
  %118 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kWrapAttrE, align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %118, i64 0, i32 0, i32 0
  %120 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %119, align 8
  %121 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %13, %120
  br i1 %121, label %122, label %315

122:                                              ; preds = %117
  %123 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #13
  %124 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %127, label %131

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %128, align 8
  %129 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %130 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %129, i64* %130, align 8
  br label %138

131:                                              ; preds = %122
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %132, align 8
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 1
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %137 = bitcast i8** %136 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %137, align 8
  br label %138

138:                                              ; preds = %127, %131
  %139 = phi i32 [ %134, %131 ], [ 0, %127 ]
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %139, i32* %140, align 8
  %141 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [9 x i8]* nonnull dereferenceable(9) @.str)
  %142 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #13
  br i1 %141, label %219, label %143

143:                                              ; preds = %138
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %146, label %150

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %147, align 8
  %148 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %149 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %148, i64* %149, align 8
  br label %157

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %144, %"class.WTF::StringImpl"** %151, align 8
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 1
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %156 = bitcast i8** %155 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %154, %"class.WTF::StringImpl"** %156, align 8
  br label %157

157:                                              ; preds = %146, %150
  %158 = phi i32 [ %153, %150 ], [ 0, %146 ]
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %158, i32* %159, align 8
  %160 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [5 x i8]* nonnull dereferenceable(5) @.str.1)
  br i1 %160, label %218, label %161

161:                                              ; preds = %157
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %221, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 1
  %168 = bitcast %"class.WTF::StringImpl"* %167 to i8*
  %169 = icmp eq i32 %166, 2
  br i1 %169, label %170, label %220

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %170
  %176 = load i8, i8* %168, align 1
  %177 = zext i8 %176 to i64
  %178 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %182 = sext i8 %181 to i32
  %183 = icmp eq i32 %180, %182
  br i1 %183, label %208, label %220

184:                                              ; preds = %170
  %185 = bitcast %"class.WTF::StringImpl"* %167 to i16*
  %186 = load i16, i16* %185, align 2
  %187 = add i16 %186, -65
  %188 = icmp ult i16 %187, 26
  %189 = zext i1 %188 to i16
  %190 = shl nuw nsw i16 %189, 5
  %191 = or i16 %190, %186
  %192 = zext i16 %191 to i32
  %193 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %194 = sext i8 %193 to i32
  %195 = icmp eq i32 %192, %194
  br i1 %195, label %196, label %220

196:                                              ; preds = %184
  %197 = getelementptr inbounds i16, i16* %185, i64 1
  %198 = load i16, i16* %197, align 2
  %199 = add i16 %198, -65
  %200 = icmp ult i16 %199, 26
  %201 = zext i1 %200 to i16
  %202 = shl nuw nsw i16 %201, 5
  %203 = or i16 %202, %198
  %204 = zext i16 %203 to i32
  %205 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %206 = sext i8 %205 to i32
  %207 = icmp eq i32 %204, %206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #13
  br i1 %207, label %291, label %222

208:                                              ; preds = %175
  %209 = getelementptr inbounds i8, i8* %168, i64 1
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i64
  %212 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %216 = sext i8 %215 to i32
  %217 = icmp eq i32 %214, %216
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #13
  br i1 %217, label %291, label %222

218:                                              ; preds = %157
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #13
  br label %291

219:                                              ; preds = %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #13
  br label %291

220:                                              ; preds = %164, %184, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #13
  br label %222

221:                                              ; preds = %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #13
  br label %291

222:                                              ; preds = %208, %196, %220
  %223 = load i32, i32* %165, align 4
  %224 = icmp eq i32 %223, 3
  br i1 %224, label %225, label %291

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %249, label %230

230:                                              ; preds = %225
  %231 = load i8, i8* %168, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %237 = sext i8 %236 to i32
  %238 = icmp eq i32 %235, %237
  br i1 %238, label %239, label %291

239:                                              ; preds = %230
  %240 = getelementptr inbounds i8, i8* %168, i64 1
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i64
  %243 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i32
  %246 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 102), align 2
  %247 = sext i8 %246 to i32
  %248 = icmp eq i32 %245, %247
  br i1 %248, label %283, label %291

249:                                              ; preds = %225
  %250 = bitcast %"class.WTF::StringImpl"* %167 to i16*
  %251 = load i16, i16* %250, align 2
  %252 = add i16 %251, -65
  %253 = icmp ult i16 %252, 26
  %254 = zext i1 %253 to i16
  %255 = shl nuw nsw i16 %254, 5
  %256 = or i16 %255, %251
  %257 = zext i16 %256 to i32
  %258 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %259 = sext i8 %258 to i32
  %260 = icmp eq i32 %257, %259
  br i1 %260, label %261, label %291

261:                                              ; preds = %249
  %262 = getelementptr inbounds i16, i16* %250, i64 1
  %263 = load i16, i16* %262, align 2
  %264 = add i16 %263, -65
  %265 = icmp ult i16 %264, 26
  %266 = zext i1 %265 to i16
  %267 = shl nuw nsw i16 %266, 5
  %268 = or i16 %267, %263
  %269 = zext i16 %268 to i32
  %270 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 102), align 2
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %269, %271
  br i1 %272, label %273, label %291

273:                                              ; preds = %261
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 1, i32 1
  %275 = bitcast i32* %274 to i16*
  %276 = load i16, i16* %275, align 2
  %277 = add i16 %276, -65
  %278 = icmp ult i16 %277, 26
  %279 = zext i1 %278 to i16
  %280 = shl nuw nsw i16 %279, 5
  %281 = or i16 %280, %276
  %282 = icmp eq i16 %281, %268
  br i1 %282, label %290, label %291

283:                                              ; preds = %239
  %284 = getelementptr inbounds i8, i8* %168, i64 2
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i64
  %287 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %286
  %288 = load i8, i8* %287, align 1
  %289 = icmp eq i8 %288, %244
  br i1 %289, label %290, label %291

290:                                              ; preds = %273, %283
  br label %291

291:                                              ; preds = %221, %239, %230, %261, %249, %222, %290, %283, %273, %196, %208, %218, %219
  %292 = phi i32 [ 2, %219 ], [ 2, %218 ], [ 2, %208 ], [ 2, %196 ], [ 0, %290 ], [ 1, %283 ], [ 1, %273 ], [ 1, %222 ], [ 1, %249 ], [ 1, %261 ], [ 1, %230 ], [ 1, %239 ], [ 1, %221 ]
  %293 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 3
  %294 = load i32, i32* %293, align 8
  %295 = icmp eq i32 %292, %294
  br i1 %295, label %356, label %296

296:                                              ; preds = %291
  store i32 %292, i32* %293, align 8
  %297 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %298 = load i32, i32* %297, align 8
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  %301 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %300, label %306, label %302

302:                                              ; preds = %296
  %303 = bitcast %"class.blink::NodeData"** %301 to %"class.blink::NodeRareData"**
  %304 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %303, align 8
  %305 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %304, i64 0, i32 1, i32 0, i32 0
  br label %308

306:                                              ; preds = %296
  %307 = bitcast %"class.blink::NodeData"** %301 to %"class.blink::NodeRenderingData"**
  br label %308

308:                                              ; preds = %302, %306
  %309 = phi %"class.blink::NodeRenderingData"** [ %305, %302 ], [ %307, %306 ]
  %310 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %309, align 8
  %311 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %310, i64 0, i32 1
  %312 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %311, align 8
  %313 = icmp eq %"class.blink::LayoutObject"* %312, null
  br i1 %313, label %356, label %314

314:                                              ; preds = %308
  call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* nonnull %312, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason17kAttributeChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #13
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* nonnull %312, i8 zeroext 3) #13
  call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* nonnull %312, i32 1) #13
  br label %356

315:                                              ; preds = %117
  %316 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAccesskeyAttrE, align 8
  %317 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %316, i64 0, i32 0, i32 0
  %318 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %317, align 8
  %319 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %13, %318
  br i1 %319, label %356, label %320

320:                                              ; preds = %315
  %321 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMaxlengthAttrE, align 8
  %322 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %321, i64 0, i32 0, i32 0
  %323 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %322, align 8
  %324 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %13, %323
  br i1 %324, label %325, label %337

325:                                              ; preds = %320
  %326 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %327 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %326, align 8
  %328 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %327, i64 0, i32 2, i32 0, i32 0
  %329 = load %"class.blink::Document"*, %"class.blink::Document"** %328, align 8
  %330 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %329, i64 0, i32 2
  %331 = bitcast %"class.blink::UseCounter"* %330 to void (%"class.blink::UseCounter"*, i32)***
  %332 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %331, align 8
  %333 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %332, i64 3
  %334 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %333, align 8
  tail call void %334(%"class.blink::UseCounter"* %330, i32 1424) #13
  %335 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %336 = bitcast %"class.blink::ListedElement.base"* %335 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %336) #13
  br label %356

337:                                              ; preds = %320
  %338 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kMinlengthAttrE, align 8
  %339 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %338, i64 0, i32 0, i32 0
  %340 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %339, align 8
  %341 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %13, %340
  br i1 %341, label %342, label %354

342:                                              ; preds = %337
  %343 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %344 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %344, i64 0, i32 2, i32 0, i32 0
  %346 = load %"class.blink::Document"*, %"class.blink::Document"** %345, align 8
  %347 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %346, i64 0, i32 2
  %348 = bitcast %"class.blink::UseCounter"* %347 to void (%"class.blink::UseCounter"*, i32)***
  %349 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %348, align 8
  %350 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %349, i64 3
  %351 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %350, align 8
  tail call void %351(%"class.blink::UseCounter"* %347, i32 1425) #13
  %352 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %353 = bitcast %"class.blink::ListedElement.base"* %352 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %353) #13
  br label %356

354:                                              ; preds = %337
  %355 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::TextControlElement"* %355, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #13
  br label %356

356:                                              ; preds = %291, %308, %314, %116, %315, %342, %354, %325, %69
  ret void
}

declare zeroext i1 @_ZN5blink27ParseHTMLNonNegativeIntegerERKN3WTF6StringERj(%"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

declare void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

declare void @_ZN5blink18TextControlElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::TextControlElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement27TypeShouldForceLegacyLayoutEv(%"class.blink::HTMLTextAreaElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase22is_editing_ng_enabled_E, align 1, !range !3
  %3 = icmp ne i8 %2, 0
  %4 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_layout_ng_text_control_enabled_E, align 1
  %5 = icmp ne i8 %4, 0
  %6 = and i1 %3, %5
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 2
  %13 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %14 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %14, i64 3
  %16 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, align 8
  tail call void %16(%"class.blink::UseCounter"* %12, i32 3221) #13
  br label %17

17:                                               ; preds = %1, %7
  %18 = phi i1 [ true, %7 ], [ false, %1 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZN5blink19HTMLTextAreaElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = tail call %"class.blink::LayoutObject"* @_ZN5blink19LayoutObjectFactory26CreateTextControlMultiLineERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64) %4, %"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %2) #13
  ret %"class.blink::LayoutObject"* %5
}

declare %"class.blink::LayoutObject"* @_ZN5blink19LayoutObjectFactory26CreateTextControlMultiLineERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement16AppendToFormDataERNS_8FormDataE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::FormData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.blink::ListedElement.base"* %5 to %"class.blink::ListedElement"*
  %7 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ListedElement7GetNameEv(%"class.blink::ListedElement"* %6) #13
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %154, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %154, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %19, i32 10) #13
  %20 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %24, label %27

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement23ValueWithHardLineBreaksEv(%"class.blink::TextControlElement"* %25) #13
  br label %48

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #13
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !4

45:                                               ; preds = %36
  tail call void @llvm.trap() #13
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %46, %31, %27, %24
  %49 = phi %"class.WTF::StringImpl"* [ %26, %24 ], [ %29, %27 ], [ %29, %31 ], [ %29, %46 ]
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ListedElement7GetNameEv(%"class.blink::ListedElement"* %6) #13
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %51, i64 0, i32 0
  call void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringES4_(%"class.blink::FormData"* %1, %"class.WTF::String"* dereferenceable(8) %52, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %53 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kDirnameAttrE, align 8
  %54 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %54, align 8
  %56 = icmp eq %"class.blink::ElementData"* %55, null
  br i1 %56, label %107, label %57

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %55, i64 0, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::ElementData"* %55 to %"class.blink::UniqueElementData"*
  %64 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %55, i64 1, i32 1
  %65 = bitcast %"class.blink::Member.14"* %64 to %"class.blink::Attribute"**
  %66 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %63, i64 0, i32 2, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  br label %74

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %55, i64 1
  %71 = bitcast %"class.blink::ElementData"* %70 to %"class.blink::Attribute"*
  %72 = lshr i32 %59, 1
  %73 = and i32 %72, 268435455
  br label %74

74:                                               ; preds = %69, %62
  %75 = phi %"class.blink::Attribute"* [ %71, %69 ], [ %66, %62 ]
  %76 = phi i32 [ %73, %69 ], [ %68, %62 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %75, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %107, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %53, i64 0, i32 0, i32 0
  %82 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %82, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %85

85:                                               ; preds = %100, %80
  %86 = phi %"class.blink::Attribute"* [ %75, %80 ], [ %101, %100 ]
  %87 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %88, %82
  br i1 %89, label %103, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %92, %93
  br i1 %94, label %95, label %100

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 4, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %97, %98
  br i1 %99, label %103, label %100

100:                                              ; preds = %95, %90
  %101 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 1
  %102 = icmp eq %"class.blink::Attribute"* %101, %78
  br i1 %102, label %107, label %85

103:                                              ; preds = %95, %85
  %104 = icmp eq %"class.blink::Attribute"* %86, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %86, i64 0, i32 1
  br label %109

107:                                              ; preds = %100, %103, %74, %48
  %108 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %109

109:                                              ; preds = %105, %107
  %110 = phi %"class.WTF::AtomicString"* [ %108, %107 ], [ %106, %105 ]
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %136, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %110, i64 0, i32 0
  %116 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #13
  %117 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %118 = call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement20DirectionForFormDataEv(%"class.blink::TextControlElement"* %117) #13
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %119, align 8
  call void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringES4_(%"class.blink::FormData"* %1, %"class.WTF::String"* dereferenceable(8) %115, %"class.WTF::String"* nonnull dereferenceable(8) %4) #13
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #13
  br label %135

135:                                              ; preds = %114, %131, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #13
  br label %136

136:                                              ; preds = %135, %109
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #13
  br label %153

153:                                              ; preds = %136, %149, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %154

154:                                              ; preds = %2, %11, %153
  ret void
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ListedElement7GetNameEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement23ValueWithHardLineBreaksEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare void @_ZN5blink8FormData17AppendFromElementERKN3WTF6StringES4_(%"class.blink::FormData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement20DirectionForFormDataEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink19HTMLTextAreaElement16AppendToFormDataERNS_8FormDataE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::FormData"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast i32* %3 to %"class.blink::HTMLTextAreaElement"*
  tail call void @_ZN5blink19HTMLTextAreaElement16AppendToFormDataERNS_8FormDataE(%"class.blink::HTMLTextAreaElement"* %4, %"class.blink::FormData"* dereferenceable(56) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement9ResetImplEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19HTMLTextAreaElement12defaultValueEv(%"class.blink::HTMLTextAreaElement"* %0)
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"** %5, align 8
  call void @_ZN5blink19HTMLTextAreaElement14SetValueCommonERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2, i32 0, i32 0) #13
  %6 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 6
  store i8 0, i8* %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement19HasCustomFocusLogicEv(%"class.blink::HTMLTextAreaElement"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement19IsKeyboardFocusableEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink7Element22IsBaseElementFocusableEv(%"class.blink::Element"* %2) #13
  ret i1 %3
}

declare zeroext i1 @_ZNK5blink7Element22IsBaseElementFocusableEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement25MayTriggerVirtualKeyboardEv(%"class.blink::HTMLTextAreaElement"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::HTMLTextAreaElement"*, i32, %"class.blink::FocusOptions"* nocapture readonly) unnamed_addr #0 align 2 {
  switch i32 %1, label %6 [
    i32 0, label %4
    i32 1, label %4
    i32 2, label %25
  ]

4:                                                ; preds = %3, %3
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement22RestoreCachedSelectionEv(%"class.blink::TextControlElement"* %5) #13
  br label %6

6:                                                ; preds = %3, %4
  %7 = getelementptr inbounds %"class.blink::FocusOptions", %"class.blink::FocusOptions"* %2, i64 0, i32 2
  %8 = load i8, i8* %7, align 1, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %14) #13
  %16 = icmp eq %"class.blink::LocalFrame"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %10
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %20) #13
  %22 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %21, i64 0, i32 14, i32 0, i32 0
  %23 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %22, align 8
  %24 = tail call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() #13
  tail call void @_ZN5blink14FrameSelection15RevealSelectionERKNS_5mojom5blink15ScrollAlignmentENS_18RevealExtentOptionE(%"class.blink::FrameSelection"* %23, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %24, i32 1) #13
  br label %25

25:                                               ; preds = %6, %10, %17, %3
  ret void
}

declare void @_ZN5blink18TextControlElement22RestoreCachedSelectionEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink14FrameSelection15RevealSelectionERKNS_5mojom5blink15ScrollAlignmentENS_18RevealExtentOptionE(%"class.blink::FrameSelection"*, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12), i32) local_unnamed_addr #1

declare dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14CenterIfNeededEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement19DefaultEventHandlerERNS_5EventE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %6, label %12, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %10 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %10, i64 0, i32 1, i32 0, i32 0
  br label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRenderingData"**
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi %"class.blink::NodeRenderingData"** [ %11, %8 ], [ %13, %12 ]
  %16 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %16, i64 0, i32 1
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutObject"* %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::Event"* %1 to i1 (%"class.blink::Event"*)***
  %22 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %22, i64 12
  %24 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::Event"* %1) #13
  br i1 %25, label %43, label %26

26:                                               ; preds = %20
  %27 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %21, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %27, i64 21
  %29 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::Event"* %1) #13
  br i1 %30, label %43, label %31

31:                                               ; preds = %26
  %32 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink21event_interface_names11kWheelEventE, align 8
  %33 = tail call zeroext i1 @_ZNK5blink5Event12HasInterfaceERKN3WTF12AtomicStringE(%"class.blink::Event"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %32) #13
  br i1 %33, label %43, label %34

34:                                               ; preds = %31
  %35 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kBlurE, align 8
  %36 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = load i32, i32* %3, align 8
  br label %45

43:                                               ; preds = %34, %31, %26, %20
  %44 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement12ForwardEventERNS_5EventE(%"class.blink::TextControlElement"* %44, %"class.blink::Event"* dereferenceable(104) %1) #13
  br label %69

45:                                               ; preds = %41, %14
  %46 = phi i32 [ %42, %41 ], [ %4, %14 ]
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRareData"**
  %51 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %51, i64 0, i32 1, i32 0, i32 0
  br label %55

53:                                               ; preds = %45
  %54 = bitcast %"class.blink::NodeData"** %7 to %"class.blink::NodeRenderingData"**
  br label %55

55:                                               ; preds = %49, %53
  %56 = phi %"class.blink::NodeRenderingData"** [ %52, %49 ], [ %54, %53 ]
  %57 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %57, i64 0, i32 1
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %58, align 8
  %60 = icmp eq %"class.blink::LayoutObject"* %59, null
  br i1 %60, label %69, label %61

61:                                               ; preds = %55
  %62 = bitcast %"class.blink::Event"* %1 to i1 (%"class.blink::Event"*)***
  %63 = load i1 (%"class.blink::Event"*)**, i1 (%"class.blink::Event"*)*** %62, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %63, i64 23
  %65 = load i1 (%"class.blink::Event"*)*, i1 (%"class.blink::Event"*)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::Event"* %1) #13
  br i1 %66, label %67, label %69

67:                                               ; preds = %61
  %68 = bitcast %"class.blink::Event"* %1 to %"class.blink::BeforeTextInsertedEvent"*
  tail call void @_ZNK5blink19HTMLTextAreaElement29HandleBeforeTextInsertedEventEPNS_23BeforeTextInsertedEventE(%"class.blink::HTMLTextAreaElement"* %0, %"class.blink::BeforeTextInsertedEvent"* %68)
  br label %69

69:                                               ; preds = %55, %61, %67, %43
  %70 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement19DefaultEventHandlerERNS_5EventE(%"class.blink::TextControlElement"* %70, %"class.blink::Event"* dereferenceable(104) %1) #13
  ret void
}

declare zeroext i1 @_ZNK5blink5Event12HasInterfaceERKN3WTF12AtomicStringE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink18TextControlElement12ForwardEventERNS_5EventE(%"class.blink::TextControlElement"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19HTMLTextAreaElement29HandleBeforeTextInsertedEventEPNS_23BeforeTextInsertedEventE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::BeforeTextInsertedEvent"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZNK5blink18TextControlElement9maxLengthEv(%"class.blink::TextControlElement"* %3) #13
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %276, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %3) #13
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %58, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %58, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  %16 = bitcast %"class.WTF::StringImpl"* %15 to i8*
  %17 = bitcast %"class.WTF::StringImpl"* %15 to i16*
  %18 = zext i32 %11 to i64
  br label %19

19:                                               ; preds = %54, %13
  %20 = phi i64 [ 0, %13 ], [ %56, %54 ]
  %21 = phi i32 [ 0, %13 ], [ %55, %54 ]
  %22 = load atomic i32, i32* %14 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds i8, i8* %16, i64 %20
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i16
  br label %32

29:                                               ; preds = %19
  %30 = getelementptr inbounds i16, i16* %17, i64 %20
  %31 = load i16, i16* %30, align 2
  br label %32

32:                                               ; preds = %29, %25
  %33 = phi i16 [ %28, %25 ], [ %31, %29 ]
  %34 = icmp eq i16 %33, 13
  br i1 %34, label %35, label %54

35:                                               ; preds = %32
  %36 = add nuw nsw i64 %20, 1
  %37 = icmp ult i64 %36, %18
  br i1 %37, label %38, label %54

38:                                               ; preds = %35
  %39 = load atomic i32, i32* %14 monotonic, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds i8, i8* %16, i64 %36
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i16
  br label %49

46:                                               ; preds = %38
  %47 = getelementptr inbounds i16, i16* %17, i64 %36
  %48 = load i16, i16* %47, align 2
  br label %49

49:                                               ; preds = %46, %42
  %50 = phi i16 [ %45, %42 ], [ %48, %46 ]
  %51 = icmp eq i16 %50, 10
  %52 = zext i1 %51 to i32
  %53 = add i32 %21, %52
  br label %54

54:                                               ; preds = %49, %35, %32
  %55 = phi i32 [ %21, %35 ], [ %21, %32 ], [ %53, %49 ]
  %56 = add nuw nsw i64 %20, 1
  %57 = icmp eq i64 %56, %18
  br i1 %57, label %58, label %19

58:                                               ; preds = %54, %9, %6
  %59 = phi i32 [ 0, %6 ], [ 0, %9 ], [ %55, %54 ]
  %60 = phi i32 [ 0, %6 ], [ 0, %9 ], [ %11, %54 ]
  %61 = sub i32 %60, %59
  %62 = getelementptr inbounds %"class.blink::BeforeTextInsertedEvent", %"class.blink::BeforeTextInsertedEvent"* %1, i64 0, i32 1
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %115, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %115, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %73 = bitcast %"class.WTF::StringImpl"* %72 to i8*
  %74 = bitcast %"class.WTF::StringImpl"* %72 to i16*
  %75 = zext i32 %68 to i64
  br label %76

76:                                               ; preds = %111, %70
  %77 = phi i64 [ 0, %70 ], [ %113, %111 ]
  %78 = phi i32 [ 0, %70 ], [ %112, %111 ]
  %79 = load atomic i32, i32* %71 monotonic, align 4
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds i8, i8* %73, i64 %77
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i16
  br label %89

86:                                               ; preds = %76
  %87 = getelementptr inbounds i16, i16* %74, i64 %77
  %88 = load i16, i16* %87, align 2
  br label %89

89:                                               ; preds = %86, %82
  %90 = phi i16 [ %85, %82 ], [ %88, %86 ]
  %91 = icmp eq i16 %90, 13
  br i1 %91, label %92, label %111

92:                                               ; preds = %89
  %93 = add nuw nsw i64 %77, 1
  %94 = icmp ult i64 %93, %75
  br i1 %94, label %95, label %111

95:                                               ; preds = %92
  %96 = load atomic i32, i32* %71 monotonic, align 4
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds i8, i8* %73, i64 %93
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  br label %106

103:                                              ; preds = %95
  %104 = getelementptr inbounds i16, i16* %74, i64 %93
  %105 = load i16, i16* %104, align 2
  br label %106

106:                                              ; preds = %103, %99
  %107 = phi i16 [ %102, %99 ], [ %105, %103 ]
  %108 = icmp eq i16 %107, 10
  %109 = zext i1 %108 to i32
  %110 = add i32 %78, %109
  br label %111

111:                                              ; preds = %106, %92, %89
  %112 = phi i32 [ %78, %92 ], [ %78, %89 ], [ %110, %106 ]
  %113 = add nuw nsw i64 %77, 1
  %114 = icmp eq i64 %113, %75
  br i1 %114, label %115, label %76

115:                                              ; preds = %111, %66, %58
  %116 = phi i32 [ 0, %58 ], [ 0, %66 ], [ %112, %111 ]
  %117 = phi i32 [ 0, %58 ], [ 0, %66 ], [ %68, %111 ]
  %118 = sub i32 %61, %116
  %119 = add i32 %118, %117
  %120 = icmp ult i32 %119, %4
  br i1 %120, label %262, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = trunc i32 %123 to i8
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %207

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = tail call zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"* %127) #13
  br i1 %128, label %129, label %207

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %131 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %131, i64 0, i32 2, i32 0, i32 0
  %133 = load %"class.blink::Document"*, %"class.blink::Document"** %132, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %133, i32 10) #13
  %134 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %130, align 8
  %135 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %134, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::Document"*, %"class.blink::Document"** %135, align 8
  %137 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %136) #13
  %138 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %137, i64 0, i32 14, i32 0, i32 0
  %139 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %138, align 8
  %140 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14FrameSelection12SelectedTextEv(%"class.blink::FrameSelection"* %139) #13
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %207, label %142

142:                                              ; preds = %129
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %193, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 1
  %149 = bitcast %"class.WTF::StringImpl"* %148 to i8*
  %150 = bitcast %"class.WTF::StringImpl"* %148 to i16*
  %151 = zext i32 %144 to i64
  br label %152

152:                                              ; preds = %187, %146
  %153 = phi i64 [ 0, %146 ], [ %189, %187 ]
  %154 = phi i32 [ 0, %146 ], [ %188, %187 ]
  %155 = load atomic i32, i32* %147 monotonic, align 4
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %162, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds i8, i8* %149, i64 %153
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i16
  br label %165

162:                                              ; preds = %152
  %163 = getelementptr inbounds i16, i16* %150, i64 %153
  %164 = load i16, i16* %163, align 2
  br label %165

165:                                              ; preds = %162, %158
  %166 = phi i16 [ %161, %158 ], [ %164, %162 ]
  %167 = icmp eq i16 %166, 13
  br i1 %167, label %168, label %187

168:                                              ; preds = %165
  %169 = add nuw nsw i64 %153, 1
  %170 = icmp ult i64 %169, %151
  br i1 %170, label %171, label %187

171:                                              ; preds = %168
  %172 = load atomic i32, i32* %147 monotonic, align 4
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %179, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds i8, i8* %149, i64 %169
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i16
  br label %182

179:                                              ; preds = %171
  %180 = getelementptr inbounds i16, i16* %150, i64 %169
  %181 = load i16, i16* %180, align 2
  br label %182

182:                                              ; preds = %179, %175
  %183 = phi i16 [ %178, %175 ], [ %181, %179 ]
  %184 = icmp eq i16 %183, 10
  %185 = zext i1 %184 to i32
  %186 = add i32 %154, %185
  br label %187

187:                                              ; preds = %182, %168, %165
  %188 = phi i32 [ %154, %168 ], [ %154, %165 ], [ %186, %182 ]
  %189 = add nuw nsw i64 %153, 1
  %190 = icmp eq i64 %189, %151
  br i1 %190, label %191, label %152

191:                                              ; preds = %187
  %192 = sub i32 %144, %188
  br label %193

193:                                              ; preds = %191, %142
  %194 = phi i32 [ %192, %191 ], [ 0, %142 ]
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %193
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %193
  %204 = phi i32 [ %202, %201 ], [ %200, %193 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #13
  br label %207

207:                                              ; preds = %129, %121, %206, %203, %126
  %208 = phi i32 [ 0, %126 ], [ %194, %203 ], [ %194, %206 ], [ 0, %121 ], [ 0, %129 ]
  %209 = sub i32 %61, %208
  %210 = tail call i32 @llvm.usub.sat.i32(i32 %4, i32 %209)
  %211 = tail call %"class.WTF::StringImpl"* @_ZN5blink19HTMLTextAreaElement22SanitizeUserInputValueERKN3WTF6StringEj(%"class.WTF::String"* dereferenceable(8) %62, i32 %210)
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %230, label %213

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %230

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = zext i32 %220 to i33
  %222 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %221, i33 1) #13
  %223 = extractvalue { i33, i1 } %222, 1
  %224 = extractvalue { i33, i1 } %222, 0
  %225 = icmp slt i33 %224, 0
  %226 = or i1 %223, %225
  br i1 %226, label %227, label %228, !prof !4

227:                                              ; preds = %218
  tail call void @llvm.trap() #13
  unreachable

228:                                              ; preds = %218
  %229 = trunc i33 %224 to i32
  store i32 %229, i32* %219, align 4
  br label %230

230:                                              ; preds = %228, %213, %207
  %231 = ptrtoint %"class.WTF::StringImpl"* %211 to i64
  %232 = bitcast %"class.WTF::String"* %62 to i64*
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  store i64 %231, i64* %232, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %233) #13
  br label %248

248:                                              ; preds = %230, %244, %247
  br i1 %212, label %262, label %249

249:                                              ; preds = %248
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #13
  br label %262

262:                                              ; preds = %261, %258, %248, %115
  br i1 %8, label %276, label %263

263:                                              ; preds = %262
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  br i1 %267, label %270, label %272

270:                                              ; preds = %263
  %271 = add i32 %269, -1
  store i32 %271, i32* %268, align 4
  br label %272

272:                                              ; preds = %270, %263
  %273 = phi i32 [ %271, %270 ], [ %269, %263 ]
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %272
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #13
  br label %276

276:                                              ; preds = %275, %272, %262, %2
  ret void
}

declare void @_ZN5blink18TextControlElement19DefaultEventHandlerERNS_5EventE(%"class.blink::TextControlElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement17SubtreeHasChangedEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement37AddPlaceholderBreakElementIfNecessaryEv(%"class.blink::TextControlElement"* %3) #13
  tail call void @_ZN5blink18TextControlElement35SetValueBeforeFirstUserEditIfNotSetEv(%"class.blink::TextControlElement"* %3) #13
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %3) #13
  %5 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %6 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5
  %7 = bitcast %"class.WTF::String"* %6 to i64*
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  store i64 %5, i64* %7, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #13
  br label %24

24:                                               ; preds = %1, %20, %23
  %25 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.blink::ListedElement.base"* %25 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"* %26) #13
  %27 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 6
  store i8 1, i8* %27, align 8
  tail call void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"* %3) #13
  %28 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %24, %32, %47
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %50, align 8
  call void @_ZN5blink18TextControlElement23CheckIfValueWasRevertedERKN3WTF6StringE(%"class.blink::TextControlElement"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %2) #13
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #13
  br label %66

66:                                               ; preds = %49, %62, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %26) #13
  %67 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElement"*
  call void @_ZN5blink22HTMLFormControlElement16SetAutofillStateENS_16WebAutofillStateE(%"class.blink::HTMLFormControlElement"* %67, i32 0) #13
  call void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"* %3) #13
  %68 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = trunc i32 %70 to i8
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %89

73:                                               ; preds = %66
  %74 = call zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"* %68) #13
  br i1 %74, label %75, label %89

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = call zeroext i1 @_ZN5blink11HTMLElement36CalculateAndAdjustAutoDirectionalityEPNS_4NodeE(%"class.blink::HTMLElement"* %76, %"class.blink::Node"* %68) #13
  %78 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::Document"*, %"class.blink::Document"** %80, align 8
  %82 = call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %81) #13
  %83 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %82, i64 0, i32 7, i32 0, i32 0
  %84 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %83, align 8
  %85 = bitcast %"class.blink::ChromeClient"* %84 to void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)***
  %86 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)** %86, i64 86
  %88 = load void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::HTMLFormControlElement"*)** %87, align 8
  call void %88(%"class.blink::ChromeClient"* %84, %"class.blink::HTMLFormControlElement"* dereferenceable(200) %67) #13
  br label %89

89:                                               ; preds = %66, %73, %75
  ret void
}

declare void @_ZN5blink18TextControlElement37AddPlaceholderBreakElementIfNecessaryEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare void @_ZN5blink18TextControlElement35SetValueBeforeFirstUserEditIfNotSetEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement11UpdateValueEv(%"class.blink::HTMLTextAreaElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %3 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* %2) #13
  %4 = ptrtoint %"class.WTF::StringImpl"* %3 to i64
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5
  %6 = bitcast %"class.WTF::String"* %5 to i64*
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %4, i64* %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #13
  br label %23

23:                                               ; preds = %22, %19, %1
  %24 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"class.blink::ListedElement.base"* %24 to %"class.blink::ListedElement"*
  tail call void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"* %25) #13
  %26 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 6
  store i8 1, i8* %26, align 8
  tail call void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"* %2) #13
  ret void
}

declare void @_ZN5blink18TextControlElement23CheckIfValueWasRevertedERKN3WTF6StringE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement16SetAutofillStateENS_16WebAutofillStateE(%"class.blink::HTMLFormControlElement"*, i32) local_unnamed_addr #1

declare void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11HTMLElement36CalculateAndAdjustAutoDirectionalityEPNS_4NodeE(%"class.blink::HTMLElement"*, %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #1

declare i32 @_ZNK5blink18TextControlElement9maxLengthEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink14FrameSelection12SelectedTextEv(%"class.blink::FrameSelection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink19HTMLTextAreaElement22SanitizeUserInputValueERKN3WTF6StringEj(%"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %9 = bitcast %"class.WTF::StringImpl"* %8 to i8*
  %10 = bitcast %"class.WTF::StringImpl"* %8 to i16*
  br label %11

11:                                               ; preds = %66, %2
  %12 = phi i64 [ %67, %66 ], [ 0, %2 ]
  %13 = phi i32 [ %59, %66 ], [ 0, %2 ]
  br label %14

14:                                               ; preds = %11, %55
  %15 = phi i64 [ %42, %55 ], [ %12, %11 ]
  br i1 %5, label %18, label %16

16:                                               ; preds = %14
  %17 = load i32, i32* %6, align 4
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi i32 [ %17, %16 ], [ 0, %14 ]
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %15, %20
  br i1 %21, label %22, label %68

22:                                               ; preds = %18
  br i1 %5, label %58, label %23

23:                                               ; preds = %22
  %24 = load i32, i32* %6, align 4
  %25 = zext i32 %24 to i64
  %26 = icmp ult i64 %15, %25
  br i1 %26, label %27, label %58

27:                                               ; preds = %23
  %28 = load atomic i32, i32* %7 monotonic, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds i8, i8* %9, i64 %15
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  br label %38

35:                                               ; preds = %27
  %36 = getelementptr inbounds i16, i16* %10, i64 %15
  %37 = load i16, i16* %36, align 2
  br label %38

38:                                               ; preds = %31, %35
  %39 = phi i16 [ %34, %31 ], [ %37, %35 ]
  %40 = icmp eq i16 %39, 13
  br i1 %40, label %41, label %58

41:                                               ; preds = %38
  %42 = add nuw nsw i64 %15, 1
  %43 = icmp ult i64 %42, %25
  br i1 %43, label %44, label %58

44:                                               ; preds = %41
  %45 = load atomic i32, i32* %7 monotonic, align 4
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds i8, i8* %9, i64 %42
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i16
  br label %55

52:                                               ; preds = %44
  %53 = getelementptr inbounds i16, i16* %10, i64 %42
  %54 = load i16, i16* %53, align 2
  br label %55

55:                                               ; preds = %48, %52
  %56 = phi i16 [ %51, %48 ], [ %54, %52 ]
  %57 = icmp eq i16 %56, 10
  br i1 %57, label %14, label %58

58:                                               ; preds = %22, %23, %55, %41, %38
  %59 = add i32 %13, 1
  %60 = icmp eq i32 %59, %1
  br i1 %60, label %61, label %64

61:                                               ; preds = %58
  %62 = trunc i64 %15 to i32
  %63 = add nuw i32 %62, 1
  br label %71

64:                                               ; preds = %58
  %65 = icmp ugt i32 %59, %1
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = add nuw nsw i64 %15, 1
  br label %11

68:                                               ; preds = %64, %18
  %69 = trunc i64 %15 to i32
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %88, label %71

71:                                               ; preds = %61, %68
  %72 = phi i32 [ %63, %61 ], [ %69, %68 ]
  %73 = add i32 %72, -1
  br i1 %5, label %88, label %74

74:                                               ; preds = %71
  %75 = load i32, i32* %6, align 4
  %76 = icmp ugt i32 %75, %73
  br i1 %76, label %77, label %88

77:                                               ; preds = %74
  %78 = load atomic i32, i32* %7 monotonic, align 4
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %88

81:                                               ; preds = %77
  %82 = zext i32 %73 to i64
  %83 = getelementptr inbounds i16, i16* %10, i64 %82
  %84 = load i16, i16* %83, align 2
  %85 = and i16 %84, -1024
  %86 = icmp eq i16 %85, -10240
  %87 = select i1 %86, i32 %73, i32 %72
  br label %88

88:                                               ; preds = %81, %74, %71, %77, %68
  %89 = phi i32 [ 0, %68 ], [ %72, %74 ], [ %72, %71 ], [ %87, %81 ], [ %72, %77 ]
  %90 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %0, i32 0, i32 %89) #13
  ret %"class.WTF::StringImpl"* %90
}

declare void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement14SetValueCommonERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #13
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !4

27:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %4, %13, %28
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %33 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 2, i32* %35, align 8
  %36 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13
  %37 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %32, i64* %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i8** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 1, i32* %39, align 8
  br i1 %12, label %55, label %40

40:                                               ; preds = %30
  %41 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceERKNS_10StringViewES3_(%"class.WTF::StringImpl"* nonnull %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #13
  %42 = ptrtoint %"class.WTF::StringImpl"* %41 to i64
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %40
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %40
  %52 = phi i32 [ %50, %49 ], [ %48, %40 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #13
  br label %55

55:                                               ; preds = %30, %51, %54
  %56 = phi i64 [ %11, %30 ], [ %42, %54 ], [ %42, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  %57 = inttoptr i64 %56 to %"class.WTF::StringImpl"*
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %74, label %59

59:                                               ; preds = %55
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* nonnull %57, i16 zeroext 13, i16 zeroext 10) #13
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %59
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %59
  %71 = phi i32 [ %69, %68 ], [ %67, %59 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #13
  br label %74

74:                                               ; preds = %55, %70, %73
  %75 = phi i64 [ 0, %55 ], [ %61, %73 ], [ %61, %70 ]
  %76 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %77 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #13
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %78, align 8
  call void @_ZN5blink18TextControlElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::TextControlElement"* %76, %"class.WTF::String"* nonnull dereferenceable(8) %7) #13
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #13
  br label %94

94:                                               ; preds = %74, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #13
  %95 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %115, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %118

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i33
  %107 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %106, i33 1) #13
  %108 = extractvalue { i33, i1 } %107, 1
  %109 = extractvalue { i33, i1 } %107, 0
  %110 = icmp slt i33 %109, 0
  %111 = or i1 %108, %110
  br i1 %111, label %112, label %113, !prof !4

112:                                              ; preds = %103
  call void @llvm.trap() #13
  unreachable

113:                                              ; preds = %103
  %114 = trunc i33 %109 to i32
  store i32 %114, i32* %104, align 4
  br label %118

115:                                              ; preds = %94
  %116 = inttoptr i64 %75 to %"class.WTF::StringImpl"*
  %117 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"* null) #13
  br i1 %117, label %261, label %133

118:                                              ; preds = %98, %113
  %119 = inttoptr i64 %75 to %"class.WTF::StringImpl"*
  %120 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"* nonnull %96) #13
  %121 = load atomic i32, i32* %99 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %118
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %118
  %129 = phi i32 [ %127, %126 ], [ %125, %118 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #13
  br i1 %120, label %261, label %133

132:                                              ; preds = %128
  br i1 %120, label %261, label %133

133:                                              ; preds = %131, %115, %132
  %134 = phi %"class.WTF::StringImpl"* [ %116, %115 ], [ %119, %132 ], [ %119, %131 ]
  %135 = icmp eq i32 %3, 1
  br i1 %135, label %136, label %139

136:                                              ; preds = %133
  %137 = call i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"* %76) #13
  %138 = call i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"* %76) #13
  br label %139

139:                                              ; preds = %133, %136
  %140 = phi i32 [ %137, %136 ], [ 0, %133 ]
  %141 = phi i32 [ %138, %136 ], [ 0, %133 ]
  %142 = icmp eq i32 %2, 0
  br i1 %142, label %144, label %143

143:                                              ; preds = %139
  call void @_ZN5blink18TextControlElement35SetValueBeforeFirstUserEditIfNotSetEv(%"class.blink::TextControlElement"* %76) #13
  br label %144

144:                                              ; preds = %139, %143
  %145 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5
  %146 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %146, label %164, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i33
  %156 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %155, i33 1) #13
  %157 = extractvalue { i33, i1 } %156, 1
  %158 = extractvalue { i33, i1 } %156, 0
  %159 = icmp slt i33 %158, 0
  %160 = or i1 %157, %159
  br i1 %160, label %161, label %162, !prof !4

161:                                              ; preds = %152
  call void @llvm.trap() #13
  unreachable

162:                                              ; preds = %152
  %163 = trunc i33 %158 to i32
  store i32 %163, i32* %153, align 4
  br label %164

164:                                              ; preds = %162, %147, %144
  %165 = bitcast %"class.WTF::String"* %145 to i64*
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %145, i64 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  store i64 %75, i64* %165, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #13
  br label %182

182:                                              ; preds = %164, %178, %181
  call void @_ZN5blink18TextControlElement19SetInnerEditorValueERKN3WTF6StringE(%"class.blink::TextControlElement"* %76, %"class.WTF::String"* dereferenceable(8) %145) #13
  br i1 %142, label %183, label %185

183:                                              ; preds = %182
  %184 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 3
  store i8 0, i8* %184, align 8
  br label %186

185:                                              ; preds = %182
  call void @_ZN5blink18TextControlElement23CheckIfValueWasRevertedERKN3WTF6StringE(%"class.blink::TextControlElement"* %76, %"class.WTF::String"* dereferenceable(8) %145) #13
  br label %186

186:                                              ; preds = %185, %183
  call void @_ZN5blink18TextControlElement27UpdatePlaceholderVisibilityEv(%"class.blink::TextControlElement"* %76) #13
  %187 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = bitcast %"class.blink::StyleChangeReasonForTracing"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #13
  %189 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %190 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %189, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %210, label %193

193:                                              ; preds = %186
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = zext i32 %200 to i33
  %202 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %201, i33 1) #13
  %203 = extractvalue { i33, i1 } %202, 1
  %204 = extractvalue { i33, i1 } %202, 0
  %205 = icmp slt i33 %204, 0
  %206 = or i1 %203, %205
  br i1 %206, label %207, label %208, !prof !4

207:                                              ; preds = %198
  call void @llvm.trap() #13
  unreachable

208:                                              ; preds = %198
  %209 = trunc i33 %204 to i32
  store i32 %209, i32* %199, align 4
  br label %210

210:                                              ; preds = %186, %193, %208
  %211 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %8, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason13kControlValueE, i64 0, i64 0), i8** %211, align 8
  %212 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %212, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %187, i32 65536, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %8) #13
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #13
  br label %228

228:                                              ; preds = %210, %224, %227
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #13
  %229 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %230 = bitcast %"class.blink::ListedElement.base"* %229 to %"class.blink::ListedElement"*
  call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %230) #13
  %231 = icmp eq i32 %3, 0
  br i1 %231, label %232, label %241

232:                                              ; preds = %228
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %238, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 1
  %237 = load i32, i32* %236, align 4
  br label %238

238:                                              ; preds = %232, %235
  %239 = phi i32 [ %237, %235 ], [ 0, %232 ]
  %240 = call zeroext i1 @_ZN5blink18TextControlElement17SetSelectionRangeEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"* %76, i32 %239, i32 %239, i32 0) #13
  br label %255

241:                                              ; preds = %228
  br i1 %135, label %242, label %255

242:                                              ; preds = %241
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %248, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 1
  %247 = load i32, i32* %246, align 4
  br label %248

248:                                              ; preds = %242, %245
  %249 = phi i32 [ %247, %245 ], [ 0, %242 ]
  %250 = icmp ult i32 %140, %249
  %251 = select i1 %250, i32 %140, i32 %249
  %252 = icmp ult i32 %141, %249
  %253 = select i1 %252, i32 %141, i32 %249
  %254 = call zeroext i1 @_ZN5blink18TextControlElement17SetSelectionRangeEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"* %76, i32 %251, i32 %253, i32 0) #13
  br label %255

255:                                              ; preds = %241, %248, %238
  call void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"* %230) #13
  switch i32 %2, label %261 [
    i32 1, label %256
    i32 2, label %257
    i32 3, label %259
  ]

256:                                              ; preds = %255
  call void @_ZN5blink18TextControlElement30DispatchFormControlChangeEventEv(%"class.blink::TextControlElement"* %76) #13
  br label %261

257:                                              ; preds = %255
  %258 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  call void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"* %258) #13
  br label %261

259:                                              ; preds = %255
  %260 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElementWithState"*
  call void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"* %260) #13
  call void @_ZN5blink18TextControlElement30DispatchFormControlChangeEventEv(%"class.blink::TextControlElement"* %76) #13
  br label %261

261:                                              ; preds = %256, %257, %259, %255, %131, %115, %132
  %262 = phi %"class.WTF::StringImpl"* [ %116, %115 ], [ %119, %132 ], [ %119, %131 ], [ %134, %255 ], [ %134, %259 ], [ %134, %257 ], [ %134, %256 ]
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %261
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #13
  br label %277

277:                                              ; preds = %261, %273, %276
  ret void
}

declare void @_ZN5blink18TextControlElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink18TextControlElement17SetSelectionRangeEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink18TextControlElement30DispatchFormControlChangeEventEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare void @_ZN5blink31HTMLFormControlElementWithState18DispatchInputEventEv(%"class.blink::HTMLFormControlElementWithState"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #13
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #13
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement15setDefaultValueERKN3WTF6StringE(%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"* %3, %"class.WTF::String"* dereferenceable(8) %1) #13
  ret void
}

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement17SetSuggestedValueERKN3WTF6StringE(%"class.blink::TextControlElement"* %4, %"class.WTF::String"* dereferenceable(8) %1) #13
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::StyleChangeReasonForTracing"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #13
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #13
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %2, %11, %26
  %29 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason13kControlValueE, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %30, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %5, i32 65536, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %3) #13
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #13
  br label %46

46:                                               ; preds = %28, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19HTMLTextAreaElement17validationMessageEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement12willValidateEv(%"class.blink::HTMLFormControlElement"* %2) #13
  br i1 %3, label %4, label %150

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.blink::ListedElement.base"* %5 to %"class.blink::ListedElement"*
  %7 = tail call zeroext i1 @_ZNK5blink13ListedElement11CustomErrorEv(%"class.blink::ListedElement"* %6) #13
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"* %6) #13
  %10 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  br label %150

11:                                               ; preds = %4
  %12 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %2) #13
  br i1 %12, label %13, label %56

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"* %2) #13
  br i1 %14, label %56, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %51, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %36

26:                                               ; preds = %19
  %27 = zext i32 %25 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #13
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !4

33:                                               ; preds = %26
  tail call void @llvm.trap() #13
  unreachable

34:                                               ; preds = %26
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %24, align 4
  br label %36

36:                                               ; preds = %34, %19
  %37 = phi i32 [ %35, %34 ], [ %25, %19 ]
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  %41 = load atomic i32, i32* %20 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %36
  %45 = add i32 %37, -1
  store i32 %45, i32* %24, align 4
  br label %46

46:                                               ; preds = %44, %36
  %47 = phi i32 [ %45, %44 ], [ %37, %36 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #13
  br i1 %40, label %51, label %56

50:                                               ; preds = %46
  br i1 %40, label %51, label %56

51:                                               ; preds = %15, %49, %50
  %52 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %52) #13
  %54 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %53, i32 25041) #13
  %55 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  br label %150

56:                                               ; preds = %11, %13, %49, %50
  %57 = tail call zeroext i1 @_ZNK5blink19HTMLTextAreaElement7TooLongEv(%"class.blink::HTMLTextAreaElement"* %0)
  br i1 %57, label %58, label %103

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %59) #13
  %61 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %84, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #13
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !4

78:                                               ; preds = %69
  tail call void @llvm.trap() #13
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %64, %79
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  br label %84

84:                                               ; preds = %58, %81
  %85 = phi i32 [ %83, %81 ], [ 0, %58 ]
  %86 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %87 = tail call i32 @_ZNK5blink18TextControlElement9maxLengthEv(%"class.blink::TextControlElement"* %86) #13
  %88 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale28ValidationMessageTooLongTextEji(%"class.blink::Locale"* %60, i32 %85, i32 %87) #13
  %89 = ptrtoint %"class.WTF::StringImpl"* %88 to i64
  br i1 %63, label %150, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %150

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #13
  br label %150

103:                                              ; preds = %56
  %104 = tail call zeroext i1 @_ZNK5blink19HTMLTextAreaElement8TooShortEv(%"class.blink::HTMLTextAreaElement"* %0)
  br i1 %104, label %105, label %150

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = tail call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %106) #13
  %108 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %131, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i33
  %120 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !4

125:                                              ; preds = %116
  tail call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %116
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %117, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  br label %131

131:                                              ; preds = %105, %128
  %132 = phi i32 [ %130, %128 ], [ 0, %105 ]
  %133 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %134 = tail call i32 @_ZNK5blink18TextControlElement9minLengthEv(%"class.blink::TextControlElement"* %133) #13
  %135 = tail call %"class.WTF::StringImpl"* @_ZN5blink6Locale29ValidationMessageTooShortTextEji(%"class.blink::Locale"* %107, i32 %132, i32 %134) #13
  %136 = ptrtoint %"class.WTF::StringImpl"* %135 to i64
  br i1 %110, label %150, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #13
  br label %150

150:                                              ; preds = %103, %149, %146, %131, %102, %99, %84, %1, %51, %8
  %151 = phi i64 [ %10, %8 ], [ %55, %51 ], [ 0, %1 ], [ %89, %84 ], [ %89, %99 ], [ %89, %102 ], [ %136, %131 ], [ %136, %146 ], [ %136, %149 ], [ 0, %103 ]
  %152 = inttoptr i64 %151 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %152
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement12willValidateEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement11CustomErrorEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement12ValueMissingEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %2) #13
  br i1 %3, label %4, label %42

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"* %2) #13
  br i1 %5, label %42, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %42, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %27

17:                                               ; preds = %10
  %18 = zext i32 %16 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #13
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !4

24:                                               ; preds = %17
  tail call void @llvm.trap() #13
  unreachable

25:                                               ; preds = %17
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %15, align 4
  br label %27

27:                                               ; preds = %10, %25
  %28 = phi i32 [ %26, %25 ], [ %16, %10 ]
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  %32 = load atomic i32, i32* %11 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %37 = add i32 %28, -1
  store i32 %37, i32* %36, align 4
  br label %38

38:                                               ; preds = %35, %27
  %39 = phi i32 [ %37, %35 ], [ %28, %27 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #13
  br label %42

42:                                               ; preds = %1, %4, %6, %38, %41
  %43 = phi i1 [ false, %4 ], [ false, %1 ], [ %31, %38 ], [ %31, %41 ], [ true, %6 ]
  ret i1 %43
}

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement7TooLongEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement12willValidateEv(%"class.blink::HTMLFormControlElement"* %2) #13
  br i1 %3, label %4, label %47

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink18TextControlElement21LastChangeWasUserEditEv(%"class.blink::TextControlElement"* %5) #13
  br i1 %6, label %7, label %47

7:                                                ; preds = %4
  %8 = tail call i32 @_ZNK5blink18TextControlElement9maxLengthEv(%"class.blink::TextControlElement"* %5) #13
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %47, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %44, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %31

21:                                               ; preds = %14
  %22 = zext i32 %20 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !4

28:                                               ; preds = %21
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %21
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %19, align 4
  br label %31

31:                                               ; preds = %29, %14
  %32 = phi i32 [ %30, %29 ], [ %20, %14 ]
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = load atomic i32, i32* %15 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %32, -1
  store i32 %39, i32* %19, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %32, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %44

44:                                               ; preds = %43, %40, %10
  %45 = phi i32 [ %34, %40 ], [ %34, %43 ], [ 0, %10 ]
  %46 = icmp ugt i32 %45, %8
  br label %47

47:                                               ; preds = %44, %7, %4, %1
  %48 = phi i1 [ false, %1 ], [ false, %4 ], [ %46, %44 ], [ false, %7 ]
  ret i1 %48
}

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale28ValidationMessageTooLongTextEji(%"class.blink::Locale"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement8TooShortEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement12willValidateEv(%"class.blink::HTMLFormControlElement"* %2) #13
  br i1 %3, label %4, label %48

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink18TextControlElement21LastChangeWasUserEditEv(%"class.blink::TextControlElement"* %5) #13
  br i1 %6, label %7, label %48

7:                                                ; preds = %4
  %8 = tail call i32 @_ZNK5blink18TextControlElement9minLengthEv(%"class.blink::TextControlElement"* %5) #13
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %48, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %47, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %31

21:                                               ; preds = %14
  %22 = zext i32 %20 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !4

28:                                               ; preds = %21
  tail call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %21
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %19, align 4
  br label %31

31:                                               ; preds = %29, %14
  %32 = phi i32 [ %30, %29 ], [ %20, %14 ]
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = load atomic i32, i32* %15 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %32, -1
  store i32 %39, i32* %19, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %32, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %44

44:                                               ; preds = %43, %40
  %45 = icmp eq i32 %34, 0
  %46 = icmp ult i32 %34, %8
  br i1 %45, label %47, label %48

47:                                               ; preds = %44, %10
  br label %48

48:                                               ; preds = %47, %44, %7, %4, %1
  %49 = phi i1 [ false, %1 ], [ false, %4 ], [ false, %7 ], [ false, %47 ], [ %46, %44 ]
  ret i1 %49
}

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale29ValidationMessageTooShortTextEji(%"class.blink::Locale"*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink18TextControlElement9minLengthEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZThn104_NK5blink19HTMLTextAreaElement17validationMessageEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast i32* %2 to %"class.blink::HTMLTextAreaElement"*
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19HTMLTextAreaElement17validationMessageEv(%"class.blink::HTMLTextAreaElement"* %3)
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement12ValueMissingEPKN3WTF6StringE(%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"* readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %4 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %3) #13
  br i1 %4, label %5, label %68

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"* %3) #13
  br i1 %6, label %68, label %7

7:                                                ; preds = %5
  %8 = icmp eq %"class.WTF::String"* %1, null
  br i1 %8, label %30, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %68, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %51

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #13
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !4

27:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %51

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %68, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #13
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !4

48:                                               ; preds = %39
  tail call void @llvm.trap() #13
  unreachable

49:                                               ; preds = %39
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %40, align 4
  br label %51

51:                                               ; preds = %13, %28, %34, %49
  %52 = phi %"class.WTF::StringImpl"* [ %32, %49 ], [ %32, %34 ], [ %11, %28 ], [ %11, %13 ]
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %51
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %51
  %65 = phi i32 [ %63, %62 ], [ %61, %51 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %68

68:                                               ; preds = %9, %30, %67, %64, %2, %5
  %69 = phi i1 [ false, %5 ], [ false, %2 ], [ %55, %64 ], [ %55, %67 ], [ true, %30 ], [ true, %9 ]
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink19HTMLTextAreaElement12ValueMissingEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast i32* %2 to %"class.blink::HTMLFormControlElement"*
  %4 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %3) #13
  br i1 %4, label %5, label %43

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"* %3) #13
  br i1 %6, label %43, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds i32, i32* %2, i64 66
  %9 = bitcast i32* %8 to %"class.WTF::StringImpl"**
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %43, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %29

19:                                               ; preds = %12
  %20 = zext i32 %18 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #13
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %19
  tail call void @llvm.trap() #13
  unreachable

27:                                               ; preds = %19
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %17, align 4
  br label %29

29:                                               ; preds = %27, %12
  %30 = phi i32 [ %28, %27 ], [ %18, %12 ]
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  %34 = load atomic i32, i32* %13 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %29
  %38 = add i32 %30, -1
  store i32 %38, i32* %17, align 4
  br label %39

39:                                               ; preds = %37, %29
  %40 = phi i32 [ %38, %37 ], [ %30, %29 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #13
  br label %43

43:                                               ; preds = %1, %5, %7, %39, %42
  %44 = phi i1 [ false, %5 ], [ false, %1 ], [ %33, %39 ], [ %33, %42 ], [ true, %7 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement21IsRequiredFormControlEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %2) #13
  ret i1 %3
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement7TooLongEPKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"* readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink18TextControlElement21LastChangeWasUserEditEv(%"class.blink::TextControlElement"* %6) #13
  br i1 %7, label %8, label %109

8:                                                ; preds = %5, %3
  %9 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %10 = tail call i32 @_ZNK5blink18TextControlElement9maxLengthEv(%"class.blink::TextControlElement"* %9) #13
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %109, label %12

12:                                               ; preds = %8
  %13 = icmp eq %"class.WTF::String"* %1, null
  br i1 %13, label %67, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %88, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %88, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %25 = bitcast %"class.WTF::StringImpl"* %24 to i8*
  %26 = bitcast %"class.WTF::StringImpl"* %24 to i16*
  %27 = zext i32 %20 to i64
  br label %28

28:                                               ; preds = %63, %22
  %29 = phi i64 [ 0, %22 ], [ %65, %63 ]
  %30 = phi i32 [ 0, %22 ], [ %64, %63 ]
  %31 = load atomic i32, i32* %23 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds i8, i8* %25, i64 %29
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i16
  br label %41

38:                                               ; preds = %28
  %39 = getelementptr inbounds i16, i16* %26, i64 %29
  %40 = load i16, i16* %39, align 2
  br label %41

41:                                               ; preds = %38, %34
  %42 = phi i16 [ %37, %34 ], [ %40, %38 ]
  %43 = icmp eq i16 %42, 13
  br i1 %43, label %44, label %63

44:                                               ; preds = %41
  %45 = add nuw nsw i64 %29, 1
  %46 = icmp ult i64 %45, %27
  br i1 %46, label %47, label %63

47:                                               ; preds = %44
  %48 = load atomic i32, i32* %23 monotonic, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %25, i64 %45
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  br label %58

55:                                               ; preds = %47
  %56 = getelementptr inbounds i16, i16* %26, i64 %45
  %57 = load i16, i16* %56, align 2
  br label %58

58:                                               ; preds = %55, %51
  %59 = phi i16 [ %54, %51 ], [ %57, %55 ]
  %60 = icmp eq i16 %59, 10
  %61 = zext i1 %60 to i32
  %62 = add i32 %30, %61
  br label %63

63:                                               ; preds = %58, %44, %41
  %64 = phi i32 [ %30, %44 ], [ %30, %41 ], [ %62, %58 ]
  %65 = add nuw nsw i64 %29, 1
  %66 = icmp eq i64 %65, %27
  br i1 %66, label %88, label %28

67:                                               ; preds = %12
  %68 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %106, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %92

78:                                               ; preds = %71
  %79 = zext i32 %77 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #13
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !4

85:                                               ; preds = %78
  tail call void @llvm.trap() #13
  unreachable

86:                                               ; preds = %78
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %76, align 4
  br label %92

88:                                               ; preds = %63, %14, %18
  %89 = phi i32 [ 0, %14 ], [ 0, %18 ], [ %64, %63 ]
  %90 = phi i32 [ 0, %14 ], [ 0, %18 ], [ %20, %63 ]
  %91 = sub i32 %90, %89
  br label %106

92:                                               ; preds = %71, %86
  %93 = phi i32 [ %87, %86 ], [ %77, %71 ]
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = load atomic i32, i32* %72 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %101 = add i32 %93, -1
  store i32 %101, i32* %100, align 4
  br label %102

102:                                              ; preds = %99, %92
  %103 = phi i32 [ %101, %99 ], [ %93, %92 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #13
  br label %106

106:                                              ; preds = %67, %105, %102, %88
  %107 = phi i32 [ %91, %88 ], [ %95, %102 ], [ %95, %105 ], [ 0, %67 ]
  %108 = icmp ugt i32 %107, %10
  br label %109

109:                                              ; preds = %106, %8, %5
  %110 = phi i1 [ false, %5 ], [ %108, %106 ], [ false, %8 ]
  ret i1 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink19HTMLTextAreaElement7TooLongEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast i32* %2 to %"class.blink::HTMLTextAreaElement"*
  %4 = tail call zeroext i1 @_ZNK5blink19HTMLTextAreaElement7TooLongEv(%"class.blink::HTMLTextAreaElement"* %3)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement8TooShortEPKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"* readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink18TextControlElement21LastChangeWasUserEditEv(%"class.blink::TextControlElement"* %6) #13
  br i1 %7, label %8, label %111

8:                                                ; preds = %5, %3
  %9 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %10 = tail call i32 @_ZNK5blink18TextControlElement9minLengthEv(%"class.blink::TextControlElement"* %9) #13
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %111, label %12

12:                                               ; preds = %8
  %13 = icmp eq %"class.WTF::String"* %1, null
  br i1 %13, label %67, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %88, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %88, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %25 = bitcast %"class.WTF::StringImpl"* %24 to i8*
  %26 = bitcast %"class.WTF::StringImpl"* %24 to i16*
  %27 = zext i32 %20 to i64
  br label %28

28:                                               ; preds = %63, %22
  %29 = phi i64 [ 0, %22 ], [ %65, %63 ]
  %30 = phi i32 [ 0, %22 ], [ %64, %63 ]
  %31 = load atomic i32, i32* %23 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds i8, i8* %25, i64 %29
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i16
  br label %41

38:                                               ; preds = %28
  %39 = getelementptr inbounds i16, i16* %26, i64 %29
  %40 = load i16, i16* %39, align 2
  br label %41

41:                                               ; preds = %38, %34
  %42 = phi i16 [ %37, %34 ], [ %40, %38 ]
  %43 = icmp eq i16 %42, 13
  br i1 %43, label %44, label %63

44:                                               ; preds = %41
  %45 = add nuw nsw i64 %29, 1
  %46 = icmp ult i64 %45, %27
  br i1 %46, label %47, label %63

47:                                               ; preds = %44
  %48 = load atomic i32, i32* %23 monotonic, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %25, i64 %45
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  br label %58

55:                                               ; preds = %47
  %56 = getelementptr inbounds i16, i16* %26, i64 %45
  %57 = load i16, i16* %56, align 2
  br label %58

58:                                               ; preds = %55, %51
  %59 = phi i16 [ %54, %51 ], [ %57, %55 ]
  %60 = icmp eq i16 %59, 10
  %61 = zext i1 %60 to i32
  %62 = add i32 %30, %61
  br label %63

63:                                               ; preds = %58, %44, %41
  %64 = phi i32 [ %30, %44 ], [ %30, %41 ], [ %62, %58 ]
  %65 = add nuw nsw i64 %29, 1
  %66 = icmp eq i64 %65, %27
  br i1 %66, label %88, label %28

67:                                               ; preds = %12
  %68 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %110, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %92

78:                                               ; preds = %71
  %79 = zext i32 %77 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #13
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !4

85:                                               ; preds = %78
  tail call void @llvm.trap() #13
  unreachable

86:                                               ; preds = %78
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %76, align 4
  br label %92

88:                                               ; preds = %63, %14, %18
  %89 = phi i32 [ 0, %14 ], [ 0, %18 ], [ %64, %63 ]
  %90 = phi i32 [ 0, %14 ], [ 0, %18 ], [ %20, %63 ]
  %91 = sub i32 %90, %89
  br label %106

92:                                               ; preds = %71, %86
  %93 = phi i32 [ %87, %86 ], [ %77, %71 ]
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = load atomic i32, i32* %72 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %101 = add i32 %93, -1
  store i32 %101, i32* %100, align 4
  br label %102

102:                                              ; preds = %99, %92
  %103 = phi i32 [ %101, %99 ], [ %93, %92 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #13
  br label %106

106:                                              ; preds = %105, %102, %88
  %107 = phi i32 [ %91, %88 ], [ %95, %102 ], [ %95, %105 ]
  %108 = icmp eq i32 %107, 0
  %109 = icmp ult i32 %107, %10
  br i1 %108, label %110, label %111

110:                                              ; preds = %67, %106
  br label %111

111:                                              ; preds = %110, %106, %8, %5
  %112 = phi i1 [ false, %5 ], [ false, %8 ], [ false, %110 ], [ %109, %106 ]
  ret i1 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn104_NK5blink19HTMLTextAreaElement8TooShortEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast i32* %2 to %"class.blink::HTMLTextAreaElement"*
  %4 = tail call zeroext i1 @_ZNK5blink19HTMLTextAreaElement8TooShortEv(%"class.blink::HTMLTextAreaElement"* %3)
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink18TextControlElement21LastChangeWasUserEditEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement12IsValidValueERKN3WTF6StringE(%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink19HTMLTextAreaElement12ValueMissingEPKN3WTF6StringE(%"class.blink::HTMLTextAreaElement"* %0, %"class.WTF::String"* %1)
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZNK5blink19HTMLTextAreaElement7TooLongEPKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::HTMLTextAreaElement"* %0, %"class.WTF::String"* %1, i32 1)
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZNK5blink19HTMLTextAreaElement8TooShortEPKN3WTF6StringENS_18TextControlElement21NeedsToCheckDirtyFlagE(%"class.blink::HTMLTextAreaElement"* %0, %"class.WTF::String"* %1, i32 1)
  %8 = xor i1 %7, true
  br label %9

9:                                                ; preds = %6, %4, %2
  %10 = phi i1 [ false, %4 ], [ false, %2 ], [ %8, %6 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLTextAreaElement"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element5focusEv(%"class.blink::Element"* %3) #13
  ret void
}

declare void @_ZN5blink7Element5focusEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement7setColsEj(%"class.blink::HTMLTextAreaElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kColsAttrE, align 8
  %5 = icmp eq i32 %1, 0
  %6 = select i1 %5, i32 20, i32 %1
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, i32 %6, i32 20) #13
  ret void
}

declare void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement7setRowsEj(%"class.blink::HTMLTextAreaElement"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kRowsAttrE, align 8
  %5 = icmp eq i32 %1, 0
  %6 = select i1 %5, i32 2, i32 %1
  tail call void @_ZN5blink7Element28SetUnsignedIntegralAttributeERKNS_13QualifiedNameEjj(%"class.blink::Element"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, i32 %6, i32 2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"* %2) #13
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsDisabledOrReadOnlyEv(%"class.blink::HTMLFormControlElement"* %2) #13
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement24SetPlaceholderVisibilityEb(%"class.blink::HTMLTextAreaElement"* nocapture, i1 zeroext) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 7
  %4 = zext i1 %1 to i8
  %5 = load i8, i8* %3, align 1
  %6 = and i8 %5, -2
  %7 = or i8 %6, %4
  store i8 %7, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement21UpdatePlaceholderTextEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %7 = tail call %"class.blink::HTMLElement"* @_ZNK5blink18TextControlElement18PlaceholderElementEv(%"class.blink::TextControlElement"* %6) #13
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19HTMLTextAreaElement19GetPlaceholderValueEv(%"class.blink::HTMLTextAreaElement"* %0)
  %9 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* %6) #13
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br label %17

17:                                               ; preds = %1, %13
  %18 = phi i1 [ true, %1 ], [ %16, %13 ]
  %19 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = icmp eq %"class.blink::HTMLElement"* %7, null
  br i1 %21, label %192, label %173

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  %26 = icmp ne %"class.blink::HTMLElement"* %7, null
  br i1 %25, label %27, label %28

27:                                               ; preds = %22
  br i1 %26, label %173, label %179

28:                                               ; preds = %22
  br i1 %26, label %70, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %34 = tail call %"class.blink::HTMLDivElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %33) #13
  %35 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %34, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %34, i64 0, i32 0, i32 0
  %37 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i64 25) #13
  call void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %36, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #13
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #13
  br label %54

54:                                               ; preds = %29, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  %55 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %56 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names14kIdPlaceholderE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %36, %"class.blink::QualifiedName"* dereferenceable(8) %55, %"class.WTF::AtomicString"* dereferenceable(8) %56) #13
  %57 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 7
  %58 = load i8, i8* %57, align 1
  %59 = and i8 %58, 1
  %60 = icmp eq i8 %59, 0
  %61 = select i1 %60, i32 3, i32 379
  call void @_ZN5blink7Element22SetInlineStylePropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::Element"* %36, i32 137, i32 %61, i1 zeroext true) #13
  %62 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %62) #13
  %64 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %63, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = call %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_(%"class.blink::ContainerNode"* %64, %"class.blink::Node"* %65, %"class.blink::Node"* %68) #13
  br label %70

70:                                               ; preds = %54, %28
  %71 = phi %"class.blink::HTMLElement"* [ %7, %28 ], [ %35, %54 ]
  %72 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %71, i64 0, i32 0
  br i1 %18, label %74, label %73

73:                                               ; preds = %70
  call void @_ZN5blink7Element22SetInlineStylePropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::Element"* %72, i32 380, i32 3, i1 zeroext true) #13
  br label %76

74:                                               ; preds = %70
  %75 = call zeroext i1 @_ZN5blink7Element25RemoveInlineStylePropertyENS_13CSSPropertyIDE(%"class.blink::Element"* %72, i32 380) #13
  br label %76

76:                                               ; preds = %73, %74
  %77 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #13
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %96

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #13
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !4

92:                                               ; preds = %83
  call void @llvm.trap() #13
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  br label %96

96:                                               ; preds = %76, %93
  %97 = phi %"class.WTF::StringImpl"* [ %8, %76 ], [ %95, %93 ]
  %98 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #13
  %99 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %100 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i8** %101, align 8
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 2, i32* %102, align 8
  %103 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #13
  %104 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %99, i64* %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i8** %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 1, i32* %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %107, label %108, label %109

108:                                              ; preds = %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #13
  br label %151

109:                                              ; preds = %96
  %110 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceERKNS_10StringViewES3_(%"class.WTF::StringImpl"* nonnull %97, %"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #13
  %111 = ptrtoint %"class.WTF::StringImpl"* %110 to i64
  %112 = bitcast %"class.WTF::String"* %5 to i64*
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  store i64 %111, i64* %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %130, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #13
  br label %128

128:                                              ; preds = %127, %124
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  br label %130

130:                                              ; preds = %128, %109
  %131 = phi %"class.WTF::StringImpl"* [ %129, %128 ], [ %110, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #13
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %151, label %133

133:                                              ; preds = %130
  %134 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* nonnull %131, i16 zeroext 13, i16 zeroext 10) #13
  %135 = ptrtoint %"class.WTF::StringImpl"* %134 to i64
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  store i64 %135, i64* %112, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #13
  br label %151

151:                                              ; preds = %108, %130, %133, %147, %150
  %152 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %71, i64 0, i32 0, i32 0, i32 0
  %153 = bitcast %"class.blink::HTMLElement"* %71 to void (%"class.blink::Node"*, %"class.WTF::String"*)***
  %154 = load void (%"class.blink::Node"*, %"class.WTF::String"*)**, void (%"class.blink::Node"*, %"class.WTF::String"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::Node"*, %"class.WTF::String"*)*, void (%"class.blink::Node"*, %"class.WTF::String"*)** %154, i64 32
  %156 = load void (%"class.blink::Node"*, %"class.WTF::String"*)*, void (%"class.blink::Node"*, %"class.WTF::String"*)** %155, align 8
  call void %156(%"class.blink::Node"* %152, %"class.WTF::String"* nonnull dereferenceable(8) %5) #13
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #13
  br label %172

172:                                              ; preds = %151, %168, %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #13
  br label %179

173:                                              ; preds = %20, %27
  %174 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* %174) #13
  %176 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %175, i64 0, i32 0, i32 0
  %177 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %7, i64 0, i32 0, i32 0, i32 0
  %178 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* %176, %"class.blink::Node"* %177) #13
  br i1 %19, label %192, label %179

179:                                              ; preds = %172, %27, %173
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #13
  br label %192

192:                                              ; preds = %20, %173, %188, %191
  ret void
}

declare %"class.blink::HTMLElement"* @_ZNK5blink18TextControlElement18PlaceholderElementEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19HTMLTextAreaElement19GetPlaceholderValueEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* %2) #13
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink18TextControlElement14SuggestedValueEv(%"class.blink::TextControlElement"* %2) #13
  br label %73

13:                                               ; preds = %1, %7
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kPlaceholderAttrE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %15, align 8
  %17 = icmp eq %"class.blink::ElementData"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::ElementData"* %16 to %"class.blink::UniqueElementData"*
  %25 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 1, i32 1
  %26 = bitcast %"class.blink::Member.14"* %25 to %"class.blink::Attribute"**
  %27 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %24, i64 0, i32 2, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  br label %35

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %16, i64 1
  %32 = bitcast %"class.blink::ElementData"* %31 to %"class.blink::Attribute"*
  %33 = lshr i32 %20, 1
  %34 = and i32 %33, 268435455
  br label %35

35:                                               ; preds = %30, %23
  %36 = phi %"class.blink::Attribute"* [ %32, %30 ], [ %27, %23 ]
  %37 = phi i32 [ %34, %30 ], [ %29, %23 ]
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %68, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %14, i64 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %61, %41
  %47 = phi %"class.blink::Attribute"* [ %36, %41 ], [ %62, %61 ]
  %48 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %43
  br i1 %50, label %64, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %53, %54
  br i1 %55, label %56, label %61

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 4, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %58, %59
  br i1 %60, label %64, label %61

61:                                               ; preds = %56, %51
  %62 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 1
  %63 = icmp eq %"class.blink::Attribute"* %62, %39
  br i1 %63, label %68, label %46

64:                                               ; preds = %56, %46
  %65 = icmp eq %"class.blink::Attribute"* %47, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 0, i32 1
  br label %70

68:                                               ; preds = %61, %64, %35, %13
  %69 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %70

70:                                               ; preds = %66, %68
  %71 = phi %"class.WTF::AtomicString"* [ %69, %68 ], [ %67, %66 ]
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %71, i64 0, i32 0
  br label %73

73:                                               ; preds = %70, %11
  %74 = phi %"class.WTF::String"* [ %12, %11 ], [ %72, %70 ]
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #13
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !4

92:                                               ; preds = %83
  tail call void @llvm.trap() #13
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %73, %78, %93
  ret %"class.WTF::StringImpl"* %76
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink7Element22SetInlineStylePropertyENS_13CSSPropertyIDENS_10CSSValueIDEb(%"class.blink::Element"*, i32, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement20IsPlaceholderVisibleEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 1
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

declare %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink7Element25RemoveInlineStylePropertyENS_13CSSPropertyIDE(%"class.blink::Element"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement20IsInteractiveContentEv(%"class.blink::HTMLTextAreaElement"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19HTMLTextAreaElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::HTMLTextAreaElement"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 2, i32 0, i32 0, i32 6
  %7 = bitcast %"class.blink::Member.2"* %6 to %"class.WTF::StringImpl"**
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %29

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #13
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !4

24:                                               ; preds = %15
  tail call void @llvm.trap() #13
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %29

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink19HTMLTextAreaElement14SetValueCommonERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0, i32 0)
  br label %42

29:                                               ; preds = %10, %25
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %30, align 8
  call void @_ZN5blink19HTMLTextAreaElement14SetValueCommonERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0, i32 0)
  %31 = load atomic i32, i32* %11 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #13
  br label %42

42:                                               ; preds = %27, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %43 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 2, i32 0, i32 1
  %44 = bitcast %"class.blink::Member"* %43 to i8*
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 6
  store i8 %45, i8* %46, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::TextControlElement"* %47, %"class.blink::Element"* dereferenceable(104) %1, i32 %2) #13
  ret void
}

declare void @_ZN5blink18TextControlElement31CloneNonAttributePropertiesFromERKNS_7ElementENS_17CloneChildrenFlagE(%"class.blink::TextControlElement"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HTMLTextAreaElementD2Ev(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #13
  br label %22

22:                                               ; preds = %1, %18, %21
  %23 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"* %23) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19HTMLTextAreaElementD0Ev(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #13
  br label %22

22:                                               ; preds = %1, %18, %21
  %23 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"* %23) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #13
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

declare void @_ZNK5blink18TextControlElement5TraceEPNS_7VisitorE(%"class.blink::TextControlElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink19HTMLTextAreaElement18GetWrapperTypeInfoEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink19HTMLTextAreaElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState23CanContainRangeEndPointEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink18TextControlElement10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::TextControlElement"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25ShouldHaveFocusAppearanceEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare i32 @_ZN5blink22HTMLFormControlElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::HTMLFormControlElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLFormControlElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #13
  ret %"class.blink::ComputedStyle"* %4
}

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.2514"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLFormControlElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement13SupportsFocusEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink18TextControlElement18DispatchFocusEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink18TextControlElement17DispatchBlurEventEPNS_7ElementENS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink31HTMLFormControlElementWithState21FinishParsingChildrenEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement20IsFormControlElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement13IsTextControlEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement21IsOptionalFormControlEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::HTMLTextAreaElement"* %0 to %"class.blink::HTMLFormControlElement"*
  %3 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* %2) #13
  %4 = xor i1 %3, true
  ret i1 %4
}

declare zeroext i1 @_ZN5blink22HTMLFormControlElement14IsValidElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement21IsDisabledFormControlEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement23AreAuthorShadowsAllowedEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement31AlwaysCreateUserAgentShadowRootEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare i32 @_ZNK5blink31HTMLFormControlElementWithState15DefaultTabIndexEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink22HTMLFormControlElement14autocapitalizeEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink22HTMLFormControlElement9formOwnerEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement11IsLabelableEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink22HTMLFormControlElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLFormControlElement", %"class.blink::HTMLFormControlElement"* %0, i64 0, i32 3
  ret %"class.blink::FormAssociated"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement14IsEnumeratableEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement28CanTriggerImplicitSubmissionEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink22HTMLFormControlElement20IsSubmittableElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.WTF::StringImpl"* @_ZN5blink22HTMLFormControlElement21ResultForDialogSubmitEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement27CanBeSuccessfulSubmitButtonEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22HTMLFormControlElement17IsActivatedSubmitEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLFormControlElement18SetActivatedSubmitEb(%"class.blink::HTMLFormControlElement"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink22HTMLFormControlElement21GetFormElementPiiTypeEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLFormControlElement21SetFormElementPiiTypeENS_18FormElementPiiTypeE(%"class.blink::HTMLFormControlElement"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement24RequiredAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement24DisabledAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement14WillChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare void @_ZN5blink22HTMLFormControlElement13DidChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState18ShouldAutocompleteEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement19SupportsPlaceholderEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN5blink18TextControlElement12setRangeTextERKN3WTF6StringEjjS4_RNS_14ExceptionStateE(%"class.blink::TextControlElement"*, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19HTMLTextAreaElement12IsEmptyValueEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %22

12:                                               ; preds = %5
  %13 = zext i32 %11 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #13
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !4

19:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

20:                                               ; preds = %12
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %10, align 4
  br label %22

22:                                               ; preds = %5, %20
  %23 = phi i32 [ %21, %20 ], [ %11, %5 ]
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = load atomic i32, i32* %6 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %32 = add i32 %23, -1
  store i32 %32, i32* %31, align 4
  br label %33

33:                                               ; preds = %30, %22
  %34 = phi i32 [ %32, %30 ], [ %23, %22 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %37

37:                                               ; preds = %1, %33, %36
  %38 = phi i1 [ %26, %33 ], [ %26, %36 ], [ true, %1 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TextControlElement16HandleFocusEventEPNS_7ElementENS_5mojom9FocusTypeE(%"class.blink::TextControlElement"*, %"class.blink::Element"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TextControlElement15HandleBlurEventEv(%"class.blink::TextControlElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_NK5blink18TextControlElement5TraceEPNS_7VisitorE(%"class.blink::TextControlElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink19HTMLTextAreaElementD1Ev(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 20
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 26
  %7 = bitcast i32* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i32, i32* %2, i64 42
  %9 = bitcast i32* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i32, i32* %2, i64 66
  %11 = bitcast i32* %10 to %"class.WTF::StringImpl"**
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %27

27:                                               ; preds = %1, %23, %26
  %28 = bitcast i32* %2 to %"class.blink::TextControlElement"*
  tail call void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"* %28) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn104_N5blink19HTMLTextAreaElementD0Ev(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 20
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i32, i32* %2, i64 26
  %7 = bitcast i32* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i32, i32* %2, i64 42
  %9 = bitcast i32* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }, { [214 x i8*], [3 x i8*], [34 x i8*], [3 x i8*] }* @_ZTVN5blink19HTMLTextAreaElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i32, i32* %2, i64 66
  %11 = bitcast i32* %10 to %"class.WTF::StringImpl"**
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %27

27:                                               ; preds = %1, %23, %26
  %28 = bitcast i32* %2 to %"class.blink::TextControlElement"*
  tail call void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"* %28) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink22HTMLFormControlElement20IsFormControlElementEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState29IsFormControlElementWithStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink13ListedElement18IsElementInternalsEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn104_NK5blink19HTMLTextAreaElement14IsEnumeratableEv(%"class.blink::HTMLTextAreaElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink13ListedElement11HasBadInputEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement15PatternMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement13RangeOverflowEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement14RangeUnderflowEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12StepMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ListedElement12TypeMismatchEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement20ValidationSubMessageEv(%"class.blink::ListedElement"*) unnamed_addr #1

declare void @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE(%"class.blink::ListedElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink13ListedElement16ValidationAnchorEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement24DisabledAttributeChangedEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv(%"class.blink::ListedElement"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState25ClassSupportsStateRestoreEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink31HTMLFormControlElementWithState36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::HTMLFormControlElementWithState"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement14WillChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22HTMLFormControlElement13DidChangeFormEv(%"class.blink::HTMLFormControlElement"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink13ListedElement18RecalcWillValidateEv(%"class.blink::ListedElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn168_N5blink22HTMLFormControlElement13AssociateWithEPNS_15HTMLFormElementE(%"class.blink::HTMLFormControlElement"*, %"class.blink::HTMLFormElement"*) unnamed_addr #0 align 2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.724"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.724"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.724"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.724"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.724"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.724"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.724"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #13
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !4

122:                                              ; preds = %113
  tail call void @llvm.trap() #13
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.724"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.724", %"class.WTF::Vector.724"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.2638, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !5

23:                                               ; preds = %19
  %24 = bitcast %class.anon.2638* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #13
  %25 = getelementptr inbounds %class.anon.2638, %class.anon.2638* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.2638, %class.anon.2638* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), %class.anon.2638* nonnull dereferenceable(16) %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #13
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #13
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #13
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.2638* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %20 = tail call i8* @_Znwm(i64 192) #14
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #13
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #13
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #13
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #13
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #13
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #13
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #13
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %38 = getelementptr inbounds %class.anon.2638, %class.anon.2638* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #13
  %40 = getelementptr inbounds %class.anon.2638, %class.anon.2638* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #13
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #13
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #13
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #13
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #13
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !6

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !8

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !9

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #14
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #14, !noalias !10
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !10
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #14
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #8

declare zeroext i1 @_ZNK5blink4Node26IsUserActionElementFocusedEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceERKNS_10StringViewES3_(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"*, i16 zeroext, i16 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18TextControlElementD2Ev(%"class.blink::TextControlElement"*) unnamed_addr #8

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLDivElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !4

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #13
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLDivElement"*
  tail call void @_ZN5blink14HTMLDivElementC1ERNS_8DocumentE(%"class.blink::HTMLDivElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #13
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLDivElement"* %51
}

declare void @_ZN5blink14HTMLDivElementC1ERNS_8DocumentE(%"class.blink::HTMLDivElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = distinct !{!9, !7}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
