; ModuleID = '../../third_party/skia/src/core/SkDeque.cpp'
source_filename = "../../third_party/skia/src/core/SkDeque.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type { %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i8*, i8*, i8* }
%"class.SkDeque::Iter" = type { %"struct.SkDeque::Block"*, i8*, i64 }

@_ZN7SkDequeC1Emi = hidden unnamed_addr alias void (%class.SkDeque*, i64, i32), void (%class.SkDeque*, i64, i32)* @_ZN7SkDequeC2Emi
@_ZN7SkDequeC1EmPvmi = hidden unnamed_addr alias void (%class.SkDeque*, i64, i8*, i64, i32), void (%class.SkDeque*, i64, i8*, i64, i32)* @_ZN7SkDequeC2EmPvmi
@_ZN7SkDequeD1Ev = hidden unnamed_addr alias void (%class.SkDeque*), void (%class.SkDeque*)* @_ZN7SkDequeD2Ev
@_ZN7SkDeque4IterC1Ev = hidden unnamed_addr alias void (%"class.SkDeque::Iter"*), void (%"class.SkDeque::Iter"*)* @_ZN7SkDeque4IterC2Ev
@_ZN7SkDeque4IterC1ERKS_NS0_9IterStartE = hidden unnamed_addr alias void (%"class.SkDeque::Iter"*, %class.SkDeque*, i32), void (%"class.SkDeque::Iter"*, %class.SkDeque*, i32)* @_ZN7SkDeque4IterC2ERKS_NS0_9IterStartE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7SkDequeC2Emi(%class.SkDeque* nocapture, i64, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 5
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 6
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 7
  store i32 %2, i32* %7, align 4
  %8 = bitcast %class.SkDeque* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkDequeC2EmPvmi(%class.SkDeque* nocapture, i64, i8*, i64, i32) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 5
  store i8* %2, i8** %7, align 8
  %8 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 6
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 7
  store i32 %4, i32* %9, align 4
  %10 = add i64 %1, 40
  %11 = icmp ugt i64 %10, %3
  %12 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 2
  br i1 %11, label %20, label %13

13:                                               ; preds = %5
  %14 = bitcast %"struct.SkDeque::Block"** %12 to i8**
  store i8* %2, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 %3
  %16 = getelementptr inbounds i8, i8* %2, i64 32
  %17 = bitcast i8* %16 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false) #6
  store i8* %15, i8** %17, align 8
  %18 = bitcast %"struct.SkDeque::Block"** %12 to i64*
  %19 = load i64, i64* %18, align 8
  br label %21

20:                                               ; preds = %5
  store %"struct.SkDeque::Block"* null, %"struct.SkDeque::Block"** %12, align 8
  br label %21

21:                                               ; preds = %20, %13
  %22 = phi i64 [ 0, %20 ], [ %19, %13 ]
  %23 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 3
  %24 = bitcast %"struct.SkDeque::Block"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %class.SkDeque* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkDequeD2Ev(%class.SkDeque* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 2
  %3 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %2, align 8
  %4 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 5
  %5 = bitcast i8** %4 to %"struct.SkDeque::Block"**
  %6 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %5, align 8
  %7 = icmp eq %"struct.SkDeque::Block"* %3, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %1, %15
  %9 = phi %"struct.SkDeque::Block"* [ %11, %15 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %9, i64 0, i32 0
  %11 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %10, align 8
  %12 = icmp eq %"struct.SkDeque::Block"* %9, %6
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = bitcast %"struct.SkDeque::Block"* %9 to i8*
  tail call void @_Z7sk_freePv(i8* %14) #6
  br label %15

15:                                               ; preds = %8, %13
  %16 = icmp eq %"struct.SkDeque::Block"* %11, null
  br i1 %16, label %17, label %8

17:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkDeque9freeBlockEPNS_5BlockE(%class.SkDeque* nocapture readnone, %"struct.SkDeque::Block"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.SkDeque::Block"* %1 to i8*
  tail call void @_Z7sk_freePv(i8* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN7SkDeque10push_frontEv(%class.SkDeque* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 2
  %6 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %5, align 8
  %7 = icmp eq %"struct.SkDeque::Block"* %6, null
  br i1 %7, label %8, label %27

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = mul i64 %13, %11
  %15 = add i64 %14, 40
  %16 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %15, i32 2) #6
  %17 = load i64, i64* %12, align 8
  %18 = mul i64 %17, %11
  %19 = add i64 %18, 40
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  %21 = getelementptr inbounds i8, i8* %16, i64 32
  %22 = bitcast i8* %21 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #6
  store i8* %20, i8** %22, align 8
  %23 = bitcast %"struct.SkDeque::Block"** %5 to i8**
  store i8* %16, i8** %23, align 8
  %24 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 3
  %25 = bitcast %"struct.SkDeque::Block"** %24 to i8**
  store i8* %16, i8** %25, align 8
  %26 = bitcast i8* %16 to %"struct.SkDeque::Block"*
  br label %27

27:                                               ; preds = %8, %1
  %28 = phi %"struct.SkDeque::Block"* [ %26, %8 ], [ %6, %1 ]
  %29 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %28, i64 0, i32 2
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %44

32:                                               ; preds = %27, %52
  %33 = phi %"struct.SkDeque::Block"* [ %28, %27 ], [ %59, %52 ]
  %34 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %33, i64 0, i32 4
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %33, i64 0, i32 3
  %38 = bitcast i8** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 0, %41
  %43 = getelementptr inbounds i8, i8* %39, i64 %42
  br label %73

44:                                               ; preds = %27
  %45 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 0, %46
  %48 = getelementptr inbounds i8, i8* %30, i64 %47
  %49 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %28, i64 1
  %50 = bitcast %"struct.SkDeque::Block"* %49 to i8*
  %51 = icmp ult i8* %48, %50
  br i1 %51, label %52, label %73

52:                                               ; preds = %44
  %53 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 7
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = mul i64 %46, %55
  %57 = add i64 %56, 40
  %58 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %57, i32 2) #6
  %59 = bitcast i8* %58 to %"struct.SkDeque::Block"*
  %60 = load i64, i64* %45, align 8
  %61 = mul i64 %60, %55
  %62 = add i64 %61, 40
  %63 = getelementptr inbounds i8, i8* %58, i64 %62
  %64 = getelementptr inbounds i8, i8* %58, i64 32
  %65 = bitcast i8* %64 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 32, i1 false) #6
  store i8* %63, i8** %65, align 8
  %66 = bitcast %"struct.SkDeque::Block"** %5 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast i8* %58 to i64*
  store i64 %67, i64* %68, align 8
  %69 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %5, align 8
  %70 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %69, i64 0, i32 1
  %71 = bitcast %"struct.SkDeque::Block"** %70 to i8**
  store i8* %58, i8** %71, align 8
  %72 = bitcast %"struct.SkDeque::Block"** %5 to i8**
  store i8* %58, i8** %72, align 8
  br label %32

73:                                               ; preds = %44, %32
  %74 = phi %"struct.SkDeque::Block"* [ %33, %32 ], [ %28, %44 ]
  %75 = phi i8* [ %43, %32 ], [ %48, %44 ]
  %76 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %74, i64 0, i32 2
  store i8* %75, i8** %76, align 8
  %77 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %82

80:                                               ; preds = %73
  %81 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 1
  store i8* %75, i8** %81, align 8
  br label %82

82:                                               ; preds = %73, %80
  store i8* %75, i8** %77, align 8
  ret i8* %75
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.SkDeque::Block"* @_ZN7SkDeque13allocateBlockEi(%class.SkDeque* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %5, %3
  %7 = add i64 %6, 40
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %7, i32 2) #6
  %9 = bitcast i8* %8 to %"struct.SkDeque::Block"*
  %10 = load i64, i64* %4, align 8
  %11 = mul i64 %10, %3
  %12 = add i64 %11, 40
  %13 = getelementptr inbounds i8, i8* %8, i64 %12
  %14 = getelementptr inbounds i8, i8* %8, i64 32
  %15 = bitcast i8* %14 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #6
  store i8* %13, i8** %15, align 8
  ret %"struct.SkDeque::Block"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 3
  %6 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %5, align 8
  %7 = icmp eq %"struct.SkDeque::Block"* %6, null
  br i1 %7, label %8, label %27

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = mul i64 %13, %11
  %15 = add i64 %14, 40
  %16 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %15, i32 2) #6
  %17 = load i64, i64* %12, align 8
  %18 = mul i64 %17, %11
  %19 = add i64 %18, 40
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  %21 = getelementptr inbounds i8, i8* %16, i64 32
  %22 = bitcast i8* %21 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #6
  store i8* %20, i8** %22, align 8
  %23 = bitcast %"struct.SkDeque::Block"** %5 to i8**
  store i8* %16, i8** %23, align 8
  %24 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 2
  %25 = bitcast %"struct.SkDeque::Block"** %24 to i8**
  store i8* %16, i8** %25, align 8
  %26 = bitcast i8* %16 to %"struct.SkDeque::Block"*
  br label %27

27:                                               ; preds = %8, %1
  %28 = phi %"struct.SkDeque::Block"* [ %26, %8 ], [ %6, %1 ]
  %29 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %28, i64 0, i32 2
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %41

32:                                               ; preds = %27, %50
  %33 = phi %"struct.SkDeque::Block"* [ %28, %27 ], [ %57, %50 ]
  %34 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %33, i64 1
  %35 = bitcast %"struct.SkDeque::Block"* %34 to i8*
  %36 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %33, i64 0, i32 2
  %37 = bitcast i8** %36 to %"struct.SkDeque::Block"**
  store %"struct.SkDeque::Block"* %34, %"struct.SkDeque::Block"** %37, align 8
  %38 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds i8, i8* %35, i64 %39
  br label %71

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %28, i64 0, i32 3
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %28, i64 0, i32 4
  %48 = load i8*, i8** %47, align 8
  %49 = icmp ugt i8* %46, %48
  br i1 %49, label %50, label %71

50:                                               ; preds = %41
  %51 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 7
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = mul i64 %45, %53
  %55 = add i64 %54, 40
  %56 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %55, i32 2) #6
  %57 = bitcast i8* %56 to %"struct.SkDeque::Block"*
  %58 = load i64, i64* %44, align 8
  %59 = mul i64 %58, %53
  %60 = add i64 %59, 40
  %61 = getelementptr inbounds i8, i8* %56, i64 %60
  %62 = getelementptr inbounds i8, i8* %56, i64 32
  %63 = bitcast i8* %62 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 32, i1 false) #6
  store i8* %61, i8** %63, align 8
  %64 = bitcast %"struct.SkDeque::Block"** %5 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds i8, i8* %56, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast %"struct.SkDeque::Block"** %5 to i8***
  %69 = load i8**, i8*** %68, align 8
  store i8* %56, i8** %69, align 8
  %70 = bitcast %"struct.SkDeque::Block"** %5 to i8**
  store i8* %56, i8** %70, align 8
  br label %32

71:                                               ; preds = %41, %32
  %72 = phi %"struct.SkDeque::Block"* [ %33, %32 ], [ %28, %41 ]
  %73 = phi i8* [ %40, %32 ], [ %46, %41 ]
  %74 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %72, i64 0, i32 3
  store i8* %73, i8** %74, align 8
  %75 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 0, %76
  %78 = getelementptr inbounds i8, i8* %73, i64 %77
  %79 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, null
  store i8* %78, i8** %79, align 8
  br i1 %81, label %82, label %84

82:                                               ; preds = %71
  %83 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 0
  store i8* %78, i8** %83, align 8
  br label %84

84:                                               ; preds = %71, %82
  ret i8* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkDeque9pop_frontEv(%class.SkDeque* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 2
  %6 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %6, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %18

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %6, i64 0, i32 0
  %12 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %11, align 8
  %13 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %12, i64 0, i32 1
  store %"struct.SkDeque::Block"* null, %"struct.SkDeque::Block"** %13, align 8
  %14 = bitcast %"struct.SkDeque::Block"** %5 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_Z7sk_freePv(i8* %15) #6
  store %"struct.SkDeque::Block"* %12, %"struct.SkDeque::Block"** %5, align 8
  %16 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %12, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %10, %1
  %19 = phi i8* [ %17, %10 ], [ %8, %1 ]
  %20 = phi %"struct.SkDeque::Block"* [ %12, %10 ], [ %6, %1 ]
  %21 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %20, i64 0, i32 2
  %22 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i8, i8* %19, i64 %23
  %25 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %20, i64 0, i32 3
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ult i8* %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %18
  store i8* %24, i8** %21, align 8
  %29 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 0
  store i8* %24, i8** %29, align 8
  br label %42

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %20, i64 0, i32 0
  %32 = bitcast i8** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false)
  %33 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %31, align 8
  %34 = icmp eq %"struct.SkDeque::Block"* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = bitcast %class.SkDeque* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  br label %42

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %33, i64 0, i32 2
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %class.SkDeque* %0 to i64*
  store i64 %40, i64* %41, align 8
  br label %42

42:                                               ; preds = %35, %37, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7SkDeque8pop_backEv(%class.SkDeque* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 3
  %6 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %6, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %18

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %6, i64 0, i32 1
  %12 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %11, align 8
  %13 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %12, i64 0, i32 0
  store %"struct.SkDeque::Block"* null, %"struct.SkDeque::Block"** %13, align 8
  %14 = bitcast %"struct.SkDeque::Block"** %5 to i8**
  %15 = load i8*, i8** %14, align 8
  tail call void @_Z7sk_freePv(i8* %15) #6
  store %"struct.SkDeque::Block"* %12, %"struct.SkDeque::Block"** %5, align 8
  %16 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %12, i64 0, i32 3
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %10, %1
  %19 = phi i8* [ %17, %10 ], [ %8, %1 ]
  %20 = phi %"struct.SkDeque::Block"* [ %12, %10 ], [ %6, %1 ]
  %21 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 0, %22
  %24 = getelementptr inbounds i8, i8* %19, i64 %23
  %25 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %20, i64 0, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ugt i8* %24, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %20, i64 0, i32 3
  store i8* %24, i8** %29, align 8
  %30 = load i64, i64* %21, align 8
  %31 = sub i64 0, %30
  %32 = getelementptr inbounds i8, i8* %24, i64 %31
  %33 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 1
  store i8* %32, i8** %33, align 8
  br label %48

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %20, i64 0, i32 1
  %36 = bitcast i8** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  %37 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %35, align 8
  %38 = icmp eq %"struct.SkDeque::Block"* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  %40 = bitcast %class.SkDeque* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false)
  br label %48

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %37, i64 0, i32 3
  %43 = load i8*, i8** %42, align 8
  %44 = load i64, i64* %21, align 8
  %45 = sub i64 0, %44
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 1
  store i8* %46, i8** %47, align 8
  br label %48

48:                                               ; preds = %39, %41, %28
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7SkDeque18numBlocksAllocatedEv(%class.SkDeque* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %0, i64 0, i32 2
  %3 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %2, align 8
  %4 = icmp eq %"struct.SkDeque::Block"* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %7, %1
  %6 = phi i32 [ 0, %1 ], [ %10, %7 ]
  ret i32 %6

7:                                                ; preds = %1, %7
  %8 = phi %"struct.SkDeque::Block"* [ %12, %7 ], [ %3, %1 ]
  %9 = phi i32 [ %10, %7 ], [ 0, %1 ]
  %10 = add nuw nsw i32 %9, 1
  %11 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %8, i64 0, i32 0
  %12 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %11, align 8
  %13 = icmp eq %"struct.SkDeque::Block"* %12, null
  br i1 %13, label %5, label %7
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7SkDeque4IterC2Ev(%"class.SkDeque::Iter"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.SkDeque::Iter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7SkDeque4IterC2ERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* nocapture, %class.SkDeque* nocapture readonly dereferenceable(56), i32) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %1, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.SkDeque::Iter", %"class.SkDeque::Iter"* %0, i64 0, i32 2
  store i64 %5, i64* %6, align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %1, i64 0, i32 2
  %10 = bitcast %"struct.SkDeque::Block"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.SkDeque::Iter"* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %8, %20
  %15 = phi i64 [ %22, %20 ], [ %11, %8 ]
  %16 = inttoptr i64 %15 to %"struct.SkDeque::Block"*
  %17 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %16, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %44

20:                                               ; preds = %14
  %21 = inttoptr i64 %15 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %12, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %44, label %14

24:                                               ; preds = %3
  %25 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %1, i64 0, i32 3
  %26 = bitcast %"struct.SkDeque::Block"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.SkDeque::Iter"* %0 to i64*
  store i64 %27, i64* %28, align 8
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %44, label %30

30:                                               ; preds = %24, %36
  %31 = phi i64 [ %39, %36 ], [ %27, %24 ]
  %32 = inttoptr i64 %31 to %"struct.SkDeque::Block"*
  %33 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %32, i64 0, i32 3
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %32, i64 0, i32 1
  %38 = bitcast %"struct.SkDeque::Block"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %28, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %44, label %30

41:                                               ; preds = %30
  %42 = sub i64 0, %5
  %43 = getelementptr inbounds i8, i8* %34, i64 %42
  br label %44

44:                                               ; preds = %36, %14, %20, %24, %41, %8
  %45 = phi i8* [ null, %8 ], [ %43, %41 ], [ null, %24 ], [ %18, %14 ], [ null, %20 ], [ null, %36 ]
  %46 = getelementptr inbounds %"class.SkDeque::Iter", %"class.SkDeque::Iter"* %0, i64 0, i32 1
  store i8* %45, i8** %46, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7SkDeque4Iter5resetERKS_NS0_9IterStartE(%"class.SkDeque::Iter"* nocapture, %class.SkDeque* nocapture readonly dereferenceable(56), i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %1, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.SkDeque::Iter", %"class.SkDeque::Iter"* %0, i64 0, i32 2
  store i64 %5, i64* %6, align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %1, i64 0, i32 2
  %10 = bitcast %"struct.SkDeque::Block"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.SkDeque::Iter"* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %8, %20
  %15 = phi i64 [ %22, %20 ], [ %11, %8 ]
  %16 = inttoptr i64 %15 to %"struct.SkDeque::Block"*
  %17 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %16, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %44

20:                                               ; preds = %14
  %21 = inttoptr i64 %15 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %12, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %44, label %14

24:                                               ; preds = %3
  %25 = getelementptr inbounds %class.SkDeque, %class.SkDeque* %1, i64 0, i32 3
  %26 = bitcast %"struct.SkDeque::Block"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.SkDeque::Iter"* %0 to i64*
  store i64 %27, i64* %28, align 8
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %44, label %30

30:                                               ; preds = %24, %36
  %31 = phi i64 [ %39, %36 ], [ %27, %24 ]
  %32 = inttoptr i64 %31 to %"struct.SkDeque::Block"*
  %33 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %32, i64 0, i32 3
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %32, i64 0, i32 1
  %38 = bitcast %"struct.SkDeque::Block"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %28, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %44, label %30

41:                                               ; preds = %30
  %42 = sub i64 0, %5
  %43 = getelementptr inbounds i8, i8* %34, i64 %42
  br label %44

44:                                               ; preds = %36, %14, %20, %41, %24, %8
  %45 = phi i8* [ null, %8 ], [ %43, %41 ], [ null, %24 ], [ null, %20 ], [ %18, %14 ], [ null, %36 ]
  %46 = getelementptr inbounds %"class.SkDeque::Iter", %"class.SkDeque::Iter"* %0, i64 0, i32 1
  store i8* %45, i8** %46, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN7SkDeque4Iter4nextEv(%"class.SkDeque::Iter"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.SkDeque::Iter", %"class.SkDeque::Iter"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkDeque::Iter", %"class.SkDeque::Iter"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 %7
  %9 = getelementptr inbounds %"class.SkDeque::Iter", %"class.SkDeque::Iter"* %0, i64 0, i32 0
  %10 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %9, align 8
  %11 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %10, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %8, %12
  br i1 %13, label %14, label %23

14:                                               ; preds = %5, %19
  %15 = phi %"struct.SkDeque::Block"* [ %17, %19 ], [ %10, %5 ]
  %16 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %15, i64 0, i32 0
  %17 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %16, align 8
  store %"struct.SkDeque::Block"* %17, %"struct.SkDeque::Block"** %9, align 8
  %18 = icmp eq %"struct.SkDeque::Block"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %17, i64 0, i32 2
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %14, label %23

23:                                               ; preds = %14, %19, %5
  %24 = phi i8* [ %8, %5 ], [ null, %14 ], [ %21, %19 ]
  store i8* %24, i8** %2, align 8
  br label %25

25:                                               ; preds = %1, %23
  ret i8* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN7SkDeque4Iter4prevEv(%"class.SkDeque::Iter"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.SkDeque::Iter", %"class.SkDeque::Iter"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkDeque::Iter", %"class.SkDeque::Iter"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 0, %7
  %9 = getelementptr inbounds i8, i8* %3, i64 %8
  %10 = getelementptr inbounds %"class.SkDeque::Iter", %"class.SkDeque::Iter"* %0, i64 0, i32 0
  %11 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %10, align 8
  %12 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %11, i64 0, i32 2
  %13 = load i8*, i8** %12, align 8
  %14 = icmp ult i8* %9, %13
  br i1 %14, label %15, label %26

15:                                               ; preds = %5, %20
  %16 = phi %"struct.SkDeque::Block"* [ %18, %20 ], [ %11, %5 ]
  %17 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %16, i64 0, i32 1
  %18 = load %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"** %17, align 8
  store %"struct.SkDeque::Block"* %18, %"struct.SkDeque::Block"** %10, align 8
  %19 = icmp eq %"struct.SkDeque::Block"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.SkDeque::Block", %"struct.SkDeque::Block"* %18, i64 0, i32 3
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %15, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, i8* %22, i64 %8
  br label %26

26:                                               ; preds = %15, %24, %5
  %27 = phi i8* [ %9, %5 ], [ %25, %24 ], [ null, %15 ]
  store i8* %27, i8** %2, align 8
  br label %28

28:                                               ; preds = %1, %26
  ret i8* %3
}

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
