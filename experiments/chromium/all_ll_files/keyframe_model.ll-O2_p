; ModuleID = '../../ui/gfx/animation/keyframe/keyframe_model.cc'
source_filename = "../../ui/gfx/animation/keyframe/keyframe_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::KeyframeModel" = type { i32 (...)**, %"class.std::__1::unique_ptr.3", i32, i32, i32, double, double, i32, double, i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.gfx::AnimationCurve"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.gfx::AnimationCurve" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZNK4base9TimeDeltadvES0_ = comdat any

@_ZN3gfx12_GLOBAL__N_115s_runStateNamesE = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i32 0, i32 0)], align 16
@_ZTVN3gfx13KeyframeModelE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::KeyframeModel"*)* @_ZN3gfx13KeyframeModelD2Ev to i8*), i8* bitcast (void (%"class.gfx::KeyframeModel"*)* @_ZN3gfx13KeyframeModelD0Ev to i8*), i8* bitcast (i32 (%"class.gfx::KeyframeModel"*)* @_ZNK3gfx13KeyframeModel14TargetPropertyEv to i8*), i8* bitcast (void (%"class.gfx::KeyframeModel"*, i32, i64)* @_ZN3gfx13KeyframeModel11SetRunStateENS0_8RunStateEN4base9TimeTicksE to i8*), i8* bitcast (i1 (%"class.gfx::KeyframeModel"*)* @_ZNK3gfx13KeyframeModel21StartShouldBeDeferredEv to i8*)] }, align 8
@.str = private unnamed_addr constant [32 x i8] c"WAITING_FOR_TARGET_AVAILABILITY\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"WAITING_FOR_DELETION\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"STARTING\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"RUNNING\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"PAUSED\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"FINISHED\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"ABORTED\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"ABORTED_BUT_NEEDS_COMPLETION\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1

@_ZN3gfx13KeyframeModelC1ENSt3__110unique_ptrINS_14AnimationCurveENS1_14default_deleteIS3_EEEEii = hidden unnamed_addr alias void (%"class.gfx::KeyframeModel"*, %"class.gfx::AnimationCurve"*, i32, i32), void (%"class.gfx::KeyframeModel"*, %"class.gfx::AnimationCurve"*, i32, i32)* @_ZN3gfx13KeyframeModelC2ENSt3__110unique_ptrINS_14AnimationCurveENS1_14default_deleteIS3_EEEEii
@_ZN3gfx13KeyframeModelD1Ev = hidden unnamed_addr alias void (%"class.gfx::KeyframeModel"*), void (%"class.gfx::KeyframeModel"*)* @_ZN3gfx13KeyframeModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx13KeyframeModel8ToStringENS0_8RunStateE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds [8 x i8*], [8 x i8*]* @_ZN3gfx12_GLOBAL__N_115s_runStateNamesE, i64 0, i64 %3
  %5 = load i8*, i8** %4, align 8
  %6 = tail call i64 @strlen(i8* %5) #12
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %9) #13
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %26

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %25 = icmp eq i64 %6, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %20, %12
  %27 = phi i8* [ %15, %12 ], [ %24, %20 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %5, i64 %6, i1 false) #12
  br label %28

28:                                               ; preds = %20, %26
  %29 = phi i8* [ %24, %20 ], [ %27, %26 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 %6
  store i8 0, i8* %30, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.gfx::KeyframeModel"* @_ZN3gfx13KeyframeModel6CreateENSt3__110unique_ptrINS_14AnimationCurveENS1_14default_deleteIS3_EEEEii(%"class.gfx::AnimationCurve"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.gfx::AnimationCurve"* %0 to i64
  %5 = tail call i8* @_Znwm(i64 104) #14
  %6 = bitcast i8* %5 to %"class.gfx::KeyframeModel"*
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx13KeyframeModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 16
  %11 = bitcast i8* %10 to i32*
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 20
  %13 = bitcast i8* %12 to i32*
  store i32 %2, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %5, i64 24
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %5, i64 32
  %17 = bitcast i8* %16 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %17, align 8
  %18 = getelementptr inbounds i8, i8* %5, i64 48
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %5, i64 56
  %21 = bitcast i8* %20 to double*
  store double 1.000000e+00, double* %21, align 8
  %22 = getelementptr inbounds i8, i8* %5, i64 64
  %23 = bitcast i8* %22 to i32*
  store i32 3, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %5, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #12
  ret %"class.gfx::KeyframeModel"* %6
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx13KeyframeModelC2ENSt3__110unique_ptrINS_14AnimationCurveENS1_14default_deleteIS3_EEEEii(%"class.gfx::KeyframeModel"* nocapture, %"class.gfx::AnimationCurve"*, i32, i32) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.gfx::AnimationCurve"* %1 to i64
  %6 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx13KeyframeModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.3"* %7 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 2
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 3
  store i32 %3, i32* %10, align 4
  %11 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 4
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 5
  %13 = bitcast double* %12 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %13, align 8
  %14 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 7
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 8
  store double 1.000000e+00, double* %15, align 8
  %16 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 9
  store i32 3, i32* %16, align 8
  %17 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 10, i32 0, i32 0
  %18 = bitcast i64* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx13KeyframeModelD2Ev(%"class.gfx::KeyframeModel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx13KeyframeModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -3
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 6, i32* %3, align 8
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %9, align 8
  store %"class.gfx::AnimationCurve"* null, %"class.gfx::AnimationCurve"** %9, align 8
  %11 = icmp eq %"class.gfx::AnimationCurve"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.gfx::AnimationCurve"* %10 to void (%"class.gfx::AnimationCurve"*)***
  %14 = load void (%"class.gfx::AnimationCurve"*)**, void (%"class.gfx::AnimationCurve"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %14, i64 1
  %16 = load void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %15, align 8
  tail call void %16(%"class.gfx::AnimationCurve"* nonnull %10) #12
  br label %17

17:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx13KeyframeModelD0Ev(%"class.gfx::KeyframeModel"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx13KeyframeModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -3
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 6, i32* %3, align 8
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %9, align 8
  store %"class.gfx::AnimationCurve"* null, %"class.gfx::AnimationCurve"** %9, align 8
  %11 = icmp eq %"class.gfx::AnimationCurve"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.gfx::AnimationCurve"* %10 to void (%"class.gfx::AnimationCurve"*)***
  %14 = load void (%"class.gfx::AnimationCurve"*)**, void (%"class.gfx::AnimationCurve"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %14, i64 1
  %16 = load void (%"class.gfx::AnimationCurve"*)*, void (%"class.gfx::AnimationCurve"*)** %15, align 8
  tail call void %16(%"class.gfx::AnimationCurve"* nonnull %10) #12
  br label %17

17:                                               ; preds = %8, %12
  %18 = bitcast %"class.gfx::KeyframeModel"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gfx13KeyframeModel14TargetPropertyEv(%"class.gfx::KeyframeModel"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx13KeyframeModel11SetRunStateENS0_8RunStateEN4base9TimeTicksE(%"class.gfx::KeyframeModel"* nocapture, i32, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  switch i32 %1, label %36 [
    i32 3, label %5
    i32 4, label %34
  ]

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %9, label %36

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 12, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = sub nsw i64 %2, %11
  %13 = add i64 %12, -9223372036854775807
  %14 = icmp ult i64 %13, 2
  %15 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 13, i32 0
  %16 = load i64, i64* %15, align 8
  br i1 %14, label %24, label %17

17:                                               ; preds = %9
  %18 = icmp slt i64 %12, 0
  %19 = select i1 %18, i64 -9223372036854775808, i64 9223372036854775807
  %20 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %16, i64 %12) #12
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 %19, i64 %22, !prof !2
  br label %32

24:                                               ; preds = %9
  %25 = add i64 %16, -9223372036854775807
  %26 = icmp ugt i64 %25, 1
  %27 = icmp eq i64 %16, %12
  %28 = or i1 %27, %26
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #12
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  br label %32

32:                                               ; preds = %17, %24, %29
  %33 = phi i64 [ %23, %17 ], [ %12, %24 ], [ %12, %29 ]
  store i64 %33, i64* %15, align 8
  br label %36

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 %2, i64* %35, align 8
  br label %36

36:                                               ; preds = %5, %3, %34, %32
  %37 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 4
  store i32 %1, i32* %37, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx13KeyframeModel5PauseEN4base9TimeDeltaE(%"class.gfx::KeyframeModel"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 10, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %1, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = icmp slt i64 %1, 0
  %11 = select i1 %10, i64 -9223372036854775808, i64 9223372036854775807
  %12 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %6, i64 %1) #12
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 %11, i64 %14, !prof !2
  br label %24

16:                                               ; preds = %2
  %17 = add i64 %6, -9223372036854775807
  %18 = icmp ugt i64 %17, 1
  %19 = icmp eq i64 %6, %1
  %20 = or i1 %19, %18
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #12
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %24

24:                                               ; preds = %9, %16, %21
  %25 = phi i64 [ %15, %9 ], [ %1, %16 ], [ %1, %21 ]
  %26 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 13, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -9223372036854775807
  %29 = icmp ult i64 %28, 2
  br i1 %29, label %37, label %30

30:                                               ; preds = %24
  %31 = icmp slt i64 %27, 0
  %32 = select i1 %31, i64 -9223372036854775808, i64 9223372036854775807
  %33 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %25, i64 %27) #12
  %34 = extractvalue { i64, i1 } %33, 1
  %35 = extractvalue { i64, i1 } %33, 0
  %36 = select i1 %34, i64 %32, i64 %35, !prof !2
  br label %45

37:                                               ; preds = %24
  %38 = add i64 %25, -9223372036854775807
  %39 = icmp ugt i64 %38, 1
  %40 = icmp eq i64 %25, %27
  %41 = or i1 %40, %39
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #12
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  br label %45

45:                                               ; preds = %30, %37, %42
  %46 = phi i64 [ %36, %30 ], [ %27, %37 ], [ %27, %42 ]
  %47 = bitcast %"class.gfx::KeyframeModel"* %0 to void (%"class.gfx::KeyframeModel"*, i32, i64)***
  %48 = load void (%"class.gfx::KeyframeModel"*, i32, i64)**, void (%"class.gfx::KeyframeModel"*, i32, i64)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.gfx::KeyframeModel"*, i32, i64)*, void (%"class.gfx::KeyframeModel"*, i32, i64)** %48, i64 3
  %50 = load void (%"class.gfx::KeyframeModel"*, i32, i64)*, void (%"class.gfx::KeyframeModel"*, i32, i64)** %49, align 8
  call void %50(%"class.gfx::KeyframeModel"* %0, i32 4, i64 %46) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx13KeyframeModel24CalculatePhaseForTestingEN4base9TimeDeltaE(%"class.gfx::KeyframeModel"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZNK3gfx13KeyframeModel14CalculatePhaseEN4base9TimeDeltaE(%"class.gfx::KeyframeModel"* %0, i64 %1)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx13KeyframeModel14CalculatePhaseEN4base9TimeDeltaE(%"class.gfx::KeyframeModel"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 11, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, -9223372036854775808
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = add i64 %6, -9223372036854775807
  %10 = icmp ult i64 %9, 2
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  store i64 0, i64* %4, align 8
  br label %19

13:                                               ; preds = %2
  %14 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  store i64 0, i64* %4, align 8
  br label %22

15:                                               ; preds = %8
  %16 = sub nsw i64 0, %6
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  store i64 0, i64* %4, align 8
  %18 = icmp sgt i64 %6, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11, %15
  %20 = phi i8* [ %12, %11 ], [ %17, %15 ]
  %21 = phi i64 [ -9223372036854775808, %11 ], [ %16, %15 ]
  br label %22

22:                                               ; preds = %13, %15, %19
  %23 = phi i64 [ 0, %19 ], [ %16, %15 ], [ 9223372036854775807, %13 ]
  %24 = phi i8* [ %20, %19 ], [ %17, %15 ], [ %14, %13 ]
  %25 = phi i64 [ %21, %19 ], [ %16, %15 ], [ 9223372036854775807, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  %26 = icmp sgt i64 %23, %1
  br i1 %26, label %104, label %27

27:                                               ; preds = %22
  %28 = icmp eq i64 %23, %1
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 8
  %31 = load double, double* %30, align 8
  %32 = fcmp olt double %31, 0.000000e+00
  br i1 %32, label %104, label %33

33:                                               ; preds = %29, %27
  %34 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 5
  %35 = load double, double* %34, align 8
  %36 = tail call double @llvm.fabs.f64(double %35) #15
  %37 = fcmp ueq double %36, 0x7FF0000000000000
  br i1 %37, label %96, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %39, align 8
  %41 = bitcast %"class.gfx::AnimationCurve"* %40 to i64 (%"class.gfx::AnimationCurve"*)***
  %42 = load i64 (%"class.gfx::AnimationCurve"*)**, i64 (%"class.gfx::AnimationCurve"*)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %42, i64 2
  %44 = load i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %43, align 8
  %45 = tail call i64 %44(%"class.gfx::AnimationCurve"* %40) #12
  %46 = load double, double* %34, align 8
  %47 = sitofp i64 %45 to double
  %48 = fmul double %46, %47
  %49 = fcmp oge double %48, 0xC3E0000000000000
  %50 = fcmp ole double %48, 0x43DFFFFFFFFFFFFF
  %51 = and i1 %50, %49
  %52 = fptosi double %48 to i64
  br i1 %51, label %60, label %53

53:                                               ; preds = %38
  %54 = lshr i64 %45, 63
  %55 = trunc i64 %54 to i32
  %56 = fcmp olt double %46, 0.000000e+00
  %57 = zext i1 %56 to i32
  %58 = icmp eq i32 %55, %57
  %59 = select i1 %58, i64 9223372036854775807, i64 -9223372036854775808
  br label %60

60:                                               ; preds = %38, %53
  %61 = phi i64 [ %52, %38 ], [ %59, %53 ]
  %62 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 8
  %63 = load double, double* %62, align 8
  %64 = tail call double @llvm.fabs.f64(double %63) #12
  %65 = sitofp i64 %61 to double
  %66 = fdiv double %65, %64
  %67 = fcmp oge double %66, 0xC3E0000000000000
  %68 = fcmp ole double %66, 0x43DFFFFFFFFFFFFF
  %69 = and i1 %68, %67
  %70 = fptosi double %66 to i64
  %71 = icmp sgt i64 %61, -1
  %72 = select i1 %71, i64 9223372036854775807, i64 -9223372036854775808
  %73 = select i1 %69, i64 %70, i64 %72
  %74 = add i64 %73, -9223372036854775807
  %75 = icmp ult i64 %74, 2
  br i1 %75, label %83, label %76

76:                                               ; preds = %60
  %77 = icmp slt i64 %73, 0
  %78 = select i1 %77, i64 -9223372036854775808, i64 9223372036854775807
  %79 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %25, i64 %73) #12
  %80 = extractvalue { i64, i1 } %79, 1
  %81 = extractvalue { i64, i1 } %79, 0
  %82 = select i1 %80, i64 %78, i64 %81, !prof !2
  br label %91

83:                                               ; preds = %60
  %84 = add i64 %25, -9223372036854775807
  %85 = icmp ugt i64 %84, 1
  %86 = icmp eq i64 %25, %73
  %87 = or i1 %85, %86
  br i1 %87, label %91, label %88

88:                                               ; preds = %83
  %89 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #12
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #12
  br label %91

91:                                               ; preds = %88, %83, %76
  %92 = phi i64 [ %82, %76 ], [ %73, %83 ], [ %73, %88 ]
  %93 = icmp sgt i64 %92, 0
  %94 = select i1 %93, i64 %92, i64 0
  %95 = icmp slt i64 %94, %1
  br i1 %95, label %104, label %96

96:                                               ; preds = %33, %91
  %97 = phi i64 [ %94, %91 ], [ 9223372036854775807, %33 ]
  %98 = icmp eq i64 %97, %1
  br i1 %98, label %99, label %103

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 8
  %101 = load double, double* %100, align 8
  %102 = fcmp ogt double %101, 0.000000e+00
  br i1 %102, label %104, label %103

103:                                              ; preds = %99, %96
  br label %104

104:                                              ; preds = %103, %99, %91, %22, %29
  %105 = phi i32 [ 0, %29 ], [ 0, %22 ], [ 1, %103 ], [ 2, %99 ], [ 2, %91 ]
  ret i32 %105
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZNK3gfx13KeyframeModel19CalculateActiveTimeEN4base9TimeTicksE(%"class.gfx::KeyframeModel"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  store i64 %1, i64* %6, align 8
  %9 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 10, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %38, label %16

16:                                               ; preds = %12, %2
  %17 = bitcast %"class.gfx::KeyframeModel"* %0 to i1 (%"class.gfx::KeyframeModel"*)***
  %18 = load i1 (%"class.gfx::KeyframeModel"*)**, i1 (%"class.gfx::KeyframeModel"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.gfx::KeyframeModel"*)*, i1 (%"class.gfx::KeyframeModel"*)** %18, i64 4
  %20 = load i1 (%"class.gfx::KeyframeModel"*)*, i1 (%"class.gfx::KeyframeModel"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.gfx::KeyframeModel"* %0) #12
  br i1 %21, label %38, label %22

22:                                               ; preds = %16
  %23 = load i32, i32* %9, align 8
  %24 = icmp eq i32 %23, 4
  %25 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 12
  %26 = bitcast i64* %6 to %"class.base::TimeTicks"*
  %27 = select i1 %24, %"class.base::TimeTicks"* %25, %"class.base::TimeTicks"* %26
  %28 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %27, i64 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::TimeDelta"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 10, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = sub nsw i64 %29, %32
  %34 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 13, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %7, i64 %36) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  br label %38

38:                                               ; preds = %12, %16, %22
  %39 = phi i64 [ %37, %22 ], [ 0, %16 ], [ 0, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  %40 = call i32 @_ZNK3gfx13KeyframeModel14CalculatePhaseEN4base9TimeDeltaE(%"class.gfx::KeyframeModel"* %0, i64 %39)
  switch i32 %40, label %155 [
    i32 0, label %41
    i32 1, label %70
    i32 2, label %90
  ]

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 9
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, -2
  %45 = icmp eq i32 %44, 2
  br i1 %45, label %46, label %155

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 11, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, -9223372036854775807
  %50 = icmp ult i64 %49, 2
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = icmp slt i64 %48, 0
  %53 = select i1 %52, i64 -9223372036854775808, i64 9223372036854775807
  %54 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %39, i64 %48) #12
  %55 = extractvalue { i64, i1 } %54, 1
  %56 = extractvalue { i64, i1 } %54, 0
  %57 = select i1 %55, i64 %53, i64 %56, !prof !2
  br label %66

58:                                               ; preds = %46
  %59 = add i64 %39, -9223372036854775807
  %60 = icmp ugt i64 %59, 1
  %61 = icmp eq i64 %39, %48
  %62 = or i1 %60, %61
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #12
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #12
  br label %66

66:                                               ; preds = %51, %58, %63
  %67 = phi i64 [ %57, %51 ], [ %48, %58 ], [ %48, %63 ]
  %68 = icmp sgt i64 %67, 0
  %69 = select i1 %68, i64 %67, i64 0
  br label %155

70:                                               ; preds = %38
  %71 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 11, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, -9223372036854775807
  %74 = icmp ult i64 %73, 2
  br i1 %74, label %82, label %75

75:                                               ; preds = %70
  %76 = icmp slt i64 %72, 0
  %77 = select i1 %76, i64 -9223372036854775808, i64 9223372036854775807
  %78 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %39, i64 %72) #12
  %79 = extractvalue { i64, i1 } %78, 1
  %80 = extractvalue { i64, i1 } %78, 0
  %81 = select i1 %79, i64 %77, i64 %80, !prof !2
  br label %155

82:                                               ; preds = %70
  %83 = add i64 %39, -9223372036854775807
  %84 = icmp ugt i64 %83, 1
  %85 = icmp eq i64 %39, %72
  %86 = or i1 %84, %85
  br i1 %86, label %155, label %87

87:                                               ; preds = %82
  %88 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #12
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #12
  br label %155

90:                                               ; preds = %38
  %91 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 9
  %92 = load i32, i32* %91, align 8
  switch i32 %92, label %155 [
    i32 1, label %93
    i32 3, label %93
  ]

93:                                               ; preds = %90, %90
  %94 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %95 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %94, align 8
  %96 = bitcast %"class.gfx::AnimationCurve"* %95 to i64 (%"class.gfx::AnimationCurve"*)***
  %97 = load i64 (%"class.gfx::AnimationCurve"*)**, i64 (%"class.gfx::AnimationCurve"*)*** %96, align 8
  %98 = getelementptr inbounds i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %97, i64 2
  %99 = load i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %98, align 8
  %100 = call i64 %99(%"class.gfx::AnimationCurve"* %95) #12
  %101 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 5
  %102 = load double, double* %101, align 8
  %103 = sitofp i64 %100 to double
  %104 = fmul double %102, %103
  %105 = fcmp oge double %104, 0xC3E0000000000000
  %106 = fcmp ole double %104, 0x43DFFFFFFFFFFFFF
  %107 = and i1 %106, %105
  %108 = fptosi double %104 to i64
  br i1 %107, label %116, label %109

109:                                              ; preds = %93
  %110 = lshr i64 %100, 63
  %111 = trunc i64 %110 to i32
  %112 = fcmp olt double %102, 0.000000e+00
  %113 = zext i1 %112 to i32
  %114 = icmp eq i32 %111, %113
  %115 = select i1 %114, i64 9223372036854775807, i64 -9223372036854775808
  br label %116

116:                                              ; preds = %93, %109
  %117 = phi i64 [ %108, %93 ], [ %115, %109 ]
  %118 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 8
  %119 = load double, double* %118, align 8
  %120 = call double @llvm.fabs.f64(double %119) #12
  %121 = sitofp i64 %117 to double
  %122 = fdiv double %121, %120
  %123 = fcmp oge double %122, 0xC3E0000000000000
  %124 = fcmp ole double %122, 0x43DFFFFFFFFFFFFF
  %125 = and i1 %124, %123
  %126 = fptosi double %122 to i64
  %127 = icmp sgt i64 %117, -1
  %128 = select i1 %127, i64 9223372036854775807, i64 -9223372036854775808
  %129 = select i1 %125, i64 %126, i64 %128
  %130 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 11, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, -9223372036854775807
  %133 = icmp ult i64 %132, 2
  br i1 %133, label %141, label %134

134:                                              ; preds = %116
  %135 = icmp slt i64 %131, 0
  %136 = select i1 %135, i64 -9223372036854775808, i64 9223372036854775807
  %137 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %39, i64 %131) #12
  %138 = extractvalue { i64, i1 } %137, 1
  %139 = extractvalue { i64, i1 } %137, 0
  %140 = select i1 %138, i64 %136, i64 %139, !prof !2
  br label %149

141:                                              ; preds = %116
  %142 = add i64 %39, -9223372036854775807
  %143 = icmp ugt i64 %142, 1
  %144 = icmp eq i64 %39, %131
  %145 = or i1 %143, %144
  br i1 %145, label %149, label %146

146:                                              ; preds = %141
  %147 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #12
  %148 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #12
  br label %149

149:                                              ; preds = %134, %141, %146
  %150 = phi i64 [ %140, %134 ], [ %131, %141 ], [ %131, %146 ]
  %151 = icmp slt i64 %129, %150
  %152 = select i1 %151, i64 %129, i64 %150
  %153 = icmp sgt i64 %152, 0
  %154 = select i1 %153, i64 %152, i64 0
  br label %155

155:                                              ; preds = %38, %90, %87, %82, %75, %41, %149, %66
  %156 = phi i8 [ 1, %149 ], [ 1, %66 ], [ 0, %41 ], [ 1, %75 ], [ 1, %82 ], [ 1, %87 ], [ 0, %90 ], [ 0, %38 ]
  %157 = phi i64 [ %154, %149 ], [ %69, %66 ], [ undef, %41 ], [ %81, %75 ], [ %72, %82 ], [ %72, %87 ], [ undef, %90 ], [ undef, %38 ]
  %158 = insertvalue { i8, i64 } undef, i8 %156, 0
  %159 = insertvalue { i8, i64 } %158, i64 %157, 1
  ret { i8, i64 } %159
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3gfx13KeyframeModel31ConvertMonotonicTimeToLocalTimeEN4base9TimeTicksE(%"class.gfx::KeyframeModel"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  store i64 %1, i64* %3, align 8
  %5 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 10, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %8, %2
  %13 = bitcast %"class.gfx::KeyframeModel"* %0 to i1 (%"class.gfx::KeyframeModel"*)***
  %14 = load i1 (%"class.gfx::KeyframeModel"*)**, i1 (%"class.gfx::KeyframeModel"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.gfx::KeyframeModel"*)*, i1 (%"class.gfx::KeyframeModel"*)** %14, i64 4
  %16 = load i1 (%"class.gfx::KeyframeModel"*)*, i1 (%"class.gfx::KeyframeModel"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.gfx::KeyframeModel"* %0) #12
  br i1 %17, label %34, label %18

18:                                               ; preds = %12
  %19 = load i32, i32* %5, align 8
  %20 = icmp eq i32 %19, 4
  %21 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 12
  %22 = bitcast i64* %3 to %"class.base::TimeTicks"*
  %23 = select i1 %20, %"class.base::TimeTicks"* %21, %"class.base::TimeTicks"* %22
  %24 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %23, i64 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 10, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = sub nsw i64 %25, %28
  %30 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 13, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %32)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  br label %34

34:                                               ; preds = %8, %12, %18
  %35 = phi i64 [ %33, %18 ], [ 0, %12 ], [ 0, %8 ]
  ret i64 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx13KeyframeModel12IsFinishedAtEN4base9TimeTicksE(%"class.gfx::KeyframeModel"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %8 [
    i32 5, label %105
    i32 6, label %105
    i32 1, label %105
  ]

8:                                                ; preds = %2
  %9 = bitcast %"class.gfx::KeyframeModel"* %0 to i1 (%"class.gfx::KeyframeModel"*)***
  %10 = load i1 (%"class.gfx::KeyframeModel"*)**, i1 (%"class.gfx::KeyframeModel"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.gfx::KeyframeModel"*)*, i1 (%"class.gfx::KeyframeModel"*)** %10, i64 4
  %12 = load i1 (%"class.gfx::KeyframeModel"*)*, i1 (%"class.gfx::KeyframeModel"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.gfx::KeyframeModel"* %0) #12
  br i1 %13, label %105, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 8
  %16 = load double, double* %15, align 8
  %17 = fcmp oeq double %16, 0.000000e+00
  br i1 %17, label %105, label %18

18:                                               ; preds = %14
  %19 = load i32, i32* %6, align 8
  %20 = icmp eq i32 %19, 3
  br i1 %20, label %21, label %105

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 5
  %23 = load double, double* %22, align 8
  %24 = tail call double @llvm.fabs.f64(double %23) #15
  %25 = fcmp ueq double %24, 0x7FF0000000000000
  br i1 %25, label %105, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %27, align 8
  %29 = bitcast %"class.gfx::AnimationCurve"* %28 to i64 (%"class.gfx::AnimationCurve"*)***
  %30 = load i64 (%"class.gfx::AnimationCurve"*)**, i64 (%"class.gfx::AnimationCurve"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %30, i64 2
  %32 = load i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %31, align 8
  %33 = tail call i64 %32(%"class.gfx::AnimationCurve"* %28) #12
  %34 = load double, double* %22, align 8
  %35 = load double, double* %15, align 8
  %36 = tail call double @llvm.fabs.f64(double %35) #12
  %37 = fdiv double %34, %36
  %38 = sitofp i64 %33 to double
  %39 = fmul double %37, %38
  %40 = fcmp oge double %39, 0xC3E0000000000000
  %41 = fcmp ole double %39, 0x43DFFFFFFFFFFFFF
  %42 = and i1 %41, %40
  %43 = fptosi double %39 to i64
  br i1 %42, label %51, label %44

44:                                               ; preds = %26
  %45 = lshr i64 %33, 63
  %46 = trunc i64 %45 to i32
  %47 = fcmp olt double %37, 0.000000e+00
  %48 = zext i1 %47 to i32
  %49 = icmp eq i32 %46, %48
  %50 = select i1 %49, i64 9223372036854775807, i64 -9223372036854775808
  br label %51

51:                                               ; preds = %26, %44
  %52 = phi i64 [ %43, %26 ], [ %50, %44 ]
  %53 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  store i64 %1, i64* %3, align 8
  %54 = load i32, i32* %6, align 8
  %55 = icmp eq i32 %54, 2
  br i1 %55, label %56, label %60

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 10, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %81, label %60

60:                                               ; preds = %56, %51
  %61 = load i1 (%"class.gfx::KeyframeModel"*)**, i1 (%"class.gfx::KeyframeModel"*)*** %9, align 8
  %62 = getelementptr inbounds i1 (%"class.gfx::KeyframeModel"*)*, i1 (%"class.gfx::KeyframeModel"*)** %61, i64 4
  %63 = load i1 (%"class.gfx::KeyframeModel"*)*, i1 (%"class.gfx::KeyframeModel"*)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.gfx::KeyframeModel"* %0) #12
  br i1 %64, label %81, label %65

65:                                               ; preds = %60
  %66 = load i32, i32* %6, align 8
  %67 = icmp eq i32 %66, 4
  %68 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 12
  %69 = bitcast i64* %3 to %"class.base::TimeTicks"*
  %70 = select i1 %67, %"class.base::TimeTicks"* %68, %"class.base::TimeTicks"* %69
  %71 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %70, i64 0, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #12
  %74 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 10, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = sub nsw i64 %72, %75
  %77 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 13, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %79) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #12
  br label %81

81:                                               ; preds = %56, %60, %65
  %82 = phi i64 [ %80, %65 ], [ 0, %60 ], [ 0, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  %83 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 11, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, -9223372036854775807
  %86 = icmp ult i64 %85, 2
  br i1 %86, label %94, label %87

87:                                               ; preds = %81
  %88 = icmp slt i64 %84, 0
  %89 = select i1 %88, i64 -9223372036854775808, i64 9223372036854775807
  %90 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %82, i64 %84) #12
  %91 = extractvalue { i64, i1 } %90, 1
  %92 = extractvalue { i64, i1 } %90, 0
  %93 = select i1 %91, i64 %89, i64 %92, !prof !2
  br label %102

94:                                               ; preds = %81
  %95 = add i64 %82, -9223372036854775807
  %96 = icmp ugt i64 %95, 1
  %97 = icmp eq i64 %82, %84
  %98 = or i1 %96, %97
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #12
  %101 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #12
  br label %102

102:                                              ; preds = %87, %94, %99
  %103 = phi i64 [ %93, %87 ], [ %84, %94 ], [ %84, %99 ]
  %104 = icmp sle i64 %52, %103
  br label %105

105:                                              ; preds = %21, %2, %2, %2, %18, %102, %14, %8
  %106 = phi i1 [ false, %8 ], [ false, %14 ], [ false, %21 ], [ false, %18 ], [ %104, %102 ], [ true, %2 ], [ true, %2 ], [ true, %2 ]
  ret i1 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx13KeyframeModel13HasActiveTimeEN4base9TimeTicksE(%"class.gfx::KeyframeModel"*, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call { i8, i64 } @_ZNK3gfx13KeyframeModel19CalculateActiveTimeEN4base9TimeTicksE(%"class.gfx::KeyframeModel"* %0, i64 %1)
  %4 = extractvalue { i8, i64 } %3, 0
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3gfx13KeyframeModel21StartShouldBeDeferredEv(%"class.gfx::KeyframeModel"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3gfx13KeyframeModel26TrimTimeToCurrentIterationEN4base9TimeTicksE(%"class.gfx::KeyframeModel"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = tail call { i8, i64 } @_ZNK3gfx13KeyframeModel19CalculateActiveTimeEN4base9TimeTicksE(%"class.gfx::KeyframeModel"* %0, i64 %1)
  %11 = extractvalue { i8, i64 } %10, 0
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

14:                                               ; preds = %2
  %15 = extractvalue { i8, i64 } %10, 1
  store i64 %15, i64* %9, align 8
  %16 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %16, align 8
  %18 = bitcast %"class.gfx::AnimationCurve"* %17 to i64 (%"class.gfx::AnimationCurve"*)***
  %19 = load i64 (%"class.gfx::AnimationCurve"*)**, i64 (%"class.gfx::AnimationCurve"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %19, i64 2
  %21 = load i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %20, align 8
  %22 = tail call i64 %21(%"class.gfx::AnimationCurve"* %17) #12
  %23 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 6
  %24 = load double, double* %23, align 8
  %25 = sitofp i64 %22 to double
  %26 = fmul double %24, %25
  %27 = fcmp oge double %26, 0xC3E0000000000000
  %28 = fcmp ole double %26, 0x43DFFFFFFFFFFFFF
  %29 = and i1 %28, %27
  %30 = fptosi double %26 to i64
  br i1 %29, label %38, label %31

31:                                               ; preds = %14
  %32 = lshr i64 %22, 63
  %33 = trunc i64 %32 to i32
  %34 = fcmp olt double %24, 0.000000e+00
  %35 = zext i1 %34 to i32
  %36 = icmp eq i32 %33, %35
  %37 = select i1 %36, i64 9223372036854775807, i64 -9223372036854775808
  br label %38

38:                                               ; preds = %14, %31
  %39 = phi i64 [ %30, %14 ], [ %37, %31 ]
  %40 = icmp slt i64 %15, 0
  br i1 %40, label %247, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 5
  %43 = load double, double* %42, align 8
  %44 = fcmp une double %43, 0.000000e+00
  br i1 %44, label %45, label %247

45:                                               ; preds = %41
  %46 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %16, align 8
  %47 = bitcast %"class.gfx::AnimationCurve"* %46 to i64 (%"class.gfx::AnimationCurve"*)***
  %48 = load i64 (%"class.gfx::AnimationCurve"*)**, i64 (%"class.gfx::AnimationCurve"*)*** %47, align 8
  %49 = getelementptr inbounds i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %48, i64 2
  %50 = load i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %49, align 8
  %51 = tail call i64 %50(%"class.gfx::AnimationCurve"* %46) #12
  %52 = icmp slt i64 %51, 1
  br i1 %52, label %247, label %53

53:                                               ; preds = %45
  %54 = load double, double* %42, align 8
  %55 = tail call double @llvm.fabs.f64(double %54) #15
  %56 = fcmp ueq double %55, 0x7FF0000000000000
  br i1 %56, label %78, label %57

57:                                               ; preds = %53
  %58 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %16, align 8
  %59 = bitcast %"class.gfx::AnimationCurve"* %58 to i64 (%"class.gfx::AnimationCurve"*)***
  %60 = load i64 (%"class.gfx::AnimationCurve"*)**, i64 (%"class.gfx::AnimationCurve"*)*** %59, align 8
  %61 = getelementptr inbounds i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %60, i64 2
  %62 = load i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %61, align 8
  %63 = tail call i64 %62(%"class.gfx::AnimationCurve"* %58) #12
  %64 = load double, double* %42, align 8
  %65 = sitofp i64 %63 to double
  %66 = fmul double %64, %65
  %67 = fcmp oge double %66, 0xC3E0000000000000
  %68 = fcmp ole double %66, 0x43DFFFFFFFFFFFFF
  %69 = and i1 %68, %67
  %70 = fptosi double %66 to i64
  br i1 %69, label %78, label %71

71:                                               ; preds = %57
  %72 = lshr i64 %63, 63
  %73 = trunc i64 %72 to i32
  %74 = fcmp olt double %64, 0.000000e+00
  %75 = zext i1 %74 to i32
  %76 = icmp eq i32 %73, %75
  %77 = select i1 %76, i64 9223372036854775807, i64 -9223372036854775808
  br label %78

78:                                               ; preds = %53, %71, %57
  %79 = phi i64 [ %70, %57 ], [ %77, %71 ], [ 9223372036854775807, %53 ]
  %80 = bitcast %"class.base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #12
  %81 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  store i64 0, i64* %81, align 8
  %82 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 8
  %83 = load double, double* %82, align 8
  %84 = fcmp olt double %83, 0.000000e+00
  br i1 %84, label %85, label %127

85:                                               ; preds = %78
  %86 = tail call double @llvm.fabs.f64(double %83) #12
  %87 = sitofp i64 %79 to double
  %88 = fdiv double %87, %86
  %89 = fcmp oge double %88, 0xC3E0000000000000
  %90 = fcmp ole double %88, 0x43DFFFFFFFFFFFFF
  %91 = and i1 %90, %89
  %92 = fptosi double %88 to i64
  %93 = icmp sgt i64 %79, -1
  %94 = select i1 %93, i64 9223372036854775807, i64 -9223372036854775808
  %95 = select i1 %91, i64 %92, i64 %94
  %96 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %5, i64 %95)
  %97 = load double, double* %82, align 8
  %98 = sitofp i64 %96 to double
  %99 = fmul double %97, %98
  %100 = fcmp oge double %99, 0xC3E0000000000000
  %101 = fcmp ole double %99, 0x43DFFFFFFFFFFFFF
  %102 = and i1 %101, %100
  %103 = fptosi double %99 to i64
  br i1 %102, label %111, label %104

104:                                              ; preds = %85
  %105 = lshr i64 %96, 63
  %106 = trunc i64 %105 to i32
  %107 = fcmp olt double %97, 0.000000e+00
  %108 = zext i1 %107 to i32
  %109 = icmp eq i32 %106, %108
  %110 = select i1 %109, i64 9223372036854775807, i64 -9223372036854775808
  br label %111

111:                                              ; preds = %85, %104
  %112 = phi i64 [ %103, %85 ], [ %110, %104 ]
  %113 = add i64 %39, -9223372036854775807
  %114 = icmp ult i64 %113, 2
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  %116 = icmp slt i64 %39, 0
  %117 = select i1 %116, i64 -9223372036854775808, i64 9223372036854775807
  %118 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %112, i64 %39) #12
  br label %149

119:                                              ; preds = %111
  %120 = add i64 %112, -9223372036854775807
  %121 = icmp ugt i64 %120, 1
  %122 = icmp eq i64 %112, %39
  %123 = or i1 %122, %121
  br i1 %123, label %155, label %124

124:                                              ; preds = %119
  %125 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #12
  %126 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #12
  br label %155

127:                                              ; preds = %78
  %128 = sitofp i64 %15 to double
  %129 = fmul double %83, %128
  %130 = fcmp oge double %129, 0xC3E0000000000000
  %131 = fcmp ole double %129, 0x43DFFFFFFFFFFFFF
  %132 = and i1 %131, %130
  %133 = fptosi double %129 to i64
  %134 = select i1 %132, i64 %133, i64 9223372036854775807
  %135 = add i64 %39, -9223372036854775807
  %136 = icmp ult i64 %135, 2
  br i1 %136, label %141, label %137

137:                                              ; preds = %127
  %138 = icmp slt i64 %39, 0
  %139 = select i1 %138, i64 -9223372036854775808, i64 9223372036854775807
  %140 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %134, i64 %39) #12
  br label %149

141:                                              ; preds = %127
  %142 = add i64 %134, -9223372036854775807
  %143 = icmp ugt i64 %142, 1
  %144 = icmp eq i64 %134, %39
  %145 = or i1 %144, %143
  br i1 %145, label %155, label %146

146:                                              ; preds = %141
  %147 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #12
  %148 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #12
  br label %155

149:                                              ; preds = %137, %115
  %150 = phi { i64, i1 } [ %140, %137 ], [ %118, %115 ]
  %151 = phi i64 [ %139, %137 ], [ %117, %115 ]
  %152 = extractvalue { i64, i1 } %150, 1
  %153 = extractvalue { i64, i1 } %150, 0
  %154 = select i1 %152, i64 %151, i64 %153
  store i64 %154, i64* %81, align 8
  br label %158

155:                                              ; preds = %146, %141, %124, %119
  %156 = phi i64 [ %135, %146 ], [ %135, %141 ], [ %113, %124 ], [ %113, %119 ]
  store i64 %39, i64* %81, align 8
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %158, label %175

158:                                              ; preds = %149, %155
  %159 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %6, i64 %39)
  %160 = icmp eq i64 %159, %79
  br i1 %160, label %161, label %175

161:                                              ; preds = %158
  %162 = load double, double* %42, align 8
  %163 = load double, double* %23, align 8
  %164 = fadd double %162, %163
  %165 = call double @fmod(double %164, double 1.000000e+00) #12
  %166 = fcmp oeq double %165, 0.000000e+00
  br i1 %166, label %167, label %175

167:                                              ; preds = %161
  %168 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %16, align 8
  %169 = bitcast %"class.gfx::AnimationCurve"* %168 to i64 (%"class.gfx::AnimationCurve"*)***
  %170 = load i64 (%"class.gfx::AnimationCurve"*)**, i64 (%"class.gfx::AnimationCurve"*)*** %169, align 8
  %171 = getelementptr inbounds i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %170, i64 2
  %172 = load i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %171, align 8
  %173 = call i64 %172(%"class.gfx::AnimationCurve"* %168) #12
  %174 = load i64, i64* %81, align 8
  br label %188

175:                                              ; preds = %155, %158, %161
  %176 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %16, align 8
  %177 = bitcast %"class.gfx::AnimationCurve"* %176 to i64 (%"class.gfx::AnimationCurve"*)***
  %178 = load i64 (%"class.gfx::AnimationCurve"*)**, i64 (%"class.gfx::AnimationCurve"*)*** %177, align 8
  %179 = getelementptr inbounds i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %178, i64 2
  %180 = load i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %179, align 8
  %181 = call i64 %180(%"class.gfx::AnimationCurve"* %176) #12
  %182 = load i64, i64* %81, align 8
  %183 = add i64 %182, -9223372036854775807
  %184 = icmp ult i64 %183, 2
  br i1 %184, label %188, label %185

185:                                              ; preds = %175
  switch i64 %181, label %186 [
    i64 -9223372036854775808, label %188
    i64 9223372036854775807, label %188
    i64 0, label %188
  ]

186:                                              ; preds = %185
  %187 = srem i64 %182, %181
  br label %188

188:                                              ; preds = %186, %167, %185, %185, %185, %175
  %189 = phi i64 [ %182, %185 ], [ %182, %185 ], [ %182, %185 ], [ %182, %175 ], [ %182, %186 ], [ %174, %167 ]
  %190 = phi i64 [ %182, %185 ], [ %182, %185 ], [ %182, %185 ], [ %182, %175 ], [ %187, %186 ], [ %173, %167 ]
  %191 = icmp slt i64 %189, 1
  br i1 %191, label %223, label %192

192:                                              ; preds = %188
  %193 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %16, align 8
  %194 = bitcast %"class.gfx::AnimationCurve"* %193 to i64 (%"class.gfx::AnimationCurve"*)***
  %195 = load i64 (%"class.gfx::AnimationCurve"*)**, i64 (%"class.gfx::AnimationCurve"*)*** %194, align 8
  %196 = getelementptr inbounds i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %195, i64 2
  %197 = load i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %196, align 8
  %198 = call i64 %197(%"class.gfx::AnimationCurve"* %193) #12
  %199 = icmp eq i64 %190, %198
  br i1 %199, label %200, label %207

200:                                              ; preds = %192
  %201 = load double, double* %23, align 8
  %202 = load double, double* %42, align 8
  %203 = fadd double %201, %202
  %204 = fadd double %203, -1.000000e+00
  %205 = call double @llvm.ceil.f64(double %204)
  %206 = fptosi double %205 to i32
  br label %223

207:                                              ; preds = %192
  %208 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %16, align 8
  %209 = bitcast %"class.gfx::AnimationCurve"* %208 to i64 (%"class.gfx::AnimationCurve"*)***
  %210 = load i64 (%"class.gfx::AnimationCurve"*)**, i64 (%"class.gfx::AnimationCurve"*)*** %209, align 8
  %211 = getelementptr inbounds i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %210, i64 2
  %212 = load i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %211, align 8
  %213 = call i64 %212(%"class.gfx::AnimationCurve"* %208) #12
  %214 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %6, i64 %213)
  %215 = call double @llvm.floor.f64(double %214) #12
  %216 = fcmp ult double %215, 0xC1E0000000000000
  %217 = fcmp ugt double %215, 0x41DFFFFFFFC00000
  %218 = fcmp ogt double %215, 0xC1E0000000000000
  %219 = select i1 %218, double %215, double 0xC1E0000000000000
  %220 = fptosi double %219 to i32
  %221 = select i1 %216, i32 0, i32 2147483647
  %222 = select i1 %217, i32 %221, i32 %220
  br label %223

223:                                              ; preds = %188, %200, %207
  %224 = phi i32 [ %206, %200 ], [ %222, %207 ], [ 0, %188 ]
  %225 = getelementptr inbounds %"class.gfx::KeyframeModel", %"class.gfx::KeyframeModel"* %0, i64 0, i32 7
  %226 = load i32, i32* %225, align 8
  switch i32 %226, label %230 [
    i32 1, label %235
    i32 2, label %227
  ]

227:                                              ; preds = %223
  %228 = srem i32 %224, 2
  %229 = icmp eq i32 %228, 1
  br i1 %229, label %235, label %245

230:                                              ; preds = %223
  %231 = icmp eq i32 %226, 3
  %232 = and i32 %224, 1
  %233 = icmp eq i32 %232, 0
  %234 = and i1 %231, %233
  br i1 %234, label %235, label %245

235:                                              ; preds = %223, %227, %230
  %236 = bitcast %"class.base::TimeDelta"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #12
  %237 = load %"class.gfx::AnimationCurve"*, %"class.gfx::AnimationCurve"** %16, align 8
  %238 = bitcast %"class.gfx::AnimationCurve"* %237 to i64 (%"class.gfx::AnimationCurve"*)***
  %239 = load i64 (%"class.gfx::AnimationCurve"*)**, i64 (%"class.gfx::AnimationCurve"*)*** %238, align 8
  %240 = getelementptr inbounds i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %239, i64 2
  %241 = load i64 (%"class.gfx::AnimationCurve"*)*, i64 (%"class.gfx::AnimationCurve"*)** %240, align 8
  %242 = call i64 %241(%"class.gfx::AnimationCurve"* %237) #12
  %243 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 %242, i64* %243, align 8
  %244 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %7, i64 %190)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #12
  br label %245

245:                                              ; preds = %227, %230, %235
  %246 = phi i64 [ %244, %235 ], [ %190, %230 ], [ %190, %227 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #12
  br label %247

247:                                              ; preds = %45, %41, %38, %245
  %248 = phi i64 [ %246, %245 ], [ %39, %38 ], [ 0, %41 ], [ 0, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret i64 %248
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #12
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0)) #12
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0)) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #6

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #7

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare double @fmod(double, double) local_unnamed_addr #11

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
