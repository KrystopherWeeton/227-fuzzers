; ModuleID = '../../third_party/webrtc/call/adaptation/video_stream_input_state_provider.cc'
source_filename = "../../third_party/webrtc/call/adaptation/video_stream_input_state_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::VideoStreamInputStateProvider" = type { i32 (...)**, %"class.webrtc::Mutex", %"class.webrtc::VideoStreamEncoderObserver"*, %"class.webrtc::VideoStreamInputState" }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.webrtc::VideoStreamInputState" = type { i8, %"class.absl::optional", i32, i32, i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.webrtc::VideoStreamEncoderObserver" = type { %"class.webrtc::CpuOveruseMetricsObserver" }
%"class.webrtc::CpuOveruseMetricsObserver" = type { i32 (...)** }
%union.pthread_mutexattr_t = type { i32 }
%"class.webrtc::EncoderSettings" = type { %"struct.webrtc::VideoEncoder::EncoderInfo", %"class.webrtc::VideoEncoderConfig", %"class.webrtc::VideoCodec" }
%"struct.webrtc::VideoEncoder::EncoderInfo" = type { %"struct.webrtc::VideoEncoder::ScalingSettings", i32, i8, i8, %"class.std::__1::basic_string", i8, i8, i8, [5 x %"class.absl::InlinedVector"], %"class.std::__1::vector", i8, %"class.absl::InlinedVector.15" }
%"struct.webrtc::VideoEncoder::ScalingSettings" = type { %"class.absl::optional.0", i32 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"struct.webrtc::VideoEncoder::QpThresholds" }
%"struct.webrtc::VideoEncoder::QpThresholds" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.9" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.9" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Allocated" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"class.std::__1::__compressed_pair.10" }
%"struct.webrtc::VideoEncoder::ResolutionBitrateLimits" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* }
%"class.absl::InlinedVector.15" = type { %"class.absl::inlined_vector_internal::Storage.16" }
%"class.absl::inlined_vector_internal::Storage.16" = type { %"class.absl::container_internal::CompressedTuple.17", %"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data" }
%"class.absl::container_internal::CompressedTuple.17" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.18" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.18" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.9" }
%"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Allocated", [8 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Allocated" = type { i32*, i64 }
%"class.webrtc::VideoEncoderConfig" = type <{ i32, [4 x i8], %"struct.webrtc::SdpVideoFormat", %"class.rtc::scoped_refptr", %"class.std::__1::vector.30", i32, [4 x i8], %"class.rtc::scoped_refptr.37", i32, i32, double, %"class.std::__1::vector.38", i64, i8, i8, [6 x i8] }>
%"struct.webrtc::SdpVideoFormat" = type { %"class.std::__1::basic_string", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::VideoEncoderConfig::VideoStreamFactoryInterface"* }
%"class.webrtc::VideoEncoderConfig::VideoStreamFactoryInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.webrtc::SpatialLayer"*, %"struct.webrtc::SpatialLayer"*, %"class.std::__1::__compressed_pair.32" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.webrtc::SpatialLayer"* }
%"class.rtc::scoped_refptr.37" = type { %"class.webrtc::VideoEncoderConfig::EncoderSpecificSettings"* }
%"class.webrtc::VideoEncoderConfig::EncoderSpecificSettings" = type { %"class.rtc::RefCountInterface" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.webrtc::VideoStream"*, %"struct.webrtc::VideoStream"*, %"class.std::__1::__compressed_pair.55" }
%"struct.webrtc::VideoStream" = type <{ i64, i64, i32, i32, i32, i32, double, i32, [4 x i8], %"class.absl::optional.40", %"class.absl::optional.45", %"class.absl::optional.50", i8, [7 x i8] }>
%"class.absl::optional.40" = type { %"class.absl::optional_internal::optional_data.41" }
%"class.absl::optional_internal::optional_data.41" = type { %"class.absl::optional_internal::optional_data_base.42" }
%"class.absl::optional_internal::optional_data_base.42" = type { %"class.absl::optional_internal::optional_data_dtor_base.43" }
%"class.absl::optional_internal::optional_data_dtor_base.43" = type { i8, %union.anon.44 }
%union.anon.44 = type { i64 }
%"class.absl::optional.45" = type { %"class.absl::optional_internal::optional_data.46" }
%"class.absl::optional_internal::optional_data.46" = type { %"class.absl::optional_internal::optional_data_base.47" }
%"class.absl::optional_internal::optional_data_base.47" = type { %"class.absl::optional_internal::optional_data_dtor_base.48" }
%"class.absl::optional_internal::optional_data_dtor_base.48" = type { i8, %union.anon.49 }
%union.anon.49 = type { double }
%"class.absl::optional.50" = type { %"class.absl::optional_internal::optional_data.51" }
%"class.absl::optional_internal::optional_data.51" = type { %"class.absl::optional_internal::optional_data_base.52" }
%"class.absl::optional_internal::optional_data_base.52" = type { %"class.absl::optional_internal::optional_data_dtor_base.53" }
%"class.absl::optional_internal::optional_data_dtor_base.53" = type { i8, %union.anon.54 }
%union.anon.54 = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.webrtc::VideoStream"* }
%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }

@_ZTVN6webrtc29VideoStreamInputStateProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::VideoStreamInputStateProvider"*)* @_ZN6webrtc29VideoStreamInputStateProviderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::VideoStreamInputStateProvider"*)* @_ZN6webrtc29VideoStreamInputStateProviderD0Ev to i8*), i8* bitcast (void (%"class.webrtc::VideoStreamInputState"*, %"class.webrtc::VideoStreamInputStateProvider"*)* @_ZN6webrtc29VideoStreamInputStateProvider10InputStateEv to i8*)] }, align 8

@_ZN6webrtc29VideoStreamInputStateProviderC1EPNS_26VideoStreamEncoderObserverE = hidden unnamed_addr alias void (%"class.webrtc::VideoStreamInputStateProvider"*, %"class.webrtc::VideoStreamEncoderObserver"*), void (%"class.webrtc::VideoStreamInputStateProvider"*, %"class.webrtc::VideoStreamEncoderObserver"*)* @_ZN6webrtc29VideoStreamInputStateProviderC2EPNS_26VideoStreamEncoderObserverE
@_ZN6webrtc29VideoStreamInputStateProviderD1Ev = hidden unnamed_addr alias void (%"class.webrtc::VideoStreamInputStateProvider"*), void (%"class.webrtc::VideoStreamInputStateProvider"*)* @_ZN6webrtc29VideoStreamInputStateProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29VideoStreamInputStateProviderC2EPNS_26VideoStreamEncoderObserverE(%"class.webrtc::VideoStreamInputStateProvider"*, %"class.webrtc::VideoStreamEncoderObserver"*) unnamed_addr #0 align 2 {
  %3 = alloca %union.pthread_mutexattr_t, align 4
  %4 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc29VideoStreamInputStateProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast %union.pthread_mutexattr_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %3, i64 0, i32 0
  store i32 -1431655766, i32* %6, align 4
  %7 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %3) #5
  %8 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %8, %union.pthread_mutexattr_t* nonnull %3) #5
  %10 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  %11 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 2
  store %"class.webrtc::VideoStreamEncoderObserver"* %1, %"class.webrtc::VideoStreamEncoderObserver"** %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 3
  call void @_ZN6webrtc21VideoStreamInputStateC1Ev(%"class.webrtc::VideoStreamInputState"* %12) #5
  ret void
}

declare void @_ZN6webrtc21VideoStreamInputStateC1Ev(%"class.webrtc::VideoStreamInputState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29VideoStreamInputStateProviderD2Ev(%"class.webrtc::VideoStreamInputStateProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc29VideoStreamInputStateProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29VideoStreamInputStateProviderD0Ev(%"class.webrtc::VideoStreamInputStateProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc29VideoStreamInputStateProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #5
  %5 = bitcast %"class.webrtc::VideoStreamInputStateProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29VideoStreamInputStateProvider17OnHasInputChangedEb(%"class.webrtc::VideoStreamInputStateProvider"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #5
  %5 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc21VideoStreamInputState13set_has_inputEb(%"class.webrtc::VideoStreamInputState"* %5, i1 zeroext %1) #5
  %6 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN6webrtc21VideoStreamInputState13set_has_inputEb(%"class.webrtc::VideoStreamInputState"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29VideoStreamInputStateProvider19OnFrameSizeObservedEi(%"class.webrtc::VideoStreamInputStateProvider"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #5
  %5 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 3
  %6 = zext i32 %1 to i64
  %7 = shl nuw i64 %6, 32
  %8 = or i64 %7, 1
  tail call void @_ZN6webrtc21VideoStreamInputState21set_frame_size_pixelsEN4absl8optionalIiEE(%"class.webrtc::VideoStreamInputState"* %5, i64 %8) #5
  %9 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #5
  ret void
}

declare void @_ZN6webrtc21VideoStreamInputState21set_frame_size_pixelsEN4absl8optionalIiEE(%"class.webrtc::VideoStreamInputState"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29VideoStreamInputStateProvider24OnEncoderSettingsChangedENS_15EncoderSettingsE(%"class.webrtc::VideoStreamInputStateProvider"*, %"class.webrtc::EncoderSettings"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #5
  %5 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %0, i64 0, i32 3
  %6 = tail call dereferenceable(160) %"class.webrtc::VideoEncoderConfig"* @_ZNK6webrtc15EncoderSettings14encoder_configEv(%"class.webrtc::EncoderSettings"* %1) #5
  %7 = getelementptr inbounds %"class.webrtc::VideoEncoderConfig", %"class.webrtc::VideoEncoderConfig"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN6webrtc21VideoStreamInputState20set_video_codec_typeENS_14VideoCodecTypeE(%"class.webrtc::VideoStreamInputState"* %5, i32 %8) #5
  %9 = tail call dereferenceable(240) %"struct.webrtc::VideoEncoder::EncoderInfo"* @_ZNK6webrtc15EncoderSettings12encoder_infoEv(%"class.webrtc::EncoderSettings"* %1) #5
  %10 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %9, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  tail call void @_ZN6webrtc21VideoStreamInputState24set_min_pixels_per_frameEi(%"class.webrtc::VideoStreamInputState"* %5, i32 %11) #5
  %12 = tail call dereferenceable(376) %"class.webrtc::VideoCodec"* @_ZNK6webrtc15EncoderSettings11video_codecEv(%"class.webrtc::EncoderSettings"* %1) #5
  %13 = tail call i64 @_ZN6webrtc18VideoStreamAdapter26GetSingleActiveLayerPixelsERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376) %12) #5
  %14 = trunc i64 %13 to i8
  %15 = and i64 %13, -4294967296
  %16 = icmp ne i8 %14, 0
  %17 = zext i1 %16 to i64
  %18 = or i64 %15, %17
  tail call void @_ZN6webrtc21VideoStreamInputState31set_single_active_stream_pixelsEN4absl8optionalIiEE(%"class.webrtc::VideoStreamInputState"* %5, i64 %18) #5
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #5
  ret void
}

declare void @_ZN6webrtc21VideoStreamInputState20set_video_codec_typeENS_14VideoCodecTypeE(%"class.webrtc::VideoStreamInputState"*, i32) local_unnamed_addr #1

declare dereferenceable(160) %"class.webrtc::VideoEncoderConfig"* @_ZNK6webrtc15EncoderSettings14encoder_configEv(%"class.webrtc::EncoderSettings"*) local_unnamed_addr #1

declare void @_ZN6webrtc21VideoStreamInputState24set_min_pixels_per_frameEi(%"class.webrtc::VideoStreamInputState"*, i32) local_unnamed_addr #1

declare dereferenceable(240) %"struct.webrtc::VideoEncoder::EncoderInfo"* @_ZNK6webrtc15EncoderSettings12encoder_infoEv(%"class.webrtc::EncoderSettings"*) local_unnamed_addr #1

declare void @_ZN6webrtc21VideoStreamInputState31set_single_active_stream_pixelsEN4absl8optionalIiEE(%"class.webrtc::VideoStreamInputState"*, i64) local_unnamed_addr #1

declare i64 @_ZN6webrtc18VideoStreamAdapter26GetSingleActiveLayerPixelsERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376)) local_unnamed_addr #1

declare dereferenceable(376) %"class.webrtc::VideoCodec"* @_ZNK6webrtc15EncoderSettings11video_codecEv(%"class.webrtc::EncoderSettings"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc29VideoStreamInputStateProvider10InputStateEv(%"class.webrtc::VideoStreamInputState"* noalias nocapture sret, %"class.webrtc::VideoStreamInputStateProvider"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %1, i64 0, i32 2
  %4 = load %"class.webrtc::VideoStreamEncoderObserver"*, %"class.webrtc::VideoStreamEncoderObserver"** %3, align 8
  %5 = bitcast %"class.webrtc::VideoStreamEncoderObserver"* %4 to i32 (%"class.webrtc::VideoStreamEncoderObserver"*)***
  %6 = load i32 (%"class.webrtc::VideoStreamEncoderObserver"*)**, i32 (%"class.webrtc::VideoStreamEncoderObserver"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.webrtc::VideoStreamEncoderObserver"*)*, i32 (%"class.webrtc::VideoStreamEncoderObserver"*)** %6, i64 16
  %8 = load i32 (%"class.webrtc::VideoStreamEncoderObserver"*)*, i32 (%"class.webrtc::VideoStreamEncoderObserver"*)** %7, align 8
  %9 = tail call i32 %8(%"class.webrtc::VideoStreamEncoderObserver"* %4) #5
  %10 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %1, i64 0, i32 1, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %10) #5
  %12 = getelementptr inbounds %"class.webrtc::VideoStreamInputStateProvider", %"class.webrtc::VideoStreamInputStateProvider"* %1, i64 0, i32 3
  tail call void @_ZN6webrtc21VideoStreamInputState21set_frames_per_secondEi(%"class.webrtc::VideoStreamInputState"* %12, i32 %9) #5
  %13 = getelementptr inbounds %"class.webrtc::VideoStreamInputState", %"class.webrtc::VideoStreamInputState"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.webrtc::VideoStreamInputState", %"class.webrtc::VideoStreamInputState"* %12, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 8 %14, i64 32, i1 false)
  %15 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #5
  ret void
}

declare void @_ZN6webrtc21VideoStreamInputState21set_frames_per_secondEi(%"class.webrtc::VideoStreamInputState"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
