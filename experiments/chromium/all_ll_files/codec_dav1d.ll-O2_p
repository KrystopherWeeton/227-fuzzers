; ModuleID = '../../third_party/libavif/src/src/codec_dav1d.c'
source_filename = "../../third_party/libavif/src/src/codec_dav1d.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.avifCodec = type { %struct.avifCodecSpecificOptions*, %struct.avifCodecInternal*, %struct.avifDiagnostics*, i32 (%struct.avifCodec*, %struct.avifDecoder*)*, i32 (%struct.avifCodec*, %struct.avifDecodeSample*, i32, %struct.avifImage*)*, i32 (%struct.avifCodec*, %struct.avifEncoder*, %struct.avifImage*, i32, i32, %struct.avifCodecEncodeOutput*)*, i32 (%struct.avifCodec*, %struct.avifCodecEncodeOutput*)*, void (%struct.avifCodec*)* }
%struct.avifCodecSpecificOptions = type { %struct.avifCodecSpecificOption*, i32, i32, i32 }
%struct.avifCodecSpecificOption = type { i8*, i8* }
%struct.avifCodecInternal = type { %struct.Dav1dSettings, %struct.Dav1dContext*, %struct.Dav1dPicture, i32, i32 }
%struct.Dav1dSettings = type { i32, i32, i32, i32, i32, i32, %struct.Dav1dPicAllocator, %struct.Dav1dLogger, i32, [28 x i8] }
%struct.Dav1dPicAllocator = type { i8*, i32 (%struct.Dav1dPicture*, i8*)*, void (%struct.Dav1dPicture*, i8*)* }
%struct.Dav1dLogger = type { i8*, void (i8*, i8*, %struct.__va_list_tag*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.Dav1dContext = type opaque
%struct.Dav1dPicture = type { %struct.Dav1dSequenceHeader*, %struct.Dav1dFrameHeader*, [3 x i8*], [2 x i64], %struct.Dav1dPictureParameters, %struct.Dav1dDataProps, %struct.Dav1dContentLightLevel*, %struct.Dav1dMasteringDisplay*, %struct.Dav1dITUTT35*, [4 x i64], %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, [4 x i64], %struct.Dav1dRef*, i8* }
%struct.Dav1dSequenceHeader = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dSequenceHeaderOperatingPoint], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dSequenceHeaderOperatingParameterInfo] }
%struct.Dav1dSequenceHeaderOperatingPoint = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.Dav1dSequenceHeaderOperatingParameterInfo = type { i32, i32, i32 }
%struct.Dav1dFrameHeader = type { %struct.anon, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dFrameHeaderOperatingPoint], i32, i32, i32, %struct.anon.0, i32, i32, i32, [7 x i32], i32, i32, i32, i32, i32, %struct.anon.1, %struct.anon.2, %struct.anon.3, %struct.anon.4, i32, %struct.anon.7, %struct.anon.8, %struct.anon.9, i32, i32, i32, i32, [2 x i32], i32, i32, [7 x %struct.Dav1dWarpedMotionParams] }
%struct.anon = type { %struct.Dav1dFilmGrainData, i32, i32 }
%struct.Dav1dFilmGrainData = type { i32, i32, [14 x [2 x i8]], i32, [2 x i32], [2 x [10 x [2 x i8]]], i32, i32, [24 x i8], [2 x [28 x i8]], i64, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32 }
%struct.Dav1dFrameHeaderOperatingPoint = type { i32 }
%struct.anon.0 = type { i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [65 x i16], [65 x i16], i32 }
%struct.anon.2 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, i32, i32, i32, %struct.Dav1dSegmentationDataSet, [8 x i32], [8 x i32] }
%struct.Dav1dSegmentationDataSet = type { [8 x %struct.Dav1dSegmentationData], i32, i32 }
%struct.Dav1dSegmentationData = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.4 = type { %struct.anon.5, %struct.anon.6 }
%struct.anon.5 = type { i32, i32 }
%struct.anon.6 = type { i32, i32, i32 }
%struct.anon.7 = type { [2 x i32], i32, i32, i32, i32, %struct.Dav1dLoopfilterModeRefDeltas, i32 }
%struct.Dav1dLoopfilterModeRefDeltas = type { [2 x i32], [8 x i32] }
%struct.anon.8 = type { i32, i32, [8 x i32], [8 x i32] }
%struct.anon.9 = type { [3 x i32], [2 x i32] }
%struct.Dav1dWarpedMotionParams = type { i32, [6 x i32], %union.anon }
%union.anon = type { %struct.anon.10 }
%struct.anon.10 = type { i16, i16, i16, i16 }
%struct.Dav1dPictureParameters = type { i32, i32, i32, i32 }
%struct.Dav1dDataProps = type { i64, i64, i64, i64, %struct.Dav1dUserData }
%struct.Dav1dUserData = type { i8*, %struct.Dav1dRef* }
%struct.Dav1dContentLightLevel = type { i32, i32 }
%struct.Dav1dMasteringDisplay = type { [3 x [2 x i16]], [2 x i16], i32, i32 }
%struct.Dav1dITUTT35 = type { i8, i8, i64, i8* }
%struct.Dav1dRef = type opaque
%struct.avifDiagnostics = type { [256 x i8] }
%struct.avifDecoder = type { i32, i32, i32, %struct.avifImage*, i32, i32, %struct.avifImageTiming, i64, double, i64, i32, i32, i32, i32, i32, %struct.avifIOStats, %struct.avifIO*, %struct.avifDiagnostics, %struct.avifDecoderData* }
%struct.avifImage = type { i32, i32, i32, i32, i32, i32, [3 x i8*], [3 x i32], i32, i32, i8*, i32, i32, i32, %struct.avifRWData, i16, i16, i16, i32, %struct.avifPixelAspectRatioBox, %struct.avifCleanApertureBox, %struct.avifImageRotation, %struct.avifImageMirror, %struct.avifRWData, %struct.avifRWData }
%struct.avifPixelAspectRatioBox = type { i32, i32 }
%struct.avifCleanApertureBox = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.avifImageRotation = type { i8 }
%struct.avifImageMirror = type { i8 }
%struct.avifRWData = type { i8*, i64 }
%struct.avifImageTiming = type { i64, double, i64, double, i64 }
%struct.avifIOStats = type { i64, i64 }
%struct.avifIO = type { void (%struct.avifIO*)*, i32 (%struct.avifIO*, i32, i64, i64, %struct.avifROData*)*, i32 (%struct.avifIO*, i32, i64, i8*, i64)*, i64, i32, i8* }
%struct.avifROData = type { i8*, i64 }
%struct.avifDecoderData = type opaque
%struct.avifDecodeSample = type { %struct.avifROData, i32, i32, i32, i64, i64, i32 }
%struct.avifEncoder = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, %struct.avifIOStats, %struct.avifDiagnostics, %struct.avifEncoderData*, %struct.avifCodecSpecificOptions* }
%struct.avifEncoderData = type opaque
%struct.avifCodecEncodeOutput = type { %struct.avifEncodeSampleArray }
%struct.avifEncodeSampleArray = type { %struct.avifEncodeSample*, i32, i32, i32 }
%struct.avifEncodeSample = type { %struct.avifRWData, i32 }
%struct.Dav1dData = type { i8*, i64, %struct.Dav1dRef*, %struct.Dav1dDataProps }
%struct.avifPixelFormatInfo = type { i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden i8* @avifCodecVersionDav1d() local_unnamed_addr #0 {
  %1 = tail call i8* @dav1d_version() #5
  ret i8* %1
}

declare i8* @dav1d_version() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.avifCodec* @avifCodecCreateDav1d() local_unnamed_addr #0 {
  %1 = tail call i8* @avifAlloc(i64 64) #5
  %2 = bitcast i8* %1 to %struct.avifCodec*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 56, i1 false)
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i32 (%struct.avifCodec*, %struct.avifDecoder*)**
  store i32 (%struct.avifCodec*, %struct.avifDecoder*)* @dav1dCodecOpen, i32 (%struct.avifCodec*, %struct.avifDecoder*)** %4, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 32
  %6 = bitcast i8* %5 to i32 (%struct.avifCodec*, %struct.avifDecodeSample*, i32, %struct.avifImage*)**
  store i32 (%struct.avifCodec*, %struct.avifDecodeSample*, i32, %struct.avifImage*)* @dav1dCodecGetNextImage, i32 (%struct.avifCodec*, %struct.avifDecodeSample*, i32, %struct.avifImage*)** %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 56
  %8 = bitcast i8* %7 to void (%struct.avifCodec*)**
  store void (%struct.avifCodec*)* @dav1dCodecDestroyInternal, void (%struct.avifCodec*)** %8, align 8
  %9 = tail call i8* @avifAlloc(i64 376) #5
  %10 = getelementptr inbounds i8, i8* %1, i64 8
  %11 = bitcast i8* %10 to %struct.avifCodecInternal**
  %12 = bitcast i8* %10 to i8**
  store i8* %9, i8** %12, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 376, i1 false)
  %13 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %11, align 8
  %14 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %13, i64 0, i32 0
  tail call void @dav1d_default_settings(%struct.Dav1dSettings* %14) #5
  %15 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %11, align 8
  %16 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %15, i64 0, i32 0, i32 5
  store i32 268435456, i32* %16, align 4
  %17 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %11, align 8
  %18 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %17, i64 0, i32 0, i32 4
  store i32 0, i32* %18, align 8
  ret %struct.avifCodec* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @avifAlloc(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @dav1dCodecOpen(%struct.avifCodec* nocapture readonly, %struct.avifDecoder* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.avifCodec, %struct.avifCodec* %0, i64 0, i32 1
  %4 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %3, align 8
  %5 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %4, i64 0, i32 1
  %6 = load %struct.Dav1dContext*, %struct.Dav1dContext** %5, align 8
  %7 = icmp eq %struct.Dav1dContext* %6, null
  br i1 %7, label %8, label %23

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %4, i64 0, i32 0, i32 0
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %struct.avifDecoder, %struct.avifDecoder* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 64
  %13 = select i1 %12, i32 %11, i32 64
  %14 = icmp sgt i32 %13, 1
  %15 = select i1 %14, i32 %13, i32 1
  %16 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %3, align 8
  %17 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %16, i64 0, i32 0, i32 1
  store i32 %15, i32* %17, align 4
  %18 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %3, align 8
  %19 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %18, i64 0, i32 1
  %20 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %18, i64 0, i32 0
  %21 = tail call i32 @dav1d_open(%struct.Dav1dContext** %19, %struct.Dav1dSettings* %20) #5
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %8, %2
  br label %24

24:                                               ; preds = %8, %23
  %25 = phi i32 [ 1, %23 ], [ 0, %8 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @dav1dCodecGetNextImage(%struct.avifCodec* nocapture readonly, %struct.avifDecodeSample* nocapture readonly, i32, %struct.avifImage*) #0 {
  %5 = alloca %struct.Dav1dPicture, align 8
  %6 = alloca %struct.Dav1dData, align 8
  %7 = alloca %struct.avifPixelFormatInfo, align 4
  %8 = bitcast %struct.Dav1dPicture* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 264, i1 false)
  %9 = bitcast %struct.Dav1dData* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 72, i1 false)
  %10 = getelementptr inbounds %struct.avifDecodeSample, %struct.avifDecodeSample* %1, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.avifDecodeSample, %struct.avifDecodeSample* %1, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = call i32 @dav1d_data_wrap(%struct.Dav1dData* nonnull %6, i8* %11, i64 %13, void (i8*, i8*)* nonnull @avifDav1dFreeCallback, i8* null) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %193

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.Dav1dData, %struct.Dav1dData* %6, i64 0, i32 0
  %18 = getelementptr inbounds %struct.avifCodec, %struct.avifCodec* %0, i64 0, i32 1
  %19 = load i8*, i8** %17, align 8
  br label %20

20:                                               ; preds = %16, %38
  %21 = phi i8* [ %19, %16 ], [ %39, %38 ]
  %22 = icmp eq i8* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %20
  %24 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %18, align 8
  %25 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %24, i64 0, i32 1
  %26 = load %struct.Dav1dContext*, %struct.Dav1dContext** %25, align 8
  %27 = call i32 @dav1d_send_data(%struct.Dav1dContext* %26, %struct.Dav1dData* nonnull %6) #5
  %28 = icmp slt i32 %27, 0
  %29 = icmp ne i32 %27, -11
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %23
  call void @dav1d_data_unref(%struct.Dav1dData* nonnull %6) #5
  br label %193

32:                                               ; preds = %23, %20
  %33 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %18, align 8
  %34 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %33, i64 0, i32 1
  %35 = load %struct.Dav1dContext*, %struct.Dav1dContext** %34, align 8
  %36 = call i32 @dav1d_get_picture(%struct.Dav1dContext* %35, %struct.Dav1dPicture* nonnull %5) #5
  %37 = icmp eq i32 %36, -11
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = load i8*, i8** %17, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %193, label %20

41:                                               ; preds = %32
  %42 = icmp slt i32 %36, 0
  %43 = load i8*, i8** %17, align 8
  %44 = icmp eq i8* %43, null
  br i1 %42, label %45, label %47

45:                                               ; preds = %41
  br i1 %44, label %193, label %46

46:                                               ; preds = %45
  call void @dav1d_data_unref(%struct.Dav1dData* nonnull %6) #5
  br label %193

47:                                               ; preds = %41
  br i1 %44, label %49, label %48

48:                                               ; preds = %47
  call void @dav1d_data_unref(%struct.Dav1dData* nonnull %6) #5
  br label %49

49:                                               ; preds = %47, %48
  %50 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %18, align 8
  %51 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %50, i64 0, i32 2
  call void @dav1d_picture_unref(%struct.Dav1dPicture* %51) #5
  %52 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %18, align 8
  %53 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %52, i64 0, i32 2
  %54 = bitcast %struct.Dav1dPicture* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %8, i64 264, i1 false)
  %55 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %18, align 8
  %56 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %55, i64 0, i32 2, i32 0
  %57 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %56, align 8
  %58 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %57, i64 0, i32 9
  %59 = load i32, i32* %58, align 4
  %60 = icmp ne i32 %59, 0
  %61 = zext i1 %60 to i32
  %62 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %55, i64 0, i32 4
  store i32 %61, i32* %62, align 4
  %63 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %18, align 8
  %64 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %63, i64 0, i32 3
  store i32 1, i32* %64, align 8
  %65 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %18, align 8
  %66 = icmp eq i32 %2, 0
  br i1 %66, label %67, label %148

67:                                               ; preds = %49
  %68 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4
  %69 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = call i32 @llvm.usub.sat.i32(i32 4, i32 %70)
  %72 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %98, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %98, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.Dav1dPictureParameters, %struct.Dav1dPictureParameters* %68, i64 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %73, %81
  br i1 %82, label %83, label %97

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %77, %85
  br i1 %86, label %87, label %97

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4, i32 3
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %89, %91
  br i1 %92, label %93, label %97

93:                                               ; preds = %87
  %94 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, %71
  br i1 %96, label %98, label %97

97:                                               ; preds = %93, %87, %83, %79
  call void @avifImageFreePlanes(%struct.avifImage* %3, i32 255) #5
  br label %98

98:                                               ; preds = %93, %75, %67, %97
  %99 = getelementptr inbounds %struct.Dav1dPictureParameters, %struct.Dav1dPictureParameters* %68, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  store i32 %100, i32* %72, align 8
  %101 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 1
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 2
  store i32 %105, i32* %106, align 8
  %107 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 3
  store i32 %71, i32* %107, align 4
  %108 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %18, align 8
  %109 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %108, i64 0, i32 4
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 4
  store i32 %110, i32* %111, align 8
  %112 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 0
  %113 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %112, align 8
  %114 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %113, i64 0, i32 7
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 5
  store i32 %115, i32* %116, align 4
  %117 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %112, align 8
  %118 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %117, i64 0, i32 4
  %119 = load i32, i32* %118, align 4
  %120 = trunc i32 %119 to i16
  %121 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 15
  store i16 %120, i16* %121, align 8
  %122 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %112, align 8
  %123 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %122, i64 0, i32 5
  %124 = load i32, i32* %123, align 4
  %125 = trunc i32 %124 to i16
  %126 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 16
  store i16 %125, i16* %126, align 2
  %127 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %112, align 8
  %128 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %127, i64 0, i32 6
  %129 = load i32, i32* %128, align 4
  %130 = trunc i32 %129 to i16
  %131 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 17
  store i16 %130, i16* %131, align 4
  %132 = bitcast %struct.avifPixelFormatInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %132) #5
  %133 = getelementptr inbounds %struct.avifPixelFormatInfo, %struct.avifPixelFormatInfo* %7, i64 0, i32 0
  store i32 -1431655766, i32* %133, align 4
  %134 = getelementptr inbounds %struct.avifPixelFormatInfo, %struct.avifPixelFormatInfo* %7, i64 0, i32 1
  store i32 -1431655766, i32* %134, align 4
  %135 = getelementptr inbounds %struct.avifPixelFormatInfo, %struct.avifPixelFormatInfo* %7, i64 0, i32 2
  store i32 -1431655766, i32* %135, align 4
  call void @avifGetPixelFormatInfo(i32 %71, %struct.avifPixelFormatInfo* nonnull %7) #5
  call void @avifImageFreePlanes(%struct.avifImage* %3, i32 1) #5
  %136 = icmp eq i32 %71, 4
  %137 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 2, i64 0
  %138 = bitcast i8** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 6, i64 0
  %141 = bitcast i8** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 3, i64 0
  %143 = load i64, i64* %142, align 8
  %144 = trunc i64 %143 to i32
  %145 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 7, i64 0
  store i32 %144, i32* %145, align 4
  br i1 %136, label %146, label %195

146:                                              ; preds = %195, %98
  %147 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 8
  store i32 0, i32* %147, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %132) #5
  br label %193

148:                                              ; preds = %49
  %149 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 0
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %170, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 1
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %170, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4, i32 0
  %158 = load i32, i32* %157, align 8
  %159 = icmp eq i32 %150, %158
  br i1 %159, label %160, label %193

160:                                              ; preds = %156
  %161 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %154, %162
  br i1 %163, label %164, label %193

164:                                              ; preds = %160
  %165 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 2
  %166 = load i32, i32* %165, align 8
  %167 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4, i32 3
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %166, %168
  br i1 %169, label %170, label %193

170:                                              ; preds = %164, %152, %148
  %171 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4, i32 0
  %172 = load i32, i32* %171, align 8
  store i32 %172, i32* %149, align 8
  %173 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 1
  store i32 %174, i32* %175, align 4
  %176 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 4, i32 3
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 2
  store i32 %177, i32* %178, align 8
  call void @avifImageFreePlanes(%struct.avifImage* %3, i32 2) #5
  %179 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 2, i64 0
  %180 = bitcast i8** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 10
  %183 = bitcast i8** %182 to i64*
  store i64 %181, i64* %183, align 8
  %184 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 3, i64 0
  %185 = load i64, i64* %184, align 8
  %186 = trunc i64 %185 to i32
  %187 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 11
  store i32 %186, i32* %187, align 8
  %188 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %18, align 8
  %189 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %188, i64 0, i32 4
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 9
  store i32 %190, i32* %191, align 8
  %192 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 12
  store i32 0, i32* %192, align 4
  br label %193

193:                                              ; preds = %38, %46, %45, %164, %160, %156, %170, %146, %31, %4
  %194 = phi i32 [ 0, %4 ], [ 0, %31 ], [ 0, %164 ], [ 0, %160 ], [ 0, %156 ], [ 1, %170 ], [ 1, %146 ], [ 0, %45 ], [ 0, %46 ], [ 0, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %8) #5
  ret i32 %194

195:                                              ; preds = %98
  %196 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 2, i64 1
  %197 = bitcast i8** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 6, i64 1
  %200 = bitcast i8** %199 to i64*
  store i64 %198, i64* %200, align 8
  %201 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 3, i64 1
  %202 = load i64, i64* %201, align 8
  %203 = trunc i64 %202 to i32
  %204 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 7, i64 1
  store i32 %203, i32* %204, align 4
  %205 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 2, i64 2
  %206 = bitcast i8** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 6, i64 2
  %209 = bitcast i8** %208 to i64*
  store i64 %207, i64* %209, align 8
  %210 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %65, i64 0, i32 2, i32 3, i64 1
  %211 = load i64, i64* %210, align 8
  %212 = trunc i64 %211 to i32
  %213 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %3, i64 0, i32 7, i64 2
  store i32 %212, i32* %213, align 4
  br label %146
}

; Function Attrs: nounwind ssp uwtable
define internal void @dav1dCodecDestroyInternal(%struct.avifCodec* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.avifCodec, %struct.avifCodec* %0, i64 0, i32 1
  %3 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %2, align 8
  %4 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %3, i64 0, i32 2
  tail call void @dav1d_picture_unref(%struct.Dav1dPicture* %8) #5
  %9 = load %struct.avifCodecInternal*, %struct.avifCodecInternal** %2, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi %struct.avifCodecInternal* [ %3, %1 ], [ %9, %7 ]
  %12 = getelementptr inbounds %struct.avifCodecInternal, %struct.avifCodecInternal* %11, i64 0, i32 1
  %13 = load %struct.Dav1dContext*, %struct.Dav1dContext** %12, align 8
  %14 = icmp eq %struct.Dav1dContext* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %struct.avifCodecInternal* %11 to i8*
  br label %20

17:                                               ; preds = %10
  tail call void @dav1d_close(%struct.Dav1dContext** %12) #5
  %18 = bitcast %struct.avifCodecInternal** %2 to i8**
  %19 = load i8*, i8** %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  tail call void @avifFree(i8* %21) #5
  ret void
}

declare void @dav1d_default_settings(%struct.Dav1dSettings*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @dav1d_open(%struct.Dav1dContext**, %struct.Dav1dSettings*) local_unnamed_addr #1

declare i32 @dav1d_data_wrap(%struct.Dav1dData*, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @avifDav1dFreeCallback(i8* nocapture, i8* nocapture) #3 {
  ret void
}

declare i32 @dav1d_send_data(%struct.Dav1dContext*, %struct.Dav1dData*) local_unnamed_addr #1

declare void @dav1d_data_unref(%struct.Dav1dData*) local_unnamed_addr #1

declare i32 @dav1d_get_picture(%struct.Dav1dContext*, %struct.Dav1dPicture*) local_unnamed_addr #1

declare void @dav1d_picture_unref(%struct.Dav1dPicture*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @avifImageFreePlanes(%struct.avifImage*, i32) local_unnamed_addr #1

declare void @avifGetPixelFormatInfo(i32, %struct.avifPixelFormatInfo*) local_unnamed_addr #1

declare void @dav1d_close(%struct.Dav1dContext**) local_unnamed_addr #1

declare void @avifFree(i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
