; ModuleID = '../../third_party/pdfium/fpdfsdk/cpdfsdk_pauseadapter.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/cpdfsdk_pauseadapter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDFSDK_PauseAdapter = type { %class.PauseIndicatorIface, %"class.fxcrt::UnownedPtr" }
%class.PauseIndicatorIface = type { i32 (...)** }
%"class.fxcrt::UnownedPtr" = type { %struct._IFSDK_PAUSE* }
%struct._IFSDK_PAUSE = type { i32, i32 (%struct._IFSDK_PAUSE*)*, i8* }

@_ZTV20CPDFSDK_PauseAdapter = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDFSDK_PauseAdapter*)* @_ZN20CPDFSDK_PauseAdapterD2Ev to i8*), i8* bitcast (void (%class.CPDFSDK_PauseAdapter*)* @_ZN20CPDFSDK_PauseAdapterD0Ev to i8*), i8* bitcast (i1 (%class.CPDFSDK_PauseAdapter*)* @_ZN20CPDFSDK_PauseAdapter14NeedToPauseNowEv to i8*)] }, align 8

@_ZN20CPDFSDK_PauseAdapterC1EP12_IFSDK_PAUSE = hidden unnamed_addr alias void (%class.CPDFSDK_PauseAdapter*, %struct._IFSDK_PAUSE*), void (%class.CPDFSDK_PauseAdapter*, %struct._IFSDK_PAUSE*)* @_ZN20CPDFSDK_PauseAdapterC2EP12_IFSDK_PAUSE
@_ZN20CPDFSDK_PauseAdapterD1Ev = hidden unnamed_addr alias void (%class.CPDFSDK_PauseAdapter*), void (%class.CPDFSDK_PauseAdapter*)* @_ZN20CPDFSDK_PauseAdapterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CPDFSDK_PauseAdapterC2EP12_IFSDK_PAUSE(%class.CPDFSDK_PauseAdapter* nocapture, %struct._IFSDK_PAUSE*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDFSDK_PauseAdapter, %class.CPDFSDK_PauseAdapter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20CPDFSDK_PauseAdapter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPDFSDK_PauseAdapter, %class.CPDFSDK_PauseAdapter* %0, i64 0, i32 1, i32 0
  store %struct._IFSDK_PAUSE* %1, %struct._IFSDK_PAUSE** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN20CPDFSDK_PauseAdapterD2Ev(%class.CPDFSDK_PauseAdapter* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDFSDK_PauseAdapter, %class.CPDFSDK_PauseAdapter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20CPDFSDK_PauseAdapter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDFSDK_PauseAdapterD0Ev(%class.CPDFSDK_PauseAdapter*) unnamed_addr #1 align 2 {
  %2 = bitcast %class.CPDFSDK_PauseAdapter* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDFSDK_PauseAdapter14NeedToPauseNowEv(%class.CPDFSDK_PauseAdapter* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDFSDK_PauseAdapter, %class.CPDFSDK_PauseAdapter* %0, i64 0, i32 1, i32 0
  %3 = load %struct._IFSDK_PAUSE*, %struct._IFSDK_PAUSE** %2, align 8
  %4 = getelementptr inbounds %struct._IFSDK_PAUSE, %struct._IFSDK_PAUSE* %3, i64 0, i32 1
  %5 = load i32 (%struct._IFSDK_PAUSE*)*, i32 (%struct._IFSDK_PAUSE*)** %4, align 8
  %6 = icmp eq i32 (%struct._IFSDK_PAUSE*)* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = tail call i32 %5(%struct._IFSDK_PAUSE* %3) #4
  %9 = icmp ne i32 %8, 0
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi i1 [ false, %1 ], [ %9, %7 ]
  ret i1 %11
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { builtin nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
