; ModuleID = '../../third_party/libaddressinput/src/cpp/src/address_field_util.cc'
source_filename = "../../third_party/libaddressinput/src/cpp/src/address_field_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.anon.13 = type { i8, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"*, %"class.std::__1::__compressed_pair.1" }
%"class.i18n::addressinput::FormatElement" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.i18n::addressinput::FormatElement"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4i18n12addressinput13FormatElementENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap = internal unnamed_addr constant [9 x %struct.anon.13] [%struct.anon.13 { i8 82, i32 0 }, %struct.anon.13 { i8 83, i32 1 }, %struct.anon.13 { i8 67, i32 2 }, %struct.anon.13 { i8 68, i32 3 }, %struct.anon.13 { i8 88, i32 4 }, %struct.anon.13 { i8 90, i32 5 }, %struct.anon.13 { i8 65, i32 6 }, %struct.anon.13 { i8 79, i32 7 }, %struct.anon.13 { i8 78, i32 8 }], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12addressinput15ParseFormatRuleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS0_13FormatElementENS5_ISB_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %3 = alloca %"class.i18n::addressinput::FormatElement", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.i18n::addressinput::FormatElement", align 8
  %6 = alloca %"class.i18n::addressinput::FormatElement", align 8
  %7 = alloca %"class.i18n::addressinput::FormatElement", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %12 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %11, align 8
  %13 = icmp eq %"class.i18n::addressinput::FormatElement"* %12, %10
  br i1 %13, label %27, label %14

14:                                               ; preds = %2, %25
  %15 = phi %"class.i18n::addressinput::FormatElement"* [ %16, %25 ], [ %12, %2 ]
  %16 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %15, i64 -1
  %17 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %15, i64 -1, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #8
  br label %25

25:                                               ; preds = %22, %14
  %26 = icmp eq %"class.i18n::addressinput::FormatElement"* %16, %10
  br i1 %26, label %27, label %14

27:                                               ; preds = %25, %2
  store %"class.i18n::addressinput::FormatElement"* %10, %"class.i18n::addressinput::FormatElement"** %11, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = inttoptr i64 %33 to i8*
  %35 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %37 = select i1 %31, i64 %33, i64 %35
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %30 to i64
  %42 = select i1 %31, i64 %40, i64 %41
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %326, label %44

44:                                               ; preds = %27
  %45 = select i1 %31, i8* %34, i8* %36
  %46 = bitcast %"class.i18n::addressinput::FormatElement"* %3 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %3, i64 0, i32 0
  %55 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %3, i64 0, i32 1
  %56 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %57 = bitcast %"class.i18n::addressinput::FormatElement"** %11 to i64*
  %58 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.i18n::addressinput::FormatElement"* %6 to i8*
  %62 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %6, i64 0, i32 0
  %63 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %6, i64 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  %65 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.i18n::addressinput::FormatElement"* %5 to i8*
  %69 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %5, i64 0, i32 0
  %70 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %5, i64 0, i32 1
  %71 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  %72 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %75

75:                                               ; preds = %44, %309
  %76 = phi i8* [ %34, %44 ], [ %314, %309 ]
  %77 = phi i64 [ %40, %44 ], [ %315, %309 ]
  %78 = phi i8* [ %45, %44 ], [ %310, %309 ]
  %79 = phi i1 [ %31, %44 ], [ %313, %309 ]
  %80 = phi i8 [ %30, %44 ], [ %312, %309 ]
  %81 = phi i64 [ %37, %44 ], [ %311, %309 ]
  %82 = zext i8 %80 to i64
  %83 = select i1 %79, i8* %76, i8* %36
  %84 = select i1 %79, i64 %77, i64 %82
  %85 = getelementptr inbounds i8, i8* %83, i64 %84
  %86 = icmp eq i8* %85, %78
  br i1 %86, label %94, label %87

87:                                               ; preds = %75, %91
  %88 = phi i8* [ %92, %91 ], [ %78, %75 ]
  %89 = load i8, i8* %88, align 1
  %90 = icmp eq i8 %89, 37
  br i1 %90, label %94, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds i8, i8* %88, i64 1
  %93 = icmp eq i8* %92, %85
  br i1 %93, label %94, label %87

94:                                               ; preds = %87, %91, %75
  %95 = phi i8* [ %78, %75 ], [ %88, %87 ], [ %85, %91 ]
  %96 = ptrtoint i8* %95 to i64
  %97 = select i1 %79, i8* %76, i8* %36
  %98 = getelementptr inbounds i8, i8* %97, i64 %84
  %99 = icmp eq i8* %95, %98
  br i1 %99, label %326, label %100

100:                                              ; preds = %94
  %101 = inttoptr i64 %81 to i8*
  %102 = icmp ugt i8* %95, %101
  br i1 %102, label %103, label %251

103:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #9
  %104 = sub i64 %96, %81
  %105 = icmp ugt i64 %104, -17
  br i1 %105, label %106, label %108

106:                                              ; preds = %103
  %107 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %107) #10
  unreachable

108:                                              ; preds = %103
  %109 = icmp ult i64 %104, 23
  br i1 %109, label %110, label %112

110:                                              ; preds = %108
  %111 = trunc i64 %104 to i8
  store i8 %111, i8* %52, align 1
  br label %117

112:                                              ; preds = %108
  %113 = add nuw i64 %104, 16
  %114 = and i64 %113, -16
  %115 = call i8* @_Znwm(i64 %114) #8
  store i8* %115, i8** %48, align 8
  %116 = or i64 %114, -9223372036854775808
  store i64 %116, i64* %49, align 8
  store i64 %104, i64* %50, align 8
  br label %117

117:                                              ; preds = %112, %110
  %118 = phi i8* [ %47, %110 ], [ %115, %112 ]
  %119 = icmp eq i8* %95, %101
  br i1 %119, label %224, label %120

120:                                              ; preds = %117
  %121 = sub i64 0, %81
  %122 = getelementptr i8, i8* %95, i64 %121
  %123 = ptrtoint i8* %122 to i64
  %124 = icmp ult i8* %122, inttoptr (i64 32 to i8*)
  br i1 %124, label %214, label %125

125:                                              ; preds = %120
  %126 = sub i64 0, %81
  %127 = getelementptr i8, i8* %118, i64 %126
  %128 = ptrtoint i8* %127 to i64
  %129 = getelementptr i8, i8* %95, i64 %128
  %130 = icmp ult i8* %118, %95
  %131 = icmp ugt i8* %129, %101
  %132 = and i1 %130, %131
  br i1 %132, label %214, label %133

133:                                              ; preds = %125
  %134 = and i64 %123, -32
  %135 = getelementptr i8, i8* %118, i64 %134
  %136 = getelementptr i8, i8* %101, i64 %134
  %137 = add i64 %134, -32
  %138 = lshr exact i64 %137, 5
  %139 = add nuw nsw i64 %138, 1
  %140 = and i64 %139, 3
  %141 = icmp ult i64 %137, 96
  br i1 %141, label %193, label %142

142:                                              ; preds = %133
  %143 = sub nsw i64 %139, %140
  br label %144

144:                                              ; preds = %144, %142
  %145 = phi i64 [ 0, %142 ], [ %190, %144 ]
  %146 = phi i64 [ %143, %142 ], [ %191, %144 ]
  %147 = getelementptr i8, i8* %118, i64 %145
  %148 = getelementptr i8, i8* %101, i64 %145
  %149 = bitcast i8* %148 to <16 x i8>*
  %150 = load <16 x i8>, <16 x i8>* %149, align 1, !alias.scope !2
  %151 = getelementptr i8, i8* %148, i64 16
  %152 = bitcast i8* %151 to <16 x i8>*
  %153 = load <16 x i8>, <16 x i8>* %152, align 1, !alias.scope !2
  %154 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> %150, <16 x i8>* %154, align 1, !alias.scope !5, !noalias !2
  %155 = getelementptr i8, i8* %147, i64 16
  %156 = bitcast i8* %155 to <16 x i8>*
  store <16 x i8> %153, <16 x i8>* %156, align 1, !alias.scope !5, !noalias !2
  %157 = or i64 %145, 32
  %158 = getelementptr i8, i8* %118, i64 %157
  %159 = getelementptr i8, i8* %101, i64 %157
  %160 = bitcast i8* %159 to <16 x i8>*
  %161 = load <16 x i8>, <16 x i8>* %160, align 1, !alias.scope !2
  %162 = getelementptr i8, i8* %159, i64 16
  %163 = bitcast i8* %162 to <16 x i8>*
  %164 = load <16 x i8>, <16 x i8>* %163, align 1, !alias.scope !2
  %165 = bitcast i8* %158 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %165, align 1, !alias.scope !5, !noalias !2
  %166 = getelementptr i8, i8* %158, i64 16
  %167 = bitcast i8* %166 to <16 x i8>*
  store <16 x i8> %164, <16 x i8>* %167, align 1, !alias.scope !5, !noalias !2
  %168 = or i64 %145, 64
  %169 = getelementptr i8, i8* %118, i64 %168
  %170 = getelementptr i8, i8* %101, i64 %168
  %171 = bitcast i8* %170 to <16 x i8>*
  %172 = load <16 x i8>, <16 x i8>* %171, align 1, !alias.scope !2
  %173 = getelementptr i8, i8* %170, i64 16
  %174 = bitcast i8* %173 to <16 x i8>*
  %175 = load <16 x i8>, <16 x i8>* %174, align 1, !alias.scope !2
  %176 = bitcast i8* %169 to <16 x i8>*
  store <16 x i8> %172, <16 x i8>* %176, align 1, !alias.scope !5, !noalias !2
  %177 = getelementptr i8, i8* %169, i64 16
  %178 = bitcast i8* %177 to <16 x i8>*
  store <16 x i8> %175, <16 x i8>* %178, align 1, !alias.scope !5, !noalias !2
  %179 = or i64 %145, 96
  %180 = getelementptr i8, i8* %118, i64 %179
  %181 = getelementptr i8, i8* %101, i64 %179
  %182 = bitcast i8* %181 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !2
  %184 = getelementptr i8, i8* %181, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !2
  %187 = bitcast i8* %180 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !5, !noalias !2
  %188 = getelementptr i8, i8* %180, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !5, !noalias !2
  %190 = add i64 %145, 128
  %191 = add i64 %146, -4
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %144, !llvm.loop !7

193:                                              ; preds = %144, %133
  %194 = phi i64 [ 0, %133 ], [ %190, %144 ]
  %195 = icmp eq i64 %140, 0
  br i1 %195, label %212, label %196

196:                                              ; preds = %193, %196
  %197 = phi i64 [ %209, %196 ], [ %194, %193 ]
  %198 = phi i64 [ %210, %196 ], [ %140, %193 ]
  %199 = getelementptr i8, i8* %118, i64 %197
  %200 = getelementptr i8, i8* %101, i64 %197
  %201 = bitcast i8* %200 to <16 x i8>*
  %202 = load <16 x i8>, <16 x i8>* %201, align 1, !alias.scope !2
  %203 = getelementptr i8, i8* %200, i64 16
  %204 = bitcast i8* %203 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !2
  %206 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %202, <16 x i8>* %206, align 1, !alias.scope !5, !noalias !2
  %207 = getelementptr i8, i8* %199, i64 16
  %208 = bitcast i8* %207 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %208, align 1, !alias.scope !5, !noalias !2
  %209 = add i64 %197, 32
  %210 = add i64 %198, -1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %196, !llvm.loop !9

212:                                              ; preds = %196, %193
  %213 = icmp eq i64 %134, %123
  br i1 %213, label %224, label %214

214:                                              ; preds = %212, %125, %120
  %215 = phi i8* [ %118, %125 ], [ %118, %120 ], [ %135, %212 ]
  %216 = phi i8* [ %101, %125 ], [ %101, %120 ], [ %136, %212 ]
  br label %217

217:                                              ; preds = %214, %217
  %218 = phi i8* [ %222, %217 ], [ %215, %214 ]
  %219 = phi i8* [ %221, %217 ], [ %216, %214 ]
  %220 = load i8, i8* %219, align 1
  store i8 %220, i8* %218, align 1
  %221 = getelementptr inbounds i8, i8* %219, i64 1
  %222 = getelementptr inbounds i8, i8* %218, i64 1
  %223 = icmp eq i8* %221, %95
  br i1 %223, label %224, label %217, !llvm.loop !11

224:                                              ; preds = %217, %212, %117
  %225 = phi i8* [ %118, %117 ], [ %135, %212 ], [ %222, %217 ]
  store i8 0, i8* %225, align 1
  call void @_ZN4i18n12addressinput13FormatElementC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::addressinput::FormatElement"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  %226 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %11, align 8
  %227 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %53, align 8
  %228 = icmp ult %"class.i18n::addressinput::FormatElement"* %226, %227
  br i1 %228, label %229, label %236

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %226, i64 0, i32 0
  %231 = load i32, i32* %54, align 8
  store i32 %231, i32* %230, align 8
  %232 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %226, i64 0, i32 1
  %233 = bitcast %"class.std::__1::basic_string"* %232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %56, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #9
  %234 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %226, i64 1
  %235 = ptrtoint %"class.i18n::addressinput::FormatElement"* %234 to i64
  store i64 %235, i64* %57, align 8
  br label %241

236:                                              ; preds = %224
  call void @_ZNSt3__16vectorIN4i18n12addressinput13FormatElementENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %1, %"class.i18n::addressinput::FormatElement"* nonnull dereferenceable(32) %3) #9
  %237 = load i8, i8* %59, align 1
  %238 = icmp slt i8 %237, 0
  br i1 %238, label %239, label %241

239:                                              ; preds = %236
  %240 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %240) #8
  br label %241

241:                                              ; preds = %229, %236, %239
  %242 = load i8, i8* %52, align 1
  %243 = icmp slt i8 %242, 0
  br i1 %243, label %244, label %246

244:                                              ; preds = %241
  %245 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %245) #8
  br label %246

246:                                              ; preds = %241, %244
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #9
  %247 = load i8, i8* %29, align 1
  %248 = load i8*, i8** %38, align 8
  %249 = load i64, i64* %39, align 8
  %250 = zext i8 %247 to i64
  br label %251

251:                                              ; preds = %246, %100
  %252 = phi i64 [ %250, %246 ], [ %82, %100 ]
  %253 = phi i8* [ %248, %246 ], [ %76, %100 ]
  %254 = phi i64 [ %249, %246 ], [ %77, %100 ]
  %255 = phi i8 [ %247, %246 ], [ %80, %100 ]
  %256 = getelementptr inbounds i8, i8* %95, i64 1
  %257 = icmp slt i8 %255, 0
  %258 = select i1 %257, i8* %253, i8* %36
  %259 = select i1 %257, i64 %254, i64 %252
  %260 = getelementptr inbounds i8, i8* %258, i64 %259
  %261 = icmp eq i8* %256, %260
  br i1 %261, label %321, label %262

262:                                              ; preds = %251
  %263 = load i8, i8* %256, align 1
  switch i8 %263, label %309 [
    i8 110, label %264
    i8 82, label %288
    i8 83, label %280
    i8 67, label %281
    i8 68, label %282
    i8 88, label %283
    i8 90, label %284
    i8 65, label %285
    i8 79, label %286
    i8 78, label %287
  ]

264:                                              ; preds = %262
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #9
  call void @_ZN4i18n12addressinput13FormatElementC1Ev(%"class.i18n::addressinput::FormatElement"* nonnull %5) #9
  %265 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %11, align 8
  %266 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %53, align 8
  %267 = icmp ult %"class.i18n::addressinput::FormatElement"* %265, %266
  br i1 %267, label %268, label %275

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %265, i64 0, i32 0
  %270 = load i32, i32* %69, align 8
  store i32 %270, i32* %269, align 8
  %271 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %265, i64 0, i32 1
  %272 = bitcast %"class.std::__1::basic_string"* %271 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %71, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #9
  %273 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %265, i64 1
  %274 = ptrtoint %"class.i18n::addressinput::FormatElement"* %273 to i64
  store i64 %274, i64* %57, align 8
  br label %307

275:                                              ; preds = %264
  call void @_ZNSt3__16vectorIN4i18n12addressinput13FormatElementENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %1, %"class.i18n::addressinput::FormatElement"* nonnull dereferenceable(32) %5) #9
  %276 = load i8, i8* %73, align 1
  %277 = icmp slt i8 %276, 0
  br i1 %277, label %278, label %307

278:                                              ; preds = %275
  %279 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %279) #8
  br label %307

280:                                              ; preds = %262
  br label %288

281:                                              ; preds = %262
  br label %288

282:                                              ; preds = %262
  br label %288

283:                                              ; preds = %262
  br label %288

284:                                              ; preds = %262
  br label %288

285:                                              ; preds = %262
  br label %288

286:                                              ; preds = %262
  br label %288

287:                                              ; preds = %262
  br label %288

288:                                              ; preds = %262, %280, %281, %282, %283, %284, %285, %286, %287
  %289 = phi %struct.anon.13* [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 1), %280 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 2), %281 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 3), %282 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 4), %283 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 5), %284 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 6), %285 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 7), %286 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 8), %287 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 0), %262 ]
  %290 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %289, i64 0, i32 1
  %291 = load i32, i32* %290, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %61) #9
  call void @_ZN4i18n12addressinput13FormatElementC1ENS0_12AddressFieldE(%"class.i18n::addressinput::FormatElement"* nonnull %6, i32 %291) #9
  %292 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %11, align 8
  %293 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %53, align 8
  %294 = icmp ult %"class.i18n::addressinput::FormatElement"* %292, %293
  br i1 %294, label %295, label %302

295:                                              ; preds = %288
  %296 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %292, i64 0, i32 0
  %297 = load i32, i32* %62, align 8
  store i32 %297, i32* %296, align 8
  %298 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %292, i64 0, i32 1
  %299 = bitcast %"class.std::__1::basic_string"* %298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %299, i8* align 8 %64, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #9
  %300 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %292, i64 1
  %301 = ptrtoint %"class.i18n::addressinput::FormatElement"* %300 to i64
  store i64 %301, i64* %57, align 8
  br label %307

302:                                              ; preds = %288
  call void @_ZNSt3__16vectorIN4i18n12addressinput13FormatElementENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %1, %"class.i18n::addressinput::FormatElement"* nonnull dereferenceable(32) %6) #9
  %303 = load i8, i8* %66, align 1
  %304 = icmp slt i8 %303, 0
  br i1 %304, label %305, label %307

305:                                              ; preds = %302
  %306 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %306) #8
  br label %307

307:                                              ; preds = %305, %302, %295, %278, %275, %268
  %308 = phi i8* [ %68, %268 ], [ %68, %275 ], [ %68, %278 ], [ %61, %295 ], [ %61, %302 ], [ %61, %305 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %308) #9
  br label %309

309:                                              ; preds = %307, %262
  %310 = getelementptr inbounds i8, i8* %95, i64 2
  %311 = ptrtoint i8* %310 to i64
  %312 = load i8, i8* %29, align 1
  %313 = icmp slt i8 %312, 0
  %314 = load i8*, i8** %38, align 8
  %315 = load i64, i64* %39, align 8
  %316 = zext i8 %312 to i64
  %317 = select i1 %313, i8* %314, i8* %36
  %318 = select i1 %313, i64 %315, i64 %316
  %319 = getelementptr inbounds i8, i8* %317, i64 %318
  %320 = icmp eq i8* %319, %310
  br i1 %320, label %323, label %75

321:                                              ; preds = %251
  %322 = ptrtoint i8* %256 to i64
  br label %326

323:                                              ; preds = %309
  %324 = ptrtoint i8* %310 to i64
  %325 = zext i8 %312 to i64
  br label %326

326:                                              ; preds = %94, %323, %321, %27
  %327 = phi i64 [ %252, %321 ], [ %41, %27 ], [ %325, %323 ], [ %82, %94 ]
  %328 = phi i8* [ %253, %321 ], [ %34, %27 ], [ %314, %323 ], [ %76, %94 ]
  %329 = phi i64 [ %254, %321 ], [ %40, %27 ], [ %315, %323 ], [ %77, %94 ]
  %330 = phi i8 [ %255, %321 ], [ %30, %27 ], [ %312, %323 ], [ %80, %94 ]
  %331 = phi i64 [ %322, %321 ], [ %37, %27 ], [ %324, %323 ], [ %81, %94 ]
  %332 = icmp slt i8 %330, 0
  %333 = select i1 %332, i8* %328, i8* %36
  %334 = select i1 %332, i64 %329, i64 %327
  %335 = getelementptr inbounds i8, i8* %333, i64 %334
  %336 = inttoptr i64 %331 to i8*
  %337 = icmp eq i8* %335, %336
  br i1 %337, label %504, label %338

338:                                              ; preds = %326
  %339 = bitcast %"class.i18n::addressinput::FormatElement"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %339) #9
  %340 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %340) #9
  %341 = select i1 %332, i8* %328, i8* %36
  %342 = getelementptr inbounds i8, i8* %341, i64 %334
  %343 = ptrtoint i8* %342 to i64
  %344 = sub i64 %343, %331
  %345 = icmp ugt i64 %344, -17
  br i1 %345, label %346, label %348

346:                                              ; preds = %338
  %347 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %347) #10
  unreachable

348:                                              ; preds = %338
  %349 = icmp ult i64 %344, 23
  br i1 %349, label %350, label %354

350:                                              ; preds = %348
  %351 = trunc i64 %344 to i8
  %352 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %353 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %352, i64 0, i32 1, i32 0
  store i8 %351, i8* %353, align 1
  br label %362

354:                                              ; preds = %348
  %355 = add nuw i64 %344, 16
  %356 = and i64 %355, -16
  %357 = call i8* @_Znwm(i64 %356) #8
  %358 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %357, i8** %358, align 8
  %359 = or i64 %356, -9223372036854775808
  %360 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %359, i64* %360, align 8
  %361 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %344, i64* %361, align 8
  br label %362

362:                                              ; preds = %354, %350
  %363 = phi i8* [ %340, %350 ], [ %357, %354 ]
  %364 = icmp eq i8* %342, %336
  br i1 %364, label %469, label %365

365:                                              ; preds = %362
  %366 = sub i64 %334, %331
  %367 = getelementptr i8, i8* %341, i64 %366
  %368 = ptrtoint i8* %367 to i64
  %369 = icmp ult i8* %367, inttoptr (i64 32 to i8*)
  br i1 %369, label %459, label %370

370:                                              ; preds = %365
  %371 = sub i64 %334, %331
  %372 = getelementptr i8, i8* %363, i64 %371
  %373 = ptrtoint i8* %372 to i64
  %374 = getelementptr i8, i8* %341, i64 %373
  %375 = icmp ult i8* %363, %342
  %376 = icmp ugt i8* %374, %336
  %377 = and i1 %375, %376
  br i1 %377, label %459, label %378

378:                                              ; preds = %370
  %379 = and i64 %368, -32
  %380 = getelementptr i8, i8* %363, i64 %379
  %381 = getelementptr i8, i8* %336, i64 %379
  %382 = add i64 %379, -32
  %383 = lshr exact i64 %382, 5
  %384 = add nuw nsw i64 %383, 1
  %385 = and i64 %384, 3
  %386 = icmp ult i64 %382, 96
  br i1 %386, label %438, label %387

387:                                              ; preds = %378
  %388 = sub nsw i64 %384, %385
  br label %389

389:                                              ; preds = %389, %387
  %390 = phi i64 [ 0, %387 ], [ %435, %389 ]
  %391 = phi i64 [ %388, %387 ], [ %436, %389 ]
  %392 = getelementptr i8, i8* %363, i64 %390
  %393 = getelementptr i8, i8* %336, i64 %390
  %394 = bitcast i8* %393 to <16 x i8>*
  %395 = load <16 x i8>, <16 x i8>* %394, align 1, !alias.scope !12
  %396 = getelementptr i8, i8* %393, i64 16
  %397 = bitcast i8* %396 to <16 x i8>*
  %398 = load <16 x i8>, <16 x i8>* %397, align 1, !alias.scope !12
  %399 = bitcast i8* %392 to <16 x i8>*
  store <16 x i8> %395, <16 x i8>* %399, align 1, !alias.scope !15, !noalias !12
  %400 = getelementptr i8, i8* %392, i64 16
  %401 = bitcast i8* %400 to <16 x i8>*
  store <16 x i8> %398, <16 x i8>* %401, align 1, !alias.scope !15, !noalias !12
  %402 = or i64 %390, 32
  %403 = getelementptr i8, i8* %363, i64 %402
  %404 = getelementptr i8, i8* %336, i64 %402
  %405 = bitcast i8* %404 to <16 x i8>*
  %406 = load <16 x i8>, <16 x i8>* %405, align 1, !alias.scope !12
  %407 = getelementptr i8, i8* %404, i64 16
  %408 = bitcast i8* %407 to <16 x i8>*
  %409 = load <16 x i8>, <16 x i8>* %408, align 1, !alias.scope !12
  %410 = bitcast i8* %403 to <16 x i8>*
  store <16 x i8> %406, <16 x i8>* %410, align 1, !alias.scope !15, !noalias !12
  %411 = getelementptr i8, i8* %403, i64 16
  %412 = bitcast i8* %411 to <16 x i8>*
  store <16 x i8> %409, <16 x i8>* %412, align 1, !alias.scope !15, !noalias !12
  %413 = or i64 %390, 64
  %414 = getelementptr i8, i8* %363, i64 %413
  %415 = getelementptr i8, i8* %336, i64 %413
  %416 = bitcast i8* %415 to <16 x i8>*
  %417 = load <16 x i8>, <16 x i8>* %416, align 1, !alias.scope !12
  %418 = getelementptr i8, i8* %415, i64 16
  %419 = bitcast i8* %418 to <16 x i8>*
  %420 = load <16 x i8>, <16 x i8>* %419, align 1, !alias.scope !12
  %421 = bitcast i8* %414 to <16 x i8>*
  store <16 x i8> %417, <16 x i8>* %421, align 1, !alias.scope !15, !noalias !12
  %422 = getelementptr i8, i8* %414, i64 16
  %423 = bitcast i8* %422 to <16 x i8>*
  store <16 x i8> %420, <16 x i8>* %423, align 1, !alias.scope !15, !noalias !12
  %424 = or i64 %390, 96
  %425 = getelementptr i8, i8* %363, i64 %424
  %426 = getelementptr i8, i8* %336, i64 %424
  %427 = bitcast i8* %426 to <16 x i8>*
  %428 = load <16 x i8>, <16 x i8>* %427, align 1, !alias.scope !12
  %429 = getelementptr i8, i8* %426, i64 16
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !12
  %432 = bitcast i8* %425 to <16 x i8>*
  store <16 x i8> %428, <16 x i8>* %432, align 1, !alias.scope !15, !noalias !12
  %433 = getelementptr i8, i8* %425, i64 16
  %434 = bitcast i8* %433 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %434, align 1, !alias.scope !15, !noalias !12
  %435 = add i64 %390, 128
  %436 = add i64 %391, -4
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %438, label %389, !llvm.loop !17

438:                                              ; preds = %389, %378
  %439 = phi i64 [ 0, %378 ], [ %435, %389 ]
  %440 = icmp eq i64 %385, 0
  br i1 %440, label %457, label %441

441:                                              ; preds = %438, %441
  %442 = phi i64 [ %454, %441 ], [ %439, %438 ]
  %443 = phi i64 [ %455, %441 ], [ %385, %438 ]
  %444 = getelementptr i8, i8* %363, i64 %442
  %445 = getelementptr i8, i8* %336, i64 %442
  %446 = bitcast i8* %445 to <16 x i8>*
  %447 = load <16 x i8>, <16 x i8>* %446, align 1, !alias.scope !12
  %448 = getelementptr i8, i8* %445, i64 16
  %449 = bitcast i8* %448 to <16 x i8>*
  %450 = load <16 x i8>, <16 x i8>* %449, align 1, !alias.scope !12
  %451 = bitcast i8* %444 to <16 x i8>*
  store <16 x i8> %447, <16 x i8>* %451, align 1, !alias.scope !15, !noalias !12
  %452 = getelementptr i8, i8* %444, i64 16
  %453 = bitcast i8* %452 to <16 x i8>*
  store <16 x i8> %450, <16 x i8>* %453, align 1, !alias.scope !15, !noalias !12
  %454 = add i64 %442, 32
  %455 = add i64 %443, -1
  %456 = icmp eq i64 %455, 0
  br i1 %456, label %457, label %441, !llvm.loop !18

457:                                              ; preds = %441, %438
  %458 = icmp eq i64 %379, %368
  br i1 %458, label %469, label %459

459:                                              ; preds = %457, %370, %365
  %460 = phi i8* [ %363, %370 ], [ %363, %365 ], [ %380, %457 ]
  %461 = phi i8* [ %336, %370 ], [ %336, %365 ], [ %381, %457 ]
  br label %462

462:                                              ; preds = %459, %462
  %463 = phi i8* [ %467, %462 ], [ %460, %459 ]
  %464 = phi i8* [ %466, %462 ], [ %461, %459 ]
  %465 = load i8, i8* %464, align 1
  store i8 %465, i8* %463, align 1
  %466 = getelementptr inbounds i8, i8* %464, i64 1
  %467 = getelementptr inbounds i8, i8* %463, i64 1
  %468 = icmp eq i8* %466, %342
  br i1 %468, label %469, label %462, !llvm.loop !19

469:                                              ; preds = %462, %457, %362
  %470 = phi i8* [ %363, %362 ], [ %380, %457 ], [ %467, %462 ]
  store i8 0, i8* %470, align 1
  call void @_ZN4i18n12addressinput13FormatElementC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::addressinput::FormatElement"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #9
  %471 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %11, align 8
  %472 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %473 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %472, align 8
  %474 = icmp ult %"class.i18n::addressinput::FormatElement"* %471, %473
  br i1 %474, label %475, label %486

475:                                              ; preds = %469
  %476 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %471, i64 0, i32 0
  %477 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %7, i64 0, i32 0
  %478 = load i32, i32* %477, align 8
  store i32 %478, i32* %476, align 8
  %479 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %471, i64 0, i32 1
  %480 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %7, i64 0, i32 1
  %481 = bitcast %"class.std::__1::basic_string"* %479 to i8*
  %482 = bitcast %"class.std::__1::basic_string"* %480 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %481, i8* align 8 %482, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %482, i8 0, i64 24, i1 false) #9
  %483 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %471, i64 1
  %484 = ptrtoint %"class.i18n::addressinput::FormatElement"* %483 to i64
  %485 = bitcast %"class.i18n::addressinput::FormatElement"** %11 to i64*
  store i64 %484, i64* %485, align 8
  br label %495

486:                                              ; preds = %469
  call void @_ZNSt3__16vectorIN4i18n12addressinput13FormatElementENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %1, %"class.i18n::addressinput::FormatElement"* nonnull dereferenceable(32) %7) #9
  %487 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %7, i64 0, i32 1
  %488 = bitcast %"class.std::__1::basic_string"* %487 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %489 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %488, i64 0, i32 1, i32 0
  %490 = load i8, i8* %489, align 1
  %491 = icmp slt i8 %490, 0
  br i1 %491, label %492, label %495

492:                                              ; preds = %486
  %493 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %494 = load i8*, i8** %493, align 8
  call void @_ZdlPv(i8* %494) #8
  br label %495

495:                                              ; preds = %475, %486, %492
  %496 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %497 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %496, i64 0, i32 1, i32 0
  %498 = load i8, i8* %497, align 1
  %499 = icmp slt i8 %498, 0
  br i1 %499, label %500, label %503

500:                                              ; preds = %495
  %501 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %502 = load i8*, i8** %501, align 8
  call void @_ZdlPv(i8* %502) #8
  br label %503

503:                                              ; preds = %495, %500
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %340) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %339) #9
  br label %504

504:                                              ; preds = %326, %503
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4i18n12addressinput13FormatElementC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::addressinput::FormatElement"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN4i18n12addressinput13FormatElementC1Ev(%"class.i18n::addressinput::FormatElement"*) unnamed_addr #2

declare void @_ZN4i18n12addressinput13FormatElementC1ENS0_12AddressFieldE(%"class.i18n::addressinput::FormatElement"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12addressinput26ParseAddressFieldsRequiredERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS0_12AddressFieldENS5_ISB_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.6"*) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::vector.6"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i8* %12, i8* %15
  %18 = select i1 %10, i64 %14, i64 %16
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast i32** %22 to i64*
  %24 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 0
  br label %26

25:                                               ; preds = %100, %2
  ret void

26:                                               ; preds = %21, %100
  %27 = phi i8* [ %17, %21 ], [ %101, %100 ]
  %28 = load i8, i8* %27, align 1
  switch i8 %28, label %100 [
    i8 82, label %37
    i8 83, label %29
    i8 67, label %30
    i8 68, label %31
    i8 88, label %32
    i8 90, label %33
    i8 65, label %34
    i8 79, label %35
    i8 78, label %36
  ]

29:                                               ; preds = %26
  br label %37

30:                                               ; preds = %26
  br label %37

31:                                               ; preds = %26
  br label %37

32:                                               ; preds = %26
  br label %37

33:                                               ; preds = %26
  br label %37

34:                                               ; preds = %26
  br label %37

35:                                               ; preds = %26
  br label %37

36:                                               ; preds = %26
  br label %37

37:                                               ; preds = %26, %29, %30, %31, %32, %33, %34, %35, %36
  %38 = phi %struct.anon.13* [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 0), %26 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 1), %29 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 2), %30 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 3), %31 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 4), %32 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 5), %33 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 6), %34 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 7), %35 ], [ getelementptr inbounds ([9 x %struct.anon.13], [9 x %struct.anon.13]* @_ZZN4i18n12addressinput12_GLOBAL__N_115ParseFieldTokenEcPNS0_12AddressFieldEE9kTokenMap, i64 0, i64 8), %36 ]
  %39 = getelementptr inbounds %struct.anon.13, %struct.anon.13* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load i32*, i32** %5, align 8
  %42 = load i32*, i32** %22, align 8
  %43 = icmp eq i32* %41, %42
  %44 = ptrtoint i32* %42 to i64
  br i1 %43, label %48, label %45

45:                                               ; preds = %37
  store i32 %40, i32* %41, align 4
  %46 = getelementptr inbounds i32, i32* %41, i64 1
  %47 = ptrtoint i32* %46 to i64
  store i64 %47, i64* %6, align 8
  br label %100

48:                                               ; preds = %37
  %49 = ptrtoint i32* %41 to i64
  %50 = load i64, i64* %3, align 8
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 2
  %53 = add nsw i64 %52, 1
  %54 = icmp ugt i64 %53, 4611686018427387903
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::vector.6"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %56) #10
  unreachable

57:                                               ; preds = %48
  %58 = sub i64 %44, %50
  %59 = ashr exact i64 %58, 2
  %60 = icmp ult i64 %59, 2305843009213693951
  br i1 %60, label %61, label %69

61:                                               ; preds = %57
  %62 = ashr exact i64 %58, 1
  %63 = icmp ult i64 %62, %53
  %64 = select i1 %63, i64 %53, i64 %62
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %61
  %67 = icmp ugt i64 %64, 4611686018427387903
  br i1 %67, label %68, label %69

68:                                               ; preds = %66
  tail call void @abort() #10
  unreachable

69:                                               ; preds = %66, %57
  %70 = phi i64 [ %64, %66 ], [ 4611686018427387903, %57 ]
  %71 = shl i64 %70, 2
  %72 = tail call i8* @_Znwm(i64 %71) #8
  %73 = bitcast i8* %72 to i32*
  br label %74

74:                                               ; preds = %69, %61
  %75 = phi i64 [ %70, %69 ], [ 0, %61 ]
  %76 = phi i32* [ %73, %69 ], [ null, %61 ]
  %77 = getelementptr inbounds i32, i32* %76, i64 %52
  %78 = getelementptr inbounds i32, i32* %76, i64 %75
  %79 = ptrtoint i32* %78 to i64
  store i32 %40, i32* %77, align 4
  %80 = getelementptr inbounds i32, i32* %77, i64 1
  %81 = ptrtoint i32* %80 to i64
  %82 = load i32*, i32** %24, align 8
  %83 = load i64, i64* %6, align 8
  %84 = ptrtoint i32* %82 to i64
  %85 = sub i64 %83, %84
  %86 = ashr exact i64 %85, 2
  %87 = sub nsw i64 0, %86
  %88 = getelementptr inbounds i32, i32* %77, i64 %87
  %89 = ptrtoint i32* %88 to i64
  %90 = icmp sgt i64 %85, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %74
  %92 = bitcast i32* %88 to i8*
  %93 = bitcast i32* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %93, i64 %85, i1 false) #9
  %94 = load i32*, i32** %24, align 8
  br label %95

95:                                               ; preds = %91, %74
  %96 = phi i32* [ %82, %74 ], [ %94, %91 ]
  store i64 %89, i64* %3, align 8
  store i64 %81, i64* %6, align 8
  store i64 %79, i64* %23, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  %99 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %99) #8
  br label %100

100:                                              ; preds = %98, %95, %45, %26
  %101 = getelementptr inbounds i8, i8* %27, i64 1
  %102 = icmp eq i8* %101, %19
  br i1 %102, label %25, label %26
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4i18n12addressinput13FormatElementENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"class.i18n::addressinput::FormatElement"* dereferenceable(32)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.i18n::addressinput::FormatElement"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.i18n::addressinput::FormatElement"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #8
  %33 = bitcast i8* %32 to %"class.i18n::addressinput::FormatElement"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.i18n::addressinput::FormatElement"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %36, i64 %9
  %38 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %36, i64 %35
  %39 = ptrtoint %"class.i18n::addressinput::FormatElement"* %38 to i64
  %40 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %1, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %1, i64 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %46 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #9
  %47 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %37, i64 1
  %48 = ptrtoint %"class.i18n::addressinput::FormatElement"* %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %50 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %49, align 8
  %51 = ptrtoint %"class.i18n::addressinput::FormatElement"* %50 to i64
  %52 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %3, align 8
  %53 = icmp eq %"class.i18n::addressinput::FormatElement"* %52, %50
  br i1 %53, label %99, label %54

54:                                               ; preds = %34
  %55 = getelementptr %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %52, i64 -1, i32 0
  %56 = ptrtoint i32* %55 to i64
  %57 = sub i64 %56, %51
  %58 = and i64 %57, 32
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %52, i64 -1
  %62 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %37, i64 -1, i32 0
  %63 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %37, i64 -1, i32 1
  %66 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %52, i64 -1, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %68 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #9
  %69 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %37, i64 -1
  br label %70

70:                                               ; preds = %60, %54
  %71 = phi %"class.i18n::addressinput::FormatElement"* [ undef, %54 ], [ %69, %60 ]
  %72 = phi %"class.i18n::addressinput::FormatElement"* [ %37, %54 ], [ %69, %60 ]
  %73 = phi %"class.i18n::addressinput::FormatElement"* [ %52, %54 ], [ %61, %60 ]
  %74 = icmp ult i64 %57, 32
  br i1 %74, label %95, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"class.i18n::addressinput::FormatElement"* [ %93, %75 ], [ %72, %70 ]
  %77 = phi %"class.i18n::addressinput::FormatElement"* [ %85, %75 ], [ %73, %70 ]
  %78 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %76, i64 -1, i32 0
  %79 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %77, i64 -1, i32 0
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %78, align 8
  %81 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %76, i64 -1, i32 1
  %82 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %77, i64 -1, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #9
  %85 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %77, i64 -2
  %86 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %76, i64 -2, i32 0
  %87 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %85, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %76, i64 -2, i32 1
  %90 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %77, i64 -2, i32 1
  %91 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #9
  %93 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %76, i64 -2
  %94 = icmp eq %"class.i18n::addressinput::FormatElement"* %85, %50
  br i1 %94, label %95, label %75

95:                                               ; preds = %75, %70
  %96 = phi %"class.i18n::addressinput::FormatElement"* [ %71, %70 ], [ %93, %75 ]
  %97 = load i64, i64* %6, align 8
  %98 = load %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"** %3, align 8
  br label %99

99:                                               ; preds = %34, %95
  %100 = phi %"class.i18n::addressinput::FormatElement"* [ %98, %95 ], [ %50, %34 ]
  %101 = phi %"class.i18n::addressinput::FormatElement"* [ %96, %95 ], [ %37, %34 ]
  %102 = phi i64 [ %97, %95 ], [ %51, %34 ]
  %103 = ptrtoint %"class.i18n::addressinput::FormatElement"* %101 to i64
  store i64 %103, i64* %6, align 8
  store i64 %48, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %104 = inttoptr i64 %102 to %"class.i18n::addressinput::FormatElement"*
  %105 = icmp eq %"class.i18n::addressinput::FormatElement"* %100, %104
  br i1 %105, label %119, label %106

106:                                              ; preds = %99, %117
  %107 = phi %"class.i18n::addressinput::FormatElement"* [ %108, %117 ], [ %100, %99 ]
  %108 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %107, i64 -1
  %109 = getelementptr inbounds %"class.i18n::addressinput::FormatElement", %"class.i18n::addressinput::FormatElement"* %107, i64 -1, i32 1
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZdlPv(i8* %116) #8
  br label %117

117:                                              ; preds = %114, %106
  %118 = icmp eq %"class.i18n::addressinput::FormatElement"* %108, %104
  br i1 %118, label %119, label %106

119:                                              ; preds = %117, %99
  %120 = icmp eq i64 %102, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = inttoptr i64 %102 to i8*
  tail call void @_ZdlPv(i8* %122) #8
  br label %123

123:                                              ; preds = %119, %121
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !8}
