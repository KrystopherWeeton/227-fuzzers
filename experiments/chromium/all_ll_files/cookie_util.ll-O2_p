; ModuleID = '../../net/cookies/cookie_util.cc'
source_filename = "../../net/cookies/cookie_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1", [4 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GURL* }
%"struct.url::CanonHostInfo" = type { i32, i32, %"struct.url::Component", [16 x i8] }
%"struct.base::Time::Exploded" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__wrap_iter" = type { i8* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.23" = type { %"class.absl::optional_internal::optional_data.24" }
%"class.absl::optional_internal::optional_data.24" = type { %"class.absl::optional_internal::optional_data_base.25" }
%"class.absl::optional_internal::optional_data_base.25" = type { %"class.absl::optional_internal::optional_data_dtor_base.26" }
%"class.absl::optional_internal::optional_data_dtor_base.26" = type { i8, %union.anon.27 }
%union.anon.27 = type { %"class.url::Origin" }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.23", %"class.absl::optional.23", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.35" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.30", %"class.absl::optional.30" }
%"class.absl::optional.30" = type { %"class.absl::optional_internal::optional_data.31" }
%"class.absl::optional_internal::optional_data.31" = type { %"class.absl::optional_internal::optional_data_base.32" }
%"class.absl::optional_internal::optional_data_base.32" = type { %"class.absl::optional_internal::optional_data_dtor_base.33" }
%"class.absl::optional_internal::optional_data_dtor_base.33" = type { i8, %union.anon.34 }
%union.anon.34 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64 }
%"class.net::CookieAccessDelegate" = type { i32 (...)** }
%"class.net::CookieOptions" = type <{ i8, [3 x i8], %"class.net::CookieOptions::SameSiteCookieContext", i8, i8, [2 x i8], i32, i32, i8, [3 x i8] }>
%"class.net::CookieOptions::SameSiteCookieContext" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.48" }
%"struct.std::__1::atomic.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl.51" }
%"struct.std::__1::__cxx_atomic_impl.51" = type { %"struct.std::__1::__cxx_atomic_base_impl.52" }
%"struct.std::__1::__cxx_atomic_base_impl.52" = type { i32 }
%"class.base::OnceCallback.53" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"*, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.net::CanonicalCookie"* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"*, %"class.std::__1::__compressed_pair.56" }
%"struct.net::CookieWithAccessResult" = type <{ %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", [4 x i8] }>
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.net::CookieWithAccessResult"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv = comdat any

$_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE24__emplace_back_slow_pathIJS7_S7_EEEvDpOT_ = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeINS_11__wrap_iterIPKcEEEERS5_T_SC_ = comdat any

$_ZNSt3__16vectorIN3net15CanonicalCookieENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [34 x i8] c"API.StorageAccess.AllowedRequests\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"https\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"ws\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"wss\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c".\00", align 1
@_ZZN3net11cookie_util25ParseCookieExpirationTimeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE7kMonths = internal unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i32 0, i32 0)], align 16
@.str.6 = private unnamed_addr constant [4 x i8] c"jan\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"feb\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"mar\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"apr\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"may\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"jun\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"jul\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"aug\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"sep\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"oct\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"nov\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"dec\00", align 1
@_ZZN3net11cookie_util25ParseCookieExpirationTimeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE11kDelimiters = internal unnamed_addr constant [34 x i8] c"\09 !\22#$%&'()*+,-./;<=>?@[\5C]^_`{|}~\00", align 16
@.str.18 = private unnamed_addr constant [12 x i8] c"%2u:%2u:%2u\00", align 1
@_ZN3url24kStandardSchemeSeparatorE = external constant [0 x i8], align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@_ZN3net8features25kSameSiteByDefaultCookiesE = external global %"struct.base::Feature", align 8
@_ZN3net8features35kCookiesWithoutSameSiteMustBeSecureE = external global %"struct.base::Feature", align 8
@_ZN3net8features18kSchemefulSameSiteE = external global %"struct.base::Feature", align 8
@_ZN3net8features15kFirstPartySetsE = external global %"struct.base::Feature", align 8
@.str.21 = private unnamed_addr constant [43 x i8] c"Cookie.Port.OmniboxURLNavigation.Localhost\00", align 1
@.str.22 = private unnamed_addr constant [44 x i8] c"Cookie.Port.OmniboxURLNavigation.RemoteHost\00", align 1
@.str.25 = private unnamed_addr constant [46 x i8] c"Cookie.SameSiteContextAffectedByBugfix1166211\00", align 1
@_ZN3net8features29kSameSiteCookiesBugfix1166211E = external global %"struct.base::Feature", align 8
@_ZZN3net11cookie_util26FireStorageAccessHistogramENS0_19StorageAccessResultEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net11cookie_util33RecordCookiePortOmniboxHistogramsERK4GURLE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net11cookie_util33RecordCookiePortOmniboxHistogramsERK4GURLE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util26FireStorageAccessHistogramENS0_19StorageAccessResultE(i32) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* @_ZZN3net11cookie_util26FireStorageAccessHistogramENS0_19StorageAccessResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %3 = inttoptr i64 %2 to %"class.base::HistogramBase"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #12
  %7 = ptrtoint %"class.base::HistogramBase"* %6 to i64
  store atomic i64 %7, i64* @_ZZN3net11cookie_util26FireStorageAccessHistogramENS0_19StorageAccessResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.base::HistogramBase"* [ %3, %1 ], [ %6, %5 ]
  %10 = bitcast %"class.base::HistogramBase"* %9 to void (%"class.base::HistogramBase"*, i32)***
  %11 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %11, i64 6
  %13 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %12, align 8
  tail call void %13(%"class.base::HistogramBase"* %9, i32 %0) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net11cookie_util16DomainIsHostOnlyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %15 = select i1 %5, i8* %13, i8* %14
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 46
  br label %18

18:                                               ; preds = %11, %1
  %19 = phi i1 [ true, %1 ], [ %17, %11 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util18CookieDomainAsHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %16 = select i1 %6, i8* %14, i8* %15
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 46
  br i1 %18, label %26, label %19

19:                                               ; preds = %12, %2
  br i1 %6, label %23, label %20

20:                                               ; preds = %19
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #12
  br label %28

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %25, i64 %8) #12
  br label %28

26:                                               ; preds = %12
  %27 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 1, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %27) #12
  br label %28

28:                                               ; preds = %23, %20, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util18GetEffectiveDomainERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, 4
  br i1 %12, label %13, label %20

13:                                               ; preds = %3
  %14 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %58, label %16

16:                                               ; preds = %13
  %17 = load i8, i8* %5, align 1
  %18 = load i64, i64* %8, align 8
  %19 = zext i8 %17 to i64
  br label %20

20:                                               ; preds = %16, %3
  %21 = phi i64 [ %19, %16 ], [ %10, %3 ]
  %22 = phi i64 [ %18, %16 ], [ %9, %3 ]
  %23 = phi i8 [ %17, %16 ], [ %6, %3 ]
  %24 = icmp slt i8 %23, 0
  %25 = select i1 %24, i64 %22, i64 %21
  %26 = icmp eq i64 %25, 5
  br i1 %26, label %27, label %34

27:                                               ; preds = %20
  %28 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #12
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %58, label %30

30:                                               ; preds = %27
  %31 = load i8, i8* %5, align 1
  %32 = load i64, i64* %8, align 8
  %33 = zext i8 %31 to i64
  br label %34

34:                                               ; preds = %30, %20
  %35 = phi i64 [ %33, %30 ], [ %21, %20 ]
  %36 = phi i64 [ %32, %30 ], [ %22, %20 ]
  %37 = phi i8 [ %31, %30 ], [ %23, %20 ]
  %38 = icmp slt i8 %37, 0
  %39 = select i1 %38, i64 %36, i64 %35
  %40 = icmp eq i64 %39, 2
  br i1 %40, label %41, label %48

41:                                               ; preds = %34
  %42 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %58, label %44

44:                                               ; preds = %41
  %45 = load i8, i8* %5, align 1
  %46 = load i64, i64* %8, align 8
  %47 = zext i8 %45 to i64
  br label %48

48:                                               ; preds = %44, %34
  %49 = phi i64 [ %47, %44 ], [ %35, %34 ]
  %50 = phi i64 [ %46, %44 ], [ %36, %34 ]
  %51 = phi i8 [ %45, %44 ], [ %37, %34 ]
  %52 = icmp slt i8 %51, 0
  %53 = select i1 %52, i64 %50, i64 %49
  %54 = icmp eq i64 %53, 3
  br i1 %54, label %55, label %71

55:                                               ; preds = %48
  %56 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #12
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %71

58:                                               ; preds = %55, %41, %27, %13
  %59 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %66 = select i1 %62, i8* %64, i8* %65
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %61 to i64
  %70 = select i1 %62, i64 %68, i64 %69
  tail call void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* sret %0, i8* %66, i64 %70, i32 1) #12
  br label %97

71:                                               ; preds = %48, %55
  %72 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1, !noalias !2
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8, !noalias !2
  %78 = zext i8 %74 to i64
  %79 = select i1 %75, i64 %77, i64 %78
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %88, label %81

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8, !noalias !2
  %84 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %85 = select i1 %75, i8* %83, i8* %84
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 46
  br i1 %87, label %95, label %88

88:                                               ; preds = %81, %71
  br i1 %75, label %92, label %89

89:                                               ; preds = %88
  %90 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %91 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 24, i1 false) #12
  br label %97

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8, !noalias !2
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %94, i64 %77) #12
  br label %97

95:                                               ; preds = %81
  %96 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::allocator"*
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 1, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %96) #12
  br label %97

97:                                               ; preds = %95, %92, %89, %58
  ret void
}

declare void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* sret, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11cookie_util25GetCookieDomainWithStringERK4GURLRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPSA_(%class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::allocator", align 1
  %5 = alloca %"class.std::__1::allocator", align 1
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.url::CanonHostInfo", align 16
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 3, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  %19 = load i32, i32* %17, align 4, !noalias !5
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %21, label %22

21:                                               ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12, !alias.scope !5
  br label %29

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %24 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 3, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !5
  %26 = sext i32 %25 to i64
  %27 = sext i32 %19 to i64
  %28 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #12, !noalias !5
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %23, i64 %26, i64 %27, %"class.std::__1::allocator"* nonnull dereferenceable(1) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #12, !noalias !5
  br label %29

29:                                               ; preds = %21, %22
  %30 = bitcast %"struct.url::CanonHostInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %7, i64 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -86, i64 16, i1 false)
  %32 = bitcast %"struct.url::CanonHostInfo"* %7 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, <4 x i32>* %32, align 16
  %33 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  %39 = load i8, i8* %37, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %44 = select i1 %40, i8* %42, i8* %43
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %39 to i64
  %48 = select i1 %40, i64 %46, i64 %47
  call void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string"* nonnull sret %8, i8* %44, i64 %48, %"struct.url::CanonHostInfo"* nonnull %7) #12
  %49 = load i8, i8* %37, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i64, i64* %45, align 8
  %52 = zext i8 %49 to i64
  %53 = select i1 %50, i64 %51, i64 %52
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %101, label %55

55:                                               ; preds = %29
  %56 = call zeroext i1 @_ZNK4GURL15HostIsIPAddressEv(%class.GURL* %0) #12
  br i1 %56, label %57, label %126

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = load i64, i64* %16, align 8
  %63 = zext i8 %60 to i64
  %64 = select i1 %61, i64 %62, i64 %63
  %65 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = load i64, i64* %35, align 8
  %70 = zext i8 %67 to i64
  %71 = select i1 %68, i64 %69, i64 %70
  %72 = icmp eq i64 %64, %71
  br i1 %72, label %73, label %126

73:                                               ; preds = %57
  %74 = load i8*, i8** %15, align 8
  %75 = select i1 %61, i8* %74, i8* %14
  %76 = load i8*, i8** %34, align 8
  %77 = select i1 %68, i8* %76, i8* %33
  %78 = icmp eq i64 %64, 0
  br i1 %61, label %85, label %79

79:                                               ; preds = %73
  br i1 %78, label %101, label %80

80:                                               ; preds = %79
  %81 = ptrtoint i8* %74 to i64
  %82 = trunc i64 %81 to i8
  %83 = load i8, i8* %77, align 1
  %84 = icmp eq i8 %83, %82
  br i1 %84, label %86, label %126

85:                                               ; preds = %73
  br i1 %78, label %101, label %98

86:                                               ; preds = %80, %93
  %87 = phi i64 [ %90, %93 ], [ %63, %80 ]
  %88 = phi i8* [ %91, %93 ], [ %14, %80 ]
  %89 = phi i8* [ %94, %93 ], [ %77, %80 ]
  %90 = add i64 %87, -1
  %91 = getelementptr inbounds i8, i8* %88, i64 1
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds i8, i8* %89, i64 1
  %95 = load i8, i8* %91, align 1
  %96 = load i8, i8* %94, align 1
  %97 = icmp eq i8 %95, %96
  br i1 %97, label %86, label %126

98:                                               ; preds = %85
  %99 = call i32 @bcmp(i8* %75, i8* %77, i64 %64) #12
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %126

101:                                              ; preds = %86, %79, %85, %98, %29
  %102 = icmp eq %"class.std::__1::basic_string"* %6, %2
  br i1 %102, label %409, label %103

103:                                              ; preds = %101
  %104 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %107, label %119, label %112

112:                                              ; preds = %103
  br i1 %111, label %115, label %113

113:                                              ; preds = %112
  %114 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* nonnull align 8 %14, i64 24, i1 false) #12
  br label %409

115:                                              ; preds = %112
  %116 = load i8*, i8** %15, align 8
  %117 = load i64, i64* %16, align 8
  %118 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %2, i8* %116, i64 %117) #12
  br label %409

119:                                              ; preds = %103
  %120 = load i8*, i8** %15, align 8
  %121 = load i64, i64* %16, align 8
  %122 = zext i8 %110 to i64
  %123 = select i1 %111, i8* %120, i8* %14
  %124 = select i1 %111, i64 %121, i64 %122
  %125 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %2, i8* %123, i64 %124) #12
  br label %409

126:                                              ; preds = %93, %80, %57, %98, %55
  %127 = load i8, i8* %37, align 1
  %128 = icmp slt i8 %127, 0
  %129 = load i8*, i8** %41, align 8
  %130 = load i64, i64* %45, align 8
  %131 = zext i8 %127 to i64
  %132 = select i1 %128, i8* %129, i8* %43
  %133 = select i1 %128, i64 %130, i64 %131
  %134 = getelementptr inbounds i8, i8* %132, i64 %133
  %135 = icmp eq i64 %133, 0
  br i1 %135, label %143, label %138

136:                                              ; preds = %138
  %137 = icmp eq i8* %142, %134
  br i1 %137, label %143, label %138

138:                                              ; preds = %126, %136
  %139 = phi i8* [ %142, %136 ], [ %132, %126 ]
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 37
  %142 = getelementptr inbounds i8, i8* %139, i64 1
  br i1 %141, label %409, label %136

143:                                              ; preds = %136, %126
  %144 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %144, i64 0, i32 1, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  %148 = load i64, i64* %35, align 8
  %149 = zext i8 %146 to i64
  %150 = select i1 %147, i64 %148, i64 %149
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %409, label %152

152:                                              ; preds = %143
  %153 = load i8*, i8** %34, align 8
  %154 = select i1 %147, i8* %153, i8* %33
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, 46
  br i1 %156, label %164, label %157

157:                                              ; preds = %152
  %158 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #12
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #12
  %159 = load i8, i8* %145, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %157
  %162 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %161, %157
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* nonnull align 8 %158, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #12
  br label %164

164:                                              ; preds = %152, %163
  %165 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #12
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 1
  %168 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 24, i1 false)
  %169 = load i32, i32* %167, align 4, !noalias !10
  %170 = icmp slt i32 %169, 1
  br i1 %170, label %171, label %172

171:                                              ; preds = %164
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 0, i64 24, i1 false) #12, !alias.scope !10
  br label %179

172:                                              ; preds = %164
  %173 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0
  %174 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 0, i32 0
  %175 = load i32, i32* %174, align 4, !noalias !10
  %176 = sext i32 %175 to i64
  %177 = sext i32 %169 to i64
  %178 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %178) #12, !noalias !10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %10, %"class.std::__1::basic_string"* dereferenceable(24) %173, i64 %176, i64 %177, %"class.std::__1::allocator"* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %178) #12, !noalias !10
  br label %179

179:                                              ; preds = %171, %172
  %180 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %180) #12
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %183 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 -86, i64 24, i1 false)
  call void @_ZN3net11cookie_util18GetEffectiveDomainERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* nonnull sret %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  %184 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %184, i64 0, i32 1, i32 0
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  %188 = load i64, i64* %182, align 8
  %189 = zext i8 %186 to i64
  %190 = select i1 %187, i64 %188, i64 %189
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %248

192:                                              ; preds = %179
  %193 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %193, i64 0, i32 1, i32 0
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  %197 = load i64, i64* %16, align 8
  %198 = zext i8 %195 to i64
  %199 = select i1 %196, i64 %197, i64 %198
  %200 = load i8, i8* %37, align 1
  %201 = icmp slt i8 %200, 0
  %202 = load i64, i64* %45, align 8
  %203 = zext i8 %200 to i64
  %204 = select i1 %201, i64 %202, i64 %203
  %205 = icmp eq i64 %199, %204
  br i1 %205, label %206, label %395

206:                                              ; preds = %192
  %207 = load i8*, i8** %15, align 8
  %208 = select i1 %196, i8* %207, i8* %14
  %209 = load i8*, i8** %41, align 8
  %210 = select i1 %201, i8* %209, i8* %43
  %211 = icmp eq i64 %199, 0
  br i1 %196, label %218, label %212

212:                                              ; preds = %206
  br i1 %211, label %234, label %213

213:                                              ; preds = %212
  %214 = ptrtoint i8* %207 to i64
  %215 = trunc i64 %214 to i8
  %216 = load i8, i8* %210, align 1
  %217 = icmp eq i8 %216, %215
  br i1 %217, label %219, label %395

218:                                              ; preds = %206
  br i1 %211, label %234, label %231

219:                                              ; preds = %213, %226
  %220 = phi i64 [ %223, %226 ], [ %198, %213 ]
  %221 = phi i8* [ %224, %226 ], [ %14, %213 ]
  %222 = phi i8* [ %227, %226 ], [ %210, %213 ]
  %223 = add i64 %220, -1
  %224 = getelementptr inbounds i8, i8* %221, i64 1
  %225 = icmp eq i64 %223, 0
  br i1 %225, label %234, label %226

226:                                              ; preds = %219
  %227 = getelementptr inbounds i8, i8* %222, i64 1
  %228 = load i8, i8* %224, align 1
  %229 = load i8, i8* %227, align 1
  %230 = icmp eq i8 %228, %229
  br i1 %230, label %219, label %395

231:                                              ; preds = %218
  %232 = call i32 @bcmp(i8* %208, i8* %210, i64 %199) #12
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %395

234:                                              ; preds = %219, %212, %218, %231
  %235 = icmp eq %"class.std::__1::basic_string"* %6, %2
  br i1 %235, label %395, label %236

236:                                              ; preds = %234
  %237 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %237, i64 0, i32 1, i32 0
  %239 = load i8, i8* %238, align 1
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %246, label %241

241:                                              ; preds = %236
  br i1 %196, label %244, label %242

242:                                              ; preds = %241
  %243 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* nonnull align 8 %14, i64 24, i1 false) #12
  br label %395

244:                                              ; preds = %241
  %245 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %2, i8* %207, i64 %197) #12
  br label %395

246:                                              ; preds = %236
  %247 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %2, i8* %208, i64 %199) #12
  br label %395

248:                                              ; preds = %179
  %249 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %249) #12
  %250 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %252 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %252, i8 -86, i64 24, i1 false)
  call void @_ZN3net11cookie_util18GetEffectiveDomainERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* nonnull sret %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8)
  %253 = load i8, i8* %185, align 1
  %254 = icmp slt i8 %253, 0
  %255 = load i64, i64* %182, align 8
  %256 = zext i8 %253 to i64
  %257 = select i1 %254, i64 %255, i64 %256
  %258 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %259 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %258, i64 0, i32 1, i32 0
  %260 = load i8, i8* %259, align 1
  %261 = icmp slt i8 %260, 0
  %262 = load i64, i64* %251, align 8
  %263 = zext i8 %260 to i64
  %264 = select i1 %261, i64 %262, i64 %263
  %265 = icmp eq i64 %257, %264
  br i1 %265, label %266, label %388

266:                                              ; preds = %248
  %267 = load i8*, i8** %181, align 8
  %268 = select i1 %254, i8* %267, i8* %180
  %269 = load i8*, i8** %250, align 8
  %270 = select i1 %261, i8* %269, i8* %249
  %271 = icmp eq i64 %257, 0
  br i1 %254, label %278, label %272

272:                                              ; preds = %266
  br i1 %271, label %294, label %273

273:                                              ; preds = %272
  %274 = ptrtoint i8* %267 to i64
  %275 = trunc i64 %274 to i8
  %276 = load i8, i8* %270, align 1
  %277 = icmp eq i8 %276, %275
  br i1 %277, label %279, label %388

278:                                              ; preds = %266
  br i1 %271, label %294, label %291

279:                                              ; preds = %273, %286
  %280 = phi i64 [ %283, %286 ], [ %256, %273 ]
  %281 = phi i8* [ %284, %286 ], [ %180, %273 ]
  %282 = phi i8* [ %287, %286 ], [ %270, %273 ]
  %283 = add i64 %280, -1
  %284 = getelementptr inbounds i8, i8* %281, i64 1
  %285 = icmp eq i64 %283, 0
  br i1 %285, label %294, label %286

286:                                              ; preds = %279
  %287 = getelementptr inbounds i8, i8* %282, i64 1
  %288 = load i8, i8* %284, align 1
  %289 = load i8, i8* %287, align 1
  %290 = icmp eq i8 %288, %289
  br i1 %290, label %279, label %388

291:                                              ; preds = %278
  %292 = call i32 @bcmp(i8* %268, i8* %270, i64 %257) #12
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %388

294:                                              ; preds = %279, %291, %272, %278
  %295 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %296 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %295, i64 0, i32 1, i32 0
  %297 = load i8, i8* %296, align 1
  %298 = icmp slt i8 %297, 0
  %299 = load i64, i64* %16, align 8
  %300 = zext i8 %297 to i64
  %301 = select i1 %298, i64 %299, i64 %300
  %302 = load i8, i8* %145, align 1
  %303 = icmp slt i8 %302, 0
  %304 = load i64, i64* %35, align 8
  %305 = zext i8 %302 to i64
  %306 = select i1 %303, i64 %304, i64 %305
  %307 = icmp ult i64 %301, %306
  br i1 %307, label %308, label %353

308:                                              ; preds = %294
  %309 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %309) #12
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #12
  %310 = load i8, i8* %145, align 1
  %311 = icmp slt i8 %310, 0
  %312 = load i64, i64* %35, align 8
  %313 = zext i8 %310 to i64
  %314 = select i1 %311, i64 %312, i64 %313
  %315 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %316 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %315, i64 0, i32 1, i32 0
  %317 = load i8, i8* %316, align 1
  %318 = icmp slt i8 %317, 0
  %319 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %320 = load i64, i64* %319, align 8
  %321 = zext i8 %317 to i64
  %322 = select i1 %318, i64 %320, i64 %321
  %323 = icmp eq i64 %314, %322
  br i1 %323, label %324, label %359

324:                                              ; preds = %308
  %325 = load i8*, i8** %34, align 8
  %326 = select i1 %311, i8* %325, i8* %33
  %327 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load i8*, i8** %327, align 8
  %329 = select i1 %318, i8* %328, i8* %309
  %330 = icmp eq i64 %314, 0
  br i1 %311, label %337, label %331

331:                                              ; preds = %324
  br i1 %330, label %359, label %332

332:                                              ; preds = %331
  %333 = ptrtoint i8* %325 to i64
  %334 = trunc i64 %333 to i8
  %335 = load i8, i8* %329, align 1
  %336 = icmp eq i8 %335, %334
  br i1 %336, label %341, label %359

337:                                              ; preds = %324
  br i1 %330, label %359, label %338

338:                                              ; preds = %337
  %339 = call i32 @bcmp(i8* %326, i8* %329, i64 %314) #12
  %340 = icmp ne i32 %339, 0
  br label %359

341:                                              ; preds = %332, %348
  %342 = phi i64 [ %345, %348 ], [ %313, %332 ]
  %343 = phi i8* [ %346, %348 ], [ %33, %332 ]
  %344 = phi i8* [ %349, %348 ], [ %329, %332 ]
  %345 = add i64 %342, -1
  %346 = getelementptr inbounds i8, i8* %343, i64 1
  %347 = icmp eq i64 %345, 0
  br i1 %347, label %359, label %348

348:                                              ; preds = %341
  %349 = getelementptr inbounds i8, i8* %344, i64 1
  %350 = load i8, i8* %346, align 1
  %351 = load i8, i8* %349, align 1
  %352 = icmp eq i8 %350, %351
  br i1 %352, label %341, label %359

353:                                              ; preds = %294
  %354 = sub i64 %301, %306
  %355 = load i8*, i8** %34, align 8
  %356 = select i1 %303, i8* %355, i8* %33
  %357 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 %354, i64 %306, i8* %356, i64 %306) #12
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %365, label %388

359:                                              ; preds = %341, %348, %332, %308, %331, %337, %338
  %360 = phi i1 [ false, %331 ], [ false, %337 ], [ %340, %338 ], [ true, %308 ], [ true, %332 ], [ false, %341 ], [ true, %348 ]
  br i1 %318, label %361, label %364

361:                                              ; preds = %359
  %362 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load i8*, i8** %362, align 8
  call void @_ZdlPv(i8* %363) #13
  br label %364

364:                                              ; preds = %361, %359
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %309) #12
  br i1 %360, label %388, label %365

365:                                              ; preds = %353, %364
  %366 = icmp eq %"class.std::__1::basic_string"* %8, %2
  br i1 %366, label %388, label %367

367:                                              ; preds = %365
  %368 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %369 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %368, i64 0, i32 1, i32 0
  %370 = load i8, i8* %369, align 1
  %371 = icmp slt i8 %370, 0
  %372 = load i8, i8* %145, align 1
  %373 = icmp slt i8 %372, 0
  br i1 %371, label %381, label %374

374:                                              ; preds = %367
  br i1 %373, label %377, label %375

375:                                              ; preds = %374
  %376 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %376, i8* nonnull align 8 %33, i64 24, i1 false) #12
  br label %388

377:                                              ; preds = %374
  %378 = load i8*, i8** %34, align 8
  %379 = load i64, i64* %35, align 8
  %380 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %2, i8* %378, i64 %379) #12
  br label %388

381:                                              ; preds = %367
  %382 = load i8*, i8** %34, align 8
  %383 = load i64, i64* %35, align 8
  %384 = zext i8 %372 to i64
  %385 = select i1 %373, i8* %382, i8* %33
  %386 = select i1 %373, i64 %383, i64 %384
  %387 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %2, i8* %385, i64 %386) #12
  br label %388

388:                                              ; preds = %286, %273, %291, %353, %248, %381, %377, %375, %365, %364
  %389 = phi i1 [ false, %291 ], [ false, %364 ], [ false, %353 ], [ true, %365 ], [ true, %375 ], [ true, %377 ], [ true, %381 ], [ false, %248 ], [ false, %273 ], [ false, %286 ]
  %390 = load i8, i8* %259, align 1
  %391 = icmp slt i8 %390, 0
  br i1 %391, label %392, label %394

392:                                              ; preds = %388
  %393 = load i8*, i8** %250, align 8
  call void @_ZdlPv(i8* %393) #13
  br label %394

394:                                              ; preds = %388, %392
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %249) #12
  br label %395

395:                                              ; preds = %226, %213, %192, %246, %244, %242, %234, %231, %394
  %396 = phi i1 [ %389, %394 ], [ false, %231 ], [ true, %234 ], [ true, %242 ], [ true, %244 ], [ true, %246 ], [ false, %192 ], [ false, %213 ], [ false, %226 ]
  %397 = load i8, i8* %185, align 1
  %398 = icmp slt i8 %397, 0
  br i1 %398, label %399, label %401

399:                                              ; preds = %395
  %400 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %400) #13
  br label %401

401:                                              ; preds = %395, %399
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %180) #12
  %402 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %403 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %402, i64 0, i32 1, i32 0
  %404 = load i8, i8* %403, align 1
  %405 = icmp slt i8 %404, 0
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  %407 = load i8*, i8** %166, align 8
  call void @_ZdlPv(i8* %407) #13
  br label %408

408:                                              ; preds = %401, %406
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #12
  br label %409

409:                                              ; preds = %138, %119, %115, %113, %101, %143, %408
  %410 = phi i1 [ %396, %408 ], [ false, %143 ], [ true, %101 ], [ true, %113 ], [ true, %115 ], [ true, %119 ], [ false, %138 ]
  %411 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %412 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %411, i64 0, i32 1, i32 0
  %413 = load i8, i8* %412, align 1
  %414 = icmp slt i8 %413, 0
  br i1 %414, label %415, label %417

415:                                              ; preds = %409
  %416 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %416) #13
  br label %417

417:                                              ; preds = %409, %415
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #12
  %418 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %419 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %418, i64 0, i32 1, i32 0
  %420 = load i8, i8* %419, align 1
  %421 = icmp slt i8 %420, 0
  br i1 %421, label %422, label %424

422:                                              ; preds = %417
  %423 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %423) #13
  br label %424

424:                                              ; preds = %417, %422
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  ret i1 %410
}

declare void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string"* sret, i8*, i64, %"struct.url::CanonHostInfo"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4GURL15HostIsIPAddressEv(%class.GURL*) local_unnamed_addr #2

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net11cookie_util25ParseCookieExpirationTimeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"struct.base::Time::Exploded", align 4
  %3 = alloca %"class.base::StringTokenizerT", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::Time", align 8
  %6 = bitcast %"struct.base::Time::Exploded"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 0, i64 32, i1 false)
  %7 = bitcast %"class.base::StringTokenizerT"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 6
  %9 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = tail call i8* @_Znwm(i64 48) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 16 getelementptr inbounds ([34 x i8], [34 x i8]* @_ZZN3net11cookie_util25ParseCookieExpirationTimeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE11kDelimiters, i64 0, i64 0), i64 33, i1 false) #12
  %11 = getelementptr inbounds i8, i8* %10, i64 33
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 3, i32 0
  %16 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 4
  %17 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 4
  %20 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 48, i1 false) #12
  %21 = load i8, i8* %18, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %28 = zext i8 %21 to i64
  %29 = select i1 %22, i8* %24, i8* %27
  %30 = select i1 %22, i64 %26, i64 %28
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  store i8* %29, i8** %12, align 8
  store i8* %29, i8** %13, align 8
  store i8* %29, i8** %14, align 8
  store i8* %31, i8** %15, align 8
  %32 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %16, i8* nonnull %10, i64 33) #12
  %33 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 6
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 7
  store i8 1, i8* %34, align 4
  %35 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 9
  store i32 0, i32* %35, align 8
  call void @_ZdlPv(i8* nonnull %10) #13
  %36 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 5
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %3, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 4
  %48 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 5
  %49 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 6
  %50 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.base::Time::Exploded", %"struct.base::Time::Exploded"* %2, i64 0, i32 3
  %52 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %53

53:                                               ; preds = %285, %1
  %54 = phi i8 [ 0, %1 ], [ %277, %285 ]
  %55 = phi i8 [ 0, %1 ], [ %278, %285 ]
  %56 = phi i8 [ 0, %1 ], [ %279, %285 ]
  %57 = phi i8 [ 0, %1 ], [ %280, %285 ]
  %58 = load i8, i8* %38, align 1
  %59 = icmp slt i8 %58, 0
  %60 = load i64, i64* %39, align 8
  %61 = zext i8 %58 to i64
  %62 = select i1 %59, i64 %60, i64 %61
  %63 = icmp eq i64 %62, 0
  %64 = load i32, i32* %33, align 8
  %65 = icmp eq i32 %64, 0
  %66 = and i1 %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %53
  %68 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %3) #12
  br i1 %68, label %71, label %286

69:                                               ; preds = %53
  %70 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %3) #12
  br i1 %70, label %71, label %286

71:                                               ; preds = %67, %69
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 24, i1 false)
  %72 = load i8*, i8** %13, align 8, !noalias !15
  %73 = ptrtoint i8* %72 to i64
  %74 = load i8*, i8** %14, align 8, !noalias !15
  %75 = ptrtoint i8* %74 to i64
  %76 = sub i64 %75, %73
  %77 = icmp ugt i64 %76, -17
  br i1 %77, label %78, label %80

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %79) #14
  unreachable

80:                                               ; preds = %71
  %81 = icmp ult i64 %76, 23
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = trunc i64 %76 to i8
  store i8 %83, i8* %45, align 1, !alias.scope !15
  br label %89

84:                                               ; preds = %80
  %85 = add nuw i64 %76, 16
  %86 = and i64 %85, -16
  %87 = call i8* @_Znwm(i64 %86) #13
  store i8* %87, i8** %41, align 8, !alias.scope !15
  %88 = or i64 %86, -9223372036854775808
  store i64 %88, i64* %43, align 8, !alias.scope !15
  store i64 %76, i64* %42, align 8, !alias.scope !15
  br label %89

89:                                               ; preds = %84, %82
  %90 = phi i8* [ %40, %82 ], [ %87, %84 ]
  %91 = icmp eq i8* %72, %74
  br i1 %91, label %194, label %92

92:                                               ; preds = %89
  %93 = ptrtoint i8* %74 to i64
  %94 = sub i64 %93, %73
  %95 = icmp ult i64 %94, 32
  br i1 %95, label %184, label %96

96:                                               ; preds = %92
  %97 = ptrtoint i8* %74 to i64
  %98 = sub i64 %97, %73
  %99 = getelementptr i8, i8* %90, i64 %98
  %100 = icmp ult i8* %90, %74
  %101 = icmp ult i8* %72, %99
  %102 = and i1 %100, %101
  br i1 %102, label %184, label %103

103:                                              ; preds = %96
  %104 = and i64 %94, -32
  %105 = getelementptr i8, i8* %90, i64 %104
  %106 = getelementptr i8, i8* %72, i64 %104
  %107 = add i64 %104, -32
  %108 = lshr exact i64 %107, 5
  %109 = add nuw nsw i64 %108, 1
  %110 = and i64 %109, 3
  %111 = icmp ult i64 %107, 96
  br i1 %111, label %163, label %112

112:                                              ; preds = %103
  %113 = sub nsw i64 %109, %110
  br label %114

114:                                              ; preds = %114, %112
  %115 = phi i64 [ 0, %112 ], [ %160, %114 ]
  %116 = phi i64 [ %113, %112 ], [ %161, %114 ]
  %117 = getelementptr i8, i8* %90, i64 %115
  %118 = getelementptr i8, i8* %72, i64 %115
  %119 = bitcast i8* %118 to <16 x i8>*
  %120 = load <16 x i8>, <16 x i8>* %119, align 1, !alias.scope !18
  %121 = getelementptr i8, i8* %118, i64 16
  %122 = bitcast i8* %121 to <16 x i8>*
  %123 = load <16 x i8>, <16 x i8>* %122, align 1, !alias.scope !18
  %124 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %120, <16 x i8>* %124, align 1, !alias.scope !21, !noalias !18
  %125 = getelementptr i8, i8* %117, i64 16
  %126 = bitcast i8* %125 to <16 x i8>*
  store <16 x i8> %123, <16 x i8>* %126, align 1, !alias.scope !21, !noalias !18
  %127 = or i64 %115, 32
  %128 = getelementptr i8, i8* %90, i64 %127
  %129 = getelementptr i8, i8* %72, i64 %127
  %130 = bitcast i8* %129 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !18
  %132 = getelementptr i8, i8* %129, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !18
  %135 = bitcast i8* %128 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !21, !noalias !18
  %136 = getelementptr i8, i8* %128, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !21, !noalias !18
  %138 = or i64 %115, 64
  %139 = getelementptr i8, i8* %90, i64 %138
  %140 = getelementptr i8, i8* %72, i64 %138
  %141 = bitcast i8* %140 to <16 x i8>*
  %142 = load <16 x i8>, <16 x i8>* %141, align 1, !alias.scope !18
  %143 = getelementptr i8, i8* %140, i64 16
  %144 = bitcast i8* %143 to <16 x i8>*
  %145 = load <16 x i8>, <16 x i8>* %144, align 1, !alias.scope !18
  %146 = bitcast i8* %139 to <16 x i8>*
  store <16 x i8> %142, <16 x i8>* %146, align 1, !alias.scope !21, !noalias !18
  %147 = getelementptr i8, i8* %139, i64 16
  %148 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> %145, <16 x i8>* %148, align 1, !alias.scope !21, !noalias !18
  %149 = or i64 %115, 96
  %150 = getelementptr i8, i8* %90, i64 %149
  %151 = getelementptr i8, i8* %72, i64 %149
  %152 = bitcast i8* %151 to <16 x i8>*
  %153 = load <16 x i8>, <16 x i8>* %152, align 1, !alias.scope !18
  %154 = getelementptr i8, i8* %151, i64 16
  %155 = bitcast i8* %154 to <16 x i8>*
  %156 = load <16 x i8>, <16 x i8>* %155, align 1, !alias.scope !18
  %157 = bitcast i8* %150 to <16 x i8>*
  store <16 x i8> %153, <16 x i8>* %157, align 1, !alias.scope !21, !noalias !18
  %158 = getelementptr i8, i8* %150, i64 16
  %159 = bitcast i8* %158 to <16 x i8>*
  store <16 x i8> %156, <16 x i8>* %159, align 1, !alias.scope !21, !noalias !18
  %160 = add i64 %115, 128
  %161 = add i64 %116, -4
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %114, !llvm.loop !23

163:                                              ; preds = %114, %103
  %164 = phi i64 [ 0, %103 ], [ %160, %114 ]
  %165 = icmp eq i64 %110, 0
  br i1 %165, label %182, label %166

166:                                              ; preds = %163, %166
  %167 = phi i64 [ %179, %166 ], [ %164, %163 ]
  %168 = phi i64 [ %180, %166 ], [ %110, %163 ]
  %169 = getelementptr i8, i8* %90, i64 %167
  %170 = getelementptr i8, i8* %72, i64 %167
  %171 = bitcast i8* %170 to <16 x i8>*
  %172 = load <16 x i8>, <16 x i8>* %171, align 1, !alias.scope !18
  %173 = getelementptr i8, i8* %170, i64 16
  %174 = bitcast i8* %173 to <16 x i8>*
  %175 = load <16 x i8>, <16 x i8>* %174, align 1, !alias.scope !18
  %176 = bitcast i8* %169 to <16 x i8>*
  store <16 x i8> %172, <16 x i8>* %176, align 1, !alias.scope !21, !noalias !18
  %177 = getelementptr i8, i8* %169, i64 16
  %178 = bitcast i8* %177 to <16 x i8>*
  store <16 x i8> %175, <16 x i8>* %178, align 1, !alias.scope !21, !noalias !18
  %179 = add i64 %167, 32
  %180 = add i64 %168, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %166, !llvm.loop !25

182:                                              ; preds = %166, %163
  %183 = icmp eq i64 %94, %104
  br i1 %183, label %194, label %184

184:                                              ; preds = %182, %96, %92
  %185 = phi i8* [ %90, %96 ], [ %90, %92 ], [ %105, %182 ]
  %186 = phi i8* [ %72, %96 ], [ %72, %92 ], [ %106, %182 ]
  br label %187

187:                                              ; preds = %184, %187
  %188 = phi i8* [ %192, %187 ], [ %185, %184 ]
  %189 = phi i8* [ %191, %187 ], [ %186, %184 ]
  %190 = load i8, i8* %189, align 1
  store i8 %190, i8* %188, align 1
  %191 = getelementptr inbounds i8, i8* %189, i64 1
  %192 = getelementptr inbounds i8, i8* %188, i64 1
  %193 = icmp eq i8* %191, %74
  br i1 %193, label %194, label %187, !llvm.loop !27

194:                                              ; preds = %187, %182, %89
  %195 = phi i8* [ %90, %89 ], [ %105, %182 ], [ %192, %187 ]
  store i8 0, i8* %195, align 1
  %196 = load i8, i8* %45, align 1
  %197 = icmp slt i8 %196, 0
  %198 = load i8*, i8** %41, align 8
  %199 = select i1 %197, i8* %198, i8* %40
  %200 = load i8, i8* %199, align 1
  %201 = add i8 %200, -48
  %202 = icmp ult i8 %201, 10
  br i1 %202, label %232, label %203

203:                                              ; preds = %194
  %204 = and i8 %54, 1
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %206, label %276

206:                                              ; preds = %203
  %207 = icmp slt i8 %196, 0
  %208 = select i1 %207, i8* %198, i8* %40
  %209 = load i64, i64* %42, align 8
  %210 = zext i8 %196 to i64
  %211 = select i1 %207, i64 %209, i64 %210
  %212 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %208, i64 %211, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3, i32 1) #12
  br i1 %212, label %213, label %217

213:                                              ; preds = %221, %206
  %214 = phi i64 [ 0, %206 ], [ %219, %221 ]
  %215 = trunc i64 %214 to i32
  %216 = add nuw nsw i32 %215, 1
  store i32 %216, i32* %46, align 4
  br label %276

217:                                              ; preds = %206, %221
  %218 = phi i64 [ %219, %221 ], [ 0, %206 ]
  %219 = add nuw nsw i64 %218, 1
  %220 = icmp eq i64 %219, 12
  br i1 %220, label %276, label %221

221:                                              ; preds = %217
  %222 = load i8, i8* %45, align 1
  %223 = load i8*, i8** %41, align 8
  %224 = icmp slt i8 %222, 0
  %225 = select i1 %224, i8* %223, i8* %40
  %226 = load i64, i64* %42, align 8
  %227 = zext i8 %222 to i64
  %228 = select i1 %224, i64 %226, i64 %227
  %229 = getelementptr inbounds [12 x i8*], [12 x i8*]* @_ZZN3net11cookie_util25ParseCookieExpirationTimeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE7kMonths, i64 0, i64 %219
  %230 = load i8*, i8** %229, align 8
  %231 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %225, i64 %228, i8* %230, i64 3, i32 1) #12
  br i1 %231, label %213, label %217

232:                                              ; preds = %194
  %233 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* nonnull %4, i8 signext 58, i64 0) #12
  %234 = icmp eq i64 %233, -1
  br i1 %234, label %246, label %235

235:                                              ; preds = %232
  %236 = and i8 %55, 1
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %238, label %276

238:                                              ; preds = %235
  %239 = load i8, i8* %45, align 1
  %240 = icmp slt i8 %239, 0
  %241 = load i8*, i8** %41, align 8
  %242 = select i1 %240, i8* %241, i8* %40
  %243 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %242, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0), i32* %47, i32* %48, i32* %49) #12
  %244 = icmp eq i32 %243, 3
  %245 = select i1 %244, i8 1, i8 %55
  br label %276

246:                                              ; preds = %232
  %247 = and i8 %57, 1
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %249, label %261

249:                                              ; preds = %246
  %250 = load i8, i8* %45, align 1
  %251 = icmp slt i8 %250, 0
  %252 = load i64, i64* %42, align 8
  %253 = zext i8 %250 to i64
  %254 = select i1 %251, i64 %252, i64 %253
  %255 = icmp ult i64 %254, 3
  br i1 %255, label %256, label %261

256:                                              ; preds = %249
  %257 = load i8*, i8** %41, align 8
  %258 = select i1 %251, i8* %257, i8* %40
  %259 = call i64 @strtol(i8* nocapture %258, i8** null, i32 10) #12
  %260 = trunc i64 %259 to i32
  store i32 %260, i32* %51, align 4
  br label %276

261:                                              ; preds = %246, %249
  %262 = and i8 %56, 1
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %264, label %276

264:                                              ; preds = %261
  %265 = load i8, i8* %45, align 1
  %266 = icmp slt i8 %265, 0
  %267 = load i64, i64* %42, align 8
  %268 = zext i8 %265 to i64
  %269 = select i1 %266, i64 %267, i64 %268
  %270 = icmp ult i64 %269, 6
  br i1 %270, label %271, label %276

271:                                              ; preds = %264
  %272 = load i8*, i8** %41, align 8
  %273 = select i1 %266, i8* %272, i8* %40
  %274 = call i64 @strtol(i8* nocapture %273, i8** null, i32 10) #12
  %275 = trunc i64 %274 to i32
  store i32 %275, i32* %50, align 4
  br label %276

276:                                              ; preds = %217, %238, %213, %235, %261, %203, %271, %264, %256
  %277 = phi i8 [ %54, %235 ], [ %54, %261 ], [ %54, %271 ], [ %54, %264 ], [ %54, %256 ], [ %54, %203 ], [ 1, %213 ], [ %54, %238 ], [ %54, %217 ]
  %278 = phi i8 [ %55, %235 ], [ %55, %261 ], [ %55, %271 ], [ %55, %264 ], [ %55, %256 ], [ %55, %203 ], [ %55, %213 ], [ %245, %238 ], [ %55, %217 ]
  %279 = phi i8 [ %56, %235 ], [ %56, %261 ], [ 1, %271 ], [ %56, %264 ], [ %56, %256 ], [ %56, %203 ], [ %56, %213 ], [ %56, %238 ], [ %56, %217 ]
  %280 = phi i8 [ %57, %235 ], [ %57, %261 ], [ %57, %271 ], [ %57, %264 ], [ 1, %256 ], [ %57, %203 ], [ %57, %213 ], [ %57, %238 ], [ %57, %217 ]
  %281 = load i8, i8* %45, align 1
  %282 = icmp slt i8 %281, 0
  br i1 %282, label %283, label %285

283:                                              ; preds = %276
  %284 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %284) #13
  br label %285

285:                                              ; preds = %276, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #12
  br label %53

286:                                              ; preds = %67, %69
  %287 = and i8 %54, 1
  %288 = and i8 %287, %55
  %289 = and i8 %288, %56
  %290 = and i8 %289, %57
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %313, label %292

292:                                              ; preds = %286
  %293 = load i32, i32* %50, align 4
  %294 = add i32 %293, -70
  %295 = icmp ult i32 %294, 30
  br i1 %295, label %298, label %296

296:                                              ; preds = %292
  %297 = icmp ult i32 %293, 70
  br i1 %297, label %298, label %301

298:                                              ; preds = %296, %292
  %299 = phi i32 [ 1900, %292 ], [ 2000, %296 ]
  %300 = add nuw nsw i32 %293, %299
  store i32 %300, i32* %50, align 4
  br label %301

301:                                              ; preds = %298, %296
  %302 = bitcast %"class.base::Time"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #12
  %303 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 0, i32 0, i32 0
  store i64 0, i64* %303, align 8
  %304 = call zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext false, %"struct.base::Time::Exploded"* nonnull dereferenceable(32) %2, %"class.base::Time"* nonnull %5) #12
  br i1 %304, label %305, label %309

305:                                              ; preds = %301
  %306 = load i64, i64* %303, align 8
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %305
  store i64 1, i64* %303, align 8
  br label %311

309:                                              ; preds = %301
  %310 = call zeroext i1 @_ZNK4base4Time8Exploded14HasValidValuesEv(%"struct.base::Time::Exploded"* nonnull %2) #12
  br label %311

311:                                              ; preds = %305, %308, %309
  %312 = phi i64 [ 0, %309 ], [ 1, %308 ], [ %306, %305 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #12
  br label %313

313:                                              ; preds = %286, %311
  %314 = phi i64 [ %312, %311 ], [ 0, %286 ]
  %315 = load i8, i8* %38, align 1
  %316 = icmp slt i8 %315, 0
  br i1 %316, label %317, label %320

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i8*, i8** %318, align 8
  call void @_ZdlPv(i8* %319) #13
  br label %320

320:                                              ; preds = %317, %313
  %321 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %321, i64 0, i32 1, i32 0
  %323 = load i8, i8* %322, align 1
  %324 = icmp slt i8 %323, 0
  br i1 %324, label %325, label %328

325:                                              ; preds = %320
  %326 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load i8*, i8** %326, align 8
  call void @_ZdlPv(i8* %327) #13
  br label %328

328:                                              ; preds = %320, %325
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret i64 %314
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util24CookieDomainAndPathToURLERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_(%class.GURL* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca [4 x %"class.base::BasicStringPiece"], align 8
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  %14 = load i8, i8* %12, align 1, !noalias !28
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8, !noalias !28
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !noalias !28
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %25 = select i1 %15, i8* %23, i8* %24
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 46
  br i1 %27, label %34, label %28

28:                                               ; preds = %21, %4
  br i1 %15, label %31, label %29

29:                                               ; preds = %28
  %30 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %30, i64 24, i1 false) #12
  br label %36

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8, !noalias !28
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %33, i64 %17) #12
  br label %36

34:                                               ; preds = %21
  %35 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 1, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %35) #12
  br label %36

36:                                               ; preds = %29, %31, %34
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i64, i64* %10, align 8
  %42 = zext i8 %39 to i64
  %43 = select i1 %40, i64 %41, i64 %42
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %36
  %46 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %48 to i64
  %53 = select i1 %49, i64 %51, i64 %52
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %45, %36
  call void @_ZN4GURLC1Ev(%class.GURL* %0) #12
  br label %103

56:                                               ; preds = %45
  %57 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #12
  %58 = bitcast [4 x %"class.base::BasicStringPiece"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %58) #12
  %59 = getelementptr inbounds [4 x %"class.base::BasicStringPiece"], [4 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 0
  %60 = getelementptr inbounds [4 x %"class.base::BasicStringPiece"], [4 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %64 = select i1 %49, i8* %62, i8* %63
  store i8* %64, i8** %60, align 8
  %65 = getelementptr inbounds [4 x %"class.base::BasicStringPiece"], [4 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 0, i32 1
  store i64 %53, i64* %65, align 8
  %66 = getelementptr inbounds [4 x %"class.base::BasicStringPiece"], [4 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds [4 x %"class.base::BasicStringPiece"], [4 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 1, i32 1
  %68 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0)) #12
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds [4 x %"class.base::BasicStringPiece"], [4 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 2, i32 0
  %70 = load i8*, i8** %9, align 8
  %71 = select i1 %40, i8* %70, i8* %8
  store i8* %71, i8** %69, align 8
  %72 = getelementptr inbounds [4 x %"class.base::BasicStringPiece"], [4 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 2, i32 1
  store i64 %43, i64* %72, align 8
  %73 = getelementptr inbounds [4 x %"class.base::BasicStringPiece"], [4 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 3, i32 0
  %74 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %81 = select i1 %77, i8* %79, i8* %80
  store i8* %81, i8** %73, align 8
  %82 = getelementptr inbounds [4 x %"class.base::BasicStringPiece"], [4 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 3, i32 1
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %76 to i64
  %86 = select i1 %77, i64 %84, i64 %85
  store i64 %86, i64* %82, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %6, i64 4, %"class.base::BasicStringPiece"* nonnull %59) #12
  %87 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = select i1 %90, i8* %92, i8* %57
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = zext i8 %89 to i64
  %97 = select i1 %90, i64 %95, i64 %96
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* %93, i64 %97) #12
  %98 = load i8, i8* %88, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %56
  %101 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %101) #13
  br label %102

102:                                              ; preds = %56, %100
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %58) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #12
  br label %103

103:                                              ; preds = %102, %55
  %104 = load i8, i8* %38, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %103
  %107 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %103, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #2

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util24CookieDomainAndPathToURLERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_b(%class.GURL* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = select i1 %3, [0 x i8]* @_ZN3url12kHttpsSchemeE, [0 x i8]* @_ZN3url11kHttpSchemeE
  %8 = getelementptr inbounds [0 x i8], [0 x i8]* %7, i64 0, i64 0
  %9 = tail call i64 @strlen(i8* nonnull %8) #12
  %10 = icmp ugt i64 %9, -17
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %12) #14
  unreachable

13:                                               ; preds = %4
  %14 = icmp ult i64 %9, 23
  br i1 %14, label %24, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %9, 16
  %17 = and i64 %16, -16
  %18 = tail call i8* @_Znwm(i64 %17) #13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = or i64 %17, -9223372036854775808
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %9, i64* %22, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %29

24:                                               ; preds = %13
  %25 = trunc i64 %9 to i8
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1
  %28 = icmp eq i64 %9, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24, %15
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %24 ], [ %23, %15 ]
  %31 = phi i8* [ %6, %24 ], [ %18, %15 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* nonnull align 1 %8, i64 %9, i1 false) #12
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %24 ], [ %30, %29 ]
  %34 = phi i8* [ %6, %24 ], [ %31, %29 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 %9
  store i8 0, i8* %35, align 1
  call void @_ZN3net11cookie_util24CookieDomainAndPathToURLERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_(%class.GURL* sret %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5)
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %32, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util24CookieDomainAndPathToURLERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_NS_18CookieSourceSchemeE(%class.GURL* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %3, 2
  tail call void @_ZN3net11cookie_util24CookieDomainAndPathToURLERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_b(%class.GURL* sret %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, i1 zeroext %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util17CookieOriginToURLERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%class.GURL* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 1, i8* %7, align 1
  store i8 47, i8* %5, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 1
  store i8 0, i8* %8, align 1
  call void @_ZN3net11cookie_util24CookieDomainAndPathToURLERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_b(%class.GURL* sret %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i1 zeroext %2)
  %9 = load i8, i8* %7, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %3, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util21SimulatedCookieSourceERKNS_15CanonicalCookieERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%class.GURL* noalias sret, %"class.net::CanonicalCookie"* dereferenceable(144), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 2
  %5 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %1, i64 0, i32 3
  tail call void @_ZN3net11cookie_util24CookieDomainAndPathToURLERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_(%class.GURL* sret %0, %"class.std::__1::basic_string"* dereferenceable(24) %4, %"class.std::__1::basic_string"* dereferenceable(24) %5, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net11cookie_util23ProvisionalAccessSchemeERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = tail call zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL* %0) #12
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @_ZN3net11IsLocalhostERK4GURL(%class.GURL* dereferenceable(120) %0) #12
  %5 = select i1 %4, i32 2, i32 0
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 1, %1 ]
  ret i32 %7
}

declare zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net11IsLocalhostERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11cookie_util13IsDomainMatchERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %52

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %86, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %37, label %52

36:                                               ; preds = %20
  br i1 %29, label %86, label %49

37:                                               ; preds = %31, %44
  %38 = phi i64 [ %41, %44 ], [ %9, %31 ]
  %39 = phi i8* [ %42, %44 ], [ %23, %31 ]
  %40 = phi i8* [ %45, %44 ], [ %28, %31 ]
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %86, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %37, label %52

49:                                               ; preds = %36
  %50 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #12
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %86, label %52

52:                                               ; preds = %44, %31, %2, %49
  %53 = icmp eq i64 %18, 0
  br i1 %53, label %86, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %58 = select i1 %14, i8* %56, i8* %57
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 46
  br i1 %60, label %61, label %86

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %65 = select i1 %6, i8* %63, i8* %64
  %66 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 1, i64 -1, i8* %65, i64 %10) #12
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %86, label %68

68:                                               ; preds = %61
  %69 = load i8, i8* %4, align 1
  %70 = icmp slt i8 %69, 0
  %71 = load i64, i64* %7, align 8
  %72 = zext i8 %69 to i64
  %73 = select i1 %70, i64 %71, i64 %72
  %74 = load i8, i8* %12, align 1
  %75 = icmp slt i8 %74, 0
  %76 = load i64, i64* %15, align 8
  %77 = zext i8 %74 to i64
  %78 = select i1 %75, i64 %76, i64 %77
  %79 = icmp ugt i64 %73, %78
  br i1 %79, label %80, label %86

80:                                               ; preds = %68
  %81 = sub i64 %73, %78
  %82 = load i8*, i8** %55, align 8
  %83 = select i1 %75, i8* %82, i8* %57
  %84 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 %81, i64 %78, i8* %83, i64 %78) #12
  %85 = icmp eq i32 %84, 0
  br label %86

86:                                               ; preds = %37, %30, %36, %68, %80, %61, %52, %54, %49
  %87 = phi i1 [ true, %49 ], [ false, %54 ], [ false, %52 ], [ true, %61 ], [ false, %68 ], [ %85, %80 ], [ true, %36 ], [ true, %30 ], [ true, %37 ]
  ret i1 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util22ParseRequestCookieLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS1_4pairIS7_S7_EENS5_ISC_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i64 %13, i64 %14
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %179, label %17

17:                                               ; preds = %2
  %18 = select i1 %8, i8* %10, i8* %11
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"struct.std::__1::pair"** %31 to i64*
  br label %34

34:                                               ; preds = %17, %166
  %35 = phi i64 [ %13, %17 ], [ %170, %166 ]
  %36 = phi i8* [ %10, %17 ], [ %169, %166 ]
  %37 = phi i1 [ %8, %17 ], [ %168, %166 ]
  %38 = phi i8 [ %7, %17 ], [ %167, %166 ]
  %39 = phi i8* [ %18, %17 ], [ %177, %166 ]
  %40 = zext i8 %38 to i64
  %41 = select i1 %37, i8* %36, i8* %11
  %42 = select i1 %37, i64 %35, i64 %40
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  %44 = icmp eq i8* %39, %43
  br i1 %44, label %52, label %45

45:                                               ; preds = %34, %49
  %46 = phi i8* [ %50, %49 ], [ %39, %34 ]
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 32
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = icmp eq i8* %50, %43
  br i1 %51, label %179, label %45

52:                                               ; preds = %45, %34
  %53 = phi i8* [ %39, %34 ], [ %46, %45 ]
  %54 = icmp eq i8* %53, %43
  br i1 %54, label %179, label %55

55:                                               ; preds = %52, %59
  %56 = phi i8* [ %60, %59 ], [ %53, %52 ]
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 61
  br i1 %58, label %66, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds i8, i8* %56, i64 1
  %61 = icmp eq i8* %60, %43
  br i1 %61, label %62, label %55

62:                                               ; preds = %59
  %63 = ptrtoint i8* %53 to i64
  %64 = ptrtoint i8* %43 to i64
  %65 = sub i64 %64, %63
  br label %105

66:                                               ; preds = %55
  %67 = ptrtoint i8* %53 to i64
  %68 = ptrtoint i8* %56 to i64
  %69 = sub i64 %68, %67
  %70 = icmp eq i8* %56, %43
  br i1 %70, label %105, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds i8, i8* %56, i64 1
  %73 = icmp eq i8* %72, %43
  br i1 %73, label %105, label %74

74:                                               ; preds = %71
  %75 = load i8, i8* %72, align 1
  switch i8 %75, label %93 [
    i8 34, label %76
    i8 59, label %100
  ]

76:                                               ; preds = %74
  %77 = getelementptr inbounds i8, i8* %56, i64 2
  %78 = icmp eq i8* %77, %43
  br i1 %78, label %179, label %79

79:                                               ; preds = %76, %83
  %80 = phi i8* [ %84, %83 ], [ %77, %76 ]
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 34
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds i8, i8* %80, i64 1
  %85 = icmp eq i8* %84, %43
  br i1 %85, label %179, label %79

86:                                               ; preds = %79
  %87 = icmp eq i8* %80, %43
  br i1 %87, label %179, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds i8, i8* %80, i64 1
  %90 = ptrtoint i8* %72 to i64
  %91 = ptrtoint i8* %89 to i64
  %92 = sub i64 %91, %90
  br label %105

93:                                               ; preds = %74, %97
  %94 = phi i8* [ %95, %97 ], [ %72, %74 ]
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  %96 = icmp eq i8* %95, %43
  br i1 %96, label %100, label %97

97:                                               ; preds = %93
  %98 = load i8, i8* %95, align 1
  %99 = icmp eq i8 %98, 59
  br i1 %99, label %100, label %93

100:                                              ; preds = %93, %97, %74
  %101 = phi i8* [ %72, %74 ], [ %43, %93 ], [ %95, %97 ]
  %102 = ptrtoint i8* %72 to i64
  %103 = ptrtoint i8* %101 to i64
  %104 = sub i64 %103, %102
  br label %105

105:                                              ; preds = %62, %71, %66, %88, %100
  %106 = phi i64 [ %69, %71 ], [ %69, %66 ], [ %69, %100 ], [ %69, %88 ], [ %65, %62 ]
  %107 = phi i64 [ 0, %71 ], [ 0, %66 ], [ %104, %100 ], [ %92, %88 ], [ 0, %62 ]
  %108 = phi i8* [ null, %71 ], [ null, %66 ], [ %72, %100 ], [ %72, %88 ], [ null, %62 ]
  %109 = phi i8* [ %56, %71 ], [ %43, %66 ], [ %101, %100 ], [ %89, %88 ], [ %43, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  %110 = icmp ugt i64 %106, -17
  br i1 %110, label %111, label %113

111:                                              ; preds = %105
  %112 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %112) #14
  unreachable

113:                                              ; preds = %105
  %114 = icmp ult i64 %106, 23
  br i1 %114, label %120, label %115

115:                                              ; preds = %113
  %116 = add nuw i64 %106, 16
  %117 = and i64 %116, -16
  %118 = call i8* @_Znwm(i64 %117) #13
  store i8* %118, i8** %20, align 8, !alias.scope !31
  %119 = or i64 %117, -9223372036854775808
  store i64 %119, i64* %21, align 8, !alias.scope !31
  store i64 %106, i64* %22, align 8, !alias.scope !31
  br label %123

120:                                              ; preds = %113
  %121 = trunc i64 %106 to i8
  store i8 %121, i8* %24, align 1, !alias.scope !31
  %122 = icmp eq i64 %106, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %120, %115
  %124 = phi i8* [ %118, %115 ], [ %19, %120 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %124, i8* align 1 %53, i64 %106, i1 false) #12
  br label %125

125:                                              ; preds = %120, %123
  %126 = phi i64 [ 0, %120 ], [ %106, %123 ]
  %127 = phi i8* [ %19, %120 ], [ %124, %123 ]
  %128 = getelementptr inbounds i8, i8* %127, i64 %126
  store i8 0, i8* %128, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %129 = icmp ugt i64 %107, -17
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  %131 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %131) #14
  unreachable

132:                                              ; preds = %125
  %133 = icmp ult i64 %107, 23
  br i1 %133, label %139, label %134

134:                                              ; preds = %132
  %135 = add nuw i64 %107, 16
  %136 = and i64 %135, -16
  %137 = call i8* @_Znwm(i64 %136) #13
  store i8* %137, i8** %26, align 8, !alias.scope !34
  %138 = or i64 %136, -9223372036854775808
  store i64 %138, i64* %27, align 8, !alias.scope !34
  store i64 %107, i64* %28, align 8, !alias.scope !34
  br label %142

139:                                              ; preds = %132
  %140 = trunc i64 %107 to i8
  store i8 %140, i8* %30, align 1, !alias.scope !34
  %141 = icmp eq i64 %107, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %139, %134
  %143 = phi i8* [ %137, %134 ], [ %25, %139 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %143, i8* align 1 %108, i64 %107, i1 false) #12
  br label %144

144:                                              ; preds = %139, %142
  %145 = phi i8* [ %25, %139 ], [ %143, %142 ]
  %146 = getelementptr inbounds i8, i8* %145, i64 %107
  store i8 0, i8* %146, align 1
  %147 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %31, align 8
  %148 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %32, align 8
  %149 = icmp ult %"struct.std::__1::pair"* %147, %148
  br i1 %149, label %150, label %156

150:                                              ; preds = %144
  %151 = bitcast %"struct.std::__1::pair"* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* nonnull align 8 %19, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #12
  %152 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %147, i64 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* nonnull align 8 %25, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #12
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %147, i64 1
  %155 = ptrtoint %"struct.std::__1::pair"* %154 to i64
  store i64 %155, i64* %33, align 8
  br label %161

156:                                              ; preds = %144
  call void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE24__emplace_back_slow_pathIJS7_S7_EEEvDpOT_(%"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %157 = load i8, i8* %30, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %156
  %160 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %160) #13
  br label %161

161:                                              ; preds = %150, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  %162 = load i8, i8* %24, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %161
  %165 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %165) #13
  br label %166

166:                                              ; preds = %161, %164
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  %167 = load i8, i8* %6, align 1
  %168 = icmp slt i8 %167, 0
  %169 = load i8*, i8** %9, align 8
  %170 = load i64, i64* %12, align 8
  %171 = zext i8 %167 to i64
  %172 = select i1 %168, i8* %169, i8* %11
  %173 = select i1 %168, i64 %170, i64 %171
  %174 = getelementptr inbounds i8, i8* %172, i64 %173
  %175 = icmp eq i8* %109, %174
  %176 = getelementptr inbounds i8, i8* %109, i64 1
  %177 = select i1 %175, i8* %109, i8* %176
  %178 = icmp eq i8* %177, %174
  br i1 %178, label %179, label %34

179:                                              ; preds = %76, %52, %86, %166, %49, %83, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util26SerializeRequestCookieLineERKNSt3__16vectorINS1_4pairINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_EENS7_ISA_EEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = icmp eq %"struct.std::__1::pair"* %6, %8
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  br label %14

13:                                               ; preds = %55, %2
  ret void

14:                                               ; preds = %63, %10
  %15 = phi i64 [ 0, %10 ], [ %65, %63 ]
  %16 = phi i8 [ 0, %10 ], [ %64, %63 ]
  %17 = phi %"struct.std::__1::pair"* [ %6, %10 ], [ %60, %63 ]
  %18 = icmp slt i8 %16, 0
  %19 = zext i8 %16 to i64
  %20 = select i1 %18, i64 %15, i64 %19
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %14
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0)) #12
  br label %24

24:                                               ; preds = %22, %14
  %25 = bitcast %"struct.std::__1::pair"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  br label %37

34:                                               ; preds = %24
  %35 = bitcast %"struct.std::__1::pair"* %17 to i8*
  %36 = zext i8 %27 to i64
  br label %37

37:                                               ; preds = %29, %34
  %38 = phi i8* [ %31, %29 ], [ %35, %34 ]
  %39 = phi i64 [ %33, %29 ], [ %36, %34 ]
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeINS_11__wrap_iterIPKcEEEERS5_T_SC_(%"class.std::__1::basic_string"* %0, i8* %38, i8* %40) #12
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 61) #12
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  br label %55

52:                                               ; preds = %37
  %53 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %54 = zext i8 %45 to i64
  br label %55

55:                                               ; preds = %47, %52
  %56 = phi i8* [ %49, %47 ], [ %53, %52 ]
  %57 = phi i64 [ %51, %47 ], [ %54, %52 ]
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeINS_11__wrap_iterIPKcEEEERS5_T_SC_(%"class.std::__1::basic_string"* %0, i8* %56, i8* %58) #12
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %17, i64 1
  %61 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %62 = icmp eq %"struct.std::__1::pair"* %60, %61
  br i1 %62, label %13, label %63

63:                                               ; preds = %55
  %64 = load i8, i8* %12, align 1
  %65 = load i64, i64* %3, align 8
  br label %14
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN3net11cookie_util32ComputeSameSiteContextForRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorI4GURLNS5_ISB_EEEERKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEbb(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.16"* nocapture readonly dereferenceable(24), %"class.net::SiteForCookies"* dereferenceable(88), %"class.absl::optional.23"* dereferenceable(88), i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  br i1 %5, label %7, label %11

7:                                                ; preds = %6
  %8 = tail call { i64, i32 } @_ZN3net13CookieOptions21SameSiteCookieContext13MakeInclusiveEv() #12
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = extractvalue { i64, i32 } %8, 1
  br label %48

11:                                               ; preds = %6
  %12 = tail call fastcc i64 @_ZN3net11cookie_util12_GLOBAL__N_122ComputeSameSiteContextERKNSt3__16vectorI4GURLNS2_9allocatorIS4_EEEERKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEbbb(%"class.std::__1::vector.16"* dereferenceable(24) %1, %"class.net::SiteForCookies"* dereferenceable(88) %2, %"class.absl::optional.23"* dereferenceable(88) %3, i1 zeroext true, i1 zeroext %4, i1 zeroext false)
  %13 = lshr i64 %12, 32
  %14 = trunc i64 %13 to i32
  %15 = and i32 %14, 1
  %16 = tail call fastcc i64 @_ZN3net11cookie_util12_GLOBAL__N_122ComputeSameSiteContextERKNSt3__16vectorI4GURLNS2_9allocatorIS4_EEEERKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEbbb(%"class.std::__1::vector.16"* dereferenceable(24) %1, %"class.net::SiteForCookies"* dereferenceable(88) %2, %"class.absl::optional.23"* dereferenceable(88) %3, i1 zeroext true, i1 zeroext %4, i1 zeroext true)
  %17 = lshr i64 %16, 24
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 256
  %20 = or i32 %15, %19
  %21 = or i32 %20, -1431699456
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %29 = select i1 %25, i8* %27, i8* %28
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %24 to i64
  %33 = select i1 %25, i64 %31, i64 %32
  %34 = tail call zeroext i1 @_ZN3net8HttpUtil12IsMethodSafeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %29, i64 %33) #12
  br i1 %34, label %42, label %35

35:                                               ; preds = %11
  %36 = trunc i64 %12 to i32
  %37 = trunc i64 %16 to i32
  %38 = icmp eq i32 %36, 2
  %39 = select i1 %38, i64 1, i64 %12
  %40 = icmp eq i32 %37, 2
  %41 = select i1 %40, i64 1, i64 %16
  br label %42

42:                                               ; preds = %35, %11
  %43 = phi i64 [ %16, %11 ], [ %41, %35 ]
  %44 = phi i64 [ %12, %11 ], [ %39, %35 ]
  %45 = shl i64 %43, 32
  %46 = and i64 %44, 4294967295
  %47 = or i64 %46, %45
  br label %48

48:                                               ; preds = %42, %7
  %49 = phi i64 [ %9, %7 ], [ %47, %42 ]
  %50 = phi i32 [ %10, %7 ], [ %21, %42 ]
  %51 = insertvalue { i64, i32 } undef, i64 %49, 0
  %52 = insertvalue { i64, i32 } %51, i32 %50, 1
  ret { i64, i32 } %52
}

declare { i64, i32 } @_ZN3net13CookieOptions21SameSiteCookieContext13MakeInclusiveEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN3net11cookie_util12_GLOBAL__N_122ComputeSameSiteContextERKNSt3__16vectorI4GURLNS2_9allocatorIS4_EEEERKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEbbb(%"class.std::__1::vector.16"* nocapture readonly dereferenceable(24), %"class.net::SiteForCookies"* dereferenceable(88), %"class.absl::optional.23"* dereferenceable(88), i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 {
  %7 = alloca %"class.net::SiteForCookies", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %0, i64 0, i32 0, i32 1
  %9 = load %class.GURL*, %class.GURL** %8, align 8
  %10 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 -1
  %11 = tail call zeroext i1 @_ZNK3net14SiteForCookies29IsFirstPartyWithSchemefulModeERK4GURLb(%"class.net::SiteForCookies"* %1, %class.GURL* dereferenceable(120) %10, i1 zeroext %5) #12
  br i1 %11, label %12, label %53

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.absl::optional.23", %"class.absl::optional.23"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !37
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.net::SiteForCookies"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.absl::optional.23", %"class.absl::optional.23"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net14SiteForCookies10FromOriginERKN3url6OriginE(%"class.net::SiteForCookies"* nonnull sret %7, %"class.url::Origin"* dereferenceable(80) %18) #12
  %19 = call zeroext i1 @_ZNK3net14SiteForCookies29IsFirstPartyWithSchemefulModeERK4GURLb(%"class.net::SiteForCookies"* nonnull %7, %class.GURL* dereferenceable(120) %10, i1 zeroext %5) #12
  call void @_ZN3net14SiteForCookiesD1Ev(%"class.net::SiteForCookies"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %17) #12
  %20 = xor i1 %19, true
  br label %21

21:                                               ; preds = %12, %16
  %22 = phi i1 [ %20, %16 ], [ false, %12 ]
  %23 = bitcast %class.GURL** %8 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.16"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = icmp eq i64 %27, 120
  %29 = inttoptr i64 %26 to %class.GURL*
  %30 = inttoptr i64 %24 to %class.GURL*
  %31 = icmp eq %class.GURL* %29, %30
  %32 = or i1 %28, %31
  br i1 %32, label %39, label %35

33:                                               ; preds = %35
  %34 = icmp eq %class.GURL* %38, %30
  br i1 %34, label %39, label %35

35:                                               ; preds = %21, %33
  %36 = phi %class.GURL* [ %38, %33 ], [ %29, %21 ]
  %37 = call zeroext i1 @_ZNK3net14SiteForCookies29IsFirstPartyWithSchemefulModeERK4GURLb(%"class.net::SiteForCookies"* %1, %class.GURL* dereferenceable(120) %36, i1 zeroext %5) #12
  %38 = getelementptr inbounds %class.GURL, %class.GURL* %36, i64 1
  br i1 %37, label %33, label %40

39:                                               ; preds = %33, %21
  br i1 %22, label %40, label %53

40:                                               ; preds = %35, %39
  br i1 %3, label %41, label %43

41:                                               ; preds = %40
  %42 = xor i1 %4, true
  call void @_ZN4base19UmaHistogramBooleanEPKcb(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.25, i64 0, i64 0), i1 zeroext %42) #12
  br label %43

43:                                               ; preds = %41, %40
  %44 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features29kSameSiteCookiesBugfix1166211E) #12
  %45 = xor i1 %44, true
  %46 = xor i1 %3, true
  %47 = or i1 %46, %4
  %48 = or i1 %47, %45
  %49 = xor i1 %48, true
  %50 = zext i1 %49 to i64
  %51 = shl nuw nsw i64 %50, 32
  %52 = select i1 %48, i64 2, i64 0
  br label %53

53:                                               ; preds = %43, %39, %6
  %54 = phi i64 [ 0, %6 ], [ 3, %39 ], [ %52, %43 ]
  %55 = phi i64 [ 0, %6 ], [ 0, %39 ], [ %51, %43 ]
  %56 = or i64 %55, %54
  ret i64 %56
}

declare zeroext i1 @_ZN3net8HttpUtil12IsMethodSafeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN3net11cookie_util34ComputeSameSiteContextForScriptGetERK4GURLRKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEb(%class.GURL* dereferenceable(120), %"class.net::SiteForCookies"* dereferenceable(88), %"class.absl::optional.23"* dereferenceable(88), i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::vector.16", align 8
  %6 = alloca [1 x %class.GURL], align 8
  %7 = alloca %"class.std::__1::vector.16", align 8
  %8 = alloca [1 x %class.GURL], align 8
  br i1 %3, label %9, label %13

9:                                                ; preds = %4
  %10 = tail call { i64, i32 } @_ZN3net13CookieOptions21SameSiteCookieContext13MakeInclusiveEv() #12
  %11 = extractvalue { i64, i32 } %10, 0
  %12 = extractvalue { i64, i32 } %10, 1
  br label %57

13:                                               ; preds = %4
  %14 = bitcast %"class.std::__1::vector.16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = bitcast [1 x %class.GURL]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %15) #12
  %16 = getelementptr inbounds [1 x %class.GURL], [1 x %class.GURL]* %6, i64 0, i64 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %16, %class.GURL* dereferenceable(120) %0) #12
  %17 = call i8* @_Znwm(i64 120) #13
  %18 = bitcast i8* %17 to %class.GURL*
  %19 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %5, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::vector.16"* %5 to i8**
  store i8* %17, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %17, i64 120
  %22 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %class.GURL** %22 to i8**
  store i8* %21, i8** %23, align 8
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %18, %class.GURL* nonnull dereferenceable(120) %16) #12
  %24 = getelementptr inbounds i8, i8* %17, i64 120
  %25 = bitcast %class.GURL** %19 to i64*
  %26 = ptrtoint i8* %24 to i64
  store i64 %26, i64* %25, align 8
  %27 = call fastcc i64 @_ZN3net11cookie_util12_GLOBAL__N_122ComputeSameSiteContextERKNSt3__16vectorI4GURLNS2_9allocatorIS4_EEEERKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEbbb(%"class.std::__1::vector.16"* nonnull dereferenceable(24) %5, %"class.net::SiteForCookies"* dereferenceable(88) %1, %"class.absl::optional.23"* dereferenceable(88) %2, i1 zeroext false, i1 zeroext false, i1 zeroext false)
  %28 = bitcast i8* %17 to %class.GURL*
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %28) #12
  call void @_ZdlPv(i8* nonnull %17) #13
  %29 = getelementptr inbounds [1 x %class.GURL], [1 x %class.GURL]* %6, i64 0, i64 0
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  %30 = bitcast %"class.std::__1::vector.16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = bitcast [1 x %class.GURL]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %31) #12
  %32 = getelementptr inbounds [1 x %class.GURL], [1 x %class.GURL]* %8, i64 0, i64 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %32, %class.GURL* dereferenceable(120) %0) #12
  %33 = call i8* @_Znwm(i64 120) #13
  %34 = bitcast i8* %33 to %class.GURL*
  %35 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %7, i64 0, i32 0, i32 1
  %36 = bitcast %"class.std::__1::vector.16"* %7 to i8**
  store i8* %33, i8** %36, align 8
  %37 = getelementptr inbounds i8, i8* %33, i64 120
  %38 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %class.GURL** %38 to i8**
  store i8* %37, i8** %39, align 8
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %34, %class.GURL* nonnull dereferenceable(120) %32) #12
  %40 = getelementptr inbounds i8, i8* %33, i64 120
  %41 = bitcast %class.GURL** %35 to i64*
  %42 = ptrtoint i8* %40 to i64
  store i64 %42, i64* %41, align 8
  %43 = call fastcc i64 @_ZN3net11cookie_util12_GLOBAL__N_122ComputeSameSiteContextERKNSt3__16vectorI4GURLNS2_9allocatorIS4_EEEERKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEbbb(%"class.std::__1::vector.16"* nonnull dereferenceable(24) %7, %"class.net::SiteForCookies"* dereferenceable(88) %1, %"class.absl::optional.23"* dereferenceable(88) %2, i1 zeroext false, i1 zeroext false, i1 zeroext true)
  %44 = lshr i64 %27, 32
  %45 = trunc i64 %44 to i32
  %46 = and i32 %45, 1
  %47 = lshr i64 %43, 24
  %48 = trunc i64 %47 to i32
  %49 = and i32 %48, 256
  %50 = or i32 %46, %49
  %51 = or i32 %50, -1431699456
  %52 = bitcast i8* %33 to %class.GURL*
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %52) #12
  call void @_ZdlPv(i8* nonnull %33) #13
  %53 = getelementptr inbounds [1 x %class.GURL], [1 x %class.GURL]* %8, i64 0, i64 0
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  %54 = shl i64 %43, 32
  %55 = and i64 %27, 4294967295
  %56 = or i64 %54, %55
  br label %57

57:                                               ; preds = %13, %9
  %58 = phi i64 [ %11, %9 ], [ %56, %13 ]
  %59 = phi i32 [ %12, %9 ], [ %51, %13 ]
  %60 = insertvalue { i64, i32 } undef, i64 %58, 0
  %61 = insertvalue { i64, i32 } %60, i32 %59, 1
  ret { i64, i32 } %61
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN3net11cookie_util33ComputeSameSiteContextForResponseERKNSt3__16vectorI4GURLNS1_9allocatorIS3_EEEERKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEbb(%"class.std::__1::vector.16"* nocapture readonly dereferenceable(24), %"class.net::SiteForCookies"* dereferenceable(88), %"class.absl::optional.23"* dereferenceable(88), i1 zeroext, i1 zeroext) local_unnamed_addr #0 {
  br i1 %4, label %6, label %10

6:                                                ; preds = %5
  %7 = tail call { i64, i32 } @_ZN3net13CookieOptions21SameSiteCookieContext19MakeInclusiveForSetEv() #12
  %8 = extractvalue { i64, i32 } %7, 0
  %9 = extractvalue { i64, i32 } %7, 1
  br label %37

10:                                               ; preds = %5
  br i1 %3, label %11, label %17

11:                                               ; preds = %10
  %12 = tail call zeroext i1 @_ZNK3net14SiteForCookies6IsNullEv(%"class.net::SiteForCookies"* %1) #12
  br i1 %12, label %17, label %13

13:                                               ; preds = %11
  %14 = tail call { i64, i32 } @_ZN3net13CookieOptions21SameSiteCookieContext19MakeInclusiveForSetEv() #12
  %15 = extractvalue { i64, i32 } %14, 0
  %16 = extractvalue { i64, i32 } %14, 1
  br label %37

17:                                               ; preds = %11, %10
  %18 = tail call fastcc i64 @_ZN3net11cookie_util12_GLOBAL__N_122ComputeSameSiteContextERKNSt3__16vectorI4GURLNS2_9allocatorIS4_EEEERKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEbbb(%"class.std::__1::vector.16"* dereferenceable(24) %0, %"class.net::SiteForCookies"* dereferenceable(88) %1, %"class.absl::optional.23"* dereferenceable(88) %2, i1 zeroext true, i1 zeroext %3, i1 zeroext false) #12
  %19 = trunc i64 %18 to i32
  %20 = lshr i64 %18, 32
  %21 = trunc i64 %20 to i32
  %22 = and i32 %21, 1
  %23 = tail call fastcc i64 @_ZN3net11cookie_util12_GLOBAL__N_122ComputeSameSiteContextERKNSt3__16vectorI4GURLNS2_9allocatorIS4_EEEERKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEbbb(%"class.std::__1::vector.16"* dereferenceable(24) %0, %"class.net::SiteForCookies"* dereferenceable(88) %1, %"class.absl::optional.23"* dereferenceable(88) %2, i1 zeroext true, i1 zeroext %3, i1 zeroext true) #12
  %24 = trunc i64 %23 to i32
  %25 = lshr i64 %23, 24
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 256
  %28 = or i32 %22, %27
  %29 = or i32 %28, -1431699456
  %30 = icmp eq i32 %19, 3
  %31 = icmp eq i32 %24, 3
  %32 = shl i64 %23, 32
  %33 = select i1 %31, i64 8589934592, i64 %32
  %34 = and i64 %18, 4294967295
  %35 = select i1 %30, i64 2, i64 %34
  %36 = or i64 %33, %35
  br label %37

37:                                               ; preds = %17, %13, %6
  %38 = phi i64 [ %8, %6 ], [ %36, %17 ], [ %15, %13 ]
  %39 = phi i32 [ %9, %6 ], [ %29, %17 ], [ %16, %13 ]
  %40 = insertvalue { i64, i32 } undef, i64 %38, 0
  %41 = insertvalue { i64, i32 } %40, i32 %39, 1
  ret { i64, i32 } %41
}

declare { i64, i32 } @_ZN3net13CookieOptions21SameSiteCookieContext19MakeInclusiveForSetEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK3net14SiteForCookies6IsNullEv(%"class.net::SiteForCookies"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN3net11cookie_util34ComputeSameSiteContextForScriptSetERK4GURLRKNS_14SiteForCookiesEb(%class.GURL* dereferenceable(120), %"class.net::SiteForCookies"* dereferenceable(88), i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.16", align 8
  %5 = alloca [1 x %class.GURL], align 8
  %6 = alloca %"class.absl::optional.23", align 8
  br i1 %2, label %7, label %11

7:                                                ; preds = %3
  %8 = tail call { i64, i32 } @_ZN3net13CookieOptions21SameSiteCookieContext19MakeInclusiveForSetEv() #12
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = extractvalue { i64, i32 } %8, 1
  br label %54

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::vector.16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = bitcast [1 x %class.GURL]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %13) #12
  %14 = getelementptr inbounds [1 x %class.GURL], [1 x %class.GURL]* %5, i64 0, i64 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %14, %class.GURL* dereferenceable(120) %0) #12
  %15 = call i8* @_Znwm(i64 120) #13
  %16 = bitcast i8* %15 to %class.GURL*
  %17 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %4, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::vector.16"* %4 to i8**
  store i8* %15, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 120
  %20 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %class.GURL** %20 to i8**
  store i8* %19, i8** %21, align 8
  call void @_ZN4GURLC1ERKS_(%class.GURL* nonnull %16, %class.GURL* nonnull dereferenceable(120) %14) #12
  %22 = getelementptr inbounds i8, i8* %15, i64 120
  %23 = bitcast %class.GURL** %17 to i64*
  %24 = ptrtoint i8* %22 to i64
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds %"class.absl::optional.23", %"class.absl::optional.23"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %25) #12
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.absl::optional.23", %"class.absl::optional.23"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %union.anon.27* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 80, i1 false) #12
  %28 = call fastcc i64 @_ZN3net11cookie_util12_GLOBAL__N_122ComputeSameSiteContextERKNSt3__16vectorI4GURLNS2_9allocatorIS4_EEEERKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEbbb(%"class.std::__1::vector.16"* nonnull dereferenceable(24) %4, %"class.net::SiteForCookies"* dereferenceable(88) %1, %"class.absl::optional.23"* nonnull dereferenceable(88) %6, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = and i32 %31, 1
  %33 = call fastcc i64 @_ZN3net11cookie_util12_GLOBAL__N_122ComputeSameSiteContextERKNSt3__16vectorI4GURLNS2_9allocatorIS4_EEEERKNS_14SiteForCookiesERKN4absl8optionalIN3url6OriginEEEbbb(%"class.std::__1::vector.16"* nonnull dereferenceable(24) %4, %"class.net::SiteForCookies"* dereferenceable(88) %1, %"class.absl::optional.23"* nonnull dereferenceable(88) %6, i1 zeroext false, i1 zeroext false, i1 zeroext true) #12
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 24
  %36 = trunc i64 %35 to i32
  %37 = and i32 %36, 256
  %38 = or i32 %32, %37
  %39 = or i32 %38, -1431699456
  %40 = icmp eq i32 %29, 3
  %41 = icmp eq i32 %34, 3
  %42 = shl i64 %33, 32
  %43 = select i1 %41, i64 8589934592, i64 %42
  %44 = and i64 %28, 4294967295
  %45 = select i1 %40, i64 2, i64 %44
  %46 = or i64 %43, %45
  %47 = load i8, i8* %25, align 8, !range !37
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %11
  %50 = getelementptr inbounds %"class.absl::optional.23", %"class.absl::optional.23"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %50) #12
  store i8 0, i8* %25, align 8
  br label %51

51:                                               ; preds = %11, %49
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %25) #12
  %52 = bitcast i8* %15 to %class.GURL*
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %52) #12
  call void @_ZdlPv(i8* nonnull %15) #13
  %53 = getelementptr inbounds [1 x %class.GURL], [1 x %class.GURL]* %5, i64 0, i64 0
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %53) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  br label %54

54:                                               ; preds = %51, %7
  %55 = phi i64 [ %9, %7 ], [ %46, %51 ]
  %56 = phi i32 [ %10, %7 ], [ %39, %51 ]
  %57 = insertvalue { i64, i32 } undef, i64 %55, 0
  %58 = insertvalue { i64, i32 } %57, i32 %56, 1
  ret { i64, i32 } %58
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN3net11cookie_util36ComputeSameSiteContextForSubresourceERK4GURLRKNS_14SiteForCookiesEb(%class.GURL* dereferenceable(120), %"class.net::SiteForCookies"* dereferenceable(88), i1 zeroext) local_unnamed_addr #0 {
  br i1 %2, label %4, label %11

4:                                                ; preds = %3
  %5 = tail call { i64, i32 } @_ZN3net13CookieOptions21SameSiteCookieContext13MakeInclusiveEv() #12
  %6 = extractvalue { i64, i32 } %5, 0
  %7 = extractvalue { i64, i32 } %5, 1
  %8 = and i64 %6, -4294967296
  %9 = and i32 %7, -256
  %10 = and i32 %7, -65536
  br label %22

11:                                               ; preds = %3
  %12 = tail call zeroext i1 @_ZNK3net14SiteForCookies29IsFirstPartyWithSchemefulModeERK4GURLb(%"class.net::SiteForCookies"* %1, %class.GURL* dereferenceable(120) %0, i1 zeroext false) #12
  br i1 %12, label %13, label %22

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @_ZNK3net14SiteForCookies29IsFirstPartyWithSchemefulModeERK4GURLb(%"class.net::SiteForCookies"* %1, %class.GURL* dereferenceable(120) %0, i1 zeroext true) #12
  br i1 %14, label %15, label %22

15:                                               ; preds = %13
  %16 = tail call { i64, i32 } @_ZN3net13CookieOptions21SameSiteCookieContext13MakeInclusiveEv() #12
  %17 = extractvalue { i64, i32 } %16, 0
  %18 = extractvalue { i64, i32 } %16, 1
  %19 = and i64 %17, -4294967296
  %20 = and i32 %18, -256
  %21 = and i32 %18, -65536
  br label %22

22:                                               ; preds = %13, %11, %15, %4
  %23 = phi i32 [ %10, %4 ], [ %21, %15 ], [ 0, %11 ], [ 0, %13 ]
  %24 = phi i32 [ %9, %4 ], [ %20, %15 ], [ 0, %11 ], [ 0, %13 ]
  %25 = phi i32 [ %7, %4 ], [ %18, %15 ], [ 0, %11 ], [ 0, %13 ]
  %26 = phi i64 [ %8, %4 ], [ %19, %15 ], [ 0, %11 ], [ 0, %13 ]
  %27 = phi i64 [ %6, %4 ], [ %17, %15 ], [ 0, %11 ], [ 3, %13 ]
  %28 = and i64 %27, 4294967295
  %29 = or i64 %28, %26
  %30 = and i32 %24, 65280
  %31 = or i32 %30, %23
  %32 = and i32 %25, 255
  %33 = or i32 %31, %32
  %34 = insertvalue { i64, i32 } undef, i64 %29, 0
  %35 = insertvalue { i64, i32 } %34, i32 %33, 1
  ret { i64, i32 } %35
}

declare zeroext i1 @_ZNK3net14SiteForCookies29IsFirstPartyWithSchemefulModeERK4GURLb(%"class.net::SiteForCookies"*, %class.GURL* dereferenceable(120), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11cookie_util33IsSameSiteByDefaultCookiesEnabledEv() local_unnamed_addr #0 {
  %1 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features25kSameSiteByDefaultCookiesE) #12
  ret i1 %1
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11cookie_util43IsCookiesWithoutSameSiteMustBeSecureEnabledEv() local_unnamed_addr #0 {
  %1 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features25kSameSiteByDefaultCookiesE) #12
  br i1 %1, label %2, label %4

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features35kCookiesWithoutSameSiteMustBeSecureE) #12
  br label %4

4:                                                ; preds = %2, %0
  %5 = phi i1 [ false, %0 ], [ %3, %2 ]
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11cookie_util26IsSchemefulSameSiteEnabledEv() local_unnamed_addr #0 {
  %1 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features18kSchemefulSameSiteE) #12
  ret i1 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11cookie_util23IsFirstPartySetsEnabledEv() local_unnamed_addr #0 {
  %1 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features15kFirstPartySetsE) #12
  ret i1 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net11cookie_util23ComputeSamePartyContextERKNS_13SchemefulSiteERKNS_13IsolationInfoEPKNS_20CookieAccessDelegateEb(%"class.net::SchemefulSite"* dereferenceable(80), %"class.net::IsolationInfo"* dereferenceable(496), %"class.net::CookieAccessDelegate"*, i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %"class.absl::optional.30", align 8
  %6 = getelementptr inbounds %"class.net::IsolationInfo", %"class.net::IsolationInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !37
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %43, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.net::IsolationInfo", %"class.net::IsolationInfo"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !37
  %12 = icmp ne i8 %11, 0
  %13 = icmp ne %"class.net::CookieAccessDelegate"* %2, null
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %43

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %16) #12
  br i1 %3, label %17, label %20

17:                                               ; preds = %15
  store i8 0, i8* %16, align 8
  %18 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %union.anon.34* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 80, i1 false) #12
  br label %30

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.net::IsolationInfo", %"class.net::IsolationInfo"* %1, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 88, i1 false) #12
  %22 = load i8, i8* %21, align 8, !range !37
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.net::IsolationInfo", %"class.net::IsolationInfo"* %1, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net13SchemefulSiteC1ERKS0_(%"class.net::SchemefulSite"* %26, %"class.net::SchemefulSite"* dereferenceable(80) %25) #12
  store i8 1, i8* %16, align 8
  %27 = load i8, i8* %10, align 8, !range !37
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

30:                                               ; preds = %17, %20, %24
  %31 = getelementptr inbounds %"class.net::IsolationInfo", %"class.net::IsolationInfo"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = bitcast %"class.net::CookieAccessDelegate"* %2 to i1 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)***
  %33 = load i1 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)**, i1 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)*, i1 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)** %33, i64 5
  %35 = load i1 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)*, i1 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)** %34, align 8
  %36 = call zeroext i1 %35(%"class.net::CookieAccessDelegate"* nonnull %2, %"class.net::SchemefulSite"* dereferenceable(80) %0, %"class.absl::optional.30"* nonnull dereferenceable(88) %5, %"class.std::__1::set"* dereferenceable(24) %31) #12
  %37 = load i8, i8* %16, align 8, !range !37
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %40) #12
  store i8 0, i8* %16, align 8
  br label %41

41:                                               ; preds = %39, %30
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %16) #12
  %42 = zext i1 %36 to i32
  ret i32 %42

43:                                               ; preds = %4, %9
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net11cookie_util18GetSamePartyStatusERKNS_15CanonicalCookieERKNS_13CookieOptionsE(%"class.net::CanonicalCookie"* nocapture readonly dereferenceable(144), %"class.net::CookieOptions"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features15kFirstPartySetsE) #12
  br i1 %3, label %4, label %17

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %0, i64 0, i32 11
  %6 = load i8, i8* %5, align 4, !range !37
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.net::CookieOptions", %"class.net::CookieOptions"* %1, i64 0, i32 8
  %10 = load i8, i8* %9, align 4, !range !37
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.net::CookieOptions", %"class.net::CookieOptions"* %1, i64 0, i32 6
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i32 1, i32 2
  br label %17

17:                                               ; preds = %8, %4, %12, %2
  %18 = phi i32 [ 0, %8 ], [ 0, %4 ], [ 0, %2 ], [ %16, %12 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net11cookie_util32ComputeFirstPartySetsContextTypeERKNS_13SchemefulSiteERKNS_13IsolationInfoEPKNS_20CookieAccessDelegateEb(%"class.net::SchemefulSite"* dereferenceable(80), %"class.net::IsolationInfo"* dereferenceable(496), %"class.net::CookieAccessDelegate"*, i1 zeroext) local_unnamed_addr #0 {
  %5 = alloca %"class.absl::optional.30", align 8
  %6 = getelementptr inbounds %"class.net::IsolationInfo", %"class.net::IsolationInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !37
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %42, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.net::IsolationInfo", %"class.net::IsolationInfo"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !37
  %12 = icmp ne i8 %11, 0
  %13 = icmp ne %"class.net::CookieAccessDelegate"* %2, null
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %42

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %16) #12
  br i1 %3, label %17, label %20

17:                                               ; preds = %15
  store i8 0, i8* %16, align 8
  %18 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %union.anon.34* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 80, i1 false) #12
  br label %30

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.net::IsolationInfo", %"class.net::IsolationInfo"* %1, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 88, i1 false) #12
  %22 = load i8, i8* %21, align 8, !range !37
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.net::IsolationInfo", %"class.net::IsolationInfo"* %1, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net13SchemefulSiteC1ERKS0_(%"class.net::SchemefulSite"* %26, %"class.net::SchemefulSite"* dereferenceable(80) %25) #12
  store i8 1, i8* %16, align 8
  %27 = load i8, i8* %10, align 8, !range !37
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

30:                                               ; preds = %17, %20, %24
  %31 = getelementptr inbounds %"class.net::IsolationInfo", %"class.net::IsolationInfo"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = bitcast %"class.net::CookieAccessDelegate"* %2 to i32 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)***
  %33 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)**, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)** %33, i64 7
  %35 = load i32 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)*, i32 (%"class.net::CookieAccessDelegate"*, %"class.net::SchemefulSite"*, %"class.absl::optional.30"*, %"class.std::__1::set"*)** %34, align 8
  %36 = call i32 %35(%"class.net::CookieAccessDelegate"* nonnull %2, %"class.net::SchemefulSite"* dereferenceable(80) %0, %"class.absl::optional.30"* nonnull dereferenceable(88) %5, %"class.std::__1::set"* dereferenceable(24) %31) #12
  %37 = load i8, i8* %16, align 8, !range !37
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %40) #12
  store i8 0, i8* %16, align 8
  br label %41

41:                                               ; preds = %30, %39
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %16) #12
  br label %42

42:                                               ; preds = %4, %9, %41
  %43 = phi i32 [ %36, %41 ], [ 0, %9 ], [ 0, %4 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util29AdaptCookieAccessResultToBoolEN4base12OnceCallbackIFvbEEE(%"class.base::OnceCallback"* noalias nocapture sret, %"class.base::OnceCallback.53"* nocapture) local_unnamed_addr #0 {
  %3 = tail call i8* @_Znwm(i64 48) #13, !noalias !38
  %4 = bitcast i8* %3 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %4, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.net::CookieAccessResult"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3net11cookie_util29AdaptCookieAccessResultToBoolENS_12OnceCallbackIFvbEEEE3$_1JS7_EEEFvNS3_18CookieAccessResultEEE7RunOnceEPNS0_13BindStateBaseEOSA_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3net11cookie_util29AdaptCookieAccessResultToBoolENS_12OnceCallbackIFvbEEEE3$_1JS6_EE7DestroyEPKNS0_13BindStateBaseE") #12, !noalias !38
  %5 = getelementptr inbounds i8, i8* %3, i64 40
  %6 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback.53"* %1 to i64*
  %8 = load i64, i64* %7, align 8, !noalias !38
  %9 = bitcast i8* %5 to i64*
  store i64 %8, i64* %9, align 8, !noalias !38
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8, !noalias !38
  %10 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %3, i8** %10, align 8, !alias.scope !38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util18StripAccessResultsERKNSt3__16vectorINS_22CookieWithAccessResultENS1_9allocatorIS3_EEEE(%"class.std::__1::vector.61"* noalias sret, %"class.std::__1::vector.54"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.61"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %1, i64 0, i32 0, i32 0
  %7 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %1, i64 0, i32 0, i32 1
  %9 = load %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"** %8, align 8
  %10 = icmp eq %"struct.net::CookieWithAccessResult"* %7, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.net::CanonicalCookie"** %3 to i64*
  br label %14

13:                                               ; preds = %24, %2
  ret void

14:                                               ; preds = %27, %11
  %15 = phi %"class.net::CanonicalCookie"* [ null, %11 ], [ %29, %27 ]
  %16 = phi %"class.net::CanonicalCookie"* [ null, %11 ], [ %28, %27 ]
  %17 = phi %"struct.net::CookieWithAccessResult"* [ %7, %11 ], [ %25, %27 ]
  %18 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %17, i64 0, i32 0
  %19 = icmp eq %"class.net::CanonicalCookie"* %16, %15
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %16, %"class.net::CanonicalCookie"* dereferenceable(144) %18) #12
  %21 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %16, i64 1
  %22 = ptrtoint %"class.net::CanonicalCookie"* %21 to i64
  store i64 %22, i64* %12, align 8
  br label %24

23:                                               ; preds = %14
  tail call void @_ZNSt3__16vectorIN3net15CanonicalCookieENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.61"* %0, %"class.net::CanonicalCookie"* dereferenceable(144) %18) #12
  br label %24

24:                                               ; preds = %20, %23
  %25 = getelementptr inbounds %"struct.net::CookieWithAccessResult", %"struct.net::CookieWithAccessResult"* %17, i64 1
  %26 = icmp eq %"struct.net::CookieWithAccessResult"* %25, %9
  br i1 %26, label %13, label %27

27:                                               ; preds = %24
  %28 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %3, align 8
  %29 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %4, align 8
  br label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11cookie_util33RecordCookiePortOmniboxHistogramsERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = tail call i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL* %0) #12
  %3 = icmp eq i32 %2, -1
  br i1 %3, label %34, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN3net11IsLocalhostERK4GURL(%class.GURL* dereferenceable(120) %0) #12
  br i1 %5, label %6, label %20

6:                                                ; preds = %4
  %7 = load atomic i64, i64* @_ZZN3net11cookie_util33RecordCookiePortOmniboxHistogramsERK4GURLE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %8 = inttoptr i64 %7 to %"class.base::HistogramBase"*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i64 0, i64 0), i32 1, i32 91, i32 92, i32 1) #12
  %12 = ptrtoint %"class.base::HistogramBase"* %11 to i64
  store atomic i64 %12, i64* @_ZZN3net11cookie_util33RecordCookiePortOmniboxHistogramsERK4GURLE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %13

13:                                               ; preds = %6, %10
  %14 = phi %"class.base::HistogramBase"* [ %8, %6 ], [ %11, %10 ]
  %15 = tail call i32 @_ZN3net33ReducePortRangeForCookieHistogramEi(i32 %2) #12
  %16 = bitcast %"class.base::HistogramBase"* %14 to void (%"class.base::HistogramBase"*, i32)***
  %17 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %17, i64 6
  %19 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %18, align 8
  tail call void %19(%"class.base::HistogramBase"* %14, i32 %15) #12
  br label %34

20:                                               ; preds = %4
  %21 = load atomic i64, i64* @_ZZN3net11cookie_util33RecordCookiePortOmniboxHistogramsERK4GURLE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %22 = inttoptr i64 %21 to %"class.base::HistogramBase"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i32 1, i32 91, i32 92, i32 1) #12
  %26 = ptrtoint %"class.base::HistogramBase"* %25 to i64
  store atomic i64 %26, i64* @_ZZN3net11cookie_util33RecordCookiePortOmniboxHistogramsERK4GURLE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %27

27:                                               ; preds = %20, %24
  %28 = phi %"class.base::HistogramBase"* [ %22, %20 ], [ %25, %24 ]
  %29 = tail call i32 @_ZN3net33ReducePortRangeForCookieHistogramEi(i32 %2) #12
  %30 = bitcast %"class.base::HistogramBase"* %28 to void (%"class.base::HistogramBase"*, i32)***
  %31 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %31, i64 6
  %33 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %32, align 8
  tail call void %33(%"class.base::HistogramBase"* %28, i32 %29) #12
  br label %34

34:                                               ; preds = %13, %27, %1
  ret void
}

declare i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL*) local_unnamed_addr #2

declare i32 @_ZN3net33ReducePortRangeForCookieHistogramEi(i32) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK4base4Time8Exploded14HasValidValuesEv(%"struct.base::Time::Exploded"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base4Time12FromExplodedEbRKNS0_8ExplodedEPS0_(i1 zeroext, %"struct.base::Time::Exploded"* dereferenceable(32), %"class.base::Time"*) local_unnamed_addr #2

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3net14SiteForCookies10FromOriginERKN3url6OriginE(%"class.net::SiteForCookies"* sret, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net14SiteForCookiesD1Ev(%"class.net::SiteForCookies"*) unnamed_addr #4

declare void @_ZN4base19UmaHistogramBooleanEPKcb(i8*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #4

declare void @_ZN3net13SchemefulSiteC1ERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE12QuickGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::__wrap_iter"* %3 to i64*
  %6 = bitcast %"class.std::__1::__wrap_iter"* %4 to i64*
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %3, i64 0, i32 0
  %9 = inttoptr i64 %7 to i8*
  %10 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, %9
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  br label %18

17:                                               ; preds = %34, %1
  store i8 1, i8* %2, align 4
  br label %61

18:                                               ; preds = %13, %34
  %19 = phi i8* [ %9, %13 ], [ %36, %34 ]
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %20, i8** %8, align 8
  %21 = load i8, i8* %19, align 1
  %22 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %21, i64 0) #12
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = load i32, i32* %16, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i8*, i8** %15, align 8
  %29 = load i8, i8* %28, align 1
  switch i8 %29, label %30 [
    i8 32, label %34
    i8 13, label %34
    i8 10, label %34
    i8 9, label %34
    i8 12, label %34
  ]

30:                                               ; preds = %27, %24
  %31 = load i8*, i8** %8, align 8
  %32 = load i8*, i8** %10, align 8
  %33 = icmp eq i8* %31, %32
  br i1 %33, label %61, label %39

34:                                               ; preds = %27, %27, %27, %27, %27, %18
  %35 = load i64, i64* %5, align 8
  store i64 %35, i64* %6, align 8
  %36 = inttoptr i64 %35 to i8*
  %37 = load i8*, i8** %10, align 8
  %38 = icmp eq i8* %37, %36
  br i1 %38, label %17, label %18

39:                                               ; preds = %30, %52
  %40 = phi i8* [ %53, %52 ], [ %31, %30 ]
  %41 = load i8, i8* %40, align 1
  %42 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %14, i8 signext %41, i64 0) #12
  %43 = icmp eq i64 %42, -1
  br i1 %43, label %44, label %61

44:                                               ; preds = %39
  %45 = load i8*, i8** %8, align 8
  %46 = load i32, i32* %16, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = load i8, i8* %45, align 1
  %50 = add i8 %49, -9
  %51 = icmp ult i8 %50, 24
  br i1 %51, label %56, label %52

52:                                               ; preds = %56, %48, %44
  %53 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %53, i8** %8, align 8
  %54 = load i8*, i8** %10, align 8
  %55 = icmp eq i8* %53, %54
  br i1 %55, label %61, label %39

56:                                               ; preds = %48
  %57 = zext i8 %50 to i32
  %58 = lshr i32 8388635, %57
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %52, label %61

61:                                               ; preds = %17, %30, %52, %39, %56
  %62 = phi i1 [ true, %56 ], [ false, %17 ], [ true, %30 ], [ true, %52 ], [ true, %39 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE11FullGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  %7 = ptrtoint i8* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i8* [ %17, %16 ], [ %3, %8 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %22 [
    i8 32, label %16
    i8 13, label %16
    i8 10, label %16
    i8 9, label %16
    i8 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %17, i8** %2, align 8
  %18 = icmp eq i8* %17, %5
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i8* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = phi i8* [ %3, %8 ], [ %3, %1 ], [ %5, %20 ], [ %14, %12 ]
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %29 = bitcast %"class.std::__1::__wrap_iter"* %28 to i64*
  %30 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %32 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter"* %28, i64 0, i32 0
  %34 = load i8, i8* %27, align 4, !range !37
  %35 = icmp eq i8 %34, 0
  br label %36

36:                                               ; preds = %113, %22
  %37 = phi i8* [ %5, %22 ], [ %106, %113 ]
  %38 = phi i64 [ %23, %22 ], [ %118, %113 ]
  %39 = phi i8* [ %24, %22 ], [ %114, %113 ]
  %40 = phi i1 [ %35, %22 ], [ false, %113 ]
  %41 = phi i8 [ 0, %22 ], [ %108, %113 ]
  %42 = phi i8 [ 0, %22 ], [ %109, %113 ]
  %43 = phi i8 [ 0, %22 ], [ %110, %113 ]
  br i1 %40, label %105, label %44

44:                                               ; preds = %36
  store i8 0, i8* %27, align 4
  store i64 %38, i64* %29, align 8
  %45 = inttoptr i64 %38 to i8*
  %46 = icmp eq i8* %37, %45
  br i1 %46, label %91, label %47

47:                                               ; preds = %44, %76
  %48 = phi i8* [ %77, %76 ], [ %37, %44 ]
  %49 = phi i8* [ %82, %76 ], [ %39, %44 ]
  %50 = phi i8* [ %82, %76 ], [ %45, %44 ]
  %51 = phi i8 [ %81, %76 ], [ %43, %44 ]
  %52 = phi i8 [ %80, %76 ], [ %42, %44 ]
  %53 = phi i8 [ %79, %76 ], [ %41, %44 ]
  %54 = load i8, i8* %50, align 1
  %55 = icmp eq i8 %51, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %47
  %57 = icmp eq i8 %52, 0
  br i1 %57, label %58, label %76

58:                                               ; preds = %56
  %59 = icmp eq i8 %54, 92
  br i1 %59, label %76, label %60

60:                                               ; preds = %58
  %61 = icmp eq i8 %53, %54
  %62 = select i1 %61, i8 0, i8 %51
  br label %76

63:                                               ; preds = %47
  %64 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %30, i8 signext %54, i64 0) #12
  %65 = icmp eq i64 %64, -1
  br i1 %65, label %66, label %84

66:                                               ; preds = %63
  %67 = load i32, i32* %31, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  switch i8 %54, label %70 [
    i8 32, label %84
    i8 13, label %84
    i8 10, label %84
    i8 9, label %84
    i8 12, label %84
  ]

70:                                               ; preds = %69, %66
  %71 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %32, i8 signext %54, i64 0) #12
  %72 = icmp ne i64 %71, -1
  %73 = zext i1 %72 to i8
  %74 = load i8*, i8** %26, align 8
  %75 = load i8*, i8** %4, align 8
  br label %76

76:                                               ; preds = %60, %70, %56, %58
  %77 = phi i8* [ %48, %58 ], [ %48, %56 ], [ %75, %70 ], [ %48, %60 ]
  %78 = phi i8* [ %49, %58 ], [ %49, %56 ], [ %74, %70 ], [ %49, %60 ]
  %79 = phi i8 [ %53, %58 ], [ %53, %56 ], [ %54, %70 ], [ %53, %60 ]
  %80 = phi i8 [ 1, %58 ], [ 0, %56 ], [ %52, %70 ], [ 0, %60 ]
  %81 = phi i8 [ %51, %58 ], [ %51, %56 ], [ %73, %70 ], [ %62, %60 ]
  %82 = getelementptr inbounds i8, i8* %78, i64 1
  store i8* %82, i8** %26, align 8
  %83 = icmp eq i8* %82, %77
  br i1 %83, label %84, label %47

84:                                               ; preds = %76, %69, %69, %69, %69, %69, %63
  %85 = phi i8 [ %53, %63 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %53, %69 ], [ %79, %76 ]
  %86 = phi i8 [ %52, %63 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %52, %69 ], [ %80, %76 ]
  %87 = phi i8 [ 0, %63 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ 0, %69 ], [ %81, %76 ]
  %88 = load i8*, i8** %33, align 8
  %89 = load i8*, i8** %26, align 8
  %90 = ptrtoint i8* %89 to i64
  br label %91

91:                                               ; preds = %84, %44
  %92 = phi i64 [ %38, %44 ], [ %90, %84 ]
  %93 = phi i8* [ %39, %44 ], [ %89, %84 ]
  %94 = phi i8* [ %37, %44 ], [ %88, %84 ]
  %95 = phi i8 [ %41, %44 ], [ %85, %84 ]
  %96 = phi i8 [ %42, %44 ], [ %86, %84 ]
  %97 = phi i8 [ %43, %44 ], [ %87, %84 ]
  %98 = icmp eq i8* %94, %93
  br i1 %98, label %99, label %119

99:                                               ; preds = %91
  %100 = load i32, i32* %25, align 8
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %119

103:                                              ; preds = %99
  %104 = load i8*, i8** %4, align 8
  br label %105

105:                                              ; preds = %103, %36
  %106 = phi i8* [ %37, %36 ], [ %104, %103 ]
  %107 = phi i64 [ %38, %36 ], [ %92, %103 ]
  %108 = phi i8 [ %41, %36 ], [ %95, %103 ]
  %109 = phi i8 [ %42, %36 ], [ %96, %103 ]
  %110 = phi i8 [ %43, %36 ], [ %97, %103 ]
  store i8 1, i8* %27, align 4
  store i64 %107, i64* %29, align 8
  %111 = inttoptr i64 %107 to i8*
  %112 = icmp eq i8* %106, %111
  br i1 %112, label %119, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds i8, i8* %111, i64 1
  store i8* %114, i8** %26, align 8
  %115 = load i32, i32* %25, align 8
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = ptrtoint i8* %114 to i64
  br i1 %117, label %36, label %119

119:                                              ; preds = %91, %113, %105, %99
  %120 = phi i1 [ true, %99 ], [ true, %91 ], [ false, %105 ], [ true, %113 ]
  ret i1 %120
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS5_IS8_EEE24__emplace_back_slow_pathIJS7_S7_EEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #10 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 48
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 384307168202282325
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #14
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 48
  %21 = icmp ult i64 %20, 192153584101141162
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 384307168202282325, %15 ]
  %29 = mul i64 %28, 48
  %30 = tail call i8* @_Znwm(i64 %29) #13
  %31 = bitcast i8* %30 to %"struct.std::__1::pair"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"struct.std::__1::pair"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %10
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %33
  %37 = ptrtoint %"struct.std::__1::pair"* %36 to i64
  %38 = bitcast %"struct.std::__1::pair"* %35 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #12
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 %10, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #12
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %44 = ptrtoint %"struct.std::__1::pair"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %45, align 8
  %47 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %48 = icmp eq %"struct.std::__1::pair"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %32
  %50 = ptrtoint %"struct.std::__1::pair"* %46 to i64
  br label %66

51:                                               ; preds = %32, %51
  %52 = phi %"struct.std::__1::pair"* [ %54, %51 ], [ %35, %32 ]
  %53 = phi %"struct.std::__1::pair"* [ %55, %51 ], [ %47, %32 ]
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 -1
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1
  %56 = bitcast %"struct.std::__1::pair"* %54 to i8*
  %57 = bitcast %"struct.std::__1::pair"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #12
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1, i32 1
  %60 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #12
  %62 = icmp eq %"struct.std::__1::pair"* %55, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %7, align 8
  %65 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.std::__1::pair"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.std::__1::pair"* [ %35, %49 ], [ %54, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.std::__1::pair"* %68 to i64
  store i64 %70, i64* %7, align 8
  store i64 %44, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %71 = inttoptr i64 %69 to %"struct.std::__1::pair"*
  %72 = icmp eq %"struct.std::__1::pair"* %67, %71
  br i1 %72, label %94, label %73

73:                                               ; preds = %66, %92
  %74 = phi %"struct.std::__1::pair"* [ %75, %92 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 -1, i32 1
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %81, %73
  %85 = bitcast %"struct.std::__1::pair"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #13
  br label %92

92:                                               ; preds = %89, %84
  %93 = icmp eq %"struct.std::__1::pair"* %75, %71
  br i1 %93, label %94, label %73

94:                                               ; preds = %92, %66
  %95 = icmp eq i64 %69, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %97) #13
  br label %98

98:                                               ; preds = %94, %96
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeINS_11__wrap_iterIPKcEEEERS5_T_SC_(%"class.std::__1::basic_string"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = zext i8 %8 to i64
  br label %19

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 9223372036854775807
  %18 = add nsw i64 %17, -1
  br label %19

19:                                               ; preds = %10, %12
  %20 = phi i64 [ %14, %12 ], [ %11, %10 ]
  %21 = phi i64 [ %18, %12 ], [ 22, %10 ]
  %22 = ptrtoint i8* %2 to i64
  %23 = sub i64 %22, %4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %307, label %25

25:                                               ; preds = %19
  br i1 %9, label %26, label %31

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  br label %34

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %33 = zext i8 %8 to i64
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi i8* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i64 [ %30, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = icmp ule i8* %35, %1
  %39 = icmp ugt i8* %37, %1
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %176

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #12
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = icmp ugt i64 %23, -17
  %47 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false)
  br i1 %46, label %48, label %50

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %49) #14
  unreachable

50:                                               ; preds = %41
  %51 = icmp ult i64 %23, 23
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = trunc i64 %23 to i8
  %54 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  store i8 %53, i8* %55, align 1
  br label %61

56:                                               ; preds = %50
  %57 = add nuw i64 %23, 16
  %58 = and i64 %57, -16
  %59 = tail call i8* @_Znwm(i64 %58) #13
  store i8* %59, i8** %43, align 8
  %60 = or i64 %58, -9223372036854775808
  store i64 %60, i64* %45, align 8
  store i64 %23, i64* %44, align 8
  br label %61

61:                                               ; preds = %56, %52
  %62 = phi i8* [ %42, %52 ], [ %59, %56 ]
  %63 = icmp eq i8* %1, %2
  br i1 %63, label %159, label %64

64:                                               ; preds = %61
  %65 = ptrtoint i8* %2 to i64
  %66 = sub i64 %65, %4
  %67 = icmp ult i64 %66, 32
  br i1 %67, label %149, label %68

68:                                               ; preds = %64
  %69 = and i64 %66, -32
  %70 = getelementptr i8, i8* %62, i64 %69
  %71 = getelementptr i8, i8* %1, i64 %69
  %72 = add i64 %69, -32
  %73 = lshr exact i64 %72, 5
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp ult i64 %72, 96
  br i1 %76, label %128, label %77

77:                                               ; preds = %68
  %78 = sub nsw i64 %74, %75
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %125, %79 ]
  %81 = phi i64 [ %78, %77 ], [ %126, %79 ]
  %82 = getelementptr i8, i8* %62, i64 %80
  %83 = getelementptr i8, i8* %1, i64 %80
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1
  %86 = getelementptr i8, i8* %83, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1
  %89 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1
  %90 = getelementptr i8, i8* %82, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %91, align 1
  %92 = or i64 %80, 32
  %93 = getelementptr i8, i8* %62, i64 %92
  %94 = getelementptr i8, i8* %1, i64 %92
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1
  %97 = getelementptr i8, i8* %94, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1
  %100 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1
  %101 = getelementptr i8, i8* %93, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1
  %103 = or i64 %80, 64
  %104 = getelementptr i8, i8* %62, i64 %103
  %105 = getelementptr i8, i8* %1, i64 %103
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1
  %108 = getelementptr i8, i8* %105, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1
  %111 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1
  %112 = getelementptr i8, i8* %104, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1
  %114 = or i64 %80, 96
  %115 = getelementptr i8, i8* %62, i64 %114
  %116 = getelementptr i8, i8* %1, i64 %114
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1
  %119 = getelementptr i8, i8* %116, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1
  %122 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1
  %123 = getelementptr i8, i8* %115, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %124, align 1
  %125 = add i64 %80, 128
  %126 = add i64 %81, -4
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %79, !llvm.loop !43

128:                                              ; preds = %79, %68
  %129 = phi i64 [ 0, %68 ], [ %125, %79 ]
  %130 = icmp eq i64 %75, 0
  br i1 %130, label %147, label %131

131:                                              ; preds = %128, %131
  %132 = phi i64 [ %144, %131 ], [ %129, %128 ]
  %133 = phi i64 [ %145, %131 ], [ %75, %128 ]
  %134 = getelementptr i8, i8* %62, i64 %132
  %135 = getelementptr i8, i8* %1, i64 %132
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1
  %138 = getelementptr i8, i8* %135, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1
  %141 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %141, align 1
  %142 = getelementptr i8, i8* %134, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %143, align 1
  %144 = add i64 %132, 32
  %145 = add i64 %133, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %131, !llvm.loop !44

147:                                              ; preds = %131, %128
  %148 = icmp eq i64 %66, %69
  br i1 %148, label %159, label %149

149:                                              ; preds = %147, %64
  %150 = phi i8* [ %62, %64 ], [ %70, %147 ]
  %151 = phi i8* [ %1, %64 ], [ %71, %147 ]
  br label %152

152:                                              ; preds = %149, %152
  %153 = phi i8* [ %157, %152 ], [ %150, %149 ]
  %154 = phi i8* [ %156, %152 ], [ %151, %149 ]
  %155 = load i8, i8* %154, align 1
  store i8 %155, i8* %153, align 1
  %156 = getelementptr inbounds i8, i8* %154, i64 1
  %157 = getelementptr inbounds i8, i8* %153, i64 1
  %158 = icmp eq i8* %156, %2
  br i1 %158, label %159, label %152, !llvm.loop !45

159:                                              ; preds = %152, %147, %61
  %160 = phi i8* [ %62, %61 ], [ %70, %147 ], [ %157, %152 ]
  store i8 0, i8* %160, align 1
  %161 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = icmp slt i8 %163, 0
  %165 = load i8*, i8** %43, align 8
  %166 = load i64, i64* %44, align 8
  %167 = zext i8 %163 to i64
  %168 = select i1 %164, i8* %165, i8* %42
  %169 = select i1 %164, i64 %166, i64 %167
  %170 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %168, i64 %169) #12
  %171 = load i8, i8* %162, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %159
  %174 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %174) #13
  br label %175

175:                                              ; preds = %159, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #12
  br label %307

176:                                              ; preds = %34
  %177 = sub i64 %21, %20
  %178 = icmp ult i64 %177, %23
  br i1 %178, label %179, label %183

179:                                              ; preds = %176
  %180 = add i64 %20, %23
  %181 = sub i64 %180, %21
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %0, i64 %21, i64 %181, i64 %20, i64 %20, i64 0, i64 0) #12
  %182 = load i8, i8* %7, align 1
  br label %183

183:                                              ; preds = %179, %176
  %184 = phi i8 [ %182, %179 ], [ %8, %176 ]
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  br label %191

189:                                              ; preds = %183
  %190 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %191

191:                                              ; preds = %186, %189
  %192 = phi i8* [ %188, %186 ], [ %190, %189 ]
  %193 = getelementptr inbounds i8, i8* %192, i64 %20
  %194 = icmp eq i8* %1, %2
  br i1 %194, label %298, label %195

195:                                              ; preds = %191
  %196 = ptrtoint i8* %2 to i64
  %197 = sub i64 %196, %4
  %198 = icmp ult i64 %197, 32
  br i1 %198, label %288, label %199

199:                                              ; preds = %195
  %200 = sub i64 %20, %4
  %201 = getelementptr i8, i8* %2, i64 %200
  %202 = ptrtoint i8* %201 to i64
  %203 = getelementptr i8, i8* %192, i64 %202
  %204 = icmp ult i8* %193, %2
  %205 = icmp ugt i8* %203, %1
  %206 = and i1 %204, %205
  br i1 %206, label %288, label %207

207:                                              ; preds = %199
  %208 = and i64 %197, -32
  %209 = getelementptr i8, i8* %193, i64 %208
  %210 = getelementptr i8, i8* %1, i64 %208
  %211 = add i64 %208, -32
  %212 = lshr exact i64 %211, 5
  %213 = add nuw nsw i64 %212, 1
  %214 = and i64 %213, 3
  %215 = icmp ult i64 %211, 96
  br i1 %215, label %267, label %216

216:                                              ; preds = %207
  %217 = sub nsw i64 %213, %214
  br label %218

218:                                              ; preds = %218, %216
  %219 = phi i64 [ 0, %216 ], [ %264, %218 ]
  %220 = phi i64 [ %217, %216 ], [ %265, %218 ]
  %221 = getelementptr i8, i8* %193, i64 %219
  %222 = getelementptr i8, i8* %1, i64 %219
  %223 = bitcast i8* %222 to <16 x i8>*
  %224 = load <16 x i8>, <16 x i8>* %223, align 1, !alias.scope !47
  %225 = getelementptr i8, i8* %222, i64 16
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !47
  %228 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %224, <16 x i8>* %228, align 1, !alias.scope !50, !noalias !47
  %229 = getelementptr i8, i8* %221, i64 16
  %230 = bitcast i8* %229 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %230, align 1, !alias.scope !50, !noalias !47
  %231 = or i64 %219, 32
  %232 = getelementptr i8, i8* %193, i64 %231
  %233 = getelementptr i8, i8* %1, i64 %231
  %234 = bitcast i8* %233 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !47
  %236 = getelementptr i8, i8* %233, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !47
  %239 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !50, !noalias !47
  %240 = getelementptr i8, i8* %232, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !50, !noalias !47
  %242 = or i64 %219, 64
  %243 = getelementptr i8, i8* %193, i64 %242
  %244 = getelementptr i8, i8* %1, i64 %242
  %245 = bitcast i8* %244 to <16 x i8>*
  %246 = load <16 x i8>, <16 x i8>* %245, align 1, !alias.scope !47
  %247 = getelementptr i8, i8* %244, i64 16
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !47
  %250 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %246, <16 x i8>* %250, align 1, !alias.scope !50, !noalias !47
  %251 = getelementptr i8, i8* %243, i64 16
  %252 = bitcast i8* %251 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %252, align 1, !alias.scope !50, !noalias !47
  %253 = or i64 %219, 96
  %254 = getelementptr i8, i8* %193, i64 %253
  %255 = getelementptr i8, i8* %1, i64 %253
  %256 = bitcast i8* %255 to <16 x i8>*
  %257 = load <16 x i8>, <16 x i8>* %256, align 1, !alias.scope !47
  %258 = getelementptr i8, i8* %255, i64 16
  %259 = bitcast i8* %258 to <16 x i8>*
  %260 = load <16 x i8>, <16 x i8>* %259, align 1, !alias.scope !47
  %261 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %257, <16 x i8>* %261, align 1, !alias.scope !50, !noalias !47
  %262 = getelementptr i8, i8* %254, i64 16
  %263 = bitcast i8* %262 to <16 x i8>*
  store <16 x i8> %260, <16 x i8>* %263, align 1, !alias.scope !50, !noalias !47
  %264 = add i64 %219, 128
  %265 = add i64 %220, -4
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %218, !llvm.loop !52

267:                                              ; preds = %218, %207
  %268 = phi i64 [ 0, %207 ], [ %264, %218 ]
  %269 = icmp eq i64 %214, 0
  br i1 %269, label %286, label %270

270:                                              ; preds = %267, %270
  %271 = phi i64 [ %283, %270 ], [ %268, %267 ]
  %272 = phi i64 [ %284, %270 ], [ %214, %267 ]
  %273 = getelementptr i8, i8* %193, i64 %271
  %274 = getelementptr i8, i8* %1, i64 %271
  %275 = bitcast i8* %274 to <16 x i8>*
  %276 = load <16 x i8>, <16 x i8>* %275, align 1, !alias.scope !47
  %277 = getelementptr i8, i8* %274, i64 16
  %278 = bitcast i8* %277 to <16 x i8>*
  %279 = load <16 x i8>, <16 x i8>* %278, align 1, !alias.scope !47
  %280 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %276, <16 x i8>* %280, align 1, !alias.scope !50, !noalias !47
  %281 = getelementptr i8, i8* %273, i64 16
  %282 = bitcast i8* %281 to <16 x i8>*
  store <16 x i8> %279, <16 x i8>* %282, align 1, !alias.scope !50, !noalias !47
  %283 = add i64 %271, 32
  %284 = add i64 %272, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %270, !llvm.loop !53

286:                                              ; preds = %270, %267
  %287 = icmp eq i64 %197, %208
  br i1 %287, label %298, label %288

288:                                              ; preds = %286, %199, %195
  %289 = phi i8* [ %193, %199 ], [ %193, %195 ], [ %209, %286 ]
  %290 = phi i8* [ %1, %199 ], [ %1, %195 ], [ %210, %286 ]
  br label %291

291:                                              ; preds = %288, %291
  %292 = phi i8* [ %295, %291 ], [ %289, %288 ]
  %293 = phi i8* [ %296, %291 ], [ %290, %288 ]
  %294 = load i8, i8* %293, align 1
  store i8 %294, i8* %292, align 1
  %295 = getelementptr inbounds i8, i8* %292, i64 1
  %296 = getelementptr inbounds i8, i8* %293, i64 1
  %297 = icmp eq i8* %296, %2
  br i1 %297, label %298, label %291, !llvm.loop !54

298:                                              ; preds = %291, %286, %191
  %299 = phi i8* [ %193, %191 ], [ %209, %286 ], [ %295, %291 ]
  store i8 0, i8* %299, align 1
  %300 = add i64 %20, %23
  %301 = load i8, i8* %7, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %300, i64* %304, align 8
  br label %307

305:                                              ; preds = %298
  %306 = trunc i64 %300 to i8
  store i8 %306, i8* %7, align 1
  br label %307

307:                                              ; preds = %305, %303, %175, %19
  ret %"class.std::__1::basic_string"* %0
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN3net11cookie_util29AdaptCookieAccessResultToBoolENS_12OnceCallbackIFvbEEEE3$_1JS7_EEEFvNS3_18CookieAccessResultEEE7RunOnceEPNS0_13BindStateBaseEOSA_"(%"class.base::internal::BindStateBase"* nocapture, %"struct.net::CookieAccessResult"* dereferenceable(20)) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.53", align 8
  %4 = alloca %"class.base::OnceCallback.53", align 8
  %5 = alloca %"struct.net::CookieAccessResult", align 4
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.53"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = bitcast %"struct.net::CookieAccessResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %8) #12
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void @_ZN3net18CookieAccessResultC1EOS0_(%"struct.net::CookieAccessResult"* nonnull %5, %"struct.net::CookieAccessResult"* dereferenceable(20) %1) #12
  %12 = getelementptr inbounds %"struct.net::CookieAccessResult", %"struct.net::CookieAccessResult"* %5, i64 0, i32 0
  %13 = call zeroext i1 @_ZNK3net21CookieInclusionStatus9IsIncludeEv(%"class.net::CookieInclusionStatus"* nonnull %12) #12
  %14 = bitcast %"class.base::OnceCallback.53"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback.53"* %3 to i64*
  store i64 %11, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %3, i64 0, i32 0
  %18 = inttoptr i64 %11 to %"class.base::internal::BindStateBase"*
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %18, i64 0, i32 1
  %20 = bitcast void ()** %19 to void (%"class.base::internal::BindStateBase"*, i1)**
  %21 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %20, align 8
  call void %21(%"class.base::internal::BindStateBase"* %18, i1 zeroext %13) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  call void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"* nonnull %5) #12
  %22 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %8) #12
  ret void
}

declare void @_ZN3net18CookieAccessResultC1EOS0_(%"struct.net::CookieAccessResult"*, %"struct.net::CookieAccessResult"* dereferenceable(20)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net18CookieAccessResultD1Ev(%"struct.net::CookieAccessResult"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare zeroext i1 @_ZNK3net21CookieInclusionStatus9IsIncludeEv(%"class.net::CookieInclusionStatus"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3net11cookie_util29AdaptCookieAccessResultToBoolENS_12OnceCallbackIFvbEEEE3$_1JS6_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net15CanonicalCookieENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.61"*, %"class.net::CanonicalCookie"* dereferenceable(144)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::CanonicalCookie"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.61"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 144
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 128102389400760775
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.61"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::CanonicalCookie"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 144
  %20 = icmp ult i64 %19, 64051194700380387
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 128102389400760775, %14 ]
  %28 = mul i64 %27, 144
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.net::CanonicalCookie"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.net::CanonicalCookie"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %33, i64 %9
  %35 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %33, i64 %32
  %36 = ptrtoint %"class.net::CanonicalCookie"* %35 to i64
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %34, %"class.net::CanonicalCookie"* dereferenceable(144) %1) #12
  %37 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %34, i64 1
  %38 = ptrtoint %"class.net::CanonicalCookie"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %39, align 8
  %41 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %3, align 8
  %42 = icmp eq %"class.net::CanonicalCookie"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.net::CanonicalCookie"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.net::CanonicalCookie"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.net::CanonicalCookie"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %46, i64 -1
  %49 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %47, i64 -1
  tail call void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"* %48, %"class.net::CanonicalCookie"* dereferenceable(144) %49) #12
  %50 = icmp eq %"class.net::CanonicalCookie"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.net::CanonicalCookie"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.net::CanonicalCookie"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.net::CanonicalCookie"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.net::CanonicalCookie"*
  %60 = icmp eq %"class.net::CanonicalCookie"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.net::CanonicalCookie"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.net::CanonicalCookie", %"class.net::CanonicalCookie"* %62, i64 -1
  tail call void @_ZN3net15CanonicalCookieD1Ev(%"class.net::CanonicalCookie"* %63) #12
  %64 = icmp eq %"class.net::CanonicalCookie"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN3net15CanonicalCookieC1ERKS0_(%"class.net::CanonicalCookie"*, %"class.net::CanonicalCookie"* dereferenceable(144)) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3net11cookie_util18CookieDomainAsHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN3net11cookie_util18CookieDomainAsHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!7 = distinct !{!7, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!8 = distinct !{!8, !9, !"_ZNK4GURL4hostEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4GURL4hostEv"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!12 = distinct !{!12, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!13 = distinct !{!13, !14, !"_ZNK4GURL6schemeEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4GURL6schemeEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_11__wrap_iterIPKcEEE5tokenEv"}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.isvectorized", i32 1}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.unroll.disable"}
!27 = distinct !{!27, !24}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN3net11cookie_util18CookieDomainAsHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!30 = distinct !{!30, !"_ZN3net11cookie_util18CookieDomainAsHostERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!36 = distinct !{!36, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!37 = !{i8 0, i8 2}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3net11cookie_util29AdaptCookieAccessResultToBoolENS2_IFvbEEEE3$_1JS6_EEEDcOT0_DpOT1_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN3net11cookie_util29AdaptCookieAccessResultToBoolENS2_IFvbEEEE3$_1JS6_EEEDcOT0_DpOT1_"}
!41 = distinct !{!41, !42, !"_ZN4base8BindOnceIZN3net11cookie_util29AdaptCookieAccessResultToBoolENS_12OnceCallbackIFvbEEEE3$_1JS5_EEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8BindOnceIZN3net11cookie_util29AdaptCookieAccessResultToBoolENS_12OnceCallbackIFvbEEEE3$_1JS5_EEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!43 = distinct !{!43, !24}
!44 = distinct !{!44, !26}
!45 = distinct !{!45, !46, !24}
!46 = !{!"llvm.loop.unroll.runtime.disable"}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !24}
!53 = distinct !{!53, !26}
!54 = distinct !{!54, !24}
