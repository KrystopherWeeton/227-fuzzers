; ModuleID = '../../third_party/blink/renderer/modules/accessibility/ax_node_object.cc'
source_filename = "../../third_party/blink/renderer/modules/accessibility/ax_node_object.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::HashSet.3144" = type { %"class.WTF::HashTable.3145" }
%"class.WTF::HashTable.3145" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::MathMLQualifiedName" = type { %"class.blink::QualifiedName" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.3420 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.3421 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.3422" = type { %"class.std::__1::__compressed_pair.3423" }
%"class.std::__1::__compressed_pair.3423" = type { %"struct.std::__1::__compressed_pair_elem.3424" }
%"struct.std::__1::__compressed_pair_elem.3424" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.3428" = type { %"class.std::__1::__compressed_pair.3429" }
%"class.std::__1::__compressed_pair.3429" = type { %"struct.std::__1::__compressed_pair_elem.3430" }
%"struct.std::__1::__compressed_pair_elem.3430" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1858", i64 }
%"class.std::__1::vector.1858" = type { %"class.std::__1::__vector_base.1859" }
%"class.std::__1::__vector_base.1859" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1860" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1860" = type { %"struct.std::__1::__compressed_pair_elem.1861" }
%"struct.std::__1::__compressed_pair_elem.1861" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashSet<blink::QualifiedName, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashSet<blink::QualifiedName, blink::QualifiedNameHash, WTF::HashTraits<blink::QualifiedName>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::StaticSingleton.4177" = type { %"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::FontSelectionValue>::InstanceStorage" = type { [2 x i8] }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::AXNodeObject" = type { %"class.blink::AXObject", i32, i32, %"class.blink::Member.318" }
%"class.blink::AXObject" = type { i32 (...)**, i32, %"class.blink::Member.2997", %"class.blink::HeapVector.2999", i8, i32, %"class.blink::LayoutRect", i32, i32, i8, %"class.blink::Member.2997", i32, i32, %"class.blink::FloatRect", %"class.blink::Member.3006" }
%"class.blink::HeapVector.2999" = type { %"class.WTF::Vector.3002" }
%"class.WTF::Vector.3002" = type { %"class.WTF::VectorBuffer.3003" }
%"class.WTF::VectorBuffer.3003" = type { %"class.WTF::VectorBufferBase.3004" }
%"class.WTF::VectorBufferBase.3004" = type { %"class.blink::Member.2997"*, i32, i32 }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member.2997" = type { %"class.blink::MemberBase.2998" }
%"class.blink::MemberBase.2998" = type { %"class.blink::AXObject"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.3006" = type { %"class.blink::MemberBase.3007" }
%"class.blink::MemberBase.3007" = type { %"class.blink::AXObjectCacheImpl"* }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.771", %"class.WTF::Vector.771", i8, i32, %"class.blink::Member.1004", %"class.blink::Member.1006", %"class.blink::Member.1008", %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.blink::Member.1014", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1022", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1028", %"class.blink::Member.1030", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1033", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.1056", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1065", double, double, i64, i64, %"class.blink::HeapHashSet.1067", %"class.blink::HeapHashSet.1074", i16, i8, %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::TextLinkColors", %"class.blink::Member.1411", i8, [7 x i8], %"class.blink::HeapHashMap.1413", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1420", %"class.blink::Member.1425", %"class.blink::Member.1427", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1438", %"class.blink::HeapVector.1440", %"class.std::__1::unique_ptr.1448", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1454", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1467", %"class.WTF::Vector.1469", i8, i8, %"class.std::__1::unique_ptr.1474", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1480", i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::DocumentTiming", %"class.blink::Member.1488", i8, i32, %"class.blink::Member.1490", %"class.blink::Member.1492", %"class.blink::Member.1494", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::Member.1496", %"class.WTF::HashMap.1498", %"class.blink::Member.1503", %"class.blink::Member.1505", %"class.blink::Member.1507", %"class.blink::Member.1509", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapHashSet.1511", i8, i32, %"class.blink::Member.1518", %"class.blink::Member.1520", i32, %"class.blink::Member.1522", %"class.blink::Member.1524", %"class.blink::Member.1526", %"class.std::__1::unique_ptr.1528", i64, %"class.std::__1::unique_ptr.1534", i32, i32, %"class.blink::Member.1545", %"class.blink::Member.1547", %"class.blink::Member.1549", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1551", %"class.WTF::Vector.1575", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1580", %"class.blink::Member.1587", %"class.std::__1::unique_ptr.1589", %"class.blink::Member.1595", i8, i8, %"class.WTF::String", %"class.blink::Member.1597", i8, [7 x i8], %"class.blink::HeapHashMap.1599", %"class.blink::HeapObserverSet", %"class.blink::Member.1613", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1615", i32, i8, i8, %"class.blink::WeakMember.1617", %"class.blink::Member.1618" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.997" }
%"class.blink::HeapHashMap.997" = type { %"class.WTF::HashMap.1000" }
%"class.WTF::HashMap.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"struct.WTF::KeyValuePair.1003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1003" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.774 }
%class.scoped_refptr.774 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.775", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.775" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1642", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1709", i32, i8, [3 x i8], %"class.blink::HeapVector.1711", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1719", %"class.blink::Member.1721", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1730", %"class.blink::Member.1853", %"class.blink::Member.1855", i8, [7 x i8] }>
%"class.blink::Supplementable.1642" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1643" }
%"class.blink::HeapHashMap.1643" = type { %"class.WTF::HashMap.1646" }
%"class.WTF::HashMap.1646" = type { %"class.WTF::HashTable.1647" }
%"class.WTF::HashTable.1647" = type <{ %"struct.WTF::KeyValuePair.1649"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1649" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1658" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1650" }
%"class.blink::HeapObserverSet.1650" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1651" }
%"class.blink::HeapHashSet.1651" = type { %"class.WTF::HashSet.1654" }
%"class.WTF::HashSet.1654" = type { %"class.WTF::HashTable.1655" }
%"class.WTF::HashTable.1655" = type <{ %"class.blink::WeakMember.1657"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1657" = type opaque
%"class.blink::Supplementable.1658" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1659" }
%"class.blink::HeapHashMap.1659" = type { %"class.WTF::HashMap.1662" }
%"class.WTF::HashMap.1662" = type { %"class.WTF::HashTable.1663" }
%"class.WTF::HashTable.1663" = type <{ %"struct.WTF::KeyValuePair.1665"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1665" = type { i8*, %"class.blink::Member.4006" }
%"class.blink::Member.4006" = type { %"class.blink::MemberBase.4007" }
%"class.blink::MemberBase.4007" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.4008" }
%"class.blink::Member.4008" = type { %"class.blink::MemberBase.4009" }
%"class.blink::MemberBase.4009" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1666, %"class.std::__1::unique_ptr.1675", %"class.std::__1::unique_ptr.1675", %"class.std::__1::unique_ptr.1699", %"class.std::__1::unique_ptr.1699", %"class.blink::Member.1006", i32, [4 x i8], %"class.WTF::HashSet.1705", i32, i32 }
%class.scoped_refptr.1666 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1667", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1669", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1674 }
%"class.WTF::RefCounted.1667" = type { %"class.base::RefCounted.1668" }
%"class.base::RefCounted.1668" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1669" = type { %"class.absl::optional_internal::optional_data.1670" }
%"class.absl::optional_internal::optional_data.1670" = type { %"class.absl::optional_internal::optional_data_base.1671" }
%"class.absl::optional_internal::optional_data_base.1671" = type { %"class.absl::optional_internal::optional_data_dtor_base.1672" }
%"class.absl::optional_internal::optional_data_dtor_base.1672" = type { i8, %union.anon.1673 }
%union.anon.1673 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1674 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1675" = type { %"class.std::__1::__compressed_pair.1676" }
%"class.std::__1::__compressed_pair.1676" = type { %"struct.std::__1::__compressed_pair_elem.1677" }
%"struct.std::__1::__compressed_pair_elem.1677" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1686", %"class.std::__1::map.1695"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1669" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1678", %"class.std::__1::__compressed_pair.1683" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1683" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1686" = type { %"class.std::__1::__tree.1687" }
%"class.std::__1::__tree.1687" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1688", %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1688" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1695" = type opaque
%"class.std::__1::unique_ptr.1699" = type { %"class.std::__1::__compressed_pair.1700" }
%"class.std::__1::__compressed_pair.1700" = type { %"struct.std::__1::__compressed_pair_elem.1701" }
%"struct.std::__1::__compressed_pair_elem.1701" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1705" = type { %"class.WTF::HashTable.1706" }
%"class.WTF::HashTable.1706" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1709" = type { %"class.blink::MemberBase.1710" }
%"class.blink::MemberBase.1710" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1711" = type { %"class.WTF::Vector.1714" }
%"class.WTF::Vector.1714" = type { %"class.WTF::VectorBuffer.1715" }
%"class.WTF::VectorBuffer.1715" = type { %"class.WTF::VectorBufferBase.1716" }
%"class.WTF::VectorBufferBase.1716" = type { %"class.blink::Member.1717"*, i32, i32 }
%"class.blink::Member.1717" = type opaque
%"class.blink::Member.1719" = type { %"class.blink::MemberBase.1720" }
%"class.blink::MemberBase.1720" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1721" = type { %"class.blink::MemberBase.1722" }
%"class.blink::MemberBase.1722" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1723", i32, i32 }
%"class.blink::HeapHashMap.1723" = type { %"class.WTF::HashMap.1726" }
%"class.WTF::HashMap.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"struct.WTF::KeyValuePair.1729"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1729" = type opaque
%"class.std::__1::unique_ptr.1730" = type { %"class.std::__1::__compressed_pair.1731" }
%"class.std::__1::__compressed_pair.1731" = type { %"struct.std::__1::__compressed_pair_elem.1732" }
%"struct.std::__1::__compressed_pair_elem.1732" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1733" }
%"class.std::__1::unique_ptr.1733" = type { %"class.std::__1::__compressed_pair.1734" }
%"class.std::__1::__compressed_pair.1734" = type { %"struct.std::__1::__compressed_pair_elem.1735" }
%"struct.std::__1::__compressed_pair_elem.1735" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1736" }
%"class.WTF::Vector.1736" = type { %"class.WTF::VectorBuffer.1737" }
%"class.WTF::VectorBuffer.1737" = type { %"class.WTF::VectorBufferBase.1738" }
%"class.WTF::VectorBufferBase.1738" = type { %"class.mojo::StructPtr.1739"*, i32, i32 }
%"class.mojo::StructPtr.1739" = type { %"class.std::__1::unique_ptr.1740" }
%"class.std::__1::unique_ptr.1740" = type { %"class.std::__1::__compressed_pair.1741" }
%"class.std::__1::__compressed_pair.1741" = type { %"struct.std::__1::__compressed_pair_elem.1742" }
%"struct.std::__1::__compressed_pair_elem.1742" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1743", %"class.WTF::HashMap.1750", %"class.WTF::HashMap.1755", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1760", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1743" = type { %"class.std::__1::unique_ptr.1744" }
%"class.std::__1::unique_ptr.1744" = type { %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1750" = type { %"class.WTF::HashTable.1751" }
%"class.WTF::HashTable.1751" = type <{ %"struct.WTF::KeyValuePair.1754"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1754" = type opaque
%"class.WTF::HashMap.1755" = type { %"class.WTF::HashTable.1756" }
%"class.WTF::HashTable.1756" = type <{ %"struct.WTF::KeyValuePair.1759"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1759" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1760" = type { %"class.std::__1::unique_ptr.1761" }
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1844" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1775", i32 }>
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1778", %"class.absl::optional.1779", %"class.absl::optional.1784", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1797", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1819", %"class.std::__1::map.1830", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1839", i8, %class.scoped_refptr.1789, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1840" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1778" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1779" = type { %"class.absl::optional_internal::optional_data.1780" }
%"class.absl::optional_internal::optional_data.1780" = type { %"class.absl::optional_internal::optional_data_base.1781" }
%"class.absl::optional_internal::optional_data_base.1781" = type { %"class.absl::optional_internal::optional_data_dtor_base.1782" }
%"class.absl::optional_internal::optional_data_dtor_base.1782" = type { i8, %union.anon.1783 }
%union.anon.1783 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1784" = type { %"class.absl::optional_internal::optional_data.1785" }
%"class.absl::optional_internal::optional_data.1785" = type { %"class.absl::optional_internal::optional_data_base.1786" }
%"class.absl::optional_internal::optional_data_base.1786" = type { %"class.absl::optional_internal::optional_data_dtor_base.1787" }
%"class.absl::optional_internal::optional_data_dtor_base.1787" = type { i8, %union.anon.1788 }
%union.anon.1788 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1789, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1790" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1790" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.993 }
%class.scoped_refptr.993 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1795 }
%class.scoped_refptr.1795 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1857", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1789, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1857" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1796 }
%class.scoped_refptr.1796 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1800", %class.scoped_refptr.1801 }
%"class.base::RepeatingCallback.1800" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1801 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1802", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1802" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1806", %"class.std::__1::unique_ptr.1812", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1818" }
%"class.std::__1::unique_ptr.1806" = type { %"class.std::__1::__compressed_pair.1807" }
%"class.std::__1::__compressed_pair.1807" = type { %"struct.std::__1::__compressed_pair_elem.1808" }
%"struct.std::__1::__compressed_pair_elem.1808" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1812" = type { %"class.std::__1::__compressed_pair.1813" }
%"class.std::__1::__compressed_pair.1813" = type { %"struct.std::__1::__compressed_pair_elem.1814" }
%"struct.std::__1::__compressed_pair_elem.1814" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1818" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1819" = type { %"class.std::__1::__tree.1820" }
%"class.std::__1::__tree.1820" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1821", %"class.std::__1::__compressed_pair.1825" }
%"class.std::__1::__compressed_pair.1821" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"class.std::__1::__compressed_pair.1825" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1830" = type { %"class.std::__1::__tree.1831" }
%"class.std::__1::__tree.1831" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1832", %"class.std::__1::__compressed_pair.1836" }
%"class.std::__1::__compressed_pair.1832" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"class.std::__1::__compressed_pair.1836" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1839" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1789 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.779" }>
%"class.base::RefCountedThreadSafe.779" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1840" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1844" = type { %"class.std::__1::__compressed_pair.1845" }
%"class.std::__1::__compressed_pair.1845" = type { %"struct.std::__1::__compressed_pair_elem.1846" }
%"struct.std::__1::__compressed_pair_elem.1846" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1853" = type { %"class.blink::MemberBase.1854" }
%"class.blink::MemberBase.1854" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1855" = type { %"class.blink::MemberBase.1856" }
%"class.blink::MemberBase.1856" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1016" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.blink::KURL"* }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1032 }
%class.scoped_refptr.1032 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1036 }
%class.scoped_refptr.1036 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1037", i32, i32, %"class.blink::Persistent.1039" }
%"class.WTF::RefCounted.1037" = type { %"class.base::RefCounted.1038" }
%"class.base::RefCounted.1038" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1039" = type { %"class.blink::PersistentBase.1040" }
%"class.blink::PersistentBase.1040" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1043" }
%"class.blink::HeapHashMap.1043" = type { %"class.WTF::HashMap.1046" }
%"class.WTF::HashMap.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type { %"class.blink::WeakMember.1050", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1058" }
%"class.blink::HeapHashMap.1058" = type { %"class.WTF::HashMap.1061" }
%"class.WTF::HashMap.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"struct.WTF::KeyValuePair.1064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1064" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1067" = type { %"class.WTF::HashSet.1070" }
%"class.WTF::HashSet.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"class.blink::WeakMember.1073"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1073" = type opaque
%"class.blink::HeapHashSet.1074" = type { %"class.WTF::HashSet.1077" }
%"class.WTF::HashSet.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"class.blink::WeakMember.1080"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1080" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1087", %"class.blink::Member.1114", %"class.blink::HeapHashMap.1116", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1123", %"class.blink::HeapHashSet.1123", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1129", %"class.blink::Member.1141", %"class.blink::Member.1170", %"class.blink::Member.1172", %"class.blink::Member.1178", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1340", %"class.blink::Member.1346", %"class.blink::HeapHashMap.1348", %"class.blink::HeapHashMap.1355", %"class.std::__1::unique_ptr.1362", i32, %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1099", %"class.blink::HeapHashSet.1376", %"class.blink::HeapHashMap.1383", %"class.blink::Member.1390", %"class.blink::HeapHashMap.1392", %class.scoped_refptr.1399, %class.scoped_refptr.259, %"class.blink::Member.1304", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1400", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1091", %"class.blink::HeapVector.1099", i8 }>
%"class.blink::HeapVector.1091" = type { %"class.WTF::Vector.1094" }
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { %"class.blink::Member.1097"*, i32, i32 }
%"class.blink::Member.1097" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1110", %"class.blink::Member.1112", %"class.blink::Member.1112", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1110" = type <{ %"class.blink::Member.1112"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1112", %"class.blink::Member.1112" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1116" = type { %"class.WTF::HashMap.1119" }
%"class.WTF::HashMap.1119" = type { %"class.WTF::HashTable.1120" }
%"class.WTF::HashTable.1120" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.blink::HeapHashSet.1123" = type { %"class.WTF::HashSet.1126" }
%"class.WTF::HashSet.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1131", %"class.blink::Member.1133" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1137", %"class.blink::Member.1139" }
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1633", %"class.blink::Member.1133", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.911] }
%"class.blink::HeapVector.1633" = type { %"class.WTF::Vector.1636" }
%"class.WTF::Vector.1636" = type { %"class.WTF::VectorBuffer.1637" }
%"class.WTF::VectorBuffer.1637" = type { %"class.WTF::VectorBufferBase.1638" }
%"class.WTF::VectorBufferBase.1638" = type { %"class.blink::Member.1139"*, i32, i32 }
%class.sk_sp.911 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.912, i32, %"class.absl::optional.913", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.912 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.913" = type { %"class.absl::optional_internal::optional_data.914" }
%"class.absl::optional_internal::optional_data.914" = type { %"class.absl::optional_internal::optional_data_base.915" }
%"class.absl::optional_internal::optional_data_base.915" = type { %"class.absl::optional_internal::optional_data_dtor_base.916" }
%"class.absl::optional_internal::optional_data_dtor_base.916" = type { i8, %union.anon.917 }
%union.anon.917 = type { %struct.SkRect }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1114", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1145" }
%"class.blink::HeapHashMap.1145" = type { %"class.WTF::HashMap.1148" }
%"class.WTF::HashMap.1148" = type { %"class.WTF::HashTable.1149" }
%"class.WTF::HashTable.1149" = type <{ %"struct.WTF::KeyValuePair.1151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1151" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1865", [4 x i8] }>
%"class.WTF::RefCounted.1865" = type { %"class.base::RefCounted.1866" }
%"class.base::RefCounted.1866" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.4010" }
%"class.WTF::Vector.4010" = type { %"class.WTF::VectorBuffer.4011" }
%"class.WTF::VectorBuffer.4011" = type { %"class.WTF::VectorBufferBase.4012" }
%"class.WTF::VectorBufferBase.4012" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.4015", %"class.absl::optional.4015", %"class.absl::optional.4015" }
%"class.absl::optional.4015" = type { %"class.absl::optional_internal::optional_data.4016" }
%"class.absl::optional_internal::optional_data.4016" = type { %"class.absl::optional_internal::optional_data_base.4017" }
%"class.absl::optional_internal::optional_data_base.4017" = type { %"class.absl::optional_internal::optional_data_dtor_base.4018" }
%"class.absl::optional_internal::optional_data_dtor_base.4018" = type { i8, %union.anon.4019 }
%union.anon.4019 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.4020 }
%class.scoped_refptr.4020 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.4021", %"class.WTF::Vector.630", %"class.WTF::Vector.4023", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.4021" = type { %"class.base::RefCounted.4022" }
%"class.base::RefCounted.4022" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.4023" = type { %"class.WTF::VectorBuffer.4024" }
%"class.WTF::VectorBuffer.4024" = type { %"class.WTF::VectorBufferBase.4025" }
%"class.WTF::VectorBufferBase.4025" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.4026 }
%union.anon.4026 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.995", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.995" = type { %"class.base::RefCounted.996" }
%"class.base::RefCounted.996" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.4030" }
%"class.WTF::VectorBuffer.4030" = type { %"class.WTF::VectorBufferBase.4031", [32 x i8] }
%"class.WTF::VectorBufferBase.4031" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1152", %"class.std::__1::unique_ptr.1164" }
%"class.blink::HeapVector.1152" = type { %"class.WTF::Vector.1155" }
%"class.WTF::Vector.1155" = type { %"class.WTF::VectorBuffer.1156" }
%"class.WTF::VectorBuffer.1156" = type { %"class.WTF::VectorBufferBase.1157" }
%"class.WTF::VectorBufferBase.1157" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1158" }
%"class.WTF::Vector.1158" = type { %"class.WTF::VectorBuffer.1159" }
%"class.WTF::VectorBuffer.1159" = type { %"class.WTF::VectorBufferBase.1160", [16 x i8] }
%"class.WTF::VectorBufferBase.1160" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1176", i8, [7 x i8] }>
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1200", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1187", %class.scoped_refptr.1192, %class.scoped_refptr.1199, %class.scoped_refptr.1198, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"struct.WTF::KeyValuePair.1186"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1186" = type { %"class.WTF::AtomicString", %class.scoped_refptr.4097 }
%class.scoped_refptr.4097 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1193" = type { %"class.base::RefCounted.1194" }
%"class.base::RefCounted.1194" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1195" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1196" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1197" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1187" = type { %"class.WTF::HashTable.1188" }
%"class.WTF::HashTable.1188" = type <{ %"struct.WTF::KeyValuePair.1191"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1191" = type opaque
%class.scoped_refptr.1192 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1198, %class.scoped_refptr.1198 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1199 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1198 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1247", %"class.blink::HeapVector.1255", %"class.blink::HeapVector.1263", %"class.blink::HeapVector.1280", %"class.blink::HeapVector.1288", %"class.blink::HeapVector.1296", %"class.blink::HeapVector.1309", %"class.WTF::Vector.1316", i32, %"class.blink::Member.1322" }
%"class.blink::HeapHashMap.1204" = type { %"class.WTF::HashMap.1207" }
%"class.WTF::HashMap.1207" = type { %"class.WTF::HashTable.1208" }
%"class.WTF::HashTable.1208" = type <{ %"struct.WTF::KeyValuePair.1210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1210" = type { %"class.WTF::AtomicString", %"class.blink::Member.4107" }
%"class.blink::Member.4107" = type { %"class.blink::MemberBase.4108" }
%"class.blink::MemberBase.4108" = type { %"class.blink::HeapVector.1211"* }
%"class.blink::HeapVector.1211" = type { %"class.WTF::Vector.1214" }
%"class.WTF::Vector.1214" = type { %"class.WTF::VectorBuffer.1215" }
%"class.WTF::VectorBuffer.1215" = type { %"class.WTF::VectorBufferBase.1216" }
%"class.WTF::VectorBufferBase.1216" = type { %"class.blink::Member.1217"*, i32, i32 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1221", i64, [4 x i32] }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1242" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1247" = type { %"class.WTF::Vector.1250" }
%"class.WTF::Vector.1250" = type { %"class.WTF::VectorBuffer.1251" }
%"class.WTF::VectorBuffer.1251" = type { %"class.WTF::VectorBufferBase.1252" }
%"class.WTF::VectorBufferBase.1252" = type { %"class.blink::Member.1253"*, i32, i32 }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.4103" }
%"class.blink::MemberBase.4103" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1255" = type { %"class.WTF::Vector.1258" }
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.1260" }
%"class.WTF::VectorBufferBase.1260" = type { %"class.blink::Member.1261"*, i32, i32 }
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.4104" }
%"class.blink::MemberBase.4104" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1263" = type { %"class.WTF::Vector.1266" }
%"class.WTF::Vector.1266" = type { %"class.WTF::VectorBuffer.1267" }
%"class.WTF::VectorBuffer.1267" = type { %"class.WTF::VectorBufferBase.1268" }
%"class.WTF::VectorBufferBase.1268" = type { %"class.blink::Member.1269"*, i32, i32 }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1271", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1271" = type { %"class.WTF::Vector.1274" }
%"class.WTF::Vector.1274" = type { %"class.WTF::VectorBuffer.1275" }
%"class.WTF::VectorBuffer.1275" = type { %"class.WTF::VectorBufferBase.1276" }
%"class.WTF::VectorBufferBase.1276" = type { %"class.blink::Member.1277"*, i32, i32 }
%"class.blink::Member.1277" = type opaque
%"class.blink::HeapVector.1280" = type { %"class.WTF::Vector.1283" }
%"class.WTF::Vector.1283" = type { %"class.WTF::VectorBuffer.1284" }
%"class.WTF::VectorBuffer.1284" = type { %"class.WTF::VectorBufferBase.1285" }
%"class.WTF::VectorBufferBase.1285" = type { %"class.blink::Member.1286"*, i32, i32 }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.4105" }
%"class.blink::MemberBase.4105" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1288" = type { %"class.WTF::Vector.1291" }
%"class.WTF::Vector.1291" = type { %"class.WTF::VectorBuffer.1292" }
%"class.WTF::VectorBuffer.1292" = type { %"class.WTF::VectorBufferBase.1293" }
%"class.WTF::VectorBufferBase.1293" = type { %"class.blink::Member.1294"*, i32, i32 }
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.4106" }
%"class.blink::MemberBase.4106" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", i32, [4 x i8] }>
%"class.blink::HeapVector.1296" = type { %"class.WTF::Vector.1299" }
%"class.WTF::Vector.1299" = type { %"class.WTF::VectorBuffer.1300" }
%"class.WTF::VectorBuffer.1300" = type { %"class.WTF::VectorBufferBase.1301" }
%"class.WTF::VectorBufferBase.1301" = type { %"class.blink::Member.1302"*, i32, i32 }
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304" }
%"class.blink::HeapVector.1309" = type { %"class.WTF::Vector.1312" }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1221", i32, i32 }
%"class.WTF::Vector.1316" = type { %"class.WTF::VectorBuffer.1317" }
%"class.WTF::VectorBuffer.1317" = type { %"class.WTF::VectorBufferBase.1318" }
%"class.WTF::VectorBufferBase.1318" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1319, i8, [7 x i8] }>
%class.scoped_refptr.1319 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326" }
%"class.blink::HeapHashMap.1326" = type { %"class.WTF::HashMap.1329" }
%"class.WTF::HashMap.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.WTF::KeyValuePair.1332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1332" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1333" }
%"class.blink::HeapHashMap.1333" = type { %"class.WTF::HashMap.1336" }
%"class.WTF::HashMap.1336" = type { %"class.WTF::HashTable.1337" }
%"class.WTF::HashTable.1337" = type <{ %"struct.WTF::KeyValuePair.1339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1339" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.4098", %"class.WTF::Vector.4098" }
%"class.WTF::Vector.4098" = type { %"class.WTF::VectorBuffer.4099" }
%"class.WTF::VectorBuffer.4099" = type { %"class.WTF::VectorBufferBase.4100" }
%"class.WTF::VectorBufferBase.4100" = type { %class.scoped_refptr.4097*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1340" = type { %"class.WTF::HashSet.1343" }
%"class.WTF::HashSet.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1348" = type { %"class.WTF::HashMap.1351" }
%"class.WTF::HashMap.1351" = type { %"class.WTF::HashTable.1352" }
%"class.WTF::HashTable.1352" = type <{ %"struct.WTF::KeyValuePair.1354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1354" = type opaque
%"class.blink::HeapHashMap.1355" = type { %"class.WTF::HashMap.1358" }
%"class.WTF::HashMap.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"struct.WTF::KeyValuePair.1361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1361" = type opaque
%"class.std::__1::unique_ptr.1362" = type { %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1368" = type { %"class.WTF::Vector.1371" }
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.std::__1::pair.1374"*, i32, i32 }
%"struct.std::__1::pair.1374" = type opaque
%"class.blink::HeapVector.1099" = type { %"class.WTF::Vector.1102" }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"struct.std::__1::pair.1105"*, i32, i32 }
%"struct.std::__1::pair.1105" = type opaque
%"class.blink::HeapHashSet.1376" = type { %"class.WTF::HashSet.1379" }
%"class.WTF::HashSet.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"class.blink::WeakMember.1382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1382" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1383" = type { %"class.WTF::HashMap.1386" }
%"class.WTF::HashMap.1386" = type { %"class.WTF::HashTable.1387" }
%"class.WTF::HashTable.1387" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type { %"class.WTF::AtomicString", %"class.blink::Member.1269" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1392" = type { %"class.WTF::HashMap.1395" }
%"class.WTF::HashMap.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"struct.WTF::KeyValuePair.1398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1398" = type opaque
%class.scoped_refptr.1399 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1400" = type { %"class.WTF::HashSet.1403" }
%"class.WTF::HashSet.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"class.blink::Member.1406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1406" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1413" = type { %"class.WTF::HashMap.1416" }
%"class.WTF::HashMap.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"struct.WTF::KeyValuePair.1419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1419" = type opaque
%"class.WTF::Vector.1420" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::HeapHashMap.1431", %"class.blink::DocumentMarker::MarkerTypes", %"class.blink::Member.326" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1055" }
%"class.blink::WeakMember.1055" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashMap.1431" = type { %"class.WTF::HashMap.1434" }
%"class.WTF::HashMap.1434" = type { %"class.WTF::HashTable.1435" }
%"class.WTF::HashTable.1435" = type <{ %"struct.WTF::KeyValuePair.1437"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1437" = type opaque
%"class.blink::DocumentMarker::MarkerTypes" = type { i32 }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1440" = type { %"class.WTF::Vector.1443" }
%"class.WTF::Vector.1443" = type { %"class.WTF::VectorBuffer.1444" }
%"class.WTF::VectorBuffer.1444" = type { %"class.WTF::VectorBufferBase.1445" }
%"class.WTF::VectorBufferBase.1445" = type { %"class.blink::Member.1446"*, i32, i32 }
%"class.blink::Member.1446" = type opaque
%"class.std::__1::unique_ptr.1448" = type { %"class.std::__1::__compressed_pair.1449" }
%"class.std::__1::__compressed_pair.1449" = type { %"struct.std::__1::__compressed_pair_elem.1450" }
%"struct.std::__1::__compressed_pair_elem.1450" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1454" = type { %"class.WTF::HashSet.1457" }
%"class.WTF::HashSet.1457" = type { %"class.WTF::HashTable.1458" }
%"class.WTF::HashTable.1458" = type <{ %"class.blink::WeakMember.1460"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1460" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1461", i32, [4 x i8] }>
%"class.WTF::Vector.1461" = type { %"class.WTF::VectorBuffer.1462" }
%"class.WTF::VectorBuffer.1462" = type { %"class.WTF::VectorBufferBase.1463" }
%"class.WTF::VectorBufferBase.1463" = type { %"struct.std::__1::pair.1464"*, i32, i32 }
%"struct.std::__1::pair.1464" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1469" = type { %"class.WTF::VectorBuffer.1470" }
%"class.WTF::VectorBuffer.1470" = type { %"class.WTF::VectorBufferBase.1471" }
%"class.WTF::VectorBufferBase.1471" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1474" = type { %"class.std::__1::__compressed_pair.1475" }
%"class.std::__1::__compressed_pair.1475" = type { %"struct.std::__1::__compressed_pair_elem.1476" }
%"struct.std::__1::__compressed_pair_elem.1476" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1978", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2205", %"class.std::__1::unique_ptr.2211", %"class.std::__1::unique_ptr.2217", %class.scoped_refptr.1974, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2223", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1927", %"class.std::__1::unique_ptr.1947" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1883, %"class.WTF::Vector.1884", %"class.std::__1::unique_ptr.1889", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1910, %"class.blink::Persistent.1911" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.860", %"class.std::__1::unique_ptr.971", i8, %"class.absl::optional.977", %class.scoped_refptr.953, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.982" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.753", %"class.blink::Persistent.759", %"class.std::__1::unique_ptr.819", %"class.blink::CullRect", %"class.std::__1::unique_ptr.835" }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.759" = type { %"class.blink::PersistentBase.760" }
%"class.blink::PersistentBase.760" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.786", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.814" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.763", %"class.blink::Member.765", %"class.blink::Member.767", %"class.blink::Member.769", %"class.WTF::Vector.771", i16, %class.scoped_refptr.778 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%class.scoped_refptr.778 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.780", %"class.blink::Member.782", %"class.blink::Member.782", i8, [7 x i8] }>
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.784", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.994", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.778, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.994" = type { %"class.blink::MemberBase.783" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.784", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.789", %"class.absl::optional.794", i8, i8, %"class.WTF::Vector.804" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.793" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.799" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.absl::optional.814" = type { %"class.absl::optional_internal::optional_data.815" }
%"class.absl::optional_internal::optional_data.815" = type { %"class.absl::optional_internal::optional_data_base.816" }
%"class.absl::optional_internal::optional_data_base.816" = type { %"class.absl::optional_internal::optional_data_dtor_base.817" }
%"class.absl::optional_internal::optional_data_dtor_base.817" = type { i8, %union.anon.818 }
%union.anon.818 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.822", %"class.WTF::Vector.822", %"class.WTF::HashMap.827", %"class.WTF::Vector.822", i8, [7 x i8] }>
%"class.WTF::HashMap.827" = type { %"class.WTF::HashTable.828" }
%"class.WTF::HashTable.828" = type <{ %"struct.WTF::KeyValuePair.831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.831" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.838", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.844", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.850", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.850" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.898, %class.scoped_refptr.902, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.943, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.967 }
%class.scoped_refptr.863 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.880" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.864", i8, i8, %class.scoped_refptr.866, i32, i32 }
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.866 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.873, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.874", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.867" }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.899", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.899" = type { %"class.WTF::RefCounted.900", i8, i8, %class.scoped_refptr.873, i32, i32 }
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.794" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.883", %"class.std::__1::unique_ptr.889", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.898 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.902 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.903 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.904" }
%"class.blink::PaintPropertyNode.904" = type { %"class.WTF::RefCounted.905", i8, i8, %class.scoped_refptr.907, i32, i32 }
%"class.WTF::RefCounted.905" = type { %"class.base::RefCounted.906" }
%"class.base::RefCounted.906" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.907 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.866, %class.scoped_refptr.908, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.930", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.908 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.945" }
%"class.blink::PaintPropertyNode.945" = type { %"class.WTF::RefCounted.946", i8, i8, %class.scoped_refptr.908, i32, i32 }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.909" }
%"class.std::__1::vector.909" = type { %"class.std::__1::__vector_base.910" }
%"class.std::__1::__vector_base.910" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.925" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.911, [20 x float], i32, [4 x i8], %"class.std::__1::vector.918", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.920" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.936" }
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { i32*, i32*, %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { i32* }
%class.scoped_refptr.943 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.944 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.956" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.866, %"class.absl::optional.948", %class.scoped_refptr.953, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.948" = type { %"class.absl::optional_internal::optional_data.949" }
%"class.absl::optional_internal::optional_data.949" = type { %"class.absl::optional_internal::optional_data_base.950" }
%"class.absl::optional_internal::optional_data_base.950" = type { %"class.absl::optional_internal::optional_data_dtor_base.951" }
%"class.absl::optional_internal::optional_data_dtor_base.951" = type { i8, [3 x i8], %union.anon.952 }
%union.anon.952 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.959", i32, [4 x i8] }>
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.967 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.866, %class.scoped_refptr.908, %class.scoped_refptr.907 }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, %union.anon.981 }
%union.anon.981 = type { %"class.blink::IntRect" }
%class.scoped_refptr.953 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.954", [4 x i8] }
%"class.WTF::RefCounted.954" = type { %"class.base::RefCounted.955" }
%"class.base::RefCounted.955" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1883 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886", [8 x i8] }
%"class.WTF::VectorBufferBase.1886" = type { %class.scoped_refptr.1883*, i32, i32 }
%"class.std::__1::unique_ptr.1889" = type { %"class.std::__1::__compressed_pair.1890" }
%"class.std::__1::__compressed_pair.1890" = type { %"struct.std::__1::__compressed_pair_elem.1891" }
%"struct.std::__1::__compressed_pair_elem.1891" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1892", %"class.absl::optional.1897", %"class.absl::optional.1902" }
%"class.absl::optional.1892" = type { %"class.absl::optional_internal::optional_data.1893" }
%"class.absl::optional_internal::optional_data.1893" = type { %"class.absl::optional_internal::optional_data_base.1894" }
%"class.absl::optional_internal::optional_data_base.1894" = type { %"class.absl::optional_internal::optional_data_dtor_base.1895" }
%"class.absl::optional_internal::optional_data_dtor_base.1895" = type { i8, %union.anon.1896 }
%union.anon.1896 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1897" = type { %"class.absl::optional_internal::optional_data.1898" }
%"class.absl::optional_internal::optional_data.1898" = type { %"class.absl::optional_internal::optional_data_base.1899" }
%"class.absl::optional_internal::optional_data_base.1899" = type { %"class.absl::optional_internal::optional_data_dtor_base.1900" }
%"class.absl::optional_internal::optional_data_dtor_base.1900" = type { i8, [3 x i8], %union.anon.1901 }
%union.anon.1901 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1902" = type { %"class.absl::optional_internal::optional_data.1903" }
%"class.absl::optional_internal::optional_data.1903" = type { %"class.absl::optional_internal::optional_data_base.1904" }
%"class.absl::optional_internal::optional_data_base.1904" = type { %"class.absl::optional_internal::optional_data_dtor_base.1905" }
%"class.absl::optional_internal::optional_data_dtor_base.1905" = type { i8, %union.anon.1906 }
%union.anon.1906 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1910 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1867", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1867" = type { %"class.std::__1::__compressed_pair.1868" }
%"class.std::__1::__compressed_pair.1868" = type { %"struct.std::__1::__compressed_pair_elem.1869" }
%"struct.std::__1::__compressed_pair_elem.1869" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1870", %"class.absl::optional.1875" }
%"class.absl::optional.1870" = type { %"class.absl::optional_internal::optional_data.1871" }
%"class.absl::optional_internal::optional_data.1871" = type { %"class.absl::optional_internal::optional_data_base.1872" }
%"class.absl::optional_internal::optional_data_base.1872" = type { %"class.absl::optional_internal::optional_data_dtor_base.1873" }
%"class.absl::optional_internal::optional_data_dtor_base.1873" = type { i8, %union.anon.1874 }
%union.anon.1874 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1875" = type { %"class.absl::optional_internal::optional_data.1876" }
%"class.absl::optional_internal::optional_data.1876" = type { %"class.absl::optional_internal::optional_data_base.1877" }
%"class.absl::optional_internal::optional_data_base.1877" = type { %"class.absl::optional_internal::optional_data_dtor_base.1878" }
%"class.absl::optional_internal::optional_data_dtor_base.1878" = type { i8, %union.anon.1879 }
%union.anon.1879 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1911" = type { %"class.blink::PersistentBase.1912" }
%"class.blink::PersistentBase.1912" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1915", %"struct.blink::PhysicalRect", %"class.blink::Member.1925" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1915" = type { %"class.std::__1::__compressed_pair.1916" }
%"class.std::__1::__compressed_pair.1916" = type { %"struct.std::__1::__compressed_pair_elem.1917" }
%"struct.std::__1::__compressed_pair_elem.1917" = type { %"class.WTF::HashSet.1918"* }
%"class.WTF::HashSet.1918" = type { %"class.WTF::HashTable.1919" }
%"class.WTF::HashTable.1919" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1927" = type { %"class.blink::PersistentBase.1928" }
%"class.blink::PersistentBase.1928" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1931", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1931" = type { %"class.std::__1::__compressed_pair.1932" }
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.1933" }
%"struct.std::__1::__compressed_pair_elem.1933" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1934", %"class.WTF::HashMap.1939", %"class.WTF::String" }
%"class.WTF::Vector.1934" = type { %"class.WTF::VectorBuffer.1935" }
%"class.WTF::VectorBuffer.1935" = type { %"class.WTF::VectorBufferBase.1936" }
%"class.WTF::VectorBufferBase.1936" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1939" = type { %"class.WTF::HashTable.1940" }
%"class.WTF::HashTable.1940" = type <{ %"struct.WTF::KeyValuePair.1943"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1943" = type opaque
%"class.std::__1::unique_ptr.1947" = type { %"class.std::__1::__compressed_pair.1948" }
%"class.std::__1::__compressed_pair.1948" = type { %"struct.std::__1::__compressed_pair_elem.1949" }
%"struct.std::__1::__compressed_pair_elem.1949" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1950", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1950" = type { %"class.WTF::HashTable.1953", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1953" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1956", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1956" = type { %"class.std::__1::__compressed_pair.1957" }
%"class.std::__1::__compressed_pair.1957" = type { %"struct.std::__1::__compressed_pair_elem.1958" }
%"struct.std::__1::__compressed_pair_elem.1958" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1959, %"class.std::__1::unique_ptr.1960", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1867", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1959 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2849", i16, %class.scoped_refptr.1959 }
%"class.WTF::ThreadSafeRefCounted.2849" = type { %"class.base::RefCountedThreadSafe.2850" }
%"class.base::RefCountedThreadSafe.2850" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1960" = type { %"class.std::__1::__compressed_pair.1961" }
%"class.std::__1::__compressed_pair.1961" = type { %"struct.std::__1::__compressed_pair_elem.1962" }
%"struct.std::__1::__compressed_pair_elem.1962" = type { %"class.WTF::Vector.1963"* }
%"class.WTF::Vector.1963" = type { %"class.WTF::VectorBuffer.1964" }
%"class.WTF::VectorBuffer.1964" = type { %"class.WTF::VectorBufferBase.1965" }
%"class.WTF::VectorBufferBase.1965" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1974, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1978" = type { %"class.blink::MemberBase.1979" }
%"class.blink::MemberBase.1979" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1982", %"class.blink::Member.1987", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1989", i8, i32, %"class.blink::Color", %"class.absl::optional.1992", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1997", %"class.blink::Member.1999", %"class.blink::Member.1999", %"class.std::__1::unique_ptr.2002", i32, [4 x i8], %"class.WTF::HashSet.2005", %"class.blink::Member.2012", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2014", %"class.blink::HeapHashSet.2022", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2028", i8, %"class.blink::Member.2034", i8, i8, i32, %"class.blink::HeapLinkedHashSet.2036", %"class.blink::HeapLinkedHashSet.2050", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2064", i8, %"class.std::__1::unique_ptr.2070", %"class.std::__1::unique_ptr.2146", %"class.WTF::Vector.2152", i32, %class.scoped_refptr.2157, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2167", %"class.blink::Member.2169", %"class.blink::Member.2171", %"class.blink::HeapHashSet.2173", %"class.blink::HeapHashSet.2180", %"class.std::__1::unique_ptr.2187", %"class.std::__1::unique_ptr.2194", %"class.WTF::Vector.771" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1982" = type { %"class.WTF::HashTable.1983" }
%"class.WTF::HashTable.1983" = type <{ %class.scoped_refptr.1986*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1986 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2409", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2417", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2431", %"class.blink::FrameLoader", %"class.blink::Member.2452", %"class.blink::Member.343", %"class.blink::Member.2453", %"class.blink::Member.2455", %"class.blink::Member.2471", %"class.blink::Member.2473", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2475", %class.scoped_refptr.2699, %"class.blink::Member.2700", %"class.blink::Member.2702", %"class.blink::Member.2704", %"class.blink::Member.2706", %"class.blink::Member.2708", %"class.blink::Member.2712", %"class.blink::Member.2714", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2718", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2724", %"class.std::__1::unique_ptr.2725", %"class.absl::optional.2397", i32, [4 x i8], %"class.std::__1::unique_ptr.2731", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2739", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2744", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2749", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2752", %"class.blink::Member.2754", %"class.blink::Member.2756", %"class.blink::Member.2758", %"class.mojo::StructPtr.2761", %"class.blink::Member.2770", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2772", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2242", %"class.blink::Member.2244", %"class.blink::Member.2246", i8, i32, i8, i32, %"class.blink::Member.2379", %"class.blink::Member.2269", %"class.blink::FrameLifecycle", %"class.blink::Member.2240", %"class.blink::Member.2240", %"class.blink::Member.2240", %"class.blink::Member.2240", %"class.blink::Member.2240", %"class.blink::Member.2240", %"class.blink::Member.1987", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2390", i8, %"class.base::UnguessableToken", %"class.absl::optional.2392", %"class.absl::optional.2397", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2240", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2242" = type { %"class.blink::MemberBase.2243" }
%"class.blink::MemberBase.2243" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2860", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2240", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2886", %"class.blink::Member.2890", %"class.blink::Member.2892", %"class.blink::Member.2894", %"class.blink::Member.2896", %"class.blink::Member.2898", %"class.blink::Member.2909", %"class.blink::Member.2911", %"class.blink::HeapObserverSet.2913", %"class.blink::Member.2921", %"class.blink::Member.2923", %"class.blink::Member.2925", %"class.blink::Member.2927", %"class.blink::Member.2929", %"class.blink::Member.2931", %"class.blink::Member.2933", %"class.blink::Member.2935", %"class.blink::Member.2937", %"class.blink::Member.2939", %"class.blink::Member.2941", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2966", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2973", %"class.blink::Member.2242", %"class.blink::Member.2242", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2981", %"class.std::__1::unique_ptr.2987", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2860" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2861" }
%"class.blink::HeapHashMap.2861" = type { %"class.WTF::HashMap.2864" }
%"class.WTF::HashMap.2864" = type { %"class.WTF::HashTable.2865" }
%"class.WTF::HashTable.2865" = type <{ %"struct.WTF::KeyValuePair.2867"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2867" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2868" }
%"class.std::__1::unique_ptr.2868" = type { %"class.std::__1::__compressed_pair.2869" }
%"class.std::__1::__compressed_pair.2869" = type { %"struct.std::__1::__compressed_pair_elem.2870" }
%"struct.std::__1::__compressed_pair_elem.2870" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.WTF::HashMap.2871", %"class.std::__1::unique_ptr.2876" }
%"class.WTF::HashMap.2871" = type { %"class.WTF::HashTable.2872" }
%"class.WTF::HashTable.2872" = type <{ %"struct.WTF::KeyValuePair.2875"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2875" = type opaque
%"class.std::__1::unique_ptr.2876" = type { %"class.std::__1::__compressed_pair.2877" }
%"class.std::__1::__compressed_pair.2877" = type { %"struct.std::__1::__compressed_pair_elem.2878" }
%"struct.std::__1::__compressed_pair_elem.2878" = type { %"class.WTF::Vector.2879"* }
%"class.WTF::Vector.2879" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2886" = type { %"class.blink::MemberBase.2887" }
%"class.blink::MemberBase.2887" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2242", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2890" = type { %"class.blink::MemberBase.2891" }
%"class.blink::MemberBase.2891" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2892" = type { %"class.blink::MemberBase.2893" }
%"class.blink::MemberBase.2893" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.2894" = type { %"class.blink::MemberBase.2895" }
%"class.blink::MemberBase.2895" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2896" = type { %"class.blink::MemberBase.2897" }
%"class.blink::MemberBase.2897" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2898" = type { %"class.blink::MemberBase.2899" }
%"class.blink::MemberBase.2899" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type { %"class.blink::Member.2242", %"class.blink::Member.2240", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.2902" }
%"class.blink::HeapHashSet.2902" = type { %"class.WTF::HashSet.2905" }
%"class.WTF::HashSet.2905" = type { %"class.WTF::HashTable.2906" }
%"class.WTF::HashTable.2906" = type <{ %"class.blink::WeakMember.2908"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2908" = type opaque
%"class.blink::Member.2909" = type { %"class.blink::MemberBase.2910" }
%"class.blink::MemberBase.2910" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2911" = type { %"class.blink::MemberBase.2912" }
%"class.blink::MemberBase.2912" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2913" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2914" }
%"class.blink::HeapHashSet.2914" = type { %"class.WTF::HashSet.2917" }
%"class.WTF::HashSet.2917" = type { %"class.WTF::HashTable.2918" }
%"class.WTF::HashTable.2918" = type <{ %"class.blink::WeakMember.2920"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2920" = type opaque
%"class.blink::Member.2921" = type { %"class.blink::MemberBase.2922" }
%"class.blink::MemberBase.2922" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2923" = type { %"class.blink::MemberBase.2924" }
%"class.blink::MemberBase.2924" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2925" = type { %"class.blink::MemberBase.2926" }
%"class.blink::MemberBase.2926" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2927" = type { %"class.blink::MemberBase.2928" }
%"class.blink::MemberBase.2928" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2929" = type { %"class.blink::MemberBase.2930" }
%"class.blink::MemberBase.2930" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2931" = type { %"class.blink::MemberBase.2932" }
%"class.blink::MemberBase.2932" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2933" = type { %"class.blink::MemberBase.2934" }
%"class.blink::MemberBase.2934" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2935" = type { %"class.blink::MemberBase.2936" }
%"class.blink::MemberBase.2936" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2937" = type { %"class.blink::MemberBase.2938" }
%"class.blink::MemberBase.2938" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2939" = type { %"class.blink::MemberBase.2940" }
%"class.blink::MemberBase.2940" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2941" = type { %"class.blink::MemberBase.2942" }
%"class.blink::MemberBase.2942" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2943" }
%"class.WTF::Deque.2943" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2946" }
%"class.WTF::VectorBuffer.2946" = type { %"class.WTF::VectorBufferBase.2947" }
%"class.WTF::VectorBufferBase.2947" = type { %"class.std::__1::unique_ptr.2948"*, i32, i32 }
%"class.std::__1::unique_ptr.2948" = type { %"class.std::__1::__compressed_pair.2949" }
%"class.std::__1::__compressed_pair.2949" = type { %"struct.std::__1::__compressed_pair_elem.2950" }
%"struct.std::__1::__compressed_pair_elem.2950" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2954", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2954" = type { %"class.std::__1::__bitset.2955" }
%"class.std::__1::__bitset.2955" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2956" }
%"class.absl::optional.2956" = type { %"class.absl::optional_internal::optional_data.2957" }
%"class.absl::optional_internal::optional_data.2957" = type { %"class.absl::optional_internal::optional_data_base.2958" }
%"class.absl::optional_internal::optional_data_base.2958" = type { %"class.absl::optional_internal::optional_data_dtor_base.2959" }
%"class.absl::optional_internal::optional_data_dtor_base.2959" = type { i8, %union.anon.2960 }
%union.anon.2960 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2961", i64, %"class.absl::optional.1779", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2961" = type { %"class.absl::optional_internal::optional_data.2962" }
%"class.absl::optional_internal::optional_data.2962" = type { %"class.absl::optional_internal::optional_data_base.2963" }
%"class.absl::optional_internal::optional_data_base.2963" = type { %"class.absl::optional_internal::optional_data_dtor_base.2964" }
%"class.absl::optional_internal::optional_data_dtor_base.2964" = type { i8, %union.anon.2965 }
%union.anon.2965 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2966" = type { %"class.std::__1::unique_ptr.2967" }
%"class.std::__1::unique_ptr.2967" = type { %"class.std::__1::__compressed_pair.2968" }
%"class.std::__1::__compressed_pair.2968" = type { %"struct.std::__1::__compressed_pair_elem.2969" }
%"struct.std::__1::__compressed_pair_elem.2969" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2973" = type { %"class.WTF::HashSet.2976" }
%"class.WTF::HashSet.2976" = type { %"class.WTF::HashTable.2977" }
%"class.WTF::HashTable.2977" = type <{ %"class.blink::WeakMember.2979"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2979" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2980" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2980" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2981" = type { %"class.std::__1::__compressed_pair.2982" }
%"class.std::__1::__compressed_pair.2982" = type { %"struct.std::__1::__compressed_pair_elem.2983" }
%"struct.std::__1::__compressed_pair_elem.2983" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2987" = type { %"class.std::__1::__compressed_pair.2988" }
%"class.std::__1::__compressed_pair.2988" = type { %"struct.std::__1::__compressed_pair_elem.2989" }
%"struct.std::__1::__compressed_pair_elem.2989" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.2244" = type { %"class.blink::MemberBase.2245" }
%"class.blink::MemberBase.2245" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2246" = type { %"class.blink::MemberBase.2247" }
%"class.blink::MemberBase.2247" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2240", %"class.blink::Member.2269", %"class.blink::Member.2271", %"class.blink::Member.2273", i8, %"class.WTF::Vector.2275" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2262" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2250" }
%"class.blink::HeapVector.2250" = type { %"class.WTF::Vector.2253" }
%"class.WTF::Vector.2253" = type { %"class.WTF::VectorBuffer.2254" }
%"class.WTF::VectorBuffer.2254" = type { %"class.WTF::VectorBufferBase.2255", [32 x i8] }
%"class.WTF::VectorBufferBase.2255" = type { %"struct.std::__1::pair.2256"*, i32, i32 }
%"struct.std::__1::pair.2256" = type { %"class.WTF::AtomicString", %"class.blink::Member.2257" }
%"class.blink::Member.2257" = type { %"class.blink::MemberBase.2258" }
%"class.blink::MemberBase.2258" = type { %"class.blink::HeapVector.2259"* }
%"class.blink::HeapVector.2259" = type opaque
%"class.std::__1::unique_ptr.2262" = type { %"class.std::__1::__compressed_pair.2263" }
%"class.std::__1::__compressed_pair.2263" = type { %"struct.std::__1::__compressed_pair_elem.2264" }
%"struct.std::__1::__compressed_pair_elem.2264" = type { %"class.WTF::Vector.2265"* }
%"class.WTF::Vector.2265" = type opaque
%"class.blink::Member.2271" = type { %"class.blink::MemberBase.2272" }
%"class.blink::MemberBase.2272" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2273" = type { %"class.blink::MemberBase.2274" }
%"class.blink::MemberBase.2274" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2275" = type { %"class.WTF::VectorBuffer.2276" }
%"class.WTF::VectorBuffer.2276" = type { %"class.WTF::VectorBufferBase.2277" }
%"class.WTF::VectorBufferBase.2277" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2371" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2278, %"class.std::__1::unique_ptr.1775", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1789, i32 }>
%class.scoped_refptr.2278 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1789, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2337", %"class.absl::optional.2342", %"class.absl::optional.2295", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2362", i8, [7 x i8], %class.scoped_refptr.1789, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1802" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1789, %"class.std::__1::unique_ptr.2279", %"class.absl::optional.2289", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2295", %"class.std::__1::unique_ptr.2300", i8, i64, %class.scoped_refptr.2334, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2335", %"class.base::WeakPtrFactory.2336" }
%"class.std::__1::unique_ptr.2279" = type { %"class.std::__1::__compressed_pair.2280" }
%"class.std::__1::__compressed_pair.2280" = type { %"struct.std::__1::__compressed_pair_elem.2281" }
%"struct.std::__1::__compressed_pair_elem.2281" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1789, i8, %"class.mojo::ScopedHandleBase.2282", %class.scoped_refptr.2283, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2284", i8*, %"class.base::WeakPtrFactory.2285" }
%"class.mojo::ScopedHandleBase.2282" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2283 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2284" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2285" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2289" = type { %"class.absl::optional_internal::optional_data.2290" }
%"class.absl::optional_internal::optional_data.2290" = type { %"class.absl::optional_internal::optional_data_base.2291" }
%"class.absl::optional_internal::optional_data_base.2291" = type { %"class.absl::optional_internal::optional_data_dtor_base.2292" }
%"class.absl::optional_internal::optional_data_dtor_base.2292" = type { i8, %union.anon.2293 }
%union.anon.2293 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2294", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2294" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2300" = type { %"class.std::__1::__compressed_pair.2301" }
%"class.std::__1::__compressed_pair.2301" = type { %"struct.std::__1::__compressed_pair_elem.2302" }
%"struct.std::__1::__compressed_pair_elem.2302" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2303", i8, i64, %class.scoped_refptr.2304, %class.scoped_refptr.2329 }
%"class.base::RepeatingCallback.2303" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2304 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2305", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2307", %"class.std::__1::map.2318", i8, [7 x i8] }>
%"class.base::RefCounted.2305" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2306 }
%class.scoped_refptr.2306 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2307" = type { %"class.std::__1::__tree.2308" }
%"class.std::__1::__tree.2308" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2309", %"class.std::__1::__compressed_pair.2313" }
%"class.std::__1::__compressed_pair.2309" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"class.std::__1::__compressed_pair.2313" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2318" = type { %"class.std::__1::__tree.2319" }
%"class.std::__1::__tree.2319" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2320", %"class.std::__1::__compressed_pair.2324" }
%"class.std::__1::__compressed_pair.2320" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"class.std::__1::__compressed_pair.2324" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2329 = type { %"class.base::RefCountedData.2330"* }
%"class.base::RefCountedData.2330" = type opaque
%class.scoped_refptr.2334 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2335" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2336" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2337" = type { %"class.absl::optional_internal::optional_data.2338" }
%"class.absl::optional_internal::optional_data.2338" = type { %"class.absl::optional_internal::optional_data_base.2339" }
%"class.absl::optional_internal::optional_data_base.2339" = type { %"class.absl::optional_internal::optional_data_dtor_base.2340" }
%"class.absl::optional_internal::optional_data_dtor_base.2340" = type { i8, %union.anon.2341 }
%union.anon.2341 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2342" = type { %"class.absl::optional_internal::optional_data.2343" }
%"class.absl::optional_internal::optional_data.2343" = type { %"class.absl::optional_internal::optional_data_base.2344" }
%"class.absl::optional_internal::optional_data_base.2344" = type { %"class.absl::optional_internal::optional_data_dtor_base.2345" }
%"class.absl::optional_internal::optional_data_dtor_base.2345" = type { i8, [7 x i8], %union.anon.2346 }
%union.anon.2346 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2295" = type { %"class.absl::optional_internal::optional_data.2296" }
%"class.absl::optional_internal::optional_data.2296" = type { %"class.absl::optional_internal::optional_data_base.2297" }
%"class.absl::optional_internal::optional_data_base.2297" = type { %"class.absl::optional_internal::optional_data_dtor_base.2298" }
%"class.absl::optional_internal::optional_data_dtor_base.2298" = type { i8, %union.anon.2299 }
%union.anon.2299 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2347 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2347 = type { %"class.std::__1::map.2350" }
%"class.std::__1::map.2350" = type { %"class.std::__1::__tree.2351" }
%"class.std::__1::__tree.2351" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2352", %"class.std::__1::__compressed_pair.2356" }
%"class.std::__1::__compressed_pair.2352" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"class.std::__1::__compressed_pair.2356" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2361"*, i64 }
%"class.std::__1::unique_ptr.2361" = type opaque
%"class.std::__1::map.2362" = type { %"class.std::__1::__tree.2363" }
%"class.std::__1::__tree.2363" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2364", %"class.std::__1::__compressed_pair.2368" }
%"class.std::__1::__compressed_pair.2364" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"class.std::__1::__compressed_pair.2368" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2371" = type { %"class.std::__1::__compressed_pair.2372" }
%"class.std::__1::__compressed_pair.2372" = type { %"struct.std::__1::__compressed_pair_elem.2373" }
%"struct.std::__1::__compressed_pair_elem.2373" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2379" = type { %"class.blink::MemberBase.2380" }
%"class.blink::MemberBase.2380" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2269" = type { %"class.blink::MemberBase.2270" }
%"class.blink::MemberBase.2270" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2240" = type { %"class.blink::MemberBase.2241" }
%"class.blink::MemberBase.2241" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2240", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2381" }
%"class.base::internal::flat_tree.2381" = type { %"class.std::__1::vector.2382" }
%"class.std::__1::vector.2382" = type { %"class.std::__1::__vector_base.2383" }
%"class.std::__1::__vector_base.2383" = type { %"struct.std::__1::pair.2384"*, %"struct.std::__1::pair.2384"*, %"class.std::__1::__compressed_pair.2385" }
%"struct.std::__1::pair.2384" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2385" = type { %"struct.std::__1::__compressed_pair_elem.2386" }
%"struct.std::__1::__compressed_pair_elem.2386" = type { %"struct.std::__1::pair.2384"* }
%"class.blink::Member.2390" = type { %"class.blink::MemberBase.2391" }
%"class.blink::MemberBase.2391" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2392" = type { %"class.absl::optional_internal::optional_data.2393" }
%"class.absl::optional_internal::optional_data.2393" = type { %"class.absl::optional_internal::optional_data_base.2394" }
%"class.absl::optional_internal::optional_data_base.2394" = type { %"class.absl::optional_internal::optional_data_dtor_base.2395" }
%"class.absl::optional_internal::optional_data_dtor_base.2395" = type { i8, %union.anon.2396 }
%union.anon.2396 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2402" }
%"class.blink::HeapHashSet.2402" = type { %"class.WTF::HashSet.2405" }
%"class.WTF::HashSet.2405" = type { %"class.WTF::HashTable.2406" }
%"class.WTF::HashTable.2406" = type <{ %"class.blink::WeakMember.2408"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2408" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2409" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2410" }
%"class.blink::HeapHashMap.2410" = type { %"class.WTF::HashMap.2413" }
%"class.WTF::HashMap.2413" = type { %"class.WTF::HashTable.2414" }
%"class.WTF::HashTable.2414" = type <{ %"struct.WTF::KeyValuePair.2416"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2416" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2417" = type { %"class.std::__1::__compressed_pair.2418" }
%"class.std::__1::__compressed_pair.2418" = type { %"struct.std::__1::__compressed_pair_elem.2419" }
%"struct.std::__1::__compressed_pair_elem.2419" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2420", %"class.base::WeakPtrFactory.2425" }
%"class.WTF::HashMap.2420" = type { %"class.WTF::HashTable.2421" }
%"class.WTF::HashTable.2421" = type <{ %"struct.WTF::KeyValuePair.2424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2424" = type opaque
%"class.base::WeakPtrFactory.2425" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2429" }
%"class.blink::Member.2429" = type { %"class.blink::MemberBase.2430" }
%"class.blink::MemberBase.2430" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3401" }
%"class.blink::WeakMember.3401" = type { %"class.blink::MemberBase.3402" }
%"class.blink::MemberBase.3402" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.4036", i64, %"class.std::__1::map.4037", i8*, i64, %"class.base::WeakPtrFactory.4046" }
%"class.base::RepeatingCallback.4036" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.4037" = type { %"class.std::__1::__tree.4038" }
%"class.std::__1::__tree.4038" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4039", %"class.std::__1::__compressed_pair.4043" }
%"class.std::__1::__compressed_pair.4039" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"class.std::__1::__compressed_pair.4043" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.4046" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2431" = type { %"class.WTF::HashSet.2434" }
%"class.WTF::HashSet.2434" = type { %"class.WTF::HashTable.2435" }
%"class.WTF::HashTable.2435" = type <{ %"class.blink::WeakMember.2437"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2437" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1987", %"class.blink::Member.2438", %"class.blink::Member.2440", %"class.std::__1::unique_ptr.2442", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2448" }
%"class.blink::Member.2438" = type { %"class.blink::MemberBase.2439" }
%"class.blink::MemberBase.2439" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type { %"class.blink::Member.1987", double, double, i8, i8, double, i64, i64, %"class.WTF::HashMap.2853" }
%"class.WTF::HashMap.2853" = type { %"class.WTF::HashTable.2854" }
%"class.WTF::HashTable.2854" = type <{ %"struct.WTF::KeyValuePair.2857"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2857" = type opaque
%"class.blink::Member.2440" = type { %"class.blink::MemberBase.2441" }
%"class.blink::MemberBase.2441" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2442" = type { %"class.std::__1::__compressed_pair.2443" }
%"class.std::__1::__compressed_pair.2443" = type { %"struct.std::__1::__compressed_pair_elem.2444" }
%"struct.std::__1::__compressed_pair_elem.2444" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2448" = type { %"class.WTF::HashTable.2449" }
%"class.WTF::HashTable.2449" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2452" = type { %"class.blink::MemberBase.1991" }
%"class.blink::MemberBase.1991" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2453" = type { %"class.blink::MemberBase.2454" }
%"class.blink::MemberBase.2454" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2455" = type { %"class.blink::MemberBase.2456" }
%"class.blink::MemberBase.2456" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1987", %"class.blink::Member.2459", %"class.blink::Member.2461", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2463", %"class.blink::Member.2469" }
%"class.blink::Member.2459" = type { %"class.blink::MemberBase.2460" }
%"class.blink::MemberBase.2460" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2461" = type { %"class.blink::MemberBase.2462" }
%"class.blink::MemberBase.2462" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2463" = type { %"class.std::__1::__compressed_pair.2464" }
%"class.std::__1::__compressed_pair.2464" = type { %"struct.std::__1::__compressed_pair_elem.2465" }
%"struct.std::__1::__compressed_pair_elem.2465" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2469" = type { %"class.blink::MemberBase.2470" }
%"class.blink::MemberBase.2470" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2471" = type { %"class.blink::MemberBase.2472" }
%"class.blink::MemberBase.2472" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2473" = type { %"class.blink::MemberBase.2474" }
%"class.blink::MemberBase.2474" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2475" = type { %"class.blink::MemberBase.2476" }
%"class.blink::MemberBase.2476" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2479", %"class.blink::HeapListHashSet.2490", %"class.blink::HeapListHashSet.2501", %"class.blink::HeapListHashSet.2512", %"class.blink::HeapListHashSet.2523", %"class.blink::HeapListHashSet.2534", %"class.blink::HeapListHashSet.2545", %"class.blink::HeapListHashSet.2556", %"class.blink::HeapListHashSet.2567", %"class.blink::HeapListHashSet.2578", %"class.blink::HeapListHashSet.2589", %"class.blink::HeapListHashSet.2600", %"class.blink::HeapListHashSet.2611", %"class.blink::HeapListHashSet.2622", %"class.blink::HeapListHashSet.2633", %"class.blink::HeapListHashSet.2644", %"class.blink::HeapListHashSet.2655", %"class.blink::HeapListHashSet.2666", %"class.blink::HeapListHashSet.2677", %"class.blink::HeapListHashSet.2688" }
%"class.blink::HeapListHashSet.2479" = type { %"class.WTF::ListHashSet.base.2489", [7 x i8] }
%"class.WTF::ListHashSet.base.2489" = type <{ %"class.WTF::HashTable.2484", %"class.blink::Member.2486", %"class.blink::Member.2486", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2484" = type <{ %"class.blink::Member.2486"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2486" = type { %"class.blink::MemberBase.2487" }
%"class.blink::MemberBase.2487" = type { %"class.blink::HeapListHashSetNode.2488"* }
%"class.blink::HeapListHashSetNode.2488" = type { %"class.blink::Member.2702", %"class.blink::Member.2486", %"class.blink::Member.2486" }
%"class.blink::HeapListHashSet.2490" = type { %"class.WTF::ListHashSet.base.2500", [7 x i8] }
%"class.WTF::ListHashSet.base.2500" = type <{ %"class.WTF::HashTable.2495", %"class.blink::Member.2497", %"class.blink::Member.2497", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2495" = type <{ %"class.blink::Member.2497"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2497" = type { %"class.blink::MemberBase.2498" }
%"class.blink::MemberBase.2498" = type { %"class.blink::HeapListHashSetNode.2499"* }
%"class.blink::HeapListHashSetNode.2499" = type { %"class.blink::Member.2845", %"class.blink::Member.2497", %"class.blink::Member.2497" }
%"class.blink::Member.2845" = type { %"class.blink::MemberBase.2846" }
%"class.blink::MemberBase.2846" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2501" = type { %"class.WTF::ListHashSet.base.2511", [7 x i8] }
%"class.WTF::ListHashSet.base.2511" = type <{ %"class.WTF::HashTable.2506", %"class.blink::Member.2508", %"class.blink::Member.2508", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2506" = type <{ %"class.blink::Member.2508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2508" = type { %"class.blink::MemberBase.2509" }
%"class.blink::MemberBase.2509" = type { %"class.blink::HeapListHashSetNode.2510"* }
%"class.blink::HeapListHashSetNode.2510" = type { %"class.blink::Member.2841", %"class.blink::Member.2508", %"class.blink::Member.2508" }
%"class.blink::Member.2841" = type { %"class.blink::MemberBase.2842" }
%"class.blink::MemberBase.2842" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2512" = type { %"class.WTF::ListHashSet.base.2522", [7 x i8] }
%"class.WTF::ListHashSet.base.2522" = type <{ %"class.WTF::HashTable.2517", %"class.blink::Member.2519", %"class.blink::Member.2519", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2517" = type <{ %"class.blink::Member.2519"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2519" = type { %"class.blink::MemberBase.2520" }
%"class.blink::MemberBase.2520" = type { %"class.blink::HeapListHashSetNode.2521"* }
%"class.blink::HeapListHashSetNode.2521" = type { %"class.blink::Member.2837", %"class.blink::Member.2519", %"class.blink::Member.2519" }
%"class.blink::Member.2837" = type { %"class.blink::MemberBase.2838" }
%"class.blink::MemberBase.2838" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2523" = type { %"class.WTF::ListHashSet.base.2533", [7 x i8] }
%"class.WTF::ListHashSet.base.2533" = type <{ %"class.WTF::HashTable.2528", %"class.blink::Member.2530", %"class.blink::Member.2530", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2528" = type <{ %"class.blink::Member.2530"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2530" = type { %"class.blink::MemberBase.2531" }
%"class.blink::MemberBase.2531" = type { %"class.blink::HeapListHashSetNode.2532"* }
%"class.blink::HeapListHashSetNode.2532" = type { %"class.blink::Member.2833", %"class.blink::Member.2530", %"class.blink::Member.2530" }
%"class.blink::Member.2833" = type { %"class.blink::MemberBase.2834" }
%"class.blink::MemberBase.2834" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2534" = type { %"class.WTF::ListHashSet.base.2544", [7 x i8] }
%"class.WTF::ListHashSet.base.2544" = type <{ %"class.WTF::HashTable.2539", %"class.blink::Member.2541", %"class.blink::Member.2541", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2539" = type <{ %"class.blink::Member.2541"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2541" = type { %"class.blink::MemberBase.2542" }
%"class.blink::MemberBase.2542" = type { %"class.blink::HeapListHashSetNode.2543"* }
%"class.blink::HeapListHashSetNode.2543" = type { %"class.blink::Member.2829", %"class.blink::Member.2541", %"class.blink::Member.2541" }
%"class.blink::Member.2829" = type { %"class.blink::MemberBase.2830" }
%"class.blink::MemberBase.2830" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2545" = type { %"class.WTF::ListHashSet.base.2555", [7 x i8] }
%"class.WTF::ListHashSet.base.2555" = type <{ %"class.WTF::HashTable.2550", %"class.blink::Member.2552", %"class.blink::Member.2552", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2550" = type <{ %"class.blink::Member.2552"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2552" = type { %"class.blink::MemberBase.2553" }
%"class.blink::MemberBase.2553" = type { %"class.blink::HeapListHashSetNode.2554"* }
%"class.blink::HeapListHashSetNode.2554" = type { %"class.blink::Member.2825", %"class.blink::Member.2552", %"class.blink::Member.2552" }
%"class.blink::Member.2825" = type { %"class.blink::MemberBase.2826" }
%"class.blink::MemberBase.2826" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2556" = type { %"class.WTF::ListHashSet.base.2566", [7 x i8] }
%"class.WTF::ListHashSet.base.2566" = type <{ %"class.WTF::HashTable.2561", %"class.blink::Member.2563", %"class.blink::Member.2563", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2561" = type <{ %"class.blink::Member.2563"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2563" = type { %"class.blink::MemberBase.2564" }
%"class.blink::MemberBase.2564" = type { %"class.blink::HeapListHashSetNode.2565"* }
%"class.blink::HeapListHashSetNode.2565" = type { %"class.blink::Member.2821", %"class.blink::Member.2563", %"class.blink::Member.2563" }
%"class.blink::Member.2821" = type { %"class.blink::MemberBase.2822" }
%"class.blink::MemberBase.2822" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2567" = type { %"class.WTF::ListHashSet.base.2577", [7 x i8] }
%"class.WTF::ListHashSet.base.2577" = type <{ %"class.WTF::HashTable.2572", %"class.blink::Member.2574", %"class.blink::Member.2574", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2572" = type <{ %"class.blink::Member.2574"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2574" = type { %"class.blink::MemberBase.2575" }
%"class.blink::MemberBase.2575" = type { %"class.blink::HeapListHashSetNode.2576"* }
%"class.blink::HeapListHashSetNode.2576" = type { %"class.blink::Member.2817", %"class.blink::Member.2574", %"class.blink::Member.2574" }
%"class.blink::Member.2817" = type { %"class.blink::MemberBase.2818" }
%"class.blink::MemberBase.2818" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2578" = type { %"class.WTF::ListHashSet.base.2588", [7 x i8] }
%"class.WTF::ListHashSet.base.2588" = type <{ %"class.WTF::HashTable.2583", %"class.blink::Member.2585", %"class.blink::Member.2585", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2583" = type <{ %"class.blink::Member.2585"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2585" = type { %"class.blink::MemberBase.2586" }
%"class.blink::MemberBase.2586" = type { %"class.blink::HeapListHashSetNode.2587"* }
%"class.blink::HeapListHashSetNode.2587" = type { %"class.blink::Member.2813", %"class.blink::Member.2585", %"class.blink::Member.2585" }
%"class.blink::Member.2813" = type { %"class.blink::MemberBase.2814" }
%"class.blink::MemberBase.2814" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2589" = type { %"class.WTF::ListHashSet.base.2599", [7 x i8] }
%"class.WTF::ListHashSet.base.2599" = type <{ %"class.WTF::HashTable.2594", %"class.blink::Member.2596", %"class.blink::Member.2596", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2594" = type <{ %"class.blink::Member.2596"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2596" = type { %"class.blink::MemberBase.2597" }
%"class.blink::MemberBase.2597" = type { %"class.blink::HeapListHashSetNode.2598"* }
%"class.blink::HeapListHashSetNode.2598" = type { %"class.blink::Member.2706", %"class.blink::Member.2596", %"class.blink::Member.2596" }
%"class.blink::HeapListHashSet.2600" = type { %"class.WTF::ListHashSet.base.2610", [7 x i8] }
%"class.WTF::ListHashSet.base.2610" = type <{ %"class.WTF::HashTable.2605", %"class.blink::Member.2607", %"class.blink::Member.2607", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2605" = type <{ %"class.blink::Member.2607"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2607" = type { %"class.blink::MemberBase.2608" }
%"class.blink::MemberBase.2608" = type { %"class.blink::HeapListHashSetNode.2609"* }
%"class.blink::HeapListHashSetNode.2609" = type { %"class.blink::Member.2807", %"class.blink::Member.2607", %"class.blink::Member.2607" }
%"class.blink::Member.2807" = type { %"class.blink::MemberBase.2808" }
%"class.blink::MemberBase.2808" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2611" = type { %"class.WTF::ListHashSet.base.2621", [7 x i8] }
%"class.WTF::ListHashSet.base.2621" = type <{ %"class.WTF::HashTable.2616", %"class.blink::Member.2618", %"class.blink::Member.2618", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2616" = type <{ %"class.blink::Member.2618"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2618" = type { %"class.blink::MemberBase.2619" }
%"class.blink::MemberBase.2619" = type { %"class.blink::HeapListHashSetNode.2620"* }
%"class.blink::HeapListHashSetNode.2620" = type { %"class.blink::Member.2803", %"class.blink::Member.2618", %"class.blink::Member.2618" }
%"class.blink::Member.2803" = type { %"class.blink::MemberBase.2804" }
%"class.blink::MemberBase.2804" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2622" = type { %"class.WTF::ListHashSet.base.2632", [7 x i8] }
%"class.WTF::ListHashSet.base.2632" = type <{ %"class.WTF::HashTable.2627", %"class.blink::Member.2629", %"class.blink::Member.2629", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2627" = type <{ %"class.blink::Member.2629"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2629" = type { %"class.blink::MemberBase.2630" }
%"class.blink::MemberBase.2630" = type { %"class.blink::HeapListHashSetNode.2631"* }
%"class.blink::HeapListHashSetNode.2631" = type { %"class.blink::Member.2799", %"class.blink::Member.2629", %"class.blink::Member.2629" }
%"class.blink::Member.2799" = type { %"class.blink::MemberBase.2800" }
%"class.blink::MemberBase.2800" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2633" = type { %"class.WTF::ListHashSet.base.2643", [7 x i8] }
%"class.WTF::ListHashSet.base.2643" = type <{ %"class.WTF::HashTable.2638", %"class.blink::Member.2640", %"class.blink::Member.2640", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2638" = type <{ %"class.blink::Member.2640"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2640" = type { %"class.blink::MemberBase.2641" }
%"class.blink::MemberBase.2641" = type { %"class.blink::HeapListHashSetNode.2642"* }
%"class.blink::HeapListHashSetNode.2642" = type { %"class.blink::Member.2795", %"class.blink::Member.2640", %"class.blink::Member.2640" }
%"class.blink::Member.2795" = type { %"class.blink::MemberBase.2796" }
%"class.blink::MemberBase.2796" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2644" = type { %"class.WTF::ListHashSet.base.2654", [7 x i8] }
%"class.WTF::ListHashSet.base.2654" = type <{ %"class.WTF::HashTable.2649", %"class.blink::Member.2651", %"class.blink::Member.2651", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2649" = type <{ %"class.blink::Member.2651"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2651" = type { %"class.blink::MemberBase.2652" }
%"class.blink::MemberBase.2652" = type { %"class.blink::HeapListHashSetNode.2653"* }
%"class.blink::HeapListHashSetNode.2653" = type { %"class.blink::Member.2791", %"class.blink::Member.2651", %"class.blink::Member.2651" }
%"class.blink::Member.2791" = type { %"class.blink::MemberBase.2792" }
%"class.blink::MemberBase.2792" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2655" = type { %"class.WTF::ListHashSet.base.2665", [7 x i8] }
%"class.WTF::ListHashSet.base.2665" = type <{ %"class.WTF::HashTable.2660", %"class.blink::Member.2662", %"class.blink::Member.2662", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2660" = type <{ %"class.blink::Member.2662"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2662" = type { %"class.blink::MemberBase.2663" }
%"class.blink::MemberBase.2663" = type { %"class.blink::HeapListHashSetNode.2664"* }
%"class.blink::HeapListHashSetNode.2664" = type { %"class.blink::Member.2787", %"class.blink::Member.2662", %"class.blink::Member.2662" }
%"class.blink::Member.2787" = type { %"class.blink::MemberBase.2788" }
%"class.blink::MemberBase.2788" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2666" = type { %"class.WTF::ListHashSet.base.2676", [7 x i8] }
%"class.WTF::ListHashSet.base.2676" = type <{ %"class.WTF::HashTable.2671", %"class.blink::Member.2673", %"class.blink::Member.2673", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2671" = type <{ %"class.blink::Member.2673"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2673" = type { %"class.blink::MemberBase.2674" }
%"class.blink::MemberBase.2674" = type { %"class.blink::HeapListHashSetNode.2675"* }
%"class.blink::HeapListHashSetNode.2675" = type { %"class.blink::Member.2783", %"class.blink::Member.2673", %"class.blink::Member.2673" }
%"class.blink::Member.2783" = type { %"class.blink::MemberBase.2784" }
%"class.blink::MemberBase.2784" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2677" = type { %"class.WTF::ListHashSet.base.2687", [7 x i8] }
%"class.WTF::ListHashSet.base.2687" = type <{ %"class.WTF::HashTable.2682", %"class.blink::Member.2684", %"class.blink::Member.2684", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2682" = type <{ %"class.blink::Member.2684"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2684" = type { %"class.blink::MemberBase.2685" }
%"class.blink::MemberBase.2685" = type { %"class.blink::HeapListHashSetNode.2686"* }
%"class.blink::HeapListHashSetNode.2686" = type { %"class.blink::Member.2708", %"class.blink::Member.2684", %"class.blink::Member.2684" }
%"class.blink::HeapListHashSet.2688" = type { %"class.WTF::ListHashSet.base.2698", [7 x i8] }
%"class.WTF::ListHashSet.base.2698" = type <{ %"class.WTF::HashTable.2693", %"class.blink::Member.2695", %"class.blink::Member.2695", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2693" = type <{ %"class.blink::Member.2695"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2695" = type { %"class.blink::MemberBase.2696" }
%"class.blink::MemberBase.2696" = type { %"class.blink::HeapListHashSetNode.2697"* }
%"class.blink::HeapListHashSetNode.2697" = type { %"class.blink::Member.2700", %"class.blink::Member.2695", %"class.blink::Member.2695" }
%class.scoped_refptr.2699 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2700" = type { %"class.blink::MemberBase.2701" }
%"class.blink::MemberBase.2701" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2702" = type { %"class.blink::MemberBase.2703" }
%"class.blink::MemberBase.2703" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2704" = type { %"class.blink::MemberBase.2705" }
%"class.blink::MemberBase.2705" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2706" = type { %"class.blink::MemberBase.2707" }
%"class.blink::MemberBase.2707" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2708" = type { %"class.blink::MemberBase.2709" }
%"class.blink::MemberBase.2709" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2712" = type { %"class.blink::MemberBase.2713" }
%"class.blink::MemberBase.2713" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2714" = type { %"class.blink::MemberBase.2715" }
%"class.blink::MemberBase.2715" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2716" }
%"class.blink::Member.2716" = type { %"class.blink::MemberBase.2717" }
%"class.blink::MemberBase.2717" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.4049" }
%"class.mojo::Remote.4049" = type { %"class.mojo::internal::InterfacePtrState.4050" }
%"class.mojo::internal::InterfacePtrState.4050" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.4051" }
%"class.std::__1::unique_ptr.4051" = type { %"class.std::__1::__compressed_pair.4052" }
%"class.std::__1::__compressed_pair.4052" = type { %"struct.std::__1::__compressed_pair_elem.4053" }
%"struct.std::__1::__compressed_pair_elem.4053" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2718" = type { %"class.std::__1::__compressed_pair.2719" }
%"class.std::__1::__compressed_pair.2719" = type { %"struct.std::__1::__compressed_pair_elem.2720" }
%"struct.std::__1::__compressed_pair_elem.2720" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2724" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2725" = type { %"class.std::__1::__compressed_pair.2726" }
%"class.std::__1::__compressed_pair.2726" = type { %"struct.std::__1::__compressed_pair_elem.2727" }
%"struct.std::__1::__compressed_pair_elem.2727" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2397" = type { %"class.absl::optional_internal::optional_data.2398" }
%"class.absl::optional_internal::optional_data.2398" = type { %"class.absl::optional_internal::optional_data_base.2399" }
%"class.absl::optional_internal::optional_data_base.2399" = type { %"class.absl::optional_internal::optional_data_dtor_base.2400" }
%"class.absl::optional_internal::optional_data_dtor_base.2400" = type { i8, %union.anon.2401 }
%union.anon.2401 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2731" = type { %"class.std::__1::__compressed_pair.2732" }
%"class.std::__1::__compressed_pair.2732" = type { %"struct.std::__1::__compressed_pair_elem.2733" }
%"struct.std::__1::__compressed_pair_elem.2733" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2737" }
%"class.blink::Member.2737" = type { %"class.blink::MemberBase.2738" }
%"class.blink::MemberBase.2738" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.4059" }
%"class.mojo::AssociatedRemote.4059" = type { %"class.mojo::internal::AssociatedInterfacePtrState.4060" }
%"class.mojo::internal::AssociatedInterfacePtrState.4060" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.4061" }
%"class.std::__1::unique_ptr.4061" = type { %"class.std::__1::__compressed_pair.4062" }
%"class.std::__1::__compressed_pair.4062" = type { %"struct.std::__1::__compressed_pair_elem.4063" }
%"struct.std::__1::__compressed_pair_elem.4063" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2739" = type { %"class.blink::Member.2740" }
%"class.blink::Member.2740" = type { %"class.blink::MemberBase.2741" }
%"class.blink::MemberBase.2741" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.4069" }
%"class.mojo::AssociatedRemote.4069" = type { %"class.mojo::internal::AssociatedInterfacePtrState.4070" }
%"class.mojo::internal::AssociatedInterfacePtrState.4070" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.4071" }
%"class.std::__1::unique_ptr.4071" = type { %"class.std::__1::__compressed_pair.4072" }
%"class.std::__1::__compressed_pair.4072" = type { %"struct.std::__1::__compressed_pair_elem.4073" }
%"struct.std::__1::__compressed_pair_elem.4073" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2742" }
%"class.blink::Member.2742" = type { %"class.blink::MemberBase.2743" }
%"class.blink::MemberBase.2743" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4079", %"class.blink::Member.1987", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.4079" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.4080" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1775" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.4080" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2744" = type { %"class.blink::Member.2745" }
%"class.blink::Member.2745" = type { %"class.blink::MemberBase.2746" }
%"class.blink::MemberBase.2746" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4083", %"class.blink::Member.1987", %"class.mojo::AssociatedReceiver.4084" }
%"class.blink::ThreadState::PrefinalizerRegistration.4083" = type { i8 }
%"class.mojo::AssociatedReceiver.4084" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.4085" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.4085" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2747" }
%"class.blink::Member.2747" = type { %"class.blink::MemberBase.2748" }
%"class.blink::MemberBase.2748" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4088", %"class.blink::Member.1987", %"class.mojo::Receiver.4089" }
%"class.blink::ThreadState::PrefinalizerRegistration.4088" = type { i8 }
%"class.mojo::Receiver.4089" = type { %"class.mojo::internal::BindingState.4090" }
%"class.mojo::internal::BindingState.4090" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2278, %"class.std::__1::unique_ptr.1775", %"class.base::WeakPtrFactory.3640" }
%"class.base::WeakPtrFactory.3640" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2749" = type { %"class.blink::Member.2750" }
%"class.blink::Member.2750" = type { %"class.blink::MemberBase.2751" }
%"class.blink::MemberBase.2751" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4093", %"class.blink::Member.1987", %"class.mojo::AssociatedReceiver.4094" }
%"class.blink::ThreadState::PrefinalizerRegistration.4093" = type { i8 }
%"class.mojo::AssociatedReceiver.4094" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.4095" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.4095" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2752" = type { %"class.blink::MemberBase.2753" }
%"class.blink::MemberBase.2753" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2754" = type { %"class.blink::MemberBase.2755" }
%"class.blink::MemberBase.2755" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2756" = type { %"class.blink::MemberBase.2757" }
%"class.blink::MemberBase.2757" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2758" = type { %"class.blink::MemberBase.2759" }
%"class.blink::MemberBase.2759" = type { %"class.blink::HeapHashMap.2760"* }
%"class.blink::HeapHashMap.2760" = type opaque
%"class.mojo::StructPtr.2761" = type { %"class.std::__1::unique_ptr.2762" }
%"class.std::__1::unique_ptr.2762" = type { %"class.std::__1::__compressed_pair.2763" }
%"class.std::__1::__compressed_pair.2763" = type { %"struct.std::__1::__compressed_pair_elem.2764" }
%"struct.std::__1::__compressed_pair_elem.2764" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2765", %"class.mojo::InlinedStructPtr.2766" }
%"class.mojo::InlinedStructPtr.2765" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2766" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2770" = type { %"class.blink::MemberBase.2771" }
%"class.blink::MemberBase.2771" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2772" = type { %"class.absl::optional_internal::optional_data.2773" }
%"class.absl::optional_internal::optional_data.2773" = type { %"class.absl::optional_internal::optional_data_base.2774" }
%"class.absl::optional_internal::optional_data_base.2774" = type { %"class.absl::optional_internal::optional_data_dtor_base.2775" }
%"class.absl::optional_internal::optional_data_dtor_base.2775" = type { i8, %union.anon.2776 }
%union.anon.2776 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1989" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1990", { i64, i64 } }
%"class.blink::WeakMember.1990" = type { %"class.blink::MemberBase.1991" }
%"class.absl::optional.1992" = type { %"class.absl::optional_internal::optional_data.1993" }
%"class.absl::optional_internal::optional_data.1993" = type { %"class.absl::optional_internal::optional_data_base.1994" }
%"class.absl::optional_internal::optional_data_base.1994" = type { %"class.absl::optional_internal::optional_data_dtor_base.1995" }
%"class.absl::optional_internal::optional_data_dtor_base.1995" = type { i8, %union.anon.1996 }
%union.anon.1996 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::HeapHashSet.2001"* }
%"class.blink::HeapHashSet.2001" = type opaque
%"class.std::__1::unique_ptr.2002" = type { %"class.std::__1::__compressed_pair.2003" }
%"class.std::__1::__compressed_pair.2003" = type { %"struct.std::__1::__compressed_pair_elem.2004" }
%"struct.std::__1::__compressed_pair_elem.2004" = type { %"class.WTF::HashSet.2005"* }
%"class.WTF::HashSet.2005" = type { %"class.WTF::HashTable.2006" }
%"class.WTF::HashTable.2006" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2012" = type { %"class.blink::MemberBase.2013" }
%"class.blink::MemberBase.2013" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2014" = type { %"class.WTF::HashSet.2017" }
%"class.WTF::HashSet.2017" = type { %"class.WTF::HashTable.2018" }
%"class.WTF::HashTable.2018" = type <{ %"class.blink::Member.2020"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2020" = type { %"class.blink::MemberBase.2021" }
%"class.blink::MemberBase.2021" = type { %"class.blink::WebPluginContainerImpl"* }
%"class.blink::WebPluginContainerImpl" = type opaque
%"class.blink::HeapHashSet.2022" = type { %"class.WTF::HashSet.2025" }
%"class.WTF::HashSet.2025" = type { %"class.WTF::HashTable.2026" }
%"class.WTF::HashTable.2026" = type <{ %"class.blink::Member.782"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2028" = type { %"class.std::__1::__compressed_pair.2029" }
%"class.std::__1::__compressed_pair.2029" = type { %"struct.std::__1::__compressed_pair_elem.2030" }
%"struct.std::__1::__compressed_pair_elem.2030" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.2036" = type { %"class.WTF::LinkedHashSet.2039" }
%"class.WTF::LinkedHashSet.2039" = type { %"class.WTF::HashMap.2040", %"class.WTF::VectorBackedLinkedList.2044" }
%"class.WTF::HashMap.2040" = type { %"class.WTF::HashTable.2041" }
%"class.WTF::HashTable.2041" = type <{ %"struct.WTF::KeyValuePair.2043"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2043" = type opaque
%"class.WTF::VectorBackedLinkedList.2044" = type { %"class.WTF::Vector.2045", i32, i32 }
%"class.WTF::Vector.2045" = type { %"class.WTF::VectorBuffer.2046" }
%"class.WTF::VectorBuffer.2046" = type { %"class.WTF::VectorBufferBase.2047" }
%"class.WTF::VectorBufferBase.2047" = type { %"class.WTF::VectorBackedLinkedListNode.2048"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2048" = type opaque
%"class.blink::HeapLinkedHashSet.2050" = type { %"class.WTF::LinkedHashSet.2053" }
%"class.WTF::LinkedHashSet.2053" = type { %"class.WTF::HashMap.2054", %"class.WTF::VectorBackedLinkedList.2058" }
%"class.WTF::HashMap.2054" = type { %"class.WTF::HashTable.2055" }
%"class.WTF::HashTable.2055" = type <{ %"struct.WTF::KeyValuePair.2057"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2057" = type opaque
%"class.WTF::VectorBackedLinkedList.2058" = type { %"class.WTF::Vector.2059", i32, i32 }
%"class.WTF::Vector.2059" = type { %"class.WTF::VectorBuffer.2060" }
%"class.WTF::VectorBuffer.2060" = type { %"class.WTF::VectorBufferBase.2061" }
%"class.WTF::VectorBufferBase.2061" = type { %"class.WTF::VectorBackedLinkedListNode.2062"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2062" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2064" = type { %"class.std::__1::__compressed_pair.2065" }
%"class.std::__1::__compressed_pair.2065" = type { %"struct.std::__1::__compressed_pair_elem.2066" }
%"struct.std::__1::__compressed_pair_elem.2066" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2070" = type { %"class.std::__1::__compressed_pair.2071" }
%"class.std::__1::__compressed_pair.2071" = type { %"struct.std::__1::__compressed_pair_elem.2072" }
%"struct.std::__1::__compressed_pair_elem.2072" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2073, %class.scoped_refptr.2073, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2123", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2128", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2073 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2074", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2081" }
%"class.WTF::RefCounted.2074" = type { %"class.base::RefCounted.2075" }
%"class.base::RefCounted.2075" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2076", i32, [4 x i8] }>
%"class.WTF::Vector.2076" = type { %"class.WTF::VectorBuffer.2077" }
%"class.WTF::VectorBuffer.2077" = type { %"class.WTF::VectorBufferBase.2078" }
%"class.WTF::VectorBufferBase.2078" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2081" = type { %"class.WTF::VectorBuffer.2082" }
%"class.WTF::VectorBuffer.2082" = type { %"class.WTF::VectorBufferBase.2083" }
%"class.WTF::VectorBufferBase.2083" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2084", %"class.std::__1::unique_ptr.2095", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2084" = type { %"class.std::__1::__compressed_pair.2085" }
%"class.std::__1::__compressed_pair.2085" = type { %"struct.std::__1::__compressed_pair_elem.2086" }
%"struct.std::__1::__compressed_pair_elem.2086" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2087", %"class.WTF::Vector.804", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2087" = type { %"class.WTF::VectorBuffer.2088" }
%"class.WTF::VectorBuffer.2088" = type { %"class.WTF::VectorBufferBase.2089" }
%"class.WTF::VectorBufferBase.2089" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.2095" = type { %"class.std::__1::__compressed_pair.2096" }
%"class.std::__1::__compressed_pair.2096" = type { %"struct.std::__1::__compressed_pair_elem.2097" }
%"struct.std::__1::__compressed_pair_elem.2097" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2098", %"class.absl::optional.2098" }
%"class.absl::optional.2098" = type { %"class.absl::optional_internal::optional_data.2099" }
%"class.absl::optional_internal::optional_data.2099" = type { %"class.absl::optional_internal::optional_data_base.2100" }
%"class.absl::optional_internal::optional_data_base.2100" = type { %"class.absl::optional_internal::optional_data_dtor_base.2101" }
%"class.absl::optional_internal::optional_data_dtor_base.2101" = type { i8, [3 x i8], %union.anon.2102 }
%union.anon.2102 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2081"*, %"class.absl::optional.2108", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2108" = type { %"class.absl::optional_internal::optional_data.2109" }
%"class.absl::optional_internal::optional_data.2109" = type { %"class.absl::optional_internal::optional_data_base.2110" }
%"class.absl::optional_internal::optional_data_base.2110" = type { %"class.absl::optional_internal::optional_data_dtor_base.2111" }
%"class.absl::optional_internal::optional_data_dtor_base.2111" = type { i8, %union.anon.2112 }
%union.anon.2112 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2113", %"class.WTF::Vector.2118" }
%"class.WTF::Vector.2113" = type { %"class.WTF::VectorBuffer.2114" }
%"class.WTF::VectorBuffer.2114" = type { %"class.WTF::VectorBufferBase.2115", [128 x i8] }
%"class.WTF::VectorBufferBase.2115" = type { i32*, i32, i32 }
%"class.WTF::Vector.2118" = type { %"class.WTF::VectorBuffer.2119" }
%"class.WTF::VectorBuffer.2119" = type { %"class.WTF::VectorBufferBase.2120", [128 x i8] }
%"class.WTF::VectorBufferBase.2120" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2123" = type { %"class.WTF::VectorBuffer.2124" }
%"class.WTF::VectorBuffer.2124" = type { %"class.WTF::VectorBufferBase.2125" }
%"class.WTF::VectorBufferBase.2125" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2128" = type { %"class.WTF::HashTable.2129" }
%"class.WTF::HashTable.2129" = type <{ %"struct.WTF::KeyValuePair.2132"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2132" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2133", %"class.WTF::Vector.2138" }
%"class.WTF::HashMap.2133" = type { %"class.WTF::HashTable.2134" }
%"class.WTF::HashTable.2134" = type <{ %"struct.WTF::KeyValuePair.2137"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2137" = type opaque
%"class.WTF::Vector.2138" = type { %"class.WTF::VectorBuffer.2139" }
%"class.WTF::VectorBuffer.2139" = type { %"class.WTF::VectorBufferBase.2140" }
%"class.WTF::VectorBufferBase.2140" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2146" = type { %"class.std::__1::__compressed_pair.2147" }
%"class.std::__1::__compressed_pair.2147" = type { %"struct.std::__1::__compressed_pair_elem.2148" }
%"struct.std::__1::__compressed_pair_elem.2148" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2152" = type { %"class.WTF::VectorBuffer.2153" }
%"class.WTF::VectorBuffer.2153" = type { %"class.WTF::VectorBufferBase.2154" }
%"class.WTF::VectorBufferBase.2154" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2157 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type { %"class.WTF::RefCounted.2158", i64, %"class.ukm::UkmRecorder"*, %"class.base::TickClock"*, i8*, %"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord", %"struct.std::__1::array", %"struct.blink::LocalFrameUkmAggregator::SampleToRecord", i32, i32, i32, i8, i32, i32 }
%"class.WTF::RefCounted.2158" = type { %"class.base::RefCounted.2159" }
%"class.base::RefCounted.2159" = type { %"class.base::subtle::RefCountedBase" }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord" = type { %"class.std::__1::unique_ptr.2160", %"class.std::__1::unique_ptr.2160", %"class.std::__1::unique_ptr.2160", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.2160" = type { %"class.std::__1::__compressed_pair.2161" }
%"class.std::__1::__compressed_pair.2161" = type { %"struct.std::__1::__compressed_pair_elem.2162" }
%"struct.std::__1::__compressed_pair_elem.2162" = type { %"class.blink::CustomCountHistogram"* }
%"class.blink::CustomCountHistogram" = type { %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::array" = type { [26 x %"struct.blink::LocalFrameUkmAggregator::AbsoluteMetricRecord"] }
%"struct.blink::LocalFrameUkmAggregator::SampleToRecord" = type <{ %"class.base::TimeDelta", %"struct.std::__1::array.2166", %"struct.std::__1::array.2166", i16, [6 x i8] }>
%"struct.std::__1::array.2166" = type { [26 x %"class.base::TimeDelta"] }
%"class.blink::Member.2167" = type { %"class.blink::MemberBase.2168" }
%"class.blink::MemberBase.2168" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2169" = type { %"class.blink::MemberBase.2170" }
%"class.blink::MemberBase.2170" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2171" = type { %"class.blink::MemberBase.2172" }
%"class.blink::MemberBase.2172" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2173" = type { %"class.WTF::HashSet.2176" }
%"class.WTF::HashSet.2176" = type { %"class.WTF::HashTable.2177" }
%"class.WTF::HashTable.2177" = type <{ %"class.blink::WeakMember.2179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2179" = type opaque
%"class.blink::HeapHashSet.2180" = type { %"class.WTF::HashSet.2183" }
%"class.WTF::HashSet.2183" = type { %"class.WTF::HashTable.2184" }
%"class.WTF::HashTable.2184" = type <{ %"class.blink::WeakMember.2186"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2186" = type opaque
%"class.std::__1::unique_ptr.2187" = type { %"class.std::__1::__compressed_pair.2188" }
%"class.std::__1::__compressed_pair.2188" = type { %"struct.std::__1::__compressed_pair_elem.2189" }
%"struct.std::__1::__compressed_pair_elem.2189" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2190" }
%"class.base::time_internal::TimeBase.2190" = type { i64 }
%"class.std::__1::unique_ptr.2194" = type { %"class.std::__1::__compressed_pair.2195" }
%"class.std::__1::__compressed_pair.2195" = type { %"struct.std::__1::__compressed_pair_elem.2196" }
%"struct.std::__1::__compressed_pair_elem.2196" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2197", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2197" = type { %"class.absl::optional_internal::optional_data.2198" }
%"class.absl::optional_internal::optional_data.2198" = type { %"class.absl::optional_internal::optional_data_base.2199" }
%"class.absl::optional_internal::optional_data_base.2199" = type { %"class.absl::optional_internal::optional_data_dtor_base.2200" }
%"class.absl::optional_internal::optional_data_dtor_base.2200" = type { i8, %union.anon.2201 }
%union.anon.2201 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2205" = type { %"class.std::__1::__compressed_pair.2206" }
%"class.std::__1::__compressed_pair.2206" = type { %"struct.std::__1::__compressed_pair_elem.2207" }
%"struct.std::__1::__compressed_pair_elem.2207" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2211" = type { %"class.std::__1::__compressed_pair.2212" }
%"class.std::__1::__compressed_pair.2212" = type { %"struct.std::__1::__compressed_pair_elem.2213" }
%"struct.std::__1::__compressed_pair_elem.2213" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2217" = type { %"class.std::__1::__compressed_pair.2218" }
%"class.std::__1::__compressed_pair.2218" = type { %"struct.std::__1::__compressed_pair_elem.2219" }
%"struct.std::__1::__compressed_pair_elem.2219" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type { %"class.blink::LayoutView"*, i8, i8, i32, %"class.blink::CompositingInputsRoot" }
%"class.blink::CompositingInputsRoot" = type { %"class.blink::PaintLayer"* }
%class.scoped_refptr.1974 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2223" = type { %"class.blink::PersistentBase.2224" }
%"class.blink::PersistentBase.2224" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2227", i64 }
%"class.blink::HeapVector.2227" = type { %"class.WTF::Vector.2230" }
%"class.WTF::Vector.2230" = type { %"class.WTF::VectorBuffer.2231" }
%"class.WTF::VectorBuffer.2231" = type { %"class.WTF::VectorBufferBase.2232", [368 x i8] }
%"class.WTF::VectorBufferBase.2232" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.782", i8, %"class.blink::Member.2233", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2233" = type { %"class.blink::MemberBase.2234" }
%"class.blink::MemberBase.2234" = type { %"class.blink::HeapLinkedHashSet.2235"* }
%"class.blink::HeapLinkedHashSet.2235" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1480" = type { %"class.WTF::Vector.1483" }
%"class.WTF::Vector.1483" = type { %"class.WTF::VectorBuffer.1484" }
%"class.WTF::VectorBuffer.1484" = type { %"class.WTF::VectorBufferBase.1485" }
%"class.WTF::VectorBufferBase.1485" = type { %"class.blink::Member.1486"*, i32, i32 }
%"class.blink::Member.1486" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1488" = type { %"class.blink::MemberBase.1489" }
%"class.blink::MemberBase.1489" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1492" = type { %"class.blink::MemberBase.1493" }
%"class.blink::MemberBase.1493" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1498" = type { %"class.WTF::HashTable.1499" }
%"class.WTF::HashTable.1499" = type <{ %"struct.WTF::KeyValuePair.1502"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1502" = type opaque
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1054" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1055", { i64, i64 } }
%"class.blink::HeapHashSet.1511" = type { %"class.WTF::HashSet.1514" }
%"class.WTF::HashSet.1514" = type { %"class.WTF::HashTable.1515" }
%"class.WTF::HashTable.1515" = type <{ %"class.blink::Member.1517"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1517" = type opaque
%"class.blink::Member.1518" = type { %"class.blink::MemberBase.1519" }
%"class.blink::MemberBase.1519" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1522" = type { %"class.blink::MemberBase.1523" }
%"class.blink::MemberBase.1523" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1528" = type { %"class.std::__1::__compressed_pair.1529" }
%"class.std::__1::__compressed_pair.1529" = type { %"struct.std::__1::__compressed_pair_elem.1530" }
%"struct.std::__1::__compressed_pair_elem.1530" = type { %"class.ukm::UkmRecorder"* }
%"class.std::__1::unique_ptr.1534" = type { %"class.std::__1::__compressed_pair.1535" }
%"class.std::__1::__compressed_pair.1535" = type { %"struct.std::__1::__compressed_pair_elem.1536" }
%"struct.std::__1::__compressed_pair_elem.1536" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1537", %"class.WTF::HashMap.1537", %"class.WTF::HashMap.1537", %"class.WTF::HashMap.1537", %"class.WTF::HashMap.1537", %"class.WTF::HashMap.1537", %"class.WTF::HashMap.1537", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1537" = type { %"class.WTF::HashTable.1538" }
%"class.WTF::HashTable.1538" = type <{ %"struct.WTF::KeyValuePair.1541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1541" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1547" = type { %"class.blink::MemberBase.1548" }
%"class.blink::MemberBase.1548" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1549" = type { %"class.blink::MemberBase.1550" }
%"class.blink::MemberBase.1550" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1551" = type { %"class.blink::MemberBase.1552" }
%"class.blink::MemberBase.1552" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.1555", %"class.blink::Member.1555", i32, i8, [3 x i8] }>
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.blink::Member.1558", %"class.blink::UntracedMember", %"class.blink::HeapLinkedHashSet", %"class.WTF::Vector.1570", double, %"class.WTF::Vector.701", i32, i8, [3 x i8] }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1557" }
%"class.blink::WeakMember.1557" = type { %"class.blink::MemberBase.1007" }
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::IntersectionObserverDelegate"* }
%"class.blink::IntersectionObserverDelegate" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1562", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1562" = type { %"class.WTF::HashTable.1563" }
%"class.WTF::HashTable.1563" = type <{ %"struct.WTF::KeyValuePair.1565"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1565" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1566", i32, i32 }
%"class.WTF::Vector.1566" = type { %"class.WTF::VectorBuffer.1567" }
%"class.WTF::VectorBuffer.1567" = type { %"class.WTF::VectorBufferBase.1568" }
%"class.WTF::VectorBufferBase.1568" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Vector.1570" = type { %"class.WTF::VectorBuffer.1571" }
%"class.WTF::VectorBuffer.1571" = type { %"class.WTF::VectorBufferBase.1572" }
%"class.WTF::VectorBufferBase.1572" = type { float*, i32, i32 }
%"class.WTF::Vector.1575" = type { %"class.WTF::VectorBuffer.1576" }
%"class.WTF::VectorBuffer.1576" = type { %"class.WTF::VectorBufferBase.1577" }
%"class.WTF::VectorBufferBase.1577" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1580" = type { %"class.WTF::HashMap.1583" }
%"class.WTF::HashMap.1583" = type { %"class.WTF::HashTable.1584" }
%"class.WTF::HashTable.1584" = type <{ %"struct.WTF::KeyValuePair.1586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1586" = type opaque
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1589" = type { %"class.std::__1::__compressed_pair.1590" }
%"class.std::__1::__compressed_pair.1590" = type { %"struct.std::__1::__compressed_pair_elem.1591" }
%"struct.std::__1::__compressed_pair_elem.1591" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1595" = type { %"class.blink::MemberBase.1596" }
%"class.blink::MemberBase.1596" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1599" = type { %"class.WTF::HashMap.1602" }
%"class.WTF::HashMap.1602" = type { %"class.WTF::HashTable.1603" }
%"class.WTF::HashTable.1603" = type <{ %"struct.WTF::KeyValuePair.1605"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1605" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1606" }
%"class.blink::HeapHashSet.1606" = type { %"class.WTF::HashSet.1609" }
%"class.WTF::HashSet.1609" = type { %"class.WTF::HashTable.1610" }
%"class.WTF::HashTable.1610" = type <{ %"class.blink::WeakMember.1612"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1612" = type opaque
%"class.blink::Member.1613" = type { %"class.blink::MemberBase.1614" }
%"class.blink::MemberBase.1614" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1615" = type { %"class.blink::MemberBase.1616" }
%"class.blink::MemberBase.1616" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1622", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1629", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1622" = type { %"class.WTF::HashSet.1625" }
%"class.WTF::HashSet.1625" = type { %"class.WTF::HashTable.1626" }
%"class.WTF::HashTable.1626" = type <{ %"class.blink::Member.1628"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1628" = type opaque
%"class.blink::HeapTaskRunnerTimer.1629" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1630", { i64, i64 } }
%"class.blink::WeakMember.1630" = type { %"class.blink::MemberBase.1616" }
%"class.blink::WeakMember.1617" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::AXObjectCacheImpl" = type { %"class.blink::AXObjectCacheBase", %"class.blink::mojom::blink::PermissionObserver", %"class.blink::Member.326", %"class.ui::AXMode", [4 x i8], %"class.blink::HeapHashMap.3008", %"class.blink::HeapHashMap.3015", %"class.WTF::HashMap.3022", %"class.blink::HeapHashMap.3027", %"class.WTF::HashMap.3034", i32, [4 x i8], %"class.WTF::HashSet.3039", i32, %"class.blink::WeakMember.3043", %"class.std::__1::unique_ptr.3044", %"class.blink::HeapVector.3067", i32, %"class.blink::HeapMojoRemote.3075", %"class.blink::HeapMojoReceiver.3078", %"class.blink::HeapHashSet.3081", %"class.blink::HeapVector.3087", %"class.blink::HeapHashSet.3095", i32, i8, [3 x i8], %"class.WTF::HashMap.3101", %"class.WTF::HashSet.3039", %"class.WTF::HashSet.3039", i32, i32, %"class.WTF::HashCountedSet", i8, [7 x i8], %"class.WTF::HashSet.3039" }
%"class.blink::AXObjectCacheBase" = type { %"class.blink::AXObjectCache" }
%"class.blink::mojom::blink::PermissionObserver" = type { i32 (...)** }
%"class.ui::AXMode" = type { i32 }
%"class.blink::HeapHashMap.3008" = type { %"class.WTF::HashMap.3011" }
%"class.WTF::HashMap.3011" = type { %"class.WTF::HashTable.3012" }
%"class.WTF::HashTable.3012" = type <{ %"struct.WTF::KeyValuePair.3014"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3014" = type { i32, %"class.blink::Member.2997" }
%"class.blink::HeapHashMap.3015" = type { %"class.WTF::HashMap.3018" }
%"class.WTF::HashMap.3018" = type { %"class.WTF::HashTable.3019" }
%"class.WTF::HashTable.3019" = type <{ %"struct.WTF::KeyValuePair.3021"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3021" = type opaque
%"class.WTF::HashMap.3022" = type { %"class.WTF::HashTable.3023" }
%"class.WTF::HashTable.3023" = type <{ %"struct.WTF::KeyValuePair.3026"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3026" = type opaque
%"class.blink::HeapHashMap.3027" = type { %"class.WTF::HashMap.3030" }
%"class.WTF::HashMap.3030" = type { %"class.WTF::HashTable.3031" }
%"class.WTF::HashTable.3031" = type <{ %"struct.WTF::KeyValuePair.3033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3033" = type opaque
%"class.WTF::HashMap.3034" = type { %"class.WTF::HashTable.3035" }
%"class.WTF::HashTable.3035" = type <{ %"struct.WTF::KeyValuePair.3038"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3038" = type opaque
%"class.blink::WeakMember.3043" = type { %"class.blink::MemberBase.2998" }
%"class.std::__1::unique_ptr.3044" = type { %"class.std::__1::__compressed_pair.3045" }
%"class.std::__1::__compressed_pair.3045" = type { %"struct.std::__1::__compressed_pair_elem.3046" }
%"struct.std::__1::__compressed_pair_elem.3046" = type { %"class.blink::AXRelationCache"* }
%"class.blink::AXRelationCache" = type { i32 (...)**, i8, %"class.blink::WeakPersistent.3047", %"class.WTF::HashMap.3049", %"class.WTF::HashMap.3054", %"class.WTF::HashMap.3059", %"class.WTF::HashSet.425", %"class.WTF::HashSet.3039" }
%"class.blink::WeakPersistent.3047" = type { %"class.blink::PersistentBase.3048" }
%"class.blink::PersistentBase.3048" = type { %"class.blink::AXObjectCacheImpl"*, %"class.blink::PersistentNodePtr" }
%"class.WTF::HashMap.3049" = type { %"class.WTF::HashTable.3050" }
%"class.WTF::HashTable.3050" = type <{ %"struct.WTF::KeyValuePair.3053"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3053" = type opaque
%"class.WTF::HashMap.3054" = type { %"class.WTF::HashTable.3055" }
%"class.WTF::HashTable.3055" = type <{ %"struct.WTF::KeyValuePair.3058"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3058" = type opaque
%"class.WTF::HashMap.3059" = type { %"class.WTF::HashTable.3060" }
%"class.WTF::HashTable.3060" = type <{ %"struct.WTF::KeyValuePair.3063"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3063" = type opaque
%"class.blink::HeapVector.3067" = type { %"class.WTF::Vector.3070" }
%"class.WTF::Vector.3070" = type { %"class.WTF::VectorBuffer.3071" }
%"class.WTF::VectorBuffer.3071" = type { %"class.WTF::VectorBufferBase.3072" }
%"class.WTF::VectorBufferBase.3072" = type { %"class.blink::Member.3073"*, i32, i32 }
%"class.blink::Member.3073" = type opaque
%"class.blink::HeapMojoRemote.3075" = type { %"class.blink::Member.3076" }
%"class.blink::Member.3076" = type { %"class.blink::MemberBase.3077" }
%"class.blink::MemberBase.3077" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver.3078" = type { %"class.blink::Member.3079" }
%"class.blink::Member.3079" = type { %"class.blink::MemberBase.3080" }
%"class.blink::MemberBase.3080" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapHashSet.3081" = type { %"class.WTF::HashSet.3084" }
%"class.WTF::HashSet.3084" = type { %"class.WTF::HashTable.3085" }
%"class.WTF::HashTable.3085" = type <{ %"class.blink::WeakMember.1055"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.3087" = type { %"class.WTF::Vector.3090" }
%"class.WTF::Vector.3090" = type { %"class.WTF::VectorBuffer.3091" }
%"class.WTF::VectorBuffer.3091" = type { %"class.WTF::VectorBufferBase.3092" }
%"class.WTF::VectorBufferBase.3092" = type { %"class.blink::Member.3093"*, i32, i32 }
%"class.blink::Member.3093" = type opaque
%"class.blink::HeapHashSet.3095" = type { %"class.WTF::HashSet.3098" }
%"class.WTF::HashSet.3098" = type { %"class.WTF::HashTable.3099" }
%"class.WTF::HashTable.3099" = type <{ %"class.blink::WeakMember.1617"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.3101" = type { %"class.WTF::HashTable.3102" }
%"class.WTF::HashTable.3102" = type <{ %"struct.WTF::KeyValuePair.3105"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3105" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.3106" }
%"class.WTF::HashMap.3106" = type { %"class.WTF::HashTable.3107" }
%"class.WTF::HashTable.3107" = type <{ %"struct.WTF::KeyValuePair.3110"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3110" = type { %"class.blink::BlinkAXEventIntent", i32, [4 x i8] }
%"class.blink::BlinkAXEventIntent" = type <{ i32 (...)**, %"struct.ui::AXEventIntent", i8, i8, [6 x i8] }>
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.WTF::HashSet.3039" = type { %"class.WTF::HashTable.3040" }
%"class.WTF::HashTable.3040" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::WebKeyboardEvent" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.blink::Decimal" = type { %"class.blink::Decimal::EncodedData" }
%"class.blink::Decimal::EncodedData" = type <{ i64, i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.blink::StepRange" = type <{ %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"class.blink::Decimal", %"struct.blink::StepRange::StepDescription", i8, i8, i8, [5 x i8] }>
%"struct.blink::StepRange::StepDescription" = type { i32, i32, i32, i32 }
%"class.blink::KeyboardEvent" = type { %"class.blink::UIEventWithKeyState.base", %"class.std::__1::unique_ptr.3124", %"class.WTF::String", %"class.WTF::String", i32, i8, i32, i32 }
%"class.blink::UIEventWithKeyState.base" = type <{ %"class.blink::UIEvent", i32 }>
%"class.blink::UIEvent" = type { %"class.blink::Event", %"class.blink::Member.2246", i32, %"class.blink::Member.3122" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.3116", %"class.blink::Member.3116", %"class.blink::Member.3118", %"class.blink::Member.3120", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.3111" }
%"class.absl::optional.3111" = type { %"class.absl::optional_internal::optional_data.3112" }
%"class.absl::optional_internal::optional_data.3112" = type { %"class.absl::optional_internal::optional_data_base.3113" }
%"class.absl::optional_internal::optional_data_base.3113" = type { %"class.absl::optional_internal::optional_data_dtor_base.3114" }
%"class.absl::optional_internal::optional_data_dtor_base.3114" = type { i8, %union.anon.3115 }
%union.anon.3115 = type { i64 }
%"class.blink::Member.3116" = type { %"class.blink::MemberBase.3117" }
%"class.blink::MemberBase.3117" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.3118" = type { %"class.blink::MemberBase.3119" }
%"class.blink::MemberBase.3119" = type { %"class.blink::Event"* }
%"class.blink::Member.3120" = type { %"class.blink::MemberBase.3121" }
%"class.blink::MemberBase.3121" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::Member.3122" = type { %"class.blink::MemberBase.3123" }
%"class.blink::MemberBase.3123" = type { %"class.blink::InputDeviceCapabilities"* }
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.std::__1::unique_ptr.3124" = type { %"class.std::__1::__compressed_pair.3125" }
%"class.std::__1::__compressed_pair.3125" = type { %"struct.std::__1::__compressed_pair_elem.3126" }
%"struct.std::__1::__compressed_pair_elem.3126" = type { %"class.blink::WebKeyboardEvent"* }
%"class.blink::HeapVector.3130" = type { %"class.WTF::Vector.3133" }
%"class.WTF::Vector.3133" = type { %"class.WTF::VectorBuffer.3134" }
%"class.WTF::VectorBuffer.3134" = type { %"class.WTF::VectorBufferBase.3135" }
%"class.WTF::VectorBufferBase.3135" = type { %"class.blink::IgnoredReason"*, i32, i32 }
%"class.blink::IgnoredReason" = type { i32, %"class.blink::Member.3136" }
%"class.blink::Member.3136" = type { %"class.blink::MemberBase.3137" }
%"class.blink::MemberBase.3137" = type { %"class.blink::AXObject"* }
%"class.absl::optional.3139" = type { %"class.absl::optional_internal::optional_data.3140" }
%"class.absl::optional_internal::optional_data.3140" = type { %"class.absl::optional_internal::optional_data_base.3141" }
%"class.absl::optional_internal::optional_data_base.3141" = type { %"class.absl::optional_internal::optional_data_dtor_base.3142" }
%"class.absl::optional_internal::optional_data_dtor_base.3142" = type { i8, %union.anon.3143 }
%union.anon.3143 = type { %"class.WTF::String" }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1407", %"class.blink::Member.4126", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.4126" = type { %"class.blink::MemberBase.4127" }
%"class.blink::MemberBase.4127" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::HTMLLabelElement" = type <{ %"class.blink::HTMLElement", i8, [7 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.4130", %"class.blink::Member.4132", %"class.blink::Member.4134", %"class.blink::Member.4153", %"class.blink::Member.4155" }
%"class.blink::Member.4130" = type { %"class.blink::MemberBase.4131" }
%"class.blink::MemberBase.4131" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.4132" = type { %"class.blink::MemberBase.4133" }
%"class.blink::MemberBase.4133" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.4134" = type { %"class.blink::MemberBase.4135" }
%"class.blink::MemberBase.4135" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.4138", %"class.blink::HeapHashSet.4147" }
%"class.blink::HeapVector.4138" = type { %"class.WTF::Vector.4141" }
%"class.WTF::Vector.4141" = type { %"class.WTF::VectorBuffer.4142" }
%"class.WTF::VectorBuffer.4142" = type { %"class.WTF::VectorBufferBase.4143" }
%"class.WTF::VectorBufferBase.4143" = type { %"class.blink::Member.4144"*, i32, i32 }
%"class.blink::Member.4144" = type { %"class.blink::MemberBase.4145" }
%"class.blink::MemberBase.4145" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.4147" = type { %"class.WTF::HashSet.4150" }
%"class.WTF::HashSet.4150" = type { %"class.WTF::HashTable.4151" }
%"class.WTF::HashTable.4151" = type <{ %"class.blink::Member.4144"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.4153" = type { %"class.blink::MemberBase.4154" }
%"class.blink::MemberBase.4154" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.4155" = type { %"class.blink::MemberBase.4156" }
%"class.blink::MemberBase.4156" = type { %"class.blink::HeapHashSet.4157"* }
%"class.blink::HeapHashSet.4157" = type opaque
%"class.blink::AltTextContentData" = type { %"class.blink::ContentData", %"class.WTF::String" }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable.3160", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.3161", %"class.blink::Member.3167", %"class.blink::Member.3169", %"class.blink::Member.3226", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.3158", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.3152", %"class.blink::Member.3154", %"class.blink::Member.3156", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.3152" = type { %"class.blink::MemberBase.3153" }
%"class.blink::MemberBase.3153" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.3154" = type { %"class.blink::MemberBase.3155" }
%"class.blink::MemberBase.3155" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.3156" = type { %"class.blink::MemberBase.3157" }
%"class.blink::MemberBase.3157" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.3158" = type { %"class.blink::MemberBase.3159" }
%"class.blink::MemberBase.3159" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable.3160" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.3161" = type { %"class.blink::MemberBase.3162" }
%"class.blink::MemberBase.3162" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type { i32 (...)**, %"class.blink::Member.3165" }
%"class.blink::Member.3165" = type { %"class.blink::MemberBase.3166" }
%"class.blink::MemberBase.3166" = type { %"class.blink::HTMLInputElement"* }
%"class.blink::Member.3167" = type { %"class.blink::MemberBase.3168" }
%"class.blink::MemberBase.3168" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type { %"class.blink::GarbageCollectedMixin", i8, %"class.blink::Member.3165" }
%"class.blink::Member.3169" = type { %"class.blink::MemberBase.3170" }
%"class.blink::MemberBase.3170" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3173", %"class.blink::Member.343", %"class.blink::Member.3174", %"class.blink::Member.3174", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.3211", %"class.std::__1::unique_ptr.3212", %"class.std::__1::unique_ptr.3212", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.3218" }
%"class.blink::ThreadState::PrefinalizerRegistration.3173" = type { i8 }
%"class.blink::Member.3174" = type { %"class.blink::MemberBase.3175" }
%"class.blink::MemberBase.3175" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.3178", float, i8, %class.scoped_refptr.3180, %"class.WTF::HashCountedSet.3205", %"class.WTF::HashCountedSet.3205" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.3178" = type { %"class.blink::MemberBase.3179" }
%"class.blink::MemberBase.3179" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.3180 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.3181", i8, %class.scoped_refptr.3183, %"class.blink::WeakPersistent.3197", i32, i8, %"class.std::__1::unique_ptr.3199" }
%"class.WTF::ThreadSafeRefCounted.3181" = type { %"class.base::RefCountedThreadSafe.3182" }
%"class.base::RefCountedThreadSafe.3182" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.3183 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.3184", i64, %"class.WTF::Vector.3186", %"class.WTF::Vector.3191" }
%"class.WTF::RefCounted.3184" = type { %"class.base::RefCounted.3185" }
%"class.base::RefCounted.3185" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3186" = type { %"class.WTF::VectorBuffer.3187" }
%"class.WTF::VectorBuffer.3187" = type { %"class.WTF::VectorBufferBase.3188" }
%"class.WTF::VectorBufferBase.3188" = type { i8*, i32, i32 }
%"class.WTF::Vector.3191" = type { %"class.WTF::VectorBuffer.3192" }
%"class.WTF::VectorBuffer.3192" = type { %"class.WTF::VectorBufferBase.3193" }
%"class.WTF::VectorBufferBase.3193" = type { %"class.std::__1::unique_ptr.3194"*, i32, i32 }
%"class.std::__1::unique_ptr.3194" = type opaque
%"class.blink::WeakPersistent.3197" = type { %"class.blink::PersistentBase.3198" }
%"class.blink::PersistentBase.3198" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.3199" = type { %"class.std::__1::__compressed_pair.3200" }
%"class.std::__1::__compressed_pair.3200" = type { %"struct.std::__1::__compressed_pair_elem.3201" }
%"struct.std::__1::__compressed_pair_elem.3201" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet.3205" = type { %"class.WTF::HashMap.3206" }
%"class.WTF::HashMap.3206" = type { %"class.WTF::HashTable.3207" }
%"class.WTF::HashTable.3207" = type <{ %"struct.WTF::KeyValuePair.3210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3210" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.base::WeakPtr.3211" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3212" = type { %"class.std::__1::__compressed_pair.3213" }
%"class.std::__1::__compressed_pair.3213" = type { %"struct.std::__1::__compressed_pair_elem.3214" }
%"struct.std::__1::__compressed_pair_elem.3214" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector.3218" = type { %"class.WTF::Vector.3221" }
%"class.WTF::Vector.3221" = type { %"class.WTF::VectorBuffer.3222" }
%"class.WTF::VectorBuffer.3222" = type { %"class.WTF::VectorBufferBase.3223" }
%"class.WTF::VectorBufferBase.3223" = type { %"class.blink::Member.3224"*, i32, i32 }
%"class.blink::Member.3224" = type opaque
%"class.blink::Member.3226" = type { %"class.blink::MemberBase.3227" }
%"class.blink::MemberBase.3227" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::LabelsNodeList" = type { %"class.blink::LiveNodeList" }
%"class.blink::LiveNodeList" = type { %"class.blink::NodeList", %"class.blink::LiveNodeListBase.base", %"class.blink::CollectionItemsCache" }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::LiveNodeListBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", i16 }>
%"class.blink::CollectionItemsCache" = type { %"class.blink::CollectionIndexCache", i8, %"class.blink::HeapVector.365" }
%"class.blink::CollectionIndexCache" = type { i32 (...)**, %"class.blink::Member.343", i32, i32 }
%"class.WTF::HashSet.3148" = type { %"class.WTF::HashTable.3149" }
%"class.WTF::HashTable.3149" = type <{ %"class.blink::QualifiedName"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::HTMLDataListElement" = type opaque
%"class.blink::HTMLSelectElement" = type <{ %"class.blink::HTMLFormControlElementWithState.base", [2 x i8], %"class.blink::TypeAheadDataSource", %"class.blink::HeapVector.3228", %"class.blink::TypeAhead", i32, [4 x i8], %"class.blink::Member.3253", %"class.blink::Member.3253", i8, i8, i8, i8, [4 x i8], %"class.blink::Member.3257", i32, [4 x i8] }>
%"class.blink::TypeAheadDataSource" = type { i32 (...)** }
%"class.blink::HeapVector.3228" = type { %"class.WTF::Vector.3231" }
%"class.WTF::Vector.3231" = type { %"class.WTF::VectorBuffer.3232" }
%"class.WTF::VectorBuffer.3232" = type { %"class.WTF::VectorBufferBase.3233" }
%"class.WTF::VectorBufferBase.3233" = type { %"class.blink::Member.3234"*, i32, i32 }
%"class.blink::Member.3234" = type { %"class.blink::MemberBase.3235" }
%"class.blink::MemberBase.3235" = type { %"class.blink::HTMLElement"* }
%"class.blink::TypeAhead" = type { %"class.blink::TypeAheadDataSource"*, %"class.absl::optional.3237", i16, [6 x i8], %"class.WTF::StringBuilder" }
%"class.absl::optional.3237" = type { %"class.absl::optional_internal::optional_data.3238" }
%"class.absl::optional_internal::optional_data.3238" = type { %"class.absl::optional_internal::optional_data_base.3239" }
%"class.absl::optional_internal::optional_data_base.3239" = type { %"class.absl::optional_internal::optional_data_dtor_base.3240" }
%"class.absl::optional_internal::optional_data_dtor_base.3240" = type { i8, %union.anon.3241 }
%union.anon.3241 = type { %"class.base::TimeTicks" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.3242, i32, i8, i8, [2 x i8] }>
%union.anon.3242 = type { %"class.WTF::Vector.3243" }
%"class.WTF::Vector.3243" = type { %"class.WTF::VectorBuffer.3244" }
%"class.WTF::VectorBuffer.3244" = type { %"class.WTF::VectorBufferBase.3245", [16 x i8] }
%"class.WTF::VectorBufferBase.3245" = type { i8*, i32, i32 }
%"class.blink::Member.3253" = type { %"class.blink::MemberBase.3254" }
%"class.blink::MemberBase.3254" = type { %"class.blink::HTMLOptionElement"* }
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.3255", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.3255" = type { %"class.blink::MemberBase.3256" }
%"class.blink::MemberBase.3256" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::Member.3257" = type { %"class.blink::MemberBase.3258" }
%"class.blink::MemberBase.3258" = type { %"class.blink::SelectType"* }
%"class.blink::SelectType" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.4169" }
%"class.WTF::Vector.4169" = type { %"class.WTF::VectorBuffer.4170" }
%"class.WTF::VectorBuffer.4170" = type { %"class.WTF::VectorBufferBase.4171", [64 x i8] }
%"class.WTF::VectorBufferBase.4171" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.3259", %"class.std::__1::vector.3267", %"class.std::__1::vector.3275", %"class.std::__1::vector.3283", %"class.std::__1::vector.3291", %"class.std::__1::vector.3299", %"class.std::__1::vector.3307", %"class.std::__1::vector.3315", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.3259" = type { %"class.std::__1::__vector_base.3260" }
%"class.std::__1::__vector_base.3260" = type { %"struct.std::__1::pair.3261"*, %"struct.std::__1::pair.3261"*, %"class.std::__1::__compressed_pair.3262" }
%"struct.std::__1::pair.3261" = type opaque
%"class.std::__1::__compressed_pair.3262" = type { %"struct.std::__1::__compressed_pair_elem.3263" }
%"struct.std::__1::__compressed_pair_elem.3263" = type { %"struct.std::__1::pair.3261"* }
%"class.std::__1::vector.3267" = type { %"class.std::__1::__vector_base.3268" }
%"class.std::__1::__vector_base.3268" = type { %"struct.std::__1::pair.3269"*, %"struct.std::__1::pair.3269"*, %"class.std::__1::__compressed_pair.3270" }
%"struct.std::__1::pair.3269" = type opaque
%"class.std::__1::__compressed_pair.3270" = type { %"struct.std::__1::__compressed_pair_elem.3271" }
%"struct.std::__1::__compressed_pair_elem.3271" = type { %"struct.std::__1::pair.3269"* }
%"class.std::__1::vector.3275" = type { %"class.std::__1::__vector_base.3276" }
%"class.std::__1::__vector_base.3276" = type { %"struct.std::__1::pair.3277"*, %"struct.std::__1::pair.3277"*, %"class.std::__1::__compressed_pair.3278" }
%"struct.std::__1::pair.3277" = type opaque
%"class.std::__1::__compressed_pair.3278" = type { %"struct.std::__1::__compressed_pair_elem.3279" }
%"struct.std::__1::__compressed_pair_elem.3279" = type { %"struct.std::__1::pair.3277"* }
%"class.std::__1::vector.3283" = type { %"class.std::__1::__vector_base.3284" }
%"class.std::__1::__vector_base.3284" = type { %"struct.std::__1::pair.3285"*, %"struct.std::__1::pair.3285"*, %"class.std::__1::__compressed_pair.3286" }
%"struct.std::__1::pair.3285" = type opaque
%"class.std::__1::__compressed_pair.3286" = type { %"struct.std::__1::__compressed_pair_elem.3287" }
%"struct.std::__1::__compressed_pair_elem.3287" = type { %"struct.std::__1::pair.3285"* }
%"class.std::__1::vector.3291" = type { %"class.std::__1::__vector_base.3292" }
%"class.std::__1::__vector_base.3292" = type { %"struct.std::__1::pair.3293"*, %"struct.std::__1::pair.3293"*, %"class.std::__1::__compressed_pair.3294" }
%"struct.std::__1::pair.3293" = type opaque
%"class.std::__1::__compressed_pair.3294" = type { %"struct.std::__1::__compressed_pair_elem.3295" }
%"struct.std::__1::__compressed_pair_elem.3295" = type { %"struct.std::__1::pair.3293"* }
%"class.std::__1::vector.3299" = type { %"class.std::__1::__vector_base.3300" }
%"class.std::__1::__vector_base.3300" = type { %"struct.std::__1::pair.3301"*, %"struct.std::__1::pair.3301"*, %"class.std::__1::__compressed_pair.3302" }
%"struct.std::__1::pair.3301" = type opaque
%"class.std::__1::__compressed_pair.3302" = type { %"struct.std::__1::__compressed_pair_elem.3303" }
%"struct.std::__1::__compressed_pair_elem.3303" = type { %"struct.std::__1::pair.3301"* }
%"class.std::__1::vector.3307" = type { %"class.std::__1::__vector_base.3308" }
%"class.std::__1::__vector_base.3308" = type { %"struct.std::__1::pair.3309"*, %"struct.std::__1::pair.3309"*, %"class.std::__1::__compressed_pair.3310" }
%"struct.std::__1::pair.3309" = type opaque
%"class.std::__1::__compressed_pair.3310" = type { %"struct.std::__1::__compressed_pair_elem.3311" }
%"struct.std::__1::__compressed_pair_elem.3311" = type { %"struct.std::__1::pair.3309"* }
%"class.std::__1::vector.3315" = type { %"class.std::__1::__vector_base.3316" }
%"class.std::__1::__vector_base.3316" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3317" }
%"class.std::__1::__compressed_pair.3317" = type { %"struct.std::__1::__compressed_pair_elem.3318" }
%"struct.std::__1::__compressed_pair_elem.3318" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.3322" }
%"class.std::__1::unique_ptr.3322" = type { %"class.std::__1::__compressed_pair.3323" }
%"class.std::__1::__compressed_pair.3323" = type { %"struct.std::__1::__compressed_pair_elem.3324" }
%"struct.std::__1::__compressed_pair_elem.3324" = type { %"class.gfx::Transform"* }
%"class.blink::AXRange" = type { %"class.blink::AXPosition", %"class.blink::AXPosition" }
%"class.blink::AXPosition" = type { %"class.blink::WeakPersistent.3367", i32, i32 }
%"class.blink::WeakPersistent.3367" = type { %"class.blink::PersistentBase.3368" }
%"class.blink::PersistentBase.3368" = type { %"class.blink::AXObject"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.3369" = type { %"class.WTF::Vector.3372" }
%"class.WTF::Vector.3372" = type { %"class.WTF::VectorBuffer.3373" }
%"class.WTF::VectorBuffer.3373" = type { %"class.WTF::VectorBufferBase.3374" }
%"class.WTF::VectorBufferBase.3374" = type { %"class.blink::Member.3375"*, i32, i32 }
%"class.blink::Member.3375" = type { %"class.blink::MemberBase.3376" }
%"class.blink::MemberBase.3376" = type { %"class.blink::DocumentMarker"* }
%"class.blink::DocumentMarker" = type { i32 (...)**, i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.3328 }
%class.scoped_refptr.3328 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.3329", %"class.WTF::String", %"class.std::__1::unique_ptr.3331" }
%"class.WTF::RefCounted.3329" = type { %"class.base::RefCounted.3330" }
%"class.base::RefCounted.3330" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.3331" = type { %"class.std::__1::__compressed_pair.3332" }
%"class.std::__1::__compressed_pair.3332" = type { %"struct.std::__1::__compressed_pair_elem.3333" }
%"struct.std::__1::__compressed_pair_elem.3333" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.3334", %"class.std::__1::unique_ptr.3344", %"class.WTF::Vector.3350", i8, i32 }
%"class.std::__1::unique_ptr.3334" = type { %"class.std::__1::__compressed_pair.3335" }
%"class.std::__1::__compressed_pair.3335" = type { %"struct.std::__1::__compressed_pair_elem.3336" }
%"struct.std::__1::__compressed_pair_elem.3336" = type { %"class.WTF::Vector.3337"* }
%"class.WTF::Vector.3337" = type { %"class.WTF::VectorBuffer.3338" }
%"class.WTF::VectorBuffer.3338" = type { %"class.WTF::VectorBufferBase.3245" }
%"class.std::__1::unique_ptr.3344" = type { %"class.std::__1::__compressed_pair.3345" }
%"class.std::__1::__compressed_pair.3345" = type { %"struct.std::__1::__compressed_pair_elem.3346" }
%"struct.std::__1::__compressed_pair_elem.3346" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.3350" = type { %"class.WTF::VectorBuffer.3351" }
%"class.WTF::VectorBuffer.3351" = type { %"class.WTF::VectorBufferBase.3245", [32 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::HeapVector.3380" = type { %"class.WTF::Vector.3383" }
%"class.WTF::Vector.3383" = type { %"class.WTF::VectorBuffer.3384" }
%"class.WTF::VectorBuffer.3384" = type { %"class.WTF::VectorBufferBase.3385" }
%"class.WTF::VectorBufferBase.3385" = type { %"class.blink::Member.3165"*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.sk_sp.3527 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.3435, i32, i32 }
%class.sk_sp.3435 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.3436, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.3436 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.3527, %class.sk_sp.3556, %"class.gfx::Rect", i32, %class.sk_sp.3842, %class.sk_sp.3850, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.3527, %class.scoped_refptr.3851 }
%class.sk_sp.3556 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.3557", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.3557" = type { %"class.std::__1::__compressed_pair.3558" }
%"class.std::__1::__compressed_pair.3558" = type { %"struct.std::__1::__compressed_pair_elem.3559" }
%"struct.std::__1::__compressed_pair_elem.3559" = type { i8* }
%class.sk_sp.3842 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.3843" }
%"class.std::__1::vector.3843" = type { %"class.std::__1::__vector_base.3844" }
%"class.std::__1::__vector_base.3844" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.3845" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.3845" = type { %"struct.std::__1::__compressed_pair_elem.3846" }
%"struct.std::__1::__compressed_pair_elem.3846" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.3850 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.3851 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3852", [4 x i8] }>
%"class.base::RefCountedThreadSafe.3852" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.SkBitmap = type { %class.sk_sp.3434, %class.SkPixmap, %class.sk_sp.3437 }
%class.sk_sp.3434 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.3437 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.3420, [384 x i64], %class.sk_sp.3421, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.3422", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.3428" }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.blink::ImageBitmapOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, [6 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ImageBitmap" = type { %"class.blink::ScriptWrappable", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %class.scoped_refptr.3389, i8, i32 }
%"class.blink::CanvasImageSource" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.3389 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8, [6 x i8] }>
%"class.blink::ImageOrientation" = type { i8 }
%"class.blink::ImageElementBase" = type { %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", i32, i32 }
%"class.blink::HTMLCanvasElement" = type { %"class.blink::HTMLElement", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::PageVisibilityObserver", %"class.blink::CanvasRenderingContextHost", %"class.blink::WebSurfaceLayerBridgeObserver", %"class.blink::ImageBitmapSource", %"class.blink::OffscreenCanvasPlaceholder.base", %"class.blink::ThreadState::PrefinalizerRegistration.3511", [3 x i8], %"class.blink::HeapHashSet.3512", %"class.blink::IntSize", %"class.blink::Member.3519", i8, i8, i8, %"class.blink::FloatRect", i8, i8, i8, %"class.std::__1::unique_ptr.3524", %"class.std::__1::unique_ptr.3565", %"class.std::__1::unique_ptr.3646", i8, i64, %class.scoped_refptr.3389 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3403" }
%"class.blink::WeakMember.3403" = type { %"class.blink::MemberBase.2243" }
%"class.blink::CanvasRenderingContextHost" = type { %"class.blink::CanvasResourceHost.base", %"class.blink::CanvasImageSource", %"class.blink::GarbageCollectedMixin", i8, i8, i32 }
%"class.blink::CanvasResourceHost.base" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.3404", i32 }>
%"class.std::__1::unique_ptr.3404" = type { %"class.std::__1::__compressed_pair.3405" }
%"class.std::__1::__compressed_pair.3405" = type { %"struct.std::__1::__compressed_pair_elem.3406" }
%"struct.std::__1::__compressed_pair_elem.3406" = type { %"class.blink::CanvasResourceProvider"* }
%"class.blink::CanvasResourceProvider" = type { %"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver", %"class.base::CheckedObserver", %"class.blink::CanvasMemoryDumpClient", i32, %class.sk_sp.3408, i32, %"class.base::WeakPtr.3409", %"class.base::WeakPtr.3410", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceParams", i8, %"class.std::__1::unique_ptr.3411", %"class.std::__1::unique_ptr.3417", %"class.std::__1::unique_ptr.3447", i8, i32, i32, i32, %"class.WTF::Vector.3465", i8, i8, i64, i64, %"class.base::RepeatingCallback.3475", %"class.blink::IdentifiabilityPaintOpDigest", %"class.base::WeakPtrFactory.3500" }
%"class.blink::WebGraphicsContext3DProviderWrapper::DestructionObserver" = type { i32 (...)** }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.3407" }
%"class.base::WeakPtrFactory.3407" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::CanvasMemoryDumpClient" = type { i32 (...)** }
%class.sk_sp.3408 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%"class.base::WeakPtr.3409" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.3410" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::CanvasResourceParams" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.3411" = type { %"class.std::__1::__compressed_pair.3412" }
%"class.std::__1::__compressed_pair.3412" = type { %"struct.std::__1::__compressed_pair_elem.3413" }
%"struct.std::__1::__compressed_pair_elem.3413" = type { %"class.blink::CanvasResourceProvider::CanvasImageProvider"* }
%"class.blink::CanvasResourceProvider::CanvasImageProvider" = type opaque
%"class.std::__1::unique_ptr.3417" = type { %"class.std::__1::__compressed_pair.3418" }
%"class.std::__1::__compressed_pair.3418" = type { %"struct.std::__1::__compressed_pair_elem.3419" }
%"struct.std::__1::__compressed_pair_elem.3419" = type { %"class.cc::SkiaPaintCanvas"* }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.3438", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.3438" = type { %"class.std::__1::__compressed_pair.3439" }
%"class.std::__1::__compressed_pair.3439" = type { %"struct.std::__1::__compressed_pair_elem.3440" }
%"struct.std::__1::__compressed_pair_elem.3440" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::unique_ptr.3447" = type { %"class.std::__1::__compressed_pair.3448" }
%"class.std::__1::__compressed_pair.3448" = type { %"struct.std::__1::__compressed_pair_elem.3449" }
%"struct.std::__1::__compressed_pair_elem.3449" = type { %"class.blink::MemoryManagedPaintRecorder"* }
%"class.blink::MemoryManagedPaintRecorder" = type { %"class.cc::PaintRecorder", %"class.base::RepeatingCallback" }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.3450, %"class.std::__1::unique_ptr.3451" }
%class.scoped_refptr.3450 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.3451" = type { %"class.std::__1::__compressed_pair.3452" }
%"class.std::__1::__compressed_pair.3452" = type { %"struct.std::__1::__compressed_pair_elem.3453" }
%"struct.std::__1::__compressed_pair_elem.3453" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.3454", %struct.SkRect }
%"class.absl::optional.3454" = type { %"class.absl::optional_internal::optional_data.3455" }
%"class.absl::optional_internal::optional_data.3455" = type { %"class.absl::optional_internal::optional_data_base.3456" }
%"class.absl::optional_internal::optional_data_base.3456" = type { %"class.absl::optional_internal::optional_data_dtor_base.3457" }
%"class.absl::optional_internal::optional_data_dtor_base.3457" = type { i8, %union.anon.3458 }
%union.anon.3458 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%"class.WTF::Vector.3465" = type { %"class.WTF::VectorBuffer.3466" }
%"class.WTF::VectorBuffer.3466" = type { %"class.WTF::VectorBufferBase.3467" }
%"class.WTF::VectorBufferBase.3467" = type { %class.scoped_refptr.3468*, i32, i32 }
%class.scoped_refptr.3468 = type { %"class.blink::CanvasResource"* }
%"class.blink::CanvasResource" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.3469", %"class.base::PlatformThreadRef", %class.scoped_refptr.778, %"struct.gpu::SyncToken", %"class.base::WeakPtr.3472", i32, %"class.blink::CanvasResourceParams" }
%"class.WTF::ThreadSafeRefCounted.3469" = type { %"class.base::RefCountedThreadSafe.3470" }
%"class.base::RefCountedThreadSafe.3470" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::PlatformThreadRef" = type { i64 }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType", i64 }
%"class.util::IdType" = type { %"class.base::StrongAlias.3471" }
%"class.base::StrongAlias.3471" = type { i64 }
%"class.base::WeakPtr.3472" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::RepeatingCallback.3475" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::IdentifiabilityPaintOpDigest" = type <{ i32, [4 x i8], %"class.blink::IdentifiableTokenBuilder", i32, [4 x i8], i64, %"class.blink::IntSize", %"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider", %"class.cc::ClientPaintCache", %"struct.cc::PaintOp::SerializeOptions", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array.3476", i8*, i64 }
%"struct.std::__1::array.3476" = type { [64 x i8] }
%"class.blink::IdentifiabilityPaintOpDigest::IdentifiabilityImageProvider" = type { %"class.cc::ImageProvider", %"class.blink::IdentifiabilityPaintOpDigest"* }
%"class.cc::ClientPaintCache" = type { %"class.base::MRUCache", i64, i64, %"class.base::StackVector" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map.3481", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.3477" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.3477" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.3481" = type { %"class.std::__1::__tree.3482" }
%"class.std::__1::__tree.3482" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3483", %"class.std::__1::__compressed_pair.3487" }
%"class.std::__1::__compressed_pair.3483" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"class.std::__1::__compressed_pair.3487" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector.3494" }
%"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source" = type { [8 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<std::__1::pair<cc::PaintCacheDataType, unsigned int>, 1>::Source"* }
%"class.std::__1::vector.3494" = type { %"class.std::__1::__vector_base.3495" }
%"class.std::__1::__vector_base.3495" = type { %"struct.std::__1::pair.3496"*, %"struct.std::__1::pair.3496"*, %"class.std::__1::__compressed_pair.3497" }
%"struct.std::__1::pair.3496" = type { i32, i32 }
%"class.std::__1::__compressed_pair.3497" = type { %"struct.std::__1::__compressed_pair_elem.3498", %"struct.std::__1::__compressed_pair_elem.3499" }
%"struct.std::__1::__compressed_pair_elem.3498" = type { %"struct.std::__1::pair.3496"* }
%"struct.std::__1::__compressed_pair_elem.3499" = type { %"class.base::StackAllocator" }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp.3435, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::TransferCacheSerializeHelper" = type opaque
%class.SkStrikeServer = type opaque
%"class.base::WeakPtrFactory.3500" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WebSurfaceLayerBridgeObserver" = type { i32 (...)** }
%"class.blink::OffscreenCanvasPlaceholder.base" = type <{ i32 (...)**, %class.scoped_refptr.3468, %"class.base::WeakPtr.3410", %class.scoped_refptr.778, %"class.util::IdType.3504", i32, i32, %"class.absl::optional.3506" }>
%"class.util::IdType.3504" = type { %"class.base::StrongAlias.3505" }
%"class.base::StrongAlias.3505" = type { i32 }
%"class.absl::optional.3506" = type { %"class.absl::optional_internal::optional_data.3507" }
%"class.absl::optional_internal::optional_data.3507" = type { %"class.absl::optional_internal::optional_data_base.3508" }
%"class.absl::optional_internal::optional_data_base.3508" = type { %"class.absl::optional_internal::optional_data_dtor_base.3509" }
%"class.absl::optional_internal::optional_data_dtor_base.3509" = type { i8, %union.anon.3510 }
%union.anon.3510 = type { i32 }
%"class.blink::ThreadState::PrefinalizerRegistration.3511" = type { i8 }
%"class.blink::HeapHashSet.3512" = type { %"class.WTF::HashSet.3515" }
%"class.WTF::HashSet.3515" = type { %"class.WTF::HashTable.3516" }
%"class.WTF::HashTable.3516" = type <{ %"class.blink::WeakMember.3518"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3518" = type opaque
%"class.blink::Member.3519" = type { %"class.blink::MemberBase.3520" }
%"class.blink::MemberBase.3520" = type { %"class.blink::CanvasRenderingContext"* }
%"class.blink::CanvasRenderingContext" = type <{ %"class.blink::ScriptWrappable", %"class.base::TaskObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3521", [7 x i8], %"class.blink::Member.3522", %"class.blink::CanvasColorParams", [4 x i8], %"class.blink::CanvasContextCreationAttributesCore", i8, [7 x i8] }>
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.3521" = type { i8 }
%"class.blink::Member.3522" = type { %"class.blink::MemberBase.3523" }
%"class.blink::MemberBase.3523" = type { %"class.blink::CanvasRenderingContextHost"* }
%"class.blink::CanvasColorParams" = type { i32, i32, i32 }
%"class.blink::CanvasContextCreationAttributesCore" = type <{ i32 (...)**, i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8], %"class.WTF::String", i8, i8, [6 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.3524" = type { %"class.std::__1::__compressed_pair.3525" }
%"class.std::__1::__compressed_pair.3525" = type { %"struct.std::__1::__compressed_pair_elem.3526" }
%"struct.std::__1::__compressed_pair_elem.3526" = type { %"class.blink::Canvas2DLayerBridge"* }
%"class.blink::Canvas2DLayerBridge" = type { %"class.cc::TextureLayerClient", %class.sk_sp.3527, %class.scoped_refptr.3528, %"class.std::__1::unique_ptr.3529", %"class.std::__1::unique_ptr.3535", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::CanvasColorParams", %"class.blink::IntSize", i32, %"class.blink::CanvasResourceHost"*, %"struct.viz::TransferableResource", %"class.std::__1::mersenne_twister_engine", %"class.std::__1::bernoulli_distribution", %"class.WTF::Deque.3551", %class.sk_sp.3556, %"class.base::WeakPtrFactory.3561" }
%"class.cc::TextureLayerClient" = type { i32 (...)** }
%class.scoped_refptr.3528 = type { %"class.cc::TextureLayer"* }
%"class.cc::TextureLayer" = type opaque
%"class.std::__1::unique_ptr.3529" = type { %"class.std::__1::__compressed_pair.3530" }
%"class.std::__1::__compressed_pair.3530" = type { %"struct.std::__1::__compressed_pair_elem.3531" }
%"struct.std::__1::__compressed_pair_elem.3531" = type { %"class.blink::SharedContextRateLimiter"* }
%"class.blink::SharedContextRateLimiter" = type opaque
%"class.std::__1::unique_ptr.3535" = type { %"class.std::__1::__compressed_pair.3536" }
%"class.std::__1::__compressed_pair.3536" = type { %"struct.std::__1::__compressed_pair_elem.3537" }
%"struct.std::__1::__compressed_pair_elem.3537" = type { %"class.blink::Canvas2DLayerBridge::Logger"* }
%"class.blink::Canvas2DLayerBridge::Logger" = type { i32 (...)** }
%"class.blink::CanvasResourceHost" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.3404", i32, [4 x i8] }>
%"struct.viz::TransferableResource" = type { %"class.util::IdType.3504", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.3541", i8, i32, i8, [7 x i8], %"class.absl::optional.3546" }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.3541" = type { %"class.absl::optional_internal::optional_data.3542" }
%"class.absl::optional_internal::optional_data.3542" = type { %"class.absl::optional_internal::optional_data_base.3543" }
%"class.absl::optional_internal::optional_data_base.3543" = type { %"class.absl::optional_internal::optional_data_dtor_base.3544" }
%"class.absl::optional_internal::optional_data_dtor_base.3544" = type { i8, %union.anon.3545 }
%union.anon.3545 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.3546" = type { %"class.absl::optional_internal::optional_data.3547" }
%"class.absl::optional_internal::optional_data.3547" = type { %"class.absl::optional_internal::optional_data_base.3548" }
%"class.absl::optional_internal::optional_data_base.3548" = type { %"class.absl::optional_internal::optional_data_dtor_base.3549" }
%"class.absl::optional_internal::optional_data_dtor_base.3549" = type { i8, [7 x i8], %union.anon.3550 }
%union.anon.3550 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::mersenne_twister_engine" = type { [624 x i64], i64 }
%"class.std::__1::bernoulli_distribution" = type { %"class.std::__1::bernoulli_distribution::param_type" }
%"class.std::__1::bernoulli_distribution::param_type" = type { double }
%"class.WTF::Deque.3551" = type { %"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Canvas2DLayerBridge::RasterTimer, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.3554" }
%"class.WTF::VectorBuffer.3554" = type { %"class.WTF::VectorBufferBase.3555" }
%"class.WTF::VectorBufferBase.3555" = type { %"struct.blink::Canvas2DLayerBridge::RasterTimer"*, i32, i32 }
%"struct.blink::Canvas2DLayerBridge::RasterTimer" = type { i32, %"class.base::TimeDelta" }
%"class.base::WeakPtrFactory.3561" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.3565" = type { %"class.std::__1::__compressed_pair.3566" }
%"class.std::__1::__compressed_pair.3566" = type { %"struct.std::__1::__compressed_pair_elem.3567" }
%"struct.std::__1::__compressed_pair_elem.3567" = type { %"class.blink::SurfaceLayerBridge"* }
%"class.blink::SurfaceLayerBridge" = type <{ %"class.blink::mojom::blink::EmbeddedFrameSinkClient", %"class.blink::mojom::blink::SurfaceEmbedder", %"class.blink::WebSurfaceLayerBridge", %class.scoped_refptr.3568, %class.scoped_refptr.3639, %"class.blink::WebSurfaceLayerBridgeObserver"*, %"class.base::RepeatingCallback.3628", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.mojo::Receiver", %"class.mojo::Receiver.3641", %"class.viz::FrameSinkId", i32, [4 x i8], %"class.viz::SurfaceId", %"class.viz::FrameSinkId", i8, i8, [6 x i8] }>
%"class.blink::mojom::blink::EmbeddedFrameSinkClient" = type { i32 (...)** }
%"class.blink::mojom::blink::SurfaceEmbedder" = type { i32 (...)** }
%"class.blink::WebSurfaceLayerBridge" = type { i32 (...)** }
%class.scoped_refptr.3568 = type { %"class.cc::SurfaceLayer"* }
%"class.cc::SurfaceLayer" = type <{ %"class.cc::Layer", %"class.base::RepeatingCallback.3628", i8, [7 x i8], %"class.viz::SurfaceRange", %"class.absl::optional.3634", i8, i8, i8, i8, [4 x i8] }>
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.3569", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.3588", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.3608" }>
%"class.base::RefCounted.3569" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.3570", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.3570" = type { %"class.std::__1::__vector_base.3571" }
%"class.std::__1::__vector_base.3571" = type { %class.scoped_refptr.3572*, %class.scoped_refptr.3572*, %"class.std::__1::__compressed_pair.3573" }
%class.scoped_refptr.3572 = type opaque
%"class.std::__1::__compressed_pair.3573" = type { %"struct.std::__1::__compressed_pair_elem.3574" }
%"struct.std::__1::__compressed_pair_elem.3574" = type { %class.scoped_refptr.3572* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.3578" }
%"class.base::flat_map.3578" = type { %"class.base::internal::flat_tree.3579" }
%"class.base::internal::flat_tree.3579" = type { %"class.std::__1::vector.3580" }
%"class.std::__1::vector.3580" = type { %"class.std::__1::__vector_base.3581" }
%"class.std::__1::__vector_base.3581" = type { %"struct.std::__1::pair.3582"*, %"struct.std::__1::pair.3582"*, %"class.std::__1::__compressed_pair.3583" }
%"struct.std::__1::pair.3582" = type opaque
%"class.std::__1::__compressed_pair.3583" = type { %"struct.std::__1::__compressed_pair_elem.3584" }
%"struct.std::__1::__compressed_pair_elem.3584" = type { %"struct.std::__1::pair.3582"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.3588" = type { %"class.std::__1::__compressed_pair.3589" }
%"class.std::__1::__compressed_pair.3589" = type { %"struct.std::__1::__compressed_pair_elem.3590" }
%"struct.std::__1::__compressed_pair_elem.3590" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.3591", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.3596", %"class.std::__1::vector.3597" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.absl::optional.3591" = type { %"class.absl::optional_internal::optional_data.3592" }
%"class.absl::optional_internal::optional_data.3592" = type { %"class.absl::optional_internal::optional_data_base.3593" }
%"class.absl::optional_internal::optional_data_base.3593" = type { %"class.absl::optional_internal::optional_data_dtor_base.3594" }
%"class.absl::optional_internal::optional_data_dtor_base.3594" = type { i8, %union.anon.3595 }
%union.anon.3595 = type { %"class.gfx::RRectF" }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.3596" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.3597" = type { %"class.std::__1::__vector_base.3598" }
%"class.std::__1::__vector_base.3598" = type { %"class.std::__1::unique_ptr.3599"*, %"class.std::__1::unique_ptr.3599"*, %"class.std::__1::__compressed_pair.3600" }
%"class.std::__1::unique_ptr.3599" = type opaque
%"class.std::__1::__compressed_pair.3600" = type { %"struct.std::__1::__compressed_pair_elem.3601" }
%"struct.std::__1::__compressed_pair_elem.3601" = type { %"class.std::__1::unique_ptr.3599"* }
%"class.std::__1::unique_ptr.3608" = type { %"class.std::__1::__compressed_pair.3609" }
%"class.std::__1::__compressed_pair.3609" = type { %"struct.std::__1::__compressed_pair_elem.3610" }
%"struct.std::__1::__compressed_pair_elem.3610" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.3611", %"class.std::__1::vector.3611", %"class.std::__1::vector.3618" }
%"class.std::__1::vector.3611" = type { %"class.std::__1::__vector_base.3612" }
%"class.std::__1::__vector_base.3612" = type { i8**, i8**, %"class.std::__1::__compressed_pair.3613" }
%"class.std::__1::__compressed_pair.3613" = type { %"struct.std::__1::__compressed_pair_elem.3614" }
%"struct.std::__1::__compressed_pair_elem.3614" = type { i8** }
%"class.std::__1::vector.3618" = type { %"class.std::__1::__vector_base.3619" }
%"class.std::__1::__vector_base.3619" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.3620" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.3620" = type { %"struct.std::__1::__compressed_pair_elem.3621" }
%"struct.std::__1::__compressed_pair_elem.3621" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.3629", %"class.viz::SurfaceId" }
%"class.absl::optional.3629" = type { %"class.absl::optional_internal::optional_data.3630" }
%"class.absl::optional_internal::optional_data.3630" = type { %"class.absl::optional_internal::optional_data_base.3631" }
%"class.absl::optional_internal::optional_data_base.3631" = type { %"class.absl::optional_internal::optional_data_dtor_base.3632" }
%"class.absl::optional_internal::optional_data_dtor_base.3632" = type { i8, %union.anon.3633 }
%union.anon.3633 = type { %"class.viz::SurfaceId" }
%"class.absl::optional.3634" = type { %"class.absl::optional_internal::optional_data.3635" }
%"class.absl::optional_internal::optional_data.3635" = type { %"class.absl::optional_internal::optional_data_base.3636" }
%"class.absl::optional_internal::optional_data_base.3636" = type { %"class.absl::optional_internal::optional_data_dtor_base.3637" }
%"class.absl::optional_internal::optional_data_dtor_base.3637" = type { i8, %union.anon.3638 }
%union.anon.3638 = type { i32 }
%class.scoped_refptr.3639 = type { %"class.cc::SolidColorLayer"* }
%"class.cc::SolidColorLayer" = type opaque
%"class.base::RepeatingCallback.3628" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.viz::ParentLocalSurfaceIdAllocator" = type <{ %"class.viz::LocalSurfaceId", i8, i8, [6 x i8] }>
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" }
%"class.blink::mojom::blink::EmbeddedFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::EmbeddedFrameSinkClient"* }
%"class.mojo::Receiver.3641" = type { %"class.mojo::internal::BindingState.3642" }
%"class.mojo::internal::BindingState.3642" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::SurfaceEmbedderStub" }
%"class.blink::mojom::blink::SurfaceEmbedderStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::SurfaceEmbedder"* }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.3646" = type { %"class.std::__1::__compressed_pair.3647" }
%"class.std::__1::__compressed_pair.3647" = type { %"struct.std::__1::__compressed_pair_elem.3648" }
%"struct.std::__1::__compressed_pair_elem.3648" = type { %"class.blink::CanvasResourceDispatcher"* }
%"class.blink::CanvasResourceDispatcher" = type { %"class.viz::mojom::blink::CompositorFrameSinkClient", %"class.viz::ParentLocalSurfaceIdAllocator", %"class.viz::FrameSinkId", %"class.blink::IntSize", i8, i8, i8, i32, %"class.mojo::Remote.3649", %"class.mojo::Remote.3657", %"class.mojo::Receiver.3665", i32, %"class.viz::ResourceIdGenerator", [4 x i8], %"class.WTF::HashMap.3667", %"class.viz::FrameTokenGenerator", %class.scoped_refptr.3468, %"class.util::IdType.3504", i32, %"struct.viz::BeginFrameAck", %"class.blink::CanvasResourceDispatcherClient"*, %"class.std::__1::unique_ptr.3672", %"class.base::WeakPtrFactory.3678" }
%"class.viz::mojom::blink::CompositorFrameSinkClient" = type { i32 (...)** }
%"class.mojo::Remote.3649" = type { %"class.mojo::internal::InterfacePtrState.3650" }
%"class.mojo::internal::InterfacePtrState.3650" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3651" }
%"class.std::__1::unique_ptr.3651" = type { %"class.std::__1::__compressed_pair.3652" }
%"class.std::__1::__compressed_pair.3652" = type { %"struct.std::__1::__compressed_pair_elem.3653" }
%"struct.std::__1::__compressed_pair_elem.3653" = type { %"class.viz::mojom::blink::CompositorFrameSinkProxy"* }
%"class.viz::mojom::blink::CompositorFrameSinkProxy" = type { %"class.viz::mojom::blink::CompositorFrameSink", %"class.mojo::MessageReceiverWithResponder"* }
%"class.viz::mojom::blink::CompositorFrameSink" = type { i32 (...)** }
%"class.mojo::Remote.3657" = type { %"class.mojo::internal::InterfacePtrState.3658" }
%"class.mojo::internal::InterfacePtrState.3658" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3659" }
%"class.std::__1::unique_ptr.3659" = type { %"class.std::__1::__compressed_pair.3660" }
%"class.std::__1::__compressed_pair.3660" = type { %"struct.std::__1::__compressed_pair_elem.3661" }
%"struct.std::__1::__compressed_pair_elem.3661" = type { %"class.blink::mojom::blink::SurfaceEmbedderProxy"* }
%"class.blink::mojom::blink::SurfaceEmbedderProxy" = type { %"class.blink::mojom::blink::SurfaceEmbedder", %"class.mojo::MessageReceiverWithResponder"* }
%"class.mojo::Receiver.3665" = type { %"class.mojo::internal::BindingState.3666" }
%"class.mojo::internal::BindingState.3666" = type { %"class.mojo::internal::BindingStateBase", %"class.viz::mojom::blink::CompositorFrameSinkClientStub" }
%"class.viz::mojom::blink::CompositorFrameSinkClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.viz::mojom::blink::CompositorFrameSinkClient"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.WTF::HashMap.3667" = type { %"class.WTF::HashTable.3668" }
%"class.WTF::HashTable.3668" = type <{ %"struct.WTF::KeyValuePair.3671"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3671" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.blink::CanvasResourceDispatcherClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3672" = type { %"class.std::__1::__compressed_pair.3673" }
%"class.std::__1::__compressed_pair.3673" = type { %"struct.std::__1::__compressed_pair_elem.3674" }
%"struct.std::__1::__compressed_pair_elem.3674" = type { %"class.power_scheduler::PowerModeVoter"* }
%"class.power_scheduler::PowerModeVoter" = type { %"class.power_scheduler::PowerModeVoter::Delegate"* }
%"class.power_scheduler::PowerModeVoter::Delegate" = type { i32 (...)** }
%"class.base::WeakPtrFactory.3678" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HTMLVideoElement" = type { %"class.blink::HTMLMediaElement", %"class.blink::CanvasImageSource", %"class.blink::ImageBitmapSource", %"class.blink::Supplementable.3826", %"class.blink::Member.3169", %"class.blink::Member.3834", %"class.blink::Member.3836", %"class.blink::Member.3838", %"class.blink::Member.3840", %"class.WTF::AtomicString", i8, %"class.std::__1::unique_ptr.3404" }
%"class.blink::HTMLMediaElement" = type { %"class.blink::HTMLElement", %"class.blink::Supplementable.3682", %"class.blink::ActiveScriptWrappable.3690", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.media::mojom::blink::MediaPlayer", %"class.blink::WebMediaPlayerClient", %"class.blink::ThreadState::PrefinalizerRegistration.3691", %"class.blink::HeapTaskRunnerTimer.3692", %"class.blink::HeapTaskRunnerTimer.3692", %"class.blink::HeapTaskRunnerTimer.3692", %"class.blink::HeapTaskRunnerTimer.3692", %"class.blink::HeapTaskRunnerTimer.3692", %"class.blink::Member.3695", %"class.blink::Member.3697", double, double, i32, i32, i32, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::Member.3699", %"class.blink::Member.3701", double, double, %"class.absl::optional.3703", double, double, double, i32, %"class.blink::Member.3393", %"class.blink::Member.318", i32, %"class.blink::HeapTaskRunnerTimer.3692", %"class.std::__1::unique_ptr.3712", %"class.cc::Layer"*, %class.scoped_refptr.3718, %"class.blink::Member.3719", double, i8, double, i32, i16, %"class.absl::optional.3721", i8, %"class.base::TimeTicks", %"class.blink::Member.3726", %"class.blink::Member.3728", %"class.blink::Member.3730", %"class.blink::HeapVector.3732", %"class.blink::Member.3739", %"class.blink::HeapVector.3741", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapVector.3741", %"class.blink::HeapVector.3741", i32, %"class.blink::Member.3770", %"class.blink::HTMLMediaElement::AudioSourceProviderImpl", %"class.blink::Member.3802", %"class.blink::WebRemotePlaybackClient"*, %"class.blink::Member.3809", %"class.blink::Member.3811", %"class.blink::Member.1555", %"class.blink::Member.3813", %"class.blink::Member.3816", %"class.blink::Member.3823" }
%"class.blink::Supplementable.3682" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.3683" }
%"class.blink::HeapHashMap.3683" = type { %"class.WTF::HashMap.3686" }
%"class.WTF::HashMap.3686" = type { %"class.WTF::HashTable.3687" }
%"class.WTF::HashTable.3687" = type <{ %"struct.WTF::KeyValuePair.3689"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3689" = type opaque
%"class.blink::ActiveScriptWrappable.3690" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.media::mojom::blink::MediaPlayer" = type { i32 (...)** }
%"class.blink::WebMediaPlayerClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration.3691" = type { i8 }
%"class.blink::Member.3695" = type { %"class.blink::MemberBase.3696" }
%"class.blink::MemberBase.3696" = type { %"class.blink::TimeRanges"* }
%"class.blink::TimeRanges" = type opaque
%"class.blink::Member.3697" = type { %"class.blink::MemberBase.3698" }
%"class.blink::MemberBase.3698" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type opaque
%"class.blink::Member.3699" = type { %"class.blink::MemberBase.3700" }
%"class.blink::MemberBase.3700" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type opaque
%"class.blink::Member.3701" = type { %"class.blink::MemberBase.3702" }
%"class.blink::MemberBase.3702" = type { %"class.blink::MediaError"* }
%"class.blink::MediaError" = type opaque
%"class.absl::optional.3703" = type { %"class.absl::optional_internal::optional_data.3704" }
%"class.absl::optional_internal::optional_data.3704" = type { %"class.absl::optional_internal::optional_data_base.3705" }
%"class.absl::optional_internal::optional_data_base.3705" = type { %"class.absl::optional_internal::optional_data_dtor_base.3706" }
%"class.absl::optional_internal::optional_data_dtor_base.3706" = type { i8, %union.anon.3707 }
%union.anon.3707 = type { %"class.base::ElapsedTimer" }
%"class.blink::Member.3393" = type { %"class.blink::MemberBase.3394" }
%"class.blink::MemberBase.3394" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.blink::HeapTaskRunnerTimer.3692" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.3693", { i64, i64 } }
%"class.blink::WeakMember.3693" = type { %"class.blink::MemberBase.3694" }
%"class.blink::MemberBase.3694" = type { %"class.blink::HTMLMediaElement"* }
%"class.std::__1::unique_ptr.3712" = type { %"class.std::__1::__compressed_pair.3713" }
%"class.std::__1::__compressed_pair.3713" = type { %"struct.std::__1::__compressed_pair_elem.3714" }
%"struct.std::__1::__compressed_pair_elem.3714" = type { %"class.blink::WebMediaPlayer"* }
%"class.blink::WebMediaPlayer" = type { i32 (...)** }
%class.scoped_refptr.3718 = type { %"class.blink::MediaSourceAttachment"* }
%"class.blink::MediaSourceAttachment" = type opaque
%"class.blink::Member.3719" = type { %"class.blink::MemberBase.3720" }
%"class.blink::MemberBase.3720" = type { %"class.blink::MediaSourceTracer"* }
%"class.blink::MediaSourceTracer" = type opaque
%"class.absl::optional.3721" = type { %"class.absl::optional_internal::optional_data.3722" }
%"class.absl::optional_internal::optional_data.3722" = type { %"class.absl::optional_internal::optional_data_base.3723" }
%"class.absl::optional_internal::optional_data_base.3723" = type { %"class.absl::optional_internal::optional_data_dtor_base.3724" }
%"class.absl::optional_internal::optional_data_dtor_base.3724" = type { i8, %union.anon.3725 }
%union.anon.3725 = type { i8 }
%"class.blink::Member.3726" = type { %"class.blink::MemberBase.3727" }
%"class.blink::MemberBase.3727" = type { %"class.blink::AudioTrackList"* }
%"class.blink::AudioTrackList" = type opaque
%"class.blink::Member.3728" = type { %"class.blink::MemberBase.3729" }
%"class.blink::MemberBase.3729" = type { %"class.blink::VideoTrackList"* }
%"class.blink::VideoTrackList" = type opaque
%"class.blink::Member.3730" = type { %"class.blink::MemberBase.3731" }
%"class.blink::MemberBase.3731" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type opaque
%"class.blink::HeapVector.3732" = type { %"class.WTF::Vector.3735" }
%"class.WTF::Vector.3735" = type { %"class.WTF::VectorBuffer.3736" }
%"class.WTF::VectorBuffer.3736" = type { %"class.WTF::VectorBufferBase.3737" }
%"class.WTF::VectorBufferBase.3737" = type { %"class.blink::Member.1406"*, i32, i32 }
%"class.blink::Member.3739" = type { %"class.blink::MemberBase.3740" }
%"class.blink::MemberBase.3740" = type { %"class.blink::CueTimeline"* }
%"class.blink::CueTimeline" = type opaque
%"class.blink::HeapVector.3741" = type { %"class.WTF::Vector.3744" }
%"class.WTF::Vector.3744" = type { %"class.WTF::VectorBuffer.3745" }
%"class.WTF::VectorBuffer.3745" = type { %"class.WTF::VectorBufferBase.3746" }
%"class.WTF::VectorBufferBase.3746" = type { %"class.blink::Member.3747"*, i32, i32 }
%"class.blink::Member.3747" = type { %"class.blink::MemberBase.3748" }
%"class.blink::MemberBase.3748" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.3751", i32, %"class.blink::Member.3752", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.3763", %"class.blink::SelfKeepAlive.3766" }
%"class.blink::ThreadState::PrefinalizerRegistration.3751" = type { i8 }
%"class.blink::Member.3752" = type { %"class.blink::MemberBase.3753" }
%"class.blink::MemberBase.3753" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3756, %"class.blink::Member.3757", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3761" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.3756 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3757" = type { %"class.blink::MemberBase.3758" }
%"class.blink::MemberBase.3758" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3759" }
%"class.blink::Persistent.3759" = type { %"class.blink::PersistentBase.3760" }
%"class.blink::PersistentBase.3760" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType.3761" = type { %"class.base::StrongAlias.3762" }
%"class.base::StrongAlias.3762" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.3752", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.3763", %class.scoped_refptr.1036 }
%"class.blink::TraceWrapperV8Reference.3763" = type { %"class.v8::TracedReference.3764" }
%"class.v8::TracedReference.3764" = type { %"class.v8::BasicTracedReference.3765" }
%"class.v8::BasicTracedReference.3765" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.3766" = type { %"class.blink::Persistent.3767" }
%"class.blink::Persistent.3767" = type { %"class.blink::PersistentBase.3768" }
%"class.blink::PersistentBase.3768" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Member.3770" = type { %"class.blink::MemberBase.3771" }
%"class.blink::MemberBase.3771" = type { %"class.blink::AudioSourceProviderClient"* }
%"class.blink::AudioSourceProviderClient" = type opaque
%"class.blink::HTMLMediaElement::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %class.scoped_refptr.3772, %"class.blink::Member.3798", %"class.WTF::Mutex" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%class.scoped_refptr.3772 = type { %"class.blink::WebAudioSourceProviderImpl"* }
%"class.blink::WebAudioSourceProviderImpl" = type { %"class.blink::WebAudioSourceProvider", %"class.media::SwitchableAudioRendererSink.base", double, i32, %"class.base::RepeatingCallback", %"class.blink::WebAudioSourceProviderClient"*, %"class.base::Lock", %class.scoped_refptr.3774, %"class.std::__1::unique_ptr.3775", %"class.std::__1::unique_ptr.3791", %"class.media::MediaLog"*, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.3797" }
%"class.blink::WebAudioSourceProvider" = type { i32 (...)** }
%"class.media::SwitchableAudioRendererSink.base" = type { %"class.media::RestartableAudioRendererSink.base" }
%"class.media::RestartableAudioRendererSink.base" = type { %"class.media::AudioRendererSink.base" }
%"class.media::AudioRendererSink.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3773" }>
%"class.base::RefCountedThreadSafe.3773" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WebAudioSourceProviderClient" = type { i32 (...)** }
%class.scoped_refptr.3774 = type { %"class.media::SwitchableAudioRendererSink"* }
%"class.media::SwitchableAudioRendererSink" = type { %"class.media::RestartableAudioRendererSink.base", [4 x i8] }
%"class.std::__1::unique_ptr.3775" = type { %"class.std::__1::__compressed_pair.3776" }
%"class.std::__1::__compressed_pair.3776" = type { %"struct.std::__1::__compressed_pair_elem.3777" }
%"struct.std::__1::__compressed_pair_elem.3777" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.3778", i8, i64, i32, %"class.std::__1::vector.3781", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.3778" = type { %"class.std::__1::__compressed_pair.3779" }
%"class.std::__1::__compressed_pair.3779" = type { %"struct.std::__1::__compressed_pair_elem.3780" }
%"struct.std::__1::__compressed_pair_elem.3780" = type { float* }
%"class.std::__1::vector.3781" = type { %"class.std::__1::__vector_base.3782" }
%"class.std::__1::__vector_base.3782" = type { float**, float**, %"class.std::__1::__compressed_pair.3783" }
%"class.std::__1::__compressed_pair.3783" = type { %"struct.std::__1::__compressed_pair_elem.3784" }
%"struct.std::__1::__compressed_pair_elem.3784" = type { float** }
%"class.std::__1::unique_ptr.3791" = type { %"class.std::__1::__compressed_pair.3792" }
%"class.std::__1::__compressed_pair.3792" = type { %"struct.std::__1::__compressed_pair_elem.3793" }
%"struct.std::__1::__compressed_pair_elem.3793" = type { %"class.blink::WebAudioSourceProviderImpl::TeeFilter"* }
%"class.blink::WebAudioSourceProviderImpl::TeeFilter" = type opaque
%"class.media::MediaLog" = type opaque
%"class.base::WeakPtrFactory.3797" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.3798" = type { %"class.blink::MemberBase.3799" }
%"class.blink::MemberBase.3799" = type { %"class.blink::HTMLMediaElement::AudioClientImpl"* }
%"class.blink::HTMLMediaElement::AudioClientImpl" = type { %"class.blink::WebAudioSourceProviderClient", %"class.blink::Member.3770" }
%"class.blink::Member.3802" = type { %"class.blink::MemberBase.3803" }
%"class.blink::MemberBase.3803" = type { %"class.blink::AutoplayPolicy"* }
%"class.blink::AutoplayPolicy" = type <{ i32 (...)**, i8, [7 x i8], %"class.blink::Member.3806", %"class.blink::Member.1555", %"class.blink::Member.3807", %"class.absl::optional.3721", [6 x i8] }>
%"class.blink::Member.3806" = type { %"class.blink::MemberBase.3694" }
%"class.blink::Member.3807" = type { %"class.blink::MemberBase.3808" }
%"class.blink::MemberBase.3808" = type { %"class.blink::AutoplayUmaHelper"* }
%"class.blink::AutoplayUmaHelper" = type opaque
%"class.blink::WebRemotePlaybackClient" = type opaque
%"class.blink::Member.3809" = type { %"class.blink::MemberBase.3810" }
%"class.blink::MemberBase.3810" = type { %"class.blink::MediaControls"* }
%"class.blink::MediaControls" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3806" }
%"class.blink::Member.3811" = type { %"class.blink::MemberBase.3812" }
%"class.blink::MemberBase.3812" = type { %"class.blink::HTMLMediaElementControlsList"* }
%"class.blink::HTMLMediaElementControlsList" = type opaque
%"class.blink::Member.3813" = type { %"class.blink::MemberBase.3814" }
%"class.blink::MemberBase.3814" = type { %"class.blink::DisallowNewWrapper.3815"* }
%"class.blink::DisallowNewWrapper.3815" = type opaque
%"class.blink::Member.3816" = type { %"class.blink::MemberBase.3817" }
%"class.blink::MemberBase.3817" = type { %"class.blink::DisallowNewWrapper.3818"* }
%"class.blink::DisallowNewWrapper.3818" = type { %"class.blink::HeapMojoAssociatedRemoteSet" }
%"class.blink::HeapMojoAssociatedRemoteSet" = type { %"class.blink::Member.3821" }
%"class.blink::Member.3821" = type { %"class.blink::MemberBase.3822" }
%"class.blink::MemberBase.3822" = type { %"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.3823" = type { %"class.blink::MemberBase.3824" }
%"class.blink::MemberBase.3824" = type { %"class.blink::DisallowNewWrapper.3825"* }
%"class.blink::DisallowNewWrapper.3825" = type opaque
%"class.blink::Supplementable.3826" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.3827" }
%"class.blink::HeapHashMap.3827" = type { %"class.WTF::HashMap.3830" }
%"class.WTF::HashMap.3830" = type { %"class.WTF::HashTable.3831" }
%"class.WTF::HashTable.3831" = type <{ %"struct.WTF::KeyValuePair.3833"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3833" = type opaque
%"class.blink::Member.3834" = type { %"class.blink::MemberBase.3835" }
%"class.blink::MemberBase.3835" = type { %"class.blink::MediaCustomControlsFullscreenDetector"* }
%"class.blink::MediaCustomControlsFullscreenDetector" = type opaque
%"class.blink::Member.3836" = type { %"class.blink::MemberBase.3837" }
%"class.blink::MemberBase.3837" = type { %"class.blink::VideoWakeLock"* }
%"class.blink::VideoWakeLock" = type opaque
%"class.blink::Member.3838" = type { %"class.blink::MemberBase.3839" }
%"class.blink::MemberBase.3839" = type { %"class.blink::MediaRemotingInterstitial"* }
%"class.blink::MediaRemotingInterstitial" = type opaque
%"class.blink::Member.3840" = type { %"class.blink::MemberBase.3841" }
%"class.blink::MemberBase.3841" = type { %"class.blink::PictureInPictureInterstitial"* }
%"class.blink::PictureInPictureInterstitial" = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.3853, %class.sk_sp.3854, %class.sk_sp.3855, %class.sk_sp.3856, %class.sk_sp.912, %struct.SkRGBA4f, float, float, %union.anon.3857, [4 x i8] }>
%class.sk_sp.3853 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3854 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3855 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3856 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.3857 = type { %struct.anon.3858 }
%struct.anon.3858 = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.41", [4 x i8] }>
%"class.blink::ImageDataBuffer" = type <{ %class.sk_sp.3527, %class.SkPixmap, i8, [3 x i8], %"class.blink::IntSize", [4 x i8] }>
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.3152", %"class.blink::Member.3154", %"class.blink::Member.3156", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::HTMLMeterElement" = type { %"class.blink::HTMLElement", %"class.blink::Member.3865" }
%"class.blink::Member.3865" = type { %"class.blink::MemberBase.3866" }
%"class.blink::MemberBase.3866" = type { %"class.blink::HTMLDivElement"* }
%"class.blink::HTMLImageElement" = type { %"class.blink::HTMLElement", %"class.blink::ImageElementBase", %"class.blink::ActiveScriptWrappable.3390", %"class.blink::FormAssociated", %"class.blink::Member.3169", %"class.blink::Member.3391", %"class.blink::Member.3154", %"class.WTF::AtomicString", float, %"class.blink::Member.3393", i8, i8, i32, %"class.std::__1::unique_ptr.3395" }
%"class.blink::ActiveScriptWrappable.3390" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.3391" = type { %"class.blink::MemberBase.3392" }
%"class.blink::MemberBase.3392" = type { %"class.blink::HTMLImageElement::ViewportChangeListener"* }
%"class.blink::HTMLImageElement::ViewportChangeListener" = type opaque
%"class.std::__1::unique_ptr.3395" = type { %"class.std::__1::__compressed_pair.3396" }
%"class.std::__1::__compressed_pair.3396" = type { %"struct.std::__1::__compressed_pair_elem.3397" }
%"struct.std::__1::__compressed_pair_elem.3397" = type { %"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics"* }
%"struct.blink::LazyLoadImageObserver::VisibleLoadTimeMetrics" = type { i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::HeapHashSet.3867" = type { %"class.WTF::HashSet.3870" }
%"class.WTF::HashSet.3870" = type { %"class.WTF::HashTable.3871" }
%"class.WTF::HashTable.3871" = type <{ %"class.blink::Member.3136"*, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutFileUploadControl" = type { %"class.blink::LayoutBlockFlow" }
%"class.WTF::Vector.3248" = type { %"class.WTF::VectorBuffer.3249" }
%"class.WTF::VectorBuffer.3249" = type { %"class.WTF::VectorBufferBase.3250", [16 x i8] }
%"class.WTF::VectorBufferBase.3250" = type { i16*, i32, i32 }
%"class.WTF::Vector.3873" = type { %"class.WTF::VectorBuffer.3874" }
%"class.WTF::VectorBuffer.3874" = type { %"class.WTF::VectorBufferBase.3875" }
%"class.WTF::VectorBufferBase.3875" = type { i32*, i32, i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.3763" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::HTMLTextAreaElement" = type <{ %"class.blink::TextControlElement", i32, i32, i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.3878", %"class.WTF::String" }
%"class.WTF::StringAppend.3878" = type { %"class.WTF::String", i8* }
%"class.WTF::StringTypeAdapter.4288" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::HeapVector.3879" = type { %"class.WTF::Vector.3882" }
%"class.WTF::Vector.3882" = type { %"class.WTF::VectorBuffer.3883" }
%"class.WTF::VectorBuffer.3883" = type { %"class.WTF::VectorBufferBase.3884" }
%"class.WTF::VectorBufferBase.3884" = type { %"class.blink::Member.3885"*, i32, i32 }
%"class.blink::Member.3885" = type { %"class.blink::MemberBase.3886" }
%"class.blink::MemberBase.3886" = type { %"class.blink::NameSourceRelatedObject"* }
%"class.blink::NameSourceRelatedObject" = type { %"class.blink::WeakMember.3043", %"class.WTF::String" }
%"class.blink::HeapVector.3890" = type { %"class.WTF::Vector.3893" }
%"class.WTF::Vector.3893" = type { %"class.WTF::VectorBuffer.3894" }
%"class.WTF::VectorBuffer.3894" = type { %"class.WTF::VectorBufferBase.3895" }
%"class.WTF::VectorBufferBase.3895" = type { %"class.blink::NameSource"*, i32, i32 }
%"class.blink::NameSource" = type { %"class.WTF::String", i8, i8, i32, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString", i32, %"class.blink::HeapVector.3879" }
%"class.blink::HasTagName" = type { %"class.blink::QualifiedName" }
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::HTMLTableElement" = type { %"class.blink::HTMLElement", i8, i8, i8, i32, i16, %"class.blink::Member.354" }
%"class.blink::HTMLTableCaptionElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLFieldSetElement" = type { %"class.blink::HTMLFormControlElement.base", [3 x i8] }
%"class.blink::HTMLLegendElement" = type { %"class.blink::HTMLElement" }
%"class.WTF::Vector.3897" = type { %"class.WTF::VectorBuffer.3898" }
%"class.WTF::VectorBuffer.3898" = type { %"class.WTF::VectorBufferBase.3899" }
%"class.WTF::VectorBufferBase.3899" = type { %"class.blink::FloatRect"*, i32, i32 }
%"class.blink::HTMLTableSectionElement" = type { %"class.blink::HTMLTablePartElement" }
%"class.blink::HTMLTablePartElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLCollection" = type { %"class.blink::ScriptWrappable", %"class.blink::LiveNodeListBase.base", i8, %"class.blink::Member.3902", %"class.blink::CollectionItemsCache.3915" }
%"class.blink::Member.3902" = type { %"class.blink::MemberBase.3903" }
%"class.blink::MemberBase.3903" = type { %"class.blink::HTMLCollection::NamedItemCache"* }
%"class.blink::HTMLCollection::NamedItemCache" = type { %"class.blink::HeapHashMap.3906", %"class.blink::HeapHashMap.3906" }
%"class.blink::HeapHashMap.3906" = type { %"class.WTF::HashMap.3909" }
%"class.WTF::HashMap.3909" = type { %"class.WTF::HashTable.3910" }
%"class.WTF::HashTable.3910" = type <{ %"struct.WTF::KeyValuePair.3912"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3912" = type { %"class.WTF::StringImpl"*, %"class.blink::Member.3913" }
%"class.blink::Member.3913" = type { %"class.blink::MemberBase.3914" }
%"class.blink::MemberBase.3914" = type { %"class.blink::HeapVector.365"* }
%"class.blink::CollectionItemsCache.3915" = type { %"class.blink::CollectionIndexCache.3916", i8, %"class.blink::HeapVector.365" }
%"class.blink::CollectionIndexCache.3916" = type { i32 (...)**, %"class.blink::Member.343", i32, i32 }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.3917 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.3917 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.3918" }
%"class.blink::InlineBoxList.3918" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::AbstractInlineTextBox" = type { i32 (...)**, %"class.WTF::RefCounted.3920", %"class.blink::LineLayoutText" }
%"class.WTF::RefCounted.3920" = type { %"class.base::RefCounted.3921" }
%"class.base::RefCounted.3921" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LineLayoutText" = type { %"class.blink::LineLayoutItem" }
%"class.blink::LayoutImage" = type { %"class.blink::LayoutReplaced", %"class.blink::Persistent.4195", i8, i8, float }
%"class.blink::LayoutReplaced" = type { %"class.blink::LayoutBox", %"class.blink::LayoutSize" }
%"class.blink::Persistent.4195" = type { %"class.blink::PersistentBase.4196" }
%"class.blink::PersistentBase.4196" = type { %"class.blink::LayoutImageResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::LayoutImageResource" = type { i32 (...)**, %"class.blink::LayoutObject"*, %"class.blink::Member.3174" }
%"class.blink::HTMLMapElement" = type { %"class.blink::HTMLElement", %"class.WTF::AtomicString" }
%"class.blink::HeapVector.3968" = type { %"class.WTF::Vector.3971" }
%"class.WTF::Vector.3971" = type { %"class.WTF::VectorBuffer.3972" }
%"class.WTF::VectorBuffer.3972" = type { %"class.WTF::VectorBufferBase.3973" }
%"class.WTF::VectorBufferBase.3973" = type { %"class.blink::Member.3974"*, i32, i32 }
%"class.blink::Member.3974" = type { %"class.blink::MemberBase.3975" }
%"class.blink::MemberBase.3975" = type { %"class.blink::AccessibleNode"* }
%"class.blink::AccessibleNode" = type { %"class.blink::EventTargetWithInlineData", %"class.WTF::Vector.3922", %"class.WTF::Vector.3928", %"class.WTF::Vector.3934", %"class.WTF::Vector.3940", %"class.WTF::Vector.3946", %"class.blink::HeapVector.3952", %"class.blink::HeapVector.3960", %"class.blink::Member.343", %"class.blink::Member.326", %"class.blink::HeapVector.3968", %"class.blink::Member.3974" }
%"class.WTF::Vector.3922" = type { %"class.WTF::VectorBuffer.3923" }
%"class.WTF::VectorBuffer.3923" = type { %"class.WTF::VectorBufferBase.3924" }
%"class.WTF::VectorBufferBase.3924" = type { %"struct.std::__1::pair.3925"*, i32, i32 }
%"struct.std::__1::pair.3925" = type opaque
%"class.WTF::Vector.3928" = type { %"class.WTF::VectorBuffer.3929" }
%"class.WTF::VectorBuffer.3929" = type { %"class.WTF::VectorBufferBase.3930" }
%"class.WTF::VectorBufferBase.3930" = type { %"struct.std::__1::pair.3931"*, i32, i32 }
%"struct.std::__1::pair.3931" = type opaque
%"class.WTF::Vector.3934" = type { %"class.WTF::VectorBuffer.3935" }
%"class.WTF::VectorBuffer.3935" = type { %"class.WTF::VectorBufferBase.3936" }
%"class.WTF::VectorBufferBase.3936" = type { %"struct.std::__1::pair.3937"*, i32, i32 }
%"struct.std::__1::pair.3937" = type opaque
%"class.WTF::Vector.3940" = type { %"class.WTF::VectorBuffer.3941" }
%"class.WTF::VectorBuffer.3941" = type { %"class.WTF::VectorBufferBase.3942" }
%"class.WTF::VectorBufferBase.3942" = type { %"struct.std::__1::pair.3943"*, i32, i32 }
%"struct.std::__1::pair.3943" = type opaque
%"class.WTF::Vector.3946" = type { %"class.WTF::VectorBuffer.3947" }
%"class.WTF::VectorBuffer.3947" = type { %"class.WTF::VectorBufferBase.3948" }
%"class.WTF::VectorBufferBase.3948" = type { %"struct.std::__1::pair.3949"*, i32, i32 }
%"struct.std::__1::pair.3949" = type opaque
%"class.blink::HeapVector.3952" = type { %"class.WTF::Vector.3955" }
%"class.WTF::Vector.3955" = type { %"class.WTF::VectorBuffer.3956" }
%"class.WTF::VectorBuffer.3956" = type { %"class.WTF::VectorBufferBase.3957" }
%"class.WTF::VectorBufferBase.3957" = type { %"struct.std::__1::pair.3958"*, i32, i32 }
%"struct.std::__1::pair.3958" = type opaque
%"class.blink::HeapVector.3960" = type { %"class.WTF::Vector.3963" }
%"class.WTF::Vector.3963" = type { %"class.WTF::VectorBuffer.3964" }
%"class.WTF::VectorBuffer.3964" = type { %"class.WTF::VectorBufferBase.3965" }
%"class.WTF::VectorBufferBase.3965" = type { %"struct.std::__1::pair.3966"*, i32, i32 }
%"struct.std::__1::pair.3966" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::ElementInternals" = type { %"class.blink::ScriptWrappable", %"class.blink::ListedElement.base", %"class.blink::Member.3234", %"class.blink::Member.3977", %"class.blink::Member.3977", i8, %"class.blink::Member.3979", %"class.blink::Member.343", %"class.blink::Member.3981", %"class.WTF::HashMap.3983", %"class.blink::HeapHashMap.3988" }
%"class.blink::Member.3977" = type { %"class.blink::MemberBase.3978" }
%"class.blink::MemberBase.3978" = type { %"class.blink::V8UnionFileOrFormDataOrUSVString"* }
%"class.blink::V8UnionFileOrFormDataOrUSVString" = type opaque
%"class.blink::Member.3979" = type { %"class.blink::MemberBase.3980" }
%"class.blink::MemberBase.3980" = type { %"class.blink::ValidityStateFlags"* }
%"class.blink::ValidityStateFlags" = type opaque
%"class.blink::Member.3981" = type { %"class.blink::MemberBase.3982" }
%"class.blink::MemberBase.3982" = type { %"class.blink::CustomStateSet"* }
%"class.blink::CustomStateSet" = type opaque
%"class.WTF::HashMap.3983" = type { %"class.WTF::HashTable.3984" }
%"class.WTF::HashTable.3984" = type <{ %"struct.WTF::KeyValuePair.3987"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3987" = type opaque
%"class.blink::HeapHashMap.3988" = type { %"class.WTF::HashMap.3991" }
%"class.WTF::HashMap.3991" = type { %"class.WTF::HashTable.3992" }
%"class.WTF::HashTable.3992" = type <{ %"struct.WTF::KeyValuePair.3994"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3994" = type opaque
%"class.blink::HeapVector.3995" = type { %"class.WTF::Vector.3998" }
%"class.WTF::Vector.3998" = type { %"class.WTF::VectorBuffer.3999" }
%"class.WTF::VectorBuffer.3999" = type { %"class.WTF::VectorBufferBase.4000" }
%"class.WTF::VectorBufferBase.4000" = type { %"class.blink::DescriptionSource"*, i32, i32 }
%"class.blink::DescriptionSource" = type { %"class.WTF::String", i8, i8, i32, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString", i32, %"class.blink::HeapVector.3879" }
%"class.WTF::Vector.4002" = type { %"class.WTF::VectorBuffer.4003" }
%"class.WTF::VectorBuffer.4003" = type { %"class.WTF::VectorBufferBase.2115" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::HeapVectorBacking.4222" = type { i8 }
%"class.blink::HeapVectorBacking.4236" = type { i8 }
%"class.blink::HeapVectorBacking.4257" = type { i8 }
%"class.blink::HeapVectorBacking.4274" = type { i8 }
%"class.WTF::StringTypeAdapter.4286" = type { %"class.WTF::StringTypeAdapter.4287" }
%"class.WTF::StringTypeAdapter.4287" = type { %"class.WTF::StringView" }
%"class.blink::HeapVectorBacking.4307" = type { i8 }
%"class.blink::HeapVectorBacking.4295" = type { i8 }
%"class.blink::HeapVectorBacking.4322" = type { i8 }

$_ZN3WTF7HashSetIN2ax5mojom4RoleENS_7IntHashIS3_EENS_10HashTraitsIS3_EENS_18PartitionAllocatorEED2Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink7AXRangeD2Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE6insertIRKS4_EEvjOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_ = comdat any

$_ZNK5blink8AXObject12GetListStyleEv = comdat any

$_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE = comdat any

$_ZNK5blink8AXObject11IsDataTableEv = comdat any

$_ZNK5blink8AXObject16GetSortDirectionEv = comdat any

$_ZNK5blink8AXObject12HeaderObjectEv = comdat any

$_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv = comdat any

$_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_ = comdat any

$_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14AccessibleNodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF15ConstructTraitsIN5blink13IgnoredReasonENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_ = comdat any

$_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_SF_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZNK3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16HTMLInputElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16HTMLInputElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16HTMLInputElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16HTMLInputElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN2ax5mojom10DropeffectEEEmm = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_ = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv = comdat any

$_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23NameSourceRelatedObjectEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink9FloatRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatRectEEEmm = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_23NameSourceRelatedObjectEE4CallIJRPNS_8AXObjectERN3WTF6StringEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_23NameSourceRelatedObjectEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_23NameSourceRelatedObjectEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_23NameSourceRelatedObjectEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10WeakMemberIS3_EEEEvOT_ = comdat any

$_ZN3WTF15ConstructTraitsIN5blink17DescriptionSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_17DescriptionSourceEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN5blink17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv = comdat any

$_ZN3WTF20VectorTypeOperationsIN5blink17DescriptionSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b = comdat any

$_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS_12AtomicStringEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink12AXNodeObjectE = hidden unnamed_addr constant { [166 x i8*] } { [166 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObjectD2Ev to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObjectD0Ev to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::Visitor"*)* @_ZNK5blink12AXNodeObject5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::AXObject"*)* @_ZN5blink12AXNodeObject4InitEPNS_8AXObjectE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject6DetachEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i32, i8*)* @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb to i8*), i8* bitcast (%"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17GetAccessibleNodeEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsImageMapLinkEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsAXNodeObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16IsAXLayoutObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXInlineTextBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject6IsListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsAXListBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXListBoxOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsMenuListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16IsMenuListOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsMenuListPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsMockObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsProgressIndicatorEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsAXRadioInputEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8IsSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsValidationMessageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsVirtualObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsControlEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsFieldsetEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12IsInputImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13IsNativeImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18IsNativeSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsNativeSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12IsSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsAutofillAvailableEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11IsClickableEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsExpandedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsFocusedEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsGrabbedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9IsHoveredEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject20IsLineBreakingObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8IsLinkedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8IsLoadedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7IsModalEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17IsMultiSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11IsOffScreenEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsRequiredEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10IsSelectedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19IsSelectedFromFocusEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject22IsSelectedOptionActiveEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsNotUserSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsVisibleEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsVisitedEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.3130"*)* @_ZNK5blink12AXNodeObject29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.3130"*)* @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32*, %"class.blink::HeapVector.2999"*)* @_ZNK5blink12AXNodeObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.2999"*)* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.3995"*, %"class.blink::HeapVector.3879"*)* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject11PlaceholderEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject5TitleEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i1, i1, %"class.blink::HeapHashSet.3867"*, i32*, %"class.blink::HeapVector.3879"*, %"class.blink::HeapVector.3890"*)* @_ZNK5blink12AXNodeObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)* @_ZNK5blink12AXNodeObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEb to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject9AccessKeyEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15BackgroundColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8GetColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10ColorValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject24CanvasHasFallbackContentEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18ComputedFontFamilyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject26FontFamilyForSerializationEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8FontSizeEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject10FontWeightEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12HeadingLevelEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17HierarchicalLevelEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::IntSize"*)* @_ZNK5blink12AXNodeObject12ImageDataUrlERKNS_7IntSizeE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16InPageLinkTargetEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11OrientationEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12GetListStyleEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12GetTextAlignEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16GetTextDirectionEv to i8*), i8* bitcast (float (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13GetTextIndentEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15GetTextPositionEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, i32*, i32*, i32*, i32*)* @_ZNK5blink12AXNodeObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_ to i8*), i8* bitcast (void (%"class.blink::HeapVector.2999"*, %"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19RadioButtonsInGroupEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject3UrlEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12ChooserPopupEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject28LoadInlineTextBoxesRecursiveEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10NextOnLineEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14PreviousOnLineEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.4002"*)* @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.4002"*, %"class.WTF::Vector.4002"*)* @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_ to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10TextLengthEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*, i32)* @_ZNK5blink12AXNodeObject29TextOffsetInFormattingContextEi to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject21TextOffsetInContainerEi to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject19GetAriaCurrentStateEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15GetInvalidStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject16AriaInvalidValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject13ValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject16MaxValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject16MinValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, float*)* @_ZNK5blink12AXNodeObject17StepValueForRangeEPf to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject18GetValueForControlEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject46SlowGetValueForControlIncludingContentEditableEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11RestrictionEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject26DetermineAccessibilityRoleEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17AriaRoleAttributeEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject16ActiveDescendantEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12AutoCompleteEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"*)* @_ZNK5blink12AXNodeObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"*)* @_ZNK5blink12AXNodeObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject12ErrorMessageEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8HasPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject14IsEditableRootEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject30HasContentEditableAttributeSetEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject20SupportsARIADraggingEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.WTF::Vector.3873"*)* @_ZNK5blink12AXNodeObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8PosInSetEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject7SetSizeEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16LiveRegionStatusEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18LiveRegionRelevantEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)* @_ZNK5blink12AXNodeObject17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*, %"class.blink::IntPoint"*)* @_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject15CanHaveChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13ClearChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"*)* @_ZNK5blink12AXNodeObject15SelectedOptionsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (double (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject24EstimatedLoadingProgressEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12RootScrollerEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject7GetNodeEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15GetLayoutObjectEv to i8*), i8* bitcast (%"class.blink::Document"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject11GetDocumentEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13AnchorElementEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject13ActionElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject8LanguageEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink12AXNodeObject12HasAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink12AXNodeObject12GetAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsDataTableEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11ColumnCountEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8RowCountEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.2999"*)* @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.2999"*)* @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*, i32, i32)* @_ZNK5blink8AXObject19CellForColumnAndRowEjj to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11ColumnIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8RowIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10ColumnSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7RowSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16GetSortDirectionEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12HeaderObjectEv to i8*), i8* bitcast (%"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject23OnNativeDecrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject19OnNativeClickActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject19OnNativeFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject23OnNativeIncrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i1)* @_ZN5blink8AXObject25OnNativeSetSelectedActionEb to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*, %"class.WTF::String"*)* @_ZN5blink12AXNodeObject22OnNativeSetValueActionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject15ChildrenChangedEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject29HandleActiveDescendantChangedEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, i32)* @_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject25HandleAriaExpandedChangedEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject16SelectionChangedEv to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject22NativeRoleIgnoringAriaEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObject11AddChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXNodeObject"*, %"struct.ui::AXNodeData"*)* @_ZNK5blink12AXNodeObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE to i8*), i8* bitcast (i32 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject26RoleFromLayoutObjectOrNodeEv to i8*), i8* bitcast (i1 (%"class.blink::AXNodeObject"*)* @_ZNK5blink12AXNodeObject17IsTabItemSelectedEv to i8*)] }, align 8
@_ZN5blink10html_names10kHeaderTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kFooterTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEEE30always_included_computed_roles = internal global %"class.WTF::HashSet.3144" zeroinitializer, align 8
@_ZGVZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEEE30always_included_computed_roles = internal global i64 0, align 8
@.ref.tmp = private constant [51 x i32] [i32 1, i32 5, i32 6, i32 8, i32 9, i32 23, i32 25, i32 27, i32 26, i32 31, i32 32, i32 33, i32 35, i32 36, i32 40, i32 41, i32 42, i32 45, i32 47, i32 49, i32 52, i32 55, i32 57, i32 58, i32 61, i32 62, i32 65, i32 72, i32 73, i32 74, i32 79, i32 84, i32 85, i32 86, i32 88, i32 95, i32 112, i32 116, i32 119, i32 120, i32 122, i32 130, i32 131, i32 137, i32 141, i32 144, i32 149, i32 153, i32 155, i32 158, i32 173], align 4
@__dso_handle = external hidden global i8
@_ZN5blink10html_names10kTitleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kAltAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names6kThTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kScopeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"rowgroup\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"colgroup\00", align 1
@_ZN5blink16input_type_names6kColorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names7kButtonE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names9kCheckboxE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names5kDateE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names9kDatetimeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names14kDatetimeLocalE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kMonthE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names5kWeekE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names5kFileE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kRadioE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names7kNumberE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kRangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names7kSearchE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names5kTimeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kImageE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kResetE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names7kSubmitE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names6kDdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDtTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink12mathml_names8kMathTagE = external local_unnamed_addr constant %"class.blink::MathMLQualifiedName"*, align 8
@_ZN5blink10html_names6kRpTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kRtTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kAbbrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kArticleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kCodeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kEmTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kStrongTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kDelTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kInsTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMainTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMarkTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kNavTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kAsideTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kPreTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kSectionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kAddressTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names14kBlockquoteTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kCaptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names14kFigcaptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kFigureTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kTimeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.4 = private unnamed_addr constant [9 x i8] c"menuitem\00", align 1
@_ZN5blink10html_names16kAriaGrabbedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.5 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@_ZN5blink10html_names9kOpenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names6kH1TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH2TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH3TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH4TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH5TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH6TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.6 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"horizontal\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"vertical\00", align 1
@__const._ZNK5blink12AXNodeObject12ImageDataUrlERKNS_7IntSizeE.canvas = private unnamed_addr constant { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.3420, [384 x i64], %class.sk_sp.3421, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.3422", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.3428" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.3420 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.3421 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.3422" { %"class.std::__1::__compressed_pair.3423" { %"struct.std::__1::__compressed_pair_elem.3424" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.3428" { %"class.std::__1::__compressed_pair.3429" { %"struct.std::__1::__compressed_pair_elem.3430" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } }, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kAccesskeyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.10 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"page\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"location\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@_ZN5blink10html_names9kStepAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names14kAriaLabelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.17 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"execute\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"move\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"popup\00", align 1
@_ZN5blink10html_names19kAriaDropeffectAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.22 = private unnamed_addr constant [8 x i8] c"listbox\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"tree\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"grid\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"dialog\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"menu\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZN5blink10html_names12kColgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.29 = private unnamed_addr constant [73 x i8] c"../../third_party/blink/renderer/modules/accessibility/ax_node_object.cc\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"child\00", align 1
@.str.31 = private unnamed_addr constant [59 x i8] c"Child has been destroyed before attempted use, parent is: \00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"!child->IsDetached()\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"Child has been detached before attempted use, parent is: \00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"!IsDetached()\00", align 1
@.str.35 = private unnamed_addr constant [75 x i8] c"Parent was detached while attempting to load child text boxes, parent is: \00", align 1
@_ZN5blink10html_names11kUsemapAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink20shadow_element_names23kPseudoInputPlaceholderE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names8kForAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names10kValueAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kPlaceholderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.36 = private unnamed_addr constant [3 x i8] c", \00", align 1
@_ZN5blink10html_names20kAriaPlaceholderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names12kSummaryAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kTitleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink10html_names20kAriaDescribedbyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase38is_accessibility_object_model_enabled_E = external local_unnamed_addr global i8, align 1
@__const._ZN12_GLOBAL__N_119CreateKeyboardEventEPN5blink14LocalDOMWindowENS0_5mojom9EventTypeENS_8AXActionE.key = private unnamed_addr constant <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }> <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [4 x i16] [i16 -21846, i16 -21846, i16 -21846, i16 -21846], [4 x i16] [i16 -21846, i16 -21846, i16 -21846, i16 -21846], [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZTVN5blink16WebKeyboardEventE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.37 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.38 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kLabelTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kOptgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink10html_names6kTrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed = internal global i64 0, align 8
@_ZN5blink10html_names11kDetailsTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kFieldsetTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.39 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.40 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::QualifiedName]\00", align 1
@_ZN5blink11g_null_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue = internal unnamed_addr global %"class.WTF::StaticSingleton.4177" zeroinitializer, align 2
@_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue = internal global i64 0, align 8
@_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal unnamed_addr global %"class.WTF::StaticSingleton.4177" zeroinitializer, align 2
@_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue = internal global i64 0, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.41 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@.str.42 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink17AXObjectCacheImpl17use_ax_menu_list_E = external local_unnamed_addr global i8, align 1
@.str.44 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.45 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.46 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.47 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.48 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.51 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.53 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14AccessibleNodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::AccessibleNode>, WTF::VectorTraits<blink::Member<blink::AccessibleNode> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Element>, WTF::VectorTraits<blink::Member<blink::Element> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_13IgnoredReasonENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [136 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::IgnoredReason, WTF::VectorTraits<blink::IgnoredReason> >]\00", align 1
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.55 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2ax5mojom4RoleEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = ax::mojom::Role]\00", align 1
@_ZN5blink10html_names8kSpanTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink10html_names10kButtonTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kSummaryTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTableTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTbodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTfootTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTheadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kOptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kDivTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMenuTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kUlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kOlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kMeterTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kProgressTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kOutputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kPTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kLegendTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kRubyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kAudioTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kVideoTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kFormTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kDialogTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kHTMLTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kEmbedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kHrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8AXObjectEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::AXObject>, WTF::VectorTraits<blink::Member<blink::AXObject> > >]\00", align 1
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kCanvasTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16HTMLInputElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [173 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::HTMLInputElement>, WTF::VectorTraits<blink::Member<blink::HTMLInputElement> > >]\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2ax5mojom10DropeffectEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = ax::mojom::Dropeffect]\00", align 1
@.str.57 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.58 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.59 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_10NameSourceENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [130 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::NameSource, WTF::VectorTraits<blink::NameSource> >]\00", align 1
@_ZN5blink10html_names6kBrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_23NameSourceRelatedObjectEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [187 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::NameSourceRelatedObject>, WTF::VectorTraits<blink::Member<blink::NameSourceRelatedObject> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatRectEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FloatRect]\00", align 1
@.str.60 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@_ZN5blink10html_names7kMapTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23NameSourceRelatedObjectEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NameSourceRelatedObject]\00", align 1
@_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_23NameSourceRelatedObjectEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_23NameSourceRelatedObjectEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink10html_names8kAreaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_17DescriptionSourceENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [144 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::DescriptionSource, WTF::VectorTraits<blink::DescriptionSource> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@switch.table._ZNK5blink12AXNodeObject15GetTextPositionEv = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 4
@switch.table._ZNK5blink12AXNodeObject12GetTextAlignEv = private unnamed_addr constant [9 x i32] [i32 1, i32 2, i32 3, i32 4, i32 1, i32 2, i32 3, i32 1, i32 2], align 4

@_ZN5blink12AXNodeObjectC1EPNS_4NodeERNS_17AXObjectCacheImplE = hidden unnamed_addr alias void (%"class.blink::AXNodeObject"*, %"class.blink::Node"*, %"class.blink::AXObjectCacheImpl"*), void (%"class.blink::AXNodeObject"*, %"class.blink::Node"*, %"class.blink::AXObjectCacheImpl"*)* @_ZN5blink12AXNodeObjectC2EPNS_4NodeERNS_17AXObjectCacheImplE
@_ZN5blink12AXNodeObjectD1Ev = hidden unnamed_addr alias void (%"class.blink::AXNodeObject"*), void (%"class.blink::AXNodeObject"*)* @_ZN5blink12AXNodeObjectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObjectC2EPNS_4NodeERNS_17AXObjectCacheImplE(%"class.blink::AXNodeObject"*, %"class.blink::Node"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  tail call void @_ZN5blink8AXObjectC2ERNS_17AXObjectCacheImplE(%"class.blink::AXObject"* %4, %"class.blink::AXObjectCacheImpl"* dereferenceable(456) %2) #15
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [166 x i8*] }, { [166 x i8*] }* @_ZTVN5blink12AXNodeObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 1
  store i32 182, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  store i32 182, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::Node"* %1, %"class.blink::Node"** %8, align 8
  ret void
}

declare void @_ZN5blink8AXObjectC2ERNS_17AXObjectCacheImplE(%"class.blink::AXObject"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObjectD2Ev(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [166 x i8*] }, { [166 x i8*] }* @_ZTVN5blink12AXNodeObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  tail call void @_ZN5blink8AXObjectD2Ev(%"class.blink::AXObject"* %3) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8AXObjectD2Ev(%"class.blink::AXObject"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObjectD0Ev(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [166 x i8*] }, { [166 x i8*] }* @_ZTVN5blink12AXNodeObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  tail call void @_ZN5blink8AXObjectD2Ev(%"class.blink::AXObject"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject28AlterSliderOrSpinButtonValueEb(%"class.blink::AXNodeObject"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebKeyboardEvent", align 8
  %4 = alloca %"class.blink::WebKeyboardEvent", align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::Decimal", align 8
  %9 = alloca %"class.blink::StepRange", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %11) #15
  br i1 %12, label %203, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %203, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %19 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %19, i64 21
  %21 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::AXNodeObject"* %0) #15
  br i1 %22, label %28, label %23

23:                                               ; preds = %17
  %24 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %18, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %24, i64 31
  %26 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::AXNodeObject"* %0) #15
  br i1 %27, label %28, label %203

28:                                               ; preds = %23, %17
  %29 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #15
  store float 0xFFFFFFFFE0000000, float* %5, align 4
  %30 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*, float*)***
  %31 = load i1 (%"class.blink::AXNodeObject"*, float*)**, i1 (%"class.blink::AXNodeObject"*, float*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*, float*)*, i1 (%"class.blink::AXNodeObject"*, float*)** %31, i64 94
  %33 = load i1 (%"class.blink::AXNodeObject"*, float*)*, i1 (%"class.blink::AXNodeObject"*, float*)** %32, align 8
  %34 = call zeroext i1 %33(%"class.blink::AXNodeObject"* %0, float* nonnull %5) #15
  br i1 %34, label %35, label %202

35:                                               ; preds = %28
  %36 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #15
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  %37 = load i1 (%"class.blink::AXNodeObject"*, float*)**, i1 (%"class.blink::AXNodeObject"*, float*)*** %30, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*, float*)*, i1 (%"class.blink::AXNodeObject"*, float*)** %37, i64 97
  %39 = load i1 (%"class.blink::AXNodeObject"*, float*)*, i1 (%"class.blink::AXNodeObject"*, float*)** %38, align 8
  %40 = call zeroext i1 %39(%"class.blink::AXNodeObject"* %0, float* nonnull %6) #15
  br i1 %40, label %75, label %41

41:                                               ; preds = %35
  %42 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %18, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %42, i64 30
  %44 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %43, align 8
  %45 = call zeroext i1 %44(%"class.blink::AXNodeObject"* %0) #15
  br i1 %45, label %51, label %46

46:                                               ; preds = %41
  %47 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %18, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %47, i64 29
  %49 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %48, align 8
  %50 = call zeroext i1 %49(%"class.blink::AXNodeObject"* %0) #15
  br i1 %50, label %51, label %201

51:                                               ; preds = %46, %41
  %52 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  %53 = bitcast %"class.blink::Decimal"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #15
  %54 = bitcast %"class.blink::StepRange"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %54) #15
  call void @_ZN5blink9StepRangeC1Ev(%"class.blink::StepRange"* nonnull %9) #15
  %55 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %9, i64 0, i32 2
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %8, %"class.blink::Decimal"* dereferenceable(24) %55) #15
  %56 = call %"class.WTF::StringImpl"* @_ZNK5blink7Decimal8ToStringEv(%"class.blink::Decimal"* nonnull %8) #15
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %57, align 8
  %58 = call float @_ZNK3WTF6String7ToFloatEPb(%"class.WTF::String"* nonnull %7, i8* null) #15
  store float %58, float* %6, align 4
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %51
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #15
  br label %74

74:                                               ; preds = %51, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %54) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  br label %75

75:                                               ; preds = %74, %35
  %76 = load float, float* %6, align 4
  %77 = fsub float -0.000000e+00, %76
  %78 = select i1 %1, float %76, float %77
  %79 = load float, float* %5, align 4
  %80 = fadd float %79, %78
  store float %80, float* %5, align 4
  %81 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, -2
  %84 = icmp eq i32 %83, 156
  br i1 %84, label %85, label %123

85:                                               ; preds = %75
  %86 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #15
  %87 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %80) #15
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %88, align 8
  %89 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*, %"class.WTF::String"*)***
  %90 = load i1 (%"class.blink::AXNodeObject"*, %"class.WTF::String"*)**, i1 (%"class.blink::AXNodeObject"*, %"class.WTF::String"*)*** %89, align 8
  %91 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*, %"class.WTF::String"*)*, i1 (%"class.blink::AXNodeObject"*, %"class.WTF::String"*)** %90, i64 153
  %92 = load i1 (%"class.blink::AXNodeObject"*, %"class.WTF::String"*)*, i1 (%"class.blink::AXNodeObject"*, %"class.WTF::String"*)** %91, align 8
  %93 = call zeroext i1 %92(%"class.blink::AXNodeObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %10) #15
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %85
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #15
  br label %109

109:                                              ; preds = %85, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #15
  %110 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %11) #15
  br i1 %110, label %201, label %111

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %113 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %112, align 8
  %114 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %11) #15
  br i1 %114, label %117, label %115

115:                                              ; preds = %111
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  br label %117

117:                                              ; preds = %111, %115
  %118 = phi %"class.blink::Node"* [ %116, %115 ], [ null, %111 ]
  %119 = bitcast %"class.blink::AXObjectCacheImpl"* %113 to void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)***
  %120 = load void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)**, void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)** %120, i64 37
  %122 = load void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)** %121, align 8
  call void %122(%"class.blink::AXObjectCacheImpl"* %113, %"class.blink::Node"* %118) #15
  br label %201

123:                                              ; preds = %75
  %124 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase38is_accessibility_object_model_enabled_E, align 1, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %201, label %126

126:                                              ; preds = %123
  %127 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %128 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %127, align 8
  %129 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %128, i64 126
  %130 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %129, align 8
  %131 = call %"class.blink::Document"* %130(%"class.blink::AXNodeObject"* %0) #15
  %132 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %131, i64 0, i32 12, i32 0, i32 0
  %133 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %132, align 8
  %134 = bitcast %"class.blink::WebKeyboardEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %134) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %134, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>* @__const._ZN12_GLOBAL__N_119CreateKeyboardEventEPN5blink14LocalDOMWindowENS0_5mojom9EventTypeENS_8AXActionE.key to i8*), i64 80, i1 false) #15
  %135 = call i64 @_ZN4base9TimeTicks3NowEv() #15
  %136 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %3, i64 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %3, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %137, align 8
  %138 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %3, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %138, align 4
  %139 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %3, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %139, align 4
  %140 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %135, i64* %140, align 8
  %141 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %3, i64 0, i32 0, i32 4
  store i32 7, i32* %141, align 8
  %142 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %3, i64 0, i32 0, i32 5
  store i32 0, i32* %142, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink16WebKeyboardEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %136, align 8
  %143 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %3, i64 0, i32 1
  %144 = bitcast i32* %143 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 34, i1 false) #15
  %145 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %3, i64 0, i32 4
  %146 = select i1 %1, i32 2097924, i32 2097921
  %147 = select i1 %1, i32 458834, i32 458833
  %148 = select i1 %1, i32 38, i32 40
  store i32 %146, i32* %145, align 4
  %149 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %3, i64 0, i32 3
  store i32 %147, i32* %149, align 8
  store i32 %148, i32* %143, align 8
  %150 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %3, i64 0, i32 2
  store i32 %148, i32* %150, align 4
  %151 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 176) #15
  %152 = bitcast i8* %151 to %"class.blink::KeyboardEvent"*
  call void @_ZN5blink13KeyboardEventC1ERKNS_16WebKeyboardEventEPNS_14LocalDOMWindowEb(%"class.blink::KeyboardEvent"* %152, %"class.blink::WebKeyboardEvent"* nonnull dereferenceable(80) %3, %"class.blink::LocalDOMWindow"* %133, i1 zeroext true) #15
  %153 = getelementptr inbounds i8, i8* %151, i64 -4
  %154 = bitcast i8* %153 to i16*
  %155 = load atomic i16, i16* %154 monotonic, align 2
  %156 = or i16 %155, 1
  store atomic i16 %156, i16* %154 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %134) #15
  %157 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %11) #15
  br i1 %157, label %160, label %158

158:                                              ; preds = %126
  %159 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  br label %160

160:                                              ; preds = %126, %158
  %161 = phi %"class.blink::Node"* [ %159, %158 ], [ null, %126 ]
  %162 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %161, i64 0, i32 0
  %163 = bitcast i8* %151 to %"class.blink::Event"*
  %164 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %162, %"class.blink::Event"* dereferenceable(104) %163) #15
  %165 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %11) #15
  br i1 %165, label %201, label %166

166:                                              ; preds = %160
  %167 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %168 = icmp eq %"class.blink::Node"* %167, null
  br i1 %168, label %201, label %169

169:                                              ; preds = %166
  %170 = bitcast %"class.blink::WebKeyboardEvent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %170) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %170, i8* align 8 bitcast (<{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16], [6 x i8] }>* @__const._ZN12_GLOBAL__N_119CreateKeyboardEventEPN5blink14LocalDOMWindowENS0_5mojom9EventTypeENS_8AXActionE.key to i8*), i64 80, i1 false) #15
  %171 = call i64 @_ZN4base9TimeTicks3NowEv() #15
  %172 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 0, i32 0
  %173 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 0, i32 1
  store float 1.000000e+00, float* %173, align 8
  %174 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 0, i32 2, i32 0
  store float 0.000000e+00, float* %174, align 4
  %175 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 0, i32 2, i32 1
  store float 0.000000e+00, float* %175, align 4
  %176 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 %171, i64* %176, align 8
  %177 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 0, i32 4
  store i32 9, i32* %177, align 8
  %178 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 0, i32 5
  store i32 0, i32* %178, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink16WebKeyboardEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %172, align 8
  %179 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 1
  %180 = bitcast i32* %179 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 34, i1 false) #15
  %181 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 4
  %182 = select i1 %1, i32 2097924, i32 2097921
  %183 = select i1 %1, i32 458834, i32 458833
  %184 = select i1 %1, i32 38, i32 40
  store i32 %182, i32* %181, align 4
  %185 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 3
  store i32 %183, i32* %185, align 8
  store i32 %184, i32* %179, align 8
  %186 = getelementptr inbounds %"class.blink::WebKeyboardEvent", %"class.blink::WebKeyboardEvent"* %4, i64 0, i32 2
  store i32 %184, i32* %186, align 4
  %187 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 176) #15
  %188 = bitcast i8* %187 to %"class.blink::KeyboardEvent"*
  call void @_ZN5blink13KeyboardEventC1ERKNS_16WebKeyboardEventEPNS_14LocalDOMWindowEb(%"class.blink::KeyboardEvent"* %188, %"class.blink::WebKeyboardEvent"* nonnull dereferenceable(80) %4, %"class.blink::LocalDOMWindow"* %133, i1 zeroext true) #15
  %189 = getelementptr inbounds i8, i8* %187, i64 -4
  %190 = bitcast i8* %189 to i16*
  %191 = load atomic i16, i16* %190 monotonic, align 2
  %192 = or i16 %191, 1
  store atomic i16 %192, i16* %190 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %170) #15
  %193 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %11) #15
  br i1 %193, label %196, label %194

194:                                              ; preds = %169
  %195 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  br label %196

196:                                              ; preds = %169, %194
  %197 = phi %"class.blink::Node"* [ %195, %194 ], [ null, %169 ]
  %198 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %197, i64 0, i32 0
  %199 = bitcast i8* %187 to %"class.blink::Event"*
  %200 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %198, %"class.blink::Event"* dereferenceable(104) %199) #15
  br label %201

201:                                              ; preds = %123, %160, %196, %166, %109, %46, %117
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #15
  br label %202

202:                                              ; preds = %28, %201
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #15
  br label %203

203:                                              ; preds = %2, %13, %23, %202
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink12AXNodeObject7GetNodeEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi %"class.blink::Node"* [ %6, %4 ], [ null, %1 ]
  ret %"class.blink::Node"* %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5blink9StepRangeC1Ev(%"class.blink::StepRange"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink7Decimal8ToStringEv(%"class.blink::Decimal"*) local_unnamed_addr #1

declare float @_ZNK3WTF6String7ToFloatEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZN5blink12AXNodeObject16ActiveDescendantEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %2) #15
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_19AOMRelationPropertyE(%"class.blink::AXObject"* %2, i32 0) #15
  %7 = icmp eq %"class.blink::Element"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %6, i64 0, i32 0, i32 0
  %12 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %10, %"class.blink::Node"* %11) #15
  %13 = icmp eq %"class.blink::AXObject"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::AXObject"* %12 to i1 (%"class.blink::AXObject"*)***
  %16 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %16, i64 49
  %18 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::AXObject"* nonnull %12) #15
  %20 = select i1 %19, %"class.blink::AXObject"* %12, %"class.blink::AXObject"* null
  br label %21

21:                                               ; preds = %5, %8, %14, %1
  %22 = phi %"class.blink::AXObject"* [ null, %1 ], [ null, %5 ], [ null, %8 ], [ %20, %14 ]
  ret %"class.blink::AXObject"* %22
}

declare %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_19AOMRelationPropertyE(%"class.blink::AXObject"*, i32) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.3130"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::IgnoredReason", align 8
  %4 = alloca %"class.absl::optional.3139", align 8
  %5 = alloca %"class.blink::IgnoredReason", align 8
  %6 = alloca %"class.blink::IgnoredReason", align 8
  %7 = alloca %"class.blink::IgnoredReason", align 8
  %8 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZNK5blink8AXObject16IsPresentationalEv(%"class.blink::AXObject"* %8) #15
  br i1 %9, label %10, label %72

10:                                               ; preds = %2
  %11 = icmp eq %"class.blink::HeapVector.3130"* %1, null
  br i1 %11, label %664, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.blink::IgnoredReason"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 0
  store i32 12, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %69, label %21, !prof !3

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %22, align 8
  %24 = zext i32 %17 to i64
  %25 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %23, i64 %24, i32 0
  store i32 12, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %23, i64 %24, i32 1
  %27 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1
  %28 = bitcast %"class.blink::Member.3136"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::Member.3136"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %66, label %33

33:                                               ; preds = %21
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 9
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %66, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %51, align 8
  %53 = load atomic i64, i64* %30 monotonic, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %52, i64 0, i32 0, i32 0
  %57 = inttoptr i64 %53 to i8*
  %58 = bitcast %"class.blink::MarkingVisitor"* %52 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %56, i8* nonnull %57, i8* %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #15
  %62 = load i64, i64* %48, align 8
  br label %63

63:                                               ; preds = %55, %47
  %64 = phi i64 [ %50, %47 ], [ %62, %55 ]
  %65 = add i64 %64, -1
  store i64 %65, i64* %48, align 8
  br label %66

66:                                               ; preds = %21, %40, %63
  %67 = load i32, i32* %16, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %16, align 4
  br label %71

69:                                               ; preds = %12
  %70 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3133"* %70, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %3) #15
  br label %71

71:                                               ; preds = %66, %69
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br label %664

72:                                               ; preds = %2
  %73 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %74 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %74, i64 126
  %76 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %75, align 8
  %77 = tail call %"class.blink::Document"* %76(%"class.blink::AXNodeObject"* %0) #15
  %78 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %77) #15
  %79 = icmp eq %"class.blink::Page"* %78, null
  br i1 %79, label %87, label %80

80:                                               ; preds = %72
  %81 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %73, align 8
  %82 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %81, i64 126
  %83 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %82, align 8
  %84 = tail call %"class.blink::Document"* %83(%"class.blink::AXNodeObject"* %0) #15
  %85 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %84) #15
  %86 = tail call zeroext i1 @_ZNK5blink4Page12InsidePortalEv(%"class.blink::Page"* %85) #15
  br i1 %86, label %664, label %87

87:                                               ; preds = %72, %80
  %88 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %8) #15
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %91 = load %"class.blink::Node"*, %"class.blink::Node"** %90, align 8
  %92 = icmp eq %"class.blink::Node"* %91, null
  br i1 %92, label %93, label %96

93:                                               ; preds = %87, %89
  %94 = tail call zeroext i1 @_ZNK5blink8AXObject7IsImageEv(%"class.blink::AXObject"* %8) #15
  %95 = select i1 %94, i32 0, i32 2
  br label %664

96:                                               ; preds = %89
  %97 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %8) #15
  %98 = icmp eq i32 %97, 150
  br i1 %98, label %664, label %99

99:                                               ; preds = %96
  %100 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %8) #15
  %101 = icmp eq i32 %100, 159
  br i1 %101, label %102, label %109

102:                                              ; preds = %99
  %103 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %8) #15
  %104 = icmp eq %"class.blink::AXObject"* %103, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %102
  %106 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %8) #15
  %107 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %106) #15
  %108 = icmp eq i32 %107, 150
  br i1 %108, label %664, label %109

109:                                              ; preds = %102, %105, %99
  %110 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %8) #15
  %111 = icmp eq %"class.blink::Element"* %110, null
  br i1 %111, label %664, label %112

112:                                              ; preds = %109
  %113 = tail call zeroext i1 @_ZNK5blink8AXObject15IsTableLikeRoleEv(%"class.blink::AXObject"* %8) #15
  br i1 %113, label %664, label %114

114:                                              ; preds = %112
  %115 = tail call zeroext i1 @_ZNK5blink8AXObject18IsTableRowLikeRoleEv(%"class.blink::AXObject"* %8) #15
  br i1 %115, label %664, label %116

116:                                              ; preds = %114
  %117 = tail call zeroext i1 @_ZNK5blink8AXObject19IsTableCellLikeRoleEv(%"class.blink::AXObject"* %8) #15
  br i1 %117, label %664, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 0, i32 1
  %120 = load i32, i32* %119, align 8
  %121 = and i32 %120, 48
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %125 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 1, i32 2
  %128 = bitcast %"class.blink::Member.318"* %127 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %129 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %129, i64 0, i32 3, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %126, i64 0, i32 3, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %131, %133
  br i1 %134, label %137, label %135

135:                                              ; preds = %118, %123
  %136 = tail call zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"* %8) #15
  br i1 %136, label %664, label %137

137:                                              ; preds = %135, %123
  %138 = tail call zeroext i1 @_ZNK5blink8AXObject6IsLinkEv(%"class.blink::AXObject"* %8) #15
  br i1 %138, label %664, label %139

139:                                              ; preds = %137
  %140 = tail call zeroext i1 @_ZNK5blink12AXNodeObject11IsClickableEv(%"class.blink::AXNodeObject"* %0)
  br i1 %140, label %664, label %141

141:                                              ; preds = %139
  %142 = tail call zeroext i1 @_ZNK5blink8AXObject9IsHeadingEv(%"class.blink::AXObject"* %8) #15
  br i1 %142, label %664, label %143

143:                                              ; preds = %141
  %144 = load i32, i32* %119, align 8
  %145 = and i32 %144, 48
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %171

147:                                              ; preds = %143
  %148 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHeaderTagE, align 8
  %149 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %148, i64 0, i32 0, i32 0, i32 0
  %150 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 1, i32 2
  %152 = bitcast %"class.blink::Member.318"* %151 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %153 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %152, align 8
  %154 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %153, i64 0, i32 3, i32 0, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %150, i64 0, i32 3, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %155, %157
  br i1 %158, label %664, label %159

159:                                              ; preds = %147
  %160 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFooterTagE, align 8
  %161 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %160, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 1, i32 2
  %164 = bitcast %"class.blink::Member.318"* %163 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %165 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %165, i64 0, i32 3, i32 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %162, i64 0, i32 3, i32 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %167, %169
  br i1 %170, label %664, label %171

171:                                              ; preds = %143, %159
  %172 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %173 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %172, align 8
  %174 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %173, i64 24
  %175 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %174, align 8
  %176 = tail call zeroext i1 %175(%"class.blink::AXNodeObject"* %0) #15
  br i1 %176, label %664, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, 182
  br i1 %180, label %181, label %664

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 -86, i64 16, i1 false)
  %183 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %8) #15
  br i1 %183, label %186, label %184

184:                                              ; preds = %181
  %185 = load %"class.blink::Node"*, %"class.blink::Node"** %90, align 8
  br label %186

186:                                              ; preds = %181, %184
  %187 = phi %"class.blink::Node"* [ %185, %184 ], [ null, %181 ]
  call void @_ZN5blink12AXNodeObject13GetCSSAltTextEPKNS_4NodeE(%"class.absl::optional.3139"* nonnull sret %4, %"class.blink::Node"* %187)
  %188 = load i8, i8* %182, align 8, !range !2
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %198, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %198, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %641

198:                                              ; preds = %186, %190, %194
  %199 = load i32, i32* %119, align 8
  %200 = and i32 %199, 48
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %214

202:                                              ; preds = %198
  %203 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kLegendTagE, align 8
  %204 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %203, i64 0, i32 0, i32 0, i32 0
  %205 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 1, i32 2
  %207 = bitcast %"class.blink::Member.318"* %206 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %208 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %207, align 8
  %209 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %208, i64 0, i32 3, i32 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %205, i64 0, i32 3, i32 0, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %210, %212
  br i1 %213, label %641, label %214

214:                                              ; preds = %198, %202
  %215 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %172, align 8
  %216 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %215, i64 109
  %217 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %216, align 8
  %218 = tail call zeroext i1 %217(%"class.blink::AXNodeObject"* %0) #15
  br i1 %218, label %641, label %219

219:                                              ; preds = %214
  %220 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEEE30always_included_computed_roles to i8*) acquire, align 8
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %222, label %233, !prof !4

222:                                              ; preds = %219
  %223 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEEE30always_included_computed_roles) #15
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %233, label %225

225:                                              ; preds = %222
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%"class.WTF::HashSet.3144"* @_ZZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEEE30always_included_computed_roles to i8*), i8 0, i64 20, i1 false) #15
  tail call void @_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.3145"* getelementptr inbounds (%"class.WTF::HashSet.3144", %"class.WTF::HashSet.3144"* @_ZZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEEE30always_included_computed_roles, i64 0, i32 0), i32 51) #15
  br label %226

226:                                              ; preds = %226, %225
  %227 = phi i32* [ %229, %226 ], [ getelementptr inbounds ([51 x i32], [51 x i32]* @.ref.tmp, i64 0, i64 0), %225 ]
  %228 = tail call { i32*, i8 } @_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_SF_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.3145"* getelementptr inbounds (%"class.WTF::HashSet.3144", %"class.WTF::HashSet.3144"* @_ZZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEEE30always_included_computed_roles, i64 0, i32 0), i32* dereferenceable(4) %227, i32* dereferenceable(4) %227) #15
  %229 = getelementptr inbounds i32, i32* %227, i64 1
  %230 = icmp eq i32* %229, getelementptr inbounds ([51 x i32], [51 x i32]* @.ref.tmp, i64 1, i64 0)
  br i1 %230, label %231, label %226

231:                                              ; preds = %226
  %232 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.WTF::HashSet.3144"*)* @_ZN3WTF7HashSetIN2ax5mojom4RoleENS_7IntHashIS3_EENS_10HashTraitsIS3_EENS_18PartitionAllocatorEED2Ev to void (i8*)*), i8* bitcast (%"class.WTF::HashSet.3144"* @_ZZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEEE30always_included_computed_roles to i8*), i8* nonnull @__dso_handle) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEEE30always_included_computed_roles) #15
  br label %233

233:                                              ; preds = %222, %231, %219
  %234 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %8) #15
  %235 = load i32*, i32** getelementptr inbounds (%"class.WTF::HashSet.3144", %"class.WTF::HashSet.3144"* @_ZZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEEE30always_included_computed_roles, i64 0, i32 0, i32 0), align 8
  %236 = icmp eq i32* %235, null
  %237 = load i32, i32* getelementptr inbounds (%"class.WTF::HashSet.3144", %"class.WTF::HashSet.3144"* @_ZZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEEE30always_included_computed_roles, i64 0, i32 0, i32 1), align 8
  br i1 %236, label %293, label %238

238:                                              ; preds = %233
  %239 = add i32 %237, -1
  %240 = zext i32 %239 to i64
  %241 = shl i32 %234, 15
  %242 = xor i32 %241, -1
  %243 = add i32 %234, %242
  %244 = lshr i32 %243, 10
  %245 = xor i32 %244, %243
  %246 = mul i32 %245, 9
  %247 = lshr i32 %246, 6
  %248 = xor i32 %247, %246
  %249 = shl i32 %248, 11
  %250 = xor i32 %249, -1
  %251 = add i32 %248, %250
  %252 = lshr i32 %251, 16
  %253 = xor i32 %252, %251
  %254 = and i32 %253, %239
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds i32, i32* %235, i64 %255
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, %234
  br i1 %258, label %288, label %259

259:                                              ; preds = %238
  %260 = xor i32 %253, -1
  %261 = lshr i32 %251, 23
  %262 = add i32 %261, %260
  %263 = shl i32 %262, 12
  %264 = xor i32 %263, %262
  %265 = lshr i32 %264, 7
  %266 = xor i32 %265, %264
  %267 = shl i32 %266, 2
  %268 = xor i32 %267, %266
  %269 = lshr i32 %268, 20
  %270 = xor i32 %269, %268
  %271 = or i32 %270, 1
  %272 = zext i32 %271 to i64
  br label %273

273:                                              ; preds = %278, %259
  %274 = phi i32 [ %257, %259 ], [ %284, %278 ]
  %275 = phi i64 [ %255, %259 ], [ %282, %278 ]
  %276 = phi i64 [ 0, %259 ], [ %280, %278 ]
  %277 = icmp eq i32 %274, 0
  br i1 %277, label %293, label %278

278:                                              ; preds = %273
  %279 = icmp eq i64 %276, 0
  %280 = select i1 %279, i64 %272, i64 %276
  %281 = add i64 %280, %275
  %282 = and i64 %281, %240
  %283 = getelementptr inbounds i32, i32* %235, i64 %282
  %284 = load i32, i32* %283, align 4
  %285 = icmp eq i32 %284, %234
  br i1 %285, label %286, label %273

286:                                              ; preds = %278
  %287 = getelementptr inbounds i32, i32* %235, i64 %282
  br label %288

288:                                              ; preds = %286, %238
  %289 = phi i32* [ %256, %238 ], [ %287, %286 ]
  %290 = icmp eq i32* %289, null
  br i1 %290, label %293, label %291

291:                                              ; preds = %288
  %292 = zext i32 %237 to i64
  br label %296

293:                                              ; preds = %273, %288, %233
  %294 = zext i32 %237 to i64
  %295 = getelementptr inbounds i32, i32* %235, i64 %294
  br label %296

296:                                              ; preds = %291, %293
  %297 = phi i64 [ %292, %291 ], [ %294, %293 ]
  %298 = phi i32* [ %289, %291 ], [ %295, %293 ]
  %299 = getelementptr inbounds i32, i32* %235, i64 %297
  %300 = icmp eq i32* %298, %299
  br i1 %300, label %301, label %641

301:                                              ; preds = %296
  %302 = tail call zeroext i1 @_ZNK5blink8AXObject16HasAriaAttributeEb(%"class.blink::AXObject"* %8, i1 zeroext false) #15
  br i1 %302, label %641, label %303

303:                                              ; preds = %301
  %304 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  %305 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)***
  %306 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*** %305, align 8
  %307 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %306, i64 131
  %308 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %307, align 8
  %309 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %308(%"class.blink::AXNodeObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %304) #15
  %310 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %309, i64 0, i32 0, i32 0, i32 0
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %311, null
  br i1 %312, label %317, label %313

313:                                              ; preds = %303
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 1
  %315 = load i32, i32* %314, align 4
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %641

317:                                              ; preds = %303, %313
  %318 = tail call zeroext i1 @_ZNK5blink8AXObject7IsImageEv(%"class.blink::AXObject"* %8) #15
  br i1 %318, label %319, label %424

319:                                              ; preds = %317
  %320 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kAltAttrE, align 8
  %321 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*** %305, align 8
  %322 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %321, i64 131
  %323 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %322, align 8
  %324 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %323(%"class.blink::AXNodeObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %320) #15
  %325 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %324, i64 0, i32 0, i32 0, i32 0
  %326 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %325, align 8
  %327 = icmp eq %"class.WTF::StringImpl"* %326, null
  br i1 %327, label %641, label %328

328:                                              ; preds = %319
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %345

333:                                              ; preds = %328
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = zext i32 %335 to i33
  %337 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %336, i33 1) #15
  %338 = extractvalue { i33, i1 } %337, 1
  %339 = extractvalue { i33, i1 } %337, 0
  %340 = icmp slt i33 %339, 0
  %341 = or i1 %338, %340
  br i1 %341, label %342, label %343, !prof !3

342:                                              ; preds = %333
  tail call void @llvm.trap() #15
  unreachable

343:                                              ; preds = %333
  %344 = trunc i33 %339 to i32
  store i32 %344, i32* %334, align 4
  br label %345

345:                                              ; preds = %343, %328
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 1
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %411

349:                                              ; preds = %345
  %350 = icmp eq %"class.blink::HeapVector.3130"* %1, null
  br i1 %350, label %411, label %351

351:                                              ; preds = %349
  %352 = bitcast %"class.blink::IgnoredReason"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %352) #15
  %353 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %5, i64 0, i32 0
  store i32 4, i32* %353, align 8
  %354 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %354, align 8
  %355 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %356 = load i32, i32* %355, align 4
  %357 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %358 = load i32, i32* %357, align 8
  %359 = icmp eq i32 %356, %358
  br i1 %359, label %408, label %360, !prof !3

360:                                              ; preds = %351
  %361 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %362 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %361, align 8
  %363 = zext i32 %356 to i64
  %364 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %362, i64 %363, i32 0
  store i32 4, i32* %364, align 8
  %365 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %362, i64 %363, i32 1
  %366 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %5, i64 0, i32 1
  %367 = bitcast %"class.blink::Member.3136"* %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"class.blink::Member.3136"* %365 to i64*
  store i64 %368, i64* %369, align 8
  %370 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %405, label %372

372:                                              ; preds = %360
  %373 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %374 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %373, i64 0, i32 1
  %375 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %374) #15
  %376 = icmp eq i8* %375, null
  br i1 %376, label %377, label %379, !prof !3

377:                                              ; preds = %372
  %378 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %374, i8* %378) #15
  br label %379

379:                                              ; preds = %377, %372
  %380 = phi i8* [ %378, %377 ], [ %375, %372 ]
  %381 = bitcast i8* %380 to %"class.blink::ThreadState"**
  %382 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %381, align 8
  %383 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %382, i64 0, i32 9
  %384 = load i8, i8* %383, align 1, !range !2
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %405, label %386

386:                                              ; preds = %379
  %387 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %382, i64 0, i32 13
  %388 = load i64, i64* %387, align 8
  %389 = add i64 %388, 1
  store i64 %389, i64* %387, align 8
  %390 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %382, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %391 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %390, align 8
  %392 = load atomic i64, i64* %369 monotonic, align 8
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %402, label %394

394:                                              ; preds = %386
  %395 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %391, i64 0, i32 0, i32 0
  %396 = inttoptr i64 %392 to i8*
  %397 = bitcast %"class.blink::MarkingVisitor"* %391 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %398 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %397, align 8
  %399 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %398, i64 5
  %400 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %399, align 8
  tail call void %400(%"class.blink::Visitor"* %395, i8* nonnull %396, i8* %396, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #15
  %401 = load i64, i64* %387, align 8
  br label %402

402:                                              ; preds = %394, %386
  %403 = phi i64 [ %389, %386 ], [ %401, %394 ]
  %404 = add i64 %403, -1
  store i64 %404, i64* %387, align 8
  br label %405

405:                                              ; preds = %360, %379, %402
  %406 = load i32, i32* %355, align 4
  %407 = add i32 %406, 1
  store i32 %407, i32* %355, align 4
  br label %410

408:                                              ; preds = %351
  %409 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3133"* %409, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %5) #15
  br label %410

410:                                              ; preds = %405, %408
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %352) #15
  br label %411

411:                                              ; preds = %410, %349, %345
  %412 = phi i32 [ 1, %410 ], [ 1, %349 ], [ 0, %345 ]
  %413 = load atomic i32, i32* %329 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  br i1 %415, label %418, label %420

418:                                              ; preds = %411
  %419 = add i32 %417, -1
  store i32 %419, i32* %416, align 4
  br label %420

420:                                              ; preds = %418, %411
  %421 = phi i32 [ %419, %418 ], [ %417, %411 ]
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %641

423:                                              ; preds = %420
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %326) #15
  br label %641

424:                                              ; preds = %317
  %425 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %110, i64 0, i32 0, i32 0
  %426 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %425) #15
  %427 = icmp eq %"class.blink::ShadowRoot"* %426, null
  br i1 %427, label %428, label %481

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %110, i64 0, i32 0, i32 0, i32 1
  %430 = load i32, i32* %429, align 8
  %431 = and i32 %430, 48
  switch i32 %431, label %447 [
    i32 32, label %481
    i32 0, label %432
  ]

432:                                              ; preds = %428
  %433 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %434 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %433, i64 0, i32 0, i32 0, i32 0
  %435 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %434, align 8
  %436 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %425, i64 1, i32 2
  %437 = bitcast %"class.blink::Member.318"* %436 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %438 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %437, align 8
  %439 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %438, i64 0, i32 3, i32 0, i32 0, i32 0
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %439, align 8
  %441 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %435, i64 0, i32 3, i32 0, i32 0, i32 0
  %442 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %441, align 8
  %443 = icmp ne %"class.WTF::StringImpl"* %440, %442
  %444 = and i32 %430, 1048576
  %445 = icmp eq i32 %444, 0
  %446 = or i1 %445, %443
  br i1 %446, label %447, label %641

447:                                              ; preds = %428, %432
  %448 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %110, i64 0, i32 3, i32 0, i32 0
  %449 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %448, align 8
  %450 = icmp eq %"class.blink::ElementData"* %449, null
  br i1 %450, label %481, label %451

451:                                              ; preds = %447
  %452 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %449, i64 0, i32 3, i32 0, i32 0, i32 0
  %453 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %452, align 8
  %454 = icmp eq %"class.WTF::StringImpl"* %453, null
  br i1 %454, label %481, label %455

455:                                              ; preds = %451
  %456 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %425) #15
  %457 = icmp eq %"class.blink::ShadowRoot"* %456, null
  br i1 %457, label %458, label %481

458:                                              ; preds = %455
  %459 = load i32, i32* %429, align 8
  %460 = and i32 %459, 48
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %641

462:                                              ; preds = %458
  %463 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kLabelTagE, align 8
  %464 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %463, i64 0, i32 0, i32 0, i32 0
  %465 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %464, align 8
  %466 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %425, i64 1, i32 2
  %467 = bitcast %"class.blink::Member.318"* %466 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %468 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %467, align 8
  %469 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %468, i64 0, i32 3, i32 0, i32 0, i32 0
  %470 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %469, align 8
  %471 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %465, i64 0, i32 3, i32 0, i32 0, i32 0
  %472 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %471, align 8
  %473 = icmp eq %"class.WTF::StringImpl"* %470, %472
  br i1 %473, label %481, label %474

474:                                              ; preds = %462
  %475 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %476 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %475, i64 0, i32 0, i32 0, i32 0
  %477 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %476, align 8
  %478 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %477, i64 0, i32 3, i32 0, i32 0, i32 0
  %479 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %478, align 8
  %480 = icmp eq %"class.WTF::StringImpl"* %470, %479
  br i1 %480, label %481, label %641

481:                                              ; preds = %428, %447, %451, %455, %462, %474, %424
  %482 = load i32, i32* %119, align 8
  %483 = and i32 %482, 48
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %641

485:                                              ; preds = %481
  %486 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %487 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %486, i64 0, i32 0, i32 0, i32 0
  %488 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %487, align 8
  %489 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 1, i32 2
  %490 = bitcast %"class.blink::Member.318"* %489 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %491 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %490, align 8
  %492 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %491, i64 0, i32 3, i32 0, i32 0, i32 0
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %492, align 8
  %494 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %488, i64 0, i32 3, i32 0, i32 0, i32 0
  %495 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %494, align 8
  %496 = icmp eq %"class.WTF::StringImpl"* %493, %495
  br i1 %496, label %497, label %559

497:                                              ; preds = %485
  %498 = icmp eq %"class.blink::HeapVector.3130"* %1, null
  br i1 %498, label %641, label %499

499:                                              ; preds = %497
  %500 = bitcast %"class.blink::IgnoredReason"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %500) #15
  %501 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 0, i32 0
  store i32 14, i32* %501, align 8
  %502 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %502, align 8
  %503 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %504 = load i32, i32* %503, align 4
  %505 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i32, i32* %505, align 8
  %507 = icmp eq i32 %504, %506
  br i1 %507, label %556, label %508, !prof !3

508:                                              ; preds = %499
  %509 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %510 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %509, align 8
  %511 = zext i32 %504 to i64
  %512 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %510, i64 %511, i32 0
  store i32 14, i32* %512, align 8
  %513 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %510, i64 %511, i32 1
  %514 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 0, i32 1
  %515 = bitcast %"class.blink::Member.3136"* %514 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.blink::Member.3136"* %513 to i64*
  store i64 %516, i64* %517, align 8
  %518 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %553, label %520

520:                                              ; preds = %508
  %521 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %522 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %521, i64 0, i32 1
  %523 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %522) #15
  %524 = icmp eq i8* %523, null
  br i1 %524, label %525, label %527, !prof !3

525:                                              ; preds = %520
  %526 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %522, i8* %526) #15
  br label %527

527:                                              ; preds = %525, %520
  %528 = phi i8* [ %526, %525 ], [ %523, %520 ]
  %529 = bitcast i8* %528 to %"class.blink::ThreadState"**
  %530 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %529, align 8
  %531 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %530, i64 0, i32 9
  %532 = load i8, i8* %531, align 1, !range !2
  %533 = icmp eq i8 %532, 0
  br i1 %533, label %553, label %534

534:                                              ; preds = %527
  %535 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %530, i64 0, i32 13
  %536 = load i64, i64* %535, align 8
  %537 = add i64 %536, 1
  store i64 %537, i64* %535, align 8
  %538 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %530, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %539 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %538, align 8
  %540 = load atomic i64, i64* %517 monotonic, align 8
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %550, label %542

542:                                              ; preds = %534
  %543 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %539, i64 0, i32 0, i32 0
  %544 = inttoptr i64 %540 to i8*
  %545 = bitcast %"class.blink::MarkingVisitor"* %539 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %546 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %545, align 8
  %547 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %546, i64 5
  %548 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %547, align 8
  tail call void %548(%"class.blink::Visitor"* %543, i8* nonnull %544, i8* %544, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #15
  %549 = load i64, i64* %535, align 8
  br label %550

550:                                              ; preds = %542, %534
  %551 = phi i64 [ %537, %534 ], [ %549, %542 ]
  %552 = add i64 %551, -1
  store i64 %552, i64* %535, align 8
  br label %553

553:                                              ; preds = %508, %527, %550
  %554 = load i32, i32* %503, align 4
  %555 = add i32 %554, 1
  store i32 %555, i32* %503, align 4
  br label %558

556:                                              ; preds = %499
  %557 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3133"* %557, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %6) #15
  br label %558

558:                                              ; preds = %553, %556
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %500) #15
  br label %641

559:                                              ; preds = %485
  %560 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kLabelTagE, align 8
  %561 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %560, i64 0, i32 0, i32 0, i32 0
  %562 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %561, align 8
  %563 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 1, i32 2
  %564 = bitcast %"class.blink::Member.318"* %563 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %565 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %564, align 8
  %566 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %565, i64 0, i32 3, i32 0, i32 0, i32 0
  %567 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %566, align 8
  %568 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %562, i64 0, i32 3, i32 0, i32 0, i32 0
  %569 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %568, align 8
  %570 = icmp eq %"class.WTF::StringImpl"* %567, %569
  %571 = bitcast %"class.blink::Node"* %91 to %"class.blink::HTMLLabelElement"*
  br i1 %570, label %572, label %641

572:                                              ; preds = %559
  %573 = tail call zeroext i1 @_ZN5blink12AXNodeObject16IsRedundantLabelEPNS_16HTMLLabelElementE(%"class.blink::HTMLLabelElement"* nonnull %571)
  br i1 %573, label %574, label %641

574:                                              ; preds = %572
  %575 = icmp eq %"class.blink::HeapVector.3130"* %1, null
  br i1 %575, label %641, label %576

576:                                              ; preds = %574
  %577 = bitcast %"class.blink::IgnoredReason"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %577) #15
  %578 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %579 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %578, align 8
  %580 = tail call %"class.blink::HTMLElement"* @_ZNK5blink16HTMLLabelElement7controlEv(%"class.blink::HTMLLabelElement"* nonnull %571) #15
  %581 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %580, i64 0, i32 0, i32 0, i32 0
  %582 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %579, %"class.blink::Node"* %581) #15
  %583 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 0, i32 0
  store i32 9, i32* %583, align 8
  %584 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* %582, %"class.blink::AXObject"** %584, align 8
  %585 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %586 = load i32, i32* %585, align 4
  %587 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %588 = load i32, i32* %587, align 8
  %589 = icmp eq i32 %586, %588
  br i1 %589, label %638, label %590, !prof !3

590:                                              ; preds = %576
  %591 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %592 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %591, align 8
  %593 = zext i32 %586 to i64
  %594 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %592, i64 %593, i32 0
  store i32 9, i32* %594, align 8
  %595 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %592, i64 %593, i32 1
  %596 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 0, i32 1
  %597 = bitcast %"class.blink::Member.3136"* %596 to i64*
  %598 = load i64, i64* %597, align 8
  %599 = bitcast %"class.blink::Member.3136"* %595 to i64*
  store i64 %598, i64* %599, align 8
  %600 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %635, label %602

602:                                              ; preds = %590
  %603 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %604 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %603, i64 0, i32 1
  %605 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %604) #15
  %606 = icmp eq i8* %605, null
  br i1 %606, label %607, label %609, !prof !3

607:                                              ; preds = %602
  %608 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %604, i8* %608) #15
  br label %609

609:                                              ; preds = %607, %602
  %610 = phi i8* [ %608, %607 ], [ %605, %602 ]
  %611 = bitcast i8* %610 to %"class.blink::ThreadState"**
  %612 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %611, align 8
  %613 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %612, i64 0, i32 9
  %614 = load i8, i8* %613, align 1, !range !2
  %615 = icmp eq i8 %614, 0
  br i1 %615, label %635, label %616

616:                                              ; preds = %609
  %617 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %612, i64 0, i32 13
  %618 = load i64, i64* %617, align 8
  %619 = add i64 %618, 1
  store i64 %619, i64* %617, align 8
  %620 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %612, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %621 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %620, align 8
  %622 = load atomic i64, i64* %599 monotonic, align 8
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %632, label %624

624:                                              ; preds = %616
  %625 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %621, i64 0, i32 0, i32 0
  %626 = inttoptr i64 %622 to i8*
  %627 = bitcast %"class.blink::MarkingVisitor"* %621 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %628 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %627, align 8
  %629 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %628, i64 5
  %630 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %629, align 8
  tail call void %630(%"class.blink::Visitor"* %625, i8* nonnull %626, i8* %626, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #15
  %631 = load i64, i64* %617, align 8
  br label %632

632:                                              ; preds = %624, %616
  %633 = phi i64 [ %619, %616 ], [ %631, %624 ]
  %634 = add i64 %633, -1
  store i64 %634, i64* %617, align 8
  br label %635

635:                                              ; preds = %590, %609, %632
  %636 = load i32, i32* %585, align 4
  %637 = add i32 %636, 1
  store i32 %637, i32* %585, align 4
  br label %640

638:                                              ; preds = %576
  %639 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3133"* %639, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %7) #15
  br label %640

640:                                              ; preds = %635, %638
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %577) #15
  br label %641

641:                                              ; preds = %481, %559, %296, %572, %640, %574, %432, %458, %474, %423, %420, %319, %558, %497, %301, %313, %214, %202, %194
  %642 = phi i32 [ 0, %194 ], [ 0, %202 ], [ 0, %214 ], [ 0, %296 ], [ 0, %313 ], [ 0, %301 ], [ 1, %497 ], [ 1, %558 ], [ %412, %420 ], [ %412, %423 ], [ 0, %319 ], [ 0, %474 ], [ 0, %458 ], [ 0, %432 ], [ 2, %559 ], [ 0, %572 ], [ 1, %640 ], [ 1, %574 ], [ 2, %481 ]
  %643 = load i8, i8* %182, align 8, !range !2
  %644 = icmp eq i8 %643, 0
  br i1 %644, label %663, label %645

645:                                              ; preds = %641
  %646 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %647 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %646, align 8
  %648 = icmp eq %"class.WTF::StringImpl"* %647, null
  br i1 %648, label %662, label %649

649:                                              ; preds = %645
  %650 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %647, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %651 = load atomic i32, i32* %650 monotonic, align 4
  %652 = and i32 %651, 2
  %653 = icmp eq i32 %652, 0
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %647, i64 0, i32 0
  %655 = load i32, i32* %654, align 4
  br i1 %653, label %656, label %658

656:                                              ; preds = %649
  %657 = add i32 %655, -1
  store i32 %657, i32* %654, align 4
  br label %658

658:                                              ; preds = %656, %649
  %659 = phi i32 [ %657, %656 ], [ %655, %649 ]
  %660 = icmp eq i32 %659, 0
  br i1 %660, label %661, label %662

661:                                              ; preds = %658
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %647) #15
  br label %662

662:                                              ; preds = %661, %658, %645
  store i8 0, i8* %182, align 8
  br label %663

663:                                              ; preds = %641, %662
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #15
  br label %664

664:                                              ; preds = %93, %105, %96, %177, %171, %147, %159, %141, %139, %137, %135, %112, %114, %116, %109, %663, %80, %71, %10
  %665 = phi i32 [ 1, %10 ], [ 1, %71 ], [ 1, %80 ], [ %95, %93 ], [ 1, %105 ], [ 1, %96 ], [ %642, %663 ], [ 2, %109 ], [ 0, %116 ], [ 0, %114 ], [ 0, %112 ], [ 0, %135 ], [ 0, %137 ], [ 0, %139 ], [ 0, %141 ], [ 0, %159 ], [ 0, %147 ], [ 0, %171 ], [ 0, %177 ]
  ret i32 %665
}

declare zeroext i1 @_ZNK5blink8AXObject16IsPresentationalEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Page12InsidePortalEv(%"class.blink::Page"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject7IsImageEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsTableLikeRoleEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject18IsTableRowLikeRoleEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsTableCellLikeRoleEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject6IsLinkEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject11IsClickableEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %46, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %46, label %8

8:                                                ; preds = %4
  %9 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %2) #15
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.blink::Element"* %9 to i1 (%"class.blink::Element"*)***
  %13 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %13, i64 138
  %15 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::Element"* nonnull %9) #15
  br i1 %16, label %46, label %17

17:                                               ; preds = %8, %11
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 0
  %19 = tail call dereferenceable(16) %"class.WTF::Vector.284"* @_ZN5blink10event_util21MouseButtonEventTypesEv() #15
  %20 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %19, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 %24
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %42, label %27

27:                                               ; preds = %17
  %28 = bitcast %"class.blink::Node"* %6 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  br label %29

29:                                               ; preds = %39, %27
  %30 = phi %"class.WTF::AtomicString"* [ %21, %27 ], [ %40, %39 ]
  %31 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %28, align 8
  %32 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %31, i64 25
  %33 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %32, align 8
  %34 = tail call %"class.blink::EventTargetData"* %33(%"class.blink::EventTarget"* %18) #15
  %35 = icmp eq %"class.blink::EventTargetData"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %34, i64 0, i32 0
  %38 = tail call zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"* %37, %"class.WTF::AtomicString"* dereferenceable(8) %30) #15
  br i1 %38, label %46, label %39

39:                                               ; preds = %36, %29
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 1
  %41 = icmp eq %"class.WTF::AtomicString"* %40, %25
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %17
  %43 = tail call zeroext i1 @_ZNK5blink8AXObject11IsTextFieldEv(%"class.blink::AXObject"* %2) #15
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = tail call zeroext i1 @_ZNK5blink8AXObject11IsClickableEv(%"class.blink::AXObject"* %2) #15
  br label %46

46:                                               ; preds = %36, %1, %11, %44, %42, %4
  %47 = phi i1 [ false, %4 ], [ false, %11 ], [ true, %42 ], [ %45, %44 ], [ false, %1 ], [ true, %36 ]
  ret i1 %47
}

declare zeroext i1 @_ZNK5blink8AXObject9IsHeadingEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject17AriaRoleAttributeEv(%"class.blink::AXNodeObject"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject13GetCSSAltTextEPKNS_4NodeE(%"class.absl::optional.3139"* noalias nocapture sret, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %1, null
  br i1 %3, label %94, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 12
  %8 = icmp eq i32 %7, 0
  %9 = and i32 %6, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  br i1 %8, label %12, label %23

12:                                               ; preds = %4
  br i1 %10, label %19, label %13

13:                                               ; preds = %12
  %14 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %15 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 2, i32 0
  br label %38

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  %21 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %21, i64 0, i32 2, i32 0
  br label %38

23:                                               ; preds = %4
  br i1 %10, label %28, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %26 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %26, i64 0, i32 1, i32 0, i32 0
  br label %30

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %30

30:                                               ; preds = %28, %24
  %31 = phi %"class.blink::NodeRenderingData"** [ %27, %24 ], [ %29, %28 ]
  %32 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %32, i64 0, i32 1
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = icmp eq %"class.blink::LayoutObject"* %34, null
  br i1 %35, label %94, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 5, i32 0
  br label %38

38:                                               ; preds = %13, %19, %36
  %39 = phi %"class.blink::ComputedStyle"** [ %37, %36 ], [ %18, %13 ], [ %22, %19 ]
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %41 = icmp eq %"class.blink::ComputedStyle"* %40, null
  br i1 %41, label %94, label %42

42:                                               ; preds = %38
  br i1 %8, label %43, label %54

43:                                               ; preds = %42
  br i1 %10, label %50, label %44

44:                                               ; preds = %43
  %45 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %46 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %46, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %48, i64 0, i32 2, i32 0
  br label %69

50:                                               ; preds = %43
  %51 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  %52 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %52, i64 0, i32 2, i32 0
  br label %69

54:                                               ; preds = %42
  br i1 %10, label %59, label %55

55:                                               ; preds = %54
  %56 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %57 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %57, i64 0, i32 1, i32 0, i32 0
  br label %61

59:                                               ; preds = %54
  %60 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %61

61:                                               ; preds = %59, %55
  %62 = phi %"class.blink::NodeRenderingData"** [ %58, %55 ], [ %60, %59 ]
  %63 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %63, i64 0, i32 1
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutObject"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %65, i64 0, i32 5, i32 0
  br label %69

69:                                               ; preds = %67, %50, %44
  %70 = phi %"class.blink::ComputedStyle"** [ %49, %44 ], [ %53, %50 ], [ %68, %67 ]
  %71 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %70, align 8
  br label %72

72:                                               ; preds = %69, %61
  %73 = phi %"class.blink::ComputedStyle"* [ null, %61 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 2113929216
  %78 = icmp eq i160 %77, 167772160
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %80, i64 0, i32 6, i32 0, i32 0
  %82 = load %"class.blink::ContentData"*, %"class.blink::ContentData"** %81, align 8
  %83 = icmp ne %"class.blink::ContentData"* %82, null
  br i1 %78, label %84, label %85

84:                                               ; preds = %72
  br i1 %83, label %96, label %94

85:                                               ; preds = %72
  br i1 %83, label %86, label %94

86:                                               ; preds = %85
  %87 = bitcast %"class.blink::ContentData"* %82 to i1 (%"class.blink::ContentData"*)***
  %88 = load i1 (%"class.blink::ContentData"*)**, i1 (%"class.blink::ContentData"*)*** %87, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %88, i64 7
  %90 = load i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.blink::ContentData"* nonnull %82) #15
  br i1 %91, label %94, label %92

92:                                               ; preds = %86
  %93 = load i32, i32* %5, align 8
  br label %96

94:                                               ; preds = %84, %85, %30, %38, %2, %86
  %95 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %95, align 8
  br label %232

96:                                               ; preds = %92, %84
  %97 = phi i32 [ %93, %92 ], [ %6, %84 ]
  %98 = and i32 %97, 12
  %99 = icmp eq i32 %98, 0
  %100 = and i32 %97, 1
  %101 = icmp eq i32 %100, 0
  br i1 %99, label %102, label %113

102:                                              ; preds = %96
  br i1 %101, label %109, label %103

103:                                              ; preds = %102
  %104 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %105 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %105, i64 0, i32 1, i32 0, i32 0
  %107 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %107, i64 0, i32 2, i32 0
  br label %128

109:                                              ; preds = %102
  %110 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  %111 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %111, i64 0, i32 2, i32 0
  br label %128

113:                                              ; preds = %96
  br i1 %101, label %118, label %114

114:                                              ; preds = %113
  %115 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %116 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %116, i64 0, i32 1, i32 0, i32 0
  br label %120

118:                                              ; preds = %113
  %119 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  br label %120

120:                                              ; preds = %118, %114
  %121 = phi %"class.blink::NodeRenderingData"** [ %117, %114 ], [ %119, %118 ]
  %122 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %122, i64 0, i32 1
  %124 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %123, align 8
  %125 = icmp eq %"class.blink::LayoutObject"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %124, i64 0, i32 5, i32 0
  br label %128

128:                                              ; preds = %126, %109, %103
  %129 = phi %"class.blink::ComputedStyle"** [ %108, %103 ], [ %112, %109 ], [ %127, %126 ]
  %130 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %129, align 8
  br label %131

131:                                              ; preds = %128, %120
  %132 = phi %"class.blink::ComputedStyle"* [ null, %120 ], [ %130, %128 ]
  %133 = bitcast %"class.blink::Node"* %1 to i8 (%"class.blink::Node"*)***
  %134 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %133, align 8
  %135 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %134, i64 34
  %136 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %135, align 8
  %137 = tail call zeroext i8 %136(%"class.blink::Node"* nonnull %1) #15
  %138 = icmp eq i8 %137, 0
  %139 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %132, i64 0, i32 0, i32 3, i32 0, i32 0
  %140 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %140, i64 0, i32 6, i32 0, i32 0
  %142 = load %"class.blink::ContentData"*, %"class.blink::ContentData"** %141, align 8
  %143 = icmp eq %"class.blink::ContentData"* %142, null
  br i1 %138, label %185, label %144

144:                                              ; preds = %131
  br i1 %143, label %183, label %145

145:                                              ; preds = %144, %179
  %146 = phi %"class.blink::ContentData"* [ %181, %179 ], [ %142, %144 ]
  %147 = bitcast %"class.blink::ContentData"* %146 to i1 (%"class.blink::ContentData"*)***
  %148 = load i1 (%"class.blink::ContentData"*)**, i1 (%"class.blink::ContentData"*)*** %147, align 8
  %149 = getelementptr inbounds i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %148, i64 6
  %150 = load i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %149, align 8
  %151 = tail call zeroext i1 %150(%"class.blink::ContentData"* nonnull %146) #15
  br i1 %151, label %152, label %179

152:                                              ; preds = %145
  %153 = getelementptr inbounds %"class.blink::ContentData", %"class.blink::ContentData"* %146, i64 1
  %154 = bitcast %"class.blink::ContentData"* %153 to %"class.WTF::StringImpl"**
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %174, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %174

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i33
  %166 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %165, i33 1) #15
  %167 = extractvalue { i33, i1 } %166, 1
  %168 = extractvalue { i33, i1 } %166, 0
  %169 = icmp slt i33 %168, 0
  %170 = or i1 %167, %169
  br i1 %170, label %171, label %172, !prof !3

171:                                              ; preds = %162
  tail call void @llvm.trap() #15
  unreachable

172:                                              ; preds = %162
  %173 = trunc i33 %168 to i32
  store i32 %173, i32* %163, align 4
  br label %174

174:                                              ; preds = %172, %157, %152
  %175 = ptrtoint %"class.WTF::StringImpl"* %155 to i64
  %176 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %176, align 8
  %177 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %178 = bitcast %"class.WTF::String"* %177 to i64*
  store i64 %175, i64* %178, align 8
  br label %232

179:                                              ; preds = %145
  %180 = getelementptr inbounds %"class.blink::ContentData", %"class.blink::ContentData"* %146, i64 0, i32 1, i32 0, i32 0
  %181 = load %"class.blink::ContentData"*, %"class.blink::ContentData"** %180, align 8
  %182 = icmp eq %"class.blink::ContentData"* %181, null
  br i1 %182, label %183, label %145

183:                                              ; preds = %179, %144
  %184 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %184, align 8
  br label %232

185:                                              ; preds = %131
  br i1 %143, label %230, label %186

186:                                              ; preds = %185
  %187 = bitcast %"class.blink::ContentData"* %142 to i1 (%"class.blink::ContentData"*)***
  %188 = load i1 (%"class.blink::ContentData"*)**, i1 (%"class.blink::ContentData"*)*** %187, align 8
  %189 = getelementptr inbounds i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %188, i64 3
  %190 = load i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %189, align 8
  %191 = tail call zeroext i1 %190(%"class.blink::ContentData"* nonnull %142) #15
  br i1 %191, label %192, label %230

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.blink::ContentData", %"class.blink::ContentData"* %142, i64 0, i32 1, i32 0, i32 0
  %194 = load %"class.blink::ContentData"*, %"class.blink::ContentData"** %193, align 8
  %195 = icmp eq %"class.blink::ContentData"* %194, null
  br i1 %195, label %230, label %196

196:                                              ; preds = %192
  %197 = bitcast %"class.blink::ContentData"* %194 to i1 (%"class.blink::ContentData"*)***
  %198 = load i1 (%"class.blink::ContentData"*)**, i1 (%"class.blink::ContentData"*)*** %197, align 8
  %199 = getelementptr inbounds i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %198, i64 6
  %200 = load i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %199, align 8
  %201 = tail call zeroext i1 %200(%"class.blink::ContentData"* nonnull %194) #15
  br i1 %201, label %202, label %230

202:                                              ; preds = %196
  %203 = bitcast %"class.blink::ContentData"** %193 to %"class.blink::AltTextContentData"**
  %204 = load %"class.blink::AltTextContentData"*, %"class.blink::AltTextContentData"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::AltTextContentData", %"class.blink::AltTextContentData"* %204, i64 0, i32 1, i32 0, i32 0
  %206 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %207 = icmp eq %"class.WTF::StringImpl"* %206, null
  br i1 %207, label %225, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %225

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %206, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i33
  %217 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %216, i33 1) #15
  %218 = extractvalue { i33, i1 } %217, 1
  %219 = extractvalue { i33, i1 } %217, 0
  %220 = icmp slt i33 %219, 0
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %223, !prof !3

222:                                              ; preds = %213
  tail call void @llvm.trap() #15
  unreachable

223:                                              ; preds = %213
  %224 = trunc i33 %219 to i32
  store i32 %224, i32* %214, align 4
  br label %225

225:                                              ; preds = %223, %208, %202
  %226 = ptrtoint %"class.WTF::StringImpl"* %206 to i64
  %227 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %227, align 8
  %228 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %229 = bitcast %"class.WTF::String"* %228 to i64*
  store i64 %226, i64* %229, align 8
  br label %232

230:                                              ; preds = %192, %185, %196, %186
  %231 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %231, align 8
  br label %232

232:                                              ; preds = %183, %174, %230, %225, %94
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashSetIN2ax5mojom4RoleENS_7IntHashIS3_EENS_10HashTraitsIS3_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashSet.3144"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashSet.3144", %"class.WTF::HashSet.3144"* %0, i64 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %7, label %5, !prof !5

5:                                                ; preds = %1
  %6 = bitcast i32* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #15
  store i32* null, i32** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink8AXObject16HasAriaAttributeEb(%"class.blink::AXObject"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12AXNodeObject16IsRedundantLabelEPNS_16HTMLLabelElementE(%"class.blink::HTMLLabelElement"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::HTMLElement"* @_ZNK5blink16HTMLLabelElement7controlEv(%"class.blink::HTMLLabelElement"* %0) #15
  %3 = icmp eq %"class.blink::HTMLElement"* %2, null
  br i1 %3, label %64, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 48
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %64

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %15 = bitcast %"class.blink::Member.318"* %14 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %13, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %64

22:                                               ; preds = %9
  %23 = bitcast %"class.blink::HTMLElement"* %2 to %"class.blink::HTMLInputElement"*
  %24 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement11IsCheckableEv(%"class.blink::HTMLInputElement"* nonnull %23) #15
  br i1 %24, label %25, label %64

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %2, i64 0, i32 0
  %27 = tail call zeroext i1 @_ZN5blink8AXObject23IsNameFromAriaAttributeEPNS_7ElementE(%"class.blink::Element"* %26) #15
  br i1 %27, label %64, label %28

28:                                               ; preds = %25
  %29 = tail call %"class.blink::LabelsNodeList"* @_ZN5blink11HTMLElement6labelsEv(%"class.blink::HTMLElement"* nonnull %2) #15
  %30 = icmp eq %"class.blink::LabelsNodeList"* %29, null
  br i1 %30, label %64, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::LabelsNodeList", %"class.blink::LabelsNodeList"* %29, i64 0, i32 0
  %33 = tail call i32 @_ZNK5blink12LiveNodeList6lengthEv(%"class.blink::LiveNodeList"* %32) #15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %64, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::HTMLLabelElement", %"class.blink::HTMLLabelElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %64, label %39

39:                                               ; preds = %35, %45
  %40 = phi %"class.blink::Node"* [ %47, %45 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 5, i32 0, i32 0
  %47 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8
  %48 = icmp eq %"class.blink::Node"* %47, null
  br i1 %48, label %64, label %39

49:                                               ; preds = %39
  %50 = bitcast %"class.blink::Node"* %40 to %"class.blink::Element"*
  %51 = icmp eq %"class.blink::Element"* %26, %50
  br i1 %51, label %52, label %64

52:                                               ; preds = %49, %57
  %53 = phi %"class.blink::Node"* [ %55, %57 ], [ %40, %49 ]
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 5, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 12
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %52

62:                                               ; preds = %52, %57
  %63 = icmp eq %"class.blink::Node"* %55, null
  br label %64

64:                                               ; preds = %45, %35, %31, %9, %28, %25, %1, %4, %62, %49, %22
  %65 = phi i1 [ false, %22 ], [ false, %31 ], [ %63, %62 ], [ false, %49 ], [ false, %9 ], [ false, %4 ], [ false, %1 ], [ false, %25 ], [ false, %28 ], [ true, %35 ], [ true, %45 ]
  ret i1 %65
}

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::HTMLElement"* @_ZNK5blink16HTMLLabelElement7controlEv(%"class.blink::HTMLLabelElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.3130"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::IgnoredReason", align 8
  %4 = alloca %"class.blink::IgnoredReason", align 8
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %6, label %199, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %199, label %11

11:                                               ; preds = %7
  %12 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %5) #15
  %13 = icmp eq i32 %12, 145
  br i1 %13, label %199, label %14

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi %"class.blink::Node"* [ %17, %16 ], [ null, %14 ]
  %20 = tail call %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %19) #15
  %21 = icmp eq %"class.blink::Element"* %20, null
  %22 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %25 = bitcast %"class.blink::Node"* %24 to %"class.blink::Element"*
  br label %26

26:                                               ; preds = %18, %23
  %27 = phi %"class.blink::Element"* [ %25, %23 ], [ null, %18 ]
  %28 = phi %"class.blink::Node"* [ %24, %23 ], [ null, %18 ]
  br i1 %21, label %96, label %29

29:                                               ; preds = %26
  %30 = tail call zeroext i1 @_ZN5blink20DisplayLockUtilities32IsInUnlockedOrActivatableSubtreeERKNS_4NodeENS_27DisplayLockActivationReasonE(%"class.blink::Node"* dereferenceable(64) %28, i32 1) #15
  br i1 %30, label %93, label %31

31:                                               ; preds = %29
  %32 = icmp eq %"class.blink::HeapVector.3130"* %1, null
  br i1 %32, label %199, label %33

33:                                               ; preds = %31
  %34 = bitcast %"class.blink::IgnoredReason"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 0
  store i32 10, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %90, label %42, !prof !3

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %43, align 8
  %45 = zext i32 %38 to i64
  %46 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %44, i64 %45, i32 0
  store i32 10, i32* %46, align 8
  %47 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %44, i64 %45, i32 1
  %48 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %3, i64 0, i32 1
  %49 = bitcast %"class.blink::Member.3136"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member.3136"* %47 to i64*
  store i64 %50, i64* %51, align 8
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %87, label %54

54:                                               ; preds = %42
  %55 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %56 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %55, i64 0, i32 1
  %57 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %56) #15
  %58 = icmp eq i8* %57, null
  br i1 %58, label %59, label %61, !prof !3

59:                                               ; preds = %54
  %60 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %56, i8* %60) #15
  br label %61

61:                                               ; preds = %59, %54
  %62 = phi i8* [ %60, %59 ], [ %57, %54 ]
  %63 = bitcast i8* %62 to %"class.blink::ThreadState"**
  %64 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %64, i64 0, i32 9
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %87, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %64, i64 0, i32 13
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  %72 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %64, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %73 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %72, align 8
  %74 = load atomic i64, i64* %51 monotonic, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %73, i64 0, i32 0, i32 0
  %78 = inttoptr i64 %74 to i8*
  %79 = bitcast %"class.blink::MarkingVisitor"* %73 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %80 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %80, i64 5
  %82 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, align 8
  tail call void %82(%"class.blink::Visitor"* %77, i8* nonnull %78, i8* %78, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #15
  %83 = load i64, i64* %69, align 8
  br label %84

84:                                               ; preds = %76, %68
  %85 = phi i64 [ %71, %68 ], [ %83, %76 ]
  %86 = add i64 %85, -1
  store i64 %86, i64* %69, align 8
  br label %87

87:                                               ; preds = %42, %61, %84
  %88 = load i32, i32* %37, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %37, align 4
  br label %92

90:                                               ; preds = %33
  %91 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3133"* %91, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %3) #15
  br label %92

92:                                               ; preds = %87, %90
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #15
  br label %199

93:                                               ; preds = %29
  %94 = tail call i32 @_ZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXNodeObject"* %0, %"class.blink::HeapVector.3130"* %1)
  %95 = icmp eq i32 %94, 1
  br label %199

96:                                               ; preds = %26
  %97 = icmp eq %"class.blink::Node"* %28, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = and i32 %100, 12
  %102 = icmp ne i32 %101, 0
  %103 = icmp eq %"class.blink::Element"* %27, null
  %104 = or i1 %103, %102
  br i1 %104, label %105, label %119

105:                                              ; preds = %98, %96
  %106 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  br label %109

109:                                              ; preds = %105, %107
  %110 = phi %"class.blink::Node"* [ %108, %107 ], [ null, %105 ]
  %111 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %110) #15
  %112 = icmp eq %"class.blink::ContainerNode"* %111, null
  br i1 %112, label %199, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %111, i64 0, i32 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %115, 12
  %117 = icmp eq i32 %116, 0
  %118 = bitcast %"class.blink::ContainerNode"* %111 to %"class.blink::Element"*
  br i1 %117, label %119, label %199

119:                                              ; preds = %113, %98
  %120 = phi %"class.blink::Element"* [ %27, %98 ], [ %118, %113 ]
  %121 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %120, i64 0, i32 0, i32 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %130, label %125

125:                                              ; preds = %119
  %126 = tail call zeroext i1 @_ZNK5blink7Element22HasElementFlagInternalENS_12ElementFlagsE(%"class.blink::Element"* nonnull %120, i32 4) #15
  br i1 %126, label %127, label %130

127:                                              ; preds = %125
  %128 = tail call i32 @_ZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXNodeObject"* %0, %"class.blink::HeapVector.3130"* %1)
  %129 = icmp eq i32 %128, 1
  br label %199

130:                                              ; preds = %119, %125
  %131 = tail call zeroext i1 @_ZNK5blink8AXObject33AOMPropertyOrARIAAttributeIsFalseENS_18AOMBooleanPropertyE(%"class.blink::AXObject"* %5, i32 4) #15
  br i1 %131, label %199, label %132

132:                                              ; preds = %130
  %133 = tail call zeroext i1 @_ZNK5blink7Element23HasDisplayContentsStyleEv(%"class.blink::Element"* nonnull %120) #15
  br i1 %133, label %134, label %137

134:                                              ; preds = %132
  %135 = tail call i32 @_ZNK5blink12AXNodeObject29ShouldIncludeBasedOnSemanticsEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXNodeObject"* %0, %"class.blink::HeapVector.3130"* %1)
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %199, label %137

137:                                              ; preds = %134, %132
  %138 = icmp eq %"class.blink::HeapVector.3130"* %1, null
  br i1 %138, label %199, label %139

139:                                              ; preds = %137
  %140 = bitcast %"class.blink::IgnoredReason"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #15
  %141 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %4, i64 0, i32 0
  store i32 10, i32* %141, align 8
  %142 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %142, align 8
  %143 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %146 = load i32, i32* %145, align 8
  %147 = icmp eq i32 %144, %146
  br i1 %147, label %196, label %148, !prof !3

148:                                              ; preds = %139
  %149 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %150 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %149, align 8
  %151 = zext i32 %144 to i64
  %152 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %150, i64 %151, i32 0
  store i32 10, i32* %152, align 8
  %153 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %150, i64 %151, i32 1
  %154 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %4, i64 0, i32 1
  %155 = bitcast %"class.blink::Member.3136"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.blink::Member.3136"* %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %193, label %160

160:                                              ; preds = %148
  %161 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %162 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %161, i64 0, i32 1
  %163 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %162) #15
  %164 = icmp eq i8* %163, null
  br i1 %164, label %165, label %167, !prof !3

165:                                              ; preds = %160
  %166 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %162, i8* %166) #15
  br label %167

167:                                              ; preds = %165, %160
  %168 = phi i8* [ %166, %165 ], [ %163, %160 ]
  %169 = bitcast i8* %168 to %"class.blink::ThreadState"**
  %170 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %170, i64 0, i32 9
  %172 = load i8, i8* %171, align 1, !range !2
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %193, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %170, i64 0, i32 13
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %170, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %179 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %178, align 8
  %180 = load atomic i64, i64* %157 monotonic, align 8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %190, label %182

182:                                              ; preds = %174
  %183 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %179, i64 0, i32 0, i32 0
  %184 = inttoptr i64 %180 to i8*
  %185 = bitcast %"class.blink::MarkingVisitor"* %179 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %186 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %186, i64 5
  %188 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %187, align 8
  tail call void %188(%"class.blink::Visitor"* %183, i8* nonnull %184, i8* %184, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #15
  %189 = load i64, i64* %175, align 8
  br label %190

190:                                              ; preds = %182, %174
  %191 = phi i64 [ %177, %174 ], [ %189, %182 ]
  %192 = add i64 %191, -1
  store i64 %192, i64* %175, align 8
  br label %193

193:                                              ; preds = %148, %167, %190
  %194 = load i32, i32* %143, align 4
  %195 = add i32 %194, 1
  store i32 %195, i32* %143, align 4
  br label %198

196:                                              ; preds = %139
  %197 = getelementptr inbounds %"class.blink::HeapVector.3130", %"class.blink::HeapVector.3130"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3133"* %197, %"class.blink::IgnoredReason"* nonnull dereferenceable(16) %4) #15
  br label %198

198:                                              ; preds = %193, %196
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #15
  br label %199

199:                                              ; preds = %113, %109, %2, %127, %130, %134, %137, %198, %92, %31, %11, %7, %93
  %200 = phi i1 [ %95, %93 ], [ true, %7 ], [ false, %11 ], [ true, %31 ], [ true, %92 ], [ %129, %127 ], [ false, %130 ], [ false, %134 ], [ true, %137 ], [ true, %198 ], [ true, %2 ], [ true, %113 ], [ true, %109 ]
  ret i1 %200
}

declare %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject33AOMPropertyOrARIAAttributeIsFalseENS_18AOMBooleanPropertyE(%"class.blink::AXObject"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element23HasDisplayContentsStyleEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject25IsDescendantOfElementTypeERN3WTF7HashSetINS_13QualifiedNameENS_17QualifiedNameHashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.blink::AXNodeObject"*, %"class.WTF::HashSet.3148"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %4, label %38, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %38, label %9

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  br label %13

13:                                               ; preds = %9, %11
  %14 = phi %"class.blink::Node"* [ %12, %11 ], [ null, %9 ]
  %15 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %14) #15
  %16 = icmp eq %"class.blink::ContainerNode"* %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %15, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::HashSet.3148", %"class.WTF::HashSet.3148"* %1, i64 0, i32 0
  br label %24

24:                                               ; preds = %33, %22
  %25 = phi %"class.blink::ContainerNode"* [ %15, %22 ], [ %31, %33 ]
  %26 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 1, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.blink::TraceWrapperV8Reference"* %26 to %"class.blink::QualifiedName"*
  %28 = tail call zeroext i1 @_ZNK3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_(%"class.WTF::HashTable.3149"* %23, %"class.blink::QualifiedName"* dereferenceable(8) %27) #15
  br i1 %28, label %38, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0
  %31 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %30) #15
  %32 = icmp eq %"class.blink::ContainerNode"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %31, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 12
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %24, label %38

38:                                               ; preds = %33, %29, %24, %17, %13, %5, %2
  %39 = phi i1 [ false, %2 ], [ false, %5 ], [ false, %17 ], [ false, %13 ], [ false, %29 ], [ false, %33 ], [ true, %24 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject25DetermineTableSectionRoleEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %2) #15
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %6, label %32, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %11 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %9, null
  br i1 %12, label %32, label %13

13:                                               ; preds = %7
  %14 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %9) #15
  %15 = icmp eq %"class.blink::ContainerNode"* %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %13, %23
  %17 = phi %"class.blink::ContainerNode"* [ %24, %23 ], [ %14, %13 ]
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %17, i64 0, i32 0
  %19 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %11, %"class.blink::Node"* %18) #15
  %20 = icmp eq %"class.blink::AXObject"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %19) #15
  switch i32 %22, label %26 [
    i32 94, label %23
    i32 89, label %23
    i32 147, label %23
  ]

23:                                               ; preds = %21, %21, %21, %16
  %24 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %18) #15
  %25 = icmp eq %"class.blink::ContainerNode"* %24, null
  br i1 %25, label %32, label %16

26:                                               ; preds = %21
  %27 = tail call zeroext i1 @_ZNK5blink8AXObject15IsTableLikeRoleEv(%"class.blink::AXObject"* nonnull %19) #15
  br i1 %27, label %28, label %32

28:                                               ; preds = %26
  %29 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %19) #15
  %30 = icmp eq i32 %29, 106
  %31 = select i1 %30, i32 89, i32 147
  br label %32

32:                                               ; preds = %23, %5, %13, %7, %26, %28, %1
  %33 = phi i32 [ 89, %1 ], [ 89, %26 ], [ %31, %28 ], [ 89, %7 ], [ 89, %13 ], [ 89, %5 ], [ 89, %23 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject21DetermineTableRowRoleEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %29, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %8 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %6, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %4
  %11 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %6) #15
  %12 = icmp eq %"class.blink::ContainerNode"* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %10, %20
  %14 = phi %"class.blink::ContainerNode"* [ %21, %20 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0
  %16 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %8, %"class.blink::Node"* %15) #15
  %17 = icmp eq %"class.blink::AXObject"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %16) #15
  switch i32 %19, label %23 [
    i32 94, label %20
    i32 89, label %20
    i32 147, label %20
  ]

20:                                               ; preds = %18, %18, %18, %13
  %21 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %15) #15
  %22 = icmp eq %"class.blink::ContainerNode"* %21, null
  br i1 %22, label %29, label %13

23:                                               ; preds = %18
  %24 = tail call zeroext i1 @_ZNK5blink8AXObject15IsTableLikeRoleEv(%"class.blink::AXObject"* nonnull %16) #15
  br i1 %24, label %25, label %29

25:                                               ; preds = %23
  %26 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %16) #15
  %27 = icmp eq i32 %26, 106
  %28 = select i1 %27, i32 108, i32 146
  br label %29

29:                                               ; preds = %20, %1, %10, %4, %25, %23
  %30 = phi i32 [ 89, %23 ], [ %28, %25 ], [ 89, %4 ], [ 89, %10 ], [ 89, %1 ], [ 89, %20 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject22DetermineTableCellRoleEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #15
  br i1 %5, label %554, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %8, null
  br i1 %11, label %554, label %12

12:                                               ; preds = %6
  %13 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %8) #15
  %14 = icmp eq %"class.blink::ContainerNode"* %13, null
  br i1 %14, label %554, label %15

15:                                               ; preds = %12, %22
  %16 = phi %"class.blink::ContainerNode"* [ %23, %22 ], [ %13, %12 ]
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %16, i64 0, i32 0
  %18 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %10, %"class.blink::Node"* %17) #15
  %19 = icmp eq %"class.blink::AXObject"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %18) #15
  switch i32 %21, label %25 [
    i32 94, label %22
    i32 89, label %22
    i32 147, label %22
  ]

22:                                               ; preds = %20, %20, %20, %15
  %23 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %17) #15
  %24 = icmp eq %"class.blink::ContainerNode"* %23, null
  br i1 %24, label %554, label %15

25:                                               ; preds = %20
  %26 = tail call zeroext i1 @_ZNK5blink8AXObject18IsTableRowLikeRoleEv(%"class.blink::AXObject"* nonnull %18) #15
  br i1 %26, label %27, label %554

27:                                               ; preds = %25
  %28 = bitcast %"class.blink::AXObject"* %18 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %29 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %29, i64 124
  %31 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %30, align 8
  %32 = tail call %"class.blink::Node"* %31(%"class.blink::AXObject"* nonnull %18) #15
  %33 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %9, align 8
  %34 = icmp eq %"class.blink::Node"* %32, null
  br i1 %34, label %554, label %35

35:                                               ; preds = %27
  %36 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %32) #15
  %37 = icmp eq %"class.blink::ContainerNode"* %36, null
  br i1 %37, label %554, label %38

38:                                               ; preds = %35, %45
  %39 = phi %"class.blink::ContainerNode"* [ %46, %45 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %39, i64 0, i32 0
  %41 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %33, %"class.blink::Node"* %40) #15
  %42 = icmp eq %"class.blink::AXObject"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %41) #15
  switch i32 %44, label %48 [
    i32 94, label %45
    i32 89, label %45
    i32 147, label %45
  ]

45:                                               ; preds = %43, %43, %43, %38
  %46 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %40) #15
  %47 = icmp eq %"class.blink::ContainerNode"* %46, null
  br i1 %47, label %554, label %38

48:                                               ; preds = %43
  %49 = tail call zeroext i1 @_ZNK5blink8AXObject15IsTableLikeRoleEv(%"class.blink::AXObject"* nonnull %41) #15
  br i1 %49, label %50, label %554

50:                                               ; preds = %48
  %51 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %18) #15
  %52 = icmp eq i32 %51, 108
  br i1 %52, label %554, label %53

53:                                               ; preds = %50
  %54 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %4) #15
  %55 = icmp eq %"class.blink::Element"* %54, null
  br i1 %55, label %554, label %56

56:                                               ; preds = %53
  %57 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #15
  br i1 %57, label %554, label %58

58:                                               ; preds = %56
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %60 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %61 = icmp eq %"class.blink::Node"* %59, null
  br i1 %61, label %554, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 48
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %554

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %60, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 1, i32 2
  %71 = bitcast %"class.blink::Member.318"* %70 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %74, %76
  br i1 %77, label %78, label %554

78:                                               ; preds = %67
  %79 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kScopeAttrE, align 8
  %80 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)***
  %81 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %81, i64 131
  %83 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %82, align 8
  %84 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %83(%"class.blink::AXNodeObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %79) #15
  %85 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %169, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 1
  %92 = bitcast %"class.WTF::StringImpl"* %91 to i8*
  %93 = icmp eq i32 %90, 3
  br i1 %93, label %94, label %167

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %118, label %99

99:                                               ; preds = %94
  %100 = load i8, i8* %92, align 1
  %101 = zext i8 %100 to i64
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %106 = sext i8 %105 to i32
  %107 = icmp eq i32 %104, %106
  br i1 %107, label %108, label %167

108:                                              ; preds = %99
  %109 = getelementptr inbounds i8, i8* %92, i64 1
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i64
  %112 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %116 = sext i8 %115 to i32
  %117 = icmp eq i32 %114, %116
  br i1 %117, label %156, label %167

118:                                              ; preds = %94
  %119 = bitcast %"class.WTF::StringImpl"* %91 to i16*
  %120 = load i16, i16* %119, align 2
  %121 = add i16 %120, -65
  %122 = icmp ult i16 %121, 26
  %123 = zext i1 %122 to i16
  %124 = shl nuw nsw i16 %123, 5
  %125 = or i16 %124, %120
  %126 = zext i16 %125 to i32
  %127 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %128 = sext i8 %127 to i32
  %129 = icmp eq i32 %126, %128
  br i1 %129, label %130, label %167

130:                                              ; preds = %118
  %131 = getelementptr inbounds i16, i16* %119, i64 1
  %132 = load i16, i16* %131, align 2
  %133 = add i16 %132, -65
  %134 = icmp ult i16 %133, 26
  %135 = zext i1 %134 to i16
  %136 = shl nuw nsw i16 %135, 5
  %137 = or i16 %136, %132
  %138 = zext i16 %137 to i32
  %139 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %140 = sext i8 %139 to i32
  %141 = icmp eq i32 %138, %140
  br i1 %141, label %142, label %167

142:                                              ; preds = %130
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 1, i32 1
  %144 = bitcast i32* %143 to i16*
  %145 = load i16, i16* %144, align 2
  %146 = add i16 %145, -65
  %147 = icmp ult i16 %146, 26
  %148 = zext i1 %147 to i16
  %149 = shl nuw nsw i16 %148, 5
  %150 = or i16 %149, %145
  %151 = zext i16 %150 to i32
  %152 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 119), align 1
  %153 = sext i8 %152 to i32
  %154 = icmp eq i32 %151, %153
  %155 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #15
  br i1 %154, label %187, label %174

156:                                              ; preds = %108
  %157 = getelementptr inbounds i8, i8* %92, i64 2
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i64
  %160 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %159
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 119), align 1
  %164 = sext i8 %163 to i32
  %165 = icmp eq i32 %162, %164
  %166 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #15
  br i1 %165, label %187, label %174

167:                                              ; preds = %108, %99, %130, %118, %88
  %168 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #15
  br label %174

169:                                              ; preds = %78
  %170 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #15
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %171, align 8
  %172 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %173 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %172, i64* %173, align 8
  br label %182

174:                                              ; preds = %156, %142, %167
  %175 = phi i8* [ %168, %167 ], [ %155, %142 ], [ %166, %156 ]
  %176 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %176, align 8
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 1
  %180 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %181 = bitcast i8** %180 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %181, align 8
  br label %182

182:                                              ; preds = %169, %174
  %183 = phi i8* [ %175, %174 ], [ %170, %169 ]
  %184 = phi i32 [ %178, %174 ], [ 0, %169 ]
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %184, i32* %185, align 8
  %186 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [9 x i8]* nonnull dereferenceable(9) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #15
  br i1 %186, label %554, label %189

187:                                              ; preds = %142, %156
  %188 = phi i8* [ %155, %142 ], [ %166, %156 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #15
  br label %554

189:                                              ; preds = %182
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %273, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 1
  %196 = bitcast %"class.WTF::StringImpl"* %195 to i8*
  %197 = icmp eq i32 %194, 3
  br i1 %197, label %198, label %271

198:                                              ; preds = %192
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 1
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %222, label %203

203:                                              ; preds = %198
  %204 = load i8, i8* %196, align 1
  %205 = zext i8 %204 to i64
  %206 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 99), align 1
  %210 = sext i8 %209 to i32
  %211 = icmp eq i32 %208, %210
  br i1 %211, label %212, label %271

212:                                              ; preds = %203
  %213 = getelementptr inbounds i8, i8* %196, i64 1
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i64
  %216 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %218, %220
  br i1 %221, label %260, label %271

222:                                              ; preds = %198
  %223 = bitcast %"class.WTF::StringImpl"* %195 to i16*
  %224 = load i16, i16* %223, align 2
  %225 = add i16 %224, -65
  %226 = icmp ult i16 %225, 26
  %227 = zext i1 %226 to i16
  %228 = shl nuw nsw i16 %227, 5
  %229 = or i16 %228, %224
  %230 = zext i16 %229 to i32
  %231 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 99), align 1
  %232 = sext i8 %231 to i32
  %233 = icmp eq i32 %230, %232
  br i1 %233, label %234, label %271

234:                                              ; preds = %222
  %235 = getelementptr inbounds i16, i16* %223, i64 1
  %236 = load i16, i16* %235, align 2
  %237 = add i16 %236, -65
  %238 = icmp ult i16 %237, 26
  %239 = zext i1 %238 to i16
  %240 = shl nuw nsw i16 %239, 5
  %241 = or i16 %240, %236
  %242 = zext i16 %241 to i32
  %243 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %244 = sext i8 %243 to i32
  %245 = icmp eq i32 %242, %244
  br i1 %245, label %246, label %271

246:                                              ; preds = %234
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 1, i32 1
  %248 = bitcast i32* %247 to i16*
  %249 = load i16, i16* %248, align 2
  %250 = add i16 %249, -65
  %251 = icmp ult i16 %250, 26
  %252 = zext i1 %251 to i16
  %253 = shl nuw nsw i16 %252, 5
  %254 = or i16 %253, %249
  %255 = zext i16 %254 to i32
  %256 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %255, %257
  %259 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %259) #15
  br i1 %258, label %291, label %278

260:                                              ; preds = %212
  %261 = getelementptr inbounds i8, i8* %196, i64 2
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i64
  %264 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %263
  %265 = load i8, i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %268 = sext i8 %267 to i32
  %269 = icmp eq i32 %266, %268
  %270 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %270) #15
  br i1 %269, label %291, label %278

271:                                              ; preds = %212, %203, %234, %222, %192
  %272 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %272) #15
  br label %278

273:                                              ; preds = %189
  %274 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %274) #15
  %275 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %275, align 8
  %276 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %277 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %276, i64* %277, align 8
  br label %286

278:                                              ; preds = %260, %246, %271
  %279 = phi i8* [ %272, %271 ], [ %259, %246 ], [ %270, %260 ]
  %280 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %190, %"class.WTF::StringImpl"** %280, align 8
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 1
  %284 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %285 = bitcast i8** %284 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %283, %"class.WTF::StringImpl"** %285, align 8
  br label %286

286:                                              ; preds = %273, %278
  %287 = phi i8* [ %279, %278 ], [ %274, %273 ]
  %288 = phi i32 [ %282, %278 ], [ 0, %273 ]
  %289 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %288, i32* %289, align 8
  %290 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [9 x i8]* nonnull dereferenceable(9) @.str.3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %287) #15
  br i1 %290, label %554, label %293

291:                                              ; preds = %246, %260
  %292 = phi i8* [ %259, %246 ], [ %270, %260 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %292) #15
  br label %554

293:                                              ; preds = %286
  %294 = call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %4) #15
  %295 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %294, i64 0, i32 0, i32 0
  %296 = call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal11NextSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %295) #15
  %297 = call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal15PreviousSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %295) #15
  %298 = icmp ne %"class.blink::Node"* %296, null
  %299 = icmp ne %"class.blink::Node"* %297, null
  %300 = or i1 %298, %299
  br i1 %300, label %301, label %554

301:                                              ; preds = %293
  %302 = icmp eq %"class.blink::Node"* %296, null
  br i1 %302, label %353, label %303

303:                                              ; preds = %301
  %304 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %296, i64 0, i32 1
  %305 = load i32, i32* %304, align 8
  %306 = and i32 %305, 48
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %332

308:                                              ; preds = %303
  %309 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %310 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %296, i64 1, i32 2
  %311 = bitcast %"class.blink::Member.318"* %310 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %312 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %311, align 8
  %313 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %312, i64 0, i32 3, i32 0, i32 0, i32 0
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %313, align 8
  %315 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %309, i64 0, i32 3, i32 0, i32 0, i32 0
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %315, align 8
  %317 = icmp ne %"class.WTF::StringImpl"* %314, %316
  %318 = icmp eq %"class.blink::Node"* %297, null
  %319 = or i1 %318, %317
  br i1 %319, label %332, label %320

320:                                              ; preds = %308
  %321 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %297, i64 0, i32 1
  %322 = load i32, i32* %321, align 8
  %323 = and i32 %322, 48
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %332

325:                                              ; preds = %320
  %326 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %297, i64 1, i32 2
  %327 = bitcast %"class.blink::Member.318"* %326 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %328 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %327, align 8
  %329 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %328, i64 0, i32 3, i32 0, i32 0, i32 0
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, %314
  br i1 %331, label %554, label %332

332:                                              ; preds = %325, %320, %308, %303
  %333 = and i32 %305, 2
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %353, label %335

335:                                              ; preds = %332
  %336 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %296, i64 1
  %337 = bitcast %"class.blink::Node"* %336 to %"class.blink::Node"**
  %338 = load %"class.blink::Node"*, %"class.blink::Node"** %337, align 8
  %339 = icmp ne %"class.blink::Node"* %338, null
  %340 = and i1 %307, %339
  br i1 %340, label %341, label %353

341:                                              ; preds = %335
  %342 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %343 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %342, i64 0, i32 0, i32 0, i32 0
  %344 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %296, i64 1, i32 2
  %346 = bitcast %"class.blink::Member.318"* %345 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %347 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %346, align 8
  %348 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %347, i64 0, i32 3, i32 0, i32 0, i32 0
  %349 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %348, align 8
  %350 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %344, i64 0, i32 3, i32 0, i32 0, i32 0
  %351 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %350, align 8
  %352 = icmp eq %"class.WTF::StringImpl"* %349, %351
  br i1 %352, label %554, label %353

353:                                              ; preds = %341, %335, %332, %301
  %354 = icmp eq %"class.blink::Node"* %297, null
  br i1 %354, label %380, label %355

355:                                              ; preds = %353
  %356 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %297, i64 0, i32 1
  %357 = load i32, i32* %356, align 8
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %380, label %360

360:                                              ; preds = %355
  %361 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %297, i64 1
  %362 = bitcast %"class.blink::Node"* %361 to %"class.blink::Node"**
  %363 = load %"class.blink::Node"*, %"class.blink::Node"** %362, align 8
  %364 = icmp ne %"class.blink::Node"* %363, null
  %365 = and i32 %357, 48
  %366 = icmp eq i32 %365, 0
  %367 = and i1 %366, %364
  br i1 %367, label %368, label %380

368:                                              ; preds = %360
  %369 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %370 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %369, i64 0, i32 0, i32 0, i32 0
  %371 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %370, align 8
  %372 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %297, i64 1, i32 2
  %373 = bitcast %"class.blink::Member.318"* %372 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %374 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %373, align 8
  %375 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %374, i64 0, i32 3, i32 0, i32 0, i32 0
  %376 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %377 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %371, i64 0, i32 3, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  %379 = icmp eq %"class.WTF::StringImpl"* %376, %378
  br i1 %379, label %554, label %380

380:                                              ; preds = %368, %360, %355, %353
  %381 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %295) #15
  %382 = icmp eq %"class.blink::ContainerNode"* %381, null
  br i1 %382, label %554, label %383

383:                                              ; preds = %380
  %384 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %381, i64 0, i32 0, i32 1
  %385 = load i32, i32* %384, align 8
  %386 = and i32 %385, 48
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %554

388:                                              ; preds = %383
  %389 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %381, i64 0, i32 0
  %390 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %391 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %390, i64 0, i32 0, i32 0, i32 0
  %392 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %391, align 8
  %393 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %389, i64 1, i32 2
  %394 = bitcast %"class.blink::Member.318"* %393 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %395 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %394, align 8
  %396 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %395, i64 0, i32 3, i32 0, i32 0, i32 0
  %397 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %396, align 8
  %398 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %392, i64 0, i32 3, i32 0, i32 0, i32 0
  %399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %398, align 8
  %400 = icmp eq %"class.WTF::StringImpl"* %397, %399
  br i1 %400, label %401, label %554

401:                                              ; preds = %388
  %402 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %381, i64 0, i32 1, i32 0, i32 0
  %403 = load %"class.blink::Node"*, %"class.blink::Node"** %402, align 8
  %404 = icmp eq %"class.blink::Node"* %403, null
  br i1 %404, label %415, label %405

405:                                              ; preds = %401, %411
  %406 = phi %"class.blink::Node"* [ %413, %411 ], [ %403, %401 ]
  %407 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %406, i64 0, i32 1
  %408 = load i32, i32* %407, align 8
  %409 = and i32 %408, 12
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %415, label %411

411:                                              ; preds = %405
  %412 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %406, i64 0, i32 5, i32 0, i32 0
  %413 = load %"class.blink::Node"*, %"class.blink::Node"** %412, align 8
  %414 = icmp eq %"class.blink::Node"* %413, null
  br i1 %414, label %415, label %405

415:                                              ; preds = %411, %405, %401
  %416 = phi %"class.blink::Node"* [ null, %401 ], [ null, %411 ], [ %406, %405 ]
  %417 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %381, i64 0, i32 2, i32 0, i32 0
  %418 = load %"class.blink::Node"*, %"class.blink::Node"** %417, align 8
  %419 = icmp eq %"class.blink::Node"* %418, null
  br i1 %419, label %430, label %420

420:                                              ; preds = %415, %426
  %421 = phi %"class.blink::Node"* [ %428, %426 ], [ %418, %415 ]
  %422 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %421, i64 0, i32 1
  %423 = load i32, i32* %422, align 8
  %424 = and i32 %423, 12
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %430, label %426

426:                                              ; preds = %420
  %427 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %421, i64 0, i32 4, i32 0, i32 0
  %428 = load %"class.blink::Node"*, %"class.blink::Node"** %427, align 8
  %429 = icmp eq %"class.blink::Node"* %428, null
  br i1 %429, label %430, label %420

430:                                              ; preds = %426, %420, %415
  %431 = phi %"class.blink::Node"* [ null, %415 ], [ null, %426 ], [ %421, %420 ]
  %432 = icmp eq %"class.blink::Node"* %416, null
  br i1 %432, label %458, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %416, i64 0, i32 1
  %435 = load i32, i32* %434, align 8
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %458, label %438

438:                                              ; preds = %433
  %439 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %416, i64 1
  %440 = bitcast %"class.blink::Node"* %439 to %"class.blink::Node"**
  %441 = load %"class.blink::Node"*, %"class.blink::Node"** %440, align 8
  %442 = icmp ne %"class.blink::Node"* %441, null
  %443 = and i32 %435, 48
  %444 = icmp eq i32 %443, 0
  %445 = and i1 %444, %442
  br i1 %445, label %446, label %458

446:                                              ; preds = %438
  %447 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %448 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %448, align 8
  %450 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %416, i64 1, i32 2
  %451 = bitcast %"class.blink::Member.318"* %450 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %452 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %451, align 8
  %453 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %452, i64 0, i32 3, i32 0, i32 0, i32 0
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %453, align 8
  %455 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %449, i64 0, i32 3, i32 0, i32 0, i32 0
  %456 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %455, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %454, %456
  br i1 %457, label %554, label %458

458:                                              ; preds = %446, %438, %433, %430
  %459 = icmp eq %"class.blink::Node"* %431, null
  br i1 %459, label %485, label %460

460:                                              ; preds = %458
  %461 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %431, i64 0, i32 1
  %462 = load i32, i32* %461, align 8
  %463 = and i32 %462, 2
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %485, label %465

465:                                              ; preds = %460
  %466 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %431, i64 1
  %467 = bitcast %"class.blink::Node"* %466 to %"class.blink::Node"**
  %468 = load %"class.blink::Node"*, %"class.blink::Node"** %467, align 8
  %469 = icmp ne %"class.blink::Node"* %468, null
  %470 = and i32 %462, 48
  %471 = icmp eq i32 %470, 0
  %472 = and i1 %471, %469
  br i1 %472, label %473, label %485

473:                                              ; preds = %465
  %474 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %475 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %474, i64 0, i32 0, i32 0, i32 0
  %476 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %475, align 8
  %477 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %431, i64 1, i32 2
  %478 = bitcast %"class.blink::Member.318"* %477 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %479 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %478, align 8
  %480 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %479, i64 0, i32 3, i32 0, i32 0, i32 0
  %481 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %480, align 8
  %482 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %476, i64 0, i32 3, i32 0, i32 0, i32 0
  %483 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %482, align 8
  %484 = icmp eq %"class.WTF::StringImpl"* %481, %483
  br i1 %484, label %554, label %485

485:                                              ; preds = %473, %465, %460, %458
  br label %486

486:                                              ; preds = %485, %491
  %487 = phi %"class.blink::Node"* [ %489, %491 ], [ %416, %485 ]
  %488 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %487, i64 0, i32 5, i32 0, i32 0
  %489 = load %"class.blink::Node"*, %"class.blink::Node"** %488, align 8
  %490 = icmp eq %"class.blink::Node"* %489, null
  br i1 %490, label %519, label %491

491:                                              ; preds = %486
  %492 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %489, i64 0, i32 1
  %493 = load i32, i32* %492, align 8
  %494 = and i32 %493, 12
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %486

496:                                              ; preds = %491
  %497 = and i32 %493, 2
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %519, label %499

499:                                              ; preds = %496
  %500 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %489, i64 1
  %501 = bitcast %"class.blink::Node"* %500 to %"class.blink::Node"**
  %502 = load %"class.blink::Node"*, %"class.blink::Node"** %501, align 8
  %503 = icmp ne %"class.blink::Node"* %502, null
  %504 = and i32 %493, 48
  %505 = icmp eq i32 %504, 0
  %506 = and i1 %505, %503
  br i1 %506, label %507, label %519

507:                                              ; preds = %499
  %508 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %509 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %508, i64 0, i32 0, i32 0, i32 0
  %510 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %509, align 8
  %511 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %489, i64 1, i32 2
  %512 = bitcast %"class.blink::Member.318"* %511 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %513 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %512, align 8
  %514 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %513, i64 0, i32 3, i32 0, i32 0, i32 0
  %515 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %514, align 8
  %516 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %510, i64 0, i32 3, i32 0, i32 0, i32 0
  %517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %516, align 8
  %518 = icmp eq %"class.WTF::StringImpl"* %515, %517
  br i1 %518, label %554, label %519

519:                                              ; preds = %486, %507, %499, %496
  br label %520

520:                                              ; preds = %519, %525
  %521 = phi %"class.blink::Node"* [ %523, %525 ], [ %431, %519 ]
  %522 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %521, i64 0, i32 4, i32 0, i32 0
  %523 = load %"class.blink::Node"*, %"class.blink::Node"** %522, align 8
  %524 = icmp eq %"class.blink::Node"* %523, null
  br i1 %524, label %554, label %525

525:                                              ; preds = %520
  %526 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %523, i64 0, i32 1
  %527 = load i32, i32* %526, align 8
  %528 = and i32 %527, 12
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %520

530:                                              ; preds = %525
  %531 = and i32 %527, 2
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %554, label %533

533:                                              ; preds = %530
  %534 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %523, i64 1
  %535 = bitcast %"class.blink::Node"* %534 to %"class.blink::Node"**
  %536 = load %"class.blink::Node"*, %"class.blink::Node"** %535, align 8
  %537 = icmp ne %"class.blink::Node"* %536, null
  %538 = and i32 %527, 48
  %539 = icmp eq i32 %538, 0
  %540 = and i1 %539, %537
  br i1 %540, label %541, label %554

541:                                              ; preds = %533
  %542 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %543 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %542, i64 0, i32 0, i32 0, i32 0
  %544 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %543, align 8
  %545 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %523, i64 1, i32 2
  %546 = bitcast %"class.blink::Member.318"* %545 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %547 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %546, align 8
  %548 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %547, i64 0, i32 3, i32 0, i32 0, i32 0
  %549 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %548, align 8
  %550 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %544, i64 0, i32 3, i32 0, i32 0, i32 0
  %551 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %550, align 8
  %552 = icmp eq %"class.WTF::StringImpl"* %549, %551
  %553 = select i1 %552, i32 148, i32 20
  br label %554

554:                                              ; preds = %22, %45, %520, %56, %58, %62, %35, %27, %1, %12, %6, %541, %533, %530, %507, %473, %446, %388, %383, %380, %368, %341, %325, %293, %48, %50, %53, %67, %286, %291, %182, %187, %25
  %555 = phi i32 [ 89, %25 ], [ 89, %48 ], [ 107, %50 ], [ 14, %53 ], [ 14, %67 ], [ 148, %187 ], [ 148, %182 ], [ 20, %291 ], [ 20, %286 ], [ %553, %541 ], [ 20, %533 ], [ 20, %530 ], [ 20, %293 ], [ 20, %325 ], [ 148, %368 ], [ 148, %341 ], [ 20, %380 ], [ 20, %388 ], [ 148, %473 ], [ 148, %446 ], [ 148, %507 ], [ 20, %383 ], [ 89, %6 ], [ 89, %12 ], [ 89, %1 ], [ 89, %27 ], [ 89, %35 ], [ 14, %62 ], [ 14, %58 ], [ 14, %56 ], [ 20, %520 ], [ 89, %45 ], [ 89, %22 ]
  ret i32 %555
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject26RoleFromLayoutObjectOrNodeEv(%"class.blink::AXNodeObject"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i32 89
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject22NativeRoleIgnoringAriaEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional.3139", align 8
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %1, %5
  %10 = bitcast %"class.blink::AXNodeObject"* %0 to i32 (%"class.blink::AXNodeObject"*)***
  %11 = load i32 (%"class.blink::AXNodeObject"*)**, i32 (%"class.blink::AXNodeObject"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %11, i64 162
  %13 = load i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::AXNodeObject"* %0) #15
  br label %1774

15:                                               ; preds = %5
  %16 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %19 = bitcast %"class.blink::Node"* %18 to i8 (%"class.blink::Node"*)***
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i8 (%"class.blink::Node"*)*** [ %19, %17 ], [ null, %15 ]
  %22 = phi %"class.blink::Node"* [ %18, %17 ], [ null, %15 ]
  %23 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %21, align 8
  %24 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %23, i64 34
  %25 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %24, align 8
  %26 = tail call zeroext i8 %25(%"class.blink::Node"* %22) #15
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %57, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #15
  %30 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  br label %33

33:                                               ; preds = %31, %28
  %34 = phi %"class.blink::Node"* [ %32, %31 ], [ null, %28 ]
  call void @_ZN5blink12AXNodeObject13GetCSSAltTextEPKNS_4NodeE(%"class.absl::optional.3139"* nonnull sret %2, %"class.blink::Node"* %34)
  %35 = load i8, i8* %29, align 8, !range !2
  %36 = icmp ne i8 %35, 0
  %37 = icmp eq i8 %35, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.absl::optional.3139", %"class.absl::optional.3139"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #15
  br label %55

55:                                               ; preds = %54, %51, %38
  store i8 0, i8* %29, align 8
  br label %56

56:                                               ; preds = %33, %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #15
  br label %57

57:                                               ; preds = %20, %56
  %58 = phi i1 [ %36, %56 ], [ false, %20 ]
  %59 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  br label %62

62:                                               ; preds = %57, %60
  %63 = phi %"class.blink::Node"* [ %61, %60 ], [ null, %57 ]
  %64 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 12
  br i1 %58, label %67, label %113

67:                                               ; preds = %62
  %68 = icmp eq i32 %66, 0
  %69 = and i32 %65, 1
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %63, i64 0, i32 6, i32 0, i32 0
  br i1 %68, label %72, label %83

72:                                               ; preds = %67
  br i1 %70, label %79, label %73

73:                                               ; preds = %72
  %74 = bitcast %"class.blink::NodeData"** %71 to %"class.blink::NodeRareData"**
  %75 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %75, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %77, i64 0, i32 2, i32 0
  br label %98

79:                                               ; preds = %72
  %80 = bitcast %"class.blink::NodeData"** %71 to %"class.blink::NodeRenderingData"**
  %81 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %81, i64 0, i32 2, i32 0
  br label %98

83:                                               ; preds = %67
  br i1 %70, label %88, label %84

84:                                               ; preds = %83
  %85 = bitcast %"class.blink::NodeData"** %71 to %"class.blink::NodeRareData"**
  %86 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %86, i64 0, i32 1, i32 0, i32 0
  br label %90

88:                                               ; preds = %83
  %89 = bitcast %"class.blink::NodeData"** %71 to %"class.blink::NodeRenderingData"**
  br label %90

90:                                               ; preds = %88, %84
  %91 = phi %"class.blink::NodeRenderingData"** [ %87, %84 ], [ %89, %88 ]
  %92 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %92, i64 0, i32 1
  %94 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %93, align 8
  %95 = icmp eq %"class.blink::LayoutObject"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 0, i32 5, i32 0
  br label %98

98:                                               ; preds = %96, %79, %73
  %99 = phi %"class.blink::ComputedStyle"** [ %78, %73 ], [ %82, %79 ], [ %97, %96 ]
  %100 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %99, align 8
  br label %101

101:                                              ; preds = %98, %90
  %102 = phi %"class.blink::ComputedStyle"* [ null, %90 ], [ %100, %98 ]
  %103 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %102, i64 0, i32 0, i32 3, i32 0, i32 0
  %104 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %104, i64 0, i32 6, i32 0, i32 0
  %106 = load %"class.blink::ContentData"*, %"class.blink::ContentData"** %105, align 8
  %107 = bitcast %"class.blink::ContentData"* %106 to i1 (%"class.blink::ContentData"*)***
  %108 = load i1 (%"class.blink::ContentData"*)**, i1 (%"class.blink::ContentData"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %108, i64 3
  %110 = load i1 (%"class.blink::ContentData"*)*, i1 (%"class.blink::ContentData"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.blink::ContentData"* %106) #15
  %112 = select i1 %111, i32 100, i32 159
  br label %1774

113:                                              ; preds = %62
  %114 = icmp eq i32 %66, 4
  br i1 %114, label %1774, label %115

115:                                              ; preds = %113
  %116 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %116, label %137, label %117

117:                                              ; preds = %115
  %118 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %119 = icmp eq %"class.blink::Node"* %118, null
  br i1 %119, label %137, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %118, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = and i32 %122, 48
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %137

125:                                              ; preds = %120
  %126 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %127 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %126, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %118, i64 1, i32 2
  %130 = bitcast %"class.blink::Member.318"* %129 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %131 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %131, i64 0, i32 3, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %128, i64 0, i32 3, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %133, %135
  br i1 %136, label %1774, label %137

137:                                              ; preds = %115, %120, %117, %125
  %138 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %138, label %141, label %139

139:                                              ; preds = %137
  %140 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  br label %141

141:                                              ; preds = %137, %139
  %142 = phi %"class.blink::Node"* [ %140, %139 ], [ null, %137 ]
  %143 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %142, i64 0, i32 1
  %144 = load i32, i32* %143, align 8
  %145 = and i32 %144, 64
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %1774

147:                                              ; preds = %141
  %148 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %148, label %164, label %149

149:                                              ; preds = %147
  %150 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %151 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %150, i64 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = and i32 %152, 48
  %154 = icmp ne i32 %153, 0
  %155 = icmp eq %"class.blink::Node"* %150, null
  %156 = or i1 %155, %154
  br i1 %156, label %164, label %157

157:                                              ; preds = %149
  %158 = bitcast %"class.blink::Node"* %150 to %"class.blink::HTMLElement"*
  %159 = bitcast %"class.blink::Node"* %150 to i1 (%"class.blink::HTMLElement"*)***
  %160 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %159, align 8
  %161 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %160, i64 163
  %162 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %161, align 8
  %163 = tail call zeroext i1 %162(%"class.blink::HTMLElement"* nonnull %158) #15
  br i1 %163, label %1774, label %164

164:                                              ; preds = %147, %149, %157
  %165 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %165, label %189, label %166

166:                                              ; preds = %164
  %167 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %168 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %167, i64 0, i32 1
  %169 = load i32, i32* %168, align 8
  %170 = and i32 %169, 48
  %171 = icmp ne i32 %170, 0
  %172 = icmp eq %"class.blink::Node"* %167, null
  %173 = or i1 %172, %171
  br i1 %173, label %189, label %174

174:                                              ; preds = %166
  %175 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %176 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %175, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %167, i64 1, i32 2
  %179 = bitcast %"class.blink::Member.318"* %178 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %180 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %180, i64 0, i32 3, i32 0, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %177, i64 0, i32 3, i32 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %182, %184
  br i1 %185, label %186, label %189

186:                                              ; preds = %174
  %187 = tail call zeroext i1 @_ZNK5blink12AXNodeObject11IsClickableEv(%"class.blink::AXNodeObject"* %0)
  %188 = select i1 %187, i32 111, i32 4
  br label %1774

189:                                              ; preds = %164, %166, %174
  %190 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %190, label %213, label %191

191:                                              ; preds = %189
  %192 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %193 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 0, i32 1
  %194 = load i32, i32* %193, align 8
  %195 = and i32 %194, 48
  %196 = icmp ne i32 %195, 0
  %197 = icmp eq %"class.blink::Node"* %192, null
  %198 = or i1 %197, %196
  br i1 %198, label %213, label %199

199:                                              ; preds = %191
  %200 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kButtonTagE, align 8
  %201 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %200, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %201, align 8
  %203 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 1, i32 2
  %204 = bitcast %"class.blink::Member.318"* %203 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %205 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %205, i64 0, i32 3, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %202, i64 0, i32 3, i32 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %207, %209
  br i1 %210, label %211, label %213

211:                                              ; preds = %199
  %212 = tail call i32 @_ZNK5blink8AXObject14ButtonRoleTypeEv(%"class.blink::AXObject"* %3) #15
  br label %1774

213:                                              ; preds = %189, %191, %199
  %214 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %214, label %235, label %215

215:                                              ; preds = %213
  %216 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %217 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %216, i64 0, i32 1
  %218 = load i32, i32* %217, align 8
  %219 = and i32 %218, 48
  %220 = icmp ne i32 %219, 0
  %221 = icmp eq %"class.blink::Node"* %216, null
  %222 = or i1 %221, %220
  br i1 %222, label %235, label %223

223:                                              ; preds = %215
  %224 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kDetailsTagE, align 8
  %225 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %224, i64 0, i32 0, i32 0, i32 0
  %226 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %216, i64 1, i32 2
  %228 = bitcast %"class.blink::Member.318"* %227 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %229 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %228, align 8
  %230 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %229, i64 0, i32 3, i32 0, i32 0, i32 0
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %232 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %226, i64 0, i32 3, i32 0, i32 0, i32 0
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %231, %233
  br i1 %234, label %1774, label %235

235:                                              ; preds = %213, %215, %223
  %236 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %236, label %257, label %237

237:                                              ; preds = %235
  %238 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %239 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %238, i64 0, i32 1
  %240 = load i32, i32* %239, align 8
  %241 = and i32 %240, 48
  %242 = icmp ne i32 %241, 0
  %243 = icmp eq %"class.blink::Node"* %238, null
  %244 = or i1 %243, %242
  br i1 %244, label %257, label %245

245:                                              ; preds = %237
  %246 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSummaryTagE, align 8
  %247 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %246, i64 0, i32 0, i32 0, i32 0
  %248 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %238, i64 1, i32 2
  %250 = bitcast %"class.blink::Member.318"* %249 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %251 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %250, align 8
  %252 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %251, i64 0, i32 3, i32 0, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %248, i64 0, i32 3, i32 0, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %253, %255
  br label %257

257:                                              ; preds = %235, %237, %245
  %258 = phi i1 [ false, %237 ], [ %256, %245 ], [ false, %235 ]
  %259 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %259, label %262, label %260

260:                                              ; preds = %257
  %261 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  br label %262

262:                                              ; preds = %257, %260
  %263 = phi %"class.blink::Node"* [ %261, %260 ], [ null, %257 ]
  br i1 %258, label %264, label %310

264:                                              ; preds = %262
  %265 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %263) #15
  %266 = icmp eq %"class.blink::ContainerNode"* %265, null
  br i1 %266, label %309, label %267

267:                                              ; preds = %264
  %268 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %265, i64 0, i32 0, i32 1
  %269 = load i32, i32* %268, align 8
  %270 = and i32 %269, 48
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %291

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %265, i64 0, i32 0
  %274 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %275 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %274, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %275, align 8
  %277 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %273, i64 1, i32 2
  %278 = bitcast %"class.blink::Member.318"* %277 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %279 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %278, align 8
  %280 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %279, i64 0, i32 3, i32 0, i32 0, i32 0
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %280, align 8
  %282 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %276, i64 0, i32 3, i32 0, i32 0, i32 0
  %283 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %282, align 8
  %284 = icmp eq %"class.WTF::StringImpl"* %281, %283
  br i1 %284, label %285, label %291

285:                                              ; preds = %272
  %286 = tail call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %273) #15
  %287 = icmp eq %"class.blink::ContainerNode"* %286, null
  br i1 %287, label %309, label %288

288:                                              ; preds = %285
  %289 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %286, i64 0, i32 0, i32 1
  %290 = load i32, i32* %289, align 8
  br label %291

291:                                              ; preds = %288, %267, %272
  %292 = phi i32 [ %290, %288 ], [ %269, %272 ], [ %269, %267 ]
  %293 = phi %"class.blink::ContainerNode"* [ %286, %288 ], [ %265, %272 ], [ %265, %267 ]
  %294 = and i32 %292, 48
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %309

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %293, i64 0, i32 0
  %298 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kDetailsTagE, align 8
  %299 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %298, i64 0, i32 0, i32 0, i32 0
  %300 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %299, align 8
  %301 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %297, i64 1, i32 2
  %302 = bitcast %"class.blink::Member.318"* %301 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %303 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %302, align 8
  %304 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %303, i64 0, i32 3, i32 0, i32 0, i32 0
  %305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %304, align 8
  %306 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %300, i64 0, i32 3, i32 0, i32 0, i32 0
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %305, %307
  br i1 %308, label %1774, label %309

309:                                              ; preds = %264, %291, %285, %296
  br label %1774

310:                                              ; preds = %262
  %311 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %263, i64 0, i32 1
  %312 = load i32, i32* %311, align 8
  %313 = and i32 %312, 48
  %314 = icmp ne i32 %313, 0
  %315 = icmp eq %"class.blink::Node"* %263, null
  %316 = or i1 %315, %314
  br i1 %316, label %336, label %317

317:                                              ; preds = %310
  %318 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %319 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %318, i64 0, i32 0, i32 0, i32 0
  %320 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %319, align 8
  %321 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %263, i64 1, i32 2
  %322 = bitcast %"class.blink::Member.318"* %321 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %323 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %323, i64 0, i32 3, i32 0, i32 0, i32 0
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %324, align 8
  %326 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %320, i64 0, i32 3, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  %328 = icmp eq %"class.WTF::StringImpl"* %325, %327
  br i1 %328, label %329, label %336

329:                                              ; preds = %317
  %330 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %331 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %330, align 8
  %332 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %331, i64 132
  %333 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %332, align 8
  %334 = tail call zeroext i1 %333(%"class.blink::AXObject"* %3) #15
  %335 = select i1 %334, i32 168, i32 106
  br label %1774

336:                                              ; preds = %310, %317
  %337 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %337, label %360, label %338

338:                                              ; preds = %336
  %339 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %340 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %339, i64 0, i32 1
  %341 = load i32, i32* %340, align 8
  %342 = and i32 %341, 48
  %343 = icmp ne i32 %342, 0
  %344 = icmp eq %"class.blink::Node"* %339, null
  %345 = or i1 %344, %343
  br i1 %345, label %360, label %346

346:                                              ; preds = %338
  %347 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE, align 8
  %348 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %347, i64 0, i32 0, i32 0, i32 0
  %349 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %348, align 8
  %350 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %339, i64 1, i32 2
  %351 = bitcast %"class.blink::Member.318"* %350 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %352 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %351, align 8
  %353 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %352, i64 0, i32 3, i32 0, i32 0, i32 0
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %353, align 8
  %355 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %349, i64 0, i32 3, i32 0, i32 0, i32 0
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %355, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %354, %356
  br i1 %357, label %358, label %360

358:                                              ; preds = %346
  %359 = tail call i32 @_ZNK5blink12AXNodeObject21DetermineTableRowRoleEv(%"class.blink::AXNodeObject"* %0)
  br label %1774

360:                                              ; preds = %336, %338, %346
  %361 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %361, label %391, label %362

362:                                              ; preds = %360
  %363 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %364 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %363, i64 0, i32 1
  %365 = load i32, i32* %364, align 8
  %366 = and i32 %365, 48
  %367 = icmp ne i32 %366, 0
  %368 = icmp eq %"class.blink::Node"* %363, null
  %369 = or i1 %368, %367
  br i1 %369, label %391, label %370

370:                                              ; preds = %362
  %371 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %372 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %371, i64 0, i32 0, i32 0, i32 0
  %373 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %372, align 8
  %374 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %363, i64 1, i32 2
  %375 = bitcast %"class.blink::Member.318"* %374 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %376 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %375, align 8
  %377 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %376, i64 0, i32 3, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  %379 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %373, i64 0, i32 3, i32 0, i32 0, i32 0
  %380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %379, align 8
  %381 = icmp eq %"class.WTF::StringImpl"* %378, %380
  br i1 %381, label %389, label %382

382:                                              ; preds = %370
  %383 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE, align 8
  %384 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %383, i64 0, i32 0, i32 0, i32 0
  %385 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %384, align 8
  %386 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %385, i64 0, i32 3, i32 0, i32 0, i32 0
  %387 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %386, align 8
  %388 = icmp eq %"class.WTF::StringImpl"* %378, %387
  br i1 %388, label %389, label %391

389:                                              ; preds = %370, %382
  %390 = tail call i32 @_ZNK5blink12AXNodeObject22DetermineTableCellRoleEv(%"class.blink::AXNodeObject"* %0)
  br label %1774

391:                                              ; preds = %360, %362, %382
  %392 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %392, label %429, label %393

393:                                              ; preds = %391
  %394 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %395 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %394, i64 0, i32 1
  %396 = load i32, i32* %395, align 8
  %397 = and i32 %396, 48
  %398 = icmp ne i32 %397, 0
  %399 = icmp eq %"class.blink::Node"* %394, null
  %400 = or i1 %399, %398
  br i1 %400, label %429, label %401

401:                                              ; preds = %393
  %402 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE, align 8
  %403 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %402, i64 0, i32 0, i32 0, i32 0
  %404 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %403, align 8
  %405 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %394, i64 1, i32 2
  %406 = bitcast %"class.blink::Member.318"* %405 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %407 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %406, align 8
  %408 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %407, i64 0, i32 3, i32 0, i32 0, i32 0
  %409 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %408, align 8
  %410 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %404, i64 0, i32 3, i32 0, i32 0, i32 0
  %411 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %410, align 8
  %412 = icmp eq %"class.WTF::StringImpl"* %409, %411
  br i1 %412, label %427, label %413

413:                                              ; preds = %401
  %414 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE, align 8
  %415 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %414, i64 0, i32 0, i32 0, i32 0
  %416 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %415, align 8
  %417 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %416, i64 0, i32 3, i32 0, i32 0, i32 0
  %418 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %417, align 8
  %419 = icmp eq %"class.WTF::StringImpl"* %409, %418
  br i1 %419, label %427, label %420

420:                                              ; preds = %413
  %421 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE, align 8
  %422 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %421, i64 0, i32 0, i32 0, i32 0
  %423 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %422, align 8
  %424 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %423, i64 0, i32 3, i32 0, i32 0, i32 0
  %425 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %424, align 8
  %426 = icmp eq %"class.WTF::StringImpl"* %409, %425
  br i1 %426, label %427, label %429

427:                                              ; preds = %401, %413, %420
  %428 = tail call i32 @_ZNK5blink12AXNodeObject25DetermineTableSectionRoleEv(%"class.blink::AXNodeObject"* %0)
  br label %1774

429:                                              ; preds = %391, %393, %420
  %430 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %430, label %569, label %431

431:                                              ; preds = %429
  %432 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %433 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %432, i64 0, i32 1
  %434 = load i32, i32* %433, align 8
  %435 = and i32 %434, 48
  %436 = icmp ne i32 %435, 0
  %437 = icmp eq %"class.blink::Node"* %432, null
  %438 = or i1 %437, %436
  br i1 %438, label %569, label %439

439:                                              ; preds = %431
  %440 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %441 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %440, i64 0, i32 0, i32 0, i32 0
  %442 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %441, align 8
  %443 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %432, i64 1, i32 2
  %444 = bitcast %"class.blink::Member.318"* %443 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %445 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %444, align 8
  %446 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %445, i64 0, i32 3, i32 0, i32 0, i32 0
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  %448 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %442, i64 0, i32 3, i32 0, i32 0, i32 0
  %449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %448, align 8
  %450 = icmp eq %"class.WTF::StringImpl"* %447, %449
  %451 = bitcast %"class.blink::Node"* %432 to %"class.blink::HTMLInputElement"*
  br i1 %450, label %452, label %569

452:                                              ; preds = %439
  %453 = bitcast %"class.blink::Node"* %432 to %"class.blink::HTMLFormControlElement"*
  %454 = bitcast %"class.blink::Node"* %432 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %455 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %454, align 8
  %456 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %455, i64 171
  %457 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %456, align 8
  %458 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %457(%"class.blink::HTMLFormControlElement"* %453) #15
  %459 = tail call %"class.blink::HTMLDataListElement"* @_ZNK5blink16HTMLInputElement8DataListEv(%"class.blink::HTMLInputElement"* nonnull %451) #15
  %460 = icmp eq %"class.blink::HTMLDataListElement"* %459, null
  br i1 %460, label %461, label %464

461:                                              ; preds = %452
  %462 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %458, i64 0, i32 0, i32 0, i32 0
  %463 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %462, align 8
  br label %471

464:                                              ; preds = %452
  %465 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kColorE, align 8
  %466 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %458, i64 0, i32 0, i32 0, i32 0
  %467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %466, align 8
  %468 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %465, i64 0, i32 0, i32 0, i32 0
  %469 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %468, align 8
  %470 = icmp eq %"class.WTF::StringImpl"* %467, %469
  br i1 %470, label %471, label %1774

471:                                              ; preds = %461, %464
  %472 = phi %"class.WTF::StringImpl"* [ %463, %461 ], [ %467, %464 ]
  %473 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kButtonE, align 8
  %474 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %458, i64 0, i32 0, i32 0, i32 0
  %475 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %473, i64 0, i32 0, i32 0, i32 0
  %476 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %475, align 8
  %477 = icmp eq %"class.WTF::StringImpl"* %472, %476
  br i1 %477, label %478, label %480

478:                                              ; preds = %471
  %479 = tail call i32 @_ZNK5blink8AXObject14ButtonRoleTypeEv(%"class.blink::AXObject"* %3) #15
  br label %1774

480:                                              ; preds = %471
  %481 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kCheckboxE, align 8
  %482 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %481, i64 0, i32 0, i32 0, i32 0
  %483 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %482, align 8
  %484 = icmp eq %"class.WTF::StringImpl"* %472, %483
  br i1 %484, label %1774, label %485

485:                                              ; preds = %480
  %486 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kDateE, align 8
  %487 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %486, i64 0, i32 0, i32 0, i32 0
  %488 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %487, align 8
  %489 = icmp eq %"class.WTF::StringImpl"* %472, %488
  br i1 %489, label %1774, label %490

490:                                              ; preds = %485
  %491 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kDatetimeE, align 8
  %492 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %491, i64 0, i32 0, i32 0, i32 0
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %492, align 8
  %494 = icmp eq %"class.WTF::StringImpl"* %472, %493
  br i1 %494, label %1774, label %495

495:                                              ; preds = %490
  %496 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names14kDatetimeLocalE, align 8
  %497 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %496, i64 0, i32 0, i32 0, i32 0
  %498 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %497, align 8
  %499 = icmp eq %"class.WTF::StringImpl"* %472, %498
  br i1 %499, label %1774, label %500

500:                                              ; preds = %495
  %501 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kMonthE, align 8
  %502 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %501, i64 0, i32 0, i32 0, i32 0
  %503 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %502, align 8
  %504 = icmp eq %"class.WTF::StringImpl"* %472, %503
  br i1 %504, label %1774, label %505

505:                                              ; preds = %500
  %506 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kWeekE, align 8
  %507 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %506, i64 0, i32 0, i32 0, i32 0
  %508 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %507, align 8
  %509 = icmp eq %"class.WTF::StringImpl"* %472, %508
  br i1 %509, label %1774, label %510

510:                                              ; preds = %505
  %511 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kFileE, align 8
  %512 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %511, i64 0, i32 0, i32 0, i32 0
  %513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %512, align 8
  %514 = icmp eq %"class.WTF::StringImpl"* %472, %513
  br i1 %514, label %1774, label %515

515:                                              ; preds = %510
  %516 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %517 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %516, i64 0, i32 0, i32 0, i32 0
  %518 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %517, align 8
  %519 = icmp eq %"class.WTF::StringImpl"* %472, %518
  br i1 %519, label %1774, label %520

520:                                              ; preds = %515
  %521 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kNumberE, align 8
  %522 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %521, i64 0, i32 0, i32 0, i32 0
  %523 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %522, align 8
  %524 = icmp eq %"class.WTF::StringImpl"* %472, %523
  br i1 %524, label %1774, label %525

525:                                              ; preds = %520
  %526 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement12IsTextButtonEv(%"class.blink::HTMLInputElement"* nonnull %451) #15
  br i1 %526, label %527, label %529

527:                                              ; preds = %525
  %528 = tail call i32 @_ZNK5blink8AXObject14ButtonRoleTypeEv(%"class.blink::AXObject"* %3) #15
  br label %1774

529:                                              ; preds = %525
  %530 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRangeE, align 8
  %531 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8
  %532 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %530, i64 0, i32 0, i32 0, i32 0
  %533 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %532, align 8
  %534 = icmp eq %"class.WTF::StringImpl"* %531, %533
  br i1 %534, label %1774, label %535

535:                                              ; preds = %529
  %536 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kSearchE, align 8
  %537 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %536, i64 0, i32 0, i32 0, i32 0
  %538 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %537, align 8
  %539 = icmp eq %"class.WTF::StringImpl"* %531, %538
  br i1 %539, label %1774, label %540

540:                                              ; preds = %535
  %541 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kColorE, align 8
  %542 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %541, i64 0, i32 0, i32 0, i32 0
  %543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %542, align 8
  %544 = icmp eq %"class.WTF::StringImpl"* %531, %543
  br i1 %544, label %1774, label %545

545:                                              ; preds = %540
  %546 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kTimeE, align 8
  %547 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %546, i64 0, i32 0, i32 0, i32 0
  %548 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %547, align 8
  %549 = icmp eq %"class.WTF::StringImpl"* %531, %548
  br i1 %549, label %1774, label %550

550:                                              ; preds = %545
  %551 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %475, align 8
  %552 = icmp eq %"class.WTF::StringImpl"* %531, %551
  br i1 %552, label %1774, label %553

553:                                              ; preds = %550
  %554 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %555 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %554, i64 0, i32 0, i32 0, i32 0
  %556 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %555, align 8
  %557 = icmp eq %"class.WTF::StringImpl"* %531, %556
  br i1 %557, label %1774, label %558

558:                                              ; preds = %553
  %559 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kResetE, align 8
  %560 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %559, i64 0, i32 0, i32 0, i32 0
  %561 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %560, align 8
  %562 = icmp eq %"class.WTF::StringImpl"* %531, %561
  br i1 %562, label %1774, label %563

563:                                              ; preds = %558
  %564 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kSubmitE, align 8
  %565 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %564, i64 0, i32 0, i32 0, i32 0
  %566 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %565, align 8
  %567 = icmp eq %"class.WTF::StringImpl"* %531, %566
  %568 = select i1 %567, i32 10, i32 171
  br label %1774

569:                                              ; preds = %439, %429, %431
  %570 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %570, label %597, label %571

571:                                              ; preds = %569
  %572 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %573 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %572, i64 0, i32 1
  %574 = load i32, i32* %573, align 8
  %575 = and i32 %574, 48
  %576 = icmp ne i32 %575, 0
  %577 = icmp eq %"class.blink::Node"* %572, null
  %578 = or i1 %577, %576
  br i1 %578, label %597, label %579

579:                                              ; preds = %571
  %580 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %581 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %580, i64 0, i32 0, i32 0, i32 0
  %582 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %581, align 8
  %583 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %572, i64 1, i32 2
  %584 = bitcast %"class.blink::Member.318"* %583 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %585 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %584, align 8
  %586 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %585, i64 0, i32 3, i32 0, i32 0, i32 0
  %587 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %586, align 8
  %588 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %582, i64 0, i32 3, i32 0, i32 0, i32 0
  %589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %588, align 8
  %590 = icmp eq %"class.WTF::StringImpl"* %587, %589
  br i1 %590, label %591, label %597

591:                                              ; preds = %579
  %592 = bitcast %"class.blink::Node"* %572 to %"class.blink::HTMLSelectElement"*
  %593 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %592, i64 0, i32 10
  %594 = load i8, i8* %593, align 1, !range !2
  %595 = icmp eq i8 %594, 0
  %596 = select i1 %595, i32 138, i32 113
  br label %1774

597:                                              ; preds = %579, %569, %571
  %598 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %598, label %628, label %599

599:                                              ; preds = %597
  %600 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %601 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %600, i64 0, i32 1
  %602 = load i32, i32* %601, align 8
  %603 = and i32 %602, 48
  %604 = icmp ne i32 %603, 0
  %605 = icmp eq %"class.blink::Node"* %600, null
  %606 = or i1 %605, %604
  br i1 %606, label %628, label %607

607:                                              ; preds = %599
  %608 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOptionTagE, align 8
  %609 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %608, i64 0, i32 0, i32 0, i32 0
  %610 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %609, align 8
  %611 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %600, i64 1, i32 2
  %612 = bitcast %"class.blink::Member.318"* %611 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %613 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %612, align 8
  %614 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %613, i64 0, i32 3, i32 0, i32 0, i32 0
  %615 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %614, align 8
  %616 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %610, i64 0, i32 3, i32 0, i32 0, i32 0
  %617 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %616, align 8
  %618 = icmp eq %"class.WTF::StringImpl"* %615, %617
  br i1 %618, label %619, label %628

619:                                              ; preds = %607
  %620 = bitcast %"class.blink::Node"* %600 to %"class.blink::HTMLOptionElement"*
  %621 = tail call %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"* nonnull %620) #15
  %622 = icmp eq %"class.blink::HTMLSelectElement"* %621, null
  br i1 %622, label %1774, label %623

623:                                              ; preds = %619
  %624 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %621, i64 0, i32 10
  %625 = load i8, i8* %624, align 1, !range !2
  %626 = icmp eq i8 %625, 0
  %627 = select i1 %626, i32 128, i32 114
  br label %1774

628:                                              ; preds = %607, %597, %599
  %629 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %629, label %650, label %630

630:                                              ; preds = %628
  %631 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %632 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %631, i64 0, i32 1
  %633 = load i32, i32* %632, align 8
  %634 = and i32 %633, 48
  %635 = icmp ne i32 %634, 0
  %636 = icmp eq %"class.blink::Node"* %631, null
  %637 = or i1 %636, %635
  br i1 %637, label %650, label %638

638:                                              ; preds = %630
  %639 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %640 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %639, i64 0, i32 0, i32 0, i32 0
  %641 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %640, align 8
  %642 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %631, i64 1, i32 2
  %643 = bitcast %"class.blink::Member.318"* %642 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %644 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %643, align 8
  %645 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %644, i64 0, i32 3, i32 0, i32 0, i32 0
  %646 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %645, align 8
  %647 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %641, i64 0, i32 3, i32 0, i32 0, i32 0
  %648 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %647, align 8
  %649 = icmp eq %"class.WTF::StringImpl"* %646, %648
  br i1 %649, label %1774, label %650

650:                                              ; preds = %628, %630, %638
  %651 = tail call i32 @_ZNK5blink12AXNodeObject12HeadingLevelEv(%"class.blink::AXNodeObject"* %0)
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %653, label %1774

653:                                              ; preds = %650
  %654 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %654, label %681, label %655

655:                                              ; preds = %653
  %656 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %657 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %656, i64 0, i32 1
  %658 = load i32, i32* %657, align 8
  %659 = and i32 %658, 48
  %660 = icmp ne i32 %659, 0
  %661 = icmp eq %"class.blink::Node"* %656, null
  %662 = or i1 %661, %660
  br i1 %662, label %681, label %663

663:                                              ; preds = %655
  %664 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDivTagE, align 8
  %665 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %664, i64 0, i32 0, i32 0, i32 0
  %666 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %665, align 8
  %667 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %656, i64 1, i32 2
  %668 = bitcast %"class.blink::Member.318"* %667 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %669 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %668, align 8
  %670 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %669, i64 0, i32 3, i32 0, i32 0, i32 0
  %671 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %670, align 8
  %672 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %666, i64 0, i32 3, i32 0, i32 0, i32 0
  %673 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %672, align 8
  %674 = icmp eq %"class.WTF::StringImpl"* %671, %673
  br i1 %674, label %675, label %681

675:                                              ; preds = %663
  %676 = bitcast %"class.blink::AXNodeObject"* %0 to i32 (%"class.blink::AXNodeObject"*)***
  %677 = load i32 (%"class.blink::AXNodeObject"*)**, i32 (%"class.blink::AXNodeObject"*)*** %676, align 8
  %678 = getelementptr inbounds i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %677, i64 162
  %679 = load i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %678, align 8
  %680 = tail call i32 %679(%"class.blink::AXNodeObject"* %0) #15
  br label %1774

681:                                              ; preds = %653, %655, %663
  %682 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %682, label %703, label %683

683:                                              ; preds = %681
  %684 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %685 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %684, i64 0, i32 1
  %686 = load i32, i32* %685, align 8
  %687 = and i32 %686, 48
  %688 = icmp ne i32 %687, 0
  %689 = icmp eq %"class.blink::Node"* %684, null
  %690 = or i1 %689, %688
  br i1 %690, label %703, label %691

691:                                              ; preds = %683
  %692 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMenuTagE, align 8
  %693 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %692, i64 0, i32 0, i32 0, i32 0
  %694 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %693, align 8
  %695 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %684, i64 1, i32 2
  %696 = bitcast %"class.blink::Member.318"* %695 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %697 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %696, align 8
  %698 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %697, i64 0, i32 3, i32 0, i32 0, i32 0
  %699 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %698, align 8
  %700 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %694, i64 0, i32 3, i32 0, i32 0, i32 0
  %701 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %700, align 8
  %702 = icmp eq %"class.WTF::StringImpl"* %699, %701
  br i1 %702, label %1774, label %703

703:                                              ; preds = %681, %683, %691
  %704 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %704, label %725, label %705

705:                                              ; preds = %703
  %706 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %707 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %706, i64 0, i32 1
  %708 = load i32, i32* %707, align 8
  %709 = and i32 %708, 48
  %710 = icmp ne i32 %709, 0
  %711 = icmp eq %"class.blink::Node"* %706, null
  %712 = or i1 %711, %710
  br i1 %712, label %725, label %713

713:                                              ; preds = %705
  %714 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE, align 8
  %715 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %714, i64 0, i32 0, i32 0, i32 0
  %716 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %715, align 8
  %717 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %706, i64 1, i32 2
  %718 = bitcast %"class.blink::Member.318"* %717 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %719 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %718, align 8
  %720 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %719, i64 0, i32 3, i32 0, i32 0, i32 0
  %721 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %720, align 8
  %722 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %716, i64 0, i32 3, i32 0, i32 0, i32 0
  %723 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %722, align 8
  %724 = icmp eq %"class.WTF::StringImpl"* %721, %723
  br i1 %724, label %1774, label %725

725:                                              ; preds = %703, %705, %713
  %726 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %726, label %747, label %727

727:                                              ; preds = %725
  %728 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %729 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %728, i64 0, i32 1
  %730 = load i32, i32* %729, align 8
  %731 = and i32 %730, 48
  %732 = icmp ne i32 %731, 0
  %733 = icmp eq %"class.blink::Node"* %728, null
  %734 = or i1 %733, %732
  br i1 %734, label %747, label %735

735:                                              ; preds = %727
  %736 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE, align 8
  %737 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %736, i64 0, i32 0, i32 0, i32 0
  %738 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %737, align 8
  %739 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %728, i64 1, i32 2
  %740 = bitcast %"class.blink::Member.318"* %739 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %741 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %740, align 8
  %742 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %741, i64 0, i32 3, i32 0, i32 0, i32 0
  %743 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %742, align 8
  %744 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %738, i64 0, i32 3, i32 0, i32 0, i32 0
  %745 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %744, align 8
  %746 = icmp eq %"class.WTF::StringImpl"* %743, %745
  br i1 %746, label %1774, label %747

747:                                              ; preds = %725, %727, %735
  %748 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %748, label %769, label %749

749:                                              ; preds = %747
  %750 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %751 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %750, i64 0, i32 1
  %752 = load i32, i32* %751, align 8
  %753 = and i32 %752, 48
  %754 = icmp ne i32 %753, 0
  %755 = icmp eq %"class.blink::Node"* %750, null
  %756 = or i1 %755, %754
  br i1 %756, label %769, label %757

757:                                              ; preds = %749
  %758 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kMeterTagE, align 8
  %759 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %758, i64 0, i32 0, i32 0, i32 0
  %760 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %759, align 8
  %761 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %750, i64 1, i32 2
  %762 = bitcast %"class.blink::Member.318"* %761 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %763 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %762, align 8
  %764 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %763, i64 0, i32 3, i32 0, i32 0, i32 0
  %765 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %764, align 8
  %766 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %760, i64 0, i32 3, i32 0, i32 0, i32 0
  %767 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %766, align 8
  %768 = icmp eq %"class.WTF::StringImpl"* %765, %767
  br i1 %768, label %1774, label %769

769:                                              ; preds = %747, %749, %757
  %770 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %770, label %791, label %771

771:                                              ; preds = %769
  %772 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %773 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %772, i64 0, i32 1
  %774 = load i32, i32* %773, align 8
  %775 = and i32 %774, 48
  %776 = icmp ne i32 %775, 0
  %777 = icmp eq %"class.blink::Node"* %772, null
  %778 = or i1 %777, %776
  br i1 %778, label %791, label %779

779:                                              ; preds = %771
  %780 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kProgressTagE, align 8
  %781 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %780, i64 0, i32 0, i32 0, i32 0
  %782 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %781, align 8
  %783 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %772, i64 1, i32 2
  %784 = bitcast %"class.blink::Member.318"* %783 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %785 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %784, align 8
  %786 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %785, i64 0, i32 3, i32 0, i32 0, i32 0
  %787 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %786, align 8
  %788 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %782, i64 0, i32 3, i32 0, i32 0, i32 0
  %789 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %788, align 8
  %790 = icmp eq %"class.WTF::StringImpl"* %787, %789
  br i1 %790, label %1774, label %791

791:                                              ; preds = %769, %771, %779
  %792 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %792, label %813, label %793

793:                                              ; preds = %791
  %794 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %795 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %794, i64 0, i32 1
  %796 = load i32, i32* %795, align 8
  %797 = and i32 %796, 48
  %798 = icmp ne i32 %797, 0
  %799 = icmp eq %"class.blink::Node"* %794, null
  %800 = or i1 %799, %798
  br i1 %800, label %813, label %801

801:                                              ; preds = %793
  %802 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kOutputTagE, align 8
  %803 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %802, i64 0, i32 0, i32 0, i32 0
  %804 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %803, align 8
  %805 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %794, i64 1, i32 2
  %806 = bitcast %"class.blink::Member.318"* %805 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %807 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %806, align 8
  %808 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %807, i64 0, i32 3, i32 0, i32 0, i32 0
  %809 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %808, align 8
  %810 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %804, i64 0, i32 3, i32 0, i32 0, i32 0
  %811 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %810, align 8
  %812 = icmp eq %"class.WTF::StringImpl"* %809, %811
  br i1 %812, label %1774, label %813

813:                                              ; preds = %791, %793, %801
  %814 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %814, label %835, label %815

815:                                              ; preds = %813
  %816 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %817 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %816, i64 0, i32 1
  %818 = load i32, i32* %817, align 8
  %819 = and i32 %818, 48
  %820 = icmp ne i32 %819, 0
  %821 = icmp eq %"class.blink::Node"* %816, null
  %822 = or i1 %821, %820
  br i1 %822, label %835, label %823

823:                                              ; preds = %815
  %824 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kPTagE, align 8
  %825 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %824, i64 0, i32 0, i32 0, i32 0
  %826 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %825, align 8
  %827 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %816, i64 1, i32 2
  %828 = bitcast %"class.blink::Member.318"* %827 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %829 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %828, align 8
  %830 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %829, i64 0, i32 3, i32 0, i32 0, i32 0
  %831 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %830, align 8
  %832 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %826, i64 0, i32 3, i32 0, i32 0, i32 0
  %833 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %832, align 8
  %834 = icmp eq %"class.WTF::StringImpl"* %831, %833
  br i1 %834, label %1774, label %835

835:                                              ; preds = %813, %815, %823
  %836 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %836, label %857, label %837

837:                                              ; preds = %835
  %838 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %839 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %838, i64 0, i32 1
  %840 = load i32, i32* %839, align 8
  %841 = and i32 %840, 48
  %842 = icmp ne i32 %841, 0
  %843 = icmp eq %"class.blink::Node"* %838, null
  %844 = or i1 %843, %842
  br i1 %844, label %857, label %845

845:                                              ; preds = %837
  %846 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kLabelTagE, align 8
  %847 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %846, i64 0, i32 0, i32 0, i32 0
  %848 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %847, align 8
  %849 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %838, i64 1, i32 2
  %850 = bitcast %"class.blink::Member.318"* %849 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %851 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %850, align 8
  %852 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %851, i64 0, i32 3, i32 0, i32 0, i32 0
  %853 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %852, align 8
  %854 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %848, i64 0, i32 3, i32 0, i32 0, i32 0
  %855 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %854, align 8
  %856 = icmp eq %"class.WTF::StringImpl"* %853, %855
  br i1 %856, label %1774, label %857

857:                                              ; preds = %835, %837, %845
  %858 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %858, label %879, label %859

859:                                              ; preds = %857
  %860 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %861 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %860, i64 0, i32 1
  %862 = load i32, i32* %861, align 8
  %863 = and i32 %862, 48
  %864 = icmp ne i32 %863, 0
  %865 = icmp eq %"class.blink::Node"* %860, null
  %866 = or i1 %865, %864
  br i1 %866, label %879, label %867

867:                                              ; preds = %859
  %868 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kLegendTagE, align 8
  %869 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %868, i64 0, i32 0, i32 0, i32 0
  %870 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %869, align 8
  %871 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %860, i64 1, i32 2
  %872 = bitcast %"class.blink::Member.318"* %871 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %873 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %872, align 8
  %874 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %873, i64 0, i32 3, i32 0, i32 0, i32 0
  %875 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %874, align 8
  %876 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %870, i64 0, i32 3, i32 0, i32 0, i32 0
  %877 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %876, align 8
  %878 = icmp eq %"class.WTF::StringImpl"* %875, %877
  br i1 %878, label %1774, label %879

879:                                              ; preds = %857, %859, %867
  %880 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %880, label %901, label %881

881:                                              ; preds = %879
  %882 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %883 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %882, i64 0, i32 1
  %884 = load i32, i32* %883, align 8
  %885 = and i32 %884, 48
  %886 = icmp ne i32 %885, 0
  %887 = icmp eq %"class.blink::Node"* %882, null
  %888 = or i1 %887, %886
  br i1 %888, label %901, label %889

889:                                              ; preds = %881
  %890 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kRubyTagE, align 8
  %891 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %890, i64 0, i32 0, i32 0, i32 0
  %892 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %891, align 8
  %893 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %882, i64 1, i32 2
  %894 = bitcast %"class.blink::Member.318"* %893 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %895 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %894, align 8
  %896 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %895, i64 0, i32 3, i32 0, i32 0, i32 0
  %897 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %896, align 8
  %898 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %892, i64 0, i32 3, i32 0, i32 0, i32 0
  %899 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %898, align 8
  %900 = icmp eq %"class.WTF::StringImpl"* %897, %899
  br i1 %900, label %1774, label %901

901:                                              ; preds = %879, %881, %889
  %902 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %902, label %923, label %903

903:                                              ; preds = %901
  %904 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %905 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %904, i64 0, i32 1
  %906 = load i32, i32* %905, align 8
  %907 = and i32 %906, 48
  %908 = icmp ne i32 %907, 0
  %909 = icmp eq %"class.blink::Node"* %904, null
  %910 = or i1 %909, %908
  br i1 %910, label %923, label %911

911:                                              ; preds = %903
  %912 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDlTagE, align 8
  %913 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %912, i64 0, i32 0, i32 0, i32 0
  %914 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %913, align 8
  %915 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %904, i64 1, i32 2
  %916 = bitcast %"class.blink::Member.318"* %915 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %917 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %916, align 8
  %918 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %917, i64 0, i32 3, i32 0, i32 0, i32 0
  %919 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %918, align 8
  %920 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %914, i64 0, i32 3, i32 0, i32 0, i32 0
  %921 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %920, align 8
  %922 = icmp eq %"class.WTF::StringImpl"* %919, %921
  br i1 %922, label %1774, label %923

923:                                              ; preds = %901, %903, %911
  %924 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %924, label %945, label %925

925:                                              ; preds = %923
  %926 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %927 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %926, i64 0, i32 1
  %928 = load i32, i32* %927, align 8
  %929 = and i32 %928, 48
  %930 = icmp ne i32 %929, 0
  %931 = icmp eq %"class.blink::Node"* %926, null
  %932 = or i1 %931, %930
  br i1 %932, label %945, label %933

933:                                              ; preds = %925
  %934 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAudioTagE, align 8
  %935 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %934, i64 0, i32 0, i32 0, i32 0
  %936 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %935, align 8
  %937 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %926, i64 1, i32 2
  %938 = bitcast %"class.blink::Member.318"* %937 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %939 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %938, align 8
  %940 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %939, i64 0, i32 3, i32 0, i32 0, i32 0
  %941 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %940, align 8
  %942 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %936, i64 0, i32 3, i32 0, i32 0, i32 0
  %943 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %942, align 8
  %944 = icmp eq %"class.WTF::StringImpl"* %941, %943
  br i1 %944, label %1774, label %945

945:                                              ; preds = %923, %925, %933
  %946 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %946, label %967, label %947

947:                                              ; preds = %945
  %948 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %949 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %948, i64 0, i32 1
  %950 = load i32, i32* %949, align 8
  %951 = and i32 %950, 48
  %952 = icmp ne i32 %951, 0
  %953 = icmp eq %"class.blink::Node"* %948, null
  %954 = or i1 %953, %952
  br i1 %954, label %967, label %955

955:                                              ; preds = %947
  %956 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE, align 8
  %957 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %956, i64 0, i32 0, i32 0, i32 0
  %958 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %957, align 8
  %959 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %948, i64 1, i32 2
  %960 = bitcast %"class.blink::Member.318"* %959 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %961 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %960, align 8
  %962 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %961, i64 0, i32 3, i32 0, i32 0, i32 0
  %963 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %962, align 8
  %964 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %958, i64 0, i32 3, i32 0, i32 0, i32 0
  %965 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %964, align 8
  %966 = icmp eq %"class.WTF::StringImpl"* %963, %965
  br i1 %966, label %1774, label %967

967:                                              ; preds = %945, %947, %955
  %968 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %968, label %989, label %969

969:                                              ; preds = %967
  %970 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %971 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDdTagE, align 8
  %972 = icmp eq %"class.blink::Node"* %970, null
  br i1 %972, label %989, label %973

973:                                              ; preds = %969
  %974 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %970, i64 0, i32 1
  %975 = load i32, i32* %974, align 8
  %976 = and i32 %975, 48
  %977 = icmp eq i32 %976, 0
  br i1 %977, label %978, label %989

978:                                              ; preds = %973
  %979 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %971, i64 0, i32 0, i32 0, i32 0
  %980 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %979, align 8
  %981 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %970, i64 1, i32 2
  %982 = bitcast %"class.blink::Member.318"* %981 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %983 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %982, align 8
  %984 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %983, i64 0, i32 3, i32 0, i32 0, i32 0
  %985 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %984, align 8
  %986 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %980, i64 0, i32 3, i32 0, i32 0, i32 0
  %987 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %986, align 8
  %988 = icmp eq %"class.WTF::StringImpl"* %985, %987
  br i1 %988, label %1774, label %989

989:                                              ; preds = %967, %969, %973, %978
  %990 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %990, label %1011, label %991

991:                                              ; preds = %989
  %992 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %993 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDtTagE, align 8
  %994 = icmp eq %"class.blink::Node"* %992, null
  br i1 %994, label %1011, label %995

995:                                              ; preds = %991
  %996 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %992, i64 0, i32 1
  %997 = load i32, i32* %996, align 8
  %998 = and i32 %997, 48
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1000, label %1011

1000:                                             ; preds = %995
  %1001 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %993, i64 0, i32 0, i32 0, i32 0
  %1002 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1001, align 8
  %1003 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %992, i64 1, i32 2
  %1004 = bitcast %"class.blink::Member.318"* %1003 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1005 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1004, align 8
  %1006 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1005, i64 0, i32 3, i32 0, i32 0, i32 0
  %1007 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1006, align 8
  %1008 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1002, i64 0, i32 3, i32 0, i32 0, i32 0
  %1009 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1008, align 8
  %1010 = icmp eq %"class.WTF::StringImpl"* %1007, %1009
  br i1 %1010, label %1774, label %1011

1011:                                             ; preds = %989, %991, %995, %1000
  %1012 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1012, label %1016, label %1013

1013:                                             ; preds = %1011
  %1014 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1015 = bitcast %"class.blink::Node"* %1014 to %"class.WTF::StringImpl"* (%"class.blink::Node"*)***
  br label %1016

1016:                                             ; preds = %1011, %1013
  %1017 = phi %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** [ %1015, %1013 ], [ null, %1011 ]
  %1018 = phi %"class.blink::Node"* [ %1014, %1013 ], [ null, %1011 ]
  %1019 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)**, %"class.WTF::StringImpl"* (%"class.blink::Node"*)*** %1017, align 8
  %1020 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %1019, i64 27
  %1021 = load %"class.WTF::StringImpl"* (%"class.blink::Node"*)*, %"class.WTF::StringImpl"* (%"class.blink::Node"*)** %1020, align 8
  %1022 = tail call %"class.WTF::StringImpl"* %1021(%"class.blink::Node"* %1018) #15
  %1023 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::MathMLQualifiedName"** @_ZN5blink12mathml_names8kMathTagE to %"class.blink::QualifiedName"**), align 8
  %1024 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1023, i64 0, i32 0, i32 0
  %1025 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1024, align 8
  %1026 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1025, i64 0, i32 3, i32 0, i32 0, i32 0
  %1027 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1026, align 8
  %1028 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %1027, %"class.WTF::StringImpl"* %1022) #15
  %1029 = icmp eq %"class.WTF::StringImpl"* %1022, null
  br i1 %1029, label %1043, label %1030

1030:                                             ; preds = %1016
  %1031 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1022, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1032 = load atomic i32, i32* %1031 monotonic, align 4
  %1033 = and i32 %1032, 2
  %1034 = icmp eq i32 %1033, 0
  %1035 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1022, i64 0, i32 0
  %1036 = load i32, i32* %1035, align 4
  br i1 %1034, label %1037, label %1039

1037:                                             ; preds = %1030
  %1038 = add i32 %1036, -1
  store i32 %1038, i32* %1035, align 4
  br label %1039

1039:                                             ; preds = %1037, %1030
  %1040 = phi i32 [ %1038, %1037 ], [ %1036, %1030 ]
  %1041 = icmp eq i32 %1040, 0
  br i1 %1041, label %1042, label %1043

1042:                                             ; preds = %1039
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1022) #15
  br label %1043

1043:                                             ; preds = %1016, %1039, %1042
  br i1 %1028, label %1774, label %1044

1044:                                             ; preds = %1043
  %1045 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1045, label %1066, label %1046

1046:                                             ; preds = %1044
  %1047 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1048 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kRpTagE, align 8
  %1049 = icmp eq %"class.blink::Node"* %1047, null
  br i1 %1049, label %1066, label %1050

1050:                                             ; preds = %1046
  %1051 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1047, i64 0, i32 1
  %1052 = load i32, i32* %1051, align 8
  %1053 = and i32 %1052, 48
  %1054 = icmp eq i32 %1053, 0
  br i1 %1054, label %1055, label %1066

1055:                                             ; preds = %1050
  %1056 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1048, i64 0, i32 0, i32 0, i32 0
  %1057 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1056, align 8
  %1058 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1047, i64 1, i32 2
  %1059 = bitcast %"class.blink::Member.318"* %1058 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1060 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1059, align 8
  %1061 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1060, i64 0, i32 3, i32 0, i32 0, i32 0
  %1062 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1061, align 8
  %1063 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1057, i64 0, i32 3, i32 0, i32 0, i32 0
  %1064 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1063, align 8
  %1065 = icmp eq %"class.WTF::StringImpl"* %1062, %1064
  br i1 %1065, label %1774, label %1066

1066:                                             ; preds = %1044, %1046, %1050, %1055
  %1067 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1067, label %1088, label %1068

1068:                                             ; preds = %1066
  %1069 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1070 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kRtTagE, align 8
  %1071 = icmp eq %"class.blink::Node"* %1069, null
  br i1 %1071, label %1088, label %1072

1072:                                             ; preds = %1068
  %1073 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1069, i64 0, i32 1
  %1074 = load i32, i32* %1073, align 8
  %1075 = and i32 %1074, 48
  %1076 = icmp eq i32 %1075, 0
  br i1 %1076, label %1077, label %1088

1077:                                             ; preds = %1072
  %1078 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1070, i64 0, i32 0, i32 0, i32 0
  %1079 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1078, align 8
  %1080 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1069, i64 1, i32 2
  %1081 = bitcast %"class.blink::Member.318"* %1080 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1082 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1081, align 8
  %1083 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1082, i64 0, i32 3, i32 0, i32 0, i32 0
  %1084 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1083, align 8
  %1085 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1079, i64 0, i32 3, i32 0, i32 0, i32 0
  %1086 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1085, align 8
  %1087 = icmp eq %"class.WTF::StringImpl"* %1084, %1086
  br i1 %1087, label %1774, label %1088

1088:                                             ; preds = %1066, %1068, %1072, %1077
  %1089 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1089, label %1110, label %1090

1090:                                             ; preds = %1088
  %1091 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1092 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1091, i64 0, i32 1
  %1093 = load i32, i32* %1092, align 8
  %1094 = and i32 %1093, 48
  %1095 = icmp ne i32 %1094, 0
  %1096 = icmp eq %"class.blink::Node"* %1091, null
  %1097 = or i1 %1096, %1095
  br i1 %1097, label %1110, label %1098

1098:                                             ; preds = %1090
  %1099 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE, align 8
  %1100 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1099, i64 0, i32 0, i32 0, i32 0
  %1101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1100, align 8
  %1102 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1091, i64 1, i32 2
  %1103 = bitcast %"class.blink::Member.318"* %1102 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1104 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1103, align 8
  %1105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1104, i64 0, i32 3, i32 0, i32 0, i32 0
  %1106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1105, align 8
  %1107 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1101, i64 0, i32 3, i32 0, i32 0, i32 0
  %1108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1107, align 8
  %1109 = icmp eq %"class.WTF::StringImpl"* %1106, %1108
  br i1 %1109, label %1774, label %1110

1110:                                             ; preds = %1088, %1090, %1098
  %1111 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1111, label %1132, label %1112

1112:                                             ; preds = %1110
  %1113 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1114 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAbbrTagE, align 8
  %1115 = icmp eq %"class.blink::Node"* %1113, null
  br i1 %1115, label %1132, label %1116

1116:                                             ; preds = %1112
  %1117 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1113, i64 0, i32 1
  %1118 = load i32, i32* %1117, align 8
  %1119 = and i32 %1118, 48
  %1120 = icmp eq i32 %1119, 0
  br i1 %1120, label %1121, label %1132

1121:                                             ; preds = %1116
  %1122 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1114, i64 0, i32 0, i32 0, i32 0
  %1123 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1122, align 8
  %1124 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1113, i64 1, i32 2
  %1125 = bitcast %"class.blink::Member.318"* %1124 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1126 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1125, align 8
  %1127 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1126, i64 0, i32 3, i32 0, i32 0, i32 0
  %1128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1127, align 8
  %1129 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1123, i64 0, i32 3, i32 0, i32 0, i32 0
  %1130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1129, align 8
  %1131 = icmp eq %"class.WTF::StringImpl"* %1128, %1130
  br i1 %1131, label %1774, label %1132

1132:                                             ; preds = %1110, %1112, %1116, %1121
  %1133 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1133, label %1154, label %1134

1134:                                             ; preds = %1132
  %1135 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1136 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kArticleTagE, align 8
  %1137 = icmp eq %"class.blink::Node"* %1135, null
  br i1 %1137, label %1154, label %1138

1138:                                             ; preds = %1134
  %1139 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1135, i64 0, i32 1
  %1140 = load i32, i32* %1139, align 8
  %1141 = and i32 %1140, 48
  %1142 = icmp eq i32 %1141, 0
  br i1 %1142, label %1143, label %1154

1143:                                             ; preds = %1138
  %1144 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1136, i64 0, i32 0, i32 0, i32 0
  %1145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1144, align 8
  %1146 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1135, i64 1, i32 2
  %1147 = bitcast %"class.blink::Member.318"* %1146 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1148 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1147, align 8
  %1149 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1148, i64 0, i32 3, i32 0, i32 0, i32 0
  %1150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1149, align 8
  %1151 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1145, i64 0, i32 3, i32 0, i32 0, i32 0
  %1152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1151, align 8
  %1153 = icmp eq %"class.WTF::StringImpl"* %1150, %1152
  br i1 %1153, label %1774, label %1154

1154:                                             ; preds = %1132, %1134, %1138, %1143
  %1155 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1155, label %1176, label %1156

1156:                                             ; preds = %1154
  %1157 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1158 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kCodeTagE, align 8
  %1159 = icmp eq %"class.blink::Node"* %1157, null
  br i1 %1159, label %1176, label %1160

1160:                                             ; preds = %1156
  %1161 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1157, i64 0, i32 1
  %1162 = load i32, i32* %1161, align 8
  %1163 = and i32 %1162, 48
  %1164 = icmp eq i32 %1163, 0
  br i1 %1164, label %1165, label %1176

1165:                                             ; preds = %1160
  %1166 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1158, i64 0, i32 0, i32 0, i32 0
  %1167 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1166, align 8
  %1168 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1157, i64 1, i32 2
  %1169 = bitcast %"class.blink::Member.318"* %1168 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1170 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1169, align 8
  %1171 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1170, i64 0, i32 3, i32 0, i32 0, i32 0
  %1172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1171, align 8
  %1173 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1167, i64 0, i32 3, i32 0, i32 0, i32 0
  %1174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1173, align 8
  %1175 = icmp eq %"class.WTF::StringImpl"* %1172, %1174
  br i1 %1175, label %1774, label %1176

1176:                                             ; preds = %1154, %1156, %1160, %1165
  %1177 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1177, label %1198, label %1178

1178:                                             ; preds = %1176
  %1179 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1180 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kEmTagE, align 8
  %1181 = icmp eq %"class.blink::Node"* %1179, null
  br i1 %1181, label %1198, label %1182

1182:                                             ; preds = %1178
  %1183 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1179, i64 0, i32 1
  %1184 = load i32, i32* %1183, align 8
  %1185 = and i32 %1184, 48
  %1186 = icmp eq i32 %1185, 0
  br i1 %1186, label %1187, label %1198

1187:                                             ; preds = %1182
  %1188 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1180, i64 0, i32 0, i32 0, i32 0
  %1189 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1188, align 8
  %1190 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1179, i64 1, i32 2
  %1191 = bitcast %"class.blink::Member.318"* %1190 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1192 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1191, align 8
  %1193 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1192, i64 0, i32 3, i32 0, i32 0, i32 0
  %1194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1193, align 8
  %1195 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1189, i64 0, i32 3, i32 0, i32 0, i32 0
  %1196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1195, align 8
  %1197 = icmp eq %"class.WTF::StringImpl"* %1194, %1196
  br i1 %1197, label %1774, label %1198

1198:                                             ; preds = %1176, %1178, %1182, %1187
  %1199 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1199, label %1220, label %1200

1200:                                             ; preds = %1198
  %1201 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1202 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kStrongTagE, align 8
  %1203 = icmp eq %"class.blink::Node"* %1201, null
  br i1 %1203, label %1220, label %1204

1204:                                             ; preds = %1200
  %1205 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1201, i64 0, i32 1
  %1206 = load i32, i32* %1205, align 8
  %1207 = and i32 %1206, 48
  %1208 = icmp eq i32 %1207, 0
  br i1 %1208, label %1209, label %1220

1209:                                             ; preds = %1204
  %1210 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1202, i64 0, i32 0, i32 0, i32 0
  %1211 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1210, align 8
  %1212 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1201, i64 1, i32 2
  %1213 = bitcast %"class.blink::Member.318"* %1212 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1214 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1213, align 8
  %1215 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1214, i64 0, i32 3, i32 0, i32 0, i32 0
  %1216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1215, align 8
  %1217 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1211, i64 0, i32 3, i32 0, i32 0, i32 0
  %1218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1217, align 8
  %1219 = icmp eq %"class.WTF::StringImpl"* %1216, %1218
  br i1 %1219, label %1774, label %1220

1220:                                             ; preds = %1198, %1200, %1204, %1209
  %1221 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1221, label %1242, label %1222

1222:                                             ; preds = %1220
  %1223 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1224 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDelTagE, align 8
  %1225 = icmp eq %"class.blink::Node"* %1223, null
  br i1 %1225, label %1242, label %1226

1226:                                             ; preds = %1222
  %1227 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1223, i64 0, i32 1
  %1228 = load i32, i32* %1227, align 8
  %1229 = and i32 %1228, 48
  %1230 = icmp eq i32 %1229, 0
  br i1 %1230, label %1231, label %1242

1231:                                             ; preds = %1226
  %1232 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1224, i64 0, i32 0, i32 0, i32 0
  %1233 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1232, align 8
  %1234 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1223, i64 1, i32 2
  %1235 = bitcast %"class.blink::Member.318"* %1234 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1236 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1235, align 8
  %1237 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1236, i64 0, i32 3, i32 0, i32 0, i32 0
  %1238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1237, align 8
  %1239 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1233, i64 0, i32 3, i32 0, i32 0, i32 0
  %1240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1239, align 8
  %1241 = icmp eq %"class.WTF::StringImpl"* %1238, %1240
  br i1 %1241, label %1774, label %1242

1242:                                             ; preds = %1220, %1222, %1226, %1231
  %1243 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1243, label %1264, label %1244

1244:                                             ; preds = %1242
  %1245 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1246 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kInsTagE, align 8
  %1247 = icmp eq %"class.blink::Node"* %1245, null
  br i1 %1247, label %1264, label %1248

1248:                                             ; preds = %1244
  %1249 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1245, i64 0, i32 1
  %1250 = load i32, i32* %1249, align 8
  %1251 = and i32 %1250, 48
  %1252 = icmp eq i32 %1251, 0
  br i1 %1252, label %1253, label %1264

1253:                                             ; preds = %1248
  %1254 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1246, i64 0, i32 0, i32 0, i32 0
  %1255 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1254, align 8
  %1256 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1245, i64 1, i32 2
  %1257 = bitcast %"class.blink::Member.318"* %1256 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1258 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1257, align 8
  %1259 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1258, i64 0, i32 3, i32 0, i32 0, i32 0
  %1260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1259, align 8
  %1261 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1255, i64 0, i32 3, i32 0, i32 0, i32 0
  %1262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1261, align 8
  %1263 = icmp eq %"class.WTF::StringImpl"* %1260, %1262
  br i1 %1263, label %1774, label %1264

1264:                                             ; preds = %1242, %1244, %1248, %1253
  %1265 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1265, label %1286, label %1266

1266:                                             ; preds = %1264
  %1267 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1268 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMainTagE, align 8
  %1269 = icmp eq %"class.blink::Node"* %1267, null
  br i1 %1269, label %1286, label %1270

1270:                                             ; preds = %1266
  %1271 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1267, i64 0, i32 1
  %1272 = load i32, i32* %1271, align 8
  %1273 = and i32 %1272, 48
  %1274 = icmp eq i32 %1273, 0
  br i1 %1274, label %1275, label %1286

1275:                                             ; preds = %1270
  %1276 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1268, i64 0, i32 0, i32 0, i32 0
  %1277 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1276, align 8
  %1278 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1267, i64 1, i32 2
  %1279 = bitcast %"class.blink::Member.318"* %1278 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1280 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1279, align 8
  %1281 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1280, i64 0, i32 3, i32 0, i32 0, i32 0
  %1282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1281, align 8
  %1283 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1277, i64 0, i32 3, i32 0, i32 0, i32 0
  %1284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1283, align 8
  %1285 = icmp eq %"class.WTF::StringImpl"* %1282, %1284
  br i1 %1285, label %1774, label %1286

1286:                                             ; preds = %1264, %1266, %1270, %1275
  %1287 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1287, label %1308, label %1288

1288:                                             ; preds = %1286
  %1289 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1290 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMarkTagE, align 8
  %1291 = icmp eq %"class.blink::Node"* %1289, null
  br i1 %1291, label %1308, label %1292

1292:                                             ; preds = %1288
  %1293 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1289, i64 0, i32 1
  %1294 = load i32, i32* %1293, align 8
  %1295 = and i32 %1294, 48
  %1296 = icmp eq i32 %1295, 0
  br i1 %1296, label %1297, label %1308

1297:                                             ; preds = %1292
  %1298 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1290, i64 0, i32 0, i32 0, i32 0
  %1299 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1298, align 8
  %1300 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1289, i64 1, i32 2
  %1301 = bitcast %"class.blink::Member.318"* %1300 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1302 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1301, align 8
  %1303 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1302, i64 0, i32 3, i32 0, i32 0, i32 0
  %1304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1303, align 8
  %1305 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1299, i64 0, i32 3, i32 0, i32 0, i32 0
  %1306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1305, align 8
  %1307 = icmp eq %"class.WTF::StringImpl"* %1304, %1306
  br i1 %1307, label %1774, label %1308

1308:                                             ; preds = %1286, %1288, %1292, %1297
  %1309 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1309, label %1330, label %1310

1310:                                             ; preds = %1308
  %1311 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1312 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kNavTagE, align 8
  %1313 = icmp eq %"class.blink::Node"* %1311, null
  br i1 %1313, label %1330, label %1314

1314:                                             ; preds = %1310
  %1315 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1311, i64 0, i32 1
  %1316 = load i32, i32* %1315, align 8
  %1317 = and i32 %1316, 48
  %1318 = icmp eq i32 %1317, 0
  br i1 %1318, label %1319, label %1330

1319:                                             ; preds = %1314
  %1320 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1312, i64 0, i32 0, i32 0, i32 0
  %1321 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1320, align 8
  %1322 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1311, i64 1, i32 2
  %1323 = bitcast %"class.blink::Member.318"* %1322 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1324 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1323, align 8
  %1325 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1324, i64 0, i32 3, i32 0, i32 0, i32 0
  %1326 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1325, align 8
  %1327 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1321, i64 0, i32 3, i32 0, i32 0, i32 0
  %1328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1327, align 8
  %1329 = icmp eq %"class.WTF::StringImpl"* %1326, %1328
  br i1 %1329, label %1774, label %1330

1330:                                             ; preds = %1308, %1310, %1314, %1319
  %1331 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1331, label %1352, label %1332

1332:                                             ; preds = %1330
  %1333 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1334 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAsideTagE, align 8
  %1335 = icmp eq %"class.blink::Node"* %1333, null
  br i1 %1335, label %1352, label %1336

1336:                                             ; preds = %1332
  %1337 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1333, i64 0, i32 1
  %1338 = load i32, i32* %1337, align 8
  %1339 = and i32 %1338, 48
  %1340 = icmp eq i32 %1339, 0
  br i1 %1340, label %1341, label %1352

1341:                                             ; preds = %1336
  %1342 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1334, i64 0, i32 0, i32 0, i32 0
  %1343 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1342, align 8
  %1344 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1333, i64 1, i32 2
  %1345 = bitcast %"class.blink::Member.318"* %1344 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1346 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1345, align 8
  %1347 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1346, i64 0, i32 3, i32 0, i32 0, i32 0
  %1348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1347, align 8
  %1349 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1343, i64 0, i32 3, i32 0, i32 0, i32 0
  %1350 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1349, align 8
  %1351 = icmp eq %"class.WTF::StringImpl"* %1348, %1350
  br i1 %1351, label %1774, label %1352

1352:                                             ; preds = %1330, %1332, %1336, %1341
  %1353 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1353, label %1374, label %1354

1354:                                             ; preds = %1352
  %1355 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1356 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kPreTagE, align 8
  %1357 = icmp eq %"class.blink::Node"* %1355, null
  br i1 %1357, label %1374, label %1358

1358:                                             ; preds = %1354
  %1359 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1355, i64 0, i32 1
  %1360 = load i32, i32* %1359, align 8
  %1361 = and i32 %1360, 48
  %1362 = icmp eq i32 %1361, 0
  br i1 %1362, label %1363, label %1374

1363:                                             ; preds = %1358
  %1364 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1356, i64 0, i32 0, i32 0, i32 0
  %1365 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1364, align 8
  %1366 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1355, i64 1, i32 2
  %1367 = bitcast %"class.blink::Member.318"* %1366 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1368 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1367, align 8
  %1369 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1368, i64 0, i32 3, i32 0, i32 0, i32 0
  %1370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1369, align 8
  %1371 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1365, i64 0, i32 3, i32 0, i32 0, i32 0
  %1372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1371, align 8
  %1373 = icmp eq %"class.WTF::StringImpl"* %1370, %1372
  br i1 %1373, label %1774, label %1374

1374:                                             ; preds = %1352, %1354, %1358, %1363
  %1375 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1375, label %1399, label %1376

1376:                                             ; preds = %1374
  %1377 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1378 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSectionTagE, align 8
  %1379 = icmp eq %"class.blink::Node"* %1377, null
  br i1 %1379, label %1399, label %1380

1380:                                             ; preds = %1376
  %1381 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1377, i64 0, i32 1
  %1382 = load i32, i32* %1381, align 8
  %1383 = and i32 %1382, 48
  %1384 = icmp eq i32 %1383, 0
  br i1 %1384, label %1385, label %1399

1385:                                             ; preds = %1380
  %1386 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1378, i64 0, i32 0, i32 0, i32 0
  %1387 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1386, align 8
  %1388 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1377, i64 1, i32 2
  %1389 = bitcast %"class.blink::Member.318"* %1388 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1390 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1389, align 8
  %1391 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1390, i64 0, i32 3, i32 0, i32 0, i32 0
  %1392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1391, align 8
  %1393 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1387, i64 0, i32 3, i32 0, i32 0, i32 0
  %1394 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1393, align 8
  %1395 = icmp eq %"class.WTF::StringImpl"* %1392, %1394
  br i1 %1395, label %1396, label %1399

1396:                                             ; preds = %1385
  %1397 = tail call zeroext i1 @_ZNK5blink8AXObject25IsNameFromAuthorAttributeEv(%"class.blink::AXObject"* %3) #15
  %1398 = select i1 %1397, i32 144, i32 155
  br label %1774

1399:                                             ; preds = %1374, %1376, %1380, %1385
  %1400 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1400, label %1427, label %1401

1401:                                             ; preds = %1399
  %1402 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1403 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kAddressTagE, align 8
  %1404 = icmp eq %"class.blink::Node"* %1402, null
  br i1 %1404, label %1427, label %1405

1405:                                             ; preds = %1401
  %1406 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1402, i64 0, i32 1
  %1407 = load i32, i32* %1406, align 8
  %1408 = and i32 %1407, 48
  %1409 = icmp eq i32 %1408, 0
  br i1 %1409, label %1410, label %1427

1410:                                             ; preds = %1405
  %1411 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1403, i64 0, i32 0, i32 0, i32 0
  %1412 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1411, align 8
  %1413 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1402, i64 1, i32 2
  %1414 = bitcast %"class.blink::Member.318"* %1413 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1415 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1414, align 8
  %1416 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1415, i64 0, i32 3, i32 0, i32 0, i32 0
  %1417 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1416, align 8
  %1418 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1412, i64 0, i32 3, i32 0, i32 0, i32 0
  %1419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1418, align 8
  %1420 = icmp eq %"class.WTF::StringImpl"* %1417, %1419
  br i1 %1420, label %1421, label %1427

1421:                                             ; preds = %1410
  %1422 = bitcast %"class.blink::AXNodeObject"* %0 to i32 (%"class.blink::AXNodeObject"*)***
  %1423 = load i32 (%"class.blink::AXNodeObject"*)**, i32 (%"class.blink::AXNodeObject"*)*** %1422, align 8
  %1424 = getelementptr inbounds i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %1423, i64 162
  %1425 = load i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %1424, align 8
  %1426 = tail call i32 %1425(%"class.blink::AXNodeObject"* %0) #15
  br label %1774

1427:                                             ; preds = %1399, %1401, %1405, %1410
  %1428 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1428, label %1449, label %1429

1429:                                             ; preds = %1427
  %1430 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1431 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1430, i64 0, i32 1
  %1432 = load i32, i32* %1431, align 8
  %1433 = and i32 %1432, 48
  %1434 = icmp ne i32 %1433, 0
  %1435 = icmp eq %"class.blink::Node"* %1430, null
  %1436 = or i1 %1435, %1434
  br i1 %1436, label %1449, label %1437

1437:                                             ; preds = %1429
  %1438 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kDialogTagE, align 8
  %1439 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1438, i64 0, i32 0, i32 0, i32 0
  %1440 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1439, align 8
  %1441 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1430, i64 1, i32 2
  %1442 = bitcast %"class.blink::Member.318"* %1441 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1443 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1442, align 8
  %1444 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1443, i64 0, i32 3, i32 0, i32 0, i32 0
  %1445 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1444, align 8
  %1446 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1440, i64 0, i32 3, i32 0, i32 0, i32 0
  %1447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1446, align 8
  %1448 = icmp eq %"class.WTF::StringImpl"* %1445, %1447
  br i1 %1448, label %1774, label %1449

1449:                                             ; preds = %1427, %1429, %1437
  %1450 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1450, label %1477, label %1451

1451:                                             ; preds = %1449
  %1452 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1453 = icmp eq %"class.blink::Node"* %1452, null
  br i1 %1453, label %1477, label %1454

1454:                                             ; preds = %1451
  %1455 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1452, i64 0, i32 1
  %1456 = load i32, i32* %1455, align 8
  %1457 = and i32 %1456, 48
  %1458 = icmp eq i32 %1457, 0
  br i1 %1458, label %1459, label %1477

1459:                                             ; preds = %1454
  %1460 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kHTMLTagE, align 8
  %1461 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1460, i64 0, i32 0, i32 0, i32 0
  %1462 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1461, align 8
  %1463 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1452, i64 1, i32 2
  %1464 = bitcast %"class.blink::Member.318"* %1463 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1465 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1464, align 8
  %1466 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1465, i64 0, i32 3, i32 0, i32 0, i32 0
  %1467 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1466, align 8
  %1468 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1462, i64 0, i32 3, i32 0, i32 0, i32 0
  %1469 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1468, align 8
  %1470 = icmp eq %"class.WTF::StringImpl"* %1467, %1469
  br i1 %1470, label %1471, label %1477

1471:                                             ; preds = %1459
  %1472 = bitcast %"class.blink::AXNodeObject"* %0 to i32 (%"class.blink::AXNodeObject"*)***
  %1473 = load i32 (%"class.blink::AXNodeObject"*)**, i32 (%"class.blink::AXNodeObject"*)*** %1472, align 8
  %1474 = getelementptr inbounds i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %1473, i64 162
  %1475 = load i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %1474, align 8
  %1476 = tail call i32 %1475(%"class.blink::AXNodeObject"* %0) #15
  br label %1774

1477:                                             ; preds = %1449, %1454, %1451, %1459
  %1478 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1478, label %1499, label %1479

1479:                                             ; preds = %1477
  %1480 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1481 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1480, i64 0, i32 1
  %1482 = load i32, i32* %1481, align 8
  %1483 = and i32 %1482, 48
  %1484 = icmp ne i32 %1483, 0
  %1485 = icmp eq %"class.blink::Node"* %1480, null
  %1486 = or i1 %1485, %1484
  br i1 %1486, label %1499, label %1487

1487:                                             ; preds = %1479
  %1488 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE, align 8
  %1489 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1488, i64 0, i32 0, i32 0, i32 0
  %1490 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1489, align 8
  %1491 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1480, i64 1, i32 2
  %1492 = bitcast %"class.blink::Member.318"* %1491 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1493 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1492, align 8
  %1494 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1493, i64 0, i32 3, i32 0, i32 0, i32 0
  %1495 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1494, align 8
  %1496 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1490, i64 0, i32 3, i32 0, i32 0, i32 0
  %1497 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1496, align 8
  %1498 = icmp eq %"class.WTF::StringImpl"* %1495, %1497
  br i1 %1498, label %1774, label %1499

1499:                                             ; preds = %1477, %1479, %1487
  %1500 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1500, label %1521, label %1501

1501:                                             ; preds = %1499
  %1502 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1503 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1502, i64 0, i32 1
  %1504 = load i32, i32* %1503, align 8
  %1505 = and i32 %1504, 48
  %1506 = icmp ne i32 %1505, 0
  %1507 = icmp eq %"class.blink::Node"* %1502, null
  %1508 = or i1 %1507, %1506
  br i1 %1508, label %1521, label %1509

1509:                                             ; preds = %1501
  %1510 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kFrameTagE, align 8
  %1511 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1510, i64 0, i32 0, i32 0, i32 0
  %1512 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1511, align 8
  %1513 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1502, i64 1, i32 2
  %1514 = bitcast %"class.blink::Member.318"* %1513 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1515 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1514, align 8
  %1516 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1515, i64 0, i32 3, i32 0, i32 0, i32 0
  %1517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1516, align 8
  %1518 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1512, i64 0, i32 3, i32 0, i32 0, i32 0
  %1519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1518, align 8
  %1520 = icmp eq %"class.WTF::StringImpl"* %1517, %1519
  br i1 %1520, label %1774, label %1521

1521:                                             ; preds = %1499, %1501, %1509
  %1522 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1522, label %1547, label %1523

1523:                                             ; preds = %1521
  %1524 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1525 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHeaderTagE, align 8
  %1526 = icmp eq %"class.blink::Node"* %1524, null
  br i1 %1526, label %1547, label %1527

1527:                                             ; preds = %1523
  %1528 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1524, i64 0, i32 1
  %1529 = load i32, i32* %1528, align 8
  %1530 = and i32 %1529, 48
  %1531 = icmp eq i32 %1530, 0
  br i1 %1531, label %1532, label %1547

1532:                                             ; preds = %1527
  %1533 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1525, i64 0, i32 0, i32 0, i32 0
  %1534 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1533, align 8
  %1535 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1524, i64 1, i32 2
  %1536 = bitcast %"class.blink::Member.318"* %1535 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1537 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1536, align 8
  %1538 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1537, i64 0, i32 3, i32 0, i32 0, i32 0
  %1539 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1538, align 8
  %1540 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1534, i64 0, i32 3, i32 0, i32 0, i32 0
  %1541 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1540, align 8
  %1542 = icmp eq %"class.WTF::StringImpl"* %1539, %1541
  br i1 %1542, label %1543, label %1547

1543:                                             ; preds = %1532
  %1544 = tail call fastcc dereferenceable(24) %"class.WTF::HashSet.3148"* @_ZN5blinkL26GetLandmarkRolesNotAllowedEv()
  %1545 = tail call zeroext i1 @_ZNK5blink12AXNodeObject25IsDescendantOfElementTypeERN3WTF7HashSetINS_13QualifiedNameENS_17QualifiedNameHashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.blink::AXNodeObject"* %0, %"class.WTF::HashSet.3148"* dereferenceable(24) %1544)
  %1546 = select i1 %1545, i32 96, i32 95
  br label %1774

1547:                                             ; preds = %1521, %1523, %1527, %1532
  %1548 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1548, label %1573, label %1549

1549:                                             ; preds = %1547
  %1550 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1551 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFooterTagE, align 8
  %1552 = icmp eq %"class.blink::Node"* %1550, null
  br i1 %1552, label %1573, label %1553

1553:                                             ; preds = %1549
  %1554 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1550, i64 0, i32 1
  %1555 = load i32, i32* %1554, align 8
  %1556 = and i32 %1555, 48
  %1557 = icmp eq i32 %1556, 0
  br i1 %1557, label %1558, label %1573

1558:                                             ; preds = %1553
  %1559 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1551, i64 0, i32 0, i32 0, i32 0
  %1560 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1559, align 8
  %1561 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1550, i64 1, i32 2
  %1562 = bitcast %"class.blink::Member.318"* %1561 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1563 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1562, align 8
  %1564 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1563, i64 0, i32 3, i32 0, i32 0, i32 0
  %1565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1564, align 8
  %1566 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1560, i64 0, i32 3, i32 0, i32 0, i32 0
  %1567 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1566, align 8
  %1568 = icmp eq %"class.WTF::StringImpl"* %1565, %1567
  br i1 %1568, label %1569, label %1573

1569:                                             ; preds = %1558
  %1570 = tail call fastcc dereferenceable(24) %"class.WTF::HashSet.3148"* @_ZN5blinkL26GetLandmarkRolesNotAllowedEv()
  %1571 = tail call zeroext i1 @_ZNK5blink12AXNodeObject25IsDescendantOfElementTypeERN3WTF7HashSetINS_13QualifiedNameENS_17QualifiedNameHashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.blink::AXNodeObject"* %0, %"class.WTF::HashSet.3148"* dereferenceable(24) %1570)
  %1572 = select i1 %1571, i32 87, i32 86
  br label %1774

1573:                                             ; preds = %1547, %1549, %1553, %1558
  %1574 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1574, label %1595, label %1575

1575:                                             ; preds = %1573
  %1576 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1577 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kBlockquoteTagE, align 8
  %1578 = icmp eq %"class.blink::Node"* %1576, null
  br i1 %1578, label %1595, label %1579

1579:                                             ; preds = %1575
  %1580 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1576, i64 0, i32 1
  %1581 = load i32, i32* %1580, align 8
  %1582 = and i32 %1581, 48
  %1583 = icmp eq i32 %1582, 0
  br i1 %1583, label %1584, label %1595

1584:                                             ; preds = %1579
  %1585 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1577, i64 0, i32 0, i32 0, i32 0
  %1586 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1585, align 8
  %1587 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1576, i64 1, i32 2
  %1588 = bitcast %"class.blink::Member.318"* %1587 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1589 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1588, align 8
  %1590 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1589, i64 0, i32 3, i32 0, i32 0, i32 0
  %1591 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1590, align 8
  %1592 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1586, i64 0, i32 3, i32 0, i32 0, i32 0
  %1593 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1592, align 8
  %1594 = icmp eq %"class.WTF::StringImpl"* %1591, %1593
  br i1 %1594, label %1774, label %1595

1595:                                             ; preds = %1573, %1575, %1579, %1584
  %1596 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1596, label %1617, label %1597

1597:                                             ; preds = %1595
  %1598 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1599 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE, align 8
  %1600 = icmp eq %"class.blink::Node"* %1598, null
  br i1 %1600, label %1617, label %1601

1601:                                             ; preds = %1597
  %1602 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1598, i64 0, i32 1
  %1603 = load i32, i32* %1602, align 8
  %1604 = and i32 %1603, 48
  %1605 = icmp eq i32 %1604, 0
  br i1 %1605, label %1606, label %1617

1606:                                             ; preds = %1601
  %1607 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1599, i64 0, i32 0, i32 0, i32 0
  %1608 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1607, align 8
  %1609 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1598, i64 1, i32 2
  %1610 = bitcast %"class.blink::Member.318"* %1609 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1611 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1610, align 8
  %1612 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1611, i64 0, i32 3, i32 0, i32 0, i32 0
  %1613 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1612, align 8
  %1614 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1608, i64 0, i32 3, i32 0, i32 0, i32 0
  %1615 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1614, align 8
  %1616 = icmp eq %"class.WTF::StringImpl"* %1613, %1615
  br i1 %1616, label %1774, label %1617

1617:                                             ; preds = %1595, %1597, %1601, %1606
  %1618 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1618, label %1639, label %1619

1619:                                             ; preds = %1617
  %1620 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1621 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kFigcaptionTagE, align 8
  %1622 = icmp eq %"class.blink::Node"* %1620, null
  br i1 %1622, label %1639, label %1623

1623:                                             ; preds = %1619
  %1624 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1620, i64 0, i32 1
  %1625 = load i32, i32* %1624, align 8
  %1626 = and i32 %1625, 48
  %1627 = icmp eq i32 %1626, 0
  br i1 %1627, label %1628, label %1639

1628:                                             ; preds = %1623
  %1629 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1621, i64 0, i32 0, i32 0, i32 0
  %1630 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1629, align 8
  %1631 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1620, i64 1, i32 2
  %1632 = bitcast %"class.blink::Member.318"* %1631 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1633 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1632, align 8
  %1634 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1633, i64 0, i32 3, i32 0, i32 0, i32 0
  %1635 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1634, align 8
  %1636 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1630, i64 0, i32 3, i32 0, i32 0, i32 0
  %1637 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1636, align 8
  %1638 = icmp eq %"class.WTF::StringImpl"* %1635, %1637
  br i1 %1638, label %1774, label %1639

1639:                                             ; preds = %1617, %1619, %1623, %1628
  %1640 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1640, label %1661, label %1641

1641:                                             ; preds = %1639
  %1642 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1643 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFigureTagE, align 8
  %1644 = icmp eq %"class.blink::Node"* %1642, null
  br i1 %1644, label %1661, label %1645

1645:                                             ; preds = %1641
  %1646 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1642, i64 0, i32 1
  %1647 = load i32, i32* %1646, align 8
  %1648 = and i32 %1647, 48
  %1649 = icmp eq i32 %1648, 0
  br i1 %1649, label %1650, label %1661

1650:                                             ; preds = %1645
  %1651 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1643, i64 0, i32 0, i32 0, i32 0
  %1652 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1651, align 8
  %1653 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1642, i64 1, i32 2
  %1654 = bitcast %"class.blink::Member.318"* %1653 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1655 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1654, align 8
  %1656 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1655, i64 0, i32 3, i32 0, i32 0, i32 0
  %1657 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1656, align 8
  %1658 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1652, i64 0, i32 3, i32 0, i32 0, i32 0
  %1659 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1658, align 8
  %1660 = icmp eq %"class.WTF::StringImpl"* %1657, %1659
  br i1 %1660, label %1774, label %1661

1661:                                             ; preds = %1639, %1641, %1645, %1650
  %1662 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1662, label %1683, label %1663

1663:                                             ; preds = %1661
  %1664 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1665 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kTimeTagE, align 8
  %1666 = icmp eq %"class.blink::Node"* %1664, null
  br i1 %1666, label %1683, label %1667

1667:                                             ; preds = %1663
  %1668 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1664, i64 0, i32 1
  %1669 = load i32, i32* %1668, align 8
  %1670 = and i32 %1669, 48
  %1671 = icmp eq i32 %1670, 0
  br i1 %1671, label %1672, label %1683

1672:                                             ; preds = %1667
  %1673 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1665, i64 0, i32 0, i32 0, i32 0
  %1674 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1673, align 8
  %1675 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1664, i64 1, i32 2
  %1676 = bitcast %"class.blink::Member.318"* %1675 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1677 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1676, align 8
  %1678 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1677, i64 0, i32 3, i32 0, i32 0, i32 0
  %1679 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1678, align 8
  %1680 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1674, i64 0, i32 3, i32 0, i32 0, i32 0
  %1681 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1680, align 8
  %1682 = icmp eq %"class.WTF::StringImpl"* %1679, %1681
  br i1 %1682, label %1774, label %1683

1683:                                             ; preds = %1661, %1663, %1667, %1672
  %1684 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1684, label %1700, label %1685

1685:                                             ; preds = %1683
  %1686 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1687 = icmp eq %"class.blink::Node"* %1686, null
  br i1 %1687, label %1700, label %1688

1688:                                             ; preds = %1685
  %1689 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1686, i64 0, i32 1
  %1690 = load i32, i32* %1689, align 8
  %1691 = and i32 %1690, 48
  %1692 = icmp eq i32 %1691, 0
  br i1 %1692, label %1693, label %1700

1693:                                             ; preds = %1688
  %1694 = bitcast %"class.blink::Node"* %1686 to %"class.blink::HTMLElement"*
  %1695 = bitcast %"class.blink::Node"* %1686 to i1 (%"class.blink::HTMLElement"*)***
  %1696 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %1695, align 8
  %1697 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %1696, i64 165
  %1698 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %1697, align 8
  %1699 = tail call zeroext i1 %1698(%"class.blink::HTMLElement"* nonnull %1694) #15
  br label %1700

1700:                                             ; preds = %1683, %1685, %1688, %1693
  %1701 = phi i1 [ false, %1685 ], [ false, %1688 ], [ %1699, %1693 ], [ false, %1683 ]
  %1702 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1702, label %1705, label %1703

1703:                                             ; preds = %1700
  %1704 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  br label %1705

1705:                                             ; preds = %1700, %1703
  %1706 = phi %"class.blink::Node"* [ %1704, %1703 ], [ null, %1700 ]
  br i1 %1701, label %1707, label %1727

1707:                                             ; preds = %1705
  %1708 = icmp eq %"class.blink::Node"* %1706, null
  br i1 %1708, label %1774, label %1709

1709:                                             ; preds = %1707
  %1710 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1706, i64 0, i32 1
  %1711 = load i32, i32* %1710, align 8
  %1712 = and i32 %1711, 48
  %1713 = icmp eq i32 %1712, 0
  br i1 %1713, label %1714, label %1774

1714:                                             ; preds = %1709
  %1715 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kEmbedTagE, align 8
  %1716 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1715, i64 0, i32 0, i32 0, i32 0
  %1717 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1716, align 8
  %1718 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1706, i64 1, i32 2
  %1719 = bitcast %"class.blink::Member.318"* %1718 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1720 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1719, align 8
  %1721 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1720, i64 0, i32 3, i32 0, i32 0, i32 0
  %1722 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1721, align 8
  %1723 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1717, i64 0, i32 3, i32 0, i32 0, i32 0
  %1724 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1723, align 8
  %1725 = icmp eq %"class.WTF::StringImpl"* %1722, %1724
  %1726 = select i1 %1725, i32 81, i32 137
  ret i32 %1726

1727:                                             ; preds = %1705
  %1728 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1706, i64 0, i32 1
  %1729 = load i32, i32* %1728, align 8
  %1730 = and i32 %1729, 48
  %1731 = icmp ne i32 %1730, 0
  %1732 = icmp eq %"class.blink::Node"* %1706, null
  %1733 = or i1 %1732, %1731
  br i1 %1733, label %1746, label %1734

1734:                                             ; preds = %1727
  %1735 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kHrTagE, align 8
  %1736 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1735, i64 0, i32 0, i32 0, i32 0
  %1737 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1736, align 8
  %1738 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1706, i64 1, i32 2
  %1739 = bitcast %"class.blink::Member.318"* %1738 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1740 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1739, align 8
  %1741 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1740, i64 0, i32 3, i32 0, i32 0, i32 0
  %1742 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1741, align 8
  %1743 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1737, i64 0, i32 3, i32 0, i32 0, i32 0
  %1744 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1743, align 8
  %1745 = icmp eq %"class.WTF::StringImpl"* %1742, %1744
  br i1 %1745, label %1774, label %1746

1746:                                             ; preds = %1727, %1734
  %1747 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %1747, label %1768, label %1748

1748:                                             ; preds = %1746
  %1749 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %1750 = icmp eq %"class.blink::Node"* %1749, null
  br i1 %1750, label %1768, label %1751

1751:                                             ; preds = %1748
  %1752 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1749, i64 0, i32 1
  %1753 = load i32, i32* %1752, align 8
  %1754 = and i32 %1753, 48
  %1755 = icmp eq i32 %1754, 0
  br i1 %1755, label %1756, label %1768

1756:                                             ; preds = %1751
  %1757 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %1758 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1757, i64 0, i32 0, i32 0, i32 0
  %1759 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1758, align 8
  %1760 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1749, i64 1, i32 2
  %1761 = bitcast %"class.blink::Member.318"* %1760 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1762 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1761, align 8
  %1763 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1762, i64 0, i32 3, i32 0, i32 0, i32 0
  %1764 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1763, align 8
  %1765 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1759, i64 0, i32 3, i32 0, i32 0, i32 0
  %1766 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1765, align 8
  %1767 = icmp eq %"class.WTF::StringImpl"* %1764, %1766
  br i1 %1767, label %1774, label %1768

1768:                                             ; preds = %1746, %1751, %1748, %1756
  %1769 = bitcast %"class.blink::AXNodeObject"* %0 to i32 (%"class.blink::AXNodeObject"*)***
  %1770 = load i32 (%"class.blink::AXNodeObject"*)**, i32 (%"class.blink::AXNodeObject"*)*** %1769, align 8
  %1771 = getelementptr inbounds i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %1770, i64 162
  %1772 = load i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %1771, align 8
  %1773 = tail call i32 %1772(%"class.blink::AXNodeObject"* %0) #15
  br label %1774

1774:                                             ; preds = %464, %141, %1709, %1707, %563, %478, %527, %480, %485, %505, %500, %495, %490, %510, %515, %520, %529, %535, %540, %545, %558, %553, %550, %619, %623, %591, %1756, %1734, %1672, %1650, %1628, %1606, %1584, %1569, %1543, %1487, %1509, %1437, %1363, %1341, %1319, %1297, %1275, %1253, %1231, %1209, %1187, %1165, %1143, %1121, %1098, %1055, %1077, %1043, %1000, %978, %955, %933, %911, %889, %867, %845, %823, %801, %779, %757, %691, %713, %735, %650, %638, %329, %309, %296, %223, %186, %157, %125, %113, %1768, %1471, %1421, %1396, %675, %427, %389, %358, %211, %101, %9
  %1775 = phi i32 [ %112, %101 ], [ %212, %211 ], [ %359, %358 ], [ %390, %389 ], [ %428, %427 ], [ %680, %675 ], [ %1398, %1396 ], [ %1426, %1421 ], [ %1476, %1471 ], [ %1773, %1768 ], [ %596, %591 ], [ %14, %9 ], [ 159, %113 ], [ 100, %125 ], [ 111, %141 ], [ 139, %157 ], [ %188, %186 ], [ 35, %223 ], [ 89, %309 ], [ 38, %296 ], [ %335, %329 ], [ 171, %638 ], [ 97, %650 ], [ 112, %735 ], [ 112, %713 ], [ 112, %691 ], [ 130, %757 ], [ 141, %779 ], [ 160, %801 ], [ 134, %823 ], [ 105, %845 ], [ 109, %867 ], [ 149, %889 ], [ 31, %911 ], [ 7, %933 ], [ 183, %955 ], [ 32, %978 ], [ 33, %1000 ], [ 122, %1043 ], [ 150, %1077 ], [ 150, %1055 ], [ 88, %1098 ], [ 1, %1121 ], [ 6, %1143 ], [ 17, %1165 ], [ 82, %1187 ], [ 161, %1209 ], [ 25, %1231 ], [ 26, %1253 ], [ 119, %1275 ], [ 120, %1297 ], [ 131, %1319 ], [ 23, %1341 ], [ 140, %1363 ], [ 36, %1437 ], [ 98, %1509 ], [ 98, %1487 ], [ %1546, %1543 ], [ %1572, %1569 ], [ 9, %1584 ], [ 12, %1606 ], [ 84, %1628 ], [ 85, %1650 ], [ 173, %1672 ], [ 158, %1734 ], [ 94, %1756 ], [ 114, %619 ], [ %627, %623 ], [ %568, %563 ], [ 10, %550 ], [ 10, %553 ], [ 10, %558 ], [ 103, %545 ], [ 18, %540 ], [ 154, %535 ], [ 156, %529 ], [ 157, %520 ], [ 142, %515 ], [ 10, %510 ], [ 29, %490 ], [ 29, %495 ], [ 29, %500 ], [ 29, %505 ], [ 28, %485 ], [ 15, %480 ], [ 172, %464 ], [ %528, %527 ], [ %479, %478 ], [ 137, %1707 ], [ 137, %1709 ]
  ret i32 %1775
}

declare i32 @_ZNK5blink8AXObject14ButtonRoleTypeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.blink::HTMLDataListElement"* @_ZNK5blink16HTMLInputElement8DataListEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLInputElement12IsTextButtonEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLSelectElement"* @_ZNK5blink17HTMLOptionElement18OwnerSelectElementEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject12HeadingLevelEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %4, label %77, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %77, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %3) #15
  %11 = icmp eq i32 %10, 97
  br i1 %11, label %12, label %21

12:                                               ; preds = %9
  %13 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #15
  store i32 -1431655766, i32* %2, align 4
  %14 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_15AOMUIntPropertyERj(%"class.blink::AXObject"* %3, i32 2, i32* nonnull dereferenceable(4) %2) #15
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = load i32, i32* %2, align 4
  %17 = add i32 %16, -1
  %18 = icmp ult i32 %17, 9
  br i1 %18, label %20, label %19

19:                                               ; preds = %12, %15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  br label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #15
  br label %77

21:                                               ; preds = %19, %9
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 48
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %77

26:                                               ; preds = %21
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH1TagE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 2
  %31 = bitcast %"class.blink::Member.318"* %30 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br i1 %37, label %77, label %38

38:                                               ; preds = %26
  %39 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH2TagE, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %34, %43
  br i1 %44, label %77, label %45

45:                                               ; preds = %38
  %46 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH3TagE, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %34, %50
  br i1 %51, label %77, label %52

52:                                               ; preds = %45
  %53 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH4TagE, align 8
  %54 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %34, %57
  br i1 %58, label %77, label %59

59:                                               ; preds = %52
  %60 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH5TagE, align 8
  %61 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %34, %64
  br i1 %65, label %77, label %66

66:                                               ; preds = %59
  %67 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH6TagE, align 8
  %68 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %34, %71
  br i1 %72, label %77, label %73

73:                                               ; preds = %66
  %74 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %3) #15
  %75 = icmp eq i32 %74, 97
  %76 = select i1 %75, i32 2, i32 0
  br label %77

77:                                               ; preds = %21, %1, %20, %26, %38, %45, %52, %59, %66, %73, %5
  %78 = phi i32 [ %16, %20 ], [ 0, %5 ], [ 0, %21 ], [ 1, %26 ], [ 2, %38 ], [ 3, %45 ], [ 4, %52 ], [ 5, %59 ], [ 6, %66 ], [ %76, %73 ], [ 0, %1 ]
  ret i32 %78
}

declare zeroext i1 @_ZNK5blink8AXObject25IsNameFromAuthorAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(24) %"class.WTF::HashSet.3148"* @_ZN5blinkL26GetLandmarkRolesNotAllowedEv() unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !4

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed) #15
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed) #15
  br label %7

7:                                                ; preds = %3, %6, %0
  %8 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %31

10:                                               ; preds = %7
  %11 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kArticleTagE, align 8
  %12 = tail call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3149"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to %"class.WTF::HashTable.3149"*), %"class.blink::HTMLQualifiedName"* dereferenceable(8) %11, %"class.blink::HTMLQualifiedName"* dereferenceable(8) %11) #15
  %13 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAsideTagE, align 8
  %14 = tail call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3149"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to %"class.WTF::HashTable.3149"*), %"class.blink::HTMLQualifiedName"* dereferenceable(8) %13, %"class.blink::HTMLQualifiedName"* dereferenceable(8) %13) #15
  %15 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kNavTagE, align 8
  %16 = tail call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3149"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to %"class.WTF::HashTable.3149"*), %"class.blink::HTMLQualifiedName"* dereferenceable(8) %15, %"class.blink::HTMLQualifiedName"* dereferenceable(8) %15) #15
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSectionTagE, align 8
  %18 = tail call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3149"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to %"class.WTF::HashTable.3149"*), %"class.blink::HTMLQualifiedName"* dereferenceable(8) %17, %"class.blink::HTMLQualifiedName"* dereferenceable(8) %17) #15
  %19 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kBlockquoteTagE, align 8
  %20 = tail call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3149"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to %"class.WTF::HashTable.3149"*), %"class.blink::HTMLQualifiedName"* dereferenceable(8) %19, %"class.blink::HTMLQualifiedName"* dereferenceable(8) %19) #15
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kDetailsTagE, align 8
  %22 = tail call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3149"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to %"class.WTF::HashTable.3149"*), %"class.blink::HTMLQualifiedName"* dereferenceable(8) %21, %"class.blink::HTMLQualifiedName"* dereferenceable(8) %21) #15
  %23 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %24 = tail call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3149"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to %"class.WTF::HashTable.3149"*), %"class.blink::HTMLQualifiedName"* dereferenceable(8) %23, %"class.blink::HTMLQualifiedName"* dereferenceable(8) %23) #15
  %25 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFigureTagE, align 8
  %26 = tail call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3149"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to %"class.WTF::HashTable.3149"*), %"class.blink::HTMLQualifiedName"* dereferenceable(8) %25, %"class.blink::HTMLQualifiedName"* dereferenceable(8) %25) #15
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %28 = tail call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3149"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to %"class.WTF::HashTable.3149"*), %"class.blink::HTMLQualifiedName"* dereferenceable(8) %27, %"class.blink::HTMLQualifiedName"* dereferenceable(8) %27) #15
  %29 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMainTagE, align 8
  %30 = tail call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3149"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to %"class.WTF::HashTable.3149"*), %"class.blink::HTMLQualifiedName"* dereferenceable(8) %29, %"class.blink::HTMLQualifiedName"* dereferenceable(8) %29) #15
  br label %31

31:                                               ; preds = %10, %7
  ret %"class.WTF::HashSet.3148"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26GetLandmarkRolesNotAllowedEvE28s_landmark_roles_not_allowed to %"class.WTF::HashSet.3148"*)
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject10IsFieldsetEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %25, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.318"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br label %25

25:                                               ; preds = %1, %4, %8, %13
  %26 = phi i1 [ false, %4 ], [ false, %8 ], [ %24, %13 ], [ false, %1 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink12AXNodeObject26DetermineAccessibilityRoleEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %16, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::AXNodeObject"* %0 to i32 (%"class.blink::AXNodeObject"*)***
  %6 = load i32 (%"class.blink::AXNodeObject"*)**, i32 (%"class.blink::AXNodeObject"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %6, i64 159
  %8 = load i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::AXNodeObject"* %0) #15
  %10 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 1
  store i32 %9, i32* %10, align 8
  %11 = tail call i32 @_ZNK5blink8AXObject26DetermineAriaRoleAttributeEv(%"class.blink::AXObject"* %2) #15
  %12 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  store i32 %11, i32* %12, align 4
  %13 = icmp eq i32 %11, 182
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = load i32, i32* %10, align 8
  br label %16

16:                                               ; preds = %14, %4, %1
  %17 = phi i32 [ 182, %1 ], [ %15, %14 ], [ %11, %4 ]
  ret i32 %17
}

declare i32 @_ZNK5blink8AXObject26DetermineAriaRoleAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12AXNodeObject36AccessibilityChildrenFromAOMPropertyENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32, %"class.blink::HeapVector.2999"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::HeapVector.365", align 8
  %5 = alloca %"class.blink::AXObject"*, align 8
  %6 = bitcast %"class.blink::HeapVector.365"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #15
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %8 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEE(%"class.blink::AXObject"* %7, i32 %1, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %4) #15
  br i1 %8, label %9, label %60

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %13 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %12, align 8
  %14 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %10, align 8
  %15 = load i32, i32* %11, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %14, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %60, label %19

19:                                               ; preds = %9
  %20 = bitcast %"class.blink::AXObject"** %5 to i8*
  %21 = and i32 %1, -5
  %22 = icmp ne i32 %21, 0
  %23 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.blink::AXObject"** %5 to i64*
  %27 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %2, i64 0, i32 0
  br label %28

28:                                               ; preds = %19, %57
  %29 = phi %"class.blink::Member.343"* [ %14, %19 ], [ %58, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %5, align 8
  %30 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::Element"*, %"class.blink::Element"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %31, i64 0, i32 0, i32 0
  %33 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %13, %"class.blink::Node"* %32) #15
  store %"class.blink::AXObject"* %33, %"class.blink::AXObject"** %5, align 8
  %34 = icmp eq %"class.blink::AXObject"* %33, null
  br i1 %34, label %57, label %35

35:                                               ; preds = %28
  %36 = call zeroext i1 @_ZNK5blink8AXObject22AccessibilityIsIgnoredEv(%"class.blink::AXObject"* nonnull %33) #15
  %37 = and i1 %22, %36
  br i1 %37, label %57, label %38

38:                                               ; preds = %35
  %39 = load i32, i32* %23, align 4
  %40 = load i32, i32* %24, align 8
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %56, label %42, !prof !3

42:                                               ; preds = %38
  %43 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %25, align 8
  %44 = zext i32 %39 to i64
  %45 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %43, i64 %44
  %46 = load i64, i64* %26, align 8
  %47 = bitcast %"class.blink::Member.2997"* %45 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = inttoptr i64 %46 to i8*
  %52 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #15
  br label %53

53:                                               ; preds = %50, %42
  %54 = load i32, i32* %23, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %23, align 4
  br label %57

56:                                               ; preds = %38
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3002"* %27, %"class.blink::AXObject"** nonnull dereferenceable(8) %5) #15
  br label %57

57:                                               ; preds = %35, %28, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  %58 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %29, i64 1
  %59 = icmp eq %"class.blink::Member.343"* %58, %17
  br i1 %59, label %60, label %28

60:                                               ; preds = %57, %9, %3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret void
}

declare zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEE(%"class.blink::AXObject"*, i32, %"class.blink::HeapVector.365"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject22AccessibilityIsIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink12AXNodeObject22MenuItemElementForMenuEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 123
  br i1 %7, label %8, label %90

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 8) #15
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %10 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  br label %14

14:                                               ; preds = %8, %11
  %15 = phi %"class.blink::Node"* [ %13, %11 ], [ null, %8 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = call %"class.blink::ContainerNode"* @_ZN5blink26LayoutTreeBuilderTraversal6ParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %15) #15
  %19 = icmp eq %"class.blink::ContainerNode"* %18, null
  br i1 %19, label %74, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0
  %22 = call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %21) #15
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %74, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.WTF::StringView"* %2 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = bitcast %"class.WTF::StringView"* %2 to i64*
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %3 to i8*
  %32 = icmp eq %"class.WTF::StringImpl"* %17, null
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %37 = bitcast i8** %36 to %"class.WTF::StringImpl"**
  %38 = bitcast %"class.WTF::StringView"* %3 to i64*
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %40

40:                                               ; preds = %69, %24
  %41 = phi %"class.blink::Node"* [ %22, %24 ], [ %70, %69 ]
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 12
  %45 = icmp ne i32 %44, 0
  %46 = icmp eq %"class.blink::Node"* %41, null
  %47 = or i1 %46, %45
  br i1 %47, label %69, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_17AOMStringPropertyE(%"class.blink::Element"* nonnull %49, i32 13) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #15
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  store i8* null, i8** %27, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %55, i64* %29, align 8
  br label %60

56:                                               ; preds = %48
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %26, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %28, align 8
  br label %60

60:                                               ; preds = %56, %54
  %61 = phi i32 [ %58, %56 ], [ 0, %54 ]
  store i32 %61, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  br i1 %32, label %62, label %64

62:                                               ; preds = %60
  store i8* null, i8** %36, align 8
  %63 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %63, i64* %38, align 8
  br label %66

64:                                               ; preds = %60
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %33, align 8
  %65 = load i32, i32* %34, align 4
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %37, align 8
  br label %66

66:                                               ; preds = %64, %62
  %67 = phi i32 [ %65, %64 ], [ 0, %62 ]
  store i32 %67, i32* %39, align 8
  %68 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #15
  br i1 %68, label %72, label %69

69:                                               ; preds = %66, %40
  %70 = call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal11NextSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %41) #15
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %74, label %40

72:                                               ; preds = %66
  %73 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  br label %74

74:                                               ; preds = %69, %72, %20, %14
  %75 = phi %"class.blink::Element"* [ null, %14 ], [ null, %20 ], [ %73, %72 ], [ null, %69 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #15
  br label %90

90:                                               ; preds = %89, %86, %74, %1
  %91 = phi %"class.blink::Element"* [ null, %1 ], [ %75, %74 ], [ %75, %86 ], [ %75, %89 ]
  ret %"class.blink::Element"* %91
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink12AXNodeObject19MouseButtonListenerEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %62, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %62, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %8
  %14 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %6) #15
  %15 = icmp eq %"class.blink::ContainerNode"* %14, null
  br i1 %15, label %62, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %62

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0
  br label %23

23:                                               ; preds = %21, %8
  %24 = phi %"class.blink::Node"* [ %6, %8 ], [ %22, %21 ]
  %25 = bitcast %"class.blink::Node"* %24 to %"class.blink::Element"*
  br label %26

26:                                               ; preds = %56, %23
  %27 = phi %"class.blink::Element"* [ %25, %23 ], [ %61, %56 ]
  %28 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = tail call dereferenceable(16) %"class.WTF::Vector.284"* @_ZN5blink10event_util21MouseButtonEventTypesEv() #15
  %30 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %29, i64 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %52, label %37

37:                                               ; preds = %26
  %38 = bitcast %"class.blink::Element"* %27 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  br label %39

39:                                               ; preds = %49, %37
  %40 = phi %"class.WTF::AtomicString"* [ %31, %37 ], [ %50, %49 ]
  %41 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %38, align 8
  %42 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %41, i64 25
  %43 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %42, align 8
  %44 = tail call %"class.blink::EventTargetData"* %43(%"class.blink::EventTarget"* %28) #15
  %45 = icmp eq %"class.blink::EventTargetData"* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %44, i64 0, i32 0
  %48 = tail call zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"* %47, %"class.WTF::AtomicString"* dereferenceable(8) %40) #15
  br i1 %48, label %62, label %49

49:                                               ; preds = %46, %39
  %50 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %40, i64 1
  %51 = icmp eq %"class.WTF::AtomicString"* %50, %35
  br i1 %51, label %52, label %39

52:                                               ; preds = %49, %26
  %53 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %27, i64 0, i32 0, i32 0
  %54 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %53) #15
  %55 = icmp eq %"class.blink::ContainerNode"* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %54, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 12
  %60 = icmp eq i32 %59, 0
  %61 = bitcast %"class.blink::ContainerNode"* %54 to %"class.blink::Element"*
  br i1 %60, label %26, label %62

62:                                               ; preds = %56, %52, %46, %13, %16, %1, %4
  %63 = phi %"class.blink::Element"* [ null, %4 ], [ null, %1 ], [ null, %16 ], [ null, %13 ], [ %27, %46 ], [ null, %52 ], [ null, %56 ]
  ret %"class.blink::Element"* %63
}

declare dereferenceable(16) %"class.WTF::Vector.284"* @_ZN5blink10event_util21MouseButtonEventTypesEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject4InitEPNS_8AXObjectE(%"class.blink::AXNodeObject"*, %"class.blink::AXObject"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  tail call void @_ZN5blink8AXObject4InitEPS0_(%"class.blink::AXObject"* %3, %"class.blink::AXObject"* %1) #15
  ret void
}

declare void @_ZN5blink8AXObject4InitEPS0_(%"class.blink::AXObject"*, %"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject6DetachEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  tail call void @_ZN5blink8AXObject6DetachEv(%"class.blink::AXObject"* %2) #15
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.318"* %3 to i64*
  store atomic i64 0, i64* %4 monotonic, align 8
  ret void
}

declare void @_ZN5blink8AXObject6DetachEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject14IsAXNodeObjectEv(%"class.blink::AXNodeObject"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject9IsControlEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %24, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %15 = bitcast %"class.blink::Node"* %6 to i1 (%"class.blink::Element"*)***
  %16 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %16, i64 124
  %18 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::Element"* nonnull %14) #15
  br i1 %19, label %24, label %20

20:                                               ; preds = %8, %13
  %21 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = tail call zeroext i1 @_ZN5blink8AXObject13IsARIAControlEN2ax5mojom4RoleE(i32 %22) #15
  br label %24

24:                                               ; preds = %1, %13, %20, %4
  %25 = phi i1 [ false, %4 ], [ true, %13 ], [ %23, %20 ], [ false, %1 ]
  ret i1 %25
}

declare zeroext i1 @_ZN5blink8AXObject13IsARIAControlEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject19IsAutofillAvailableEv(%"class.blink::AXNodeObject"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = tail call i32 @_ZNK5blink17AXObjectCacheImpl16GetAutofillStateEj(%"class.blink::AXObjectCacheImpl"* %3, i32 %5) #15
  %7 = icmp eq i32 %6, 1
  ret i1 %7
}

declare i32 @_ZNK5blink17AXObjectCacheImpl16GetAutofillStateEj(%"class.blink::AXObjectCacheImpl"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject9IsDefaultEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %21, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::AXNodeObject"* %0 to i32 (%"class.blink::AXNodeObject"*)***
  %6 = load i32 (%"class.blink::AXNodeObject"*)**, i32 (%"class.blink::AXNodeObject"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %6, i64 100
  %8 = load i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %7, align 8
  %9 = tail call i32 %8(%"class.blink::AXNodeObject"* %0) #15
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %21, label %11

11:                                               ; preds = %4
  %12 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #15
  %13 = icmp eq i32 %12, 10
  br i1 %13, label %14, label %21

14:                                               ; preds = %11
  %15 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %2) #15
  %16 = bitcast %"class.blink::Element"* %15 to i1 (%"class.blink::Element"*)***
  %17 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %17, i64 114
  %19 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::Element"* %15) #15
  br label %21

21:                                               ; preds = %4, %11, %1, %14
  %22 = phi i1 [ %20, %14 ], [ false, %1 ], [ false, %11 ], [ false, %4 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject9IsHoveredEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %15, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = trunc i32 %10 to i8
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = tail call zeroext i1 @_ZNK5blink4Node26IsUserActionElementHoveredEv(%"class.blink::Node"* nonnull %6) #15
  br label %15

15:                                               ; preds = %1, %4, %8, %13
  %16 = phi i1 [ false, %8 ], [ %14, %13 ], [ false, %4 ], [ false, %1 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject13IsImageButtonEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %65, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %65, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %34

13:                                               ; preds = %8
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.318"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %63, label %25

25:                                               ; preds = %13
  %26 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLElement"*
  %27 = bitcast %"class.blink::Node"* %6 to i1 (%"class.blink::HTMLElement"*)***
  %28 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %28, i64 165
  %30 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::HTMLElement"* nonnull %26) #15
  br i1 %31, label %63, label %32

32:                                               ; preds = %25
  %33 = load i32, i32* %9, align 8
  br label %34

34:                                               ; preds = %32, %8
  %35 = phi i32 [ %33, %32 ], [ %10, %8 ]
  %36 = and i32 %35, 48
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %65

38:                                               ; preds = %34
  %39 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %43 = bitcast %"class.blink::Member.318"* %42 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %46, %48
  br i1 %49, label %50, label %65

50:                                               ; preds = %38
  %51 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLFormControlElement"*
  %52 = bitcast %"class.blink::Node"* %6 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %53 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %53, i64 171
  %55 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %54, align 8
  %56 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %55(%"class.blink::HTMLFormControlElement"* nonnull %51) #15
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %56, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %57, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %59, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %13, %25, %50
  %64 = tail call zeroext i1 @_ZNK5blink8AXObject8IsButtonEv(%"class.blink::AXObject"* %2) #15
  br label %65

65:                                               ; preds = %1, %4, %34, %38, %63, %50
  %66 = phi i1 [ false, %50 ], [ %64, %63 ], [ false, %38 ], [ false, %34 ], [ false, %4 ], [ false, %1 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject13IsNativeImageEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %63, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %63, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %34

13:                                               ; preds = %8
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.318"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %63, label %25

25:                                               ; preds = %13
  %26 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLElement"*
  %27 = bitcast %"class.blink::Node"* %6 to i1 (%"class.blink::HTMLElement"*)***
  %28 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %28, i64 165
  %30 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::HTMLElement"* nonnull %26) #15
  br i1 %31, label %63, label %32

32:                                               ; preds = %25
  %33 = load i32, i32* %9, align 8
  br label %34

34:                                               ; preds = %32, %8
  %35 = phi i32 [ %33, %32 ], [ %10, %8 ]
  %36 = and i32 %35, 48
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %63

38:                                               ; preds = %34
  %39 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %43 = bitcast %"class.blink::Member.318"* %42 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %46, %48
  br i1 %49, label %50, label %63

50:                                               ; preds = %38
  %51 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLFormControlElement"*
  %52 = bitcast %"class.blink::Node"* %6 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %53 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %53, i64 171
  %55 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %54, align 8
  %56 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %55(%"class.blink::HTMLFormControlElement"* nonnull %51) #15
  %57 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %56, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %57, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %59, %61
  br label %63

63:                                               ; preds = %38, %34, %4, %25, %13, %1, %50
  %64 = phi i1 [ %62, %50 ], [ false, %38 ], [ false, %34 ], [ false, %4 ], [ true, %25 ], [ true, %13 ], [ false, %1 ]
  ret i1 %64
}

declare zeroext i1 @_ZNK5blink8AXObject8IsButtonEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject12IsInputImageEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %41, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %41, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %41

13:                                               ; preds = %8
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.318"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %41

25:                                               ; preds = %13
  %26 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #15
  %27 = icmp eq i32 %26, 10
  br i1 %27, label %28, label %41

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLFormControlElement"*
  %30 = bitcast %"class.blink::Node"* %6 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %31 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %31, i64 171
  %33 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %32, align 8
  %34 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %33(%"class.blink::HTMLFormControlElement"* nonnull %29) #15
  %35 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br label %41

41:                                               ; preds = %13, %1, %4, %8, %25, %28
  %42 = phi i1 [ %40, %28 ], [ false, %25 ], [ false, %13 ], [ false, %8 ], [ false, %4 ], [ false, %1 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject8IsLoadedEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %3 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %3, i64 126
  %5 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %4, align 8
  %6 = tail call %"class.blink::Document"* %5(%"class.blink::AXNodeObject"* %0) #15
  %7 = icmp eq %"class.blink::Document"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %9, i64 126
  %11 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %10, align 8
  %12 = tail call %"class.blink::Document"* %11(%"class.blink::AXNodeObject"* %0) #15
  %13 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %12, i64 0, i32 15, i32 0, i32 0
  %14 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %13, align 8
  %15 = icmp eq %"class.blink::DocumentParser"* %14, null
  br label %16

16:                                               ; preds = %1, %8
  %17 = phi i1 [ %15, %8 ], [ false, %1 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject17IsMultiSelectableEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %3) #15
  switch i32 %4, label %13 [
    i32 93, label %5
    i32 180, label %5
    i32 179, label %5
    i32 113, label %5
    i32 166, label %5
  ]

5:                                                ; preds = %1, %1, %1, %1, %1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #15
  store i8 0, i8* %2, align 1
  %6 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %7 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %7, i64 6
  %9 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %8, align 8
  %10 = call zeroext i1 %9(%"class.blink::AXObject"* %3, i32 7, i8* nonnull dereferenceable(1) %2) #15
  %11 = load i8, i8* %2, align 1
  %12 = icmp ne i8 %11, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #15
  br i1 %10, label %41, label %13

13:                                               ; preds = %1, %5
  %14 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %14, label %41, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %41, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 48
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %41

24:                                               ; preds = %19
  %25 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 1, i32 2
  %29 = bitcast %"class.blink::Member.318"* %28 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %32, %34
  br i1 %35, label %36, label %41

36:                                               ; preds = %24
  %37 = bitcast %"class.blink::Node"* %17 to %"class.blink::HTMLSelectElement"*
  %38 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %37, i64 0, i32 10
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp ne i8 %39, 0
  br label %41

41:                                               ; preds = %24, %13, %15, %19, %36, %5
  %42 = phi i1 [ %12, %5 ], [ %40, %36 ], [ false, %24 ], [ false, %19 ], [ false, %15 ], [ false, %13 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject11IsOffScreenEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %9

9:                                                ; preds = %4, %6
  %10 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %4 ]
  %11 = tail call %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %10) #15
  %12 = icmp ne %"class.blink::Element"* %11, null
  br label %13

13:                                               ; preds = %1, %9
  %14 = phi i1 [ %12, %9 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject19IsProgressIndicatorEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #15
  %4 = icmp eq i32 %3, 141
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject8IsSliderEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #15
  %4 = icmp eq i32 %3, 156
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject12IsSpinButtonEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #15
  %4 = icmp eq i32 %3, 157
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject14IsNativeSliderEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %38, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %38, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %38

13:                                               ; preds = %8
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.318"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %38

25:                                               ; preds = %13
  %26 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLFormControlElement"*
  %27 = bitcast %"class.blink::Node"* %6 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %28 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %28, i64 171
  %30 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %29, align 8
  %31 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %30(%"class.blink::HTMLFormControlElement"* nonnull %26) #15
  %32 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRangeE, align 8
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br label %38

38:                                               ; preds = %13, %1, %4, %8, %25
  %39 = phi i1 [ %37, %25 ], [ false, %13 ], [ false, %8 ], [ false, %4 ], [ false, %1 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject18IsNativeSpinButtonEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %38, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %38, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %38

13:                                               ; preds = %8
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.318"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %38

25:                                               ; preds = %13
  %26 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLFormControlElement"*
  %27 = bitcast %"class.blink::Node"* %6 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %28 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %28, i64 171
  %30 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %29, align 8
  %31 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %30(%"class.blink::HTMLFormControlElement"* nonnull %26) #15
  %32 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kNumberE, align 8
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br label %38

38:                                               ; preds = %13, %1, %4, %8, %25
  %39 = phi i1 [ %37, %25 ], [ false, %13 ], [ false, %8 ], [ false, %4 ], [ false, %1 ]
  ret i1 %39
}

declare zeroext i1 @_ZNK5blink8AXObject11IsTextFieldEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject11IsClickableEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject9IsFocusedEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %3 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %3, i64 126
  %5 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %4, align 8
  %6 = tail call %"class.blink::Document"* %5(%"class.blink::AXNodeObject"* %0) #15
  %7 = icmp eq %"class.blink::Document"* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %10 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %9) #15
  %11 = icmp eq i32 %10, 145
  br i1 %11, label %12, label %21

12:                                               ; preds = %8
  %13 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %14 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %13, i64 126
  %15 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %14, align 8
  %16 = tail call %"class.blink::Document"* %15(%"class.blink::AXNodeObject"* %0) #15
  %17 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %16) #15
  %18 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %17, i64 0, i32 14, i32 0, i32 0
  %19 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %18, align 8
  %20 = tail call zeroext i1 @_ZNK5blink14FrameSelection23FrameIsFocusedAndActiveEv(%"class.blink::FrameSelection"* %19) #15
  br i1 %20, label %32, label %21

21:                                               ; preds = %12, %8
  %22 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %23 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %22, i64 126
  %24 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %23, align 8
  %25 = tail call %"class.blink::Document"* %24(%"class.blink::AXNodeObject"* %0) #15
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 43, i32 0, i32 0
  %27 = load %"class.blink::Element"*, %"class.blink::Element"** %26, align 8
  %28 = icmp eq %"class.blink::Element"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %21
  %30 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %9) #15
  %31 = icmp eq %"class.blink::Element"* %27, %30
  br label %32

32:                                               ; preds = %29, %21, %12, %1
  %33 = phi i1 [ false, %1 ], [ true, %12 ], [ false, %21 ], [ %31, %29 ]
  ret i1 %33
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14FrameSelection23FrameIsFocusedAndActiveEv(%"class.blink::FrameSelection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject9IsGrabbedEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %4 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %4, i64 111
  %6 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::AXNodeObject"* %0) #15
  br i1 %7, label %8, label %35

8:                                                ; preds = %1
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaGrabbedAttrE, align 8
  %10 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)***
  %11 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %11, i64 131
  %13 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %12, align 8
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %13(%"class.blink::AXNodeObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %9) #15
  %15 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #15
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %21, i64* %22, align 8
  br label %30

23:                                               ; preds = %8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %29, align 8
  br label %30

30:                                               ; preds = %19, %23
  %31 = phi i32 [ %26, %23 ], [ 0, %19 ]
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %31, i32* %32, align 8
  %33 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.5)
  %34 = select i1 %33, i32 2, i32 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #15
  br label %35

35:                                               ; preds = %1, %30
  %36 = phi i32 [ %34, %30 ], [ 0, %1 ]
  ret i32 %36
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject10IsSelectedEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %4, label %39, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %39, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %11, i64 125
  %13 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::LayoutObject"* %13(%"class.blink::AXObject"* %3) #15
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %9
  %17 = tail call zeroext i1 @_ZNK5blink8AXObject11IsSubWidgetEv(%"class.blink::AXObject"* %3) #15
  br i1 %17, label %18, label %39

18:                                               ; preds = %16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #15
  store i8 -86, i8* %2, align 1
  %19 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %20 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %20, i64 6
  %22 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %21, align 8
  %23 = call zeroext i1 %22(%"class.blink::AXObject"* %3, i32 10, i8* nonnull dereferenceable(1) %2) #15
  br i1 %23, label %24, label %28

24:                                               ; preds = %18
  %25 = load i8, i8* %2, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, i32 1, i32 2
  br label %37

28:                                               ; preds = %18
  %29 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %3) #15
  switch i32 %29, label %37 [
    i32 114, label %30
    i32 128, label %30
    i32 165, label %30
  ]

30:                                               ; preds = %28, %28, %28
  %31 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %32 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %32, i64 46
  %34 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %33, align 8
  %35 = call zeroext i1 %34(%"class.blink::AXNodeObject"* %0) #15
  %36 = select i1 %35, i32 2, i32 1
  br label %37

37:                                               ; preds = %28, %30, %24
  %38 = phi i32 [ %27, %24 ], [ %36, %30 ], [ 0, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #15
  br label %39

39:                                               ; preds = %1, %16, %5, %9, %37
  %40 = phi i32 [ %38, %37 ], [ 0, %9 ], [ 0, %5 ], [ 0, %16 ], [ 0, %1 ]
  ret i32 %40
}

declare zeroext i1 @_ZNK5blink8AXObject11IsSubWidgetEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject26SelectionShouldFollowFocusEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #15
  %4 = add i32 %3, -114
  %5 = icmp ult i32 %4, 52
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = zext i32 %4 to i52
  %8 = lshr i52 -2251799813668863, %7
  %9 = and i52 %8, 1
  %10 = icmp ne i52 %9, 0
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject19IsSelectedFromFocusEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %3) #15
  switch i32 %4, label %43 [
    i32 114, label %5
    i32 128, label %5
    i32 165, label %5
  ]

5:                                                ; preds = %1, %1, %1
  %6 = tail call zeroext i1 @_ZNK5blink8AXObject9IsTabItemEv(%"class.blink::AXObject"* %3) #15
  br i1 %6, label %7, label %13

7:                                                ; preds = %5
  %8 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %9 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %9, i64 163
  %11 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::AXNodeObject"* %0) #15
  br i1 %12, label %43, label %13

13:                                               ; preds = %7, %5
  %14 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject15ContainerWidgetEv(%"class.blink::AXObject"* %3) #15
  %15 = icmp eq %"class.blink::AXObject"* %14, null
  br i1 %15, label %43, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.blink::AXObject"* %14 to i1 (%"class.blink::AXObject"*)***
  %18 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %18, i64 42
  %20 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::AXObject"* nonnull %14) #15
  br i1 %21, label %43, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %24 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %23, align 8
  %25 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl13FocusedObjectEv(%"class.blink::AXObjectCacheImpl"* %24) #15
  %26 = icmp eq %"class.blink::AXObject"* %25, %3
  br i1 %26, label %36, label %27

27:                                               ; preds = %22
  %28 = icmp eq %"class.blink::AXObject"* %25, null
  br i1 %28, label %43, label %29

29:                                               ; preds = %27
  %30 = bitcast %"class.blink::AXObject"* %25 to %"class.blink::AXObject"* (%"class.blink::AXObject"*)***
  %31 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXObject"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %31, i64 103
  %33 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %32, align 8
  %34 = tail call %"class.blink::AXObject"* %33(%"class.blink::AXObject"* nonnull %25) #15
  %35 = icmp eq %"class.blink::AXObject"* %34, %3
  br i1 %35, label %36, label %43

36:                                               ; preds = %29, %22
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #15
  store i8 -86, i8* %2, align 1
  %37 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %38 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %38, i64 6
  %40 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %39, align 8
  %41 = call zeroext i1 %40(%"class.blink::AXObject"* %3, i32 10, i8* nonnull dereferenceable(1) %2) #15
  %42 = xor i1 %41, true
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #15
  br label %43

43:                                               ; preds = %1, %13, %16, %27, %29, %36, %7
  %44 = phi i1 [ true, %7 ], [ false, %13 ], [ false, %16 ], [ %42, %36 ], [ false, %29 ], [ false, %27 ], [ false, %1 ]
  ret i1 %44
}

declare zeroext i1 @_ZNK5blink8AXObject9IsTabItemEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject15ContainerWidgetEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl13FocusedObjectEv(%"class.blink::AXObjectCacheImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject17IsTabItemSelectedEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.365", align 8
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject9IsTabItemEv(%"class.blink::AXObject"* %3) #15
  br i1 %4, label %5, label %61

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %7 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %7, i64 125
  %9 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %8, align 8
  %10 = tail call %"class.blink::LayoutObject"* %9(%"class.blink::AXObject"* %3) #15
  %11 = icmp eq %"class.blink::LayoutObject"* %10, null
  br i1 %11, label %61, label %12

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %13, label %61, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %61, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 12
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %61

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %25 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %24, align 8
  %26 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl13FocusedObjectEv(%"class.blink::AXObjectCacheImpl"* %25) #15
  %27 = icmp eq %"class.blink::AXObject"* %26, null
  br i1 %27, label %61, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::HeapVector.365"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #15
  %30 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEE(%"class.blink::AXObject"* %3, i32 2, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %2) #15
  br i1 %30, label %31, label %59

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %34 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %32, align 8
  %35 = load i32, i32* %33, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %34, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %59, label %39

39:                                               ; preds = %31, %56
  %40 = phi %"class.blink::Member.343"* [ %57, %56 ], [ %34, %31 ]
  %41 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %24, align 8
  %42 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %40, i64 0, i32 0, i32 0
  %43 = load %"class.blink::Element"*, %"class.blink::Element"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %43, i64 0, i32 0, i32 0
  %45 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %41, %"class.blink::Node"* %44) #15
  %46 = icmp eq %"class.blink::AXObject"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %39
  %48 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %45) #15
  %49 = icmp eq i32 %48, 167
  br i1 %49, label %50, label %56

50:                                               ; preds = %47, %53
  %51 = phi %"class.blink::AXObject"* [ %54, %53 ], [ %26, %47 ]
  %52 = icmp eq %"class.blink::AXObject"* %45, %51
  br i1 %52, label %59, label %53

53:                                               ; preds = %50
  %54 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* nonnull %51) #15
  %55 = icmp eq %"class.blink::AXObject"* %54, null
  br i1 %55, label %56, label %50

56:                                               ; preds = %53, %47, %39
  %57 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %40, i64 1
  %58 = icmp eq %"class.blink::Member.343"* %57, %37
  br i1 %58, label %59, label %39

59:                                               ; preds = %56, %50, %31, %28
  %60 = phi i1 [ false, %28 ], [ false, %31 ], [ true, %50 ], [ false, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #15
  br label %61

61:                                               ; preds = %12, %14, %18, %23, %59, %1, %5
  %62 = phi i1 [ false, %5 ], [ false, %1 ], [ false, %14 ], [ false, %18 ], [ %60, %59 ], [ false, %23 ], [ false, %12 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject11RestrictionEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %5 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %4) #15
  %6 = icmp eq %"class.blink::Element"* %5, null
  br i1 %6, label %128, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 48
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %5, i64 0, i32 0, i32 0
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.318"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %128, label %25

25:                                               ; preds = %7, %12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #15
  store i8 -86, i8* %2, align 1
  %26 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %27 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %27, i64 6
  %29 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %28, align 8
  %30 = call zeroext i1 %29(%"class.blink::AXObject"* %4, i32 2, i8* nonnull dereferenceable(1) %2) #15
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = load i8, i8* %2, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %44, label %126

34:                                               ; preds = %25
  %35 = bitcast %"class.blink::Element"* %5 to i1 (%"class.blink::Element"*)***
  %36 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %36, i64 138
  %38 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %37, align 8
  %39 = call zeroext i1 %38(%"class.blink::Element"* nonnull %5) #15
  br i1 %39, label %126, label %40

40:                                               ; preds = %34
  %41 = call zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"* %4) #15
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = call zeroext i1 @_ZNK5blink8AXObject26IsDescendantOfDisabledNodeEv(%"class.blink::AXObject"* %4) #15
  br i1 %43, label %126, label %44

44:                                               ; preds = %31, %40, %42
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #15
  store i8 -86, i8* %3, align 1
  %45 = call zeroext i1 @_ZNK5blink8AXObject20SupportsARIAReadOnlyEv(%"class.blink::AXObject"* %4) #15
  br i1 %45, label %46, label %54

46:                                               ; preds = %44
  %47 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %26, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %47, i64 6
  %49 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %48, align 8
  %50 = call zeroext i1 %49(%"class.blink::AXObject"* %4, i32 8, i8* nonnull dereferenceable(1) %3) #15
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = load i8, i8* %3, align 1, !range !2
  %53 = zext i8 %52 to i32
  br label %124

54:                                               ; preds = %44, %46
  %55 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %5, i64 0, i32 0, i32 0
  %56 = load i32, i32* %8, align 8
  %57 = and i32 %56, 48
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %76

59:                                               ; preds = %54
  %60 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %61 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 1, i32 2
  %64 = bitcast %"class.blink::Member.318"* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %67, %69
  br i1 %70, label %71, label %76

71:                                               ; preds = %59
  %72 = bitcast %"class.blink::Element"* %5 to %"class.blink::HTMLFormControlElement"*
  %73 = call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsReadOnlyEv(%"class.blink::HTMLFormControlElement"* nonnull %72) #15
  br i1 %73, label %124, label %74

74:                                               ; preds = %71
  %75 = load i32, i32* %8, align 8
  br label %76

76:                                               ; preds = %74, %59, %54
  %77 = phi i32 [ %75, %74 ], [ %56, %59 ], [ %56, %54 ]
  %78 = and i32 %77, 48
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %98

80:                                               ; preds = %76
  %81 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %82 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 1, i32 2
  %85 = bitcast %"class.blink::Member.318"* %84 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %86 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %86, i64 0, i32 3, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %88, %90
  br i1 %91, label %92, label %98

92:                                               ; preds = %80
  %93 = bitcast %"class.blink::Element"* %5 to %"class.blink::HTMLInputElement"*
  %94 = call zeroext i1 @_ZNK5blink16HTMLInputElement11IsTextFieldEv(%"class.blink::HTMLInputElement"* nonnull %93) #15
  br i1 %94, label %95, label %98

95:                                               ; preds = %92
  %96 = bitcast %"class.blink::Element"* %5 to %"class.blink::HTMLFormControlElement"*
  %97 = call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsReadOnlyEv(%"class.blink::HTMLFormControlElement"* nonnull %96) #15
  br i1 %97, label %124, label %98

98:                                               ; preds = %80, %76, %95, %92
  %99 = call zeroext i1 @_ZNK5blink8AXObject19IsTableCellLikeRoleEv(%"class.blink::AXObject"* %4) #15
  br i1 %99, label %100, label %124

100:                                              ; preds = %98
  %101 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* %4) #15
  %102 = icmp eq %"class.blink::AXObject"* %101, null
  br i1 %102, label %123, label %103

103:                                              ; preds = %100
  %104 = call zeroext i1 @_ZNK5blink8AXObject18IsTableRowLikeRoleEv(%"class.blink::AXObject"* nonnull %101) #15
  br i1 %104, label %105, label %123

105:                                              ; preds = %103
  %106 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"* nonnull %101) #15
  %107 = icmp eq %"class.blink::AXObject"* %106, null
  br i1 %107, label %123, label %108

108:                                              ; preds = %105
  %109 = call zeroext i1 @_ZNK5blink8AXObject15IsTableLikeRoleEv(%"class.blink::AXObject"* nonnull %106) #15
  br i1 %109, label %110, label %123

110:                                              ; preds = %108
  %111 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %106) #15
  %112 = icmp eq i32 %111, 93
  br i1 %112, label %116, label %113

113:                                              ; preds = %110
  %114 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %106) #15
  %115 = icmp eq i32 %114, 180
  br i1 %115, label %116, label %123

116:                                              ; preds = %113, %110
  %117 = bitcast %"class.blink::AXObject"* %106 to i32 (%"class.blink::AXObject"*)***
  %118 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %117, align 8
  %119 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %118, i64 100
  %120 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %119, align 8
  %121 = call i32 %120(%"class.blink::AXObject"* nonnull %106) #15
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %124, label %123

123:                                              ; preds = %100, %103, %108, %113, %116, %105
  br label %124

124:                                              ; preds = %98, %123, %116, %71, %95, %51
  %125 = phi i32 [ %53, %51 ], [ 1, %71 ], [ 1, %95 ], [ 1, %116 ], [ 0, %123 ], [ 0, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #15
  br label %126

126:                                              ; preds = %34, %42, %31, %124
  %127 = phi i32 [ %125, %124 ], [ 2, %31 ], [ 2, %42 ], [ 2, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #15
  br label %128

128:                                              ; preds = %12, %1, %126
  %129 = phi i32 [ %127, %126 ], [ 0, %1 ], [ 0, %12 ]
  ret i32 %129
}

declare zeroext i1 @_ZNK5blink8AXObject26IsDescendantOfDisabledNodeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject20SupportsARIAReadOnlyEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsReadOnlyEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLInputElement11IsTextFieldEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject21ParentObjectUnignoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject10IsExpandedEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject20SupportsARIAExpandedEv(%"class.blink::AXObject"* %3) #15
  br i1 %4, label %5, label %182

5:                                                ; preds = %1
  %6 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %3) #15
  %7 = icmp eq i32 %6, 138
  br i1 %7, label %8, label %45

8:                                                ; preds = %5
  %9 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %9, label %45, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %15, label %45, label %16

16:                                               ; preds = %14
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 48
  %21 = icmp ne i32 %20, 0
  %22 = icmp eq %"class.blink::Node"* %17, null
  %23 = or i1 %22, %21
  br i1 %23, label %45, label %24

24:                                               ; preds = %16
  %25 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 1, i32 2
  %29 = bitcast %"class.blink::Member.318"* %28 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %32, %34
  br i1 %35, label %36, label %45

36:                                               ; preds = %24
  %37 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %37, label %41, label %38

38:                                               ; preds = %36
  %39 = bitcast %"class.blink::Node"** %11 to %"class.blink::HTMLSelectElement"**
  %40 = load %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLSelectElement"** %39, align 8
  br label %41

41:                                               ; preds = %36, %38
  %42 = phi %"class.blink::HTMLSelectElement"* [ %40, %38 ], [ null, %36 ]
  %43 = tail call zeroext i1 @_ZNK5blink17HTMLSelectElement14PopupIsVisibleEv(%"class.blink::HTMLSelectElement"* %42) #15
  %44 = select i1 %43, i32 2, i32 1
  br label %182

45:                                               ; preds = %14, %16, %8, %10, %24, %5
  %46 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %46, label %170, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %170, label %51

51:                                               ; preds = %47
  %52 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %52, label %170, label %53

53:                                               ; preds = %51
  %54 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %54, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 48
  %58 = icmp ne i32 %57, 0
  %59 = icmp eq %"class.blink::Node"* %54, null
  %60 = or i1 %59, %58
  br i1 %60, label %170, label %61

61:                                               ; preds = %53
  %62 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSummaryTagE, align 8
  %63 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %54, i64 1, i32 2
  %66 = bitcast %"class.blink::Member.318"* %65 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %69, %71
  br i1 %72, label %73, label %170

73:                                               ; preds = %61
  %74 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  br label %77

77:                                               ; preds = %73, %75
  %78 = phi %"class.blink::Node"* [ %76, %75 ], [ null, %73 ]
  %79 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %78) #15
  %80 = icmp eq %"class.blink::ContainerNode"* %79, null
  br i1 %80, label %170, label %81

81:                                               ; preds = %77
  %82 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  br label %85

85:                                               ; preds = %81, %83
  %86 = phi %"class.blink::Node"* [ %84, %83 ], [ null, %81 ]
  %87 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %86) #15
  %88 = icmp eq %"class.blink::ContainerNode"* %87, null
  br i1 %88, label %170, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %87, i64 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 48
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %170

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %87, i64 0, i32 0
  %96 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kDetailsTagE, align 8
  %97 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %95, i64 1, i32 2
  %100 = bitcast %"class.blink::Member.318"* %99 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %98, i64 0, i32 3, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %103, %105
  br i1 %106, label %107, label %170

107:                                              ; preds = %94
  %108 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  br label %111

111:                                              ; preds = %107, %109
  %112 = phi %"class.blink::Node"* [ %110, %109 ], [ null, %107 ]
  %113 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %112) #15
  %114 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kOpenAttrE, align 8
  %115 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %113, i64 1, i32 0, i32 1
  %116 = bitcast i32* %115 to %"class.blink::ElementData"**
  %117 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %116, align 8
  %118 = icmp eq %"class.blink::ElementData"* %117, null
  br i1 %118, label %182, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %117, i64 0, i32 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %119
  %125 = bitcast %"class.blink::ElementData"* %117 to %"class.blink::UniqueElementData"*
  %126 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %117, i64 1, i32 1
  %127 = bitcast %"class.blink::Member.354"* %126 to %"class.blink::Attribute"**
  %128 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %125, i64 0, i32 2, i32 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  br label %136

131:                                              ; preds = %119
  %132 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %117, i64 1
  %133 = bitcast %"class.blink::ElementData"* %132 to %"class.blink::Attribute"*
  %134 = lshr i32 %121, 1
  %135 = and i32 %134, 268435455
  br label %136

136:                                              ; preds = %131, %124
  %137 = phi %"class.blink::Attribute"* [ %133, %131 ], [ %128, %124 ]
  %138 = phi i32 [ %135, %131 ], [ %130, %124 ]
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %137, i64 %139
  %141 = icmp eq i32 %138, 0
  br i1 %141, label %182, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %114, i64 0, i32 0, i32 0
  %144 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %144, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %147

147:                                              ; preds = %163, %142
  %148 = phi %"class.blink::Attribute"* [ %137, %142 ], [ %164, %163 ]
  %149 = phi i32 [ 0, %142 ], [ %165, %163 ]
  %150 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %148, i64 0, i32 0, i32 0, i32 0
  %151 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %150, align 8
  %152 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %151, %144
  br i1 %152, label %167, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %151, i64 0, i32 3, i32 0, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %155, %156
  br i1 %157, label %158, label %163

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %151, i64 0, i32 4, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %160, %161
  br i1 %162, label %167, label %163

163:                                              ; preds = %158, %153
  %164 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %148, i64 1
  %165 = add i32 %149, 1
  %166 = icmp eq %"class.blink::Attribute"* %164, %140
  br i1 %166, label %182, label %147

167:                                              ; preds = %147, %158
  %168 = icmp eq i32 %149, -1
  %169 = select i1 %168, i32 1, i32 2
  ret i32 %169

170:                                              ; preds = %89, %85, %51, %53, %45, %77, %47, %94, %61
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #15
  store i8 0, i8* %2, align 1
  %171 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXObject"*, i32, i8*)***
  %172 = load i1 (%"class.blink::AXObject"*, i32, i8*)**, i1 (%"class.blink::AXObject"*, i32, i8*)*** %171, align 8
  %173 = getelementptr inbounds i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %172, i64 6
  %174 = load i1 (%"class.blink::AXObject"*, i32, i8*)*, i1 (%"class.blink::AXObject"*, i32, i8*)** %173, align 8
  %175 = call zeroext i1 %174(%"class.blink::AXObject"* %3, i32 3, i8* nonnull dereferenceable(1) %2) #15
  br i1 %175, label %176, label %180

176:                                              ; preds = %170
  %177 = load i8, i8* %2, align 1, !range !2
  %178 = icmp eq i8 %177, 0
  %179 = select i1 %178, i32 1, i32 2
  br label %180

180:                                              ; preds = %170, %176
  %181 = phi i32 [ %179, %176 ], [ 0, %170 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #15
  br label %182

182:                                              ; preds = %163, %136, %111, %1, %180, %41
  %183 = phi i32 [ %44, %41 ], [ %181, %180 ], [ 0, %1 ], [ 1, %111 ], [ 1, %136 ], [ 1, %163 ]
  ret i32 %183
}

declare zeroext i1 @_ZNK5blink8AXObject20SupportsARIAExpandedEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17HTMLSelectElement14PopupIsVisibleEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject10IsRequiredEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %23, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %15 = bitcast %"class.blink::Node"* %6 to i1 (%"class.blink::Element"*)***
  %16 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %16, i64 124
  %18 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::Element"* nonnull %14) #15
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::Node"* %6 to %"class.blink::HTMLFormControlElement"*
  %22 = tail call zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"* nonnull %21) #15
  br i1 %22, label %25, label %23

23:                                               ; preds = %13, %1, %4, %8, %20
  %24 = tail call zeroext i1 @_ZNK5blink8AXObject32AOMPropertyOrARIAAttributeIsTrueENS_18AOMBooleanPropertyE(%"class.blink::AXObject"* %2, i32 9) #15
  br label %25

25:                                               ; preds = %23, %20
  %26 = phi i1 [ true, %20 ], [ %24, %23 ]
  ret i1 %26
}

declare zeroext i1 @_ZNK5blink22HTMLFormControlElement10IsRequiredEv(%"class.blink::HTMLFormControlElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject32AOMPropertyOrARIAAttributeIsTrueENS_18AOMBooleanPropertyE(%"class.blink::AXObject"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject24CanvasHasFallbackContentEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %35, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %5, label %35, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %35, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %35

15:                                               ; preds = %10
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCanvasTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.318"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp ne %"class.WTF::StringImpl"* %23, %25
  %27 = and i32 %12, 2
  %28 = icmp eq i32 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %35, label %30

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1
  %32 = bitcast %"class.blink::Node"* %31 to %"class.blink::Node"**
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = icmp ne %"class.blink::Node"* %33, null
  br label %35

35:                                               ; preds = %15, %4, %10, %6, %30, %1
  %36 = phi i1 [ false, %1 ], [ false, %15 ], [ %34, %30 ], [ false, %6 ], [ false, %10 ], [ false, %4 ]
  ret i1 %36
}

declare zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_15AOMUIntPropertyERj(%"class.blink::AXObject"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject17HierarchicalLevelEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %3) #15
  %5 = icmp eq %"class.blink::Element"* %4, null
  br i1 %5, label %71, label %6

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #15
  store i32 -1431655766, i32* %2, align 4
  %8 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_15AOMUIntPropertyERj(%"class.blink::AXObject"* %3, i32 2, i32* nonnull dereferenceable(4) %2) #15
  br i1 %8, label %9, label %13

9:                                                ; preds = %6
  %10 = load i32, i32* %2, align 4
  %11 = add i32 %10, -1
  %12 = icmp ult i32 %11, 9
  br i1 %12, label %69, label %13

13:                                               ; preds = %9, %6
  %14 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %3) #15
  switch i32 %14, label %69 [
    i32 24, label %15
    i32 116, label %27
    i32 166, label %43
    i32 181, label %55
  ]

15:                                               ; preds = %13
  %16 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #15
  %17 = icmp eq %"class.blink::AXObject"* %16, null
  br i1 %17, label %69, label %18

18:                                               ; preds = %15, %18
  %19 = phi %"class.blink::AXObject"* [ %25, %18 ], [ %16, %15 ]
  %20 = phi i32 [ %24, %18 ], [ 1, %15 ]
  %21 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %19) #15
  %22 = icmp eq i32 %21, 24
  %23 = zext i1 %22 to i32
  %24 = add nuw nsw i32 %20, %23
  %25 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* nonnull %19) #15
  %26 = icmp eq %"class.blink::AXObject"* %25, null
  br i1 %26, label %69, label %18

27:                                               ; preds = %13
  %28 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #15
  %29 = icmp eq %"class.blink::AXObject"* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  store i32 0, i32* %2, align 4
  br label %42

31:                                               ; preds = %27, %31
  %32 = phi %"class.blink::AXObject"* [ %38, %31 ], [ %28, %27 ]
  %33 = phi i32 [ %37, %31 ], [ 0, %27 ]
  %34 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %32) #15
  %35 = icmp eq i32 %34, 112
  %36 = zext i1 %35 to i32
  %37 = add nuw nsw i32 %33, %36
  %38 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* nonnull %32) #15
  %39 = icmp eq %"class.blink::AXObject"* %38, null
  br i1 %39, label %40, label %31

40:                                               ; preds = %31
  store i32 %37, i32* %2, align 4
  %41 = icmp eq i32 %37, 0
  br i1 %41, label %42, label %69

42:                                               ; preds = %30, %40
  br label %69

43:                                               ; preds = %13
  %44 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #15
  %45 = icmp eq %"class.blink::AXObject"* %44, null
  br i1 %45, label %69, label %46

46:                                               ; preds = %43, %46
  %47 = phi %"class.blink::AXObject"* [ %53, %46 ], [ %44, %43 ]
  %48 = phi i32 [ %52, %46 ], [ 1, %43 ]
  %49 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %47) #15
  %50 = icmp eq i32 %49, 166
  %51 = zext i1 %50 to i32
  %52 = add nuw nsw i32 %48, %51
  %53 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* nonnull %47) #15
  %54 = icmp eq %"class.blink::AXObject"* %53, null
  br i1 %54, label %69, label %46

55:                                               ; preds = %13
  store i32 1, i32* %2, align 4
  %56 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #15
  %57 = icmp eq %"class.blink::AXObject"* %56, null
  br i1 %57, label %67, label %58

58:                                               ; preds = %55, %64
  %59 = phi %"class.blink::AXObject"* [ %65, %64 ], [ %56, %55 ]
  %60 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %59) #15
  switch i32 %60, label %64 [
    i32 94, label %61
    i32 179, label %67
  ]

61:                                               ; preds = %58
  %62 = load i32, i32* %2, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %2, align 4
  br label %64

64:                                               ; preds = %61, %58
  %65 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* nonnull %59) #15
  %66 = icmp eq %"class.blink::AXObject"* %65, null
  br i1 %66, label %67, label %58

67:                                               ; preds = %64, %58, %55
  %68 = load i32, i32* %2, align 4
  br label %69

69:                                               ; preds = %46, %18, %67, %13, %15, %40, %42, %43, %9
  %70 = phi i32 [ %10, %9 ], [ %68, %67 ], [ 0, %13 ], [ 1, %15 ], [ 1, %42 ], [ %37, %40 ], [ 1, %43 ], [ %24, %18 ], [ %52, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #15
  br label %71

71:                                               ; preds = %1, %69
  %72 = phi i32 [ %70, %69 ], [ 0, %1 ]
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject12AutoCompleteEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %7 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = tail call i32 @_ZNK5blink17AXObjectCacheImpl16GetAutofillStateEj(%"class.blink::AXObjectCacheImpl"* %7, i32 %9) #15
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4) #15
  br label %113

13:                                               ; preds = %1
  %14 = tail call zeroext i1 @_ZNK5blink8AXObject17IsAtomicTextFieldEv(%"class.blink::AXObject"* %5) #15
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = tail call zeroext i1 @_ZNK5blink8AXObject15IsARIATextFieldEv(%"class.blink::AXObject"* %5) #15
  br i1 %16, label %17, label %83

17:                                               ; preds = %15, %13
  %18 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %19 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %19, i64 5
  %21 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %20, align 8
  %22 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %21(%"class.blink::AXObject"* %5, i32 0) #15
  %23 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %22) #15
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %83, label %25

25:                                               ; preds = %17
  %26 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %29, i32* %33, align 8
  %34 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #15
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %38, align 8
  %39 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #15
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  br i1 %39, label %41, label %54

41:                                               ; preds = %25
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %113

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %113

54:                                               ; preds = %25
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %40, align 8
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %71

61:                                               ; preds = %54
  %62 = zext i32 %60 to i33
  %63 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #15
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !3

68:                                               ; preds = %61
  call void @llvm.trap() #15
  unreachable

69:                                               ; preds = %61
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %59, align 4
  br label %71

71:                                               ; preds = %54, %69
  %72 = phi i32 [ %70, %69 ], [ %60, %54 ]
  %73 = load atomic i32, i32* %55 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %78 = add i32 %72, -1
  store i32 %78, i32* %77, align 4
  br label %79

79:                                               ; preds = %76, %71
  %80 = phi i32 [ %78, %76 ], [ %72, %71 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %113

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #15
  br label %113

83:                                               ; preds = %17, %15
  %84 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %84, label %111, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %111, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 48
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %111

94:                                               ; preds = %89
  %95 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %96 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 1, i32 2
  %99 = bitcast %"class.blink::Member.318"* %98 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %100 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %100, i64 0, i32 3, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %102, %104
  br i1 %105, label %106, label %111

106:                                              ; preds = %94
  %107 = bitcast %"class.blink::Node"* %87 to %"class.blink::HTMLInputElement"*
  %108 = tail call %"class.blink::HTMLDataListElement"* @_ZNK5blink16HTMLInputElement8DataListEv(%"class.blink::HTMLInputElement"* nonnull %107) #15
  %109 = icmp eq %"class.blink::HTMLDataListElement"* %108, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %106
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i64 4) #15
  br label %113

111:                                              ; preds = %94, %83, %85, %89, %106
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %112, align 8
  br label %113

113:                                              ; preds = %82, %79, %53, %50, %110, %111, %12
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  ret %"class.WTF::StringImpl"* %115
}

declare zeroext i1 @_ZNK5blink8AXObject17IsAtomicTextFieldEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsARIATextFieldEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12AXNodeObject25SerializeMarkerAttributesEPN2ui10AXNodeDataE(%"class.blink::AXNodeObject"*, %"struct.ui::AXNodeData"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.3315", align 8
  %4 = alloca %"class.std::__1::vector.3315", align 8
  %5 = alloca %"class.std::__1::vector.3315", align 8
  %6 = alloca %"class.blink::AXRange", align 8
  %7 = alloca %"class.blink::AXPosition", align 8
  %8 = alloca %"class.blink::AXPosition", align 8
  %9 = alloca %"class.blink::HeapVector.3369", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.blink::AXPosition", align 8
  %13 = alloca %"class.blink::AXPosition", align 8
  %14 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %14) #15
  br i1 %15, label %666, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %666, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %22 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %22, i64 126
  %24 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %23, align 8
  %25 = tail call %"class.blink::Document"* %24(%"class.blink::AXNodeObject"* %0) #15
  %26 = icmp eq %"class.blink::Document"* %25, null
  br i1 %26, label %666, label %27

27:                                               ; preds = %20
  %28 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %21, align 8
  %29 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %28, i64 126
  %30 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %29, align 8
  %31 = tail call %"class.blink::Document"* %30(%"class.blink::AXNodeObject"* %0) #15
  %32 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %31) #15
  %33 = icmp eq %"class.blink::LocalFrameView"* %32, null
  br i1 %33, label %666, label %34

34:                                               ; preds = %27
  %35 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %14) #15
  br i1 %35, label %666, label %36

36:                                               ; preds = %34
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %666, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 12
  %43 = icmp eq i32 %42, 4
  %44 = bitcast %"class.blink::Node"* %37 to %"class.blink::Text"*
  br i1 %43, label %45, label %666

45:                                               ; preds = %39
  %46 = bitcast %"class.std::__1::vector.3315"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"class.std::__1::vector.3315", %"class.std::__1::vector.3315"* %3, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::vector.3315", %"class.std::__1::vector.3315"* %3, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::vector.3315", %"class.std::__1::vector.3315"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #15
  %50 = bitcast %"class.std::__1::vector.3315"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #15
  %51 = getelementptr inbounds %"class.std::__1::vector.3315", %"class.std::__1::vector.3315"* %4, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector.3315", %"class.std::__1::vector.3315"* %4, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector.3315", %"class.std::__1::vector.3315"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #15
  %54 = bitcast %"class.std::__1::vector.3315"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #15
  %55 = getelementptr inbounds %"class.std::__1::vector.3315", %"class.std::__1::vector.3315"* %5, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::vector.3315", %"class.std::__1::vector.3315"* %5, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.std::__1::vector.3315", %"class.std::__1::vector.3315"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 24, i1 false) #15
  %58 = tail call i64 @_ZNK5blink8AXObject30GetAriaSpellingOrGrammarMarkerEv(%"class.blink::AXObject"* %14) #15
  %59 = trunc i64 %58 to i8
  %60 = lshr i64 %58, 32
  %61 = trunc i64 %60 to i32
  %62 = icmp eq i8 %59, 0
  br i1 %62, label %354, label %63

63:                                               ; preds = %45
  %64 = bitcast %"class.blink::AXRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %64) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 48, i1 false)
  call void @_ZN5blink7AXRange15RangeOfContentsERKNS_8AXObjectE(%"class.blink::AXRange"* nonnull sret %6, %"class.blink::AXObject"* dereferenceable(120) %14) #15
  %65 = call i32 @_ZN5blink14ToAXMarkerTypeENS_14DocumentMarker10MarkerTypeE(i32 %61) #15
  %66 = load i32*, i32** %48, align 8
  %67 = load i32*, i32** %49, align 8
  %68 = icmp ult i32* %66, %67
  %69 = ptrtoint i32* %67 to i64
  br i1 %68, label %70, label %74

70:                                               ; preds = %63
  store i32 %65, i32* %66, align 4
  %71 = getelementptr inbounds i32, i32* %66, i64 1
  %72 = ptrtoint i32* %71 to i64
  %73 = bitcast i32** %48 to i64*
  store i64 %72, i64* %73, align 8
  br label %120

74:                                               ; preds = %63
  %75 = ptrtoint i32* %66 to i64
  %76 = bitcast i32** %48 to i64*
  %77 = bitcast %"class.std::__1::vector.3315"* %3 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %75, %78
  %80 = ashr exact i64 %79, 2
  %81 = add nsw i64 %80, 1
  %82 = icmp ugt i64 %81, 4611686018427387903
  br i1 %82, label %83, label %85

83:                                               ; preds = %74
  %84 = bitcast %"class.std::__1::vector.3315"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %84) #16
  unreachable

85:                                               ; preds = %74
  %86 = bitcast i32** %49 to i64*
  %87 = sub i64 %69, %78
  %88 = ashr exact i64 %87, 2
  %89 = icmp ult i64 %88, 2305843009213693951
  br i1 %89, label %90, label %98

90:                                               ; preds = %85
  %91 = ashr exact i64 %87, 1
  %92 = icmp ult i64 %91, %81
  %93 = select i1 %92, i64 %81, i64 %91
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %103, label %95

95:                                               ; preds = %90
  %96 = icmp ugt i64 %93, 4611686018427387903
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  call void @abort() #16
  unreachable

98:                                               ; preds = %95, %85
  %99 = phi i64 [ %93, %95 ], [ 4611686018427387903, %85 ]
  %100 = shl i64 %99, 2
  %101 = call i8* @_Znwm(i64 %100) #17
  %102 = bitcast i8* %101 to i32*
  br label %103

103:                                              ; preds = %98, %90
  %104 = phi i64 [ %99, %98 ], [ 0, %90 ]
  %105 = phi i8* [ %101, %98 ], [ null, %90 ]
  %106 = phi i32* [ %102, %98 ], [ null, %90 ]
  %107 = getelementptr inbounds i32, i32* %106, i64 %80
  %108 = getelementptr inbounds i32, i32* %106, i64 %104
  %109 = ptrtoint i32* %108 to i64
  store i32 %65, i32* %107, align 4
  %110 = getelementptr inbounds i32, i32* %107, i64 1
  %111 = ptrtoint i32* %110 to i64
  %112 = ptrtoint i32* %106 to i64
  %113 = icmp sgt i64 %79, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %103
  %115 = inttoptr i64 %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %115, i64 %79, i1 false) #15
  br label %116

116:                                              ; preds = %114, %103
  store i64 %112, i64* %77, align 8
  store i64 %111, i64* %76, align 8
  store i64 %109, i64* %86, align 8
  %117 = icmp eq i64 %78, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = inttoptr i64 %78 to i8*
  call void @_ZdlPv(i8* %119) #17
  br label %120

120:                                              ; preds = %70, %116, %118
  %121 = bitcast %"class.blink::AXPosition"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #15
  %122 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %7, i64 0, i32 0, i32 0
  %123 = bitcast %"class.blink::AXRange"* %6 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::AXPosition"* %7 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %7, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %126, align 8
  switch i64 %124, label %127 [
    i64 0, label %153
    i64 -1, label %153
  ]

127:                                              ; preds = %120
  %128 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %129 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %128, i64 0, i32 1
  %130 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %129) #15
  %131 = icmp eq i8* %130, null
  br i1 %131, label %132, label %134, !prof !3

132:                                              ; preds = %127
  %133 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %129, i8* %133) #15
  br label %134

134:                                              ; preds = %132, %127
  %135 = phi i8* [ %133, %132 ], [ %130, %127 ]
  %136 = bitcast i8* %135 to %"class.blink::ThreadState"**
  %137 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %137, i64 0, i32 4, i32 0, i32 0, i32 0
  %139 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %139, i64 0, i32 0, i32 0
  %141 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %140, align 8
  %142 = icmp eq %"class.blink::PersistentNode"* %141, null
  br i1 %142, label %143, label %146, !prof !3

143:                                              ; preds = %134
  %144 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %139, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %144) #15
  %145 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %140, align 8
  br label %146

146:                                              ; preds = %143, %134
  %147 = phi %"class.blink::PersistentNode"* [ %145, %143 ], [ %141, %134 ]
  %148 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.blink::PersistentRegion"* %139 to i64*
  store i64 %149, i64* %150, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to %"class.blink::PersistentBase.3368"**
  store %"class.blink::PersistentBase.3368"* %122, %"class.blink::PersistentBase.3368"** %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %126, align 8
  br label %153

153:                                              ; preds = %120, %120, %146
  %154 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %7, i64 0, i32 1
  %155 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %6, i64 0, i32 0, i32 1
  %156 = bitcast i32* %155 to i64*
  %157 = bitcast i32* %154 to i64*
  %158 = load i64, i64* %156, align 8
  store i64 %158, i64* %157, align 8
  %159 = call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* nonnull %7) #15
  %160 = load i32*, i32** %52, align 8
  %161 = load i32*, i32** %53, align 8
  %162 = icmp ult i32* %160, %161
  %163 = ptrtoint i32* %161 to i64
  br i1 %162, label %164, label %168

164:                                              ; preds = %153
  store i32 %159, i32* %160, align 4
  %165 = getelementptr inbounds i32, i32* %160, i64 1
  %166 = ptrtoint i32* %165 to i64
  %167 = bitcast i32** %52 to i64*
  store i64 %166, i64* %167, align 8
  br label %214

168:                                              ; preds = %153
  %169 = ptrtoint i32* %160 to i64
  %170 = bitcast i32** %52 to i64*
  %171 = bitcast %"class.std::__1::vector.3315"* %4 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = sub i64 %169, %172
  %174 = ashr exact i64 %173, 2
  %175 = add nsw i64 %174, 1
  %176 = icmp ugt i64 %175, 4611686018427387903
  br i1 %176, label %177, label %179

177:                                              ; preds = %168
  %178 = bitcast %"class.std::__1::vector.3315"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %178) #16
  unreachable

179:                                              ; preds = %168
  %180 = bitcast i32** %53 to i64*
  %181 = sub i64 %163, %172
  %182 = ashr exact i64 %181, 2
  %183 = icmp ult i64 %182, 2305843009213693951
  br i1 %183, label %184, label %192

184:                                              ; preds = %179
  %185 = ashr exact i64 %181, 1
  %186 = icmp ult i64 %185, %175
  %187 = select i1 %186, i64 %175, i64 %185
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %197, label %189

189:                                              ; preds = %184
  %190 = icmp ugt i64 %187, 4611686018427387903
  br i1 %190, label %191, label %192

191:                                              ; preds = %189
  call void @abort() #16
  unreachable

192:                                              ; preds = %189, %179
  %193 = phi i64 [ %187, %189 ], [ 4611686018427387903, %179 ]
  %194 = shl i64 %193, 2
  %195 = call i8* @_Znwm(i64 %194) #17
  %196 = bitcast i8* %195 to i32*
  br label %197

197:                                              ; preds = %192, %184
  %198 = phi i64 [ %193, %192 ], [ 0, %184 ]
  %199 = phi i8* [ %195, %192 ], [ null, %184 ]
  %200 = phi i32* [ %196, %192 ], [ null, %184 ]
  %201 = getelementptr inbounds i32, i32* %200, i64 %174
  %202 = getelementptr inbounds i32, i32* %200, i64 %198
  %203 = ptrtoint i32* %202 to i64
  store i32 %159, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %201, i64 1
  %205 = ptrtoint i32* %204 to i64
  %206 = ptrtoint i32* %200 to i64
  %207 = icmp sgt i64 %173, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %197
  %209 = inttoptr i64 %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %199, i8* align 4 %209, i64 %173, i1 false) #15
  br label %210

210:                                              ; preds = %208, %197
  store i64 %206, i64* %171, align 8
  store i64 %205, i64* %170, align 8
  store i64 %203, i64* %180, align 8
  %211 = icmp eq i64 %172, 0
  br i1 %211, label %214, label %212

212:                                              ; preds = %210
  %213 = inttoptr i64 %172 to i8*
  call void @_ZdlPv(i8* %213) #17
  br label %214

214:                                              ; preds = %164, %210, %212
  %215 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %126, align 8
  %216 = icmp eq %"class.blink::PersistentNode"* %215, null
  br i1 %216, label %236, label %217

217:                                              ; preds = %214
  %218 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %219 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %218, i64 0, i32 1
  %220 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %219) #15
  %221 = icmp eq i8* %220, null
  br i1 %221, label %222, label %224, !prof !3

222:                                              ; preds = %217
  %223 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %219, i8* %223) #15
  br label %224

224:                                              ; preds = %222, %217
  %225 = phi i8* [ %223, %222 ], [ %220, %217 ]
  %226 = bitcast i8* %225 to %"class.blink::ThreadState"**
  %227 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %226, align 8
  %228 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %227, i64 0, i32 4, i32 0, i32 0, i32 0
  %229 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %228, align 8
  %230 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %126, align 8
  %231 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %229, i64 0, i32 0, i32 0
  %232 = bitcast %"class.blink::PersistentRegion"* %229 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.blink::PersistentNode"* %230 to i64*
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %230, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %235, align 8
  store %"class.blink::PersistentNode"* %230, %"class.blink::PersistentNode"** %231, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %126, align 8
  br label %236

236:                                              ; preds = %214, %224
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #15
  %237 = bitcast %"class.blink::AXPosition"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #15
  %238 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %6, i64 0, i32 1
  %239 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %8, i64 0, i32 0, i32 0
  %240 = bitcast %"class.blink::AXPosition"* %238 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.blink::AXPosition"* %8 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %8, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %243, align 8
  switch i64 %241, label %244 [
    i64 0, label %270
    i64 -1, label %270
  ]

244:                                              ; preds = %236
  %245 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %246 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %245, i64 0, i32 1
  %247 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %246) #15
  %248 = icmp eq i8* %247, null
  br i1 %248, label %249, label %251, !prof !3

249:                                              ; preds = %244
  %250 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %246, i8* %250) #15
  br label %251

251:                                              ; preds = %249, %244
  %252 = phi i8* [ %250, %249 ], [ %247, %244 ]
  %253 = bitcast i8* %252 to %"class.blink::ThreadState"**
  %254 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %253, align 8
  %255 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %254, i64 0, i32 4, i32 0, i32 0, i32 0
  %256 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %256, i64 0, i32 0, i32 0
  %258 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %257, align 8
  %259 = icmp eq %"class.blink::PersistentNode"* %258, null
  br i1 %259, label %260, label %263, !prof !3

260:                                              ; preds = %251
  %261 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %256, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %261) #15
  %262 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %257, align 8
  br label %263

263:                                              ; preds = %260, %251
  %264 = phi %"class.blink::PersistentNode"* [ %262, %260 ], [ %258, %251 ]
  %265 = bitcast %"class.blink::PersistentNode"* %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"class.blink::PersistentRegion"* %256 to i64*
  store i64 %266, i64* %267, align 8
  %268 = bitcast %"class.blink::PersistentNode"* %264 to %"class.blink::PersistentBase.3368"**
  store %"class.blink::PersistentBase.3368"* %239, %"class.blink::PersistentBase.3368"** %268, align 8
  %269 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %264, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %269, align 8
  store %"class.blink::PersistentNode"* %264, %"class.blink::PersistentNode"** %243, align 8
  br label %270

270:                                              ; preds = %236, %236, %263
  %271 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %8, i64 0, i32 1
  %272 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %6, i64 0, i32 1, i32 1
  %273 = bitcast i32* %272 to i64*
  %274 = bitcast i32* %271 to i64*
  %275 = load i64, i64* %273, align 8
  store i64 %275, i64* %274, align 8
  %276 = call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* nonnull %8) #15
  %277 = load i32*, i32** %56, align 8
  %278 = load i32*, i32** %57, align 8
  %279 = icmp ult i32* %277, %278
  %280 = ptrtoint i32* %278 to i64
  br i1 %279, label %281, label %285

281:                                              ; preds = %270
  store i32 %276, i32* %277, align 4
  %282 = getelementptr inbounds i32, i32* %277, i64 1
  %283 = ptrtoint i32* %282 to i64
  %284 = bitcast i32** %56 to i64*
  store i64 %283, i64* %284, align 8
  br label %331

285:                                              ; preds = %270
  %286 = ptrtoint i32* %277 to i64
  %287 = bitcast i32** %56 to i64*
  %288 = bitcast %"class.std::__1::vector.3315"* %5 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = sub i64 %286, %289
  %291 = ashr exact i64 %290, 2
  %292 = add nsw i64 %291, 1
  %293 = icmp ugt i64 %292, 4611686018427387903
  br i1 %293, label %294, label %296

294:                                              ; preds = %285
  %295 = bitcast %"class.std::__1::vector.3315"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %295) #16
  unreachable

296:                                              ; preds = %285
  %297 = bitcast i32** %57 to i64*
  %298 = sub i64 %280, %289
  %299 = ashr exact i64 %298, 2
  %300 = icmp ult i64 %299, 2305843009213693951
  br i1 %300, label %301, label %309

301:                                              ; preds = %296
  %302 = ashr exact i64 %298, 1
  %303 = icmp ult i64 %302, %292
  %304 = select i1 %303, i64 %292, i64 %302
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %314, label %306

306:                                              ; preds = %301
  %307 = icmp ugt i64 %304, 4611686018427387903
  br i1 %307, label %308, label %309

308:                                              ; preds = %306
  call void @abort() #16
  unreachable

309:                                              ; preds = %306, %296
  %310 = phi i64 [ %304, %306 ], [ 4611686018427387903, %296 ]
  %311 = shl i64 %310, 2
  %312 = call i8* @_Znwm(i64 %311) #17
  %313 = bitcast i8* %312 to i32*
  br label %314

314:                                              ; preds = %309, %301
  %315 = phi i64 [ %310, %309 ], [ 0, %301 ]
  %316 = phi i8* [ %312, %309 ], [ null, %301 ]
  %317 = phi i32* [ %313, %309 ], [ null, %301 ]
  %318 = getelementptr inbounds i32, i32* %317, i64 %291
  %319 = getelementptr inbounds i32, i32* %317, i64 %315
  %320 = ptrtoint i32* %319 to i64
  store i32 %276, i32* %318, align 4
  %321 = getelementptr inbounds i32, i32* %318, i64 1
  %322 = ptrtoint i32* %321 to i64
  %323 = ptrtoint i32* %317 to i64
  %324 = icmp sgt i64 %290, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %314
  %326 = inttoptr i64 %289 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %316, i8* align 4 %326, i64 %290, i1 false) #15
  br label %327

327:                                              ; preds = %325, %314
  store i64 %323, i64* %288, align 8
  store i64 %322, i64* %287, align 8
  store i64 %320, i64* %297, align 8
  %328 = icmp eq i64 %289, 0
  br i1 %328, label %331, label %329

329:                                              ; preds = %327
  %330 = inttoptr i64 %289 to i8*
  call void @_ZdlPv(i8* %330) #17
  br label %331

331:                                              ; preds = %281, %327, %329
  %332 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %243, align 8
  %333 = icmp eq %"class.blink::PersistentNode"* %332, null
  br i1 %333, label %353, label %334

334:                                              ; preds = %331
  %335 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %336 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %335, i64 0, i32 1
  %337 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %336) #15
  %338 = icmp eq i8* %337, null
  br i1 %338, label %339, label %341, !prof !3

339:                                              ; preds = %334
  %340 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %336, i8* %340) #15
  br label %341

341:                                              ; preds = %339, %334
  %342 = phi i8* [ %340, %339 ], [ %337, %334 ]
  %343 = bitcast i8* %342 to %"class.blink::ThreadState"**
  %344 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %344, i64 0, i32 4, i32 0, i32 0, i32 0
  %346 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %345, align 8
  %347 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %243, align 8
  %348 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %346, i64 0, i32 0, i32 0
  %349 = bitcast %"class.blink::PersistentRegion"* %346 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = bitcast %"class.blink::PersistentNode"* %347 to i64*
  store i64 %350, i64* %351, align 8
  %352 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %347, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %352, align 8
  store %"class.blink::PersistentNode"* %347, %"class.blink::PersistentNode"** %348, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %243, align 8
  br label %353

353:                                              ; preds = %331, %341
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #15
  call void @_ZN5blink7AXRangeD2Ev(%"class.blink::AXRange"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %64) #15
  br label %354

354:                                              ; preds = %45, %353
  %355 = phi i32 [ %61, %353 ], [ -1431655766, %45 ]
  %356 = phi i8 [ 1, %353 ], [ 0, %45 ]
  %357 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %21, align 8
  %358 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %357, i64 126
  %359 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %358, align 8
  %360 = call %"class.blink::Document"* %359(%"class.blink::AXNodeObject"* %0) #15
  %361 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %360, i64 0, i32 81, i32 0, i32 0
  %362 = load %"class.blink::DocumentMarkerController"*, %"class.blink::DocumentMarkerController"** %361, align 8
  %363 = bitcast %"class.blink::HeapVector.3369"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %363) #15
  %364 = getelementptr inbounds %"class.blink::HeapVector.3369", %"class.blink::HeapVector.3369"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %365 = getelementptr inbounds %"class.blink::HeapVector.3369", %"class.blink::HeapVector.3369"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %366 = bitcast %"class.blink::HeapVector.3369"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %366, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink24DocumentMarkerController10MarkersForERKNS_4TextENS_14DocumentMarker11MarkerTypesE(%"class.blink::HeapVector.3369"* nonnull sret %9, %"class.blink::DocumentMarkerController"* %362, %"class.blink::Text"* nonnull dereferenceable(88) %44, i32 119) #15
  %367 = load %"class.blink::Member.3375"*, %"class.blink::Member.3375"** %364, align 8
  %368 = load i32, i32* %365, align 4
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds %"class.blink::Member.3375", %"class.blink::Member.3375"* %367, i64 %369
  %371 = icmp eq i32 %368, 0
  br i1 %371, label %393, label %372

372:                                              ; preds = %354
  %373 = icmp ne i8 %356, 0
  %374 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  %375 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  %376 = bitcast i32** %48 to i64*
  %377 = bitcast %"class.std::__1::vector.3315"* %3 to i64*
  %378 = bitcast i32** %49 to i64*
  %379 = bitcast %"class.blink::AXPosition"* %12 to i8*
  %380 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %12, i64 0, i32 0, i32 0, i32 1, i32 0
  %381 = bitcast %"class.blink::AXPosition"* %13 to i8*
  %382 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %13, i64 0, i32 0, i32 0, i32 1, i32 0
  %383 = bitcast i32** %52 to i64*
  %384 = bitcast %"class.std::__1::vector.3315"* %4 to i64*
  %385 = bitcast i32** %53 to i64*
  %386 = bitcast i32** %56 to i64*
  %387 = bitcast %"class.std::__1::vector.3315"* %5 to i64*
  %388 = bitcast i32** %57 to i64*
  %389 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  %390 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  %391 = bitcast %"class.blink::AXPosition"* %12 to i8*
  %392 = bitcast %"class.blink::AXPosition"* %13 to i8*
  br label %397

393:                                              ; preds = %640, %354
  %394 = load i32*, i32** %47, align 8
  %395 = load i32*, i32** %48, align 8
  %396 = icmp eq i32* %394, %395
  br i1 %396, label %644, label %643

397:                                              ; preds = %372, %640
  %398 = phi %"class.blink::Member.3375"* [ %367, %372 ], [ %641, %640 ]
  %399 = getelementptr inbounds %"class.blink::Member.3375", %"class.blink::Member.3375"* %398, i64 0, i32 0, i32 0
  %400 = load %"class.blink::DocumentMarker"*, %"class.blink::DocumentMarker"** %399, align 8
  %401 = bitcast %"class.blink::DocumentMarker"* %400 to i32 (%"class.blink::DocumentMarker"*)***
  %402 = load i32 (%"class.blink::DocumentMarker"*)**, i32 (%"class.blink::DocumentMarker"*)*** %401, align 8
  %403 = getelementptr inbounds i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %402, i64 2
  %404 = load i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %403, align 8
  %405 = call i32 %404(%"class.blink::DocumentMarker"* %400) #15
  %406 = icmp eq i32 %355, %405
  %407 = and i1 %373, %406
  br i1 %407, label %640, label %408

408:                                              ; preds = %397
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %374) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %389, i8 -86, i64 16, i1 false)
  %409 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %14) #15
  br i1 %409, label %412, label %410

410:                                              ; preds = %408
  %411 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  br label %412

412:                                              ; preds = %408, %410
  %413 = phi %"class.blink::Node"* [ %411, %410 ], [ null, %408 ]
  %414 = getelementptr inbounds %"class.blink::DocumentMarker", %"class.blink::DocumentMarker"* %400, i64 0, i32 1
  %415 = load i32, i32* %414, align 8
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %10, %"class.blink::Node"* dereferenceable(64) %413, i32 %415) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %375) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %390, i8 -86, i64 16, i1 false)
  %416 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %14) #15
  br i1 %416, label %419, label %417

417:                                              ; preds = %412
  %418 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  br label %419

419:                                              ; preds = %412, %417
  %420 = phi %"class.blink::Node"* [ %418, %417 ], [ null, %412 ]
  %421 = getelementptr inbounds %"class.blink::DocumentMarker", %"class.blink::DocumentMarker"* %400, i64 0, i32 2
  %422 = load i32, i32* %421, align 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %11, %"class.blink::Node"* dereferenceable(64) %420, i32 %422) #15
  %423 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %21, align 8
  %424 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %423, i64 126
  %425 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %424, align 8
  %426 = call %"class.blink::Document"* %425(%"class.blink::AXNodeObject"* %0) #15
  %427 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10IsValidForERKNS_8DocumentE(%"class.blink::PositionTemplate"* nonnull %10, %"class.blink::Document"* dereferenceable(2848) %426) #15
  br i1 %427, label %428, label %639

428:                                              ; preds = %419
  %429 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %21, align 8
  %430 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %429, i64 126
  %431 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %430, align 8
  %432 = call %"class.blink::Document"* %431(%"class.blink::AXNodeObject"* %0) #15
  %433 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10IsValidForERKNS_8DocumentE(%"class.blink::PositionTemplate"* nonnull %11, %"class.blink::Document"* dereferenceable(2848) %432) #15
  br i1 %433, label %434, label %639

434:                                              ; preds = %428
  %435 = load i32 (%"class.blink::DocumentMarker"*)**, i32 (%"class.blink::DocumentMarker"*)*** %401, align 8
  %436 = getelementptr inbounds i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %435, i64 2
  %437 = load i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %436, align 8
  %438 = call i32 %437(%"class.blink::DocumentMarker"* %400) #15
  %439 = call i32 @_ZN5blink14ToAXMarkerTypeENS_14DocumentMarker10MarkerTypeE(i32 %438) #15
  %440 = load i32*, i32** %48, align 8
  %441 = load i32*, i32** %49, align 8
  %442 = icmp ult i32* %440, %441
  %443 = ptrtoint i32* %441 to i64
  br i1 %442, label %444, label %447

444:                                              ; preds = %434
  store i32 %439, i32* %440, align 4
  %445 = getelementptr inbounds i32, i32* %440, i64 1
  %446 = ptrtoint i32* %445 to i64
  store i64 %446, i64* %376, align 8
  br label %490

447:                                              ; preds = %434
  %448 = ptrtoint i32* %440 to i64
  %449 = load i64, i64* %377, align 8
  %450 = sub i64 %448, %449
  %451 = ashr exact i64 %450, 2
  %452 = add nsw i64 %451, 1
  %453 = icmp ugt i64 %452, 4611686018427387903
  br i1 %453, label %454, label %456

454:                                              ; preds = %447
  %455 = bitcast %"class.std::__1::vector.3315"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %455) #16
  unreachable

456:                                              ; preds = %447
  %457 = sub i64 %443, %449
  %458 = ashr exact i64 %457, 2
  %459 = icmp ult i64 %458, 2305843009213693951
  br i1 %459, label %460, label %468

460:                                              ; preds = %456
  %461 = ashr exact i64 %457, 1
  %462 = icmp ult i64 %461, %452
  %463 = select i1 %462, i64 %452, i64 %461
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %473, label %465

465:                                              ; preds = %460
  %466 = icmp ugt i64 %463, 4611686018427387903
  br i1 %466, label %467, label %468

467:                                              ; preds = %465
  call void @abort() #16
  unreachable

468:                                              ; preds = %465, %456
  %469 = phi i64 [ %463, %465 ], [ 4611686018427387903, %456 ]
  %470 = shl i64 %469, 2
  %471 = call i8* @_Znwm(i64 %470) #17
  %472 = bitcast i8* %471 to i32*
  br label %473

473:                                              ; preds = %468, %460
  %474 = phi i64 [ %469, %468 ], [ 0, %460 ]
  %475 = phi i8* [ %471, %468 ], [ null, %460 ]
  %476 = phi i32* [ %472, %468 ], [ null, %460 ]
  %477 = getelementptr inbounds i32, i32* %476, i64 %451
  %478 = getelementptr inbounds i32, i32* %476, i64 %474
  %479 = ptrtoint i32* %478 to i64
  store i32 %439, i32* %477, align 4
  %480 = getelementptr inbounds i32, i32* %477, i64 1
  %481 = ptrtoint i32* %480 to i64
  %482 = ptrtoint i32* %476 to i64
  %483 = icmp sgt i64 %450, 0
  br i1 %483, label %484, label %486

484:                                              ; preds = %473
  %485 = inttoptr i64 %449 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %475, i8* align 4 %485, i64 %450, i1 false) #15
  br label %486

486:                                              ; preds = %484, %473
  store i64 %482, i64* %377, align 8
  store i64 %481, i64* %376, align 8
  store i64 %479, i64* %378, align 8
  %487 = icmp eq i64 %449, 0
  br i1 %487, label %490, label %488

488:                                              ; preds = %486
  %489 = inttoptr i64 %449 to i8*
  call void @_ZdlPv(i8* %489) #17
  br label %490

490:                                              ; preds = %444, %486, %488
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %379) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %391, i8 -86, i64 24, i1 false)
  call void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %12, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %10, i32 1, i32 0) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %381) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %392, i8 -86, i64 24, i1 false)
  call void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %13, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %11, i32 1, i32 1) #15
  %491 = call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* nonnull %12) #15
  %492 = load i32*, i32** %52, align 8
  %493 = load i32*, i32** %53, align 8
  %494 = icmp ult i32* %492, %493
  %495 = ptrtoint i32* %493 to i64
  br i1 %494, label %496, label %499

496:                                              ; preds = %490
  store i32 %491, i32* %492, align 4
  %497 = getelementptr inbounds i32, i32* %492, i64 1
  %498 = ptrtoint i32* %497 to i64
  store i64 %498, i64* %383, align 8
  br label %542

499:                                              ; preds = %490
  %500 = ptrtoint i32* %492 to i64
  %501 = load i64, i64* %384, align 8
  %502 = sub i64 %500, %501
  %503 = ashr exact i64 %502, 2
  %504 = add nsw i64 %503, 1
  %505 = icmp ugt i64 %504, 4611686018427387903
  br i1 %505, label %506, label %508

506:                                              ; preds = %499
  %507 = bitcast %"class.std::__1::vector.3315"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %507) #16
  unreachable

508:                                              ; preds = %499
  %509 = sub i64 %495, %501
  %510 = ashr exact i64 %509, 2
  %511 = icmp ult i64 %510, 2305843009213693951
  br i1 %511, label %512, label %520

512:                                              ; preds = %508
  %513 = ashr exact i64 %509, 1
  %514 = icmp ult i64 %513, %504
  %515 = select i1 %514, i64 %504, i64 %513
  %516 = icmp eq i64 %515, 0
  br i1 %516, label %525, label %517

517:                                              ; preds = %512
  %518 = icmp ugt i64 %515, 4611686018427387903
  br i1 %518, label %519, label %520

519:                                              ; preds = %517
  call void @abort() #16
  unreachable

520:                                              ; preds = %517, %508
  %521 = phi i64 [ %515, %517 ], [ 4611686018427387903, %508 ]
  %522 = shl i64 %521, 2
  %523 = call i8* @_Znwm(i64 %522) #17
  %524 = bitcast i8* %523 to i32*
  br label %525

525:                                              ; preds = %520, %512
  %526 = phi i64 [ %521, %520 ], [ 0, %512 ]
  %527 = phi i8* [ %523, %520 ], [ null, %512 ]
  %528 = phi i32* [ %524, %520 ], [ null, %512 ]
  %529 = getelementptr inbounds i32, i32* %528, i64 %503
  %530 = getelementptr inbounds i32, i32* %528, i64 %526
  %531 = ptrtoint i32* %530 to i64
  store i32 %491, i32* %529, align 4
  %532 = getelementptr inbounds i32, i32* %529, i64 1
  %533 = ptrtoint i32* %532 to i64
  %534 = ptrtoint i32* %528 to i64
  %535 = icmp sgt i64 %502, 0
  br i1 %535, label %536, label %538

536:                                              ; preds = %525
  %537 = inttoptr i64 %501 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %527, i8* align 4 %537, i64 %502, i1 false) #15
  br label %538

538:                                              ; preds = %536, %525
  store i64 %534, i64* %384, align 8
  store i64 %533, i64* %383, align 8
  store i64 %531, i64* %385, align 8
  %539 = icmp eq i64 %501, 0
  br i1 %539, label %542, label %540

540:                                              ; preds = %538
  %541 = inttoptr i64 %501 to i8*
  call void @_ZdlPv(i8* %541) #17
  br label %542

542:                                              ; preds = %496, %538, %540
  %543 = call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* nonnull %13) #15
  %544 = load i32*, i32** %56, align 8
  %545 = load i32*, i32** %57, align 8
  %546 = icmp ult i32* %544, %545
  %547 = ptrtoint i32* %545 to i64
  br i1 %546, label %548, label %551

548:                                              ; preds = %542
  store i32 %543, i32* %544, align 4
  %549 = getelementptr inbounds i32, i32* %544, i64 1
  %550 = ptrtoint i32* %549 to i64
  store i64 %550, i64* %386, align 8
  br label %594

551:                                              ; preds = %542
  %552 = ptrtoint i32* %544 to i64
  %553 = load i64, i64* %387, align 8
  %554 = sub i64 %552, %553
  %555 = ashr exact i64 %554, 2
  %556 = add nsw i64 %555, 1
  %557 = icmp ugt i64 %556, 4611686018427387903
  br i1 %557, label %558, label %560

558:                                              ; preds = %551
  %559 = bitcast %"class.std::__1::vector.3315"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %559) #16
  unreachable

560:                                              ; preds = %551
  %561 = sub i64 %547, %553
  %562 = ashr exact i64 %561, 2
  %563 = icmp ult i64 %562, 2305843009213693951
  br i1 %563, label %564, label %572

564:                                              ; preds = %560
  %565 = ashr exact i64 %561, 1
  %566 = icmp ult i64 %565, %556
  %567 = select i1 %566, i64 %556, i64 %565
  %568 = icmp eq i64 %567, 0
  br i1 %568, label %577, label %569

569:                                              ; preds = %564
  %570 = icmp ugt i64 %567, 4611686018427387903
  br i1 %570, label %571, label %572

571:                                              ; preds = %569
  call void @abort() #16
  unreachable

572:                                              ; preds = %569, %560
  %573 = phi i64 [ %567, %569 ], [ 4611686018427387903, %560 ]
  %574 = shl i64 %573, 2
  %575 = call i8* @_Znwm(i64 %574) #17
  %576 = bitcast i8* %575 to i32*
  br label %577

577:                                              ; preds = %572, %564
  %578 = phi i64 [ %573, %572 ], [ 0, %564 ]
  %579 = phi i8* [ %575, %572 ], [ null, %564 ]
  %580 = phi i32* [ %576, %572 ], [ null, %564 ]
  %581 = getelementptr inbounds i32, i32* %580, i64 %555
  %582 = getelementptr inbounds i32, i32* %580, i64 %578
  %583 = ptrtoint i32* %582 to i64
  store i32 %543, i32* %581, align 4
  %584 = getelementptr inbounds i32, i32* %581, i64 1
  %585 = ptrtoint i32* %584 to i64
  %586 = ptrtoint i32* %580 to i64
  %587 = icmp sgt i64 %554, 0
  br i1 %587, label %588, label %590

588:                                              ; preds = %577
  %589 = inttoptr i64 %553 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %579, i8* align 4 %589, i64 %554, i1 false) #15
  br label %590

590:                                              ; preds = %588, %577
  store i64 %586, i64* %387, align 8
  store i64 %585, i64* %386, align 8
  store i64 %583, i64* %388, align 8
  %591 = icmp eq i64 %553, 0
  br i1 %591, label %594, label %592

592:                                              ; preds = %590
  %593 = inttoptr i64 %553 to i8*
  call void @_ZdlPv(i8* %593) #17
  br label %594

594:                                              ; preds = %548, %590, %592
  %595 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %382, align 8
  %596 = icmp eq %"class.blink::PersistentNode"* %595, null
  br i1 %596, label %616, label %597

597:                                              ; preds = %594
  %598 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %599 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %598, i64 0, i32 1
  %600 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %599) #15
  %601 = icmp eq i8* %600, null
  br i1 %601, label %602, label %604, !prof !3

602:                                              ; preds = %597
  %603 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %599, i8* %603) #15
  br label %604

604:                                              ; preds = %602, %597
  %605 = phi i8* [ %603, %602 ], [ %600, %597 ]
  %606 = bitcast i8* %605 to %"class.blink::ThreadState"**
  %607 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %606, align 8
  %608 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %607, i64 0, i32 4, i32 0, i32 0, i32 0
  %609 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %608, align 8
  %610 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %382, align 8
  %611 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %609, i64 0, i32 0, i32 0
  %612 = bitcast %"class.blink::PersistentRegion"* %609 to i64*
  %613 = load i64, i64* %612, align 8
  %614 = bitcast %"class.blink::PersistentNode"* %610 to i64*
  store i64 %613, i64* %614, align 8
  %615 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %610, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %615, align 8
  store %"class.blink::PersistentNode"* %610, %"class.blink::PersistentNode"** %611, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %382, align 8
  br label %616

616:                                              ; preds = %594, %604
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %381) #15
  %617 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %380, align 8
  %618 = icmp eq %"class.blink::PersistentNode"* %617, null
  br i1 %618, label %638, label %619

619:                                              ; preds = %616
  %620 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %621 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %620, i64 0, i32 1
  %622 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %621) #15
  %623 = icmp eq i8* %622, null
  br i1 %623, label %624, label %626, !prof !3

624:                                              ; preds = %619
  %625 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %621, i8* %625) #15
  br label %626

626:                                              ; preds = %624, %619
  %627 = phi i8* [ %625, %624 ], [ %622, %619 ]
  %628 = bitcast i8* %627 to %"class.blink::ThreadState"**
  %629 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %628, align 8
  %630 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %629, i64 0, i32 4, i32 0, i32 0, i32 0
  %631 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %630, align 8
  %632 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %380, align 8
  %633 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %631, i64 0, i32 0, i32 0
  %634 = bitcast %"class.blink::PersistentRegion"* %631 to i64*
  %635 = load i64, i64* %634, align 8
  %636 = bitcast %"class.blink::PersistentNode"* %632 to i64*
  store i64 %635, i64* %636, align 8
  %637 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %632, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %637, align 8
  store %"class.blink::PersistentNode"* %632, %"class.blink::PersistentNode"** %633, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %380, align 8
  br label %638

638:                                              ; preds = %616, %626
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %379) #15
  br label %639

639:                                              ; preds = %428, %419, %638
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %375) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %374) #15
  br label %640

640:                                              ; preds = %639, %397
  %641 = getelementptr inbounds %"class.blink::Member.3375", %"class.blink::Member.3375"* %398, i64 1
  %642 = icmp eq %"class.blink::Member.3375"* %641, %370
  br i1 %642, label %393, label %397

643:                                              ; preds = %393
  call void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* %1, i32 8, %"class.std::__1::vector.3315"* nonnull dereferenceable(24) %3) #15
  call void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* %1, i32 9, %"class.std::__1::vector.3315"* nonnull dereferenceable(24) %4) #15
  call void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* %1, i32 10, %"class.std::__1::vector.3315"* nonnull dereferenceable(24) %5) #15
  br label %644

644:                                              ; preds = %393, %643
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %363) #15
  %645 = load i32*, i32** %55, align 8
  %646 = icmp eq i32* %645, null
  br i1 %646, label %651, label %647

647:                                              ; preds = %644
  %648 = ptrtoint i32* %645 to i64
  %649 = bitcast i32** %56 to i64*
  store i64 %648, i64* %649, align 8
  %650 = bitcast i32* %645 to i8*
  call void @_ZdlPv(i8* %650) #17
  br label %651

651:                                              ; preds = %644, %647
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #15
  %652 = load i32*, i32** %51, align 8
  %653 = icmp eq i32* %652, null
  br i1 %653, label %658, label %654

654:                                              ; preds = %651
  %655 = ptrtoint i32* %652 to i64
  %656 = bitcast i32** %52 to i64*
  store i64 %655, i64* %656, align 8
  %657 = bitcast i32* %652 to i8*
  call void @_ZdlPv(i8* %657) #17
  br label %658

658:                                              ; preds = %651, %654
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #15
  %659 = load i32*, i32** %47, align 8
  %660 = icmp eq i32* %659, null
  br i1 %660, label %665, label %661

661:                                              ; preds = %658
  %662 = ptrtoint i32* %659 to i64
  %663 = bitcast i32** %48 to i64*
  store i64 %662, i64* %663, align 8
  %664 = bitcast i32* %659 to i8*
  call void @_ZdlPv(i8* %664) #17
  br label %665

665:                                              ; preds = %658, %661
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #15
  br label %666

666:                                              ; preds = %39, %34, %36, %2, %665, %27, %20, %16
  ret void
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

declare i64 @_ZNK5blink8AXObject30GetAriaSpellingOrGrammarMarkerEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare void @_ZN5blink7AXRange15RangeOfContentsERKNS_8AXObjectE(%"class.blink::AXRange"* sret, %"class.blink::AXObject"* dereferenceable(120)) local_unnamed_addr #1

declare i32 @_ZN5blink14ToAXMarkerTypeENS_14DocumentMarker10MarkerTypeE(i32) local_unnamed_addr #1

declare i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7AXRangeD2Ev(%"class.blink::AXRange"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #15
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #15
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #15
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !3

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #15
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  ret void
}

declare void @_ZNK5blink24DocumentMarkerController10MarkersForERKNS_4TextENS_14DocumentMarker11MarkerTypesE(%"class.blink::HeapVector.3369"* sret, %"class.blink::DocumentMarkerController"*, %"class.blink::Text"* dereferenceable(88), i32) local_unnamed_addr #1

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"* dereferenceable(64), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10IsValidForERKNS_8DocumentE(%"class.blink::PositionTemplate"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

declare void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32, i32) local_unnamed_addr #1

declare void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"*, i32, %"class.std::__1::vector.3315"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject16InPageLinkTargetEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink8AXObject6IsLinkEv(%"class.blink::AXObject"* %5) #15
  br i1 %6, label %7, label %68

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %9 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %9, i64 126
  %11 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %10, align 8
  %12 = tail call %"class.blink::Document"* %11(%"class.blink::AXNodeObject"* %0) #15
  %13 = icmp eq %"class.blink::Document"* %12, null
  br i1 %13, label %68, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Element"* (%"class.blink::AXNodeObject"*)***
  %16 = load %"class.blink::Element"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Element"* (%"class.blink::AXNodeObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Element"* (%"class.blink::AXNodeObject"*)** %16, i64 127
  %18 = load %"class.blink::Element"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Element"* (%"class.blink::AXNodeObject"*)** %17, align 8
  %19 = tail call %"class.blink::Element"* %18(%"class.blink::AXNodeObject"* %0) #15
  %20 = icmp eq %"class.blink::Element"* %19, null
  br i1 %20, label %68, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %22) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 112, i1 false)
  call void @_ZNK5blink7Element7HrefURLEv(%"class.blink::KURL"* nonnull sret %2, %"class.blink::Element"* nonnull %19) #15
  %23 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %2) #15
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %25) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 112, i1 false)
  %26 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %8, align 8
  %27 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %26, i64 126
  %28 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %27, align 8
  %29 = call %"class.blink::Document"* %28(%"class.blink::AXNodeObject"* %0) #15
  %30 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %29, i64 0, i32 19
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %3, %"class.blink::KURL"* dereferenceable(112) %30) #15
  %31 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %3) #15
  br i1 %31, label %32, label %64

32:                                               ; preds = %24
  %33 = call zeroext i1 @_ZN5blink31EqualIgnoringFragmentIdentifierERKNS_4KURLES2_(%"class.blink::KURL"* nonnull dereferenceable(112) %3, %"class.blink::KURL"* nonnull dereferenceable(112) %2) #15
  br i1 %33, label %34, label %64

34:                                               ; preds = %32
  %35 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %37 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"* nonnull %2) #15
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %19, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %38, align 8
  %40 = call %"class.blink::Node"* @_ZN5blink9TreeScope10FindAnchorERKN3WTF6StringE(%"class.blink::TreeScope"* %39, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %44 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %43, align 8
  %45 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl29FirstAccessibleObjectFromNodeEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %44, %"class.blink::Node"* nonnull %40) #15
  br label %46

46:                                               ; preds = %34, %42
  %47 = phi %"class.blink::AXObject"* [ %45, %42 ], [ null, %34 ]
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #15
  br label %63

63:                                               ; preds = %46, %59, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  br label %64

64:                                               ; preds = %24, %32, %63
  %65 = phi %"class.blink::AXObject"* [ %47, %63 ], [ null, %32 ], [ null, %24 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %25) #15
  br label %66

66:                                               ; preds = %21, %64
  %67 = phi %"class.blink::AXObject"* [ %65, %64 ], [ null, %21 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %22) #15
  br label %68

68:                                               ; preds = %14, %1, %7, %66
  %69 = phi %"class.blink::AXObject"* [ %67, %66 ], [ null, %7 ], [ null, %1 ], [ null, %14 ]
  ret %"class.blink::AXObject"* %69
}

declare void @_ZNK5blink7Element7HrefURLEv(%"class.blink::KURL"* sret, %"class.blink::Element"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare zeroext i1 @_ZN5blink31EqualIgnoringFragmentIdentifierERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink9TreeScope10FindAnchorERKN3WTF6StringE(%"class.blink::TreeScope"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl29FirstAccessibleObjectFromNodeEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject11OrientationEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %5 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %6 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %6, i64 5
  %8 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %7, align 8
  %9 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %8(%"class.blink::AXObject"* %4, i32 9) #15
  %10 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %16, i64* %17, align 8
  br label %25

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  br label %25

25:                                               ; preds = %14, %18
  %26 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [11 x i8]* nonnull dereferenceable(11) @.str.8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  br i1 %28, label %49, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %35, i64* %36, align 8
  br label %44

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  br label %44

44:                                               ; preds = %33, %37
  %45 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %45, i32* %46, align 8
  %47 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [9 x i8]* nonnull dereferenceable(9) @.str.9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #15
  %48 = zext i1 %47 to i32
  br label %49

49:                                               ; preds = %44, %25
  %50 = phi i32 [ 2, %25 ], [ %48, %44 ]
  %51 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %4) #15
  switch i32 %51, label %58 [
    i32 113, label %52
    i32 123, label %52
    i32 151, label %52
    i32 179, label %52
    i32 124, label %55
    i32 156, label %55
    i32 158, label %55
    i32 166, label %55
    i32 177, label %55
    i32 21, label %60
    i32 22, label %60
    i32 143, label %60
    i32 180, label %60
  ]

52:                                               ; preds = %49, %49, %49, %49
  %53 = icmp eq i32 %50, 0
  %54 = select i1 %53, i32 1, i32 %50
  br label %60

55:                                               ; preds = %49, %49, %49, %49, %49
  %56 = icmp eq i32 %50, 0
  %57 = select i1 %56, i32 2, i32 %50
  br label %60

58:                                               ; preds = %49
  %59 = call i32 @_ZNK5blink8AXObject11OrientationEv(%"class.blink::AXObject"* %4) #15
  br label %60

60:                                               ; preds = %49, %49, %49, %49, %58, %55, %52
  %61 = phi i32 [ %59, %58 ], [ %57, %55 ], [ %54, %52 ], [ %50, %49 ], [ %50, %49 ], [ %50, %49 ], [ %50, %49 ]
  ret i32 %61
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [11 x i8]* dereferenceable(11)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 10
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %205, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %303, %14, %28, %205, %219, %233, %247, %261, %275, %289, %42, %59, %77, %93, %109, %125, %141, %157, %173, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %173 ], [ false, %14 ], [ false, %28 ], [ false, %205 ], [ false, %219 ], [ false, %233 ], [ false, %247 ], [ false, %261 ], [ false, %275 ], [ false, %289 ], [ %316, %303 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  br i1 %188, label %189, label %75

189:                                              ; preds = %173
  %190 = getelementptr inbounds i16, i16* %44, i64 9
  %191 = load i16, i16* %190, align 2
  %192 = add i16 %191, -65
  %193 = icmp ult i16 %192, 26
  %194 = zext i1 %193 to i16
  %195 = shl nuw nsw i16 %194, 5
  %196 = or i16 %195, %191
  %197 = zext i16 %196 to i32
  %198 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i64
  %201 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = sext i8 %202 to i32
  %204 = icmp eq i32 %197, %203
  ret i1 %204

205:                                              ; preds = %28
  %206 = getelementptr inbounds i8, i8* %15, i64 2
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i64
  %215 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = sext i8 %216 to i32
  %218 = icmp eq i32 %211, %217
  br i1 %218, label %219, label %75

219:                                              ; preds = %205
  %220 = getelementptr inbounds i8, i8* %15, i64 3
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i64
  %229 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = sext i8 %230 to i32
  %232 = icmp eq i32 %225, %231
  br i1 %232, label %233, label %75

233:                                              ; preds = %219
  %234 = getelementptr inbounds i8, i8* %15, i64 4
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i64
  %237 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i64
  %243 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = sext i8 %244 to i32
  %246 = icmp eq i32 %239, %245
  br i1 %246, label %247, label %75

247:                                              ; preds = %233
  %248 = getelementptr inbounds i8, i8* %15, i64 5
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i64
  %251 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %250
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = sext i8 %258 to i32
  %260 = icmp eq i32 %253, %259
  br i1 %260, label %261, label %75

261:                                              ; preds = %247
  %262 = getelementptr inbounds i8, i8* %15, i64 6
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i64
  %265 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i64
  %271 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = sext i8 %272 to i32
  %274 = icmp eq i32 %267, %273
  br i1 %274, label %275, label %75

275:                                              ; preds = %261
  %276 = getelementptr inbounds i8, i8* %15, i64 7
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i64
  %279 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i64
  %285 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = sext i8 %286 to i32
  %288 = icmp eq i32 %281, %287
  br i1 %288, label %289, label %75

289:                                              ; preds = %275
  %290 = getelementptr inbounds i8, i8* %15, i64 8
  %291 = load i8, i8* %290, align 1
  %292 = zext i8 %291 to i64
  %293 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %292
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  %296 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i64
  %299 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %298
  %300 = load i8, i8* %299, align 1
  %301 = sext i8 %300 to i32
  %302 = icmp eq i32 %295, %301
  br i1 %302, label %303, label %75

303:                                              ; preds = %289
  %304 = getelementptr inbounds i8, i8* %15, i64 9
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i64
  %307 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %306
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i64
  %313 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = sext i8 %314 to i32
  %316 = icmp eq i32 %309, %315
  br label %75
}

declare i32 @_ZNK5blink8AXObject11OrientationEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12AXNodeObject19RadioButtonsInGroupEv(%"class.blink::HeapVector.2999"* noalias sret, %"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.3380", align 8
  %4 = alloca %"class.blink::AXObject"*, align 8
  %5 = alloca %"class.blink::AXObject"*, align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast %"class.blink::HeapVector.2999"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #15
  %10 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %1, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %133, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %1, i64 0, i32 0
  %15 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %14) #15
  %16 = icmp eq i32 %15, 142
  br i1 %16, label %17, label %133

17:                                               ; preds = %13
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %83, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 48
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %83

25:                                               ; preds = %20
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %37, label %83

37:                                               ; preds = %25
  %38 = bitcast %"class.blink::Node"* %18 to %"class.blink::HTMLInputElement"*
  %39 = bitcast %"class.blink::HeapVector.3380"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.blink::HeapVector.3380", %"class.blink::HeapVector.3380"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::HeapVector.3380", %"class.blink::HeapVector.3380"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %42 = bitcast %"class.blink::HeapVector.3380"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false)
  call void @_ZN5blink12AXNodeObject31FindAllRadioButtonsWithSameNameEPNS_16HTMLInputElementE(%"class.blink::HeapVector.3380"* nonnull sret %3, %"class.blink::HTMLInputElement"* nonnull %38)
  %43 = load %"class.blink::Member.3165"*, %"class.blink::Member.3165"** %40, align 8
  %44 = load i32, i32* %41, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.blink::Member.3165", %"class.blink::Member.3165"* %43, i64 %45
  %47 = icmp eq i32 %44, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %37
  %49 = bitcast %"class.blink::AXObject"** %4 to i8*
  %50 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %1, i64 0, i32 0, i32 14, i32 0, i32 0
  %51 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %0, i64 0, i32 0
  br label %53

52:                                               ; preds = %80, %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #15
  br label %133

53:                                               ; preds = %48, %80
  %54 = phi %"class.blink::Member.3165"* [ %43, %48 ], [ %81, %80 ]
  %55 = getelementptr inbounds %"class.blink::Member.3165", %"class.blink::Member.3165"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #15
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %4, align 8
  %57 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %50, align 8
  %58 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %57, %"class.blink::Node"* %58) #15
  store %"class.blink::AXObject"* %59, %"class.blink::AXObject"** %4, align 8
  %60 = icmp eq %"class.blink::AXObject"* %59, null
  %61 = ptrtoint %"class.blink::AXObject"* %59 to i64
  br i1 %60, label %80, label %62

62:                                               ; preds = %53
  %63 = load i32, i32* %8, align 4
  %64 = load i32, i32* %7, align 8
  %65 = icmp eq i32 %63, %64
  br i1 %65, label %79, label %66, !prof !3

66:                                               ; preds = %62
  %67 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %6, align 8
  %68 = zext i32 %63 to i64
  %69 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %67, i64 %68
  %70 = bitcast %"class.blink::Member.2997"* %69 to i64*
  store atomic i64 %61, i64* %70 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %66
  %74 = bitcast %"class.blink::AXObject"* %59 to i8*
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %74) #15
  br label %76

76:                                               ; preds = %73, %66
  %77 = load i32, i32* %8, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %8, align 4
  br label %80

79:                                               ; preds = %62
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3002"* %51, %"class.blink::AXObject"** nonnull dereferenceable(8) %4) #15
  br label %80

80:                                               ; preds = %79, %76, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #15
  %81 = getelementptr inbounds %"class.blink::Member.3165", %"class.blink::Member.3165"* %54, i64 1
  %82 = icmp eq %"class.blink::Member.3165"* %81, %46
  br i1 %82, label %52, label %53

83:                                               ; preds = %25, %17, %20
  %84 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %14) #15
  %85 = icmp eq %"class.blink::AXObject"* %84, null
  br i1 %85, label %133, label %86

86:                                               ; preds = %83
  %87 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %84) #15
  %88 = icmp eq i32 %87, 143
  br i1 %88, label %89, label %133

89:                                               ; preds = %86
  %90 = tail call dereferenceable(16) %"class.blink::HeapVector.2999"* @_ZN5blink8AXObject24ChildrenIncludingIgnoredEv(%"class.blink::AXObject"* nonnull %84) #15
  %91 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %90, i64 0, i32 0, i32 0, i32 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %92, i64 %95
  %97 = icmp eq i32 %94, 0
  br i1 %97, label %133, label %98

98:                                               ; preds = %89
  %99 = bitcast %"class.blink::AXObject"** %5 to i8*
  %100 = bitcast %"class.blink::AXObject"** %5 to i64*
  %101 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %0, i64 0, i32 0
  br label %102

102:                                              ; preds = %98, %130
  %103 = phi %"class.blink::Member.2997"* [ %92, %98 ], [ %131, %130 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #15
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %5, align 8
  %104 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %104, align 8
  store %"class.blink::AXObject"* %105, %"class.blink::AXObject"** %5, align 8
  %106 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %105) #15
  %107 = icmp eq i32 %106, 142
  br i1 %107, label %108, label %130

108:                                              ; preds = %102
  %109 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %5, align 8
  %110 = call zeroext i1 @_ZNK5blink8AXObject29AccessibilityIsIncludedInTreeEv(%"class.blink::AXObject"* %109) #15
  br i1 %110, label %111, label %130

111:                                              ; preds = %108
  %112 = load i32, i32* %8, align 4
  %113 = load i32, i32* %7, align 8
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %129, label %115, !prof !3

115:                                              ; preds = %111
  %116 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %6, align 8
  %117 = zext i32 %112 to i64
  %118 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %116, i64 %117
  %119 = load i64, i64* %100, align 8
  %120 = bitcast %"class.blink::Member.2997"* %118 to i64*
  store atomic i64 %119, i64* %120 monotonic, align 8
  %121 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %115
  %124 = inttoptr i64 %119 to i8*
  %125 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %124) #15
  br label %126

126:                                              ; preds = %123, %115
  %127 = load i32, i32* %8, align 4
  %128 = add i32 %127, 1
  store i32 %128, i32* %8, align 4
  br label %130

129:                                              ; preds = %111
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3002"* %101, %"class.blink::AXObject"** nonnull dereferenceable(8) %5) #15
  br label %130

130:                                              ; preds = %129, %126, %108, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #15
  %131 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %103, i64 1
  %132 = icmp eq %"class.blink::Member.2997"* %131, %96
  br i1 %132, label %133, label %102

133:                                              ; preds = %130, %89, %2, %86, %83, %52, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject31FindAllRadioButtonsWithSameNameEPNS_16HTMLInputElementE(%"class.blink::HeapVector.3380"* noalias sret, %"class.blink::HTMLInputElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HTMLInputElement"*, align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector.3380", %"class.blink::HeapVector.3380"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HeapVector.3380", %"class.blink::HeapVector.3380"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::HeapVector.3380", %"class.blink::HeapVector.3380"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.blink::HeapVector.3380"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  %8 = icmp eq %"class.blink::HTMLInputElement"* %1, null
  br i1 %8, label %57, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::HTMLInputElement"* %1 to %"class.blink::HTMLFormControlElement"*
  %11 = bitcast %"class.blink::HTMLInputElement"* %1 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %12 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %12, i64 171
  %14 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %13, align 8
  %15 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %14(%"class.blink::HTMLFormControlElement"* nonnull %10) #15
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %18, %20
  br i1 %21, label %22, label %57

22:                                               ; preds = %9, %22
  %23 = phi %"class.blink::HTMLInputElement"* [ %24, %22 ], [ %1, %9 ]
  %24 = tail call %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType22NextRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::HTMLInputElement"* nonnull %23, i1 zeroext false) #15
  %25 = icmp eq %"class.blink::HTMLInputElement"* %24, null
  br i1 %25, label %26, label %22

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::HTMLInputElement"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  store %"class.blink::HTMLInputElement"* %23, %"class.blink::HTMLInputElement"** %3, align 8
  %28 = getelementptr inbounds %"class.blink::HeapVector.3380", %"class.blink::HeapVector.3380"* %0, i64 0, i32 0
  br label %29

29:                                               ; preds = %53, %26
  %30 = phi %"class.blink::HTMLInputElement"* [ %51, %53 ], [ %23, %26 ]
  %31 = phi i32 [ %55, %53 ], [ 0, %26 ]
  %32 = phi i32 [ %54, %53 ], [ 0, %26 ]
  %33 = icmp eq i32 %32, %31
  br i1 %33, label %48, label %34, !prof !3

34:                                               ; preds = %29
  %35 = ptrtoint %"class.blink::HTMLInputElement"* %30 to i64
  %36 = load %"class.blink::Member.3165"*, %"class.blink::Member.3165"** %4, align 8
  %37 = zext i32 %32 to i64
  %38 = getelementptr inbounds %"class.blink::Member.3165", %"class.blink::Member.3165"* %36, i64 %37
  %39 = bitcast %"class.blink::Member.3165"* %38 to i64*
  store atomic i64 %35, i64* %39 monotonic, align 8
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %34
  %43 = bitcast %"class.blink::HTMLInputElement"* %30 to i8*
  %44 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %43) #15
  br label %45

45:                                               ; preds = %42, %34
  %46 = load i32, i32* %6, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %6, align 4
  br label %49

48:                                               ; preds = %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16HTMLInputElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3383"* %28, %"class.blink::HTMLInputElement"** nonnull dereferenceable(8) %3) #15
  br label %49

49:                                               ; preds = %45, %48
  %50 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %3, align 8
  %51 = call %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType22NextRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::HTMLInputElement"* %50, i1 zeroext true) #15
  store %"class.blink::HTMLInputElement"* %51, %"class.blink::HTMLInputElement"** %3, align 8
  %52 = icmp eq %"class.blink::HTMLInputElement"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = load i32, i32* %6, align 4
  %55 = load i32, i32* %5, align 8
  br label %29

56:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %57

57:                                               ; preds = %9, %2, %56
  ret void
}

declare dereferenceable(16) %"class.blink::HeapVector.2999"* @_ZN5blink8AXObject24ChildrenIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject29AccessibilityIsIncludedInTreeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::HTMLInputElement"* @_ZN5blink14RadioInputType22NextRadioButtonInGroupEPNS_16HTMLInputElementEb(%"class.blink::HTMLInputElement"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject16GetTextDirectionEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, i64 125
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObject"* %6(%"class.blink::AXObject"* %2) #15
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %29, label %9

9:                                                ; preds = %1
  %10 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %10, i64 125
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call %"class.blink::LayoutObject"* %12(%"class.blink::AXObject"* %2) #15
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyle"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 0
  %23 = and i160 %20, 41538374868278621028243970633760768
  %24 = icmp eq i160 %23, 0
  br i1 %22, label %25, label %27

25:                                               ; preds = %17
  %26 = select i1 %24, i32 1, i32 2
  ret i32 %26

27:                                               ; preds = %17
  %28 = select i1 %24, i32 3, i32 4
  br label %29

29:                                               ; preds = %27, %9, %1
  %30 = phi i32 [ 1, %1 ], [ 1, %9 ], [ %28, %27 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject15GetTextPositionEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, i64 125
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObject"* %6(%"class.blink::AXObject"* %2) #15
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %1
  %10 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %10, i64 125
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call %"class.blink::LayoutObject"* %12(%"class.blink::AXObject"* %2) #15
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyle"* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = lshr i160 %20, 64
  %22 = trunc i160 %21 to i64
  %23 = and i64 %22, 15
  %24 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZNK5blink12AXNodeObject15GetTextPositionEv, i64 0, i64 %23
  %25 = load i32, i32* %24, align 4
  ret i32 %25

26:                                               ; preds = %9, %1
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12AXNodeObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_(%"class.blink::AXNodeObject"*, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %7 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %8 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %8, i64 125
  %10 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %9, align 8
  %11 = tail call %"class.blink::LayoutObject"* %10(%"class.blink::AXObject"* %6) #15
  %12 = icmp eq %"class.blink::LayoutObject"* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %5
  store i32 0, i32* %1, align 4
  store i32 0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %117

14:                                               ; preds = %5
  %15 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %7, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %15, i64 125
  %17 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %16, align 8
  %18 = tail call %"class.blink::LayoutObject"* %17(%"class.blink::AXObject"* %6) #15
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = icmp eq %"class.blink::ComputedStyle"* %20, null
  store i32 0, i32* %1, align 4
  store i32 0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br i1 %21, label %117, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %24, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %26, i64 0, i32 1, i32 0, i32 10, i32 0, i32 0
  %28 = load i16, i16* %27, align 8
  %29 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i8*) acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %35, !prof !4

31:                                               ; preds = %22
  %32 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #15
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  store i16 2800, i16* bitcast (%"class.WTF::StaticSingleton.4177"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL15BoldWeightValueEvE17s_boldWeightValue) #15
  br label %35

35:                                               ; preds = %22, %31, %34
  %36 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.4177"* @_ZZN5blinkL15BoldWeightValueEvE17s_boldWeightValue to i16*), align 2
  %37 = icmp eq i16 %28, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %35
  %39 = load i32, i32* %1, align 4
  %40 = or i32 %39, 1
  store i32 %40, i32* %1, align 4
  br label %41

41:                                               ; preds = %38, %35
  %42 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %23, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %42, i64 0, i32 1, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %44, i64 0, i32 1, i32 0, i32 10, i32 2, i32 0
  %46 = load i16, i16* %45, align 4
  %47 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i8*) acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53, !prof !4

49:                                               ; preds = %41
  %50 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  store i16 80, i16* bitcast (%"class.WTF::StaticSingleton.4177"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL16ItalicSlopeValueEvE13s_italicValue) #15
  br label %53

53:                                               ; preds = %41, %49, %52
  %54 = load i16, i16* bitcast (%"class.WTF::StaticSingleton.4177"* @_ZZN5blinkL16ItalicSlopeValueEvE13s_italicValue to i16*), align 2
  %55 = icmp eq i16 %46, %54
  br i1 %55, label %56, label %59

56:                                               ; preds = %53
  %57 = load i32, i32* %1, align 4
  %58 = or i32 %57, 2
  store i32 %58, i32* %1, align 4
  br label %59

59:                                               ; preds = %56, %53
  %60 = tail call dereferenceable(16) %"class.WTF::Vector.254"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* nonnull %20) #15
  %61 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %60, i64 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %62, i64 %65
  %67 = icmp eq i32 %64, 0
  br i1 %67, label %117, label %68

68:                                               ; preds = %59, %114
  %69 = phi %"class.blink::AppliedTextDecoration"* [ %115, %114 ], [ %62, %59 ]
  %70 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %69, i64 0, i32 0
  %71 = load i8, i8* %70, align 4
  %72 = and i8 %71, 2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %85, label %74

74:                                               ; preds = %68
  %75 = load i32, i32* %1, align 4
  %76 = or i32 %75, 16
  store i32 %76, i32* %1, align 4
  %77 = load i8, i8* %70, align 4
  %78 = lshr i8 %77, 4
  %79 = and i8 %78, 7
  %80 = icmp ult i8 %79, 5
  %81 = add nuw nsw i8 %79, 1
  %82 = select i1 %80, i8 %81, i8 0
  %83 = zext i8 %82 to i32
  store i32 %83, i32* %2, align 4
  %84 = load i8, i8* %70, align 4
  br label %85

85:                                               ; preds = %68, %74
  %86 = phi i8 [ %71, %68 ], [ %84, %74 ]
  %87 = and i8 %86, 4
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %85
  %90 = load i32, i32* %1, align 4
  %91 = or i32 %90, 8
  store i32 %91, i32* %1, align 4
  %92 = load i8, i8* %70, align 4
  %93 = lshr i8 %92, 4
  %94 = and i8 %93, 7
  %95 = icmp ult i8 %94, 5
  %96 = add nuw nsw i8 %94, 1
  %97 = select i1 %95, i8 %96, i8 0
  %98 = zext i8 %97 to i32
  store i32 %98, i32* %3, align 4
  %99 = load i8, i8* %70, align 4
  br label %100

100:                                              ; preds = %85, %89
  %101 = phi i8 [ %86, %85 ], [ %99, %89 ]
  %102 = and i8 %101, 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %114, label %104

104:                                              ; preds = %100
  %105 = load i32, i32* %1, align 4
  %106 = or i32 %105, 4
  store i32 %106, i32* %1, align 4
  %107 = load i8, i8* %70, align 4
  %108 = lshr i8 %107, 4
  %109 = and i8 %108, 7
  %110 = icmp ult i8 %109, 5
  %111 = add nuw nsw i8 %109, 1
  %112 = select i1 %110, i8 %111, i8 0
  %113 = zext i8 %112 to i32
  store i32 %113, i32* %4, align 4
  br label %114

114:                                              ; preds = %100, %104
  %115 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %69, i64 1
  %116 = icmp eq %"class.blink::AppliedTextDecoration"* %115, %66
  br i1 %116, label %117, label %68

117:                                              ; preds = %114, %59, %14, %13
  ret void
}

declare dereferenceable(16) %"class.WTF::Vector.254"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject12GetTextAlignEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject12IsTextObjectEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %28, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %6, i64 125
  %8 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call %"class.blink::LayoutObject"* %8(%"class.blink::AXObject"* %2) #15
  %10 = icmp eq %"class.blink::LayoutObject"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %4
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %5, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %12, i64 125
  %14 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call %"class.blink::LayoutObject"* %14(%"class.blink::AXObject"* %2) #15
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = icmp eq %"class.blink::ComputedStyle"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = lshr i160 %22, 58
  %24 = trunc i160 %23 to i64
  %25 = and i64 %24, 15
  %26 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table._ZNK5blink12AXNodeObject12GetTextAlignEv, i64 0, i64 %25
  %27 = load i32, i32* %26, align 4
  ret i32 %27

28:                                               ; preds = %11, %1, %4
  ret i32 0
}

declare zeroext i1 @_ZNK5blink8AXObject12IsTextObjectEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink12AXNodeObject13GetTextIndentEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject12IsTextObjectEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %33, label %4

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %6, i64 125
  %8 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call %"class.blink::LayoutObject"* %8(%"class.blink::AXObject"* %2) #15
  %10 = icmp eq %"class.blink::LayoutObject"* %9, null
  br i1 %10, label %33, label %11

11:                                               ; preds = %4
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %5, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %12, i64 125
  %14 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call %"class.blink::LayoutObject"* %14(%"class.blink::AXObject"* %2) #15
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = icmp eq %"class.blink::ComputedStyle"* %17, null
  br i1 %18, label %33, label %19

19:                                               ; preds = %11
  %20 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %5, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %20, i64 125
  %22 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %21, align 8
  %23 = tail call %"class.blink::LayoutObject"* %22(%"class.blink::AXObject"* %2) #15
  %24 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject24InclusiveContainingBlockEv(%"class.blink::LayoutObject"* %23) #15
  %25 = icmp eq %"class.blink::LayoutBlock"* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %19
  %27 = tail call i32 @_ZNK5blink11LayoutBlock16TextIndentOffsetEv(%"class.blink::LayoutBlock"* nonnull %24) #15
  %28 = sitofp i32 %27 to float
  %29 = fmul float %28, 1.562500e-02
  %30 = fpext float %29 to double
  %31 = fdiv double %30, 0x400E3C78F1E3C78E
  %32 = fptrunc double %31 to float
  br label %33

33:                                               ; preds = %11, %19, %26, %1, %4
  %34 = phi float [ 0.000000e+00, %4 ], [ 0.000000e+00, %1 ], [ 0.000000e+00, %11 ], [ %32, %26 ], [ 0.000000e+00, %19 ]
  ret float %34
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject24InclusiveContainingBlockEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock16TextIndentOffsetEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject12ImageDataUrlERKNS_7IntSizeE(%"class.blink::AXNodeObject"*, %"class.blink::IntSize"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.absl::optional.977", align 8
  %6 = alloca %"class.absl::optional.977", align 8
  %7 = alloca %"class.absl::optional.977", align 8
  %8 = alloca %class.sk_sp.3527, align 8
  %9 = alloca %"class.cc::PaintImage", align 8
  %10 = alloca %class.SkBitmap, align 8
  %11 = alloca %class.SkPixmap, align 8
  %12 = alloca %struct.SkImageInfo, align 16
  %13 = alloca %class.SkCanvas, align 8
  %14 = alloca %class.SkSurfaceProps, align 4
  %15 = alloca { <2 x float>, <2 x float> }, align 8
  %16 = bitcast { <2 x float>, <2 x float> }* %15 to %struct.SkRect*
  %17 = alloca %struct.SkSamplingOptions, align 4
  %18 = alloca %struct.SkImageInfo, align 16
  %19 = alloca %class.SkPixmap, align 8
  %20 = alloca %class.sk_sp.3527, align 8
  %21 = alloca double, align 8
  %22 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %22) #15
  br i1 %23, label %369, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %369, label %28

28:                                               ; preds = %24
  %29 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 64) #15
  %30 = bitcast i8* %29 to %"class.blink::ImageBitmapOptions"*
  tail call void @_ZN5blink18ImageBitmapOptionsC1Ev(%"class.blink::ImageBitmapOptions"* %30) #15
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 48
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %369

39:                                               ; preds = %28
  %40 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %41 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 2
  %44 = bitcast %"class.blink::Member.318"* %43 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %45 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %47, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.absl::optional.977", %"class.absl::optional.977"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %52) #15
  %53 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #15
  %54 = bitcast i8* %53 to %"class.blink::ImageBitmap"*
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 4
  %56 = bitcast %"class.blink::Member.318"* %55 to %"class.blink::ImageElementBase"*
  store i8 0, i8* %52, align 8
  tail call void @_ZN5blink11ImageBitmapC1EPNS_16ImageElementBaseEN4absl8optionalINS_7IntRectEEEPKNS_18ImageBitmapOptionsE(%"class.blink::ImageBitmap"* %54, %"class.blink::ImageElementBase"* %56, %"class.absl::optional.977"* nonnull byval(%"class.absl::optional.977") align 8 %7, %"class.blink::ImageBitmapOptions"* %30) #15
  br label %91

57:                                               ; preds = %39
  %58 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCanvasTagE, align 8
  %59 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 2
  %62 = bitcast %"class.blink::Member.318"* %61 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %65, %67
  br i1 %68, label %69, label %74

69:                                               ; preds = %57
  %70 = bitcast %"class.blink::Node"* %26 to %"class.blink::HTMLCanvasElement"*
  %71 = getelementptr inbounds %"class.absl::optional.977", %"class.absl::optional.977"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %71) #15
  %72 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #15
  %73 = bitcast i8* %72 to %"class.blink::ImageBitmap"*
  store i8 0, i8* %71, align 8
  tail call void @_ZN5blink11ImageBitmapC1EPNS_17HTMLCanvasElementEN4absl8optionalINS_7IntRectEEEPKNS_18ImageBitmapOptionsE(%"class.blink::ImageBitmap"* %73, %"class.blink::HTMLCanvasElement"* nonnull %70, %"class.absl::optional.977"* nonnull byval(%"class.absl::optional.977") align 8 %6, %"class.blink::ImageBitmapOptions"* %30) #15
  br label %91

74:                                               ; preds = %57
  %75 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kVideoTagE, align 8
  %76 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 1, i32 2
  %79 = bitcast %"class.blink::Member.318"* %78 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %77, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %82, %84
  br i1 %85, label %86, label %369

86:                                               ; preds = %74
  %87 = bitcast %"class.blink::Node"* %26 to %"class.blink::HTMLVideoElement"*
  %88 = getelementptr inbounds %"class.absl::optional.977", %"class.absl::optional.977"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %88) #15
  %89 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #15
  %90 = bitcast i8* %89 to %"class.blink::ImageBitmap"*
  store i8 0, i8* %88, align 8
  tail call void @_ZN5blink11ImageBitmapC1EPNS_16HTMLVideoElementEN4absl8optionalINS_7IntRectEEEPKNS_18ImageBitmapOptionsE(%"class.blink::ImageBitmap"* %90, %"class.blink::HTMLVideoElement"* nonnull %87, %"class.absl::optional.977"* nonnull byval(%"class.absl::optional.977") align 8 %5, %"class.blink::ImageBitmapOptions"* %30) #15
  br label %91

91:                                               ; preds = %69, %86, %51
  %92 = phi i8* [ %72, %69 ], [ %89, %86 ], [ %53, %51 ]
  %93 = phi i8* [ %71, %69 ], [ %88, %86 ], [ %52, %51 ]
  %94 = phi %"class.blink::ImageBitmap"* [ %73, %69 ], [ %90, %86 ], [ %54, %51 ]
  %95 = getelementptr inbounds i8, i8* %92, i64 -4
  %96 = bitcast i8* %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = or i16 %97, 1
  store atomic i16 %98, i16* %96 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %93) #15
  %99 = icmp eq %"class.blink::ImageBitmap"* %94, null
  br i1 %99, label %369, label %100

100:                                              ; preds = %91
  %101 = getelementptr inbounds %"class.blink::ImageBitmap", %"class.blink::ImageBitmap"* %94, i64 0, i32 3, i32 0
  %102 = load %"class.blink::StaticBitmapImage"*, %"class.blink::StaticBitmapImage"** %101, align 8
  %103 = icmp eq %"class.blink::StaticBitmapImage"* %102, null
  br i1 %103, label %369, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %102, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = atomicrmw add i32* %105, i32 1 monotonic
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %104
  %109 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0)) #15
  %110 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #15
  br label %111

111:                                              ; preds = %104, %108
  %112 = bitcast %class.sk_sp.3527* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #15
  %113 = getelementptr inbounds %class.sk_sp.3527, %class.sk_sp.3527* %8, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %113, align 8
  %114 = bitcast %"class.cc::PaintImage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %114) #15
  %115 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %102, i64 0, i32 0
  %116 = bitcast %"class.blink::StaticBitmapImage"* %102 to void (%"class.cc::PaintImage"*, %"class.blink::Image"*)***
  %117 = load void (%"class.cc::PaintImage"*, %"class.blink::Image"*)**, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)** %117, i64 30
  %119 = load void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)** %118, align 8
  call void %119(%"class.cc::PaintImage"* nonnull sret %9, %"class.blink::Image"* %115) #15
  call void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp.3527* nonnull sret %8, %"class.cc::PaintImage"* nonnull %9) #15
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %114) #15
  %120 = load %class.SkImage*, %class.SkImage** %113, align 8
  %121 = icmp eq %class.SkImage* %120, null
  br i1 %121, label %356, label %122

122:                                              ; preds = %111
  %123 = getelementptr inbounds %class.SkImage, %class.SkImage* %120, i64 0, i32 2, i32 1, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %124, 1
  br i1 %125, label %344, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %class.SkImage, %class.SkImage* %120, i64 0, i32 2, i32 1, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = icmp slt i32 %128, 1
  br i1 %129, label %344, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %139, label %134

134:                                              ; preds = %130
  %135 = sitofp i32 %132 to double
  %136 = sitofp i32 %124 to double
  %137 = fdiv double %135, %136
  %138 = fptrunc double %137 to float
  br label %139

139:                                              ; preds = %130, %134
  %140 = phi float [ %138, %134 ], [ 1.000000e+00, %130 ]
  %141 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %149, label %144

144:                                              ; preds = %139
  %145 = sitofp i32 %142 to double
  %146 = sitofp i32 %128 to double
  %147 = fdiv double %145, %146
  %148 = fptrunc double %147 to float
  br label %149

149:                                              ; preds = %139, %144
  %150 = phi float [ %148, %144 ], [ 1.000000e+00, %139 ]
  %151 = fcmp olt float %150, %140
  %152 = select i1 %151, float %150, float %140
  %153 = fcmp oge float %152, 1.000000e+00
  %154 = select i1 %153, float 1.000000e+00, float %152
  %155 = sitofp i32 %124 to float
  %156 = fmul float %154, %155
  %157 = call float @llvm.round.f32(float %156) #15
  %158 = fptosi float %157 to i32
  %159 = sitofp i32 %128 to float
  %160 = fmul float %154, %159
  %161 = call float @llvm.round.f32(float %160) #15
  %162 = fptosi float %161 to i32
  %163 = bitcast %class.SkBitmap* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %163) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %10) #15
  %164 = bitcast %class.SkPixmap* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %164) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 0, i64 40, i1 false) #15
  %165 = fcmp oeq float %154, 1.000000e+00
  br i1 %165, label %166, label %175

166:                                              ; preds = %149
  %167 = load %class.SkImage*, %class.SkImage** %113, align 8
  %168 = call zeroext i1 @_ZNK7SkImage10peekPixelsEP8SkPixmap(%class.SkImage* %167, %class.SkPixmap* nonnull %11) #15
  br i1 %168, label %169, label %175

169:                                              ; preds = %166
  %170 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK8SkPixmap(%class.SkBitmap* nonnull %10, %class.SkPixmap* nonnull dereferenceable(40) %11) #15
  %171 = zext i32 %162 to i64
  %172 = shl nuw i64 %171, 32
  %173 = zext i32 %158 to i64
  %174 = or i64 %172, %173
  br label %212

175:                                              ; preds = %166, %149
  %176 = bitcast %struct.SkImageInfo* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #15
  %177 = zext i32 %162 to i64
  %178 = shl nuw i64 %177, 32
  %179 = zext i32 %158 to i64
  %180 = or i64 %178, %179
  %181 = bitcast %struct.SkImageInfo* %12 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %181, align 16, !alias.scope !6
  %182 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 1
  %183 = bitcast %struct.SkISize* %182 to i64*
  store i64 %180, i64* %183, align 16, !alias.scope !6
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %10, %struct.SkImageInfo* nonnull dereferenceable(24) %12) #15
  %184 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %12, i64 0, i32 0, i32 0, i32 0
  %185 = load %class.SkColorSpace*, %class.SkColorSpace** %184, align 16
  %186 = icmp eq %class.SkColorSpace* %185, null
  br i1 %186, label %193, label %187

187:                                              ; preds = %175
  %188 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %185, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = atomicrmw add i32* %188, i32 -1 acq_rel
  %190 = icmp eq i32 %189, 1
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = bitcast %class.SkColorSpace* %185 to i8*
  call void @_ZdlPv(i8* %192) #17
  br label %193

193:                                              ; preds = %191, %187, %175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #15
  %194 = bitcast %class.SkCanvas* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %194) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %194, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.3420, [384 x i64], %class.sk_sp.3421, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.3422", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.3428" }* @__const._ZNK5blink12AXNodeObject12ImageDataUrlERKNS_7IntSizeE.canvas to i8*), i64 3232, i1 false)
  %195 = bitcast %class.SkSurfaceProps* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #15
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %14) #15
  call void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %13, %class.SkBitmap* nonnull dereferenceable(56) %10, %class.SkSurfaceProps* nonnull dereferenceable(8) %14) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #15
  %196 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRGBA4f*
  %197 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #15
  %198 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #15
  %199 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %200 = extractvalue { <2 x float>, <2 x float> } %198, 0
  store <2 x float> %200, <2 x float>* %199, align 8
  %201 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %202 = extractvalue { <2 x float>, <2 x float> } %198, 1
  store <2 x float> %202, <2 x float>* %201, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* nonnull %13, %struct.SkRGBA4f* nonnull dereferenceable(16) %196, i32 1) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #15
  %203 = bitcast { <2 x float>, <2 x float> }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %203) #15
  %204 = sitofp i32 %158 to float
  %205 = insertelement <2 x float> undef, float %204, i32 0
  %206 = sitofp i32 %162 to float
  %207 = insertelement <2 x float> %205, float %206, i32 1
  %208 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %208, align 8
  %209 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 1
  store <2 x float> %207, <2 x float>* %209, align 8
  %210 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %210) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %210, i8 0, i64 20, i1 false)
  %211 = load %class.SkImage*, %class.SkImage** %113, align 8
  call void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %13, %class.SkImage* %211, %struct.SkRect* nonnull dereferenceable(16) %16, %struct.SkSamplingOptions* nonnull dereferenceable(20) %17, %class.SkPaint* null) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %210) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %203) #15
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %194) #15
  br label %212

212:                                              ; preds = %169, %193
  %213 = phi i64 [ %174, %169 ], [ %180, %193 ]
  %214 = bitcast %struct.SkImageInfo* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #15
  %215 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 0, i32 0, i32 0
  %216 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 0, i32 1
  %217 = bitcast %struct.SkImageInfo* %18 to <2 x i64>*
  store <2 x i64> <i64 0, i64 12884901892>, <2 x i64>* %217, align 16, !alias.scope !11
  %218 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 1
  %219 = bitcast %struct.SkISize* %218 to i64*
  store i64 %213, i64* %219, align 16, !alias.scope !11
  %220 = shl i64 %213, 32
  %221 = ashr exact i64 %220, 32
  %222 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 0
  %223 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %222) #15
  %224 = sext i32 %223 to i64
  %225 = mul nsw i64 %221, %224
  %226 = icmp ult i64 %225, 2147483648
  %227 = select i1 %226, i64 %225, i64 0
  %228 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %18, i64 %227) #15
  %229 = icmp ult i64 %228, 4294967296
  br i1 %229, label %231, label %230, !prof !5

230:                                              ; preds = %212
  call void @llvm.trap() #15
  unreachable

231:                                              ; preds = %212
  %232 = trunc i64 %228 to i32
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %239, label %234

234:                                              ; preds = %231
  %235 = and i64 %228, 4294967295
  %236 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %235) #15
  %237 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %236) #15
  %238 = ptrtoint i8* %237 to i64
  br label %239

239:                                              ; preds = %231, %234
  %240 = phi i64 [ 0, %231 ], [ %238, %234 ]
  %241 = phi i64 [ 0, %231 ], [ %235, %234 ]
  %242 = phi i8* [ null, %231 ], [ %237, %234 ]
  call void @llvm.memset.p0i8.i64(i8* align 1 %242, i8 0, i64 %241, i1 false) #15
  %243 = bitcast %class.SkPixmap* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %243) #15
  %244 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %19, i64 0, i32 2
  %245 = bitcast %struct.SkImageInfo* %244 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %245, i8 -86, i64 24, i1 false)
  %246 = inttoptr i64 %240 to i8*
  %247 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %19, i64 0, i32 0
  store i8* %246, i8** %247, align 8
  %248 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %19, i64 0, i32 1
  store i64 %227, i64* %248, align 8
  %249 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  %250 = load %class.SkColorSpace*, %class.SkColorSpace** %215, align 16
  %251 = icmp eq %class.SkColorSpace* %250, null
  br i1 %251, label %255, label %252

252:                                              ; preds = %239
  %253 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %250, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = atomicrmw add i32* %253, i32 1 monotonic
  br label %255

255:                                              ; preds = %239, %252
  store %class.SkColorSpace* %250, %class.SkColorSpace** %249, align 8
  %256 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %19, i64 0, i32 2, i32 0, i32 1
  %257 = bitcast i32* %216 to <2 x i64>*
  %258 = load <2 x i64>, <2 x i64>* %257, align 8
  %259 = bitcast i32* %256 to <2 x i64>*
  store <2 x i64> %258, <2 x i64>* %259, align 8
  %260 = bitcast %class.sk_sp.3527* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #15
  call void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.3527* nonnull sret %20, %class.SkBitmap* nonnull dereferenceable(56) %10) #15
  %261 = getelementptr inbounds %class.sk_sp.3527, %class.sk_sp.3527* %20, i64 0, i32 0
  %262 = load %class.SkImage*, %class.SkImage** %261, align 8
  %263 = call zeroext i1 @_ZNK7SkImage10readPixelsERK8SkPixmapiiNS_11CachingHintE(%class.SkImage* %262, %class.SkPixmap* nonnull dereferenceable(40) %19, i32 0, i32 0, i32 0) #15
  %264 = load %class.SkImage*, %class.SkImage** %261, align 8
  %265 = icmp eq %class.SkImage* %264, null
  br i1 %265, label %276, label %266

266:                                              ; preds = %255
  %267 = getelementptr inbounds %class.SkImage, %class.SkImage* %264, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = atomicrmw add i32* %267, i32 -1 acq_rel
  %269 = icmp eq i32 %268, 1
  br i1 %269, label %270, label %276

270:                                              ; preds = %266
  %271 = bitcast %class.SkImage* %264 to %class.SkRefCntBase*
  %272 = bitcast %class.SkImage* %264 to void (%class.SkRefCntBase*)***
  %273 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %272, align 8
  %274 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %273, i64 2
  %275 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %274, align 8
  call void %275(%class.SkRefCntBase* nonnull %271) #15
  br label %276

276:                                              ; preds = %255, %266, %270
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #15
  br i1 %263, label %277, label %309

277:                                              ; preds = %276
  %278 = call %"class.blink::ImageDataBuffer"* @_ZN5blink15ImageDataBuffer6CreateERK8SkPixmap(%class.SkPixmap* nonnull dereferenceable(40) %19) #15
  %279 = icmp eq %"class.blink::ImageDataBuffer"* %278, null
  br i1 %279, label %309, label %280

280:                                              ; preds = %277
  %281 = bitcast double* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %281) #15
  store double 1.000000e+00, double* %21, align 8
  %282 = call %"class.WTF::StringImpl"* @_ZNK5blink15ImageDataBuffer9ToDataURLENS_21ImageEncodingMimeTypeERKd(%"class.blink::ImageDataBuffer"* nonnull %278, i32 0, double* nonnull dereferenceable(8) %21) #15
  %283 = ptrtoint %"class.WTF::StringImpl"* %282 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %281) #15
  %284 = getelementptr inbounds %"class.blink::ImageDataBuffer", %"class.blink::ImageDataBuffer"* %278, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %285 = load %class.SkColorSpace*, %class.SkColorSpace** %284, align 8
  %286 = icmp eq %class.SkColorSpace* %285, null
  br i1 %286, label %293, label %287

287:                                              ; preds = %280
  %288 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %285, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = atomicrmw add i32* %288, i32 -1 acq_rel
  %290 = icmp eq i32 %289, 1
  br i1 %290, label %291, label %293

291:                                              ; preds = %287
  %292 = bitcast %class.SkColorSpace* %285 to i8*
  call void @_ZdlPv(i8* %292) #17
  br label %293

293:                                              ; preds = %291, %287, %280
  %294 = getelementptr inbounds %"class.blink::ImageDataBuffer", %"class.blink::ImageDataBuffer"* %278, i64 0, i32 0, i32 0
  %295 = load %class.SkImage*, %class.SkImage** %294, align 8
  %296 = icmp eq %class.SkImage* %295, null
  br i1 %296, label %307, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %class.SkImage, %class.SkImage* %295, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = atomicrmw add i32* %298, i32 -1 acq_rel
  %300 = icmp eq i32 %299, 1
  br i1 %300, label %301, label %307

301:                                              ; preds = %297
  %302 = bitcast %class.SkImage* %295 to %class.SkRefCntBase*
  %303 = bitcast %class.SkImage* %295 to void (%class.SkRefCntBase*)***
  %304 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %303, align 8
  %305 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %304, i64 2
  %306 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %305, align 8
  call void %306(%class.SkRefCntBase* nonnull %302) #15
  br label %307

307:                                              ; preds = %301, %297, %293
  %308 = bitcast %"class.blink::ImageDataBuffer"* %278 to i8*
  call void @free(i8* %308) #15
  br label %309

309:                                              ; preds = %277, %307, %276
  %310 = phi i64 [ 0, %276 ], [ %283, %307 ], [ 0, %277 ]
  %311 = load %class.SkColorSpace*, %class.SkColorSpace** %249, align 8
  %312 = icmp eq %class.SkColorSpace* %311, null
  br i1 %312, label %319, label %313

313:                                              ; preds = %309
  %314 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %311, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = atomicrmw add i32* %314, i32 -1 acq_rel
  %316 = icmp eq i32 %315, 1
  br i1 %316, label %317, label %319

317:                                              ; preds = %313
  %318 = bitcast %class.SkColorSpace* %311 to i8*
  call void @_ZdlPv(i8* %318) #17
  br label %319

319:                                              ; preds = %309, %313, %317
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %243) #15
  %320 = icmp eq i64 %240, 0
  br i1 %320, label %322, label %321, !prof !5

321:                                              ; preds = %319
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #15
  br label %322

322:                                              ; preds = %319, %321
  %323 = load %class.SkColorSpace*, %class.SkColorSpace** %215, align 16
  %324 = icmp eq %class.SkColorSpace* %323, null
  br i1 %324, label %331, label %325

325:                                              ; preds = %322
  %326 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %323, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = atomicrmw add i32* %326, i32 -1 acq_rel
  %328 = icmp eq i32 %327, 1
  br i1 %328, label %329, label %331

329:                                              ; preds = %325
  %330 = bitcast %class.SkColorSpace* %323 to i8*
  call void @_ZdlPv(i8* %330) #17
  br label %331

331:                                              ; preds = %322, %325, %329
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #15
  %332 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  %333 = load %class.SkColorSpace*, %class.SkColorSpace** %332, align 8
  %334 = icmp eq %class.SkColorSpace* %333, null
  br i1 %334, label %341, label %335

335:                                              ; preds = %331
  %336 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = atomicrmw add i32* %336, i32 -1 acq_rel
  %338 = icmp eq i32 %337, 1
  br i1 %338, label %339, label %341

339:                                              ; preds = %335
  %340 = bitcast %class.SkColorSpace* %333 to i8*
  call void @_ZdlPv(i8* %340) #17
  br label %341

341:                                              ; preds = %339, %335, %331
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %164) #15
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %10) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %163) #15
  %342 = load %class.SkImage*, %class.SkImage** %113, align 8
  %343 = icmp eq %class.SkImage* %342, null
  br i1 %343, label %356, label %344

344:                                              ; preds = %126, %122, %341
  %345 = phi i64 [ %310, %341 ], [ 0, %122 ], [ 0, %126 ]
  %346 = phi %class.SkImage* [ %342, %341 ], [ %120, %122 ], [ %120, %126 ]
  %347 = getelementptr inbounds %class.SkImage, %class.SkImage* %346, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %348 = atomicrmw add i32* %347, i32 -1 acq_rel
  %349 = icmp eq i32 %348, 1
  br i1 %349, label %350, label %356

350:                                              ; preds = %344
  %351 = bitcast %class.SkImage* %346 to %class.SkRefCntBase*
  %352 = bitcast %class.SkImage* %346 to void (%class.SkRefCntBase*)***
  %353 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %352, align 8
  %354 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %353, i64 2
  %355 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %354, align 8
  call void %355(%class.SkRefCntBase* nonnull %351) #15
  br label %356

356:                                              ; preds = %111, %341, %344, %350
  %357 = phi i64 [ %310, %341 ], [ %345, %344 ], [ %345, %350 ], [ 0, %111 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #15
  %358 = getelementptr inbounds %"class.blink::StaticBitmapImage", %"class.blink::StaticBitmapImage"* %102, i64 0, i32 0, i32 1, i32 0
  %359 = getelementptr inbounds %"class.base::RefCountedThreadSafe.3182", %"class.base::RefCountedThreadSafe.3182"* %358, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = atomicrmw sub i32* %359, i32 1 acq_rel
  %361 = icmp eq i32 %360, 1
  br i1 %361, label %362, label %369

362:                                              ; preds = %356
  %363 = getelementptr inbounds %"class.base::RefCountedThreadSafe.3182", %"class.base::RefCountedThreadSafe.3182"* %358, i64 -2
  %364 = bitcast %"class.base::RefCountedThreadSafe.3182"* %363 to %"class.blink::Image"*
  %365 = bitcast %"class.base::RefCountedThreadSafe.3182"* %363 to void (%"class.blink::Image"*)***
  %366 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %365, align 8
  %367 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %366, i64 1
  %368 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %367, align 8
  call void %368(%"class.blink::Image"* nonnull %364) #15
  br label %369

369:                                              ; preds = %28, %74, %100, %2, %91, %356, %362, %24
  %370 = phi i64 [ 0, %24 ], [ 0, %91 ], [ %357, %356 ], [ %357, %362 ], [ 0, %2 ], [ 0, %74 ], [ 0, %100 ], [ 0, %28 ]
  %371 = inttoptr i64 %370 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %371
}

declare void @_ZNK2cc10PaintImage12GetSwSkImageEv(%class.sk_sp.3527* sret, %"class.cc::PaintImage"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare zeroext i1 @_ZNK7SkImage10peekPixelsEP8SkPixmap(%class.SkImage*, %class.SkPixmap*) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK8SkPixmap(%class.SkBitmap*, %class.SkPixmap* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #1

declare void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD1Ev(%class.SkCanvas*) unnamed_addr #2

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #1

declare void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.3527* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare zeroext i1 @_ZNK7SkImage10readPixelsERK8SkPixmapiiNS_11CachingHintE(%class.SkImage*, %class.SkPixmap* dereferenceable(40), i32, i32, i32) local_unnamed_addr #1

declare %"class.blink::ImageDataBuffer"* @_ZN5blink15ImageDataBuffer6CreateERK8SkPixmap(%class.SkPixmap* dereferenceable(40)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15ImageDataBuffer9ToDataURLENS_21ImageEncodingMimeTypeERKd(%"class.blink::ImageDataBuffer"*, i32, double* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject9AccessKeyEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %8, %1, %4
  %14 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %73

15:                                               ; preds = %8
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAccesskeyAttrE, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 1, i32 3
  %18 = bitcast %"class.blink::Member.320"* %17 to %"class.blink::ElementData"**
  %19 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %18, align 8
  %20 = icmp eq %"class.blink::ElementData"* %19, null
  br i1 %20, label %71, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::ElementData"* %19 to %"class.blink::UniqueElementData"*
  %28 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 1, i32 1
  %29 = bitcast %"class.blink::Member.354"* %28 to %"class.blink::Attribute"**
  %30 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %27, i64 0, i32 2, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  br label %38

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %19, i64 1
  %35 = bitcast %"class.blink::ElementData"* %34 to %"class.blink::Attribute"*
  %36 = lshr i32 %23, 1
  %37 = and i32 %36, 268435455
  br label %38

38:                                               ; preds = %33, %26
  %39 = phi %"class.blink::Attribute"* [ %35, %33 ], [ %30, %26 ]
  %40 = phi i32 [ %37, %33 ], [ %32, %26 ]
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 %41
  %43 = icmp eq i32 %40, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %16, i64 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %64, %44
  %50 = phi %"class.blink::Attribute"* [ %39, %44 ], [ %65, %64 ]
  %51 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %53 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %52, %46
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %56, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %52, i64 0, i32 4, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, %62
  br i1 %63, label %67, label %64

64:                                               ; preds = %59, %54
  %65 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 1
  %66 = icmp eq %"class.blink::Attribute"* %65, %42
  br i1 %66, label %71, label %49

67:                                               ; preds = %59, %49
  %68 = icmp eq %"class.blink::Attribute"* %50, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 0, i32 1
  br label %73

71:                                               ; preds = %64, %67, %38, %15
  %72 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %73

73:                                               ; preds = %71, %69, %13
  %74 = phi %"class.WTF::AtomicString"* [ %14, %13 ], [ %72, %71 ], [ %70, %69 ]
  ret %"class.WTF::AtomicString"* %74
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject10ColorValueEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.blink::Color", align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %6, label %82, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %82, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 48
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %82

16:                                               ; preds = %11
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 2
  %21 = bitcast %"class.blink::Member.318"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  %28 = bitcast %"class.blink::Node"* %9 to %"class.blink::HTMLInputElement"*
  br i1 %27, label %29, label %82

29:                                               ; preds = %16
  %30 = tail call zeroext i1 @_ZNK5blink8AXObject11IsColorWellEv(%"class.blink::AXObject"* %5) #15
  br i1 %30, label %31, label %82

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Node"* %9 to %"class.blink::Element"*
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %34 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %32, %"class.blink::QualifiedName"* dereferenceable(8) %33) #15
  %35 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %40, align 8
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %41, i64* %42, align 8
  br label %50

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  br label %50

50:                                               ; preds = %39, %43
  %51 = phi i32 [ %46, %43 ], [ 0, %39 ]
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %51, i32* %52, align 8
  %53 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [6 x i8]* nonnull dereferenceable(6) @.str.10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #15
  br i1 %53, label %54, label %82

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::Color"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #15
  %56 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %3, i64 0, i32 0
  store i32 0, i32* %56, align 4
  %57 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #15
  %58 = bitcast %"class.blink::Node"* %9 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %59 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %59, i64 195
  %61 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %60, align 8
  %62 = call %"class.WTF::StringImpl"* %61(%"class.blink::HTMLInputElement"* nonnull %28) #15
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = call zeroext i1 @_ZN5blink5Color13SetFromStringERKN3WTF6StringE(%"class.blink::Color"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %54
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %80

80:                                               ; preds = %54, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #15
  %81 = load i32, i32* %56, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #15
  br label %82

82:                                               ; preds = %16, %1, %7, %11, %50, %29, %80
  %83 = phi i32 [ %81, %80 ], [ 0, %29 ], [ 0, %50 ], [ 0, %16 ], [ 0, %11 ], [ 0, %7 ], [ 0, %1 ]
  ret i32 %83
}

declare zeroext i1 @_ZNK5blink8AXObject11IsColorWellEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [6 x i8]* dereferenceable(6)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %125, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %153, %14, %28, %125, %139, %42, %59, %77, %93, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %14 ], [ false, %28 ], [ false, %125 ], [ false, %139 ], [ %166, %153 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  ret i1 %124

125:                                              ; preds = %28
  %126 = getelementptr inbounds i8, i8* %15, i64 2
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = sext i8 %136 to i32
  %138 = icmp eq i32 %131, %137
  br i1 %138, label %139, label %75

139:                                              ; preds = %125
  %140 = getelementptr inbounds i8, i8* %15, i64 3
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i64
  %143 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %145, %151
  br i1 %152, label %153, label %75

153:                                              ; preds = %139
  %154 = getelementptr inbounds i8, i8* %15, i64 4
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %159, %165
  br label %75
}

declare zeroext i1 @_ZN5blink5Color13SetFromStringERKN3WTF6StringE(%"class.blink::Color"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject15BackgroundColorEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, i64 125
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObject"* %6(%"class.blink::AXObject"* %2) #15
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %55, label %9

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #15
  %11 = icmp eq i32 %10, 145
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  %13 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8AXObject17DocumentFrameViewEv(%"class.blink::AXObject"* %2) #15
  %14 = icmp eq %"class.blink::LocalFrameView"* %13, null
  br i1 %14, label %55, label %15

15:                                               ; preds = %12
  %16 = tail call i32 @_ZNK5blink14LocalFrameView19BaseBackgroundColorEv(%"class.blink::LocalFrameView"* nonnull %13) #15
  br label %55

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = icmp eq %"class.blink::ComputedStyle"* %19, null
  br i1 %20, label %55, label %21

21:                                               ; preds = %17
  %22 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #15
  %23 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* nonnull %19, %"class.blink::CSSProperty"* dereferenceable(24) %22) #15
  %24 = icmp ult i32 %23, 16777216
  br i1 %24, label %25, label %52

25:                                               ; preds = %21
  %26 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %37, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %32, i64 0, i32 39
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 262144
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %52

37:                                               ; preds = %28, %25
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %39, i64 0, i32 2, i32 5
  %41 = bitcast [7 x i8]* %40 to i56*
  %42 = load i56, i56* %41, align 8
  %43 = and i56 %42, 281474976710656
  %44 = icmp eq i56 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %39, i64 0, i32 2
  tail call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %46) #15
  %47 = load i56, i56* %41, align 8
  br label %48

48:                                               ; preds = %37, %45
  %49 = phi i56 [ %42, %37 ], [ %47, %45 ]
  %50 = and i56 %49, 8796093022208
  %51 = icmp eq i56 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48, %28, %21
  %53 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #15
  %54 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* nonnull %19, %"class.blink::CSSProperty"* dereferenceable(24) %53) #15
  br label %55

55:                                               ; preds = %48, %52, %17, %15, %12, %1
  %56 = phi i32 [ 0, %1 ], [ %16, %15 ], [ -1, %12 ], [ %54, %52 ], [ 0, %17 ], [ 0, %48 ]
  ret i32 %56
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8AXObject17DocumentFrameViewEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink14LocalFrameView19BaseBackgroundColorEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject8GetColorEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, i64 125
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObject"* %6(%"class.blink::AXObject"* %2) #15
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink8AXObject11IsColorWellEv(%"class.blink::AXObject"* %2) #15
  br i1 %10, label %22, label %11

11:                                               ; preds = %9
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %12, i64 125
  %14 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call %"class.blink::LayoutObject"* %14(%"class.blink::AXObject"* %2) #15
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = icmp eq %"class.blink::ComputedStyle"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %11
  %20 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() #15
  %21 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* nonnull %17, %"class.blink::CSSProperty"* dereferenceable(24) %20) #15
  br label %22

22:                                               ; preds = %11, %9, %1, %19
  %23 = phi i32 [ %21, %19 ], [ -16777216, %1 ], [ -16777216, %9 ], [ -16777216, %11 ]
  ret i32 %23
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyColorEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject18ComputedFontFamilyEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, i64 125
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObject"* %6(%"class.blink::AXObject"* %2) #15
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %27

11:                                               ; preds = %1
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %12, i64 125
  %14 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call %"class.blink::LayoutObject"* %14(%"class.blink::AXObject"* %2) #15
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = icmp eq %"class.blink::ComputedStyle"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %11
  %20 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %27

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %23, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %19, %21, %9
  %28 = phi %"class.WTF::AtomicString"* [ %10, %9 ], [ %26, %21 ], [ %20, %19 ]
  ret %"class.WTF::AtomicString"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject26FontFamilyForSerializationEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, i64 125
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObject"* %6(%"class.blink::AXObject"* %2) #15
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %35, label %9

9:                                                ; preds = %1
  %10 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %10, i64 125
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call %"class.blink::LayoutObject"* %12(%"class.blink::AXObject"* %2) #15
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyle"* %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %21, i64 0, i32 1
  %23 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %22) #15
  %24 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %23, i64 0, i32 2
  %25 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %24, align 8
  %26 = icmp eq %"class.blink::SimpleFontData"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %22, i64 0, i32 0
  %29 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %23, %"class.blink::FontDescription"* dereferenceable(80) %28) #15
  store %"class.blink::SimpleFontData"* %29, %"class.blink::SimpleFontData"** %24, align 8
  %30 = icmp eq %"class.blink::SimpleFontData"* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %17, %27
  %32 = phi %"class.blink::SimpleFontData"* [ %29, %27 ], [ %25, %17 ]
  %33 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %32, i64 0, i32 5
  %34 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16FontPlatformData14FontFamilyNameEv(%"class.blink::FontPlatformData"* %33) #15
  br label %35

35:                                               ; preds = %27, %9, %1, %31
  %36 = phi %"class.WTF::StringImpl"* [ %34, %31 ], [ null, %1 ], [ null, %9 ], [ null, %27 ]
  ret %"class.WTF::StringImpl"* %36
}

declare %"class.WTF::StringImpl"* @_ZNK5blink16FontPlatformData14FontFamilyNameEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink12AXNodeObject8FontSizeEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, i64 125
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObject"* %6(%"class.blink::AXObject"* %2) #15
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %24, label %9

9:                                                ; preds = %1
  %10 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %10, i64 125
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call %"class.blink::LayoutObject"* %12(%"class.blink::AXObject"* %2) #15
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyle"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %21, i64 0, i32 1, i32 0, i32 5
  %23 = load float, float* %22, align 4
  br label %24

24:                                               ; preds = %9, %1, %17
  %25 = phi float [ %23, %17 ], [ 0.000000e+00, %1 ], [ 0.000000e+00, %9 ]
  ret float %25
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink12AXNodeObject10FontWeightEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, i64 125
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObject"* %6(%"class.blink::AXObject"* %2) #15
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %1
  %10 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %10, i64 125
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call %"class.blink::LayoutObject"* %12(%"class.blink::AXObject"* %2) #15
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyle"* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %21, i64 0, i32 1, i32 0, i32 10, i32 0, i32 0
  %23 = load i16, i16* %22, align 8
  %24 = sitofp i16 %23 to float
  %25 = fmul float %24, 2.500000e-01
  br label %26

26:                                               ; preds = %9, %1, %17
  %27 = phi float [ %25, %17 ], [ 0.000000e+00, %1 ], [ 0.000000e+00, %9 ]
  ret float %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject19GetAriaCurrentStateEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %10 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %11 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %11, i64 5
  %13 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %12, align 8
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %13(%"class.blink::AXObject"* %9, i32 2) #15
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %154, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #15
  br i1 %21, label %31, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %24, align 8
  %25 = load i32, i32* %19, align 4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %25, i32* %29, align 8
  %30 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [6 x i8]* nonnull dereferenceable(6) @.str.11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  br i1 %30, label %154, label %32

31:                                               ; preds = %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  br label %154

32:                                               ; preds = %23
  %33 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #15
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %38, i64* %39, align 8
  br label %47

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  br label %47

47:                                               ; preds = %36, %40
  %48 = phi i32 [ %43, %40 ], [ 0, %36 ]
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %48, i32* %49, align 8
  %50 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #15
  br i1 %50, label %154, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #15
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %56, align 8
  %57 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %58 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %57, i64* %58, align 8
  br label %66

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %65 = bitcast i8** %64 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %65, align 8
  br label %66

66:                                               ; preds = %55, %59
  %67 = phi i32 [ %62, %59 ], [ 0, %55 ]
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %67, i32* %68, align 8
  %69 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [5 x i8]* nonnull dereferenceable(5) @.str.12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #15
  br i1 %69, label %154, label %70

70:                                               ; preds = %66
  %71 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #15
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %75, align 8
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %77 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %76, i64* %77, align 8
  br label %85

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %84 = bitcast i8** %83 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %84, align 8
  br label %85

85:                                               ; preds = %74, %78
  %86 = phi i32 [ %81, %78 ], [ 0, %74 ]
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %86, i32* %87, align 8
  %88 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [5 x i8]* nonnull dereferenceable(5) @.str.13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #15
  br i1 %88, label %154, label %89

89:                                               ; preds = %85
  %90 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #15
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %93, label %97

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %94, align 8
  %95 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %96 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %95, i64* %96, align 8
  br label %104

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 1
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %103 = bitcast i8** %102 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %103, align 8
  br label %104

104:                                              ; preds = %93, %97
  %105 = phi i32 [ %100, %97 ], [ 0, %93 ]
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %105, i32* %106, align 8
  %107 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [9 x i8]* nonnull dereferenceable(9) @.str.14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #15
  br i1 %107, label %154, label %108

108:                                              ; preds = %104
  %109 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #15
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %113, align 8
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %115 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %114, i64* %115, align 8
  br label %123

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 1
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %122 = bitcast i8** %121 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %122, align 8
  br label %123

123:                                              ; preds = %112, %116
  %124 = phi i32 [ %119, %116 ], [ 0, %112 ]
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %124, i32* %125, align 8
  %126 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [5 x i8]* nonnull dereferenceable(5) @.str.15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #15
  br i1 %126, label %154, label %127

127:                                              ; preds = %123
  %128 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #15
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %135

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %132, align 8
  %133 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %134 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %133, i64* %134, align 8
  br label %142

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %136, align 8
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %141 = bitcast i8** %140 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %139, %"class.WTF::StringImpl"** %141, align 8
  br label %142

142:                                              ; preds = %131, %135
  %143 = phi i32 [ %138, %135 ], [ 0, %131 ]
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %143, i32* %144, align 8
  %145 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, [5 x i8]* nonnull dereferenceable(5) @.str.16)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #15
  br i1 %145, label %154, label %146

146:                                              ; preds = %142
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %153, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %146, %149
  br label %154

154:                                              ; preds = %149, %142, %123, %104, %85, %66, %47, %23, %31, %1, %153
  %155 = phi i32 [ 0, %153 ], [ 0, %1 ], [ 1, %31 ], [ 1, %23 ], [ 2, %47 ], [ 3, %66 ], [ 4, %85 ], [ 5, %104 ], [ 6, %123 ], [ 7, %142 ], [ 2, %149 ]
  ret i32 %155
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject15GetInvalidStateEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %5 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %6 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %6, i64 5
  %8 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %7, align 8
  %9 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %8(%"class.blink::AXObject"* %4, i32 5) #15
  %10 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %16, i64* %17, align 8
  br label %25

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  br label %25

25:                                               ; preds = %14, %18
  %26 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [6 x i8]* nonnull dereferenceable(6) @.str.11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  br i1 %28, label %65, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %35, i64* %36, align 8
  br label %44

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  br label %44

44:                                               ; preds = %33, %37
  %45 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %45, i32* %46, align 8
  %47 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #15
  br i1 %47, label %65, label %48

48:                                               ; preds = %44
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %65

55:                                               ; preds = %48, %51
  %56 = call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %4) #15
  %57 = icmp eq %"class.blink::Element"* %56, null
  br i1 %57, label %65, label %58

58:                                               ; preds = %55
  %59 = call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %4) #15
  %60 = call %"class.blink::ListedElement"* @_ZN5blink13ListedElement4FromERNS_7ElementE(%"class.blink::Element"* dereferenceable(104) %59) #15
  %61 = icmp eq %"class.blink::ListedElement"* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = call zeroext i1 @_ZN5blink13ListedElement21IsNotCandidateOrValidEv(%"class.blink::ListedElement"* nonnull %60) #15
  %64 = select i1 %63, i32 1, i32 2
  br label %65

65:                                               ; preds = %58, %55, %62, %51, %44, %25
  %66 = phi i32 [ %64, %62 ], [ 1, %25 ], [ 2, %44 ], [ 3, %51 ], [ 0, %55 ], [ 0, %58 ]
  ret i32 %66
}

declare %"class.blink::ListedElement"* @_ZN5blink13ListedElement4FromERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13ListedElement21IsNotCandidateOrValidEv(%"class.blink::ListedElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject8PosInSetEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %3) #15
  %5 = icmp eq i32 %4, 138
  br i1 %5, label %6, label %41

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %7, label %41, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp ne %"class.blink::Node"* %10, null
  %12 = load i8, i8* @_ZN5blink17AXObjectCacheImpl17use_ax_menu_list_E, align 1
  %13 = icmp eq i8 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %41

15:                                               ; preds = %8
  %16 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %16, label %41, label %17

17:                                               ; preds = %15
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 48
  %22 = icmp ne i32 %21, 0
  %23 = icmp eq %"class.blink::Node"* %18, null
  %24 = or i1 %23, %22
  br i1 %24, label %41, label %25

25:                                               ; preds = %17
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %25
  %38 = bitcast %"class.blink::Node"* %18 to %"class.blink::HTMLSelectElement"*
  %39 = tail call i32 @_ZNK5blink17HTMLSelectElement13selectedIndexEv(%"class.blink::HTMLSelectElement"* nonnull %38) #15
  %40 = add nsw i32 %39, 1
  br label %48

41:                                               ; preds = %8, %25, %15, %17, %6, %1
  %42 = tail call zeroext i1 @_ZNK5blink8AXObject30SupportsARIASetSizeAndPosInSetEv(%"class.blink::AXObject"* %3) #15
  br i1 %42, label %43, label %47

43:                                               ; preds = %41
  %44 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #15
  store i32 -1431655766, i32* %2, align 4
  %45 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_15AOMUIntPropertyERj(%"class.blink::AXObject"* %3, i32 3, i32* nonnull dereferenceable(4) %2) #15
  %46 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #15
  br i1 %45, label %48, label %47

47:                                               ; preds = %43, %41
  br label %48

48:                                               ; preds = %43, %37, %47
  %49 = phi i32 [ 0, %47 ], [ %46, %43 ], [ %40, %37 ]
  ret i32 %49
}

declare i32 @_ZNK5blink17HTMLSelectElement13selectedIndexEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject30SupportsARIASetSizeAndPosInSetEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject7SetSizeEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %3) #15
  %5 = icmp eq i32 %4, 138
  br i1 %5, label %6, label %40

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %7, label %40, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp ne %"class.blink::Node"* %10, null
  %12 = load i8, i8* @_ZN5blink17AXObjectCacheImpl17use_ax_menu_list_E, align 1
  %13 = icmp eq i8 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %40

15:                                               ; preds = %8
  %16 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %16, label %40, label %17

17:                                               ; preds = %15
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 48
  %22 = icmp ne i32 %21, 0
  %23 = icmp eq %"class.blink::Node"* %18, null
  %24 = or i1 %23, %22
  br i1 %24, label %40, label %25

25:                                               ; preds = %17
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %25
  %38 = bitcast %"class.blink::Node"* %18 to %"class.blink::HTMLSelectElement"*
  %39 = tail call i32 @_ZNK5blink17HTMLSelectElement6lengthEv(%"class.blink::HTMLSelectElement"* nonnull %38) #15
  br label %47

40:                                               ; preds = %8, %25, %15, %17, %6, %1
  %41 = tail call zeroext i1 @_ZNK5blink8AXObject30SupportsARIASetSizeAndPosInSetEv(%"class.blink::AXObject"* %3) #15
  br i1 %41, label %42, label %46

42:                                               ; preds = %40
  %43 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #15
  store i32 -1431655766, i32* %2, align 4
  %44 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_14AOMIntPropertyERi(%"class.blink::AXObject"* %3, i32 2, i32* nonnull dereferenceable(4) %2) #15
  %45 = load i32, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #15
  br i1 %44, label %47, label %46

46:                                               ; preds = %42, %40
  br label %47

47:                                               ; preds = %42, %37, %46
  %48 = phi i32 [ 0, %46 ], [ %45, %42 ], [ %39, %37 ]
  ret i32 %48
}

declare i32 @_ZNK5blink17HTMLSelectElement6lengthEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_14AOMIntPropertyERi(%"class.blink::AXObject"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject16AriaInvalidValueEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK5blink12AXNodeObject15GetInvalidStateEv(%"class.blink::AXNodeObject"* %0)
  %3 = icmp eq i32 %2, 3
  br i1 %3, label %4, label %32

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %6 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %7 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %7, i64 5
  %9 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %8, align 8
  %10 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %9(%"class.blink::AXObject"* %5, i32 5) #15
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #15
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #15
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %1, %30, %15, %4
  %33 = phi i64 [ %13, %4 ], [ %13, %15 ], [ %13, %30 ], [ 0, %1 ]
  %34 = inttoptr i64 %33 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject13ValueForRangeEPf(%"class.blink::AXNodeObject"*, float* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #15
  store float 0xFFFFFFFFE0000000, float* %3, align 4
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %8 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_16AOMFloatPropertyERf(%"class.blink::AXObject"* %7, i32 2, float* nonnull dereferenceable(4) %3) #15
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast float* %3 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast float* %1 to i32*
  store i32 %11, i32* %12, align 4
  br label %87

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %15 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %15, i64 30
  %17 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %16, align 8
  %18 = call zeroext i1 %17(%"class.blink::AXNodeObject"* %0) #15
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %14, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %20, i64 29
  %22 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %21, align 8
  %23 = call zeroext i1 %22(%"class.blink::AXNodeObject"* %0) #15
  br i1 %23, label %24, label %36

24:                                               ; preds = %19, %13
  %25 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %7) #15
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %28 = bitcast %"class.blink::Node"** %27 to %"class.blink::HTMLInputElement"**
  %29 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %28, align 8
  br label %30

30:                                               ; preds = %24, %26
  %31 = phi %"class.blink::HTMLInputElement"* [ %29, %26 ], [ null, %24 ]
  %32 = call double @_ZNK5blink16HTMLInputElement13valueAsNumberEv(%"class.blink::HTMLInputElement"* %31) #15
  %33 = fptrunc double %32 to float
  store float %33, float* %1, align 4
  %34 = call float @llvm.fabs.f32(float %33) #18
  %35 = fcmp one float %34, 0x7FF0000000000000
  br label %87

36:                                               ; preds = %19
  %37 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %7) #15
  br i1 %37, label %63, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %39, align 8
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %63, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 48
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %63

47:                                               ; preds = %42
  %48 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kMeterTagE, align 8
  %49 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 1, i32 2
  %52 = bitcast %"class.blink::Member.318"* %51 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %50, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %55, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %47
  %60 = bitcast %"class.blink::Node"* %40 to %"class.blink::HTMLMeterElement"*
  %61 = call double @_ZNK5blink16HTMLMeterElement5valueEv(%"class.blink::HTMLMeterElement"* nonnull %60) #15
  %62 = fptrunc double %61 to float
  store float %62, float* %1, align 4
  br label %87

63:                                               ; preds = %47, %36, %38, %42
  %64 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  %65 = load i32, i32* %64, align 4
  switch i32 %65, label %87 [
    i32 151, label %66
    i32 156, label %66
    i32 158, label %85
    i32 157, label %86
  ]

66:                                               ; preds = %63, %63
  %67 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #15
  store float 0xFFFFFFFFE0000000, float* %4, align 4
  %68 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #15
  store float 0xFFFFFFFFE0000000, float* %5, align 4
  %69 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*, float*)***
  %70 = load i1 (%"class.blink::AXNodeObject"*, float*)**, i1 (%"class.blink::AXNodeObject"*, float*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*, float*)*, i1 (%"class.blink::AXNodeObject"*, float*)** %70, i64 96
  %72 = load i1 (%"class.blink::AXNodeObject"*, float*)*, i1 (%"class.blink::AXNodeObject"*, float*)** %71, align 8
  %73 = call zeroext i1 %72(%"class.blink::AXNodeObject"* %0, float* nonnull %4) #15
  br i1 %73, label %74, label %84

74:                                               ; preds = %66
  %75 = load i1 (%"class.blink::AXNodeObject"*, float*)**, i1 (%"class.blink::AXNodeObject"*, float*)*** %69, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*, float*)*, i1 (%"class.blink::AXNodeObject"*, float*)** %75, i64 95
  %77 = load i1 (%"class.blink::AXNodeObject"*, float*)*, i1 (%"class.blink::AXNodeObject"*, float*)** %76, align 8
  %78 = call zeroext i1 %77(%"class.blink::AXNodeObject"* %0, float* nonnull %5) #15
  br i1 %78, label %79, label %84

79:                                               ; preds = %74
  %80 = load float, float* %4, align 4
  %81 = load float, float* %5, align 4
  %82 = fadd float %80, %81
  %83 = fmul float %82, 5.000000e-01
  store float %83, float* %1, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #15
  br label %87

84:                                               ; preds = %66, %74
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #15
  br label %85

85:                                               ; preds = %84, %63
  store float 5.000000e+01, float* %1, align 4
  br label %87

86:                                               ; preds = %63
  store float 0.000000e+00, float* %1, align 4
  br label %87

87:                                               ; preds = %63, %79, %59, %86, %85, %30, %9
  %88 = phi i1 [ true, %9 ], [ %35, %30 ], [ true, %86 ], [ true, %85 ], [ true, %59 ], [ true, %79 ], [ false, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #15
  ret i1 %88
}

declare zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_16AOMFloatPropertyERf(%"class.blink::AXObject"*, i32, float* dereferenceable(4)) local_unnamed_addr #1

declare double @_ZNK5blink16HTMLInputElement13valueAsNumberEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare double @_ZNK5blink16HTMLMeterElement5valueEv(%"class.blink::HTMLMeterElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject16MaxValueForRangeEPf(%"class.blink::AXNodeObject"*, float* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca float, align 4
  %4 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #15
  store float 0xFFFFFFFFE0000000, float* %3, align 4
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %6 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_16AOMFloatPropertyERf(%"class.blink::AXObject"* %5, i32 0, float* nonnull dereferenceable(4) %3) #15
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = bitcast float* %3 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = bitcast float* %1 to i32*
  store i32 %9, i32* %10, align 4
  br label %65

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %13 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %13, i64 30
  %15 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.blink::AXNodeObject"* %0) #15
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %12, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %18, i64 29
  %20 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %19, align 8
  %21 = call zeroext i1 %20(%"class.blink::AXNodeObject"* %0) #15
  br i1 %21, label %22, label %34

22:                                               ; preds = %17, %11
  %23 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = bitcast %"class.blink::Node"** %25 to %"class.blink::HTMLInputElement"**
  %27 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %26, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi %"class.blink::HTMLInputElement"* [ %27, %24 ], [ null, %22 ]
  %30 = call double @_ZNK5blink16HTMLInputElement7MaximumEv(%"class.blink::HTMLInputElement"* %29) #15
  %31 = fptrunc double %30 to float
  store float %31, float* %1, align 4
  %32 = call float @llvm.fabs.f32(float %31) #18
  %33 = fcmp one float %32, 0x7FF0000000000000
  br label %65

34:                                               ; preds = %17
  %35 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %35, label %61, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %61, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 48
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %61

45:                                               ; preds = %40
  %46 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kMeterTagE, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1, i32 2
  %50 = bitcast %"class.blink::Member.318"* %49 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %53, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %45
  %58 = bitcast %"class.blink::Node"* %38 to %"class.blink::HTMLMeterElement"*
  %59 = call double @_ZNK5blink16HTMLMeterElement3maxEv(%"class.blink::HTMLMeterElement"* nonnull %58) #15
  %60 = fptrunc double %59 to float
  store float %60, float* %1, align 4
  br label %65

61:                                               ; preds = %45, %34, %36, %40
  %62 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  switch i32 %63, label %65 [
    i32 151, label %64
    i32 158, label %64
    i32 156, label %64
  ]

64:                                               ; preds = %61, %61, %61
  store float 1.000000e+02, float* %1, align 4
  br label %65

65:                                               ; preds = %61, %57, %64, %28, %7
  %66 = phi i1 [ true, %7 ], [ %33, %28 ], [ true, %64 ], [ true, %57 ], [ false, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #15
  ret i1 %66
}

declare double @_ZNK5blink16HTMLInputElement7MaximumEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare double @_ZNK5blink16HTMLMeterElement3maxEv(%"class.blink::HTMLMeterElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject16MinValueForRangeEPf(%"class.blink::AXNodeObject"*, float* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca float, align 4
  %4 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #15
  store float 0xFFFFFFFFE0000000, float* %3, align 4
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %6 = call zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_16AOMFloatPropertyERf(%"class.blink::AXObject"* %5, i32 1, float* nonnull dereferenceable(4) %3) #15
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = bitcast float* %3 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = bitcast float* %1 to i32*
  store i32 %9, i32* %10, align 4
  br label %65

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %13 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %13, i64 30
  %15 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.blink::AXNodeObject"* %0) #15
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %12, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %18, i64 29
  %20 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %19, align 8
  %21 = call zeroext i1 %20(%"class.blink::AXNodeObject"* %0) #15
  br i1 %21, label %22, label %34

22:                                               ; preds = %17, %11
  %23 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = bitcast %"class.blink::Node"** %25 to %"class.blink::HTMLInputElement"**
  %27 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %26, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi %"class.blink::HTMLInputElement"* [ %27, %24 ], [ null, %22 ]
  %30 = call double @_ZNK5blink16HTMLInputElement7MinimumEv(%"class.blink::HTMLInputElement"* %29) #15
  %31 = fptrunc double %30 to float
  store float %31, float* %1, align 4
  %32 = call float @llvm.fabs.f32(float %31) #18
  %33 = fcmp one float %32, 0x7FF0000000000000
  br label %65

34:                                               ; preds = %17
  %35 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %35, label %61, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %61, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 48
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %61

45:                                               ; preds = %40
  %46 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kMeterTagE, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1, i32 2
  %50 = bitcast %"class.blink::Member.318"* %49 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %53, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %45
  %58 = bitcast %"class.blink::Node"* %38 to %"class.blink::HTMLMeterElement"*
  %59 = call double @_ZNK5blink16HTMLMeterElement3minEv(%"class.blink::HTMLMeterElement"* nonnull %58) #15
  %60 = fptrunc double %59 to float
  store float %60, float* %1, align 4
  br label %65

61:                                               ; preds = %45, %34, %36, %40
  %62 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  switch i32 %63, label %65 [
    i32 151, label %64
    i32 158, label %64
    i32 156, label %64
  ]

64:                                               ; preds = %61, %61, %61
  store float 0.000000e+00, float* %1, align 4
  br label %65

65:                                               ; preds = %61, %57, %64, %28, %7
  %66 = phi i1 [ true, %7 ], [ %33, %28 ], [ true, %64 ], [ true, %57 ], [ false, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #15
  ret i1 %66
}

declare double @_ZNK5blink16HTMLInputElement7MinimumEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare double @_ZNK5blink16HTMLMeterElement3minEv(%"class.blink::HTMLMeterElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject17StepValueForRangeEPf(%"class.blink::AXNodeObject"*, float* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Decimal", align 8
  %4 = alloca %"class.blink::StepRange", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %7 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %7, i64 30
  %9 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::AXNodeObject"* %0) #15
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %6, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %12, i64 29
  %14 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::AXNodeObject"* %0) #15
  br i1 %15, label %16, label %122

16:                                               ; preds = %11, %2
  %17 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %18 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %17) #15
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = bitcast %"class.blink::Node"** %20 to %"class.blink::HTMLInputElement"**
  %22 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %21, align 8
  br label %23

23:                                               ; preds = %16, %19
  %24 = phi %"class.blink::HTMLInputElement"* [ %22, %19 ], [ null, %16 ]
  %25 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kStepAttrE, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %26, align 8
  %28 = icmp eq %"class.blink::ElementData"* %27, null
  br i1 %28, label %79, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::ElementData"* %27 to %"class.blink::UniqueElementData"*
  %36 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1, i32 1
  %37 = bitcast %"class.blink::Member.354"* %36 to %"class.blink::Attribute"**
  %38 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %35, i64 0, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  br label %46

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %27, i64 1
  %43 = bitcast %"class.blink::ElementData"* %42 to %"class.blink::Attribute"*
  %44 = lshr i32 %31, 1
  %45 = and i32 %44, 268435455
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi %"class.blink::Attribute"* [ %43, %41 ], [ %38, %34 ]
  %48 = phi i32 [ %45, %41 ], [ %40, %34 ]
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %47, i64 %49
  %51 = icmp eq i32 %48, 0
  br i1 %51, label %79, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %72, %52
  %58 = phi %"class.blink::Attribute"* [ %47, %52 ], [ %73, %72 ]
  %59 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %61 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %60, %54
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %62
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 1
  %74 = icmp eq %"class.blink::Attribute"* %73, %50
  br i1 %74, label %79, label %57

75:                                               ; preds = %67, %57
  %76 = icmp eq %"class.blink::Attribute"* %58, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %58, i64 0, i32 1
  br label %81

79:                                               ; preds = %72, %75, %46, %23
  %80 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %81

81:                                               ; preds = %77, %79
  %82 = phi %"class.WTF::AtomicString"* [ %80, %79 ], [ %78, %77 ]
  %83 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %86, label %87

86:                                               ; preds = %81
  store float 0.000000e+00, float* %1, align 4
  br label %126

87:                                               ; preds = %81
  %88 = bitcast %"class.blink::Decimal"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #15
  %89 = bitcast %"class.blink::StepRange"* %4 to i8*
  %90 = bitcast %"class.blink::Decimal"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %89) #15
  %91 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %17) #15
  br i1 %91, label %96, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %94 = bitcast %"class.blink::Node"** %93 to %"class.blink::HTMLInputElement"**
  %95 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %94, align 8
  br label %96

96:                                               ; preds = %87, %92
  %97 = phi %"class.blink::HTMLInputElement"* [ %95, %92 ], [ null, %87 ]
  call void @_ZNK5blink16HTMLInputElement15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* nonnull sret %4, %"class.blink::HTMLInputElement"* %97, i32 0) #15
  %98 = getelementptr inbounds %"class.blink::StepRange", %"class.blink::StepRange"* %4, i64 0, i32 2
  call void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"* nonnull %3, %"class.blink::Decimal"* dereferenceable(24) %98) #15
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %89) #15
  %99 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #15
  %100 = call %"class.WTF::StringImpl"* @_ZNK5blink7Decimal8ToStringEv(%"class.blink::Decimal"* nonnull %3) #15
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %101, align 8
  %102 = call float @_ZNK3WTF6String7ToFloatEPb(%"class.WTF::String"* nonnull %5, i8* null) #15
  store float %102, float* %1, align 4
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %96
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #15
  br label %118

118:                                              ; preds = %96, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #15
  %119 = load float, float* %1, align 4
  %120 = call float @llvm.fabs.f32(float %119) #18
  %121 = fcmp one float %120, 0x7FF0000000000000
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #15
  br label %126

122:                                              ; preds = %11
  %123 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  %124 = load i32, i32* %123, align 4
  switch i32 %124, label %126 [
    i32 151, label %125
    i32 158, label %125
    i32 156, label %125
  ]

125:                                              ; preds = %122, %122, %122
  store float 0.000000e+00, float* %1, align 4
  br label %126

126:                                              ; preds = %122, %125, %118, %86
  %127 = phi i1 [ %121, %118 ], [ false, %86 ], [ true, %125 ], [ false, %122 ]
  ret i1 %127
}

declare void @_ZNK5blink16HTMLInputElement15CreateStepRangeENS_15AnyStepHandlingE(%"class.blink::StepRange"* sret, %"class.blink::HTMLInputElement"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12AXNodeObject3UrlEv(%"class.blink::KURL"* noalias sret, %"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %1, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink8AXObject6IsLinkEv(%"class.blink::AXObject"* %5) #15
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %5) #15
  tail call void @_ZNK5blink7Element7HrefURLEv(%"class.blink::KURL"* sret %0, %"class.blink::Element"* %8) #15
  br label %211

9:                                                ; preds = %2
  %10 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %5) #15
  %11 = icmp eq i32 %10, 145
  br i1 %11, label %12, label %25

12:                                               ; preds = %9
  %13 = bitcast %"class.blink::AXNodeObject"* %1 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %14 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %14, i64 126
  %16 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %15, align 8
  %17 = tail call %"class.blink::Document"* %16(%"class.blink::AXNodeObject"* %1) #15
  %18 = icmp eq %"class.blink::Document"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %12
  %20 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %13, align 8
  %21 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %20, i64 126
  %22 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %21, align 8
  %23 = tail call %"class.blink::Document"* %22(%"class.blink::AXNodeObject"* %1) #15
  %24 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 19
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %24) #15
  br label %211

25:                                               ; preds = %12, %9
  %26 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %26, label %36, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %1, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 48
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %31, %27, %25
  %37 = tail call zeroext i1 @_ZNK5blink8AXObject7IsImageEv(%"class.blink::AXObject"* %5) #15
  br label %164

38:                                               ; preds = %31
  %39 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 1, i32 2
  %43 = bitcast %"class.blink::Member.318"* %42 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %46, %48
  %50 = tail call zeroext i1 @_ZNK5blink8AXObject7IsImageEv(%"class.blink::AXObject"* %5) #15
  %51 = and i1 %50, %49
  br i1 %51, label %52, label %164

52:                                               ; preds = %38
  %53 = bitcast %"class.blink::Node"* %29 to %"class.blink::HTMLImageElement"*
  %54 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #15
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %56 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16HTMLImageElement14ImageSourceURLEv(%"class.blink::HTMLImageElement"* nonnull %53) #15
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %87, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %75

65:                                               ; preds = %58
  %66 = zext i32 %64 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #15
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %65
  tail call void @llvm.trap() #15
  unreachable

73:                                               ; preds = %65
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %63, align 4
  br label %75

75:                                               ; preds = %58, %73
  %76 = phi i32 [ %74, %73 ], [ %64, %58 ]
  %77 = load atomic i32, i32* %59 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %82 = add i32 %76, -1
  store i32 %82, i32* %81, align 4
  br label %83

83:                                               ; preds = %80, %75
  %84 = phi i32 [ %82, %80 ], [ %76, %75 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #15
  br label %87

87:                                               ; preds = %52, %83, %86
  %88 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #15
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %90 = call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %3) #15
  store %"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %147, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %134, label %96

96:                                               ; preds = %92
  %97 = bitcast %"class.blink::AXNodeObject"* %1 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %98 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %97, align 8
  %99 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %98, i64 126
  %100 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %99, align 8
  %101 = call %"class.blink::Document"* %100(%"class.blink::AXNodeObject"* %1) #15
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret %0, %"class.blink::Document"* %101, %"class.WTF::String"* nonnull dereferenceable(8) %4) #15
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #15
  br label %117

117:                                              ; preds = %96, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #15
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #15
  br label %133

133:                                              ; preds = %117, %129, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #15
  br label %211

134:                                              ; preds = %92
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #15
  br label %147

147:                                              ; preds = %87, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #15
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #15
  br label %163

163:                                              ; preds = %147, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #15
  br label %164

164:                                              ; preds = %36, %163, %38
  %165 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %165, label %210, label %166

166:                                              ; preds = %164
  %167 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %1, i64 0, i32 3, i32 0, i32 0
  %168 = load %"class.blink::Node"*, %"class.blink::Node"** %167, align 8
  %169 = icmp eq %"class.blink::Node"* %168, null
  br i1 %169, label %210, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 0, i32 1
  %172 = load i32, i32* %171, align 8
  %173 = and i32 %172, 48
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %210

175:                                              ; preds = %170
  %176 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %177 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %176, i64 0, i32 0, i32 0, i32 0
  %178 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 1, i32 2
  %180 = bitcast %"class.blink::Member.318"* %179 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %181 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %181, i64 0, i32 3, i32 0, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %178, i64 0, i32 3, i32 0, i32 0, i32 0
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %183, %185
  br i1 %186, label %187, label %210

187:                                              ; preds = %175
  %188 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %5) #15
  %189 = icmp eq i32 %188, 10
  br i1 %189, label %190, label %210

190:                                              ; preds = %187
  %191 = bitcast %"class.blink::Node"* %168 to %"class.blink::HTMLFormControlElement"*
  %192 = bitcast %"class.blink::Node"* %168 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %193 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %192, align 8
  %194 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %193, i64 171
  %195 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %194, align 8
  %196 = call dereferenceable(8) %"class.WTF::AtomicString"* %195(%"class.blink::HTMLFormControlElement"* nonnull %191) #15
  %197 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %198 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %196, i64 0, i32 0, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %197, i64 0, i32 0, i32 0, i32 0
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %199, %201
  br i1 %202, label %203, label %210

203:                                              ; preds = %190
  %204 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %204, label %208, label %205

205:                                              ; preds = %203
  %206 = bitcast %"class.blink::Node"** %167 to %"class.blink::HTMLInputElement"**
  %207 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %206, align 8
  br label %208

208:                                              ; preds = %203, %205
  %209 = phi %"class.blink::HTMLInputElement"* [ %207, %205 ], [ null, %203 ]
  call void @_ZNK5blink16HTMLInputElement3SrcEv(%"class.blink::KURL"* sret %0, %"class.blink::HTMLInputElement"* %209) #15
  br label %211

210:                                              ; preds = %164, %166, %170, %175, %187, %190
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #15
  br label %211

211:                                              ; preds = %208, %210, %133, %19, %7
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink16HTMLImageElement14ImageSourceURLEv(%"class.blink::HTMLImageElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK5blink16HTMLInputElement3SrcEv(%"class.blink::KURL"* sret, %"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject12ChooserPopupEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %26 [
    i32 18, label %4
    i32 28, label %4
    i32 29, label %4
  ]

4:                                                ; preds = %1, %1, %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %6 = tail call dereferenceable(16) %"class.blink::HeapVector.2999"* @_ZNK5blink8AXObject24ChildrenIncludingIgnoredEv(%"class.blink::AXObject"* %5) #15
  %7 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %26, label %16

14:                                               ; preds = %16
  %15 = icmp eq %"class.blink::Member.2997"* %22, %12
  br i1 %15, label %26, label %16

16:                                               ; preds = %4, %14
  %17 = phi %"class.blink::Member.2997"* [ %22, %14 ], [ %8, %4 ]
  %18 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %18, align 8
  %20 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %19) #15
  %21 = icmp eq i32 %20, 145
  %22 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %17, i64 1
  br i1 %21, label %23, label %14

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %17, i64 0, i32 0, i32 0
  %25 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %24, align 8
  br label %26

26:                                               ; preds = %14, %4, %1, %23
  %27 = phi %"class.blink::AXObject"* [ %25, %23 ], [ null, %1 ], [ null, %4 ], [ null, %14 ]
  ret %"class.blink::AXObject"* %27
}

declare dereferenceable(16) %"class.blink::HeapVector.2999"* @_ZNK5blink8AXObject24ChildrenIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject18GetValueForControlEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.blink::HeapHashSet.3867", align 8
  %4 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #15
  br i1 %5, label %406, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %406, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %129

15:                                               ; preds = %10
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.318"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  %27 = bitcast %"class.blink::Node"* %8 to %"class.blink::HTMLSelectElement"*
  br i1 %26, label %28, label %129

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 5, i32 0, i32 0, i32 1
  %30 = bitcast %"class.blink::TraceWrapperV8Reference"* %29 to i8*
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %406, label %33

33:                                               ; preds = %28
  %34 = tail call i32 @_ZNK5blink17HTMLSelectElement17SelectedListIndexEv(%"class.blink::HTMLSelectElement"* nonnull %27) #15
  %35 = tail call dereferenceable(16) %"class.blink::HeapVector.3228"* @_ZNK5blink17HTMLSelectElement12GetListItemsEv(%"class.blink::HTMLSelectElement"* nonnull %27) #15
  %36 = icmp sgt i32 %34, -1
  br i1 %36, label %37, label %125

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::HeapVector.3228", %"class.blink::HeapVector.3228"* %35, i64 0, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp ult i32 %34, %39
  br i1 %40, label %41, label %125

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::HeapVector.3228", %"class.blink::HeapVector.3228"* %35, i64 0, i32 0
  %43 = tail call dereferenceable(8) %"class.blink::Member.3234"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3231"* %42, i32 %34) #15
  %44 = getelementptr inbounds %"class.blink::Member.3234", %"class.blink::Member.3234"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %44, align 8
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %45, i64 0, i32 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %47, align 8
  %49 = icmp eq %"class.blink::ElementData"* %48, null
  br i1 %49, label %100, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %48, i64 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = bitcast %"class.blink::ElementData"* %48 to %"class.blink::UniqueElementData"*
  %57 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %48, i64 1, i32 1
  %58 = bitcast %"class.blink::Member.354"* %57 to %"class.blink::Attribute"**
  %59 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %56, i64 0, i32 2, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  br label %67

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %48, i64 1
  %64 = bitcast %"class.blink::ElementData"* %63 to %"class.blink::Attribute"*
  %65 = lshr i32 %52, 1
  %66 = and i32 %65, 268435455
  br label %67

67:                                               ; preds = %62, %55
  %68 = phi %"class.blink::Attribute"* [ %64, %62 ], [ %59, %55 ]
  %69 = phi i32 [ %66, %62 ], [ %61, %55 ]
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %68, i64 %70
  %72 = icmp eq i32 %69, 0
  br i1 %72, label %100, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %46, i64 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %78

78:                                               ; preds = %93, %73
  %79 = phi %"class.blink::Attribute"* [ %68, %73 ], [ %94, %93 ]
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %82 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %81, %75
  br i1 %82, label %96, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %81, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %85, %86
  br i1 %87, label %88, label %93

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %81, i64 0, i32 4, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %90, %91
  br i1 %92, label %96, label %93

93:                                               ; preds = %88, %83
  %94 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %79, i64 1
  %95 = icmp eq %"class.blink::Attribute"* %94, %71
  br i1 %95, label %100, label %78

96:                                               ; preds = %88, %78
  %97 = icmp eq %"class.blink::Attribute"* %79, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %79, i64 0, i32 1
  br label %102

100:                                              ; preds = %93, %96, %67, %41
  %101 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %102

102:                                              ; preds = %98, %100
  %103 = phi %"class.WTF::AtomicString"* [ %101, %100 ], [ %99, %98 ]
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %125, label %107

107:                                              ; preds = %102
  %108 = ptrtoint %"class.WTF::StringImpl"* %105 to i64
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %406

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #15
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #15
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %406

125:                                              ; preds = %102, %37, %33
  %126 = tail call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink17HTMLSelectElement12InnerElementEv(%"class.blink::HTMLSelectElement"* nonnull %27) #15
  %127 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"* %126) #15
  %128 = ptrtoint %"class.WTF::StringImpl"* %127 to i64
  br label %406

129:                                              ; preds = %15, %10
  %130 = tail call zeroext i1 @_ZNK5blink8AXObject17IsAtomicTextFieldEv(%"class.blink::AXObject"* %4) #15
  br i1 %130, label %131, label %217

131:                                              ; preds = %129
  %132 = bitcast %"class.blink::Node"* %8 to %"class.blink::TextControlElement"*
  %133 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"* nonnull %132) #15
  %134 = ptrtoint %"class.WTF::StringImpl"* %133 to i64
  %135 = tail call zeroext i1 @_ZNK5blink8AXObject33IsPasswordFieldAndShouldHideValueEv(%"class.blink::AXObject"* %4) #15
  br i1 %135, label %136, label %406

136:                                              ; preds = %131
  %137 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %138 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %137, align 8
  %139 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %138, i64 125
  %140 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %139, align 8
  %141 = tail call %"class.blink::LayoutObject"* %140(%"class.blink::AXObject"* %4) #15
  %142 = icmp eq %"class.blink::LayoutObject"* %141, null
  br i1 %142, label %406, label %143

143:                                              ; preds = %136
  %144 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %137, align 8
  %145 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %144, i64 125
  %146 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %145, align 8
  %147 = tail call %"class.blink::LayoutObject"* %146(%"class.blink::AXObject"* %4) #15
  %148 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %147, i64 0, i32 5, i32 0
  %149 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %148, align 8
  %150 = icmp eq %"class.blink::ComputedStyle"* %149, null
  br i1 %150, label %406, label %151

151:                                              ; preds = %143
  %152 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %152, label %406, label %153

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %203, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %149, i64 0, i32 0, i32 1, i32 0, i32 0
  %159 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %159, i64 0, i32 23
  %161 = bitcast [5 x i8]* %160 to i40*
  %162 = load i40, i40* %161, align 8
  %163 = lshr i40 %162, 24
  %164 = trunc i40 %163 to i32
  %165 = and i32 %164, 3
  %166 = add nsw i32 %165, -1
  %167 = icmp ult i32 %166, 3
  br i1 %167, label %168, label %406

168:                                              ; preds = %157
  %169 = zext i32 %166 to i48
  %170 = shl nuw nsw i48 %169, 4
  %171 = lshr i48 41369760833570, %170
  %172 = trunc i48 %171 to i16
  %173 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %173) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 48, i1 false)
  %174 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %174, align 8
  %175 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %176 = bitcast %union.anon.3242* %175 to i8*
  store i8 0, i8* %176, align 8
  %177 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %177, align 8
  %178 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %178, align 4
  %179 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %179, align 1
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %2, i32 %155) #15
  br label %198

180:                                              ; preds = %198
  %181 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #15
  %182 = ptrtoint %"class.WTF::StringImpl"* %181 to i64
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #15
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %202, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %194

192:                                              ; preds = %185
  %193 = add i32 %191, -1
  store i32 %193, i32* %190, align 4
  br label %194

194:                                              ; preds = %192, %185
  %195 = phi i32 [ %193, %192 ], [ %191, %185 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %202

197:                                              ; preds = %194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #15
  br label %202

198:                                              ; preds = %198, %168
  %199 = phi i32 [ %200, %198 ], [ 0, %168 ]
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %2, i16 zeroext %172)
  %200 = add nuw i32 %199, 1
  %201 = icmp eq i32 %200, %155
  br i1 %201, label %180, label %198

202:                                              ; preds = %197, %194, %180
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %173) #15
  br i1 %152, label %406, label %203

203:                                              ; preds = %153, %202
  %204 = phi i64 [ %182, %202 ], [ 0, %153 ]
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %203
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %203
  %214 = phi i32 [ %212, %211 ], [ %210, %203 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %406

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #15
  br label %406

217:                                              ; preds = %129
  %218 = tail call zeroext i1 @_ZNK5blink8AXObject21IsRangeValueSupportedEv(%"class.blink::AXObject"* %4) #15
  br i1 %218, label %219, label %262

219:                                              ; preds = %217
  %220 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %221 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %220, align 8
  %222 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %221, i64 5
  %223 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %222, align 8
  %224 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %223(%"class.blink::AXObject"* %4, i32 16) #15
  %225 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %224, i64 0, i32 0, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = ptrtoint %"class.WTF::StringImpl"* %226 to i64
  %228 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %228, label %262, label %229

229:                                              ; preds = %219
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %246

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = zext i32 %236 to i33
  %238 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %237, i33 1) #15
  %239 = extractvalue { i33, i1 } %238, 1
  %240 = extractvalue { i33, i1 } %238, 0
  %241 = icmp slt i33 %240, 0
  %242 = or i1 %239, %241
  br i1 %242, label %243, label %244, !prof !3

243:                                              ; preds = %234
  tail call void @llvm.trap() #15
  unreachable

244:                                              ; preds = %234
  %245 = trunc i33 %240 to i32
  store i32 %245, i32* %235, align 4
  br label %246

246:                                              ; preds = %244, %229
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %406

250:                                              ; preds = %246
  %251 = load atomic i32, i32* %230 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %250
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %250
  %259 = phi i32 [ %257, %256 ], [ %255, %250 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #15
  br label %262

262:                                              ; preds = %219, %261, %258, %217
  %263 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %264 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %263, align 8
  %265 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %264, i64 125
  %266 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %265, align 8
  %267 = tail call %"class.blink::LayoutObject"* %266(%"class.blink::AXObject"* %4) #15
  %268 = icmp eq %"class.blink::LayoutObject"* %267, null
  br i1 %268, label %287, label %269

269:                                              ; preds = %262
  %270 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %263, align 8
  %271 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %270, i64 125
  %272 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %271, align 8
  %273 = tail call %"class.blink::LayoutObject"* %272(%"class.blink::AXObject"* %4) #15
  %274 = bitcast %"class.blink::LayoutObject"* %273 to i1 (%"class.blink::LayoutObject"*, i32)***
  %275 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %274, align 8
  %276 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %275, i64 92
  %277 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %276, align 8
  %278 = tail call zeroext i1 %277(%"class.blink::LayoutObject"* %273, i32 7) #15
  br i1 %278, label %279, label %287

279:                                              ; preds = %269
  %280 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %263, align 8
  %281 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %280, i64 125
  %282 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %281, align 8
  %283 = tail call %"class.blink::LayoutObject"* %282(%"class.blink::AXObject"* %4) #15
  %284 = bitcast %"class.blink::LayoutObject"* %283 to %"class.blink::LayoutFileUploadControl"*
  %285 = tail call %"class.WTF::StringImpl"* @_ZNK5blink23LayoutFileUploadControl13FileTextValueEv(%"class.blink::LayoutFileUploadControl"* %284) #15
  %286 = ptrtoint %"class.WTF::StringImpl"* %285 to i64
  br label %406

287:                                              ; preds = %269, %262
  %288 = load i32, i32* %11, align 8
  %289 = and i32 %288, 48
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %393

291:                                              ; preds = %287
  %292 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %293 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %292, i64 0, i32 0, i32 0, i32 0
  %294 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %293, align 8
  %295 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %296 = bitcast %"class.blink::Member.318"* %295 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %297 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %296, align 8
  %298 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %297, i64 0, i32 3, i32 0, i32 0, i32 0
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8
  %300 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %294, i64 0, i32 3, i32 0, i32 0, i32 0
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %299, %301
  %303 = bitcast %"class.blink::Node"* %8 to %"class.blink::HTMLInputElement"*
  br i1 %302, label %304, label %393

304:                                              ; preds = %291
  %305 = bitcast %"class.blink::Node"* %8 to %"class.blink::HTMLFormControlElement"*
  %306 = bitcast %"class.blink::Node"* %8 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %307 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %306, align 8
  %308 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %307, i64 171
  %309 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %308, align 8
  %310 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %309(%"class.blink::HTMLFormControlElement"* nonnull %305) #15
  %311 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kFileE, align 8
  %312 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %310, i64 0, i32 0, i32 0, i32 0
  %313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %312, align 8
  %314 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %311, i64 0, i32 0, i32 0, i32 0
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %313, %315
  br i1 %316, label %317, label %320

317:                                              ; preds = %304
  %318 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement14FileStatusTextEv(%"class.blink::HTMLInputElement"* nonnull %303) #15
  %319 = ptrtoint %"class.WTF::StringImpl"* %318 to i64
  br label %406

320:                                              ; preds = %304
  %321 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %306, align 8
  %322 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %321, i64 171
  %323 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %322, align 8
  %324 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %323(%"class.blink::HTMLFormControlElement"* nonnull %305) #15
  %325 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kButtonE, align 8
  %326 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %324, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  %328 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %325, i64 0, i32 0, i32 0, i32 0
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %328, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %327, %329
  br i1 %330, label %393, label %331

331:                                              ; preds = %320
  %332 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %306, align 8
  %333 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %332, i64 171
  %334 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %333, align 8
  %335 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %334(%"class.blink::HTMLFormControlElement"* nonnull %305) #15
  %336 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kCheckboxE, align 8
  %337 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %335, i64 0, i32 0, i32 0, i32 0
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %337, align 8
  %339 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %336, i64 0, i32 0, i32 0, i32 0
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %339, align 8
  %341 = icmp eq %"class.WTF::StringImpl"* %338, %340
  br i1 %341, label %393, label %342

342:                                              ; preds = %331
  %343 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %306, align 8
  %344 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %343, i64 171
  %345 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %344, align 8
  %346 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %345(%"class.blink::HTMLFormControlElement"* nonnull %305) #15
  %347 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %348 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %346, i64 0, i32 0, i32 0, i32 0
  %349 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %348, align 8
  %350 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %347, i64 0, i32 0, i32 0, i32 0
  %351 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %350, align 8
  %352 = icmp eq %"class.WTF::StringImpl"* %349, %351
  br i1 %352, label %393, label %353

353:                                              ; preds = %342
  %354 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %306, align 8
  %355 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %354, i64 171
  %356 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %355, align 8
  %357 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %356(%"class.blink::HTMLFormControlElement"* nonnull %305) #15
  %358 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRadioE, align 8
  %359 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %357, i64 0, i32 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  %361 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %358, i64 0, i32 0, i32 0, i32 0
  %362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %361, align 8
  %363 = icmp eq %"class.WTF::StringImpl"* %360, %362
  br i1 %363, label %393, label %364

364:                                              ; preds = %353
  %365 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %306, align 8
  %366 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %365, i64 171
  %367 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %366, align 8
  %368 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %367(%"class.blink::HTMLFormControlElement"* nonnull %305) #15
  %369 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kResetE, align 8
  %370 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %368, i64 0, i32 0, i32 0, i32 0
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %372 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %369, i64 0, i32 0, i32 0, i32 0
  %373 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %372, align 8
  %374 = icmp eq %"class.WTF::StringImpl"* %371, %373
  br i1 %374, label %393, label %375

375:                                              ; preds = %364
  %376 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %306, align 8
  %377 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %376, i64 171
  %378 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %377, align 8
  %379 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %378(%"class.blink::HTMLFormControlElement"* nonnull %305) #15
  %380 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names7kSubmitE, align 8
  %381 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %379, i64 0, i32 0, i32 0, i32 0
  %382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %381, align 8
  %383 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %380, i64 0, i32 0, i32 0, i32 0
  %384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %383, align 8
  %385 = icmp eq %"class.WTF::StringImpl"* %382, %384
  br i1 %385, label %393, label %386

386:                                              ; preds = %375
  %387 = bitcast %"class.blink::Node"* %8 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %388 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %387, align 8
  %389 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %388, i64 195
  %390 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %389, align 8
  %391 = tail call %"class.WTF::StringImpl"* %390(%"class.blink::HTMLInputElement"* nonnull %303) #15
  %392 = ptrtoint %"class.WTF::StringImpl"* %391 to i64
  br label %406

393:                                              ; preds = %375, %364, %353, %342, %331, %320, %291, %287
  %394 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  %395 = load i32, i32* %394, align 4
  %396 = icmp eq i32 %395, 22
  br i1 %396, label %397, label %406

397:                                              ; preds = %393
  %398 = bitcast %"class.blink::HeapHashSet.3867"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %398) #15
  %399 = bitcast %"class.blink::HeapHashSet.3867"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %398, i8 0, i64 20, i1 false) #15
  %400 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)***
  %401 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)**, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)*** %400, align 8
  %402 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)** %401, i64 59
  %403 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)** %402, align 8
  %404 = call %"class.WTF::StringImpl"* %403(%"class.blink::AXNodeObject"* %0, %"class.blink::HeapHashSet.3867"* nonnull dereferenceable(24) %3, i1 zeroext false) #15
  %405 = ptrtoint %"class.WTF::StringImpl"* %404 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %398) #15
  br label %406

406:                                              ; preds = %157, %151, %28, %143, %136, %131, %123, %107, %125, %1, %393, %246, %216, %213, %202, %6, %386, %317, %397, %279
  %407 = phi i64 [ %405, %397 ], [ %319, %317 ], [ %392, %386 ], [ %286, %279 ], [ 0, %6 ], [ %182, %202 ], [ %204, %213 ], [ %204, %216 ], [ %227, %246 ], [ 0, %393 ], [ 0, %1 ], [ 0, %28 ], [ %128, %125 ], [ %108, %107 ], [ %108, %123 ], [ %134, %131 ], [ %134, %136 ], [ %134, %143 ], [ %134, %157 ], [ 0, %151 ]
  %408 = inttoptr i64 %407 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %408
}

declare i32 @_ZNK5blink17HTMLSelectElement17SelectedListIndexEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::HeapVector.3228"* @_ZNK5blink17HTMLSelectElement12GetListItemsEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink17HTMLSelectElement12InnerElementEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement16InnerEditorValueEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject33IsPasswordFieldAndShouldHideValueEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #15
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !3

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.3243"* %17, i8* nonnull dereferenceable(1) %3) #15
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #15
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !3

49:                                               ; preds = %42
  %50 = bitcast %union.anon.3242* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon.3242* %43 to %"class.WTF::Vector.3248"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.3248"* %57, i16* nonnull dereferenceable(2) %4) #15
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject21IsRangeValueSupportedEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink23LayoutFileUploadControl13FileTextValueEv(%"class.blink::LayoutFileUploadControl"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement14FileStatusTextEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject46SlowGetValueForControlIncludingContentEditableEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject20IsNonAtomicTextFieldEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %2) #15
  %6 = icmp eq %"class.blink::Element"* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %4
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element25GetInnerTextWithoutUpdateEv(%"class.blink::Element"* nonnull %5) #15
  %9 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  br label %17

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)***
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)** %12, i64 98
  %14 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)** %13, align 8
  %15 = tail call %"class.WTF::StringImpl"* %14(%"class.blink::AXNodeObject"* %0) #15
  %16 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  br label %17

17:                                               ; preds = %4, %7, %10
  %18 = phi i64 [ %9, %7 ], [ %16, %10 ], [ 0, %4 ]
  %19 = inttoptr i64 %18 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %19
}

declare zeroext i1 @_ZNK5blink8AXObject20IsNonAtomicTextFieldEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink7Element25GetInnerTextWithoutUpdateEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12AXNodeObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"* dereferenceable(16)) unnamed_addr #0 align 2 {
  tail call void @_ZNK5blink12AXNodeObject36AccessibilityChildrenFromAOMPropertyENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"* %0, i32 0, %"class.blink::HeapVector.2999"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12AXNodeObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"* dereferenceable(16)) unnamed_addr #0 align 2 {
  tail call void @_ZNK5blink12AXNodeObject36AccessibilityChildrenFromAOMPropertyENS_23AOMRelationListPropertyERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"* %0, i32 5, %"class.blink::HeapVector.2999"* dereferenceable(16) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject20SupportsARIADraggingEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaGrabbedAttrE, align 8
  %5 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)***
  %6 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %6, i64 131
  %8 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %7, align 8
  %9 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %8(%"class.blink::AXNodeObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %4) #15
  %10 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %16, i64* %17, align 8
  br label %25

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  br label %25

25:                                               ; preds = %14, %18
  %26 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.5)
  %29 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  br i1 %28, label %48, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %35, i64* %36, align 8
  br label %44

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  br label %44

44:                                               ; preds = %33, %37
  %45 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %45, i32* %46, align 8
  %47 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [6 x i8]* nonnull dereferenceable(6) @.str.11)
  br label %48

48:                                               ; preds = %44, %25
  %49 = phi i1 [ true, %25 ], [ %47, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #15
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject15ParseDropeffectERN3WTF6StringE(%"class.blink::AXNodeObject"* nocapture readnone, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %13, align 8
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %15 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %14, i64* %15, align 8
  br label %23

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %22 = bitcast i8** %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  br label %23

23:                                               ; preds = %12, %16
  %24 = phi i32 [ %19, %16 ], [ 0, %12 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #15
  br i1 %26, label %104, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #15
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %32, align 8
  %33 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %34 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %33, i64* %34, align 8
  br label %42

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %41 = bitcast i8** %40 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %41, align 8
  br label %42

42:                                               ; preds = %31, %35
  %43 = phi i32 [ %38, %35 ], [ 0, %31 ]
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %43, i32* %44, align 8
  %45 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [8 x i8]* nonnull dereferenceable(8) @.str.18)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #15
  br i1 %45, label %104, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #15
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %51, align 8
  %52 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %53 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %52, i64* %53, align 8
  br label %61

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 1
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %60 = bitcast i8** %59 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %60, align 8
  br label %61

61:                                               ; preds = %50, %54
  %62 = phi i32 [ %57, %54 ], [ 0, %50 ]
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %62, i32* %63, align 8
  %64 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [5 x i8]* nonnull dereferenceable(5) @.str.19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #15
  br i1 %64, label %104, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #15
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %70, align 8
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %72 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %71, i64* %72, align 8
  br label %80

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 1
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %79 = bitcast i8** %78 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %79, align 8
  br label %80

80:                                               ; preds = %69, %73
  %81 = phi i32 [ %76, %73 ], [ 0, %69 ]
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %81, i32* %82, align 8
  %83 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [5 x i8]* nonnull dereferenceable(5) @.str.20)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #15
  br i1 %83, label %104, label %84

84:                                               ; preds = %80
  %85 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #15
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %88, label %92

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %89, align 8
  %90 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %91 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %90, i64* %91, align 8
  br label %99

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 1
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %98 = bitcast i8** %97 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %96, %"class.WTF::StringImpl"** %98, align 8
  br label %99

99:                                               ; preds = %88, %92
  %100 = phi i32 [ %95, %92 ], [ 0, %88 ]
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %100, i32* %101, align 8
  %102 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [6 x i8]* nonnull dereferenceable(6) @.str.21)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #15
  %103 = select i1 %102, i32 5, i32 0
  br label %104

104:                                              ; preds = %99, %80, %61, %42, %23
  %105 = phi i32 [ 1, %23 ], [ 2, %42 ], [ 3, %61 ], [ 4, %80 ], [ %103, %99 ]
  ret i32 %105
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [8 x i8]* dereferenceable(8)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 7
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %157, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %213, %14, %28, %157, %171, %185, %199, %42, %59, %77, %93, %109, %125, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %14 ], [ false, %28 ], [ false, %157 ], [ false, %171 ], [ false, %185 ], [ false, %199 ], [ %226, %213 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  ret i1 %156

157:                                              ; preds = %28
  %158 = getelementptr inbounds i8, i8* %15, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %163, %169
  br i1 %170, label %171, label %75

171:                                              ; preds = %157
  %172 = getelementptr inbounds i8, i8* %15, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %177, %183
  br i1 %184, label %185, label %75

185:                                              ; preds = %171
  %186 = getelementptr inbounds i8, i8* %15, i64 4
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %191, %197
  br i1 %198, label %199, label %75

199:                                              ; preds = %185
  %200 = getelementptr inbounds i8, i8* %15, i64 5
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %205, %211
  br i1 %212, label %213, label %75

213:                                              ; preds = %199
  %214 = getelementptr inbounds i8, i8* %15, i64 6
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = sext i8 %224 to i32
  %226 = icmp eq i32 %219, %225
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12AXNodeObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXNodeObject"*, %"class.WTF::Vector.3873"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.630", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names19kAriaDropeffectAttrE, align 8
  %7 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)***
  %8 = load i1 (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)**, i1 (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %8, i64 130
  %10 = load i1 (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, i1 (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::AXNodeObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %6) #15
  br i1 %11, label %12, label %97

12:                                               ; preds = %2
  %13 = bitcast %"class.WTF::Vector.630"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #15
  %16 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %16) #15
  call void @_ZN5blink8AXObject24TokenVectorFromAttributeEPNS_7ElementERN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERKNS_13QualifiedNameE(%"class.blink::Element"* %17, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %3, %"class.blink::QualifiedName"* dereferenceable(8) %6) #15
  %18 = load i32, i32* %15, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %36

20:                                               ; preds = %12
  %21 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #15
  store i32 0, i32* %4, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.3873", %"class.WTF::Vector.3873"* %1, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::Vector.3873", %"class.WTF::Vector.3873"* %1, i64 0, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %34, label %27, !prof !3

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::Vector.3873", %"class.WTF::Vector.3873"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = zext i32 %23 to i64
  %31 = getelementptr inbounds i32, i32* %29, i64 %30
  store i32 0, i32* %31, align 4
  %32 = load i32, i32* %22, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %22, align 4
  br label %35

34:                                               ; preds = %20
  call void @_ZN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.3873"* %1, i32* nonnull dereferenceable(4) %4) #15
  br label %35

35:                                               ; preds = %27, %34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #15
  br label %60

36:                                               ; preds = %12
  %37 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %38 = zext i32 %18 to i64
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 %38
  %40 = bitcast i32* %5 to i8*
  %41 = getelementptr inbounds %"class.WTF::Vector.3873", %"class.WTF::Vector.3873"* %1, i64 0, i32 0, i32 0, i32 2
  %42 = getelementptr inbounds %"class.WTF::Vector.3873", %"class.WTF::Vector.3873"* %1, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.3873", %"class.WTF::Vector.3873"* %1, i64 0, i32 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %36, %57
  %45 = phi %"class.WTF::String"* [ %37, %36 ], [ %58, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #15
  %46 = call i32 @_ZNK5blink12AXNodeObject15ParseDropeffectERN3WTF6StringE(%"class.blink::AXNodeObject"* undef, %"class.WTF::String"* dereferenceable(8) %45)
  store i32 %46, i32* %5, align 4
  %47 = load i32, i32* %41, align 4
  %48 = load i32, i32* %42, align 8
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %56, label %50, !prof !3

50:                                               ; preds = %44
  %51 = load i32*, i32** %43, align 8
  %52 = zext i32 %47 to i64
  %53 = getelementptr inbounds i32, i32* %51, i64 %52
  store i32 %46, i32* %53, align 4
  %54 = load i32, i32* %41, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %41, align 4
  br label %57

56:                                               ; preds = %44
  call void @_ZN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.3873"* %1, i32* nonnull dereferenceable(4) %5) #15
  br label %57

57:                                               ; preds = %50, %56
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #15
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 1
  %59 = icmp eq %"class.WTF::String"* %58, %39
  br i1 %59, label %60, label %44

60:                                               ; preds = %57, %35
  %61 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %62 = icmp eq %"class.WTF::String"* %61, null
  br i1 %62, label %96, label %63, !prof !5

63:                                               ; preds = %60
  %64 = bitcast %"class.WTF::String"* %61 to i8*
  %65 = load i32, i32* %15, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %94, label %67, !prof !3

67:                                               ; preds = %63
  %68 = zext i32 %65 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 %68
  br label %70

70:                                               ; preds = %88, %67
  %71 = phi %"class.WTF::String"* [ %89, %88 ], [ %61, %67 ]
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #15
  br label %88

88:                                               ; preds = %87, %84, %70
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 1
  %90 = icmp eq %"class.WTF::String"* %89, %69
  br i1 %90, label %91, label %70

91:                                               ; preds = %88
  store i32 0, i32* %15, align 4
  %92 = bitcast %"class.WTF::Vector.630"* %3 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %91, %63
  %95 = phi i8* [ %93, %91 ], [ %64, %63 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %95) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %14, align 8
  br label %96

96:                                               ; preds = %60, %94
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  br label %97

97:                                               ; preds = %2, %96
  ret void
}

declare void @_ZN5blink8AXObject24TokenVectorFromAttributeEPNS_7ElementERN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.WTF::Vector.630"* dereferenceable(16), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject8HasPopupEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %10 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %11 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %11, i64 5
  %13 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %12, align 8
  %14 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %13(%"class.blink::AXObject"* %9, i32 4) #15
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %143, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %22, i32* %26, align 8
  %27 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [6 x i8]* nonnull dereferenceable(6) @.str.11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #15
  br i1 %27, label %158, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #15
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %33, align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %34, i64* %35, align 8
  br label %43

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %42 = bitcast i8** %41 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %42, align 8
  br label %43

43:                                               ; preds = %32, %36
  %44 = phi i32 [ %39, %36 ], [ 0, %32 ]
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %44, i32* %45, align 8
  %46 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [8 x i8]* nonnull dereferenceable(8) @.str.22)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #15
  br i1 %46, label %158, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #15
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %52, align 8
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %54 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %53, i64* %54, align 8
  br label %62

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 1
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %61 = bitcast i8** %60 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %61, align 8
  br label %62

62:                                               ; preds = %51, %55
  %63 = phi i32 [ %58, %55 ], [ 0, %51 ]
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %63, i32* %64, align 8
  %65 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [5 x i8]* nonnull dereferenceable(5) @.str.23)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #15
  br i1 %65, label %158, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #15
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %70, label %74

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %71, align 8
  %72 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %73 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %72, i64* %73, align 8
  br label %81

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 1
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %80 = bitcast i8** %79 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %80, align 8
  br label %81

81:                                               ; preds = %70, %74
  %82 = phi i32 [ %77, %74 ], [ 0, %70 ]
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %82, i32* %83, align 8
  %84 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [5 x i8]* nonnull dereferenceable(5) @.str.24)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #15
  br i1 %84, label %158, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #15
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %90, align 8
  %91 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %92 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %91, i64* %92, align 8
  br label %100

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 1
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %99 = bitcast i8** %98 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %99, align 8
  br label %100

100:                                              ; preds = %89, %93
  %101 = phi i32 [ %96, %93 ], [ 0, %89 ]
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %101, i32* %102, align 8
  %103 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [7 x i8]* nonnull dereferenceable(7) @.str.25)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #15
  br i1 %103, label %158, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #15
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %109, align 8
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %111 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %110, i64* %111, align 8
  br label %119

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 1
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %118 = bitcast i8** %117 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %118, align 8
  br label %119

119:                                              ; preds = %108, %112
  %120 = phi i32 [ %115, %112 ], [ 0, %108 ]
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %120, i32* %121, align 8
  %122 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [5 x i8]* nonnull dereferenceable(5) @.str.5)
  %123 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #15
  br i1 %122, label %142, label %124

124:                                              ; preds = %119
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %127, label %131

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %128, align 8
  %129 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %130 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %129, i64* %130, align 8
  br label %138

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %132, align 8
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 1
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %137 = bitcast i8** %136 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %137, align 8
  br label %138

138:                                              ; preds = %127, %131
  %139 = phi i32 [ %134, %131 ], [ 0, %127 ]
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %139, i32* %140, align 8
  %141 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, [5 x i8]* nonnull dereferenceable(5) @.str.26)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #15
  br i1 %141, label %158, label %143

142:                                              ; preds = %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #15
  br label %158

143:                                              ; preds = %138, %1
  %144 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %9) #15
  %145 = icmp eq i32 %144, 22
  br i1 %145, label %158, label %146

146:                                              ; preds = %143
  %147 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %9) #15
  %148 = icmp eq i32 %147, 172
  br i1 %148, label %158, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %151 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = call i32 @_ZNK5blink17AXObjectCacheImpl16GetAutofillStateEj(%"class.blink::AXObjectCacheImpl"* %151, i32 %153) #15
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %149
  %157 = call i32 @_ZNK5blink8AXObject8HasPopupEv(%"class.blink::AXObject"* %9) #15
  br label %158

158:                                              ; preds = %149, %143, %146, %138, %142, %100, %81, %62, %43, %18, %156
  %159 = phi i32 [ %157, %156 ], [ 0, %18 ], [ 3, %43 ], [ 4, %62 ], [ 5, %81 ], [ 6, %100 ], [ 2, %142 ], [ 2, %138 ], [ 3, %146 ], [ 3, %143 ], [ 2, %149 ]
  ret i32 %159
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [7 x i8]* dereferenceable(7)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %141, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %183, %14, %28, %141, %155, %169, %42, %59, %77, %93, %109, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %14 ], [ false, %28 ], [ false, %141 ], [ false, %155 ], [ false, %169 ], [ %196, %183 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  ret i1 %140

141:                                              ; preds = %28
  %142 = getelementptr inbounds i8, i8* %15, i64 2
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp eq i32 %147, %153
  br i1 %154, label %155, label %75

155:                                              ; preds = %141
  %156 = getelementptr inbounds i8, i8* %15, i64 3
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i64
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = icmp eq i32 %161, %167
  br i1 %168, label %169, label %75

169:                                              ; preds = %155
  %170 = getelementptr inbounds i8, i8* %15, i64 4
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i64
  %173 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i64
  %179 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %175, %181
  br i1 %182, label %183, label %75

183:                                              ; preds = %169
  %184 = getelementptr inbounds i8, i8* %15, i64 5
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = sext i8 %194 to i32
  %196 = icmp eq i32 %189, %195
  br label %75
}

declare i32 @_ZNK5blink8AXObject8HasPopupEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject14IsEditableRootEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi %"class.blink::Node"* [ %6, %4 ], [ null, %1 ]
  %9 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  %10 = xor i1 %9, true
  %11 = icmp ne %"class.blink::Node"* %8, null
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %24

13:                                               ; preds = %7
  %14 = tail call %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlEPKNS_4NodeE(%"class.blink::Node"* nonnull %8) #15
  %15 = icmp eq %"class.blink::TextControlElement"* %14, null
  br i1 %15, label %16, label %24

16:                                               ; preds = %13
  %17 = tail call zeroext i1 @_ZN5blink21IsRootEditableElementERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %8) #15
  br i1 %17, label %24, label %18

18:                                               ; preds = %16
  %19 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %20 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %20, i64 110
  %22 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::AXNodeObject"* %0) #15
  br label %24

24:                                               ; preds = %18, %16, %13, %7
  %25 = phi i1 [ false, %7 ], [ false, %13 ], [ true, %16 ], [ %23, %18 ]
  ret i1 %25
}

declare %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink21IsRootEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject30HasContentEditableAttributeSetEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %25, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %5, label %25, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %11, label %25, label %12

12:                                               ; preds = %10
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 48
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::Node"* %13 to %"class.blink::HTMLElement"*
  %22 = tail call i32 @_ZNK5blink11HTMLElement25contentEditableNormalizedEv(%"class.blink::HTMLElement"* nonnull %21) #15
  %23 = or i32 %22, 2
  %24 = icmp eq i32 %23, 3
  br label %25

25:                                               ; preds = %15, %10, %12, %4, %20, %1, %6
  %26 = phi i1 [ false, %6 ], [ false, %1 ], [ %24, %20 ], [ false, %4 ], [ false, %15 ], [ false, %12 ], [ false, %10 ]
  ret i1 %26
}

declare i32 @_ZNK5blink11HTMLElement25contentEditableNormalizedEv(%"class.blink::HTMLElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12AXNodeObject22OnNativeSetValueActionERKN3WTF6StringE(%"class.blink::AXNodeObject"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #15
  br i1 %5, label %154, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %154, label %10

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #15
  br i1 %11, label %14, label %12

12:                                               ; preds = %10
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi %"class.blink::Node"* [ %13, %12 ], [ null, %10 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 12
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %154

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %22 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %22, i64 125
  %24 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %23, align 8
  %25 = tail call %"class.blink::LayoutObject"* %24(%"class.blink::AXObject"* %4) #15
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %154, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.blink::LayoutObject"* %25 to i1 (%"class.blink::LayoutObject"*)***
  %29 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, i64 20
  %31 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* nonnull %25) #15
  br i1 %32, label %33, label %154

33:                                               ; preds = %27
  %34 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #15
  br i1 %34, label %72, label %35

35:                                               ; preds = %33
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 48
  %40 = icmp ne i32 %39, 0
  %41 = icmp eq %"class.blink::Node"* %36, null
  %42 = or i1 %41, %40
  br i1 %42, label %72, label %43

43:                                               ; preds = %35
  %44 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 1, i32 2
  %48 = bitcast %"class.blink::Member.318"* %47 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %51, %53
  %55 = bitcast %"class.blink::Node"* %36 to %"class.blink::HTMLInputElement"*
  br i1 %54, label %56, label %72

56:                                               ; preds = %43
  %57 = bitcast %"class.blink::LayoutObject"* %25 to i1 (%"class.blink::LayoutObject"*, i32)***
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* nonnull %25, i32 53) #15
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %57, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, i64 92
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::LayoutObject"* nonnull %25, i32 35) #15
  br i1 %66, label %67, label %72

67:                                               ; preds = %56, %62
  %68 = bitcast %"class.blink::Node"* %36 to void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)***
  %69 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %69, i64 196
  %71 = load void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::HTMLInputElement"*, %"class.WTF::String"*, i32, i32)** %70, align 8
  tail call void %71(%"class.blink::HTMLInputElement"* nonnull %55, %"class.WTF::String"* dereferenceable(8) %1, i32 3, i32 0) #15
  br label %154

72:                                               ; preds = %43, %33, %35, %62
  %73 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #15
  br i1 %73, label %96, label %74

74:                                               ; preds = %72
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %75, i64 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 48
  %79 = icmp ne i32 %78, 0
  %80 = icmp eq %"class.blink::Node"* %75, null
  %81 = or i1 %80, %79
  br i1 %81, label %96, label %82

82:                                               ; preds = %74
  %83 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %84 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %75, i64 1, i32 2
  %87 = bitcast %"class.blink::Member.318"* %86 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %90, %92
  br i1 %93, label %94, label %96

94:                                               ; preds = %82
  %95 = bitcast %"class.blink::Node"* %75 to %"class.blink::HTMLTextAreaElement"*
  tail call void @_ZN5blink19HTMLTextAreaElement8setValueERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"* nonnull %95, %"class.WTF::String"* dereferenceable(8) %1, i32 3, i32 0) #15
  br label %154

96:                                               ; preds = %82, %72, %74
  %97 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %98 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %97, align 8
  %99 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %98, i64 110
  %100 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %99, align 8
  %101 = tail call zeroext i1 %100(%"class.blink::AXNodeObject"* %0) #15
  br i1 %101, label %102, label %154

102:                                              ; preds = %96
  %103 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %103) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 56, i1 false)
  %104 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #15
  %105 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %106 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 1, i16* %106, align 8
  %107 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %107, align 2
  %108 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %109 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  %110 = bitcast i8** %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false)
  store %"class.v8::Isolate"* %104, %"class.v8::Isolate"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %111, align 8
  %112 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %113 = bitcast %"class.WTF::StringImpl"** %112 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #15
  %114 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #15
  br i1 %114, label %118, label %115

115:                                              ; preds = %102
  %116 = bitcast %"class.blink::Node"** %7 to %"class.blink::HTMLElement"**
  %117 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %116, align 8
  br label %118

118:                                              ; preds = %102, %115
  %119 = phi %"class.blink::HTMLElement"* [ %117, %115 ], [ null, %102 ]
  call void @_ZN5blink11HTMLElement12setInnerTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLElement"* %119, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #15
  %120 = load i32, i32* %111, align 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %123, label %122

122:                                              ; preds = %118
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %3) #15
  br label %123

123:                                              ; preds = %118, %122
  %124 = phi i1 [ false, %122 ], [ true, %118 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %125 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %126 = load i64*, i64** %125, align 8
  %127 = icmp eq i64* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %123
  %129 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %109, align 8
  %130 = bitcast %"class.v8::Isolate"* %129 to %"class.v8::internal::Isolate"*
  %131 = load i64, i64* %126, align 8
  %132 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %130, i64 %131) #15
  %133 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %129) #15
  br i1 %133, label %137, label %134

134:                                              ; preds = %128
  %135 = bitcast i64* %132 to %"class.v8::Value"*
  %136 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %129, %"class.v8::Value"* %135) #15
  br label %137

137:                                              ; preds = %134, %128, %123
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #15
  br label %153

153:                                              ; preds = %137, %149, %152
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %103) #15
  br label %154

154:                                              ; preds = %2, %20, %27, %96, %94, %153, %67, %14, %6
  %155 = phi i1 [ false, %6 ], [ false, %14 ], [ false, %20 ], [ false, %27 ], [ true, %67 ], [ %124, %153 ], [ true, %94 ], [ false, %96 ], [ false, %2 ]
  ret i1 %155
}

declare void @_ZN5blink19HTMLTextAreaElement8setValueERKN3WTF6StringENS_22TextFieldEventBehaviorENS_28TextControlSetValueSelectionE(%"class.blink::HTMLTextAreaElement"*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #1

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare void @_ZN5blink11HTMLElement12setInnerTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32* dereferenceable(4), %"class.blink::HeapVector.2999"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = alloca %"class.WTF::StringAppend.3878", align 8
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"* %6, i32* dereferenceable(4) %1, %"class.blink::HeapVector.2999"* %2) #15
  %8 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %9 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %6) #15
  %10 = icmp eq i32 %9, 157
  br i1 %10, label %11, label %200

11:                                               ; preds = %3
  %12 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject16DatetimeAncestorEi(%"class.blink::AXObject"* %6, i32 3) #15
  %13 = icmp eq %"class.blink::AXObject"* %12, null
  br i1 %13, label %200, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = bitcast %"class.blink::HeapVector.2999"* %2 to i8**
  br i1 %21, label %27, label %23

23:                                               ; preds = %18
  %24 = load i8*, i8** %22, align 8
  %25 = zext i32 %20 to i64
  %26 = shl nuw nsw i64 %25, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %24, i64 %26) #15
  store i32 0, i32* %19, align 4
  br label %27

27:                                               ; preds = %23, %18
  %28 = load i8*, i8** %22, align 8
  %29 = bitcast %"class.blink::HeapVector.2999"* %2 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %15, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %28) #15
  br label %30

30:                                               ; preds = %14, %27
  %31 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject16DatetimeAncestorEi(%"class.blink::AXObject"* %6, i32 3) #15
  %32 = bitcast %"class.blink::AXObject"* %31 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)***
  %33 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)** %33, i64 53
  %35 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)** %34, align 8
  %36 = tail call %"class.WTF::StringImpl"* %35(%"class.blink::AXObject"* %31, i32* dereferenceable(4) %1, %"class.blink::HeapVector.2999"* %2) #15
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %200, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %173, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #15
  %44 = bitcast %"class.WTF::StringAppend.3878"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #15
  %45 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %45, label %90, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %63

53:                                               ; preds = %46
  %54 = zext i32 %52 to i33
  %55 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #15
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !3

60:                                               ; preds = %53
  tail call void @llvm.trap() #15
  unreachable

61:                                               ; preds = %53
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %51, align 4
  br label %63

63:                                               ; preds = %46, %61
  %64 = phi i32 [ %62, %61 ], [ %52, %46 ]
  %65 = load atomic i32, i32* %47 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  br i1 %67, label %69, label %79

69:                                               ; preds = %63
  %70 = zext i32 %64 to i33
  %71 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #15
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !3

76:                                               ; preds = %69
  tail call void @llvm.trap() #15
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %79

79:                                               ; preds = %77, %63
  %80 = phi i32 [ %78, %77 ], [ %64, %63 ]
  %81 = load atomic i32, i32* %47 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = add i32 %80, -1
  store i32 %85, i32* %68, align 4
  br label %86

86:                                               ; preds = %84, %79
  %87 = phi i32 [ %85, %84 ], [ %80, %79 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #15
  br label %90

90:                                               ; preds = %89, %86, %42
  %91 = getelementptr inbounds %"class.WTF::StringAppend.3878", %"class.WTF::StringAppend.3878"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringAppend.3878", %"class.WTF::StringAppend.3878"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i8** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i33
  %101 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #15
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !3

106:                                              ; preds = %97
  tail call void @llvm.trap() #15
  unreachable

107:                                              ; preds = %97
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %98, align 4
  br label %109

109:                                              ; preds = %90, %107
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %4, %"class.WTF::StringAppend.3878"* nonnull dereferenceable(16) %5, %"class.WTF::StringImpl"* nonnull %36)
  %110 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %4)
  %111 = ptrtoint %"class.WTF::StringImpl"* %110 to i64
  %112 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #15
  br label %128

128:                                              ; preds = %127, %124, %109
  %129 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #15
  br label %145

145:                                              ; preds = %128, %141, %144
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #15
  br label %161

161:                                              ; preds = %160, %157, %145
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #15
  %162 = load atomic i32, i32* %93 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %161
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %161
  %170 = phi i32 [ %168, %167 ], [ %166, %161 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %186

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #15
  br label %186

173:                                              ; preds = %38
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %200

185:                                              ; preds = %182
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #15
  br label %200

186:                                              ; preds = %172, %169
  br i1 %45, label %200, label %187

187:                                              ; preds = %186
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #15
  br label %200

200:                                              ; preds = %30, %3, %11, %182, %185, %186, %196, %199
  %201 = phi i64 [ %111, %186 ], [ %111, %196 ], [ %111, %199 ], [ %8, %185 ], [ %8, %182 ], [ %8, %11 ], [ %8, %3 ], [ %8, %30 ]
  %202 = inttoptr i64 %201 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %202
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, i32* dereferenceable(4), %"class.blink::HeapVector.2999"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject16DatetimeAncestorEi(%"class.blink::AXObject"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.3878"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.3878", %"class.WTF::StringAppend.3878"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #15
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #15
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.3878", %"class.WTF::StringAppend.3878"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #15
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #15
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #15
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.4288", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.4288"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #15
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4288"* nonnull %2, i8* %14) #15
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #15
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #15
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %39
  call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #15
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #15
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #15
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #15
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %75
  call void @llvm.trap() #15
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #15
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #15
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEE(%"class.blink::AXNodeObject"*, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.3867"* dereferenceable(24), i32* dereferenceable(4), %"class.blink::HeapVector.3879"*, %"class.blink::HeapVector.3890"*) unnamed_addr #0 align 2 {
  %8 = alloca i8, align 1
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.blink::LayoutRect"*
  %11 = alloca %"class.blink::LayoutRect", align 4
  %12 = alloca %"class.blink::NameSource", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.blink::NameSource", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #15
  store i8 0, i8* %8, align 1
  %15 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %16 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %15) #15
  br i1 %16, label %21, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %21, label %28

21:                                               ; preds = %7, %17
  %22 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %23 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %23, i64 125
  %25 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %24, align 8
  %26 = tail call %"class.blink::LayoutObject"* %25(%"class.blink::AXObject"* %15) #15
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  br i1 %27, label %711, label %28

28:                                               ; preds = %21, %17
  %29 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %15) #15
  br i1 %29, label %91, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %91, label %34

34:                                               ; preds = %30
  %35 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %15) #15
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi %"class.blink::Node"* [ %37, %36 ], [ null, %34 ]
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %43) #15
  %45 = icmp eq %"class.blink::Page"* %44, null
  br i1 %45, label %91, label %46

46:                                               ; preds = %38
  %47 = tail call zeroext i1 @_ZNK5blink4Page12InsidePortalEv(%"class.blink::Page"* nonnull %44) #15
  br i1 %47, label %48, label %91

48:                                               ; preds = %46
  %49 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #15
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %51 = tail call { i64, i64 } @_ZNK5blink8AXObject27GetBoundsInFrameCoordinatesEv(%"class.blink::AXObject"* %15) #15
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %53 = extractvalue { i64, i64 } %51, 0
  store i64 %53, i64* %52, align 8
  %54 = extractvalue { i64, i64 } %51, 1
  store i64 %54, i64* %50, align 8
  %55 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %15) #15
  br i1 %55, label %58, label %56

56:                                               ; preds = %48
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  br label %58

58:                                               ; preds = %48, %56
  %59 = phi %"class.blink::Node"* [ %57, %56 ], [ null, %48 ]
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::Document"*, %"class.blink::Document"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %63, i64 0, i32 113
  %65 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %64, align 8
  %66 = tail call i64 @_ZNK5blink10LayoutView13GetLayoutSizeENS_23IncludeScrollbarsInRectE(%"class.blink::LayoutView"* %65, i32 0) #15
  %67 = trunc i64 %66 to i32
  %68 = lshr i64 %66, 32
  %69 = trunc i64 %68 to i32
  %70 = bitcast %"class.blink::LayoutRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #15
  %71 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %11, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %71, align 4
  %72 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %11, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %72, align 4
  %73 = icmp sgt i32 %67, 33554431
  br i1 %73, label %78, label %74

74:                                               ; preds = %58
  %75 = icmp slt i32 %67, -33554432
  %76 = shl i32 %67, 6
  %77 = select i1 %75, i32 -2147483648, i32 %76
  br label %78

78:                                               ; preds = %74, %58
  %79 = phi i32 [ 2147483647, %58 ], [ %77, %74 ]
  %80 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %11, i64 0, i32 1, i32 0, i32 0
  store i32 %79, i32* %80, align 4
  %81 = icmp sgt i32 %69, 33554431
  br i1 %81, label %87, label %82

82:                                               ; preds = %78
  %83 = icmp slt i32 %69, -33554432
  br i1 %83, label %87, label %84

84:                                               ; preds = %82
  %85 = shl nuw nsw i64 %68, 6
  %86 = trunc i64 %85 to i32
  br label %87

87:                                               ; preds = %82, %78, %84
  %88 = phi i32 [ %86, %84 ], [ 2147483647, %78 ], [ -2147483648, %82 ]
  %89 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %11, i64 0, i32 1, i32 1, i32 0
  store i32 %88, i32* %89, align 4
  %90 = call zeroext i1 @_ZNK5blink10LayoutRect10IntersectsERKS0_(%"class.blink::LayoutRect"* nonnull %10, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %11) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #15
  br i1 %90, label %91, label %711

91:                                               ; preds = %87, %28, %30, %38, %46
  br i1 %1, label %92, label %162

92:                                               ; preds = %91
  %93 = ptrtoint %"class.blink::AXNodeObject"* %0 to i64
  %94 = getelementptr inbounds %"class.blink::HeapHashSet.3867", %"class.blink::HeapHashSet.3867"* %3, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::Member.3136"*, %"class.blink::Member.3136"** %94, align 8
  %96 = icmp eq %"class.blink::Member.3136"* %95, null
  br i1 %96, label %158, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.blink::HeapHashSet.3867", %"class.blink::HeapHashSet.3867"* %3, i64 0, i32 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, -1
  %101 = zext i32 %100 to i64
  %102 = shl i64 %93, 32
  %103 = xor i64 %102, -1
  %104 = add i64 %103, %93
  %105 = lshr i64 %104, 22
  %106 = xor i64 %105, %104
  %107 = shl i64 %106, 13
  %108 = xor i64 %107, -1
  %109 = add i64 %106, %108
  %110 = lshr i64 %109, 8
  %111 = xor i64 %110, %109
  %112 = mul i64 %111, 9
  %113 = lshr i64 %112, 15
  %114 = xor i64 %113, %112
  %115 = shl i64 %114, 27
  %116 = xor i64 %115, -1
  %117 = add i64 %114, %116
  %118 = lshr i64 %117, 31
  %119 = xor i64 %118, %117
  %120 = trunc i64 %119 to i32
  %121 = and i32 %100, %120
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %95, i64 %122
  %124 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %123, i64 0, i32 0, i32 0
  %125 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %124, align 8
  %126 = icmp eq %"class.blink::AXObject"* %125, %15
  br i1 %126, label %155, label %127

127:                                              ; preds = %97
  %128 = xor i32 %120, -1
  %129 = lshr i32 %120, 23
  %130 = add i32 %129, %128
  %131 = shl i32 %130, 12
  %132 = xor i32 %131, %130
  %133 = lshr i32 %132, 7
  %134 = xor i32 %133, %132
  %135 = shl i32 %134, 2
  %136 = xor i32 %135, %134
  %137 = lshr i32 %136, 20
  %138 = xor i32 %137, %136
  %139 = or i32 %138, 1
  %140 = zext i32 %139 to i64
  br label %141

141:                                              ; preds = %146, %127
  %142 = phi %"class.blink::AXObject"* [ %125, %127 ], [ %153, %146 ]
  %143 = phi i64 [ %122, %127 ], [ %150, %146 ]
  %144 = phi i64 [ 0, %127 ], [ %148, %146 ]
  %145 = icmp eq %"class.blink::AXObject"* %142, null
  br i1 %145, label %158, label %146

146:                                              ; preds = %141
  %147 = icmp eq i64 %144, 0
  %148 = select i1 %147, i64 %140, i64 %144
  %149 = add i64 %148, %143
  %150 = and i64 %149, %101
  %151 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %95, i64 %150
  %152 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %152, align 8
  %154 = icmp eq %"class.blink::AXObject"* %153, %15
  br i1 %154, label %155, label %141

155:                                              ; preds = %146, %97
  %156 = phi %"class.blink::Member.3136"* [ %123, %97 ], [ %151, %146 ]
  %157 = icmp eq %"class.blink::Member.3136"* %156, null
  br i1 %157, label %158, label %162

158:                                              ; preds = %141, %155, %92
  %159 = call %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject26GetValueContributionToNameEv(%"class.blink::AXNodeObject"* %0)
  %160 = ptrtoint %"class.WTF::StringImpl"* %159 to i64
  %161 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %161, label %162, label %711

162:                                              ; preds = %158, %155, %91
  %163 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject19AriaTextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEEPb(%"class.blink::AXObject"* %15, i1 zeroext %1, i1 zeroext %2, %"class.blink::HeapHashSet.3867"* dereferenceable(24) %3, i32* dereferenceable(4) %4, %"class.blink::HeapVector.3879"* %5, %"class.blink::HeapVector.3890"* %6, i8* nonnull %8) #15
  %164 = ptrtoint %"class.WTF::StringImpl"* %163 to i64
  %165 = load i8, i8* %8, align 1, !range !2
  %166 = icmp eq i8 %165, 0
  %167 = icmp ne %"class.blink::HeapVector.3890"* %6, null
  %168 = or i1 %167, %166
  br i1 %168, label %169, label %711

169:                                              ; preds = %162
  %170 = call %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject21NativeTextAlternativeERNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEEPb(%"class.blink::AXNodeObject"* %0, %"class.blink::HeapHashSet.3867"* dereferenceable(24) %3, i32* dereferenceable(4) %4, %"class.blink::HeapVector.3879"* %5, %"class.blink::HeapVector.3890"* %6, i8* nonnull %8)
  %171 = ptrtoint %"class.WTF::StringImpl"* %170 to i64
  %172 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #15
  br label %186

186:                                              ; preds = %185, %182, %169
  %187 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %187, label %192, label %188

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %186, %188
  %193 = load i32, i32* %4, align 4
  %194 = icmp eq i32 %193, 3
  br label %195

195:                                              ; preds = %188, %192
  %196 = phi i1 [ %194, %192 ], [ true, %188 ]
  %197 = xor i1 %196, true
  %198 = or i1 %167, %197
  br i1 %198, label %199, label %711

199:                                              ; preds = %195
  br i1 %2, label %202, label %200

200:                                              ; preds = %199
  %201 = call zeroext i1 @_ZNK5blink8AXObject24SupportsNameFromContentsEb(%"class.blink::AXObject"* %15, i1 zeroext %1) #15
  br i1 %201, label %202, label %473

202:                                              ; preds = %200, %199
  %203 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %15) #15
  br i1 %203, label %225, label %204

204:                                              ; preds = %202
  %205 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %206 = load %"class.blink::Node"*, %"class.blink::Node"** %205, align 8
  %207 = icmp eq %"class.blink::Node"* %206, null
  br i1 %207, label %225, label %208

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %206, i64 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = and i32 %210, 48
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %225

213:                                              ; preds = %208
  %214 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %215 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %214, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %215, align 8
  %217 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %206, i64 1, i32 2
  %218 = bitcast %"class.blink::Member.318"* %217 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %219 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %218, align 8
  %220 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %219, i64 0, i32 3, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %216, i64 0, i32 3, i32 0, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %221, %223
  br i1 %224, label %473, label %225

225:                                              ; preds = %202, %208, %204, %213
  %226 = phi %"class.blink::Node"* [ %206, %213 ], [ %206, %208 ], [ null, %204 ], [ null, %202 ]
  %227 = phi i1 [ false, %213 ], [ false, %208 ], [ true, %204 ], [ true, %202 ]
  store i32 5, i32* %4, align 4
  br i1 %167, label %228, label %296

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0
  %230 = bitcast %"class.blink::NameSource"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %230) #15
  %231 = load i8, i8* %8, align 1, !range !2
  %232 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %232, align 8
  %233 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 1
  store i8 %231, i8* %233, align 8
  %234 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 2
  store i8 0, i8* %234, align 1
  %235 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 3
  store i32 1, i32* %235, align 4
  %236 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 4
  %237 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %238 = bitcast %"class.blink::QualifiedName"** %236 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %239, align 8
  %240 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 6
  store i32 -1, i32* %240, align 8
  %241 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 7
  %242 = bitcast %"class.blink::HeapVector.3879"* %241 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 16, i1 false) #15
  %243 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %246 = load i32, i32* %245, align 8
  %247 = icmp eq i32 %244, %246
  br i1 %247, label %257, label %248, !prof !3

248:                                              ; preds = %228
  %249 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %250 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %249, align 8
  %251 = zext i32 %244 to i64
  %252 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %250, i64 %251
  %253 = bitcast %"class.blink::NameSource"* %252 to i8*
  %254 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %253, %"class.blink::NameSource"* nonnull dereferenceable(56) %12) #15
  %255 = load i32, i32* %243, align 4
  %256 = add i32 %255, 1
  store i32 %256, i32* %243, align 4
  br label %258

257:                                              ; preds = %228
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %229, %"class.blink::NameSource"* nonnull dereferenceable(56) %12) #15
  br label %258

258:                                              ; preds = %248, %257
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %274, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #15
  br label %274

274:                                              ; preds = %273, %270, %258
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #15
  br label %290

290:                                              ; preds = %274, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %230) #15
  %291 = load i32, i32* %4, align 4
  %292 = load i32, i32* %243, align 4
  %293 = add i32 %292, -1
  %294 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %229, i32 %293) #15
  %295 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %294, i64 0, i32 3
  store i32 %291, i32* %295, align 4
  br label %296

296:                                              ; preds = %290, %225
  br i1 %227, label %403, label %297

297:                                              ; preds = %296
  %298 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %226, i64 0, i32 1
  %299 = load i32, i32* %298, align 8
  %300 = and i32 %299, 12
  %301 = icmp ne i32 %300, 4
  %302 = icmp eq %"class.blink::Node"* %226, null
  %303 = or i1 %302, %301
  br i1 %303, label %353, label %304

304:                                              ; preds = %297
  %305 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %226, i64 1
  %306 = bitcast %"class.blink::Node"* %305 to i8*
  %307 = load i8, i8* %306, align 8, !range !2
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %313, label %309

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %226, i64 1, i32 0, i32 0, i32 1
  %311 = bitcast %"class.blink::TraceWrapperV8Reference"* %310 to %"class.blink::ParkableString"*
  %312 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %311) #15
  br label %316

313:                                              ; preds = %304
  %314 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %226, i64 1, i32 1
  %315 = bitcast i32* %314 to %"class.WTF::String"*
  br label %316

316:                                              ; preds = %309, %313
  %317 = phi %"class.WTF::String"* [ %312, %309 ], [ %315, %313 ]
  %318 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %317, i64 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %338, label %321

321:                                              ; preds = %316
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %338

326:                                              ; preds = %321
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  %329 = zext i32 %328 to i33
  %330 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %329, i33 1) #15
  %331 = extractvalue { i33, i1 } %330, 1
  %332 = extractvalue { i33, i1 } %330, 0
  %333 = icmp slt i33 %332, 0
  %334 = or i1 %331, %333
  br i1 %334, label %335, label %336, !prof !3

335:                                              ; preds = %326
  call void @llvm.trap() #15
  unreachable

336:                                              ; preds = %326
  %337 = trunc i33 %332 to i32
  store i32 %337, i32* %327, align 4
  br label %338

338:                                              ; preds = %336, %321, %316
  %339 = ptrtoint %"class.WTF::StringImpl"* %319 to i64
  br i1 %187, label %423, label %340

340:                                              ; preds = %338
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load atomic i32, i32* %341 monotonic, align 4
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  br i1 %344, label %347, label %349

347:                                              ; preds = %340
  %348 = add i32 %346, -1
  store i32 %348, i32* %345, align 4
  br label %349

349:                                              ; preds = %347, %340
  %350 = phi i32 [ %348, %347 ], [ %346, %340 ]
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %423

352:                                              ; preds = %349
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #15
  br label %423

353:                                              ; preds = %297
  %354 = and i32 %299, 48
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %403

356:                                              ; preds = %353
  %357 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %358 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %357, i64 0, i32 0, i32 0, i32 0
  %359 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %358, align 8
  %360 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %226, i64 1, i32 2
  %361 = bitcast %"class.blink::Member.318"* %360 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %362 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %361, align 8
  %363 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %362, i64 0, i32 3, i32 0, i32 0, i32 0
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %363, align 8
  %365 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %359, i64 0, i32 3, i32 0, i32 0, i32 0
  %366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %365, align 8
  %367 = icmp eq %"class.WTF::StringImpl"* %364, %366
  br i1 %367, label %368, label %403

368:                                              ; preds = %356
  %369 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %369) #15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i64 1) #15
  %370 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %371 = bitcast %"class.WTF::String"* %13 to i64*
  %372 = load i64, i64* %371, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %370, align 8
  br i1 %187, label %402, label %373

373:                                              ; preds = %368
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br i1 %377, label %380, label %382

380:                                              ; preds = %373
  %381 = add i32 %379, -1
  store i32 %381, i32* %378, align 4
  br label %382

382:                                              ; preds = %380, %373
  %383 = phi i32 [ %381, %380 ], [ %379, %373 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #15
  br label %386

386:                                              ; preds = %382, %385
  %387 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %388 = icmp eq %"class.WTF::StringImpl"* %387, null
  br i1 %388, label %402, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load atomic i32, i32* %390 monotonic, align 4
  %392 = and i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  br i1 %393, label %396, label %398

396:                                              ; preds = %389
  %397 = add i32 %395, -1
  store i32 %397, i32* %394, align 4
  br label %398

398:                                              ; preds = %396, %389
  %399 = phi i32 [ %397, %396 ], [ %395, %389 ]
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %402

401:                                              ; preds = %398
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %387) #15
  br label %402

402:                                              ; preds = %368, %386, %398, %401
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %369) #15
  br label %423

403:                                              ; preds = %296, %353, %356
  %404 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)***
  %405 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)**, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)*** %404, align 8
  %406 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)** %405, i64 59
  %407 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)** %406, align 8
  %408 = call %"class.WTF::StringImpl"* %407(%"class.blink::AXNodeObject"* %0, %"class.blink::HeapHashSet.3867"* dereferenceable(24) %3, i1 zeroext false) #15
  %409 = ptrtoint %"class.WTF::StringImpl"* %408 to i64
  br i1 %187, label %423, label %410

410:                                              ; preds = %403
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load atomic i32, i32* %411 monotonic, align 4
  %413 = and i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  br i1 %414, label %417, label %419

417:                                              ; preds = %410
  %418 = add i32 %416, -1
  store i32 %418, i32* %415, align 4
  br label %419

419:                                              ; preds = %417, %410
  %420 = phi i32 [ %418, %417 ], [ %416, %410 ]
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %423

422:                                              ; preds = %419
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #15
  br label %423

423:                                              ; preds = %403, %419, %422, %352, %349, %338, %402
  %424 = phi i64 [ %372, %402 ], [ %339, %338 ], [ %339, %349 ], [ %339, %352 ], [ %409, %422 ], [ %409, %419 ], [ %409, %403 ]
  %425 = inttoptr i64 %424 to %"class.WTF::StringImpl"*
  %426 = icmp eq i64 %424, 0
  br i1 %426, label %473, label %427

427:                                              ; preds = %423
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %425, i64 0, i32 1
  %429 = load i32, i32* %428, align 4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %473, label %431

431:                                              ; preds = %427
  br i1 %167, label %432, label %711

432:                                              ; preds = %431
  store i8 1, i8* %8, align 1
  %433 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0
  %434 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %435 = load i32, i32* %434, align 4
  %436 = add i32 %435, -1
  %437 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %433, i32 %436) #15
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %425, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load atomic i32, i32* %438 monotonic, align 4
  %440 = and i32 %439, 2
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %454

442:                                              ; preds = %432
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %425, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  %445 = zext i32 %444 to i33
  %446 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %445, i33 1) #15
  %447 = extractvalue { i33, i1 } %446, 1
  %448 = extractvalue { i33, i1 } %446, 0
  %449 = icmp slt i33 %448, 0
  %450 = or i1 %447, %449
  br i1 %450, label %451, label %452, !prof !3

451:                                              ; preds = %442
  call void @llvm.trap() #15
  unreachable

452:                                              ; preds = %442
  %453 = trunc i33 %448 to i32
  store i32 %453, i32* %443, align 4
  br label %454

454:                                              ; preds = %452, %432
  %455 = bitcast %"class.blink::NameSource"* %437 to i64*
  %456 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %437, i64 0, i32 0, i32 0, i32 0
  %457 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %456, align 8
  store i64 %424, i64* %455, align 8
  %458 = icmp eq %"class.WTF::StringImpl"* %457, null
  br i1 %458, label %472, label %459

459:                                              ; preds = %454
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = load atomic i32, i32* %460 monotonic, align 4
  %462 = and i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 0
  %465 = load i32, i32* %464, align 4
  br i1 %463, label %466, label %468

466:                                              ; preds = %459
  %467 = add i32 %465, -1
  store i32 %467, i32* %464, align 4
  br label %468

468:                                              ; preds = %466, %459
  %469 = phi i32 [ %467, %466 ], [ %465, %459 ]
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %472

471:                                              ; preds = %468
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %457) #15
  br label %472

472:                                              ; preds = %471, %468, %454
  store i32 8, i32* %4, align 4
  br label %477

473:                                              ; preds = %423, %427, %213, %200
  %474 = phi i64 [ %171, %213 ], [ %424, %427 ], [ %171, %200 ], [ 0, %423 ]
  store i32 8, i32* %4, align 4
  br i1 %167, label %477, label %475

475:                                              ; preds = %473
  %476 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  br label %547

477:                                              ; preds = %472, %473
  %478 = phi i64 [ %424, %472 ], [ %474, %473 ]
  %479 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0
  %480 = bitcast %"class.blink::NameSource"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %480) #15
  %481 = load i8, i8* %8, align 1, !range !2
  %482 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE to i64*), align 8
  %483 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %483, align 8
  %484 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 1
  store i8 %481, i8* %484, align 8
  %485 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 2
  store i8 0, i8* %485, align 1
  %486 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 3
  store i32 1, i32* %486, align 4
  %487 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 4
  %488 = bitcast %"class.blink::QualifiedName"** %487 to i64*
  store i64 %482, i64* %488, align 8
  %489 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %489, align 8
  %490 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 6
  store i32 -1, i32* %490, align 8
  %491 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 7
  %492 = bitcast %"class.blink::HeapVector.3879"* %491 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %492, i8 0, i64 16, i1 false) #15
  %493 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %494 = load i32, i32* %493, align 4
  %495 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %496 = load i32, i32* %495, align 8
  %497 = icmp eq i32 %494, %496
  %498 = inttoptr i64 %482 to %"class.blink::QualifiedName"*
  br i1 %497, label %508, label %499, !prof !3

499:                                              ; preds = %477
  %500 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %501 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %500, align 8
  %502 = zext i32 %494 to i64
  %503 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %501, i64 %502
  %504 = bitcast %"class.blink::NameSource"* %503 to i8*
  %505 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %504, %"class.blink::NameSource"* nonnull dereferenceable(56) %14) #15
  %506 = load i32, i32* %493, align 4
  %507 = add i32 %506, 1
  store i32 %507, i32* %493, align 4
  br label %509

508:                                              ; preds = %477
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %479, %"class.blink::NameSource"* nonnull dereferenceable(56) %14) #15
  br label %509

509:                                              ; preds = %499, %508
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %489, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %510, null
  br i1 %511, label %525, label %512

512:                                              ; preds = %509
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %514 = load atomic i32, i32* %513 monotonic, align 4
  %515 = and i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 0
  %518 = load i32, i32* %517, align 4
  br i1 %516, label %519, label %521

519:                                              ; preds = %512
  %520 = add i32 %518, -1
  store i32 %520, i32* %517, align 4
  br label %521

521:                                              ; preds = %519, %512
  %522 = phi i32 [ %520, %519 ], [ %518, %512 ]
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %524, label %525

524:                                              ; preds = %521
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %510) #15
  br label %525

525:                                              ; preds = %524, %521, %509
  %526 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %483, align 8
  %527 = icmp eq %"class.WTF::StringImpl"* %526, null
  br i1 %527, label %541, label %528

528:                                              ; preds = %525
  %529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %526, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = load atomic i32, i32* %529 monotonic, align 4
  %531 = and i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %526, i64 0, i32 0
  %534 = load i32, i32* %533, align 4
  br i1 %532, label %535, label %537

535:                                              ; preds = %528
  %536 = add i32 %534, -1
  store i32 %536, i32* %533, align 4
  br label %537

537:                                              ; preds = %535, %528
  %538 = phi i32 [ %536, %535 ], [ %534, %528 ]
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %540, label %541

540:                                              ; preds = %537
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %526) #15
  br label %541

541:                                              ; preds = %525, %537, %540
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %480) #15
  %542 = load i32, i32* %4, align 4
  %543 = load i32, i32* %493, align 4
  %544 = add i32 %543, -1
  %545 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %479, i32 %544) #15
  %546 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %545, i64 0, i32 3
  store i32 %542, i32* %546, align 4
  br label %547

547:                                              ; preds = %475, %541
  %548 = phi %"class.blink::QualifiedName"* [ %498, %541 ], [ %476, %475 ]
  %549 = phi i64 [ %478, %541 ], [ %474, %475 ]
  %550 = inttoptr i64 %549 to %"class.WTF::StringImpl"*
  %551 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)***
  %552 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*** %551, align 8
  %553 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %552, i64 131
  %554 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %553, align 8
  %555 = call dereferenceable(8) %"class.WTF::AtomicString"* %554(%"class.blink::AXNodeObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %548) #15
  %556 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %555, i64 0, i32 0, i32 0, i32 0
  %557 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %556, align 8
  %558 = icmp eq %"class.WTF::StringImpl"* %557, null
  br i1 %558, label %637, label %559

559:                                              ; preds = %547
  %560 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 1
  %561 = load i32, i32* %560, align 4
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %637, label %563

563:                                              ; preds = %559
  %564 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %565 = load atomic i32, i32* %564 monotonic, align 4
  %566 = and i32 %565, 2
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %580

568:                                              ; preds = %563
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  %571 = zext i32 %570 to i33
  %572 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %571, i33 1) #15
  %573 = extractvalue { i33, i1 } %572, 1
  %574 = extractvalue { i33, i1 } %572, 0
  %575 = icmp slt i33 %574, 0
  %576 = or i1 %573, %575
  br i1 %576, label %577, label %578, !prof !3

577:                                              ; preds = %568
  call void @llvm.trap() #15
  unreachable

578:                                              ; preds = %568
  %579 = trunc i33 %574 to i32
  store i32 %579, i32* %569, align 4
  br label %580

580:                                              ; preds = %578, %563
  %581 = ptrtoint %"class.WTF::StringImpl"* %557 to i64
  %582 = icmp eq i64 %549, 0
  br i1 %582, label %596, label %583

583:                                              ; preds = %580
  %584 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %550, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %585 = load atomic i32, i32* %584 monotonic, align 4
  %586 = and i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %550, i64 0, i32 0
  %589 = load i32, i32* %588, align 4
  br i1 %587, label %590, label %592

590:                                              ; preds = %583
  %591 = add i32 %589, -1
  store i32 %591, i32* %588, align 4
  br label %592

592:                                              ; preds = %590, %583
  %593 = phi i32 [ %591, %590 ], [ %589, %583 ]
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %596

595:                                              ; preds = %592
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %550) #15
  br label %596

596:                                              ; preds = %580, %592, %595
  store i32 8, i32* %4, align 4
  br i1 %167, label %597, label %711

597:                                              ; preds = %596
  store i8 1, i8* %8, align 1
  %598 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0
  %599 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %600 = load i32, i32* %599, align 4
  %601 = add i32 %600, -1
  %602 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %598, i32 %601) #15
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %604 = load atomic i32, i32* %603 monotonic, align 4
  %605 = and i32 %604, 2
  %606 = icmp eq i32 %605, 0
  br i1 %606, label %607, label %619

607:                                              ; preds = %597
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %609 = load i32, i32* %608, align 4
  %610 = zext i32 %609 to i33
  %611 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %610, i33 1) #15
  %612 = extractvalue { i33, i1 } %611, 1
  %613 = extractvalue { i33, i1 } %611, 0
  %614 = icmp slt i33 %613, 0
  %615 = or i1 %612, %614
  br i1 %615, label %616, label %617, !prof !3

616:                                              ; preds = %607
  call void @llvm.trap() #15
  unreachable

617:                                              ; preds = %607
  %618 = trunc i33 %613 to i32
  store i32 %618, i32* %608, align 4
  br label %619

619:                                              ; preds = %617, %597
  %620 = bitcast %"class.blink::NameSource"* %602 to i64*
  %621 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %602, i64 0, i32 0, i32 0, i32 0
  %622 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %621, align 8
  store i64 %581, i64* %620, align 8
  %623 = icmp eq %"class.WTF::StringImpl"* %622, null
  br i1 %623, label %637, label %624

624:                                              ; preds = %619
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %622, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %626 = load atomic i32, i32* %625 monotonic, align 4
  %627 = and i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %622, i64 0, i32 0
  %630 = load i32, i32* %629, align 4
  br i1 %628, label %631, label %633

631:                                              ; preds = %624
  %632 = add i32 %630, -1
  store i32 %632, i32* %629, align 4
  br label %633

633:                                              ; preds = %631, %624
  %634 = phi i32 [ %632, %631 ], [ %630, %624 ]
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %636, label %637

636:                                              ; preds = %633
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %622) #15
  br label %637

637:                                              ; preds = %547, %636, %633, %619, %559
  %638 = phi %"class.WTF::StringImpl"* [ %550, %559 ], [ %557, %619 ], [ %557, %633 ], [ %557, %636 ], [ %550, %547 ]
  store i32 1, i32* %4, align 4
  %639 = xor i1 %167, true
  %640 = load i8, i8* %8, align 1
  %641 = icmp eq i8 %640, 0
  %642 = or i1 %641, %639
  br i1 %642, label %695, label %643

643:                                              ; preds = %637
  %644 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %645 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %644, align 8
  %646 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %647 = load i32, i32* %646, align 4
  %648 = zext i32 %647 to i64
  %649 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %645, i64 %648
  %650 = icmp eq i32 %647, 0
  br i1 %650, label %695, label %651

651:                                              ; preds = %643, %692
  %652 = phi %"class.blink::NameSource"* [ %693, %692 ], [ %645, %643 ]
  %653 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %652, i64 0, i32 0, i32 0, i32 0
  %654 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %653, align 8
  %655 = icmp eq %"class.WTF::StringImpl"* %654, null
  br i1 %655, label %692, label %656

656:                                              ; preds = %651
  %657 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %652, i64 0, i32 1
  %658 = load i8, i8* %657, align 8, !range !2
  %659 = icmp eq i8 %658, 0
  br i1 %659, label %660, label %692

660:                                              ; preds = %656
  %661 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %652, i64 0, i32 0, i32 0, i32 0
  %662 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %652, i64 0, i32 3
  %663 = load i32, i32* %662, align 4
  store i32 %663, i32* %4, align 4
  %664 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %652, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %665 = load i32, i32* %664, align 4
  %666 = icmp eq i32 %665, 0
  br i1 %666, label %671, label %667

667:                                              ; preds = %660
  %668 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %652, i64 0, i32 7, i32 0
  %669 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %5, i64 0, i32 0
  %670 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %669, %"class.WTF::Vector.3882"* dereferenceable(16) %668) #15
  br label %671

671:                                              ; preds = %667, %660
  %672 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %661, align 8
  %673 = ptrtoint %"class.WTF::StringImpl"* %672 to i64
  %674 = icmp eq %"class.WTF::StringImpl"* %672, null
  br i1 %674, label %695, label %675

675:                                              ; preds = %671
  %676 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %677 = load atomic i32, i32* %676 monotonic, align 4
  %678 = and i32 %677, 2
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %680, label %695

680:                                              ; preds = %675
  %681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 0
  %682 = load i32, i32* %681, align 4
  %683 = zext i32 %682 to i33
  %684 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %683, i33 1) #15
  %685 = extractvalue { i33, i1 } %684, 1
  %686 = extractvalue { i33, i1 } %684, 0
  %687 = icmp slt i33 %686, 0
  %688 = or i1 %685, %687
  br i1 %688, label %689, label %690, !prof !3

689:                                              ; preds = %680
  call void @llvm.trap() #15
  unreachable

690:                                              ; preds = %680
  %691 = trunc i33 %686 to i32
  store i32 %691, i32* %681, align 4
  br label %695

692:                                              ; preds = %656, %651
  %693 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %652, i64 1
  %694 = icmp eq %"class.blink::NameSource"* %693, %649
  br i1 %694, label %695, label %651

695:                                              ; preds = %692, %643, %637, %690, %675, %671
  %696 = phi i64 [ %673, %671 ], [ %673, %675 ], [ %673, %690 ], [ 0, %637 ], [ 0, %643 ], [ 0, %692 ]
  %697 = icmp eq %"class.WTF::StringImpl"* %638, null
  br i1 %697, label %711, label %698

698:                                              ; preds = %695
  %699 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %638, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %700 = load atomic i32, i32* %699 monotonic, align 4
  %701 = and i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %638, i64 0, i32 0
  %704 = load i32, i32* %703, align 4
  br i1 %702, label %705, label %707

705:                                              ; preds = %698
  %706 = add i32 %704, -1
  store i32 %706, i32* %703, align 4
  br label %707

707:                                              ; preds = %705, %698
  %708 = phi i32 [ %706, %705 ], [ %704, %698 ]
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %710, label %711

710:                                              ; preds = %707
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %638) #15
  br label %711

711:                                              ; preds = %158, %87, %596, %431, %195, %162, %710, %707, %695, %21
  %712 = phi i64 [ 0, %21 ], [ %696, %695 ], [ %696, %707 ], [ %696, %710 ], [ %581, %596 ], [ %424, %431 ], [ %171, %195 ], [ %164, %162 ], [ 0, %87 ], [ %160, %158 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #15
  %713 = inttoptr i64 %712 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %713
}

declare { i64, i64 } @_ZNK5blink8AXObject27GetBoundsInFrameCoordinatesEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare i64 @_ZNK5blink10LayoutView13GetLayoutSizeENS_23IncludeScrollbarsInRectE(%"class.blink::LayoutView"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink10LayoutRect10IntersectsERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject26GetValueContributionToNameEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = alloca float, align 4
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.blink::HeapVector.2999", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK5blink8AXObject20CanSetValueAttributeEv(%"class.blink::AXObject"* %7) #15
  br i1 %8, label %9, label %59

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink8AXObject11IsTextFieldEv(%"class.blink::AXObject"* %7) #15
  br i1 %10, label %11, label %18

11:                                               ; preds = %9
  %12 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)***
  %13 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)** %13, i64 99
  %15 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)** %14, align 8
  %16 = tail call %"class.WTF::StringImpl"* %15(%"class.blink::AXNodeObject"* %0) #15
  %17 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  br label %168

18:                                               ; preds = %9
  %19 = tail call zeroext i1 @_ZNK5blink8AXObject21IsRangeValueSupportedEv(%"class.blink::AXObject"* %7) #15
  br i1 %19, label %20, label %59

20:                                               ; preds = %18
  %21 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %22 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %22, i64 5
  %24 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %23, align 8
  %25 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %24(%"class.blink::AXObject"* %7, i32 16) #15
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %47, label %29

29:                                               ; preds = %20
  %30 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %168

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #15
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  tail call void @llvm.trap() #15
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %168

47:                                               ; preds = %20
  %48 = bitcast float* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #15
  store float 0xFFFFFFFFE0000000, float* %2, align 4
  %49 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*, float*)***
  %50 = load i1 (%"class.blink::AXNodeObject"*, float*)**, i1 (%"class.blink::AXNodeObject"*, float*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*, float*)*, i1 (%"class.blink::AXNodeObject"*, float*)** %50, i64 94
  %52 = load i1 (%"class.blink::AXNodeObject"*, float*)*, i1 (%"class.blink::AXNodeObject"*, float*)** %51, align 8
  %53 = call zeroext i1 %52(%"class.blink::AXNodeObject"* %0, float* nonnull %2) #15
  br i1 %53, label %55, label %54

54:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #15
  br label %59

55:                                               ; preds = %47
  %56 = load float, float* %2, align 4
  %57 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %56) #15
  %58 = ptrtoint %"class.WTF::StringImpl"* %57 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #15
  br label %168

59:                                               ; preds = %54, %18, %1
  %60 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %7) #15
  switch i32 %60, label %168 [
    i32 21, label %84
    i32 22, label %84
    i32 113, label %84
    i32 138, label %61
  ]

61:                                               ; preds = %59
  %62 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %7) #15
  br i1 %62, label %168, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 48
  %69 = icmp ne i32 %68, 0
  %70 = icmp eq %"class.blink::Node"* %65, null
  %71 = or i1 %70, %69
  br i1 %71, label %168, label %72

72:                                               ; preds = %63
  %73 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %74 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 1, i32 2
  %77 = bitcast %"class.blink::Member.318"* %76 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %80, %82
  br i1 %83, label %84, label %168

84:                                               ; preds = %59, %59, %59, %72
  %85 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 48, i1 false)
  %86 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %88 = bitcast %union.anon.3242* %87 to i8*
  store i8 0, i8* %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %90, align 4
  %91 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %91, align 1
  %92 = bitcast %"class.blink::HeapVector.2999"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #15
  %93 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 16, i1 false) #15
  %95 = bitcast %"class.blink::AXNodeObject"* %0 to void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"*)***
  %96 = load void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"*)**, void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"*)*, void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"*)** %96, i64 121
  %98 = load void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"*)*, void (%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"*)** %97, align 8
  call void %98(%"class.blink::AXNodeObject"* %0, %"class.blink::HeapVector.2999"* nonnull dereferenceable(16) %4) #15
  %99 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %93, align 8
  %100 = load i32, i32* %94, align 4
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %99, i64 %101
  %103 = icmp eq i32 %100, 0
  br i1 %103, label %115, label %104

104:                                              ; preds = %84
  %105 = bitcast %"class.WTF::StringView"* %5 to i8*
  %106 = bitcast %"class.WTF::StringView"* %5 to i64*
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %109 = bitcast %"class.WTF::StringView"* %6 to i8*
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %112 = bitcast i8** %111 to %"class.WTF::StringImpl"**
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %114 = bitcast %"class.WTF::StringView"* %6 to i64*
  br label %134

115:                                              ; preds = %163, %84
  %116 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #15
  %117 = ptrtoint %"class.WTF::StringImpl"* %116 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #15
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #15
  br label %133

133:                                              ; preds = %115, %129, %132
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #15
  br label %168

134:                                              ; preds = %166, %104
  %135 = phi i32 [ 0, %104 ], [ %167, %166 ]
  %136 = phi %"class.blink::Member.2997"* [ %99, %104 ], [ %164, %166 ]
  %137 = icmp eq i32 %135, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #15
  %139 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %139, i64* %106, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i8** %107, align 8
  store i32 1, i32* %108, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #15
  br label %140

140:                                              ; preds = %134, %138
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #15
  %141 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %136, i64 0, i32 0, i32 0
  %142 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %141, align 8
  %143 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject12ComputedNameEv(%"class.blink::AXObject"* %142) #15
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %145, label %147

145:                                              ; preds = %140
  store i8* null, i8** %111, align 8
  %146 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %146, i64* %114, align 8
  store i32 0, i32* %113, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %163

147:                                              ; preds = %140
  store %"class.WTF::StringImpl"* %143, %"class.WTF::StringImpl"** %110, align 8
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 1
  store %"class.WTF::StringImpl"* %150, %"class.WTF::StringImpl"** %112, align 8
  store i32 %149, i32* %113, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %147
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %147
  %160 = phi i32 [ %158, %157 ], [ %156, %147 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #15
  br label %163

163:                                              ; preds = %145, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #15
  %164 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %136, i64 1
  %165 = icmp eq %"class.blink::Member.2997"* %164, %102
  br i1 %165, label %115, label %166

166:                                              ; preds = %163
  %167 = load i32, i32* %89, align 8
  br label %134

168:                                              ; preds = %59, %61, %63, %45, %29, %72, %55, %133, %11
  %169 = phi i64 [ %17, %11 ], [ %117, %133 ], [ %58, %55 ], [ 0, %72 ], [ %30, %29 ], [ %30, %45 ], [ 0, %63 ], [ 0, %61 ], [ 0, %59 ]
  %170 = inttoptr i64 %169 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %170
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject19AriaTextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEEPb(%"class.blink::AXObject"*, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.3867"* dereferenceable(24), i32* dereferenceable(4), %"class.blink::HeapVector.3879"*, %"class.blink::HeapVector.3890"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject21NativeTextAlternativeERNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSH_INS_10NameSourceELj0EEEPb(%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"* dereferenceable(24), i32* dereferenceable(4), %"class.blink::HeapVector.3879"*, %"class.blink::HeapVector.3890"*, i8*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::HeapVector.3879", align 8
  %9 = alloca %"class.blink::NameSource", align 8
  %10 = alloca %"class.blink::HeapVector.365", align 8
  %11 = alloca %"class.blink::Element"*, align 8
  %12 = alloca %"class.blink::NameSource", align 8
  %13 = alloca %"class.blink::NameSource", align 8
  %14 = alloca %"class.blink::NameSource", align 8
  %15 = alloca %"class.blink::NameSource", align 8
  %16 = alloca %"class.blink::NameSource", align 8
  %17 = alloca %"class.blink::NameSource", align 8
  %18 = alloca %"class.blink::NameSource", align 8
  %19 = alloca %"class.WTF::StringAppend", align 8
  %20 = alloca %"class.WTF::StringAppend.3878", align 8
  %21 = alloca %"class.blink::NameSource", align 8
  %22 = alloca %"class.blink::NameSource", align 8
  %23 = alloca %"class.blink::NameSource", align 8
  %24 = alloca %"class.blink::AXObject"*, align 8
  %25 = alloca %"class.blink::NameSourceRelatedObject"*, align 8
  %26 = alloca %"class.blink::NameSource", align 8
  %27 = alloca %"class.blink::NameSource", align 8
  %28 = alloca %"class.blink::AXObject"*, align 8
  %29 = alloca %"class.blink::NameSourceRelatedObject"*, align 8
  %30 = alloca %"class.blink::NameSource", align 8
  %31 = alloca %"class.blink::NameSource", align 8
  %32 = alloca %"class.blink::HasTagName", align 8
  %33 = alloca %"class.blink::AXObject"*, align 8
  %34 = alloca %"class.blink::NameSourceRelatedObject"*, align 8
  %35 = alloca %"class.blink::NameSource", align 8
  %36 = alloca %"class.blink::AXObject"*, align 8
  %37 = alloca %"class.blink::NameSourceRelatedObject"*, align 8
  %38 = alloca %"class.blink::NameSource", align 8
  %39 = alloca %"class.blink::NameSource", align 8
  %40 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %41, label %4613, label %42

42:                                               ; preds = %6
  %43 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %45 = icmp eq %"class.blink::Node"* %44, null
  br i1 %45, label %4613, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  %49 = bitcast %"class.blink::HeapVector.3879"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #15
  %50 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 16, i1 false) #15
  %53 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %53, label %467, label %54

54:                                               ; preds = %46
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %467, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, 48
  %61 = icmp eq i32 %60, 0
  %62 = bitcast %"class.blink::Node"* %55 to %"class.blink::HTMLElement"*
  br i1 %61, label %63, label %467

63:                                               ; preds = %57
  %64 = bitcast %"class.blink::Node"* %55 to i1 (%"class.blink::HTMLElement"*)***
  %65 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %65, i64 166
  %67 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::HTMLElement"* nonnull %62) #15
  br i1 %68, label %69, label %467

69:                                               ; preds = %63
  store i32 7, i32* %2, align 4
  %70 = icmp ne %"class.blink::HeapVector.3890"* %4, null
  br i1 %70, label %71, label %143

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %73 = bitcast %"class.blink::NameSource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %73) #15
  %74 = load i8, i8* %5, align 1, !range !2
  %75 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %75, align 8
  %76 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 1
  store i8 %74, i8* %76, align 8
  %77 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 2
  store i8 0, i8* %77, align 1
  %78 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 3
  store i32 1, i32* %78, align 4
  %79 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 4
  %80 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %81 = bitcast %"class.blink::QualifiedName"** %79 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %83 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 6
  store i32 -1, i32* %83, align 8
  %84 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %9, i64 0, i32 7
  %85 = bitcast %"class.blink::HeapVector.3879"* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 16, i1 false) #15
  %86 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %87, %89
  br i1 %90, label %100, label %91, !prof !3

91:                                               ; preds = %71
  %92 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %92, align 8
  %94 = zext i32 %87 to i64
  %95 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %93, i64 %94
  %96 = bitcast %"class.blink::NameSource"* %95 to i8*
  %97 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %96, %"class.blink::NameSource"* nonnull dereferenceable(56) %9) #15
  %98 = load i32, i32* %86, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %86, align 4
  br label %101

100:                                              ; preds = %71
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %72, %"class.blink::NameSource"* nonnull dereferenceable(56) %9) #15
  br label %101

101:                                              ; preds = %91, %100
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #15
  br label %117

117:                                              ; preds = %116, %113, %101
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #15
  br label %133

133:                                              ; preds = %117, %129, %132
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %73) #15
  %134 = load i32, i32* %2, align 4
  %135 = load i32, i32* %86, align 4
  %136 = add i32 %135, -1
  %137 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %72, i32 %136) #15
  %138 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %137, i64 0, i32 3
  store i32 %134, i32* %138, align 4
  %139 = load i32, i32* %86, align 4
  %140 = add i32 %139, -1
  %141 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %72, i32 %140) #15
  %142 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %141, i64 0, i32 6
  store i32 1, i32* %142, align 8
  br label %143

143:                                              ; preds = %133, %69
  %144 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %145 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %144, align 8
  %146 = call zeroext i1 @_ZN5blink17AXObjectCacheImpl16MayHaveHTMLLabelERKNS_11HTMLElementE(%"class.blink::AXObjectCacheImpl"* %145, %"class.blink::HTMLElement"* nonnull dereferenceable(104) %62) #15
  br i1 %146, label %147, label %467

147:                                              ; preds = %143
  %148 = call %"class.blink::LabelsNodeList"* @_ZN5blink11HTMLElement6labelsEv(%"class.blink::HTMLElement"* nonnull %62) #15
  %149 = icmp eq %"class.blink::LabelsNodeList"* %148, null
  br i1 %149, label %467, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.blink::LabelsNodeList", %"class.blink::LabelsNodeList"* %148, i64 0, i32 0
  %152 = call i32 @_ZNK5blink12LiveNodeList6lengthEv(%"class.blink::LiveNodeList"* %151) #15
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %467, label %154

154:                                              ; preds = %150
  %155 = bitcast %"class.blink::HeapVector.365"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #15
  %156 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %158 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 16, i1 false) #15
  %159 = call i32 @_ZNK5blink12LiveNodeList6lengthEv(%"class.blink::LiveNodeList"* %151) #15
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %174, label %161

161:                                              ; preds = %154
  %162 = bitcast %"class.blink::Element"** %11 to i8*
  %163 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kForAttrE, align 8
  %164 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %163, i64 0, i32 0, i32 0
  %165 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %166 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %55, i64 1, i32 3
  %167 = bitcast %"class.blink::Member.320"* %166 to %"class.blink::ElementData"**
  %168 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %169 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %168, i64 0, i32 0, i32 0
  %170 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %171 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %172 = bitcast %"class.blink::Element"** %11 to i64*
  %173 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %10, i64 0, i32 0
  br label %198

174:                                              ; preds = %403, %154
  %175 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject16TextFromElementsEbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERNS_10HeapVectorINS2_INS_7ElementEEELj0EEEPNSC_INS2_INS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXObject"* %40, i1 zeroext false, %"class.blink::HeapHashSet.3867"* dereferenceable(24) %1, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %10, %"class.blink::HeapVector.3879"* %3) #15
  %176 = ptrtoint %"class.WTF::StringImpl"* %175 to i64
  %177 = bitcast %"class.WTF::String"* %7 to i64*
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %176, i64* %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %195, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #15
  br label %193

193:                                              ; preds = %189, %192
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  br label %195

195:                                              ; preds = %193, %174
  %196 = phi %"class.WTF::StringImpl"* [ %194, %193 ], [ %175, %174 ]
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %455, label %407

198:                                              ; preds = %161, %403
  %199 = phi i32 [ 0, %161 ], [ %404, %403 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #15
  store %"class.blink::Element"* inttoptr (i64 -6148914691236517206 to %"class.blink::Element"*), %"class.blink::Element"** %11, align 8
  %200 = call %"class.blink::Element"* @_ZNK5blink12LiveNodeList4itemEj(%"class.blink::LiveNodeList"* %151, i32 %199) #15
  store %"class.blink::Element"* %200, %"class.blink::Element"** %11, align 8
  br i1 %70, label %201, label %384

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %200, i64 0, i32 3, i32 0, i32 0
  %203 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %202, align 8
  %204 = icmp eq %"class.blink::ElementData"* %203, null
  br i1 %204, label %254, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %203, i64 0, i32 0, i32 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = bitcast %"class.blink::ElementData"* %203 to %"class.blink::UniqueElementData"*
  %212 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %203, i64 1, i32 1
  %213 = bitcast %"class.blink::Member.354"* %212 to %"class.blink::Attribute"**
  %214 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %211, i64 0, i32 2, i32 0, i32 0, i32 2
  %216 = load i32, i32* %215, align 4
  br label %222

217:                                              ; preds = %205
  %218 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %203, i64 1
  %219 = bitcast %"class.blink::ElementData"* %218 to %"class.blink::Attribute"*
  %220 = lshr i32 %207, 1
  %221 = and i32 %220, 268435455
  br label %222

222:                                              ; preds = %217, %210
  %223 = phi %"class.blink::Attribute"* [ %219, %217 ], [ %214, %210 ]
  %224 = phi i32 [ %221, %217 ], [ %216, %210 ]
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %223, i64 %225
  %227 = icmp eq i32 %224, 0
  br i1 %227, label %254, label %228

228:                                              ; preds = %222
  %229 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %164, align 8
  %230 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %229, i64 0, i32 3, i32 0, i32 0, i32 0
  %231 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %229, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %232

232:                                              ; preds = %247, %228
  %233 = phi %"class.blink::Attribute"* [ %223, %228 ], [ %248, %247 ]
  %234 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %233, i64 0, i32 0, i32 0, i32 0
  %235 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %234, align 8
  %236 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %235, %229
  br i1 %236, label %250, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %235, i64 0, i32 3, i32 0, i32 0, i32 0
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %239, %240
  br i1 %241, label %242, label %247

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %235, i64 0, i32 4, i32 0, i32 0, i32 0
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %244, %245
  br i1 %246, label %250, label %247

247:                                              ; preds = %242, %237
  %248 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %233, i64 1
  %249 = icmp eq %"class.blink::Attribute"* %248, %226
  br i1 %249, label %254, label %232

250:                                              ; preds = %242, %232
  %251 = icmp eq %"class.blink::Attribute"* %233, null
  %252 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %233, i64 0, i32 1
  %253 = select i1 %251, %"class.WTF::AtomicString"* %165, %"class.WTF::AtomicString"* %252
  br label %254

254:                                              ; preds = %247, %250, %201, %222
  %255 = phi %"class.WTF::AtomicString"* [ %165, %222 ], [ %165, %201 ], [ %253, %250 ], [ %165, %247 ]
  %256 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %255, i64 0, i32 0, i32 0, i32 0
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %377, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 1
  %261 = load i32, i32* %260, align 4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %377, label %263

263:                                              ; preds = %259
  br i1 %204, label %313, label %264

264:                                              ; preds = %263
  %265 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %203, i64 0, i32 0, i32 0, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %276, label %269

269:                                              ; preds = %264
  %270 = bitcast %"class.blink::ElementData"* %203 to %"class.blink::UniqueElementData"*
  %271 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %203, i64 1, i32 1
  %272 = bitcast %"class.blink::Member.354"* %271 to %"class.blink::Attribute"**
  %273 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %272, align 8
  %274 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %270, i64 0, i32 2, i32 0, i32 0, i32 2
  %275 = load i32, i32* %274, align 4
  br label %281

276:                                              ; preds = %264
  %277 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %203, i64 1
  %278 = bitcast %"class.blink::ElementData"* %277 to %"class.blink::Attribute"*
  %279 = lshr i32 %266, 1
  %280 = and i32 %279, 268435455
  br label %281

281:                                              ; preds = %276, %269
  %282 = phi %"class.blink::Attribute"* [ %278, %276 ], [ %273, %269 ]
  %283 = phi i32 [ %280, %276 ], [ %275, %269 ]
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %282, i64 %284
  %286 = icmp eq i32 %283, 0
  br i1 %286, label %313, label %287

287:                                              ; preds = %281
  %288 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %164, align 8
  %289 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %288, i64 0, i32 3, i32 0, i32 0, i32 0
  %290 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %288, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %291

291:                                              ; preds = %306, %287
  %292 = phi %"class.blink::Attribute"* [ %282, %287 ], [ %307, %306 ]
  %293 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %292, i64 0, i32 0, i32 0, i32 0
  %294 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %293, align 8
  %295 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %294, %288
  br i1 %295, label %309, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %294, i64 0, i32 3, i32 0, i32 0, i32 0
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %297, align 8
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %298, %299
  br i1 %300, label %301, label %306

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %294, i64 0, i32 4, i32 0, i32 0, i32 0
  %303 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %290, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %303, %304
  br i1 %305, label %309, label %306

306:                                              ; preds = %301, %296
  %307 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %292, i64 1
  %308 = icmp eq %"class.blink::Attribute"* %307, %285
  br i1 %308, label %313, label %291

309:                                              ; preds = %301, %291
  %310 = icmp eq %"class.blink::Attribute"* %292, null
  %311 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %292, i64 0, i32 1
  %312 = select i1 %310, %"class.WTF::AtomicString"* %165, %"class.WTF::AtomicString"* %311
  br label %313

313:                                              ; preds = %306, %309, %263, %281
  %314 = phi %"class.WTF::AtomicString"* [ %165, %281 ], [ %165, %263 ], [ %312, %309 ], [ %165, %306 ]
  %315 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %167, align 8
  %316 = icmp eq %"class.blink::ElementData"* %315, null
  br i1 %316, label %370, label %317

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %315, i64 0, i32 3, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %370, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %315, i64 0, i32 0, i32 0, i32 0
  %323 = load i32, i32* %322, align 4
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %333, label %326

326:                                              ; preds = %321
  %327 = bitcast %"class.blink::ElementData"* %315 to %"class.blink::UniqueElementData"*
  %328 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %315, i64 1, i32 1
  %329 = bitcast %"class.blink::Member.354"* %328 to %"class.blink::Attribute"**
  %330 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %329, align 8
  %331 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %327, i64 0, i32 2, i32 0, i32 0, i32 2
  %332 = load i32, i32* %331, align 4
  br label %338

333:                                              ; preds = %321
  %334 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %315, i64 1
  %335 = bitcast %"class.blink::ElementData"* %334 to %"class.blink::Attribute"*
  %336 = lshr i32 %323, 1
  %337 = and i32 %336, 268435455
  br label %338

338:                                              ; preds = %333, %326
  %339 = phi %"class.blink::Attribute"* [ %335, %333 ], [ %330, %326 ]
  %340 = phi i32 [ %337, %333 ], [ %332, %326 ]
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %339, i64 %341
  %343 = icmp eq i32 %340, 0
  br i1 %343, label %370, label %344

344:                                              ; preds = %338
  %345 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %169, align 8
  %346 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %345, i64 0, i32 3, i32 0, i32 0, i32 0
  %347 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %345, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %348

348:                                              ; preds = %363, %344
  %349 = phi %"class.blink::Attribute"* [ %339, %344 ], [ %364, %363 ]
  %350 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %349, i64 0, i32 0, i32 0, i32 0
  %351 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %350, align 8
  %352 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %351, %345
  br i1 %352, label %366, label %353

353:                                              ; preds = %348
  %354 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %351, i64 0, i32 3, i32 0, i32 0, i32 0
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %354, align 8
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %346, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %355, %356
  br i1 %357, label %358, label %363

358:                                              ; preds = %353
  %359 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %351, i64 0, i32 4, i32 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  %361 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %347, align 8
  %362 = icmp eq %"class.WTF::StringImpl"* %360, %361
  br i1 %362, label %366, label %363

363:                                              ; preds = %358, %353
  %364 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %349, i64 1
  %365 = icmp eq %"class.blink::Attribute"* %364, %342
  br i1 %365, label %370, label %348

366:                                              ; preds = %358, %348
  %367 = icmp eq %"class.blink::Attribute"* %349, null
  %368 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %349, i64 0, i32 1
  %369 = select i1 %367, %"class.WTF::AtomicString"* %165, %"class.WTF::AtomicString"* %368
  br label %370

370:                                              ; preds = %363, %366, %313, %317, %338
  %371 = phi %"class.WTF::AtomicString"* [ %165, %338 ], [ %165, %317 ], [ %165, %313 ], [ %369, %366 ], [ %165, %363 ]
  %372 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %314, i64 0, i32 0, i32 0, i32 0
  %373 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %372, align 8
  %374 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %371, i64 0, i32 0, i32 0, i32 0
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %374, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %373, %375
  br i1 %376, label %378, label %377

377:                                              ; preds = %254, %370, %259
  br label %378

378:                                              ; preds = %370, %377
  %379 = phi i32 [ 3, %377 ], [ 2, %370 ]
  %380 = load i32, i32* %171, align 4
  %381 = add i32 %380, -1
  %382 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %170, i32 %381) #15
  %383 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %382, i64 0, i32 6
  store i32 %379, i32* %383, align 8
  br label %384

384:                                              ; preds = %378, %198
  %385 = load i32, i32* %158, align 4
  %386 = load i32, i32* %157, align 8
  %387 = icmp eq i32 %385, %386
  br i1 %387, label %402, label %388, !prof !3

388:                                              ; preds = %384
  %389 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %156, align 8
  %390 = zext i32 %385 to i64
  %391 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %389, i64 %390
  %392 = load i64, i64* %172, align 8
  %393 = bitcast %"class.blink::Member.343"* %391 to i64*
  store atomic i64 %392, i64* %393 monotonic, align 8
  %394 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %399, label %396

396:                                              ; preds = %388
  %397 = inttoptr i64 %392 to i8*
  %398 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %397) #15
  br label %399

399:                                              ; preds = %396, %388
  %400 = load i32, i32* %158, align 4
  %401 = add i32 %400, 1
  store i32 %401, i32* %158, align 4
  br label %403

402:                                              ; preds = %384
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.368"* nonnull %173, %"class.blink::Element"** nonnull dereferenceable(8) %11) #15
  br label %403

403:                                              ; preds = %399, %402
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #15
  %404 = add nuw i32 %199, 1
  %405 = call i32 @_ZNK5blink12LiveNodeList6lengthEv(%"class.blink::LiveNodeList"* %151) #15
  %406 = icmp ult i32 %404, %405
  br i1 %406, label %198, label %174

407:                                              ; preds = %195
  store i8 1, i8* %5, align 1
  br i1 %70, label %408, label %464

408:                                              ; preds = %407
  %409 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %410 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %411 = load i32, i32* %410, align 4
  %412 = add i32 %411, -1
  %413 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %409, i32 %412) #15
  %414 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %413, i64 0, i32 7, i32 0
  %415 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %3, i64 0, i32 0
  %416 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %414, %"class.WTF::Vector.3882"* dereferenceable(16) %415) #15
  %417 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %418 = icmp eq %"class.WTF::StringImpl"* %417, null
  br i1 %418, label %436, label %419

419:                                              ; preds = %408
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = load atomic i32, i32* %420 monotonic, align 4
  %422 = and i32 %421, 2
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %436

424:                                              ; preds = %419
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  %427 = zext i32 %426 to i33
  %428 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %427, i33 1) #15
  %429 = extractvalue { i33, i1 } %428, 1
  %430 = extractvalue { i33, i1 } %428, 0
  %431 = icmp slt i33 %430, 0
  %432 = or i1 %429, %431
  br i1 %432, label %433, label %434, !prof !3

433:                                              ; preds = %424
  call void @llvm.trap() #15
  unreachable

434:                                              ; preds = %424
  %435 = trunc i33 %430 to i32
  store i32 %435, i32* %425, align 4
  br label %436

436:                                              ; preds = %434, %419, %408
  %437 = ptrtoint %"class.WTF::StringImpl"* %417 to i64
  %438 = bitcast %"class.blink::NameSource"* %413 to i64*
  %439 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %413, i64 0, i32 0, i32 0, i32 0
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %439, align 8
  store i64 %437, i64* %438, align 8
  %441 = icmp eq %"class.WTF::StringImpl"* %440, null
  br i1 %441, label %463, label %442

442:                                              ; preds = %436
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = load atomic i32, i32* %443 monotonic, align 4
  %445 = and i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 0
  %448 = load i32, i32* %447, align 4
  br i1 %446, label %449, label %451

449:                                              ; preds = %442
  %450 = add i32 %448, -1
  store i32 %450, i32* %447, align 4
  br label %451

451:                                              ; preds = %449, %442
  %452 = phi i32 [ %450, %449 ], [ %448, %442 ]
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %463

454:                                              ; preds = %451
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %440) #15
  br label %463

455:                                              ; preds = %195
  br i1 %70, label %456, label %463

456:                                              ; preds = %455
  %457 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %458 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %459 = load i32, i32* %458, align 4
  %460 = add i32 %459, -1
  %461 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %457, i32 %460) #15
  %462 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %461, i64 0, i32 2
  store i8 1, i8* %462, align 1
  br label %463

463:                                              ; preds = %455, %456, %436, %451, %454
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #15
  br label %467

464:                                              ; preds = %407
  %465 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %7) #15
  %466 = ptrtoint %"class.WTF::StringImpl"* %465 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #15
  br label %4594

467:                                              ; preds = %143, %147, %150, %463, %46, %54, %57, %63
  %468 = phi i1 [ true, %63 ], [ false, %57 ], [ false, %54 ], [ false, %46 ], [ true, %463 ], [ true, %150 ], [ true, %147 ], [ true, %143 ]
  %469 = phi %"class.blink::HTMLElement"* [ %62, %63 ], [ null, %57 ], [ null, %54 ], [ null, %46 ], [ %62, %463 ], [ %62, %150 ], [ %62, %147 ], [ %62, %143 ]
  %470 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %470, label %1662, label %471

471:                                              ; preds = %467
  %472 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %473 = icmp eq %"class.blink::Node"* %472, null
  br i1 %473, label %1662, label %474

474:                                              ; preds = %471
  %475 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %472, i64 0, i32 1
  %476 = load i32, i32* %475, align 8
  %477 = and i32 %476, 48
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %479, label %1662

479:                                              ; preds = %474
  %480 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %481 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %480, i64 0, i32 0, i32 0, i32 0
  %482 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %481, align 8
  %483 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %472, i64 1, i32 2
  %484 = bitcast %"class.blink::Member.318"* %483 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %485 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %484, align 8
  %486 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %485, i64 0, i32 3, i32 0, i32 0, i32 0
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %486, align 8
  %488 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %482, i64 0, i32 3, i32 0, i32 0, i32 0
  %489 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %488, align 8
  %490 = icmp eq %"class.WTF::StringImpl"* %487, %489
  %491 = bitcast %"class.blink::Node"* %472 to %"class.blink::HTMLInputElement"*
  br i1 %490, label %492, label %1662

492:                                              ; preds = %479
  %493 = call zeroext i1 @_ZNK5blink16HTMLInputElement12IsTextButtonEv(%"class.blink::HTMLInputElement"* nonnull %491) #15
  br i1 %493, label %494, label %896

494:                                              ; preds = %492
  store i32 9, i32* %2, align 4
  %495 = icmp ne %"class.blink::HeapVector.3890"* %4, null
  br i1 %495, label %496, label %564

496:                                              ; preds = %494
  %497 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %498 = bitcast %"class.blink::NameSource"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %498) #15
  %499 = load i8, i8* %5, align 1, !range !2
  %500 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE to i64*), align 8
  %501 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %501, align 8
  %502 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 1
  store i8 %499, i8* %502, align 8
  %503 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 2
  store i8 0, i8* %503, align 1
  %504 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 3
  store i32 1, i32* %504, align 4
  %505 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 4
  %506 = bitcast %"class.blink::QualifiedName"** %505 to i64*
  store i64 %500, i64* %506, align 8
  %507 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %507, align 8
  %508 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 6
  store i32 -1, i32* %508, align 8
  %509 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %12, i64 0, i32 7
  %510 = bitcast %"class.blink::HeapVector.3879"* %509 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %510, i8 0, i64 16, i1 false) #15
  %511 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %512 = load i32, i32* %511, align 4
  %513 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %514 = load i32, i32* %513, align 8
  %515 = icmp eq i32 %512, %514
  br i1 %515, label %525, label %516, !prof !3

516:                                              ; preds = %496
  %517 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %518 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %517, align 8
  %519 = zext i32 %512 to i64
  %520 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %518, i64 %519
  %521 = bitcast %"class.blink::NameSource"* %520 to i8*
  %522 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %521, %"class.blink::NameSource"* nonnull dereferenceable(56) %12) #15
  %523 = load i32, i32* %511, align 4
  %524 = add i32 %523, 1
  store i32 %524, i32* %511, align 4
  br label %526

525:                                              ; preds = %496
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %497, %"class.blink::NameSource"* nonnull dereferenceable(56) %12) #15
  br label %526

526:                                              ; preds = %516, %525
  %527 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %507, align 8
  %528 = icmp eq %"class.WTF::StringImpl"* %527, null
  br i1 %528, label %542, label %529

529:                                              ; preds = %526
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %527, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load atomic i32, i32* %530 monotonic, align 4
  %532 = and i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %527, i64 0, i32 0
  %535 = load i32, i32* %534, align 4
  br i1 %533, label %536, label %538

536:                                              ; preds = %529
  %537 = add i32 %535, -1
  store i32 %537, i32* %534, align 4
  br label %538

538:                                              ; preds = %536, %529
  %539 = phi i32 [ %537, %536 ], [ %535, %529 ]
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %542

541:                                              ; preds = %538
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %527) #15
  br label %542

542:                                              ; preds = %541, %538, %526
  %543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8
  %544 = icmp eq %"class.WTF::StringImpl"* %543, null
  br i1 %544, label %558, label %545

545:                                              ; preds = %542
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = load atomic i32, i32* %546 monotonic, align 4
  %548 = and i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 0
  %551 = load i32, i32* %550, align 4
  br i1 %549, label %552, label %554

552:                                              ; preds = %545
  %553 = add i32 %551, -1
  store i32 %553, i32* %550, align 4
  br label %554

554:                                              ; preds = %552, %545
  %555 = phi i32 [ %553, %552 ], [ %551, %545 ]
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %558

557:                                              ; preds = %554
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %543) #15
  br label %558

558:                                              ; preds = %542, %554, %557
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %498) #15
  %559 = load i32, i32* %2, align 4
  %560 = load i32, i32* %511, align 4
  %561 = add i32 %560, -1
  %562 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %497, i32 %561) #15
  %563 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %562, i64 0, i32 3
  store i32 %559, i32* %563, align 4
  br label %564

564:                                              ; preds = %558, %494
  %565 = bitcast %"class.blink::Node"* %472 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %566 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %565, align 8
  %567 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %566, i64 195
  %568 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %567, align 8
  %569 = call %"class.WTF::StringImpl"* %568(%"class.blink::HTMLInputElement"* nonnull %491) #15
  %570 = icmp eq %"class.WTF::StringImpl"* %569, null
  br i1 %570, label %652, label %571

571:                                              ; preds = %564
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %573 = load atomic i32, i32* %572 monotonic, align 4
  %574 = and i32 %573, 2
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %588

576:                                              ; preds = %571
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 0
  %578 = load i32, i32* %577, align 4
  %579 = zext i32 %578 to i33
  %580 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %579, i33 1) #15
  %581 = extractvalue { i33, i1 } %580, 1
  %582 = extractvalue { i33, i1 } %580, 0
  %583 = icmp slt i33 %582, 0
  %584 = or i1 %581, %583
  br i1 %584, label %585, label %586, !prof !3

585:                                              ; preds = %576
  call void @llvm.trap() #15
  unreachable

586:                                              ; preds = %576
  %587 = trunc i33 %582 to i32
  store i32 %587, i32* %577, align 4
  br label %588

588:                                              ; preds = %586, %571
  %589 = ptrtoint %"class.WTF::StringImpl"* %569 to i64
  %590 = bitcast %"class.WTF::String"* %7 to i64*
  %591 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %589, i64* %590, align 8
  %592 = icmp eq %"class.WTF::StringImpl"* %591, null
  br i1 %592, label %606, label %593

593:                                              ; preds = %588
  %594 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %591, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %595 = load atomic i32, i32* %594 monotonic, align 4
  %596 = and i32 %595, 2
  %597 = icmp eq i32 %596, 0
  %598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %591, i64 0, i32 0
  %599 = load i32, i32* %598, align 4
  br i1 %597, label %600, label %602

600:                                              ; preds = %593
  %601 = add i32 %599, -1
  store i32 %601, i32* %598, align 4
  br label %602

602:                                              ; preds = %600, %593
  %603 = phi i32 [ %601, %600 ], [ %599, %593 ]
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %606

605:                                              ; preds = %602
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %591) #15
  br label %606

606:                                              ; preds = %588, %602, %605
  br i1 %495, label %607, label %879

607:                                              ; preds = %606
  %608 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %609 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %610 = load i32, i32* %609, align 4
  %611 = add i32 %610, -1
  %612 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %608, i32 %611) #15
  %613 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %614 = icmp eq %"class.WTF::StringImpl"* %613, null
  br i1 %614, label %632, label %615

615:                                              ; preds = %607
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load atomic i32, i32* %616 monotonic, align 4
  %618 = and i32 %617, 2
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %632

620:                                              ; preds = %615
  %621 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 0
  %622 = load i32, i32* %621, align 4
  %623 = zext i32 %622 to i33
  %624 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %623, i33 1) #15
  %625 = extractvalue { i33, i1 } %624, 1
  %626 = extractvalue { i33, i1 } %624, 0
  %627 = icmp slt i33 %626, 0
  %628 = or i1 %625, %627
  br i1 %628, label %629, label %630, !prof !3

629:                                              ; preds = %620
  call void @llvm.trap() #15
  unreachable

630:                                              ; preds = %620
  %631 = trunc i33 %626 to i32
  store i32 %631, i32* %621, align 4
  br label %632

632:                                              ; preds = %630, %615, %607
  %633 = ptrtoint %"class.WTF::StringImpl"* %613 to i64
  %634 = bitcast %"class.blink::NameSource"* %612 to i64*
  %635 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %612, i64 0, i32 0, i32 0, i32 0
  %636 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %635, align 8
  store i64 %633, i64* %634, align 8
  %637 = icmp eq %"class.WTF::StringImpl"* %636, null
  br i1 %637, label %651, label %638

638:                                              ; preds = %632
  %639 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %636, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %640 = load atomic i32, i32* %639 monotonic, align 4
  %641 = and i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %636, i64 0, i32 0
  %644 = load i32, i32* %643, align 4
  br i1 %642, label %645, label %647

645:                                              ; preds = %638
  %646 = add i32 %644, -1
  store i32 %646, i32* %643, align 4
  br label %647

647:                                              ; preds = %645, %638
  %648 = phi i32 [ %646, %645 ], [ %644, %638 ]
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %650, label %651

650:                                              ; preds = %647
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %636) #15
  br label %651

651:                                              ; preds = %632, %647, %650
  store i8 1, i8* %5, align 1
  br label %652

652:                                              ; preds = %651, %564
  %653 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %654 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %653, align 8
  %655 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %654, i64 125
  %656 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %655, align 8
  %657 = call %"class.blink::LayoutObject"* %656(%"class.blink::AXObject"* %40) #15
  %658 = icmp eq %"class.blink::LayoutObject"* %657, null
  br i1 %658, label %659, label %876

659:                                              ; preds = %652
  %660 = call %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement19ValueOrDefaultLabelEv(%"class.blink::HTMLInputElement"* nonnull %491) #15
  %661 = icmp eq %"class.WTF::StringImpl"* %660, null
  br i1 %570, label %662, label %860

662:                                              ; preds = %659
  br i1 %661, label %663, label %666

663:                                              ; preds = %662
  %664 = bitcast %"class.WTF::String"* %7 to i64*
  %665 = load i64, i64* %664, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4590

666:                                              ; preds = %662
  store i32 5, i32* %2, align 4
  br i1 %495, label %667, label %812

667:                                              ; preds = %666
  %668 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %669 = bitcast %"class.blink::NameSource"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %669) #15
  %670 = load i8, i8* %5, align 1, !range !2
  %671 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %671, align 8
  %672 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %13, i64 0, i32 1
  store i8 %670, i8* %672, align 8
  %673 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %13, i64 0, i32 2
  store i8 0, i8* %673, align 1
  %674 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %13, i64 0, i32 3
  store i32 1, i32* %674, align 4
  %675 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %13, i64 0, i32 4
  %676 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %677 = bitcast %"class.blink::QualifiedName"** %675 to i64*
  store i64 %676, i64* %677, align 8
  %678 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %13, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %678, align 8
  %679 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %13, i64 0, i32 6
  store i32 -1, i32* %679, align 8
  %680 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %13, i64 0, i32 7
  %681 = bitcast %"class.blink::HeapVector.3879"* %680 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %681, i8 0, i64 16, i1 false) #15
  %682 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %683 = load i32, i32* %682, align 4
  %684 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %685 = load i32, i32* %684, align 8
  %686 = icmp eq i32 %683, %685
  br i1 %686, label %696, label %687, !prof !3

687:                                              ; preds = %667
  %688 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %689 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %688, align 8
  %690 = zext i32 %683 to i64
  %691 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %689, i64 %690
  %692 = bitcast %"class.blink::NameSource"* %691 to i8*
  %693 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %692, %"class.blink::NameSource"* nonnull dereferenceable(56) %13) #15
  %694 = load i32, i32* %682, align 4
  %695 = add i32 %694, 1
  store i32 %695, i32* %682, align 4
  br label %697

696:                                              ; preds = %667
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %668, %"class.blink::NameSource"* nonnull dereferenceable(56) %13) #15
  br label %697

697:                                              ; preds = %687, %696
  %698 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %678, align 8
  %699 = icmp eq %"class.WTF::StringImpl"* %698, null
  br i1 %699, label %713, label %700

700:                                              ; preds = %697
  %701 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %702 = load atomic i32, i32* %701 monotonic, align 4
  %703 = and i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 0
  %706 = load i32, i32* %705, align 4
  br i1 %704, label %707, label %709

707:                                              ; preds = %700
  %708 = add i32 %706, -1
  store i32 %708, i32* %705, align 4
  br label %709

709:                                              ; preds = %707, %700
  %710 = phi i32 [ %708, %707 ], [ %706, %700 ]
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %712, label %713

712:                                              ; preds = %709
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %698) #15
  br label %713

713:                                              ; preds = %712, %709, %697
  %714 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %671, align 8
  %715 = icmp eq %"class.WTF::StringImpl"* %714, null
  br i1 %715, label %729, label %716

716:                                              ; preds = %713
  %717 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %714, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %718 = load atomic i32, i32* %717 monotonic, align 4
  %719 = and i32 %718, 2
  %720 = icmp eq i32 %719, 0
  %721 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %714, i64 0, i32 0
  %722 = load i32, i32* %721, align 4
  br i1 %720, label %723, label %725

723:                                              ; preds = %716
  %724 = add i32 %722, -1
  store i32 %724, i32* %721, align 4
  br label %725

725:                                              ; preds = %723, %716
  %726 = phi i32 [ %724, %723 ], [ %722, %716 ]
  %727 = icmp eq i32 %726, 0
  br i1 %727, label %728, label %729

728:                                              ; preds = %725
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %714) #15
  br label %729

729:                                              ; preds = %728, %725, %713
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %669) #15
  %730 = load i32, i32* %2, align 4
  %731 = load i32, i32* %682, align 4
  %732 = add i32 %731, -1
  %733 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %668, i32 %732) #15
  %734 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %733, i64 0, i32 3
  store i32 %730, i32* %734, align 4
  %735 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %660, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %736 = load atomic i32, i32* %735 monotonic, align 4
  %737 = and i32 %736, 2
  %738 = icmp eq i32 %737, 0
  br i1 %738, label %739, label %751

739:                                              ; preds = %729
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %660, i64 0, i32 0
  %741 = load i32, i32* %740, align 4
  %742 = zext i32 %741 to i33
  %743 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %742, i33 1) #15
  %744 = extractvalue { i33, i1 } %743, 1
  %745 = extractvalue { i33, i1 } %743, 0
  %746 = icmp slt i33 %745, 0
  %747 = or i1 %744, %746
  br i1 %747, label %748, label %749, !prof !3

748:                                              ; preds = %739
  call void @llvm.trap() #15
  unreachable

749:                                              ; preds = %739
  %750 = trunc i33 %745 to i32
  store i32 %750, i32* %740, align 4
  br label %751

751:                                              ; preds = %749, %729
  %752 = ptrtoint %"class.WTF::StringImpl"* %660 to i64
  %753 = bitcast %"class.WTF::String"* %7 to i64*
  %754 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %752, i64* %753, align 8
  %755 = icmp eq %"class.WTF::StringImpl"* %754, null
  br i1 %755, label %769, label %756

756:                                              ; preds = %751
  %757 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %754, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %758 = load atomic i32, i32* %757 monotonic, align 4
  %759 = and i32 %758, 2
  %760 = icmp eq i32 %759, 0
  %761 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %754, i64 0, i32 0
  %762 = load i32, i32* %761, align 4
  br i1 %760, label %763, label %765

763:                                              ; preds = %756
  %764 = add i32 %762, -1
  store i32 %764, i32* %761, align 4
  br label %765

765:                                              ; preds = %763, %756
  %766 = phi i32 [ %764, %763 ], [ %762, %756 ]
  %767 = icmp eq i32 %766, 0
  br i1 %767, label %768, label %769

768:                                              ; preds = %765
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %754) #15
  br label %769

769:                                              ; preds = %751, %765, %768
  %770 = load i32, i32* %682, align 4
  %771 = add i32 %770, -1
  %772 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %668, i32 %771) #15
  %773 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %774 = icmp eq %"class.WTF::StringImpl"* %773, null
  br i1 %774, label %792, label %775

775:                                              ; preds = %769
  %776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %773, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %777 = load atomic i32, i32* %776 monotonic, align 4
  %778 = and i32 %777, 2
  %779 = icmp eq i32 %778, 0
  br i1 %779, label %780, label %792

780:                                              ; preds = %775
  %781 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %773, i64 0, i32 0
  %782 = load i32, i32* %781, align 4
  %783 = zext i32 %782 to i33
  %784 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %783, i33 1) #15
  %785 = extractvalue { i33, i1 } %784, 1
  %786 = extractvalue { i33, i1 } %784, 0
  %787 = icmp slt i33 %786, 0
  %788 = or i1 %785, %787
  br i1 %788, label %789, label %790, !prof !3

789:                                              ; preds = %780
  call void @llvm.trap() #15
  unreachable

790:                                              ; preds = %780
  %791 = trunc i33 %786 to i32
  store i32 %791, i32* %781, align 4
  br label %792

792:                                              ; preds = %790, %775, %769
  %793 = ptrtoint %"class.WTF::StringImpl"* %773 to i64
  %794 = bitcast %"class.blink::NameSource"* %772 to i64*
  %795 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %772, i64 0, i32 0, i32 0, i32 0
  %796 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %795, align 8
  store i64 %793, i64* %794, align 8
  %797 = icmp eq %"class.WTF::StringImpl"* %796, null
  br i1 %797, label %811, label %798

798:                                              ; preds = %792
  %799 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %796, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %800 = load atomic i32, i32* %799 monotonic, align 4
  %801 = and i32 %800, 2
  %802 = icmp eq i32 %801, 0
  %803 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %796, i64 0, i32 0
  %804 = load i32, i32* %803, align 4
  br i1 %802, label %805, label %807

805:                                              ; preds = %798
  %806 = add i32 %804, -1
  store i32 %806, i32* %803, align 4
  br label %807

807:                                              ; preds = %805, %798
  %808 = phi i32 [ %806, %805 ], [ %804, %798 ]
  %809 = icmp eq i32 %808, 0
  br i1 %809, label %810, label %811

810:                                              ; preds = %807
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %796) #15
  br label %811

811:                                              ; preds = %810, %807, %792
  store i8 1, i8* %5, align 1
  br label %863

812:                                              ; preds = %666
  %813 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %660, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %814 = load atomic i32, i32* %813 monotonic, align 4
  %815 = and i32 %814, 2
  %816 = icmp eq i32 %815, 0
  br i1 %816, label %817, label %829

817:                                              ; preds = %812
  %818 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %660, i64 0, i32 0
  %819 = load i32, i32* %818, align 4
  %820 = zext i32 %819 to i33
  %821 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %820, i33 1) #15
  %822 = extractvalue { i33, i1 } %821, 1
  %823 = extractvalue { i33, i1 } %821, 0
  %824 = icmp slt i33 %823, 0
  %825 = or i1 %822, %824
  br i1 %825, label %826, label %827, !prof !3

826:                                              ; preds = %817
  call void @llvm.trap() #15
  unreachable

827:                                              ; preds = %817
  %828 = trunc i33 %823 to i32
  store i32 %828, i32* %818, align 4
  br label %829

829:                                              ; preds = %827, %812
  %830 = ptrtoint %"class.WTF::StringImpl"* %660 to i64
  %831 = bitcast %"class.WTF::String"* %7 to i64*
  %832 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %830, i64* %831, align 8
  %833 = icmp eq %"class.WTF::StringImpl"* %832, null
  br i1 %833, label %847, label %834

834:                                              ; preds = %829
  %835 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %832, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %836 = load atomic i32, i32* %835 monotonic, align 4
  %837 = and i32 %836, 2
  %838 = icmp eq i32 %837, 0
  %839 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %832, i64 0, i32 0
  %840 = load i32, i32* %839, align 4
  br i1 %838, label %841, label %843

841:                                              ; preds = %834
  %842 = add i32 %840, -1
  store i32 %842, i32* %839, align 4
  br label %843

843:                                              ; preds = %841, %834
  %844 = phi i32 [ %842, %841 ], [ %840, %834 ]
  %845 = icmp eq i32 %844, 0
  br i1 %845, label %846, label %847

846:                                              ; preds = %843
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %832) #15
  br label %847

847:                                              ; preds = %846, %843, %829
  %848 = load i64, i64* %831, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  %849 = load atomic i32, i32* %813 monotonic, align 4
  %850 = and i32 %849, 2
  %851 = icmp eq i32 %850, 0
  %852 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %660, i64 0, i32 0
  %853 = load i32, i32* %852, align 4
  br i1 %851, label %854, label %856

854:                                              ; preds = %847
  %855 = add i32 %853, -1
  store i32 %855, i32* %852, align 4
  br label %856

856:                                              ; preds = %854, %847
  %857 = phi i32 [ %855, %854 ], [ %853, %847 ]
  %858 = icmp eq i32 %857, 0
  br i1 %858, label %859, label %4594

859:                                              ; preds = %856
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %660) #15
  br label %4594

860:                                              ; preds = %659
  br i1 %661, label %861, label %863

861:                                              ; preds = %860
  %862 = bitcast %"class.WTF::String"* %7 to i64*
  br label %879

863:                                              ; preds = %811, %860
  %864 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %660, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %865 = load atomic i32, i32* %864 monotonic, align 4
  %866 = and i32 %865, 2
  %867 = icmp eq i32 %866, 0
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %660, i64 0, i32 0
  %869 = load i32, i32* %868, align 4
  br i1 %867, label %870, label %872

870:                                              ; preds = %863
  %871 = add i32 %869, -1
  store i32 %871, i32* %868, align 4
  br label %872

872:                                              ; preds = %870, %863
  %873 = phi i32 [ %871, %870 ], [ %869, %863 ]
  %874 = icmp eq i32 %873, 0
  br i1 %874, label %875, label %876

875:                                              ; preds = %872
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %660) #15
  br label %876

876:                                              ; preds = %652, %872, %875
  %877 = bitcast %"class.WTF::String"* %7 to i64*
  %878 = load i64, i64* %877, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br i1 %570, label %4590, label %882

879:                                              ; preds = %606, %861
  %880 = phi i64* [ %862, %861 ], [ %590, %606 ]
  %881 = load i64, i64* %880, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %882

882:                                              ; preds = %879, %876
  %883 = phi i64 [ %878, %876 ], [ %881, %879 ]
  %884 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %885 = load atomic i32, i32* %884 monotonic, align 4
  %886 = and i32 %885, 2
  %887 = icmp eq i32 %886, 0
  %888 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 0
  %889 = load i32, i32* %888, align 4
  br i1 %887, label %890, label %892

890:                                              ; preds = %882
  %891 = add i32 %889, -1
  store i32 %891, i32* %888, align 4
  br label %892

892:                                              ; preds = %890, %882
  %893 = phi i32 [ %891, %890 ], [ %889, %882 ]
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %895, label %4594

895:                                              ; preds = %892
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %569) #15
  br label %4594

896:                                              ; preds = %492
  %897 = bitcast %"class.blink::Node"* %472 to %"class.blink::Element"*
  %898 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %899 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %897, %"class.blink::QualifiedName"* dereferenceable(8) %898) #15
  %900 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kImageE, align 8
  %901 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %899, i64 0, i32 0, i32 0, i32 0
  %902 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %901, align 8
  %903 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %900, i64 0, i32 0, i32 0, i32 0
  %904 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %903, align 8
  %905 = icmp eq %"class.WTF::StringImpl"* %902, %904
  br i1 %905, label %906, label %1662

906:                                              ; preds = %896
  %907 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kAltAttrE, align 8
  %908 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %897, %"class.blink::QualifiedName"* dereferenceable(8) %907) #15
  %909 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %908, i64 0, i32 0, i32 0, i32 0
  %910 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %909, align 8
  %911 = icmp eq %"class.WTF::StringImpl"* %910, null
  br i1 %911, label %916, label %912

912:                                              ; preds = %906
  %913 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %910, i64 0, i32 1
  %914 = load i32, i32* %913, align 4
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %916, label %918

916:                                              ; preds = %906, %912
  %917 = select i1 %911, i32 2, i32 3
  br label %918

918:                                              ; preds = %916, %912
  %919 = phi i32 [ 2, %912 ], [ %917, %916 ]
  store i32 %919, i32* %2, align 4
  %920 = icmp ne %"class.blink::HeapVector.3890"* %4, null
  br i1 %920, label %921, label %987

921:                                              ; preds = %918
  %922 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %923 = bitcast %"class.blink::NameSource"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %923) #15
  %924 = load i8, i8* %5, align 1, !range !2
  %925 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %925, align 8
  %926 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 1
  store i8 %924, i8* %926, align 8
  %927 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 2
  store i8 0, i8* %927, align 1
  %928 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 3
  store i32 1, i32* %928, align 4
  %929 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 4
  store %"class.blink::QualifiedName"* %907, %"class.blink::QualifiedName"** %929, align 8
  %930 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %930, align 8
  %931 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 6
  store i32 -1, i32* %931, align 8
  %932 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %14, i64 0, i32 7
  %933 = bitcast %"class.blink::HeapVector.3879"* %932 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %933, i8 0, i64 16, i1 false) #15
  %934 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %935 = load i32, i32* %934, align 4
  %936 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %937 = load i32, i32* %936, align 8
  %938 = icmp eq i32 %935, %937
  br i1 %938, label %948, label %939, !prof !3

939:                                              ; preds = %921
  %940 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %941 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %940, align 8
  %942 = zext i32 %935 to i64
  %943 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %941, i64 %942
  %944 = bitcast %"class.blink::NameSource"* %943 to i8*
  %945 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %944, %"class.blink::NameSource"* nonnull dereferenceable(56) %14) #15
  %946 = load i32, i32* %934, align 4
  %947 = add i32 %946, 1
  store i32 %947, i32* %934, align 4
  br label %949

948:                                              ; preds = %921
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %922, %"class.blink::NameSource"* nonnull dereferenceable(56) %14) #15
  br label %949

949:                                              ; preds = %939, %948
  %950 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %930, align 8
  %951 = icmp eq %"class.WTF::StringImpl"* %950, null
  br i1 %951, label %965, label %952

952:                                              ; preds = %949
  %953 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %950, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %954 = load atomic i32, i32* %953 monotonic, align 4
  %955 = and i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %950, i64 0, i32 0
  %958 = load i32, i32* %957, align 4
  br i1 %956, label %959, label %961

959:                                              ; preds = %952
  %960 = add i32 %958, -1
  store i32 %960, i32* %957, align 4
  br label %961

961:                                              ; preds = %959, %952
  %962 = phi i32 [ %960, %959 ], [ %958, %952 ]
  %963 = icmp eq i32 %962, 0
  br i1 %963, label %964, label %965

964:                                              ; preds = %961
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %950) #15
  br label %965

965:                                              ; preds = %964, %961, %949
  %966 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %925, align 8
  %967 = icmp eq %"class.WTF::StringImpl"* %966, null
  br i1 %967, label %981, label %968

968:                                              ; preds = %965
  %969 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %966, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %970 = load atomic i32, i32* %969 monotonic, align 4
  %971 = and i32 %970, 2
  %972 = icmp eq i32 %971, 0
  %973 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %966, i64 0, i32 0
  %974 = load i32, i32* %973, align 4
  br i1 %972, label %975, label %977

975:                                              ; preds = %968
  %976 = add i32 %974, -1
  store i32 %976, i32* %973, align 4
  br label %977

977:                                              ; preds = %975, %968
  %978 = phi i32 [ %976, %975 ], [ %974, %968 ]
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %980, label %981

980:                                              ; preds = %977
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %966) #15
  br label %981

981:                                              ; preds = %965, %977, %980
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %923) #15
  %982 = load i32, i32* %2, align 4
  %983 = load i32, i32* %934, align 4
  %984 = add i32 %983, -1
  %985 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %922, i32 %984) #15
  %986 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %985, i64 0, i32 3
  store i32 %982, i32* %986, align 4
  br label %987

987:                                              ; preds = %981, %918
  %988 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %909, align 8
  %989 = icmp eq %"class.WTF::StringImpl"* %988, null
  br i1 %989, label %1113, label %990

990:                                              ; preds = %987
  %991 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %988, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %992 = load atomic i32, i32* %991 monotonic, align 4
  %993 = and i32 %992, 2
  %994 = icmp eq i32 %993, 0
  br i1 %994, label %995, label %1007

995:                                              ; preds = %990
  %996 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %988, i64 0, i32 0
  %997 = load i32, i32* %996, align 4
  %998 = zext i32 %997 to i33
  %999 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %998, i33 1) #15
  %1000 = extractvalue { i33, i1 } %999, 1
  %1001 = extractvalue { i33, i1 } %999, 0
  %1002 = icmp slt i33 %1001, 0
  %1003 = or i1 %1000, %1002
  br i1 %1003, label %1004, label %1005, !prof !3

1004:                                             ; preds = %995
  call void @llvm.trap() #15
  unreachable

1005:                                             ; preds = %995
  %1006 = trunc i33 %1001 to i32
  store i32 %1006, i32* %996, align 4
  br label %1007

1007:                                             ; preds = %1005, %990
  %1008 = ptrtoint %"class.WTF::StringImpl"* %988 to i64
  %1009 = bitcast %"class.WTF::String"* %7 to i64*
  %1010 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %1008, i64* %1009, align 8
  %1011 = icmp eq %"class.WTF::StringImpl"* %1010, null
  br i1 %1011, label %1025, label %1012

1012:                                             ; preds = %1007
  %1013 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1010, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1014 = load atomic i32, i32* %1013 monotonic, align 4
  %1015 = and i32 %1014, 2
  %1016 = icmp eq i32 %1015, 0
  %1017 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1010, i64 0, i32 0
  %1018 = load i32, i32* %1017, align 4
  br i1 %1016, label %1019, label %1021

1019:                                             ; preds = %1012
  %1020 = add i32 %1018, -1
  store i32 %1020, i32* %1017, align 4
  br label %1021

1021:                                             ; preds = %1019, %1012
  %1022 = phi i32 [ %1020, %1019 ], [ %1018, %1012 ]
  %1023 = icmp eq i32 %1022, 0
  br i1 %1023, label %1024, label %1025

1024:                                             ; preds = %1021
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1010) #15
  br label %1025

1025:                                             ; preds = %1007, %1021, %1024
  br i1 %920, label %1026, label %1111

1026:                                             ; preds = %1025
  %1027 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %1028 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %1029 = load i32, i32* %1028, align 4
  %1030 = add i32 %1029, -1
  %1031 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %1027, i32 %1030) #15
  %1032 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1031, i64 0, i32 5
  %1033 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %909, align 8
  %1034 = icmp eq %"class.WTF::StringImpl"* %1033, null
  br i1 %1034, label %1052, label %1035

1035:                                             ; preds = %1026
  %1036 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1033, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1037 = load atomic i32, i32* %1036 monotonic, align 4
  %1038 = and i32 %1037, 2
  %1039 = icmp eq i32 %1038, 0
  br i1 %1039, label %1040, label %1052

1040:                                             ; preds = %1035
  %1041 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1033, i64 0, i32 0
  %1042 = load i32, i32* %1041, align 4
  %1043 = zext i32 %1042 to i33
  %1044 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1043, i33 1) #15
  %1045 = extractvalue { i33, i1 } %1044, 1
  %1046 = extractvalue { i33, i1 } %1044, 0
  %1047 = icmp slt i33 %1046, 0
  %1048 = or i1 %1045, %1047
  br i1 %1048, label %1049, label %1050, !prof !3

1049:                                             ; preds = %1040
  call void @llvm.trap() #15
  unreachable

1050:                                             ; preds = %1040
  %1051 = trunc i33 %1046 to i32
  store i32 %1051, i32* %1041, align 4
  br label %1052

1052:                                             ; preds = %1050, %1035, %1026
  %1053 = ptrtoint %"class.WTF::StringImpl"* %1033 to i64
  %1054 = bitcast %"class.WTF::AtomicString"* %1032 to i64*
  %1055 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1032, i64 0, i32 0, i32 0, i32 0
  %1056 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1055, align 8
  store i64 %1053, i64* %1054, align 8
  %1057 = icmp eq %"class.WTF::StringImpl"* %1056, null
  br i1 %1057, label %1071, label %1058

1058:                                             ; preds = %1052
  %1059 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1056, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1060 = load atomic i32, i32* %1059 monotonic, align 4
  %1061 = and i32 %1060, 2
  %1062 = icmp eq i32 %1061, 0
  %1063 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1056, i64 0, i32 0
  %1064 = load i32, i32* %1063, align 4
  br i1 %1062, label %1065, label %1067

1065:                                             ; preds = %1058
  %1066 = add i32 %1064, -1
  store i32 %1066, i32* %1063, align 4
  br label %1067

1067:                                             ; preds = %1065, %1058
  %1068 = phi i32 [ %1066, %1065 ], [ %1064, %1058 ]
  %1069 = icmp eq i32 %1068, 0
  br i1 %1069, label %1070, label %1071

1070:                                             ; preds = %1067
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1056) #15
  br label %1071

1071:                                             ; preds = %1052, %1067, %1070
  %1072 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %1073 = icmp eq %"class.WTF::StringImpl"* %1072, null
  br i1 %1073, label %1091, label %1074

1074:                                             ; preds = %1071
  %1075 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1072, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1076 = load atomic i32, i32* %1075 monotonic, align 4
  %1077 = and i32 %1076, 2
  %1078 = icmp eq i32 %1077, 0
  br i1 %1078, label %1079, label %1091

1079:                                             ; preds = %1074
  %1080 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1072, i64 0, i32 0
  %1081 = load i32, i32* %1080, align 4
  %1082 = zext i32 %1081 to i33
  %1083 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1082, i33 1) #15
  %1084 = extractvalue { i33, i1 } %1083, 1
  %1085 = extractvalue { i33, i1 } %1083, 0
  %1086 = icmp slt i33 %1085, 0
  %1087 = or i1 %1084, %1086
  br i1 %1087, label %1088, label %1089, !prof !3

1088:                                             ; preds = %1079
  call void @llvm.trap() #15
  unreachable

1089:                                             ; preds = %1079
  %1090 = trunc i33 %1085 to i32
  store i32 %1090, i32* %1080, align 4
  br label %1091

1091:                                             ; preds = %1089, %1074, %1071
  %1092 = ptrtoint %"class.WTF::StringImpl"* %1072 to i64
  %1093 = bitcast %"class.blink::NameSource"* %1031 to i64*
  %1094 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1031, i64 0, i32 0, i32 0, i32 0
  %1095 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1094, align 8
  store i64 %1092, i64* %1093, align 8
  %1096 = icmp eq %"class.WTF::StringImpl"* %1095, null
  br i1 %1096, label %1110, label %1097

1097:                                             ; preds = %1091
  %1098 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1095, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1099 = load atomic i32, i32* %1098 monotonic, align 4
  %1100 = and i32 %1099, 2
  %1101 = icmp eq i32 %1100, 0
  %1102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1095, i64 0, i32 0
  %1103 = load i32, i32* %1102, align 4
  br i1 %1101, label %1104, label %1106

1104:                                             ; preds = %1097
  %1105 = add i32 %1103, -1
  store i32 %1105, i32* %1102, align 4
  br label %1106

1106:                                             ; preds = %1104, %1097
  %1107 = phi i32 [ %1105, %1104 ], [ %1103, %1097 ]
  %1108 = icmp eq i32 %1107, 0
  br i1 %1108, label %1109, label %1110

1109:                                             ; preds = %1106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1095) #15
  br label %1110

1110:                                             ; preds = %1109, %1106, %1091
  store i8 1, i8* %5, align 1
  br label %1116

1111:                                             ; preds = %1025
  %1112 = load i64, i64* %1009, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4590

1113:                                             ; preds = %987
  br i1 %920, label %1114, label %1184

1114:                                             ; preds = %1113
  %1115 = load i8, i8* %5, align 1, !range !2
  br label %1116

1116:                                             ; preds = %1114, %1110
  %1117 = phi i8 [ %1115, %1114 ], [ 1, %1110 ]
  %1118 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %1119 = bitcast %"class.blink::NameSource"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1119) #15
  %1120 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE to i64*), align 8
  %1121 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1121, align 8
  %1122 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %15, i64 0, i32 1
  store i8 %1117, i8* %1122, align 8
  %1123 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %15, i64 0, i32 2
  store i8 0, i8* %1123, align 1
  %1124 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %15, i64 0, i32 3
  store i32 1, i32* %1124, align 4
  %1125 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %15, i64 0, i32 4
  %1126 = bitcast %"class.blink::QualifiedName"** %1125 to i64*
  store i64 %1120, i64* %1126, align 8
  %1127 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %15, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1127, align 8
  %1128 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %15, i64 0, i32 6
  store i32 -1, i32* %1128, align 8
  %1129 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %15, i64 0, i32 7
  %1130 = bitcast %"class.blink::HeapVector.3879"* %1129 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1130, i8 0, i64 16, i1 false) #15
  %1131 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %1132 = load i32, i32* %1131, align 4
  %1133 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %1134 = load i32, i32* %1133, align 8
  %1135 = icmp eq i32 %1132, %1134
  br i1 %1135, label %1145, label %1136, !prof !3

1136:                                             ; preds = %1116
  %1137 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %1138 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %1137, align 8
  %1139 = zext i32 %1132 to i64
  %1140 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1138, i64 %1139
  %1141 = bitcast %"class.blink::NameSource"* %1140 to i8*
  %1142 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %1141, %"class.blink::NameSource"* nonnull dereferenceable(56) %15) #15
  %1143 = load i32, i32* %1131, align 4
  %1144 = add i32 %1143, 1
  store i32 %1144, i32* %1131, align 4
  br label %1146

1145:                                             ; preds = %1116
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %1118, %"class.blink::NameSource"* nonnull dereferenceable(56) %15) #15
  br label %1146

1146:                                             ; preds = %1136, %1145
  %1147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1127, align 8
  %1148 = icmp eq %"class.WTF::StringImpl"* %1147, null
  br i1 %1148, label %1162, label %1149

1149:                                             ; preds = %1146
  %1150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1151 = load atomic i32, i32* %1150 monotonic, align 4
  %1152 = and i32 %1151, 2
  %1153 = icmp eq i32 %1152, 0
  %1154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1147, i64 0, i32 0
  %1155 = load i32, i32* %1154, align 4
  br i1 %1153, label %1156, label %1158

1156:                                             ; preds = %1149
  %1157 = add i32 %1155, -1
  store i32 %1157, i32* %1154, align 4
  br label %1158

1158:                                             ; preds = %1156, %1149
  %1159 = phi i32 [ %1157, %1156 ], [ %1155, %1149 ]
  %1160 = icmp eq i32 %1159, 0
  br i1 %1160, label %1161, label %1162

1161:                                             ; preds = %1158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1147) #15
  br label %1162

1162:                                             ; preds = %1161, %1158, %1146
  %1163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1121, align 8
  %1164 = icmp eq %"class.WTF::StringImpl"* %1163, null
  br i1 %1164, label %1178, label %1165

1165:                                             ; preds = %1162
  %1166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1167 = load atomic i32, i32* %1166 monotonic, align 4
  %1168 = and i32 %1167, 2
  %1169 = icmp eq i32 %1168, 0
  %1170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1163, i64 0, i32 0
  %1171 = load i32, i32* %1170, align 4
  br i1 %1169, label %1172, label %1174

1172:                                             ; preds = %1165
  %1173 = add i32 %1171, -1
  store i32 %1173, i32* %1170, align 4
  br label %1174

1174:                                             ; preds = %1172, %1165
  %1175 = phi i32 [ %1173, %1172 ], [ %1171, %1165 ]
  %1176 = icmp eq i32 %1175, 0
  br i1 %1176, label %1177, label %1178

1177:                                             ; preds = %1174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1163) #15
  br label %1178

1178:                                             ; preds = %1162, %1174, %1177
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1119) #15
  %1179 = load i32, i32* %2, align 4
  %1180 = load i32, i32* %1131, align 4
  %1181 = add i32 %1180, -1
  %1182 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %1118, i32 %1181) #15
  %1183 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1182, i64 0, i32 3
  store i32 %1179, i32* %1183, align 4
  br label %1184

1184:                                             ; preds = %1178, %1113
  store i32 2, i32* %2, align 4
  %1185 = bitcast %"class.blink::Node"* %472 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %1186 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %1185, align 8
  %1187 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %1186, i64 195
  %1188 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %1187, align 8
  %1189 = call %"class.WTF::StringImpl"* %1188(%"class.blink::HTMLInputElement"* nonnull %491) #15
  %1190 = icmp eq %"class.WTF::StringImpl"* %1189, null
  br i1 %1190, label %1274, label %1191

1191:                                             ; preds = %1184
  %1192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1193 = load atomic i32, i32* %1192 monotonic, align 4
  %1194 = and i32 %1193, 2
  %1195 = icmp eq i32 %1194, 0
  br i1 %1195, label %1196, label %1208

1196:                                             ; preds = %1191
  %1197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1189, i64 0, i32 0
  %1198 = load i32, i32* %1197, align 4
  %1199 = zext i32 %1198 to i33
  %1200 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1199, i33 1) #15
  %1201 = extractvalue { i33, i1 } %1200, 1
  %1202 = extractvalue { i33, i1 } %1200, 0
  %1203 = icmp slt i33 %1202, 0
  %1204 = or i1 %1201, %1203
  br i1 %1204, label %1205, label %1206, !prof !3

1205:                                             ; preds = %1196
  call void @llvm.trap() #15
  unreachable

1206:                                             ; preds = %1196
  %1207 = trunc i33 %1202 to i32
  store i32 %1207, i32* %1197, align 4
  br label %1208

1208:                                             ; preds = %1206, %1191
  %1209 = ptrtoint %"class.WTF::StringImpl"* %1189 to i64
  %1210 = bitcast %"class.WTF::String"* %7 to i64*
  %1211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %1209, i64* %1210, align 8
  %1212 = icmp eq %"class.WTF::StringImpl"* %1211, null
  br i1 %1212, label %1226, label %1213

1213:                                             ; preds = %1208
  %1214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1215 = load atomic i32, i32* %1214 monotonic, align 4
  %1216 = and i32 %1215, 2
  %1217 = icmp eq i32 %1216, 0
  %1218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1211, i64 0, i32 0
  %1219 = load i32, i32* %1218, align 4
  br i1 %1217, label %1220, label %1222

1220:                                             ; preds = %1213
  %1221 = add i32 %1219, -1
  store i32 %1221, i32* %1218, align 4
  br label %1222

1222:                                             ; preds = %1220, %1213
  %1223 = phi i32 [ %1221, %1220 ], [ %1219, %1213 ]
  %1224 = icmp eq i32 %1223, 0
  br i1 %1224, label %1225, label %1226

1225:                                             ; preds = %1222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1211) #15
  br label %1226

1226:                                             ; preds = %1208, %1222, %1225
  br i1 %920, label %1227, label %1272

1227:                                             ; preds = %1226
  %1228 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %1229 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %1230 = load i32, i32* %1229, align 4
  %1231 = add i32 %1230, -1
  %1232 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %1228, i32 %1231) #15
  %1233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %1234 = icmp eq %"class.WTF::StringImpl"* %1233, null
  br i1 %1234, label %1252, label %1235

1235:                                             ; preds = %1227
  %1236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1237 = load atomic i32, i32* %1236 monotonic, align 4
  %1238 = and i32 %1237, 2
  %1239 = icmp eq i32 %1238, 0
  br i1 %1239, label %1240, label %1252

1240:                                             ; preds = %1235
  %1241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1233, i64 0, i32 0
  %1242 = load i32, i32* %1241, align 4
  %1243 = zext i32 %1242 to i33
  %1244 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1243, i33 1) #15
  %1245 = extractvalue { i33, i1 } %1244, 1
  %1246 = extractvalue { i33, i1 } %1244, 0
  %1247 = icmp slt i33 %1246, 0
  %1248 = or i1 %1245, %1247
  br i1 %1248, label %1249, label %1250, !prof !3

1249:                                             ; preds = %1240
  call void @llvm.trap() #15
  unreachable

1250:                                             ; preds = %1240
  %1251 = trunc i33 %1246 to i32
  store i32 %1251, i32* %1241, align 4
  br label %1252

1252:                                             ; preds = %1250, %1235, %1227
  %1253 = ptrtoint %"class.WTF::StringImpl"* %1233 to i64
  %1254 = bitcast %"class.blink::NameSource"* %1232 to i64*
  %1255 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1232, i64 0, i32 0, i32 0, i32 0
  %1256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1255, align 8
  store i64 %1253, i64* %1254, align 8
  %1257 = icmp eq %"class.WTF::StringImpl"* %1256, null
  br i1 %1257, label %1271, label %1258

1258:                                             ; preds = %1252
  %1259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1256, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1260 = load atomic i32, i32* %1259 monotonic, align 4
  %1261 = and i32 %1260, 2
  %1262 = icmp eq i32 %1261, 0
  %1263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1256, i64 0, i32 0
  %1264 = load i32, i32* %1263, align 4
  br i1 %1262, label %1265, label %1267

1265:                                             ; preds = %1258
  %1266 = add i32 %1264, -1
  store i32 %1266, i32* %1263, align 4
  br label %1267

1267:                                             ; preds = %1265, %1258
  %1268 = phi i32 [ %1266, %1265 ], [ %1264, %1258 ]
  %1269 = icmp eq i32 %1268, 0
  br i1 %1269, label %1270, label %1271

1270:                                             ; preds = %1267
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1256) #15
  br label %1271

1271:                                             ; preds = %1270, %1267, %1252
  store i8 1, i8* %5, align 1
  br label %1279

1272:                                             ; preds = %1226
  %1273 = load i64, i64* %1210, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %1648

1274:                                             ; preds = %1184
  br i1 %920, label %1277, label %1275

1275:                                             ; preds = %1274
  %1276 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  br label %1348

1277:                                             ; preds = %1274
  %1278 = load i8, i8* %5, align 1, !range !2
  br label %1279

1279:                                             ; preds = %1277, %1271
  %1280 = phi i8 [ %1278, %1277 ], [ 1, %1271 ]
  %1281 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %1282 = bitcast %"class.blink::NameSource"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1282) #15
  %1283 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE to i64*), align 8
  %1284 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1284, align 8
  %1285 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %16, i64 0, i32 1
  store i8 %1280, i8* %1285, align 8
  %1286 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %16, i64 0, i32 2
  store i8 0, i8* %1286, align 1
  %1287 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %16, i64 0, i32 3
  store i32 1, i32* %1287, align 4
  %1288 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %16, i64 0, i32 4
  %1289 = bitcast %"class.blink::QualifiedName"** %1288 to i64*
  store i64 %1283, i64* %1289, align 8
  %1290 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %16, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1290, align 8
  %1291 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %16, i64 0, i32 6
  store i32 -1, i32* %1291, align 8
  %1292 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %16, i64 0, i32 7
  %1293 = bitcast %"class.blink::HeapVector.3879"* %1292 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1293, i8 0, i64 16, i1 false) #15
  %1294 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %1295 = load i32, i32* %1294, align 4
  %1296 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %1297 = load i32, i32* %1296, align 8
  %1298 = icmp eq i32 %1295, %1297
  %1299 = inttoptr i64 %1283 to %"class.blink::QualifiedName"*
  br i1 %1298, label %1309, label %1300, !prof !3

1300:                                             ; preds = %1279
  %1301 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %1302 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %1301, align 8
  %1303 = zext i32 %1295 to i64
  %1304 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1302, i64 %1303
  %1305 = bitcast %"class.blink::NameSource"* %1304 to i8*
  %1306 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %1305, %"class.blink::NameSource"* nonnull dereferenceable(56) %16) #15
  %1307 = load i32, i32* %1294, align 4
  %1308 = add i32 %1307, 1
  store i32 %1308, i32* %1294, align 4
  br label %1310

1309:                                             ; preds = %1279
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %1281, %"class.blink::NameSource"* nonnull dereferenceable(56) %16) #15
  br label %1310

1310:                                             ; preds = %1300, %1309
  %1311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1290, align 8
  %1312 = icmp eq %"class.WTF::StringImpl"* %1311, null
  br i1 %1312, label %1326, label %1313

1313:                                             ; preds = %1310
  %1314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1311, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1315 = load atomic i32, i32* %1314 monotonic, align 4
  %1316 = and i32 %1315, 2
  %1317 = icmp eq i32 %1316, 0
  %1318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1311, i64 0, i32 0
  %1319 = load i32, i32* %1318, align 4
  br i1 %1317, label %1320, label %1322

1320:                                             ; preds = %1313
  %1321 = add i32 %1319, -1
  store i32 %1321, i32* %1318, align 4
  br label %1322

1322:                                             ; preds = %1320, %1313
  %1323 = phi i32 [ %1321, %1320 ], [ %1319, %1313 ]
  %1324 = icmp eq i32 %1323, 0
  br i1 %1324, label %1325, label %1326

1325:                                             ; preds = %1322
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1311) #15
  br label %1326

1326:                                             ; preds = %1325, %1322, %1310
  %1327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1284, align 8
  %1328 = icmp eq %"class.WTF::StringImpl"* %1327, null
  br i1 %1328, label %1342, label %1329

1329:                                             ; preds = %1326
  %1330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1327, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1331 = load atomic i32, i32* %1330 monotonic, align 4
  %1332 = and i32 %1331, 2
  %1333 = icmp eq i32 %1332, 0
  %1334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1327, i64 0, i32 0
  %1335 = load i32, i32* %1334, align 4
  br i1 %1333, label %1336, label %1338

1336:                                             ; preds = %1329
  %1337 = add i32 %1335, -1
  store i32 %1337, i32* %1334, align 4
  br label %1338

1338:                                             ; preds = %1336, %1329
  %1339 = phi i32 [ %1337, %1336 ], [ %1335, %1329 ]
  %1340 = icmp eq i32 %1339, 0
  br i1 %1340, label %1341, label %1342

1341:                                             ; preds = %1338
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1327) #15
  br label %1342

1342:                                             ; preds = %1326, %1338, %1341
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1282) #15
  %1343 = load i32, i32* %2, align 4
  %1344 = load i32, i32* %1294, align 4
  %1345 = add i32 %1344, -1
  %1346 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %1281, i32 %1345) #15
  %1347 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1346, i64 0, i32 3
  store i32 %1343, i32* %1347, align 4
  br label %1348

1348:                                             ; preds = %1275, %1342
  %1349 = phi %"class.blink::QualifiedName"* [ %1276, %1275 ], [ %1299, %1342 ]
  store i32 8, i32* %2, align 4
  %1350 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %897, %"class.blink::QualifiedName"* dereferenceable(8) %1349) #15
  %1351 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1350, i64 0, i32 0, i32 0, i32 0
  %1352 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1351, align 8
  %1353 = icmp eq %"class.WTF::StringImpl"* %1352, null
  br i1 %1353, label %1354, label %1356

1354:                                             ; preds = %1348
  %1355 = bitcast %"class.WTF::String"* %7 to i64*
  br label %1477

1356:                                             ; preds = %1348
  %1357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1352, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1358 = load atomic i32, i32* %1357 monotonic, align 4
  %1359 = and i32 %1358, 2
  %1360 = icmp eq i32 %1359, 0
  br i1 %1360, label %1361, label %1373

1361:                                             ; preds = %1356
  %1362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1352, i64 0, i32 0
  %1363 = load i32, i32* %1362, align 4
  %1364 = zext i32 %1363 to i33
  %1365 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1364, i33 1) #15
  %1366 = extractvalue { i33, i1 } %1365, 1
  %1367 = extractvalue { i33, i1 } %1365, 0
  %1368 = icmp slt i33 %1367, 0
  %1369 = or i1 %1366, %1368
  br i1 %1369, label %1370, label %1371, !prof !3

1370:                                             ; preds = %1361
  call void @llvm.trap() #15
  unreachable

1371:                                             ; preds = %1361
  %1372 = trunc i33 %1367 to i32
  store i32 %1372, i32* %1362, align 4
  br label %1373

1373:                                             ; preds = %1371, %1356
  %1374 = ptrtoint %"class.WTF::StringImpl"* %1352 to i64
  %1375 = bitcast %"class.WTF::String"* %7 to i64*
  %1376 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %1374, i64* %1375, align 8
  %1377 = icmp eq %"class.WTF::StringImpl"* %1376, null
  br i1 %1377, label %1391, label %1378

1378:                                             ; preds = %1373
  %1379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1376, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1380 = load atomic i32, i32* %1379 monotonic, align 4
  %1381 = and i32 %1380, 2
  %1382 = icmp eq i32 %1381, 0
  %1383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1376, i64 0, i32 0
  %1384 = load i32, i32* %1383, align 4
  br i1 %1382, label %1385, label %1387

1385:                                             ; preds = %1378
  %1386 = add i32 %1384, -1
  store i32 %1386, i32* %1383, align 4
  br label %1387

1387:                                             ; preds = %1385, %1378
  %1388 = phi i32 [ %1386, %1385 ], [ %1384, %1378 ]
  %1389 = icmp eq i32 %1388, 0
  br i1 %1389, label %1390, label %1391

1390:                                             ; preds = %1387
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1376) #15
  br label %1391

1391:                                             ; preds = %1373, %1387, %1390
  br i1 %920, label %1392, label %1645

1392:                                             ; preds = %1391
  %1393 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %1394 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %1395 = load i32, i32* %1394, align 4
  %1396 = add i32 %1395, -1
  %1397 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %1393, i32 %1396) #15
  %1398 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1397, i64 0, i32 5
  %1399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1351, align 8
  %1400 = icmp eq %"class.WTF::StringImpl"* %1399, null
  br i1 %1400, label %1418, label %1401

1401:                                             ; preds = %1392
  %1402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1403 = load atomic i32, i32* %1402 monotonic, align 4
  %1404 = and i32 %1403, 2
  %1405 = icmp eq i32 %1404, 0
  br i1 %1405, label %1406, label %1418

1406:                                             ; preds = %1401
  %1407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1399, i64 0, i32 0
  %1408 = load i32, i32* %1407, align 4
  %1409 = zext i32 %1408 to i33
  %1410 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1409, i33 1) #15
  %1411 = extractvalue { i33, i1 } %1410, 1
  %1412 = extractvalue { i33, i1 } %1410, 0
  %1413 = icmp slt i33 %1412, 0
  %1414 = or i1 %1411, %1413
  br i1 %1414, label %1415, label %1416, !prof !3

1415:                                             ; preds = %1406
  call void @llvm.trap() #15
  unreachable

1416:                                             ; preds = %1406
  %1417 = trunc i33 %1412 to i32
  store i32 %1417, i32* %1407, align 4
  br label %1418

1418:                                             ; preds = %1416, %1401, %1392
  %1419 = ptrtoint %"class.WTF::StringImpl"* %1399 to i64
  %1420 = bitcast %"class.WTF::AtomicString"* %1398 to i64*
  %1421 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1398, i64 0, i32 0, i32 0, i32 0
  %1422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1421, align 8
  store i64 %1419, i64* %1420, align 8
  %1423 = icmp eq %"class.WTF::StringImpl"* %1422, null
  br i1 %1423, label %1437, label %1424

1424:                                             ; preds = %1418
  %1425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1426 = load atomic i32, i32* %1425 monotonic, align 4
  %1427 = and i32 %1426, 2
  %1428 = icmp eq i32 %1427, 0
  %1429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1422, i64 0, i32 0
  %1430 = load i32, i32* %1429, align 4
  br i1 %1428, label %1431, label %1433

1431:                                             ; preds = %1424
  %1432 = add i32 %1430, -1
  store i32 %1432, i32* %1429, align 4
  br label %1433

1433:                                             ; preds = %1431, %1424
  %1434 = phi i32 [ %1432, %1431 ], [ %1430, %1424 ]
  %1435 = icmp eq i32 %1434, 0
  br i1 %1435, label %1436, label %1437

1436:                                             ; preds = %1433
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1422) #15
  br label %1437

1437:                                             ; preds = %1418, %1433, %1436
  %1438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %1439 = icmp eq %"class.WTF::StringImpl"* %1438, null
  br i1 %1439, label %1457, label %1440

1440:                                             ; preds = %1437
  %1441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1442 = load atomic i32, i32* %1441 monotonic, align 4
  %1443 = and i32 %1442, 2
  %1444 = icmp eq i32 %1443, 0
  br i1 %1444, label %1445, label %1457

1445:                                             ; preds = %1440
  %1446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1438, i64 0, i32 0
  %1447 = load i32, i32* %1446, align 4
  %1448 = zext i32 %1447 to i33
  %1449 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1448, i33 1) #15
  %1450 = extractvalue { i33, i1 } %1449, 1
  %1451 = extractvalue { i33, i1 } %1449, 0
  %1452 = icmp slt i33 %1451, 0
  %1453 = or i1 %1450, %1452
  br i1 %1453, label %1454, label %1455, !prof !3

1454:                                             ; preds = %1445
  call void @llvm.trap() #15
  unreachable

1455:                                             ; preds = %1445
  %1456 = trunc i33 %1451 to i32
  store i32 %1456, i32* %1446, align 4
  br label %1457

1457:                                             ; preds = %1455, %1440, %1437
  %1458 = ptrtoint %"class.WTF::StringImpl"* %1438 to i64
  %1459 = bitcast %"class.blink::NameSource"* %1397 to i64*
  %1460 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1397, i64 0, i32 0, i32 0, i32 0
  %1461 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1460, align 8
  store i64 %1458, i64* %1459, align 8
  %1462 = icmp eq %"class.WTF::StringImpl"* %1461, null
  br i1 %1462, label %1476, label %1463

1463:                                             ; preds = %1457
  %1464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1461, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1465 = load atomic i32, i32* %1464 monotonic, align 4
  %1466 = and i32 %1465, 2
  %1467 = icmp eq i32 %1466, 0
  %1468 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1461, i64 0, i32 0
  %1469 = load i32, i32* %1468, align 4
  br i1 %1467, label %1470, label %1472

1470:                                             ; preds = %1463
  %1471 = add i32 %1469, -1
  store i32 %1471, i32* %1468, align 4
  br label %1472

1472:                                             ; preds = %1470, %1463
  %1473 = phi i32 [ %1471, %1470 ], [ %1469, %1463 ]
  %1474 = icmp eq i32 %1473, 0
  br i1 %1474, label %1475, label %1476

1475:                                             ; preds = %1472
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1461) #15
  br label %1476

1476:                                             ; preds = %1457, %1472, %1475
  store i8 1, i8* %5, align 1
  br label %1477

1477:                                             ; preds = %1354, %1476
  %1478 = phi i64* [ %1355, %1354 ], [ %1375, %1476 ]
  store i32 9, i32* %2, align 4
  %1479 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* nonnull %897) #15
  %1480 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %1479, i32 24773) #15
  %1481 = ptrtoint %"class.WTF::StringImpl"* %1480 to i64
  %1482 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %1481, i64* %1478, align 8
  %1483 = icmp eq %"class.WTF::StringImpl"* %1482, null
  br i1 %1483, label %1497, label %1484

1484:                                             ; preds = %1477
  %1485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1482, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1486 = load atomic i32, i32* %1485 monotonic, align 4
  %1487 = and i32 %1486, 2
  %1488 = icmp eq i32 %1487, 0
  %1489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1482, i64 0, i32 0
  %1490 = load i32, i32* %1489, align 4
  br i1 %1488, label %1491, label %1493

1491:                                             ; preds = %1484
  %1492 = add i32 %1490, -1
  store i32 %1492, i32* %1489, align 4
  br label %1493

1493:                                             ; preds = %1491, %1484
  %1494 = phi i32 [ %1492, %1491 ], [ %1490, %1484 ]
  %1495 = icmp eq i32 %1494, 0
  br i1 %1495, label %1496, label %1497

1496:                                             ; preds = %1493
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1482) #15
  br label %1497

1497:                                             ; preds = %1496, %1493, %1477
  br i1 %920, label %1498, label %1645

1498:                                             ; preds = %1497
  %1499 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %1500 = bitcast %"class.blink::NameSource"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1500) #15
  %1501 = load i8, i8* %5, align 1, !range !2
  %1502 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1502, align 8
  %1503 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %17, i64 0, i32 1
  store i8 %1501, i8* %1503, align 8
  %1504 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %17, i64 0, i32 2
  store i8 0, i8* %1504, align 1
  %1505 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %17, i64 0, i32 3
  store i32 1, i32* %1505, align 4
  %1506 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %17, i64 0, i32 4
  store %"class.blink::QualifiedName"* %898, %"class.blink::QualifiedName"** %1506, align 8
  %1507 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %17, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1507, align 8
  %1508 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %17, i64 0, i32 6
  store i32 -1, i32* %1508, align 8
  %1509 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %17, i64 0, i32 7
  %1510 = bitcast %"class.blink::HeapVector.3879"* %1509 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1510, i8 0, i64 16, i1 false) #15
  %1511 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %1512 = load i32, i32* %1511, align 4
  %1513 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %1514 = load i32, i32* %1513, align 8
  %1515 = icmp eq i32 %1512, %1514
  br i1 %1515, label %1525, label %1516, !prof !3

1516:                                             ; preds = %1498
  %1517 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %1518 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %1517, align 8
  %1519 = zext i32 %1512 to i64
  %1520 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1518, i64 %1519
  %1521 = bitcast %"class.blink::NameSource"* %1520 to i8*
  %1522 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %1521, %"class.blink::NameSource"* nonnull dereferenceable(56) %17) #15
  %1523 = load i32, i32* %1511, align 4
  %1524 = add i32 %1523, 1
  store i32 %1524, i32* %1511, align 4
  br label %1526

1525:                                             ; preds = %1498
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %1499, %"class.blink::NameSource"* nonnull dereferenceable(56) %17) #15
  br label %1526

1526:                                             ; preds = %1516, %1525
  %1527 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1507, align 8
  %1528 = icmp eq %"class.WTF::StringImpl"* %1527, null
  br i1 %1528, label %1542, label %1529

1529:                                             ; preds = %1526
  %1530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1527, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1531 = load atomic i32, i32* %1530 monotonic, align 4
  %1532 = and i32 %1531, 2
  %1533 = icmp eq i32 %1532, 0
  %1534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1527, i64 0, i32 0
  %1535 = load i32, i32* %1534, align 4
  br i1 %1533, label %1536, label %1538

1536:                                             ; preds = %1529
  %1537 = add i32 %1535, -1
  store i32 %1537, i32* %1534, align 4
  br label %1538

1538:                                             ; preds = %1536, %1529
  %1539 = phi i32 [ %1537, %1536 ], [ %1535, %1529 ]
  %1540 = icmp eq i32 %1539, 0
  br i1 %1540, label %1541, label %1542

1541:                                             ; preds = %1538
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1527) #15
  br label %1542

1542:                                             ; preds = %1541, %1538, %1526
  %1543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1502, align 8
  %1544 = icmp eq %"class.WTF::StringImpl"* %1543, null
  br i1 %1544, label %1558, label %1545

1545:                                             ; preds = %1542
  %1546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1543, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1547 = load atomic i32, i32* %1546 monotonic, align 4
  %1548 = and i32 %1547, 2
  %1549 = icmp eq i32 %1548, 0
  %1550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1543, i64 0, i32 0
  %1551 = load i32, i32* %1550, align 4
  br i1 %1549, label %1552, label %1554

1552:                                             ; preds = %1545
  %1553 = add i32 %1551, -1
  store i32 %1553, i32* %1550, align 4
  br label %1554

1554:                                             ; preds = %1552, %1545
  %1555 = phi i32 [ %1553, %1552 ], [ %1551, %1545 ]
  %1556 = icmp eq i32 %1555, 0
  br i1 %1556, label %1557, label %1558

1557:                                             ; preds = %1554
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1543) #15
  br label %1558

1558:                                             ; preds = %1542, %1554, %1557
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1500) #15
  %1559 = load i32, i32* %1511, align 4
  %1560 = add i32 %1559, -1
  %1561 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %1499, i32 %1560) #15
  %1562 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %897, %"class.blink::QualifiedName"* dereferenceable(8) %898) #15
  %1563 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1561, i64 0, i32 5
  %1564 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1562, i64 0, i32 0, i32 0, i32 0
  %1565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1564, align 8
  %1566 = icmp eq %"class.WTF::StringImpl"* %1565, null
  br i1 %1566, label %1584, label %1567

1567:                                             ; preds = %1558
  %1568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1565, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1569 = load atomic i32, i32* %1568 monotonic, align 4
  %1570 = and i32 %1569, 2
  %1571 = icmp eq i32 %1570, 0
  br i1 %1571, label %1572, label %1584

1572:                                             ; preds = %1567
  %1573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1565, i64 0, i32 0
  %1574 = load i32, i32* %1573, align 4
  %1575 = zext i32 %1574 to i33
  %1576 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1575, i33 1) #15
  %1577 = extractvalue { i33, i1 } %1576, 1
  %1578 = extractvalue { i33, i1 } %1576, 0
  %1579 = icmp slt i33 %1578, 0
  %1580 = or i1 %1577, %1579
  br i1 %1580, label %1581, label %1582, !prof !3

1581:                                             ; preds = %1572
  call void @llvm.trap() #15
  unreachable

1582:                                             ; preds = %1572
  %1583 = trunc i33 %1578 to i32
  store i32 %1583, i32* %1573, align 4
  br label %1584

1584:                                             ; preds = %1582, %1567, %1558
  %1585 = ptrtoint %"class.WTF::StringImpl"* %1565 to i64
  %1586 = bitcast %"class.WTF::AtomicString"* %1563 to i64*
  %1587 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1563, i64 0, i32 0, i32 0, i32 0
  %1588 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1587, align 8
  store i64 %1585, i64* %1586, align 8
  %1589 = icmp eq %"class.WTF::StringImpl"* %1588, null
  br i1 %1589, label %1603, label %1590

1590:                                             ; preds = %1584
  %1591 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1588, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1592 = load atomic i32, i32* %1591 monotonic, align 4
  %1593 = and i32 %1592, 2
  %1594 = icmp eq i32 %1593, 0
  %1595 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1588, i64 0, i32 0
  %1596 = load i32, i32* %1595, align 4
  br i1 %1594, label %1597, label %1599

1597:                                             ; preds = %1590
  %1598 = add i32 %1596, -1
  store i32 %1598, i32* %1595, align 4
  br label %1599

1599:                                             ; preds = %1597, %1590
  %1600 = phi i32 [ %1598, %1597 ], [ %1596, %1590 ]
  %1601 = icmp eq i32 %1600, 0
  br i1 %1601, label %1602, label %1603

1602:                                             ; preds = %1599
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1588) #15
  br label %1603

1603:                                             ; preds = %1584, %1599, %1602
  %1604 = load i32, i32* %2, align 4
  %1605 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1561, i64 0, i32 3
  store i32 %1604, i32* %1605, align 4
  %1606 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %1607 = icmp eq %"class.WTF::StringImpl"* %1606, null
  br i1 %1607, label %1625, label %1608

1608:                                             ; preds = %1603
  %1609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1606, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1610 = load atomic i32, i32* %1609 monotonic, align 4
  %1611 = and i32 %1610, 2
  %1612 = icmp eq i32 %1611, 0
  br i1 %1612, label %1613, label %1625

1613:                                             ; preds = %1608
  %1614 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1606, i64 0, i32 0
  %1615 = load i32, i32* %1614, align 4
  %1616 = zext i32 %1615 to i33
  %1617 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1616, i33 1) #15
  %1618 = extractvalue { i33, i1 } %1617, 1
  %1619 = extractvalue { i33, i1 } %1617, 0
  %1620 = icmp slt i33 %1619, 0
  %1621 = or i1 %1618, %1620
  br i1 %1621, label %1622, label %1623, !prof !3

1622:                                             ; preds = %1613
  call void @llvm.trap() #15
  unreachable

1623:                                             ; preds = %1613
  %1624 = trunc i33 %1619 to i32
  store i32 %1624, i32* %1614, align 4
  br label %1625

1625:                                             ; preds = %1623, %1608, %1603
  %1626 = ptrtoint %"class.WTF::StringImpl"* %1606 to i64
  %1627 = bitcast %"class.blink::NameSource"* %1561 to i64*
  %1628 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1561, i64 0, i32 0, i32 0, i32 0
  %1629 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1628, align 8
  store i64 %1626, i64* %1627, align 8
  %1630 = icmp eq %"class.WTF::StringImpl"* %1629, null
  br i1 %1630, label %1644, label %1631

1631:                                             ; preds = %1625
  %1632 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1629, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1633 = load atomic i32, i32* %1632 monotonic, align 4
  %1634 = and i32 %1633, 2
  %1635 = icmp eq i32 %1634, 0
  %1636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1629, i64 0, i32 0
  %1637 = load i32, i32* %1636, align 4
  br i1 %1635, label %1638, label %1640

1638:                                             ; preds = %1631
  %1639 = add i32 %1637, -1
  store i32 %1639, i32* %1636, align 4
  br label %1640

1640:                                             ; preds = %1638, %1631
  %1641 = phi i32 [ %1639, %1638 ], [ %1637, %1631 ]
  %1642 = icmp eq i32 %1641, 0
  br i1 %1642, label %1643, label %1644

1643:                                             ; preds = %1640
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1629) #15
  br label %1644

1644:                                             ; preds = %1625, %1640, %1643
  store i8 1, i8* %5, align 1
  br label %1645

1645:                                             ; preds = %1497, %1391, %1644
  %1646 = phi i64* [ %1478, %1644 ], [ %1375, %1391 ], [ %1478, %1497 ]
  %1647 = load i64, i64* %1646, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br i1 %1190, label %4594, label %1648

1648:                                             ; preds = %1272, %1645
  %1649 = phi i64 [ %1273, %1272 ], [ %1647, %1645 ]
  %1650 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1651 = load atomic i32, i32* %1650 monotonic, align 4
  %1652 = and i32 %1651, 2
  %1653 = icmp eq i32 %1652, 0
  %1654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1189, i64 0, i32 0
  %1655 = load i32, i32* %1654, align 4
  br i1 %1653, label %1656, label %1658

1656:                                             ; preds = %1648
  %1657 = add i32 %1655, -1
  store i32 %1657, i32* %1654, align 4
  br label %1658

1658:                                             ; preds = %1656, %1648
  %1659 = phi i32 [ %1657, %1656 ], [ %1655, %1648 ]
  %1660 = icmp eq i32 %1659, 0
  br i1 %1660, label %1661, label %4594

1661:                                             ; preds = %1658
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1189) #15
  br label %4594

1662:                                             ; preds = %467, %471, %474, %479, %896
  %1663 = phi i1 [ true, %896 ], [ false, %479 ], [ false, %474 ], [ false, %471 ], [ false, %467 ]
  %1664 = phi %"class.blink::HTMLInputElement"* [ %491, %896 ], [ null, %479 ], [ null, %474 ], [ null, %471 ], [ null, %467 ]
  br i1 %468, label %1665, label %1973

1665:                                             ; preds = %1662
  %1666 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %469, i64 0, i32 0
  %1667 = bitcast %"class.blink::HTMLElement"* %469 to i1 (%"class.blink::Element"*)***
  %1668 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1667, align 8
  %1669 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1668, i64 126
  %1670 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1669, align 8
  %1671 = call zeroext i1 %1670(%"class.blink::Element"* %1666) #15
  br i1 %1671, label %1672, label %1973

1672:                                             ; preds = %1665
  store i32 6, i32* %2, align 4
  %1673 = icmp ne %"class.blink::HeapVector.3890"* %4, null
  br i1 %1673, label %1674, label %1742

1674:                                             ; preds = %1672
  %1675 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %1676 = bitcast %"class.blink::NameSource"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1676) #15
  %1677 = load i8, i8* %5, align 1, !range !2
  %1678 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names16kPlaceholderAttrE to i64*), align 8
  %1679 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1679, align 8
  %1680 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %18, i64 0, i32 1
  store i8 %1677, i8* %1680, align 8
  %1681 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %18, i64 0, i32 2
  store i8 0, i8* %1681, align 1
  %1682 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %18, i64 0, i32 3
  store i32 1, i32* %1682, align 4
  %1683 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %18, i64 0, i32 4
  %1684 = bitcast %"class.blink::QualifiedName"** %1683 to i64*
  store i64 %1678, i64* %1684, align 8
  %1685 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %18, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1685, align 8
  %1686 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %18, i64 0, i32 6
  store i32 -1, i32* %1686, align 8
  %1687 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %18, i64 0, i32 7
  %1688 = bitcast %"class.blink::HeapVector.3879"* %1687 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1688, i8 0, i64 16, i1 false) #15
  %1689 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %1690 = load i32, i32* %1689, align 4
  %1691 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %1692 = load i32, i32* %1691, align 8
  %1693 = icmp eq i32 %1690, %1692
  br i1 %1693, label %1703, label %1694, !prof !3

1694:                                             ; preds = %1674
  %1695 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %1696 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %1695, align 8
  %1697 = zext i32 %1690 to i64
  %1698 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1696, i64 %1697
  %1699 = bitcast %"class.blink::NameSource"* %1698 to i8*
  %1700 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %1699, %"class.blink::NameSource"* nonnull dereferenceable(56) %18) #15
  %1701 = load i32, i32* %1689, align 4
  %1702 = add i32 %1701, 1
  store i32 %1702, i32* %1689, align 4
  br label %1704

1703:                                             ; preds = %1674
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %1675, %"class.blink::NameSource"* nonnull dereferenceable(56) %18) #15
  br label %1704

1704:                                             ; preds = %1694, %1703
  %1705 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1685, align 8
  %1706 = icmp eq %"class.WTF::StringImpl"* %1705, null
  br i1 %1706, label %1720, label %1707

1707:                                             ; preds = %1704
  %1708 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1705, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1709 = load atomic i32, i32* %1708 monotonic, align 4
  %1710 = and i32 %1709, 2
  %1711 = icmp eq i32 %1710, 0
  %1712 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1705, i64 0, i32 0
  %1713 = load i32, i32* %1712, align 4
  br i1 %1711, label %1714, label %1716

1714:                                             ; preds = %1707
  %1715 = add i32 %1713, -1
  store i32 %1715, i32* %1712, align 4
  br label %1716

1716:                                             ; preds = %1714, %1707
  %1717 = phi i32 [ %1715, %1714 ], [ %1713, %1707 ]
  %1718 = icmp eq i32 %1717, 0
  br i1 %1718, label %1719, label %1720

1719:                                             ; preds = %1716
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1705) #15
  br label %1720

1720:                                             ; preds = %1719, %1716, %1704
  %1721 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1679, align 8
  %1722 = icmp eq %"class.WTF::StringImpl"* %1721, null
  br i1 %1722, label %1736, label %1723

1723:                                             ; preds = %1720
  %1724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1721, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1725 = load atomic i32, i32* %1724 monotonic, align 4
  %1726 = and i32 %1725, 2
  %1727 = icmp eq i32 %1726, 0
  %1728 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1721, i64 0, i32 0
  %1729 = load i32, i32* %1728, align 4
  br i1 %1727, label %1730, label %1732

1730:                                             ; preds = %1723
  %1731 = add i32 %1729, -1
  store i32 %1731, i32* %1728, align 4
  br label %1732

1732:                                             ; preds = %1730, %1723
  %1733 = phi i32 [ %1731, %1730 ], [ %1729, %1723 ]
  %1734 = icmp eq i32 %1733, 0
  br i1 %1734, label %1735, label %1736

1735:                                             ; preds = %1732
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1721) #15
  br label %1736

1736:                                             ; preds = %1720, %1732, %1735
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1676) #15
  %1737 = load i32, i32* %1689, align 4
  %1738 = add i32 %1737, -1
  %1739 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %1675, i32 %1738) #15
  %1740 = load i32, i32* %2, align 4
  %1741 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1739, i64 0, i32 3
  store i32 %1740, i32* %1741, align 4
  br label %1742

1742:                                             ; preds = %1736, %1672
  %1743 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %1743, label %1973, label %1744

1744:                                             ; preds = %1742
  %1745 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %1746 = icmp eq %"class.blink::Node"* %1745, null
  br i1 %1746, label %1973, label %1747

1747:                                             ; preds = %1744
  %1748 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1745, i64 0, i32 1
  %1749 = load i32, i32* %1748, align 8
  %1750 = and i32 %1749, 12
  %1751 = icmp eq i32 %1750, 0
  br i1 %1751, label %1752, label %1973

1752:                                             ; preds = %1747
  %1753 = bitcast %"class.blink::Node"* %1745 to %"class.blink::Element"*
  %1754 = bitcast %"class.blink::Node"* %1745 to i1 (%"class.blink::Element"*)***
  %1755 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %1754, align 8
  %1756 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1755, i64 126
  %1757 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %1756, align 8
  %1758 = call zeroext i1 %1757(%"class.blink::Element"* nonnull %1753) #15
  br i1 %1758, label %1759, label %1973

1759:                                             ; preds = %1752
  %1760 = bitcast %"class.blink::Node"* %1745 to %"class.blink::TextControlElement"*
  %1761 = call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement19StrippedPlaceholderEv(%"class.blink::TextControlElement"* nonnull %1760) #15
  %1762 = icmp eq %"class.WTF::StringImpl"* %1761, null
  br i1 %1762, label %1973, label %1763

1763:                                             ; preds = %1759
  %1764 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1761, i64 0, i32 1
  %1765 = load i32, i32* %1764, align 4
  %1766 = icmp eq i32 %1765, 0
  br i1 %1766, label %1960, label %1767

1767:                                             ; preds = %1763
  %1768 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1761, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1769 = load atomic i32, i32* %1768 monotonic, align 4
  %1770 = and i32 %1769, 2
  %1771 = icmp eq i32 %1770, 0
  br i1 %1771, label %1772, label %1784

1772:                                             ; preds = %1767
  %1773 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1761, i64 0, i32 0
  %1774 = load i32, i32* %1773, align 4
  %1775 = zext i32 %1774 to i33
  %1776 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1775, i33 1) #15
  %1777 = extractvalue { i33, i1 } %1776, 1
  %1778 = extractvalue { i33, i1 } %1776, 0
  %1779 = icmp slt i33 %1778, 0
  %1780 = or i1 %1777, %1779
  br i1 %1780, label %1781, label %1782, !prof !3

1781:                                             ; preds = %1772
  call void @llvm.trap() #15
  unreachable

1782:                                             ; preds = %1772
  %1783 = trunc i33 %1778 to i32
  store i32 %1783, i32* %1773, align 4
  br label %1784

1784:                                             ; preds = %1782, %1767
  %1785 = ptrtoint %"class.WTF::StringImpl"* %1761 to i64
  %1786 = bitcast %"class.WTF::String"* %7 to i64*
  %1787 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %1785, i64* %1786, align 8
  %1788 = icmp eq %"class.WTF::StringImpl"* %1787, null
  br i1 %1788, label %1802, label %1789

1789:                                             ; preds = %1784
  %1790 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1787, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1791 = load atomic i32, i32* %1790 monotonic, align 4
  %1792 = and i32 %1791, 2
  %1793 = icmp eq i32 %1792, 0
  %1794 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1787, i64 0, i32 0
  %1795 = load i32, i32* %1794, align 4
  br i1 %1793, label %1796, label %1798

1796:                                             ; preds = %1789
  %1797 = add i32 %1795, -1
  store i32 %1797, i32* %1794, align 4
  br label %1798

1798:                                             ; preds = %1796, %1789
  %1799 = phi i32 [ %1797, %1796 ], [ %1795, %1789 ]
  %1800 = icmp eq i32 %1799, 0
  br i1 %1800, label %1801, label %1802

1801:                                             ; preds = %1798
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1787) #15
  br label %1802

1802:                                             ; preds = %1784, %1798, %1801
  br i1 %1673, label %1803, label %1946

1803:                                             ; preds = %1802
  %1804 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %1805 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %1806 = load i32, i32* %1805, align 4
  %1807 = add i32 %1806, -1
  %1808 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %1804, i32 %1807) #15
  %1809 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %1810 = icmp eq %"class.WTF::StringImpl"* %1809, null
  br i1 %1810, label %1828, label %1811

1811:                                             ; preds = %1803
  %1812 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1809, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1813 = load atomic i32, i32* %1812 monotonic, align 4
  %1814 = and i32 %1813, 2
  %1815 = icmp eq i32 %1814, 0
  br i1 %1815, label %1816, label %1828

1816:                                             ; preds = %1811
  %1817 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1809, i64 0, i32 0
  %1818 = load i32, i32* %1817, align 4
  %1819 = zext i32 %1818 to i33
  %1820 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1819, i33 1) #15
  %1821 = extractvalue { i33, i1 } %1820, 1
  %1822 = extractvalue { i33, i1 } %1820, 0
  %1823 = icmp slt i33 %1822, 0
  %1824 = or i1 %1821, %1823
  br i1 %1824, label %1825, label %1826, !prof !3

1825:                                             ; preds = %1816
  call void @llvm.trap() #15
  unreachable

1826:                                             ; preds = %1816
  %1827 = trunc i33 %1822 to i32
  store i32 %1827, i32* %1817, align 4
  br label %1828

1828:                                             ; preds = %1826, %1811, %1803
  %1829 = ptrtoint %"class.WTF::StringImpl"* %1809 to i64
  %1830 = bitcast %"class.blink::NameSource"* %1808 to i64*
  %1831 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1808, i64 0, i32 0, i32 0, i32 0
  %1832 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1831, align 8
  store i64 %1829, i64* %1830, align 8
  %1833 = icmp eq %"class.WTF::StringImpl"* %1832, null
  br i1 %1833, label %1847, label %1834

1834:                                             ; preds = %1828
  %1835 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1832, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1836 = load atomic i32, i32* %1835 monotonic, align 4
  %1837 = and i32 %1836, 2
  %1838 = icmp eq i32 %1837, 0
  %1839 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1832, i64 0, i32 0
  %1840 = load i32, i32* %1839, align 4
  br i1 %1838, label %1841, label %1843

1841:                                             ; preds = %1834
  %1842 = add i32 %1840, -1
  store i32 %1842, i32* %1839, align 4
  br label %1843

1843:                                             ; preds = %1841, %1834
  %1844 = phi i32 [ %1842, %1841 ], [ %1840, %1834 ]
  %1845 = icmp eq i32 %1844, 0
  br i1 %1845, label %1846, label %1847

1846:                                             ; preds = %1843
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1832) #15
  br label %1847

1847:                                             ; preds = %1828, %1843, %1846
  %1848 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kPlaceholderAttrE, align 8
  %1849 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %469, i64 0, i32 0, i32 3, i32 0, i32 0
  %1850 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %1849, align 8
  %1851 = icmp eq %"class.blink::ElementData"* %1850, null
  br i1 %1851, label %1902, label %1852

1852:                                             ; preds = %1847
  %1853 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1850, i64 0, i32 0, i32 0, i32 0
  %1854 = load i32, i32* %1853, align 4
  %1855 = and i32 %1854, 1
  %1856 = icmp eq i32 %1855, 0
  br i1 %1856, label %1864, label %1857

1857:                                             ; preds = %1852
  %1858 = bitcast %"class.blink::ElementData"* %1850 to %"class.blink::UniqueElementData"*
  %1859 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1850, i64 1, i32 1
  %1860 = bitcast %"class.blink::Member.354"* %1859 to %"class.blink::Attribute"**
  %1861 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %1860, align 8
  %1862 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %1858, i64 0, i32 2, i32 0, i32 0, i32 2
  %1863 = load i32, i32* %1862, align 4
  br label %1869

1864:                                             ; preds = %1852
  %1865 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1850, i64 1
  %1866 = bitcast %"class.blink::ElementData"* %1865 to %"class.blink::Attribute"*
  %1867 = lshr i32 %1854, 1
  %1868 = and i32 %1867, 268435455
  br label %1869

1869:                                             ; preds = %1864, %1857
  %1870 = phi %"class.blink::Attribute"* [ %1866, %1864 ], [ %1861, %1857 ]
  %1871 = phi i32 [ %1868, %1864 ], [ %1863, %1857 ]
  %1872 = zext i32 %1871 to i64
  %1873 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1870, i64 %1872
  %1874 = icmp eq i32 %1871, 0
  br i1 %1874, label %1902, label %1875

1875:                                             ; preds = %1869
  %1876 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1848, i64 0, i32 0, i32 0
  %1877 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1876, align 8
  %1878 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1877, i64 0, i32 3, i32 0, i32 0, i32 0
  %1879 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1877, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %1880

1880:                                             ; preds = %1895, %1875
  %1881 = phi %"class.blink::Attribute"* [ %1870, %1875 ], [ %1896, %1895 ]
  %1882 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1881, i64 0, i32 0, i32 0, i32 0
  %1883 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1882, align 8
  %1884 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %1883, %1877
  br i1 %1884, label %1898, label %1885

1885:                                             ; preds = %1880
  %1886 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1883, i64 0, i32 3, i32 0, i32 0, i32 0
  %1887 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1886, align 8
  %1888 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1878, align 8
  %1889 = icmp eq %"class.WTF::StringImpl"* %1887, %1888
  br i1 %1889, label %1890, label %1895

1890:                                             ; preds = %1885
  %1891 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1883, i64 0, i32 4, i32 0, i32 0, i32 0
  %1892 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1891, align 8
  %1893 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1879, align 8
  %1894 = icmp eq %"class.WTF::StringImpl"* %1892, %1893
  br i1 %1894, label %1898, label %1895

1895:                                             ; preds = %1890, %1885
  %1896 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1881, i64 1
  %1897 = icmp eq %"class.blink::Attribute"* %1896, %1873
  br i1 %1897, label %1902, label %1880

1898:                                             ; preds = %1890, %1880
  %1899 = icmp eq %"class.blink::Attribute"* %1881, null
  br i1 %1899, label %1902, label %1900

1900:                                             ; preds = %1898
  %1901 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1881, i64 0, i32 1
  br label %1904

1902:                                             ; preds = %1895, %1898, %1869, %1847
  %1903 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %1904

1904:                                             ; preds = %1900, %1902
  %1905 = phi %"class.WTF::AtomicString"* [ %1903, %1902 ], [ %1901, %1900 ]
  %1906 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1808, i64 0, i32 5
  %1907 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1905, i64 0, i32 0, i32 0, i32 0
  %1908 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1907, align 8
  %1909 = icmp eq %"class.WTF::StringImpl"* %1908, null
  br i1 %1909, label %1927, label %1910

1910:                                             ; preds = %1904
  %1911 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1908, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1912 = load atomic i32, i32* %1911 monotonic, align 4
  %1913 = and i32 %1912, 2
  %1914 = icmp eq i32 %1913, 0
  br i1 %1914, label %1915, label %1927

1915:                                             ; preds = %1910
  %1916 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1908, i64 0, i32 0
  %1917 = load i32, i32* %1916, align 4
  %1918 = zext i32 %1917 to i33
  %1919 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1918, i33 1) #15
  %1920 = extractvalue { i33, i1 } %1919, 1
  %1921 = extractvalue { i33, i1 } %1919, 0
  %1922 = icmp slt i33 %1921, 0
  %1923 = or i1 %1920, %1922
  br i1 %1923, label %1924, label %1925, !prof !3

1924:                                             ; preds = %1915
  call void @llvm.trap() #15
  unreachable

1925:                                             ; preds = %1915
  %1926 = trunc i33 %1921 to i32
  store i32 %1926, i32* %1916, align 4
  br label %1927

1927:                                             ; preds = %1925, %1910, %1904
  %1928 = ptrtoint %"class.WTF::StringImpl"* %1908 to i64
  %1929 = bitcast %"class.WTF::AtomicString"* %1906 to i64*
  %1930 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1906, i64 0, i32 0, i32 0, i32 0
  %1931 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1930, align 8
  store i64 %1928, i64* %1929, align 8
  %1932 = icmp eq %"class.WTF::StringImpl"* %1931, null
  br i1 %1932, label %1959, label %1933

1933:                                             ; preds = %1927
  %1934 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1931, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1935 = load atomic i32, i32* %1934 monotonic, align 4
  %1936 = and i32 %1935, 2
  %1937 = icmp eq i32 %1936, 0
  %1938 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1931, i64 0, i32 0
  %1939 = load i32, i32* %1938, align 4
  br i1 %1937, label %1940, label %1942

1940:                                             ; preds = %1933
  %1941 = add i32 %1939, -1
  store i32 %1941, i32* %1938, align 4
  br label %1942

1942:                                             ; preds = %1940, %1933
  %1943 = phi i32 [ %1941, %1940 ], [ %1939, %1933 ]
  %1944 = icmp eq i32 %1943, 0
  br i1 %1944, label %1945, label %1959

1945:                                             ; preds = %1942
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1931) #15
  br label %1959

1946:                                             ; preds = %1802
  %1947 = load i64, i64* %1786, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  %1948 = load atomic i32, i32* %1768 monotonic, align 4
  %1949 = and i32 %1948, 2
  %1950 = icmp eq i32 %1949, 0
  %1951 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1761, i64 0, i32 0
  %1952 = load i32, i32* %1951, align 4
  br i1 %1950, label %1953, label %1955

1953:                                             ; preds = %1946
  %1954 = add i32 %1952, -1
  store i32 %1954, i32* %1951, align 4
  br label %1955

1955:                                             ; preds = %1953, %1946
  %1956 = phi i32 [ %1954, %1953 ], [ %1952, %1946 ]
  %1957 = icmp eq i32 %1956, 0
  br i1 %1957, label %1958, label %4594

1958:                                             ; preds = %1955
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1761) #15
  br label %4594

1959:                                             ; preds = %1945, %1942, %1927
  store i8 1, i8* %5, align 1
  br label %1960

1960:                                             ; preds = %1959, %1763
  %1961 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1761, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1962 = load atomic i32, i32* %1961 monotonic, align 4
  %1963 = and i32 %1962, 2
  %1964 = icmp eq i32 %1963, 0
  %1965 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1761, i64 0, i32 0
  %1966 = load i32, i32* %1965, align 4
  br i1 %1964, label %1967, label %1969

1967:                                             ; preds = %1960
  %1968 = add i32 %1966, -1
  store i32 %1968, i32* %1965, align 4
  br label %1969

1969:                                             ; preds = %1967, %1960
  %1970 = phi i32 [ %1968, %1967 ], [ %1966, %1960 ]
  %1971 = icmp eq i32 %1970, 0
  br i1 %1971, label %1972, label %1973

1972:                                             ; preds = %1969
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1761) #15
  br label %1973

1973:                                             ; preds = %1759, %1744, %1752, %1742, %1747, %1972, %1969, %1665, %1662
  br i1 %1663, label %1974, label %2348

1974:                                             ; preds = %1973
  %1975 = bitcast %"class.blink::HTMLInputElement"* %1664 to %"class.blink::HTMLFormControlElement"*
  %1976 = bitcast %"class.blink::HTMLInputElement"* %1664 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %1977 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %1976, align 8
  %1978 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %1977, i64 171
  %1979 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %1978, align 8
  %1980 = call dereferenceable(8) %"class.WTF::AtomicString"* %1979(%"class.blink::HTMLFormControlElement"* %1975) #15
  %1981 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kFileE, align 8
  %1982 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1980, i64 0, i32 0, i32 0, i32 0
  %1983 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1982, align 8
  %1984 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1981, i64 0, i32 0, i32 0, i32 0
  %1985 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1984, align 8
  %1986 = icmp eq %"class.WTF::StringImpl"* %1983, %1985
  br i1 %1986, label %1987, label %2348

1987:                                             ; preds = %1974
  store i32 9, i32* %2, align 4
  %1988 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)***
  %1989 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)*** %1988, align 8
  %1990 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)** %1989, i64 98
  %1991 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*)** %1990, align 8
  %1992 = call %"class.WTF::StringImpl"* %1991(%"class.blink::AXNodeObject"* %0) #15
  %1993 = call %"class.blink::HTMLInputElement"* @_ZNK5blink16HTMLInputElement12UploadButtonEv(%"class.blink::HTMLInputElement"* nonnull %1664) #15
  %1994 = bitcast %"class.blink::HTMLInputElement"* %1993 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %1995 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %1994, align 8
  %1996 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %1995, i64 195
  %1997 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %1996, align 8
  %1998 = call %"class.WTF::StringImpl"* %1997(%"class.blink::HTMLInputElement"* %1993) #15
  %1999 = icmp eq %"class.WTF::StringImpl"* %1992, null
  br i1 %1999, label %2141, label %2000

2000:                                             ; preds = %1987
  %2001 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1992, i64 0, i32 1
  %2002 = load i32, i32* %2001, align 4
  %2003 = icmp eq i32 %2002, 0
  br i1 %2003, label %2141, label %2004

2004:                                             ; preds = %2000
  %2005 = bitcast %"class.WTF::StringAppend"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2005) #15
  %2006 = bitcast %"class.WTF::StringAppend.3878"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2006) #15
  %2007 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1992, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2008 = load atomic i32, i32* %2007 monotonic, align 4
  %2009 = and i32 %2008, 2
  %2010 = icmp eq i32 %2009, 0
  %2011 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1992, i64 0, i32 0
  %2012 = load i32, i32* %2011, align 4
  br i1 %2010, label %2013, label %2023

2013:                                             ; preds = %2004
  %2014 = zext i32 %2012 to i33
  %2015 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2014, i33 1) #15
  %2016 = extractvalue { i33, i1 } %2015, 1
  %2017 = extractvalue { i33, i1 } %2015, 0
  %2018 = icmp slt i33 %2017, 0
  %2019 = or i1 %2016, %2018
  br i1 %2019, label %2020, label %2021, !prof !3

2020:                                             ; preds = %2013
  call void @llvm.trap() #15
  unreachable

2021:                                             ; preds = %2013
  %2022 = trunc i33 %2017 to i32
  store i32 %2022, i32* %2011, align 4
  br label %2023

2023:                                             ; preds = %2004, %2021
  %2024 = phi i32 [ %2022, %2021 ], [ %2012, %2004 ]
  %2025 = load atomic i32, i32* %2007 monotonic, align 4
  %2026 = and i32 %2025, 2
  %2027 = icmp eq i32 %2026, 0
  %2028 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1992, i64 0, i32 0
  br i1 %2027, label %2029, label %2039

2029:                                             ; preds = %2023
  %2030 = zext i32 %2024 to i33
  %2031 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2030, i33 1) #15
  %2032 = extractvalue { i33, i1 } %2031, 1
  %2033 = extractvalue { i33, i1 } %2031, 0
  %2034 = icmp slt i33 %2033, 0
  %2035 = or i1 %2032, %2034
  br i1 %2035, label %2036, label %2037, !prof !3

2036:                                             ; preds = %2029
  call void @llvm.trap() #15
  unreachable

2037:                                             ; preds = %2029
  %2038 = trunc i33 %2033 to i32
  store i32 %2038, i32* %2028, align 4
  br label %2039

2039:                                             ; preds = %2037, %2023
  %2040 = phi i32 [ %2038, %2037 ], [ %2024, %2023 ]
  %2041 = load atomic i32, i32* %2007 monotonic, align 4
  %2042 = and i32 %2041, 2
  %2043 = icmp eq i32 %2042, 0
  br i1 %2043, label %2044, label %2046

2044:                                             ; preds = %2039
  %2045 = add i32 %2040, -1
  store i32 %2045, i32* %2028, align 4
  br label %2046

2046:                                             ; preds = %2044, %2039
  %2047 = phi i32 [ %2045, %2044 ], [ %2040, %2039 ]
  %2048 = icmp eq i32 %2047, 0
  br i1 %2048, label %2049, label %2050

2049:                                             ; preds = %2046
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1992) #15
  br label %2050

2050:                                             ; preds = %2046, %2049
  %2051 = getelementptr inbounds %"class.WTF::StringAppend.3878", %"class.WTF::StringAppend.3878"* %20, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1992, %"class.WTF::StringImpl"** %2051, align 8
  %2052 = getelementptr inbounds %"class.WTF::StringAppend.3878", %"class.WTF::StringAppend.3878"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0), i8** %2052, align 8
  %2053 = icmp eq %"class.WTF::StringImpl"* %1998, null
  br i1 %2053, label %2071, label %2054

2054:                                             ; preds = %2050
  %2055 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1998, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2056 = load atomic i32, i32* %2055 monotonic, align 4
  %2057 = and i32 %2056, 2
  %2058 = icmp eq i32 %2057, 0
  br i1 %2058, label %2059, label %2071

2059:                                             ; preds = %2054
  %2060 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1998, i64 0, i32 0
  %2061 = load i32, i32* %2060, align 4
  %2062 = zext i32 %2061 to i33
  %2063 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2062, i33 1) #15
  %2064 = extractvalue { i33, i1 } %2063, 1
  %2065 = extractvalue { i33, i1 } %2063, 0
  %2066 = icmp slt i33 %2065, 0
  %2067 = or i1 %2064, %2066
  br i1 %2067, label %2068, label %2069, !prof !3

2068:                                             ; preds = %2059
  call void @llvm.trap() #15
  unreachable

2069:                                             ; preds = %2059
  %2070 = trunc i33 %2065 to i32
  store i32 %2070, i32* %2060, align 4
  br label %2071

2071:                                             ; preds = %2050, %2054, %2069
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %19, %"class.WTF::StringAppend.3878"* nonnull dereferenceable(16) %20, %"class.WTF::StringImpl"* %1998)
  %2072 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %19)
  %2073 = ptrtoint %"class.WTF::StringImpl"* %2072 to i64
  %2074 = bitcast %"class.WTF::String"* %7 to i64*
  %2075 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %2073, i64* %2074, align 8
  %2076 = icmp eq %"class.WTF::StringImpl"* %2075, null
  br i1 %2076, label %2090, label %2077

2077:                                             ; preds = %2071
  %2078 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2075, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2079 = load atomic i32, i32* %2078 monotonic, align 4
  %2080 = and i32 %2079, 2
  %2081 = icmp eq i32 %2080, 0
  %2082 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2075, i64 0, i32 0
  %2083 = load i32, i32* %2082, align 4
  br i1 %2081, label %2084, label %2086

2084:                                             ; preds = %2077
  %2085 = add i32 %2083, -1
  store i32 %2085, i32* %2082, align 4
  br label %2086

2086:                                             ; preds = %2084, %2077
  %2087 = phi i32 [ %2085, %2084 ], [ %2083, %2077 ]
  %2088 = icmp eq i32 %2087, 0
  br i1 %2088, label %2089, label %2090

2089:                                             ; preds = %2086
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2075) #15
  br label %2090

2090:                                             ; preds = %2089, %2086, %2071
  %2091 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 1, i32 0, i32 0
  %2092 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2091, align 8
  %2093 = icmp eq %"class.WTF::StringImpl"* %2092, null
  br i1 %2093, label %2107, label %2094

2094:                                             ; preds = %2090
  %2095 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2092, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2096 = load atomic i32, i32* %2095 monotonic, align 4
  %2097 = and i32 %2096, 2
  %2098 = icmp eq i32 %2097, 0
  %2099 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2092, i64 0, i32 0
  %2100 = load i32, i32* %2099, align 4
  br i1 %2098, label %2101, label %2103

2101:                                             ; preds = %2094
  %2102 = add i32 %2100, -1
  store i32 %2102, i32* %2099, align 4
  br label %2103

2103:                                             ; preds = %2101, %2094
  %2104 = phi i32 [ %2102, %2101 ], [ %2100, %2094 ]
  %2105 = icmp eq i32 %2104, 0
  br i1 %2105, label %2106, label %2107

2106:                                             ; preds = %2103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2092) #15
  br label %2107

2107:                                             ; preds = %2106, %2103, %2090
  %2108 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %2109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2108, align 8
  %2110 = icmp eq %"class.WTF::StringImpl"* %2109, null
  br i1 %2110, label %2124, label %2111

2111:                                             ; preds = %2107
  %2112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2113 = load atomic i32, i32* %2112 monotonic, align 4
  %2114 = and i32 %2113, 2
  %2115 = icmp eq i32 %2114, 0
  %2116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2109, i64 0, i32 0
  %2117 = load i32, i32* %2116, align 4
  br i1 %2115, label %2118, label %2120

2118:                                             ; preds = %2111
  %2119 = add i32 %2117, -1
  store i32 %2119, i32* %2116, align 4
  br label %2120

2120:                                             ; preds = %2118, %2111
  %2121 = phi i32 [ %2119, %2118 ], [ %2117, %2111 ]
  %2122 = icmp eq i32 %2121, 0
  br i1 %2122, label %2123, label %2124

2123:                                             ; preds = %2120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2109) #15
  br label %2124

2124:                                             ; preds = %2107, %2120, %2123
  %2125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2051, align 8
  %2126 = icmp eq %"class.WTF::StringImpl"* %2125, null
  br i1 %2126, label %2140, label %2127

2127:                                             ; preds = %2124
  %2128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2129 = load atomic i32, i32* %2128 monotonic, align 4
  %2130 = and i32 %2129, 2
  %2131 = icmp eq i32 %2130, 0
  %2132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2125, i64 0, i32 0
  %2133 = load i32, i32* %2132, align 4
  br i1 %2131, label %2134, label %2136

2134:                                             ; preds = %2127
  %2135 = add i32 %2133, -1
  store i32 %2135, i32* %2132, align 4
  br label %2136

2136:                                             ; preds = %2134, %2127
  %2137 = phi i32 [ %2135, %2134 ], [ %2133, %2127 ]
  %2138 = icmp eq i32 %2137, 0
  br i1 %2138, label %2139, label %2140

2139:                                             ; preds = %2136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2125) #15
  br label %2140

2140:                                             ; preds = %2124, %2136, %2139
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2006) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2005) #15
  br label %2178

2141:                                             ; preds = %1987, %2000
  %2142 = icmp eq %"class.WTF::StringImpl"* %1998, null
  br i1 %2142, label %2160, label %2143

2143:                                             ; preds = %2141
  %2144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1998, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2145 = load atomic i32, i32* %2144 monotonic, align 4
  %2146 = and i32 %2145, 2
  %2147 = icmp eq i32 %2146, 0
  br i1 %2147, label %2148, label %2160

2148:                                             ; preds = %2143
  %2149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1998, i64 0, i32 0
  %2150 = load i32, i32* %2149, align 4
  %2151 = zext i32 %2150 to i33
  %2152 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2151, i33 1) #15
  %2153 = extractvalue { i33, i1 } %2152, 1
  %2154 = extractvalue { i33, i1 } %2152, 0
  %2155 = icmp slt i33 %2154, 0
  %2156 = or i1 %2153, %2155
  br i1 %2156, label %2157, label %2158, !prof !3

2157:                                             ; preds = %2148
  call void @llvm.trap() #15
  unreachable

2158:                                             ; preds = %2148
  %2159 = trunc i33 %2154 to i32
  store i32 %2159, i32* %2149, align 4
  br label %2160

2160:                                             ; preds = %2158, %2143, %2141
  %2161 = ptrtoint %"class.WTF::StringImpl"* %1998 to i64
  %2162 = bitcast %"class.WTF::String"* %7 to i64*
  %2163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %2161, i64* %2162, align 8
  %2164 = icmp eq %"class.WTF::StringImpl"* %2163, null
  br i1 %2164, label %2178, label %2165

2165:                                             ; preds = %2160
  %2166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2167 = load atomic i32, i32* %2166 monotonic, align 4
  %2168 = and i32 %2167, 2
  %2169 = icmp eq i32 %2168, 0
  %2170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2163, i64 0, i32 0
  %2171 = load i32, i32* %2170, align 4
  br i1 %2169, label %2172, label %2174

2172:                                             ; preds = %2165
  %2173 = add i32 %2171, -1
  store i32 %2173, i32* %2170, align 4
  br label %2174

2174:                                             ; preds = %2172, %2165
  %2175 = phi i32 [ %2173, %2172 ], [ %2171, %2165 ]
  %2176 = icmp eq i32 %2175, 0
  br i1 %2176, label %2177, label %2178

2177:                                             ; preds = %2174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2163) #15
  br label %2178

2178:                                             ; preds = %2177, %2174, %2160, %2140
  store i8 1, i8* %5, align 1
  %2179 = icmp eq %"class.blink::HeapVector.3890"* %4, null
  br i1 %2179, label %2317, label %2180

2180:                                             ; preds = %2178
  %2181 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %2182 = bitcast %"class.blink::NameSource"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2182) #15
  %2183 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE to i64*), align 8
  %2184 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %21, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2184, align 8
  %2185 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %21, i64 0, i32 1
  store i8 1, i8* %2185, align 8
  %2186 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %21, i64 0, i32 2
  store i8 0, i8* %2186, align 1
  %2187 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %21, i64 0, i32 3
  store i32 1, i32* %2187, align 4
  %2188 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %21, i64 0, i32 4
  %2189 = bitcast %"class.blink::QualifiedName"** %2188 to i64*
  store i64 %2183, i64* %2189, align 8
  %2190 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %21, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2190, align 8
  %2191 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %21, i64 0, i32 6
  store i32 -1, i32* %2191, align 8
  %2192 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %21, i64 0, i32 7
  %2193 = bitcast %"class.blink::HeapVector.3879"* %2192 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2193, i8 0, i64 16, i1 false) #15
  %2194 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %2195 = load i32, i32* %2194, align 4
  %2196 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %2197 = load i32, i32* %2196, align 8
  %2198 = icmp eq i32 %2195, %2197
  br i1 %2198, label %2208, label %2199, !prof !3

2199:                                             ; preds = %2180
  %2200 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %2201 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %2200, align 8
  %2202 = zext i32 %2195 to i64
  %2203 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2201, i64 %2202
  %2204 = bitcast %"class.blink::NameSource"* %2203 to i8*
  %2205 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %2204, %"class.blink::NameSource"* nonnull dereferenceable(56) %21) #15
  %2206 = load i32, i32* %2194, align 4
  %2207 = add i32 %2206, 1
  store i32 %2207, i32* %2194, align 4
  br label %2209

2208:                                             ; preds = %2180
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %2181, %"class.blink::NameSource"* nonnull dereferenceable(56) %21) #15
  br label %2209

2209:                                             ; preds = %2199, %2208
  %2210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2190, align 8
  %2211 = icmp eq %"class.WTF::StringImpl"* %2210, null
  br i1 %2211, label %2225, label %2212

2212:                                             ; preds = %2209
  %2213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2214 = load atomic i32, i32* %2213 monotonic, align 4
  %2215 = and i32 %2214, 2
  %2216 = icmp eq i32 %2215, 0
  %2217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2210, i64 0, i32 0
  %2218 = load i32, i32* %2217, align 4
  br i1 %2216, label %2219, label %2221

2219:                                             ; preds = %2212
  %2220 = add i32 %2218, -1
  store i32 %2220, i32* %2217, align 4
  br label %2221

2221:                                             ; preds = %2219, %2212
  %2222 = phi i32 [ %2220, %2219 ], [ %2218, %2212 ]
  %2223 = icmp eq i32 %2222, 0
  br i1 %2223, label %2224, label %2225

2224:                                             ; preds = %2221
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2210) #15
  br label %2225

2225:                                             ; preds = %2224, %2221, %2209
  %2226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2184, align 8
  %2227 = icmp eq %"class.WTF::StringImpl"* %2226, null
  br i1 %2227, label %2241, label %2228

2228:                                             ; preds = %2225
  %2229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2230 = load atomic i32, i32* %2229 monotonic, align 4
  %2231 = and i32 %2230, 2
  %2232 = icmp eq i32 %2231, 0
  %2233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2226, i64 0, i32 0
  %2234 = load i32, i32* %2233, align 4
  br i1 %2232, label %2235, label %2237

2235:                                             ; preds = %2228
  %2236 = add i32 %2234, -1
  store i32 %2236, i32* %2233, align 4
  br label %2237

2237:                                             ; preds = %2235, %2228
  %2238 = phi i32 [ %2236, %2235 ], [ %2234, %2228 ]
  %2239 = icmp eq i32 %2238, 0
  br i1 %2239, label %2240, label %2241

2240:                                             ; preds = %2237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2226) #15
  br label %2241

2241:                                             ; preds = %2225, %2237, %2240
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2182) #15
  %2242 = load i32, i32* %2, align 4
  %2243 = load i32, i32* %2194, align 4
  %2244 = add i32 %2243, -1
  %2245 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %2181, i32 %2244) #15
  %2246 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2245, i64 0, i32 3
  store i32 %2242, i32* %2246, align 4
  %2247 = load i32, i32* %2194, align 4
  %2248 = add i32 %2247, -1
  %2249 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %2181, i32 %2248) #15
  %2250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %2251 = icmp eq %"class.WTF::StringImpl"* %2250, null
  br i1 %2251, label %2269, label %2252

2252:                                             ; preds = %2241
  %2253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2254 = load atomic i32, i32* %2253 monotonic, align 4
  %2255 = and i32 %2254, 2
  %2256 = icmp eq i32 %2255, 0
  br i1 %2256, label %2257, label %2269

2257:                                             ; preds = %2252
  %2258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2250, i64 0, i32 0
  %2259 = load i32, i32* %2258, align 4
  %2260 = zext i32 %2259 to i33
  %2261 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2260, i33 1) #15
  %2262 = extractvalue { i33, i1 } %2261, 1
  %2263 = extractvalue { i33, i1 } %2261, 0
  %2264 = icmp slt i33 %2263, 0
  %2265 = or i1 %2262, %2264
  br i1 %2265, label %2266, label %2267, !prof !3

2266:                                             ; preds = %2257
  call void @llvm.trap() #15
  unreachable

2267:                                             ; preds = %2257
  %2268 = trunc i33 %2263 to i32
  store i32 %2268, i32* %2258, align 4
  br label %2269

2269:                                             ; preds = %2267, %2252, %2241
  %2270 = ptrtoint %"class.WTF::StringImpl"* %2250 to i64
  %2271 = bitcast %"class.blink::NameSource"* %2249 to i64*
  %2272 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2249, i64 0, i32 0, i32 0, i32 0
  %2273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2272, align 8
  store i64 %2270, i64* %2271, align 8
  %2274 = icmp eq %"class.WTF::StringImpl"* %2273, null
  br i1 %2274, label %2288, label %2275

2275:                                             ; preds = %2269
  %2276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2277 = load atomic i32, i32* %2276 monotonic, align 4
  %2278 = and i32 %2277, 2
  %2279 = icmp eq i32 %2278, 0
  %2280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2273, i64 0, i32 0
  %2281 = load i32, i32* %2280, align 4
  br i1 %2279, label %2282, label %2284

2282:                                             ; preds = %2275
  %2283 = add i32 %2281, -1
  store i32 %2283, i32* %2280, align 4
  br label %2284

2284:                                             ; preds = %2282, %2275
  %2285 = phi i32 [ %2283, %2282 ], [ %2281, %2275 ]
  %2286 = icmp eq i32 %2285, 0
  br i1 %2286, label %2287, label %2288

2287:                                             ; preds = %2284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2273) #15
  br label %2288

2288:                                             ; preds = %2269, %2284, %2287
  %2289 = icmp eq %"class.WTF::StringImpl"* %1998, null
  br i1 %2289, label %2303, label %2290

2290:                                             ; preds = %2288
  %2291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1998, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2292 = load atomic i32, i32* %2291 monotonic, align 4
  %2293 = and i32 %2292, 2
  %2294 = icmp eq i32 %2293, 0
  %2295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1998, i64 0, i32 0
  %2296 = load i32, i32* %2295, align 4
  br i1 %2294, label %2297, label %2299

2297:                                             ; preds = %2290
  %2298 = add i32 %2296, -1
  store i32 %2298, i32* %2295, align 4
  br label %2299

2299:                                             ; preds = %2297, %2290
  %2300 = phi i32 [ %2298, %2297 ], [ %2296, %2290 ]
  %2301 = icmp eq i32 %2300, 0
  br i1 %2301, label %2302, label %2303

2302:                                             ; preds = %2299
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1998) #15
  br label %2303

2303:                                             ; preds = %2288, %2299, %2302
  br i1 %1999, label %2348, label %2304

2304:                                             ; preds = %2303
  %2305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1992, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2306 = load atomic i32, i32* %2305 monotonic, align 4
  %2307 = and i32 %2306, 2
  %2308 = icmp eq i32 %2307, 0
  %2309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1992, i64 0, i32 0
  %2310 = load i32, i32* %2309, align 4
  br i1 %2308, label %2311, label %2313

2311:                                             ; preds = %2304
  %2312 = add i32 %2310, -1
  store i32 %2312, i32* %2309, align 4
  br label %2313

2313:                                             ; preds = %2311, %2304
  %2314 = phi i32 [ %2312, %2311 ], [ %2310, %2304 ]
  %2315 = icmp eq i32 %2314, 0
  br i1 %2315, label %2316, label %2348

2316:                                             ; preds = %2313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1992) #15
  br label %2348

2317:                                             ; preds = %2178
  %2318 = bitcast %"class.WTF::String"* %7 to i64*
  %2319 = load i64, i64* %2318, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  %2320 = icmp eq %"class.WTF::StringImpl"* %1998, null
  br i1 %2320, label %2334, label %2321

2321:                                             ; preds = %2317
  %2322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1998, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2323 = load atomic i32, i32* %2322 monotonic, align 4
  %2324 = and i32 %2323, 2
  %2325 = icmp eq i32 %2324, 0
  %2326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1998, i64 0, i32 0
  %2327 = load i32, i32* %2326, align 4
  br i1 %2325, label %2328, label %2330

2328:                                             ; preds = %2321
  %2329 = add i32 %2327, -1
  store i32 %2329, i32* %2326, align 4
  br label %2330

2330:                                             ; preds = %2328, %2321
  %2331 = phi i32 [ %2329, %2328 ], [ %2327, %2321 ]
  %2332 = icmp eq i32 %2331, 0
  br i1 %2332, label %2333, label %2334

2333:                                             ; preds = %2330
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1998) #15
  br label %2334

2334:                                             ; preds = %2317, %2330, %2333
  br i1 %1999, label %4594, label %2335

2335:                                             ; preds = %2334
  %2336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1992, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2337 = load atomic i32, i32* %2336 monotonic, align 4
  %2338 = and i32 %2337, 2
  %2339 = icmp eq i32 %2338, 0
  %2340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1992, i64 0, i32 0
  %2341 = load i32, i32* %2340, align 4
  br i1 %2339, label %2342, label %2344

2342:                                             ; preds = %2335
  %2343 = add i32 %2341, -1
  store i32 %2343, i32* %2340, align 4
  br label %2344

2344:                                             ; preds = %2342, %2335
  %2345 = phi i32 [ %2343, %2342 ], [ %2341, %2335 ]
  %2346 = icmp eq i32 %2345, 0
  br i1 %2346, label %2347, label %4594

2347:                                             ; preds = %2344
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1992) #15
  br label %4594

2348:                                             ; preds = %2316, %2313, %2303, %1974, %1973
  %2349 = call zeroext i1 @_ZNK5blink8AXObject11IsTextFieldEv(%"class.blink::AXObject"* %40) #15
  br i1 %2349, label %2350, label %2559

2350:                                             ; preds = %2348
  store i32 6, i32* %2, align 4
  %2351 = icmp ne %"class.blink::HeapVector.3890"* %4, null
  br i1 %2351, label %2352, label %2420

2352:                                             ; preds = %2350
  %2353 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %2354 = bitcast %"class.blink::NameSource"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2354) #15
  %2355 = load i8, i8* %5, align 1, !range !2
  %2356 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaPlaceholderAttrE to i64*), align 8
  %2357 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %22, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2357, align 8
  %2358 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %22, i64 0, i32 1
  store i8 %2355, i8* %2358, align 8
  %2359 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %22, i64 0, i32 2
  store i8 0, i8* %2359, align 1
  %2360 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %22, i64 0, i32 3
  store i32 1, i32* %2360, align 4
  %2361 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %22, i64 0, i32 4
  %2362 = bitcast %"class.blink::QualifiedName"** %2361 to i64*
  store i64 %2356, i64* %2362, align 8
  %2363 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %22, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2363, align 8
  %2364 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %22, i64 0, i32 6
  store i32 -1, i32* %2364, align 8
  %2365 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %22, i64 0, i32 7
  %2366 = bitcast %"class.blink::HeapVector.3879"* %2365 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2366, i8 0, i64 16, i1 false) #15
  %2367 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %2368 = load i32, i32* %2367, align 4
  %2369 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %2370 = load i32, i32* %2369, align 8
  %2371 = icmp eq i32 %2368, %2370
  br i1 %2371, label %2381, label %2372, !prof !3

2372:                                             ; preds = %2352
  %2373 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %2374 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %2373, align 8
  %2375 = zext i32 %2368 to i64
  %2376 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2374, i64 %2375
  %2377 = bitcast %"class.blink::NameSource"* %2376 to i8*
  %2378 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %2377, %"class.blink::NameSource"* nonnull dereferenceable(56) %22) #15
  %2379 = load i32, i32* %2367, align 4
  %2380 = add i32 %2379, 1
  store i32 %2380, i32* %2367, align 4
  br label %2382

2381:                                             ; preds = %2352
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %2353, %"class.blink::NameSource"* nonnull dereferenceable(56) %22) #15
  br label %2382

2382:                                             ; preds = %2372, %2381
  %2383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2363, align 8
  %2384 = icmp eq %"class.WTF::StringImpl"* %2383, null
  br i1 %2384, label %2398, label %2385

2385:                                             ; preds = %2382
  %2386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2387 = load atomic i32, i32* %2386 monotonic, align 4
  %2388 = and i32 %2387, 2
  %2389 = icmp eq i32 %2388, 0
  %2390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2383, i64 0, i32 0
  %2391 = load i32, i32* %2390, align 4
  br i1 %2389, label %2392, label %2394

2392:                                             ; preds = %2385
  %2393 = add i32 %2391, -1
  store i32 %2393, i32* %2390, align 4
  br label %2394

2394:                                             ; preds = %2392, %2385
  %2395 = phi i32 [ %2393, %2392 ], [ %2391, %2385 ]
  %2396 = icmp eq i32 %2395, 0
  br i1 %2396, label %2397, label %2398

2397:                                             ; preds = %2394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2383) #15
  br label %2398

2398:                                             ; preds = %2397, %2394, %2382
  %2399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2357, align 8
  %2400 = icmp eq %"class.WTF::StringImpl"* %2399, null
  br i1 %2400, label %2414, label %2401

2401:                                             ; preds = %2398
  %2402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2403 = load atomic i32, i32* %2402 monotonic, align 4
  %2404 = and i32 %2403, 2
  %2405 = icmp eq i32 %2404, 0
  %2406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2399, i64 0, i32 0
  %2407 = load i32, i32* %2406, align 4
  br i1 %2405, label %2408, label %2410

2408:                                             ; preds = %2401
  %2409 = add i32 %2407, -1
  store i32 %2409, i32* %2406, align 4
  br label %2410

2410:                                             ; preds = %2408, %2401
  %2411 = phi i32 [ %2409, %2408 ], [ %2407, %2401 ]
  %2412 = icmp eq i32 %2411, 0
  br i1 %2412, label %2413, label %2414

2413:                                             ; preds = %2410
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2399) #15
  br label %2414

2414:                                             ; preds = %2398, %2410, %2413
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2354) #15
  %2415 = load i32, i32* %2367, align 4
  %2416 = add i32 %2415, -1
  %2417 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %2353, i32 %2416) #15
  %2418 = load i32, i32* %2, align 4
  %2419 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2417, i64 0, i32 3
  store i32 %2418, i32* %2419, align 4
  br label %2420

2420:                                             ; preds = %2414, %2350
  %2421 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %2422 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %2421, align 8
  %2423 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %2422, i64 5
  %2424 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %2423, align 8
  %2425 = call dereferenceable(8) %"class.WTF::AtomicString"* %2424(%"class.blink::AXObject"* %40, i32 10) #15
  %2426 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2425, i64 0, i32 0, i32 0, i32 0
  %2427 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2426, align 8
  %2428 = icmp eq %"class.WTF::StringImpl"* %2427, null
  br i1 %2428, label %2556, label %2429

2429:                                             ; preds = %2420
  %2430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2427, i64 0, i32 1
  %2431 = load i32, i32* %2430, align 4
  %2432 = icmp eq i32 %2431, 0
  br i1 %2432, label %2556, label %2433

2433:                                             ; preds = %2429
  %2434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2427, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2435 = load atomic i32, i32* %2434 monotonic, align 4
  %2436 = and i32 %2435, 2
  %2437 = icmp eq i32 %2436, 0
  br i1 %2437, label %2438, label %2450

2438:                                             ; preds = %2433
  %2439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2427, i64 0, i32 0
  %2440 = load i32, i32* %2439, align 4
  %2441 = zext i32 %2440 to i33
  %2442 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2441, i33 1) #15
  %2443 = extractvalue { i33, i1 } %2442, 1
  %2444 = extractvalue { i33, i1 } %2442, 0
  %2445 = icmp slt i33 %2444, 0
  %2446 = or i1 %2443, %2445
  br i1 %2446, label %2447, label %2448, !prof !3

2447:                                             ; preds = %2438
  call void @llvm.trap() #15
  unreachable

2448:                                             ; preds = %2438
  %2449 = trunc i33 %2444 to i32
  store i32 %2449, i32* %2439, align 4
  br label %2450

2450:                                             ; preds = %2448, %2433
  %2451 = ptrtoint %"class.WTF::StringImpl"* %2427 to i64
  %2452 = bitcast %"class.WTF::String"* %7 to i64*
  %2453 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %2451, i64* %2452, align 8
  %2454 = icmp eq %"class.WTF::StringImpl"* %2453, null
  br i1 %2454, label %2468, label %2455

2455:                                             ; preds = %2450
  %2456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2453, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2457 = load atomic i32, i32* %2456 monotonic, align 4
  %2458 = and i32 %2457, 2
  %2459 = icmp eq i32 %2458, 0
  %2460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2453, i64 0, i32 0
  %2461 = load i32, i32* %2460, align 4
  br i1 %2459, label %2462, label %2464

2462:                                             ; preds = %2455
  %2463 = add i32 %2461, -1
  store i32 %2463, i32* %2460, align 4
  br label %2464

2464:                                             ; preds = %2462, %2455
  %2465 = phi i32 [ %2463, %2462 ], [ %2461, %2455 ]
  %2466 = icmp eq i32 %2465, 0
  br i1 %2466, label %2467, label %2468

2467:                                             ; preds = %2464
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2453) #15
  br label %2468

2468:                                             ; preds = %2450, %2464, %2467
  br i1 %2351, label %2469, label %2554

2469:                                             ; preds = %2468
  %2470 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %2471 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %2472 = load i32, i32* %2471, align 4
  %2473 = add i32 %2472, -1
  %2474 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %2470, i32 %2473) #15
  %2475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %2476 = icmp eq %"class.WTF::StringImpl"* %2475, null
  br i1 %2476, label %2494, label %2477

2477:                                             ; preds = %2469
  %2478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2479 = load atomic i32, i32* %2478 monotonic, align 4
  %2480 = and i32 %2479, 2
  %2481 = icmp eq i32 %2480, 0
  br i1 %2481, label %2482, label %2494

2482:                                             ; preds = %2477
  %2483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2475, i64 0, i32 0
  %2484 = load i32, i32* %2483, align 4
  %2485 = zext i32 %2484 to i33
  %2486 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2485, i33 1) #15
  %2487 = extractvalue { i33, i1 } %2486, 1
  %2488 = extractvalue { i33, i1 } %2486, 0
  %2489 = icmp slt i33 %2488, 0
  %2490 = or i1 %2487, %2489
  br i1 %2490, label %2491, label %2492, !prof !3

2491:                                             ; preds = %2482
  call void @llvm.trap() #15
  unreachable

2492:                                             ; preds = %2482
  %2493 = trunc i33 %2488 to i32
  store i32 %2493, i32* %2483, align 4
  br label %2494

2494:                                             ; preds = %2492, %2477, %2469
  %2495 = ptrtoint %"class.WTF::StringImpl"* %2475 to i64
  %2496 = bitcast %"class.blink::NameSource"* %2474 to i64*
  %2497 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2474, i64 0, i32 0, i32 0, i32 0
  %2498 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2497, align 8
  store i64 %2495, i64* %2496, align 8
  %2499 = icmp eq %"class.WTF::StringImpl"* %2498, null
  br i1 %2499, label %2513, label %2500

2500:                                             ; preds = %2494
  %2501 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2498, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2502 = load atomic i32, i32* %2501 monotonic, align 4
  %2503 = and i32 %2502, 2
  %2504 = icmp eq i32 %2503, 0
  %2505 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2498, i64 0, i32 0
  %2506 = load i32, i32* %2505, align 4
  br i1 %2504, label %2507, label %2509

2507:                                             ; preds = %2500
  %2508 = add i32 %2506, -1
  store i32 %2508, i32* %2505, align 4
  br label %2509

2509:                                             ; preds = %2507, %2500
  %2510 = phi i32 [ %2508, %2507 ], [ %2506, %2500 ]
  %2511 = icmp eq i32 %2510, 0
  br i1 %2511, label %2512, label %2513

2512:                                             ; preds = %2509
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2498) #15
  br label %2513

2513:                                             ; preds = %2494, %2509, %2512
  %2514 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2474, i64 0, i32 5
  %2515 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2426, align 8
  %2516 = icmp eq %"class.WTF::StringImpl"* %2515, null
  br i1 %2516, label %2534, label %2517

2517:                                             ; preds = %2513
  %2518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2515, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2519 = load atomic i32, i32* %2518 monotonic, align 4
  %2520 = and i32 %2519, 2
  %2521 = icmp eq i32 %2520, 0
  br i1 %2521, label %2522, label %2534

2522:                                             ; preds = %2517
  %2523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2515, i64 0, i32 0
  %2524 = load i32, i32* %2523, align 4
  %2525 = zext i32 %2524 to i33
  %2526 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2525, i33 1) #15
  %2527 = extractvalue { i33, i1 } %2526, 1
  %2528 = extractvalue { i33, i1 } %2526, 0
  %2529 = icmp slt i33 %2528, 0
  %2530 = or i1 %2527, %2529
  br i1 %2530, label %2531, label %2532, !prof !3

2531:                                             ; preds = %2522
  call void @llvm.trap() #15
  unreachable

2532:                                             ; preds = %2522
  %2533 = trunc i33 %2528 to i32
  store i32 %2533, i32* %2523, align 4
  br label %2534

2534:                                             ; preds = %2532, %2517, %2513
  %2535 = ptrtoint %"class.WTF::StringImpl"* %2515 to i64
  %2536 = bitcast %"class.WTF::AtomicString"* %2514 to i64*
  %2537 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2514, i64 0, i32 0, i32 0, i32 0
  %2538 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2537, align 8
  store i64 %2535, i64* %2536, align 8
  %2539 = icmp eq %"class.WTF::StringImpl"* %2538, null
  br i1 %2539, label %2553, label %2540

2540:                                             ; preds = %2534
  %2541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2538, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2542 = load atomic i32, i32* %2541 monotonic, align 4
  %2543 = and i32 %2542, 2
  %2544 = icmp eq i32 %2543, 0
  %2545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2538, i64 0, i32 0
  %2546 = load i32, i32* %2545, align 4
  br i1 %2544, label %2547, label %2549

2547:                                             ; preds = %2540
  %2548 = add i32 %2546, -1
  store i32 %2548, i32* %2545, align 4
  br label %2549

2549:                                             ; preds = %2547, %2540
  %2550 = phi i32 [ %2548, %2547 ], [ %2546, %2540 ]
  %2551 = icmp eq i32 %2550, 0
  br i1 %2551, label %2552, label %2553

2552:                                             ; preds = %2549
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2538) #15
  br label %2553

2553:                                             ; preds = %2534, %2549, %2552
  store i8 1, i8* %5, align 1
  br label %2556

2554:                                             ; preds = %2468
  %2555 = load i64, i64* %2452, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4590

2556:                                             ; preds = %2420, %2553, %2429
  %2557 = bitcast %"class.WTF::String"* %7 to i64*
  %2558 = load i64, i64* %2557, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4590

2559:                                             ; preds = %2348
  %2560 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %2560, label %2874, label %2561

2561:                                             ; preds = %2559
  %2562 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %2563 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFigureTagE, align 8
  %2564 = icmp eq %"class.blink::Node"* %2562, null
  br i1 %2564, label %2874, label %2565

2565:                                             ; preds = %2561
  %2566 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2562, i64 0, i32 1
  %2567 = load i32, i32* %2566, align 8
  %2568 = and i32 %2567, 48
  %2569 = icmp eq i32 %2568, 0
  br i1 %2569, label %2570, label %2874

2570:                                             ; preds = %2565
  %2571 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %2563, i64 0, i32 0, i32 0, i32 0
  %2572 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2571, align 8
  %2573 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2562, i64 1, i32 2
  %2574 = bitcast %"class.blink::Member.318"* %2573 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %2575 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2574, align 8
  %2576 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2575, i64 0, i32 3, i32 0, i32 0, i32 0
  %2577 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2576, align 8
  %2578 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2572, i64 0, i32 3, i32 0, i32 0, i32 0
  %2579 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2578, align 8
  %2580 = icmp eq %"class.WTF::StringImpl"* %2577, %2579
  br i1 %2580, label %2581, label %2874

2581:                                             ; preds = %2570
  store i32 7, i32* %2, align 4
  %2582 = icmp ne %"class.blink::HeapVector.3890"* %4, null
  br i1 %2582, label %2583, label %2655

2583:                                             ; preds = %2581
  %2584 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %2585 = bitcast %"class.blink::NameSource"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2585) #15
  %2586 = load i8, i8* %5, align 1, !range !2
  %2587 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2587, align 8
  %2588 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 0, i32 1
  store i8 %2586, i8* %2588, align 8
  %2589 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 0, i32 2
  store i8 0, i8* %2589, align 1
  %2590 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 0, i32 3
  store i32 1, i32* %2590, align 4
  %2591 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 0, i32 4
  %2592 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %2593 = bitcast %"class.blink::QualifiedName"** %2591 to i64*
  store i64 %2592, i64* %2593, align 8
  %2594 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2594, align 8
  %2595 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 0, i32 6
  store i32 -1, i32* %2595, align 8
  %2596 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 0, i32 7
  %2597 = bitcast %"class.blink::HeapVector.3879"* %2596 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2597, i8 0, i64 16, i1 false) #15
  %2598 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %2599 = load i32, i32* %2598, align 4
  %2600 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %2601 = load i32, i32* %2600, align 8
  %2602 = icmp eq i32 %2599, %2601
  br i1 %2602, label %2612, label %2603, !prof !3

2603:                                             ; preds = %2583
  %2604 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %2605 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %2604, align 8
  %2606 = zext i32 %2599 to i64
  %2607 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2605, i64 %2606
  %2608 = bitcast %"class.blink::NameSource"* %2607 to i8*
  %2609 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %2608, %"class.blink::NameSource"* nonnull dereferenceable(56) %23) #15
  %2610 = load i32, i32* %2598, align 4
  %2611 = add i32 %2610, 1
  store i32 %2611, i32* %2598, align 4
  br label %2613

2612:                                             ; preds = %2583
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %2584, %"class.blink::NameSource"* nonnull dereferenceable(56) %23) #15
  br label %2613

2613:                                             ; preds = %2603, %2612
  %2614 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2594, align 8
  %2615 = icmp eq %"class.WTF::StringImpl"* %2614, null
  br i1 %2615, label %2629, label %2616

2616:                                             ; preds = %2613
  %2617 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2614, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2618 = load atomic i32, i32* %2617 monotonic, align 4
  %2619 = and i32 %2618, 2
  %2620 = icmp eq i32 %2619, 0
  %2621 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2614, i64 0, i32 0
  %2622 = load i32, i32* %2621, align 4
  br i1 %2620, label %2623, label %2625

2623:                                             ; preds = %2616
  %2624 = add i32 %2622, -1
  store i32 %2624, i32* %2621, align 4
  br label %2625

2625:                                             ; preds = %2623, %2616
  %2626 = phi i32 [ %2624, %2623 ], [ %2622, %2616 ]
  %2627 = icmp eq i32 %2626, 0
  br i1 %2627, label %2628, label %2629

2628:                                             ; preds = %2625
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2614) #15
  br label %2629

2629:                                             ; preds = %2628, %2625, %2613
  %2630 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2587, align 8
  %2631 = icmp eq %"class.WTF::StringImpl"* %2630, null
  br i1 %2631, label %2645, label %2632

2632:                                             ; preds = %2629
  %2633 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2630, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2634 = load atomic i32, i32* %2633 monotonic, align 4
  %2635 = and i32 %2634, 2
  %2636 = icmp eq i32 %2635, 0
  %2637 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2630, i64 0, i32 0
  %2638 = load i32, i32* %2637, align 4
  br i1 %2636, label %2639, label %2641

2639:                                             ; preds = %2632
  %2640 = add i32 %2638, -1
  store i32 %2640, i32* %2637, align 4
  br label %2641

2641:                                             ; preds = %2639, %2632
  %2642 = phi i32 [ %2640, %2639 ], [ %2638, %2632 ]
  %2643 = icmp eq i32 %2642, 0
  br i1 %2643, label %2644, label %2645

2644:                                             ; preds = %2641
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2630) #15
  br label %2645

2645:                                             ; preds = %2629, %2641, %2644
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2585) #15
  %2646 = load i32, i32* %2, align 4
  %2647 = load i32, i32* %2598, align 4
  %2648 = add i32 %2647, -1
  %2649 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %2584, i32 %2648) #15
  %2650 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2649, i64 0, i32 3
  store i32 %2646, i32* %2650, align 4
  %2651 = load i32, i32* %2598, align 4
  %2652 = add i32 %2651, -1
  %2653 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %2584, i32 %2652) #15
  %2654 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2653, i64 0, i32 6
  store i32 0, i32* %2654, align 8
  br label %2655

2655:                                             ; preds = %2645, %2581
  %2656 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %2656, label %2871, label %2657

2657:                                             ; preds = %2655
  %2658 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %2659 = icmp eq %"class.blink::Node"* %2658, null
  br i1 %2659, label %2871, label %2660

2660:                                             ; preds = %2657
  %2661 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2658, i64 0, i32 1
  %2662 = load i32, i32* %2661, align 8
  %2663 = and i32 %2662, 2
  %2664 = icmp eq i32 %2663, 0
  br i1 %2664, label %2871, label %2665

2665:                                             ; preds = %2660
  %2666 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2658, i64 1
  %2667 = bitcast %"class.blink::Node"* %2666 to %"class.blink::Node"**
  %2668 = load %"class.blink::Node"*, %"class.blink::Node"** %2667, align 8
  %2669 = bitcast %"class.blink::Node"* %2668 to %"class.blink::Element"*
  %2670 = icmp eq %"class.blink::Node"* %2668, null
  br i1 %2670, label %2688, label %2671

2671:                                             ; preds = %2665
  %2672 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2668, i64 0, i32 1
  %2673 = load i32, i32* %2672, align 8
  %2674 = and i32 %2673, 12
  %2675 = icmp eq i32 %2674, 0
  br i1 %2675, label %2688, label %2681

2676:                                             ; preds = %2681
  %2677 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2684, i64 0, i32 1
  %2678 = load i32, i32* %2677, align 8
  %2679 = and i32 %2678, 12
  %2680 = icmp eq i32 %2679, 0
  br i1 %2680, label %2686, label %2681

2681:                                             ; preds = %2671, %2676
  %2682 = phi %"class.blink::Node"* [ %2684, %2676 ], [ %2668, %2671 ]
  %2683 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2682, i64 0, i32 5, i32 0, i32 0
  %2684 = load %"class.blink::Node"*, %"class.blink::Node"** %2683, align 8
  %2685 = icmp eq %"class.blink::Node"* %2684, null
  br i1 %2685, label %2871, label %2676

2686:                                             ; preds = %2676
  %2687 = bitcast %"class.blink::Node"* %2684 to %"class.blink::Element"*
  br label %2688

2688:                                             ; preds = %2686, %2671, %2665
  %2689 = phi %"class.blink::Element"* [ %2669, %2665 ], [ %2669, %2671 ], [ %2687, %2686 ]
  %2690 = icmp eq %"class.blink::Element"* %2689, null
  br i1 %2690, label %2871, label %2691

2691:                                             ; preds = %2688
  %2692 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kFigcaptionTagE, align 8
  %2693 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2689, i64 0, i32 0, i32 0, i32 1
  %2694 = load i32, i32* %2693, align 8
  %2695 = and i32 %2694, 48
  %2696 = icmp eq i32 %2695, 0
  br i1 %2696, label %2697, label %2709

2697:                                             ; preds = %2691
  %2698 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2689, i64 0, i32 0, i32 0
  %2699 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %2692, i64 0, i32 0, i32 0, i32 0
  %2700 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2699, align 8
  %2701 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2698, i64 1, i32 2
  %2702 = bitcast %"class.blink::Member.318"* %2701 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %2703 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2702, align 8
  %2704 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2703, i64 0, i32 3, i32 0, i32 0, i32 0
  %2705 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2704, align 8
  %2706 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2700, i64 0, i32 3, i32 0, i32 0, i32 0
  %2707 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2706, align 8
  %2708 = icmp eq %"class.WTF::StringImpl"* %2705, %2707
  br i1 %2708, label %2752, label %2709

2709:                                             ; preds = %2697, %2691
  %2710 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2658, i64 1, i32 0, i32 0, i32 1
  %2711 = bitcast %"class.blink::TraceWrapperV8Reference"* %2710 to %"class.blink::Node"**
  %2712 = load %"class.blink::Node"*, %"class.blink::Node"** %2711, align 8
  %2713 = bitcast %"class.blink::Node"* %2712 to %"class.blink::Element"*
  %2714 = icmp eq %"class.blink::Node"* %2712, null
  br i1 %2714, label %2732, label %2715

2715:                                             ; preds = %2709
  %2716 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2712, i64 0, i32 1
  %2717 = load i32, i32* %2716, align 8
  %2718 = and i32 %2717, 12
  %2719 = icmp eq i32 %2718, 0
  br i1 %2719, label %2732, label %2725

2720:                                             ; preds = %2725
  %2721 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2728, i64 0, i32 1
  %2722 = load i32, i32* %2721, align 8
  %2723 = and i32 %2722, 12
  %2724 = icmp eq i32 %2723, 0
  br i1 %2724, label %2730, label %2725

2725:                                             ; preds = %2715, %2720
  %2726 = phi %"class.blink::Node"* [ %2728, %2720 ], [ %2712, %2715 ]
  %2727 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2726, i64 0, i32 4, i32 0, i32 0
  %2728 = load %"class.blink::Node"*, %"class.blink::Node"** %2727, align 8
  %2729 = icmp eq %"class.blink::Node"* %2728, null
  br i1 %2729, label %2871, label %2720

2730:                                             ; preds = %2720
  %2731 = bitcast %"class.blink::Node"* %2728 to %"class.blink::Element"*
  br label %2732

2732:                                             ; preds = %2730, %2715, %2709
  %2733 = phi %"class.blink::Element"* [ %2713, %2709 ], [ %2713, %2715 ], [ %2731, %2730 ]
  %2734 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2733, i64 0, i32 0, i32 0
  %2735 = icmp eq %"class.blink::Element"* %2733, null
  br i1 %2735, label %2871, label %2736

2736:                                             ; preds = %2732
  %2737 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2733, i64 0, i32 0, i32 0, i32 1
  %2738 = load i32, i32* %2737, align 8
  %2739 = and i32 %2738, 48
  %2740 = icmp eq i32 %2739, 0
  br i1 %2740, label %2741, label %2871

2741:                                             ; preds = %2736
  %2742 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %2692, i64 0, i32 0, i32 0, i32 0
  %2743 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2742, align 8
  %2744 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2734, i64 1, i32 2
  %2745 = bitcast %"class.blink::Member.318"* %2744 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %2746 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2745, align 8
  %2747 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2746, i64 0, i32 3, i32 0, i32 0, i32 0
  %2748 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2747, align 8
  %2749 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2743, i64 0, i32 3, i32 0, i32 0, i32 0
  %2750 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2749, align 8
  %2751 = icmp eq %"class.WTF::StringImpl"* %2748, %2750
  br i1 %2751, label %2752, label %2871

2752:                                             ; preds = %2741, %2697
  %2753 = phi %"class.blink::Element"* [ %2689, %2697 ], [ %2733, %2741 ]
  %2754 = bitcast %"class.blink::AXObject"** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2754) #15
  %2755 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %2756 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2755, align 8
  %2757 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2753, i64 0, i32 0, i32 0
  %2758 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %2756, %"class.blink::Node"* %2757) #15
  store %"class.blink::AXObject"* %2758, %"class.blink::AXObject"** %24, align 8
  %2759 = icmp eq %"class.blink::AXObject"* %2758, null
  br i1 %2759, label %2870, label %2760

2760:                                             ; preds = %2752
  %2761 = call %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEE(%"class.blink::AXObject"* nonnull dereferenceable(120) %2758, i1 zeroext false, %"class.blink::HeapHashSet.3867"* dereferenceable(24) %1) #15
  %2762 = ptrtoint %"class.WTF::StringImpl"* %2761 to i64
  %2763 = bitcast %"class.WTF::String"* %7 to i64*
  %2764 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %2762, i64* %2763, align 8
  %2765 = icmp eq %"class.WTF::StringImpl"* %2764, null
  br i1 %2765, label %2779, label %2766

2766:                                             ; preds = %2760
  %2767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2764, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2768 = load atomic i32, i32* %2767 monotonic, align 4
  %2769 = and i32 %2768, 2
  %2770 = icmp eq i32 %2769, 0
  %2771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2764, i64 0, i32 0
  %2772 = load i32, i32* %2771, align 4
  br i1 %2770, label %2773, label %2775

2773:                                             ; preds = %2766
  %2774 = add i32 %2772, -1
  store i32 %2774, i32* %2771, align 4
  br label %2775

2775:                                             ; preds = %2773, %2766
  %2776 = phi i32 [ %2774, %2773 ], [ %2772, %2766 ]
  %2777 = icmp eq i32 %2776, 0
  br i1 %2777, label %2778, label %2779

2778:                                             ; preds = %2775
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2764) #15
  br label %2779

2779:                                             ; preds = %2778, %2775, %2760
  %2780 = icmp eq %"class.blink::HeapVector.3879"* %3, null
  br i1 %2780, label %2819, label %2781

2781:                                             ; preds = %2779
  %2782 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %8, i64 0, i32 0
  %2783 = bitcast %"class.blink::NameSourceRelatedObject"** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2783) #15
  %2784 = call %"class.blink::NameSourceRelatedObject"* @_ZN5blink25MakeGarbageCollectedTraitINS_23NameSourceRelatedObjectEE4CallIJRPNS_8AXObjectERN3WTF6StringEEEEPS1_DpOT_(%"class.blink::AXObject"** nonnull dereferenceable(8) %24, %"class.WTF::String"* nonnull dereferenceable(8) %7) #15
  store %"class.blink::NameSourceRelatedObject"* %2784, %"class.blink::NameSourceRelatedObject"** %25, align 8
  %2785 = load i32, i32* %52, align 4
  %2786 = load i32, i32* %51, align 8
  %2787 = icmp eq i32 %2785, %2786
  br i1 %2787, label %2802, label %2788, !prof !3

2788:                                             ; preds = %2781
  %2789 = ptrtoint %"class.blink::NameSourceRelatedObject"* %2784 to i64
  %2790 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %50, align 8
  %2791 = zext i32 %2785 to i64
  %2792 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %2790, i64 %2791
  %2793 = bitcast %"class.blink::Member.3885"* %2792 to i64*
  store atomic i64 %2789, i64* %2793 monotonic, align 8
  %2794 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %2795 = icmp eq i32 %2794, 0
  br i1 %2795, label %2799, label %2796

2796:                                             ; preds = %2788
  %2797 = bitcast %"class.blink::NameSourceRelatedObject"* %2784 to i8*
  %2798 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %2797) #15
  br label %2799

2799:                                             ; preds = %2796, %2788
  %2800 = load i32, i32* %52, align 4
  %2801 = add i32 %2800, 1
  store i32 %2801, i32* %52, align 4
  br label %2803

2802:                                             ; preds = %2781
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3882"* nonnull %2782, %"class.blink::NameSourceRelatedObject"** nonnull dereferenceable(8) %25) #15
  br label %2803

2803:                                             ; preds = %2799, %2802
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2783) #15
  %2804 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %3, i64 0, i32 0
  %2805 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %2804, %"class.WTF::Vector.3882"* nonnull dereferenceable(16) %2782) #15
  %2806 = load i32, i32* %51, align 8
  %2807 = icmp eq i32 %2806, 0
  br i1 %2807, label %2819, label %2808

2808:                                             ; preds = %2803
  %2809 = load i32, i32* %52, align 4
  %2810 = icmp eq i32 %2809, 0
  %2811 = bitcast %"class.blink::HeapVector.3879"* %8 to i8**
  br i1 %2810, label %2816, label %2812

2812:                                             ; preds = %2808
  %2813 = load i8*, i8** %2811, align 8
  %2814 = zext i32 %2809 to i64
  %2815 = shl nuw nsw i64 %2814, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %2813, i64 %2815) #15
  store i32 0, i32* %52, align 4
  br label %2816

2816:                                             ; preds = %2812, %2808
  %2817 = load i8*, i8** %2811, align 8
  %2818 = bitcast %"class.blink::HeapVector.3879"* %8 to i64*
  store atomic i64 0, i64* %2818 monotonic, align 8
  store i32 0, i32* %51, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %2817) #15
  br label %2819

2819:                                             ; preds = %2816, %2803, %2779
  br i1 %2582, label %2820, label %2868

2820:                                             ; preds = %2819
  %2821 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %2822 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %2823 = load i32, i32* %2822, align 4
  %2824 = add i32 %2823, -1
  %2825 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %2821, i32 %2824) #15
  %2826 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2825, i64 0, i32 7, i32 0
  %2827 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %3, i64 0, i32 0
  %2828 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %2826, %"class.WTF::Vector.3882"* dereferenceable(16) %2827) #15
  %2829 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %2830 = icmp eq %"class.WTF::StringImpl"* %2829, null
  br i1 %2830, label %2848, label %2831

2831:                                             ; preds = %2820
  %2832 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2829, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2833 = load atomic i32, i32* %2832 monotonic, align 4
  %2834 = and i32 %2833, 2
  %2835 = icmp eq i32 %2834, 0
  br i1 %2835, label %2836, label %2848

2836:                                             ; preds = %2831
  %2837 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2829, i64 0, i32 0
  %2838 = load i32, i32* %2837, align 4
  %2839 = zext i32 %2838 to i33
  %2840 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2839, i33 1) #15
  %2841 = extractvalue { i33, i1 } %2840, 1
  %2842 = extractvalue { i33, i1 } %2840, 0
  %2843 = icmp slt i33 %2842, 0
  %2844 = or i1 %2841, %2843
  br i1 %2844, label %2845, label %2846, !prof !3

2845:                                             ; preds = %2836
  call void @llvm.trap() #15
  unreachable

2846:                                             ; preds = %2836
  %2847 = trunc i33 %2842 to i32
  store i32 %2847, i32* %2837, align 4
  br label %2848

2848:                                             ; preds = %2846, %2831, %2820
  %2849 = ptrtoint %"class.WTF::StringImpl"* %2829 to i64
  %2850 = bitcast %"class.blink::NameSource"* %2825 to i64*
  %2851 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2825, i64 0, i32 0, i32 0, i32 0
  %2852 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2851, align 8
  store i64 %2849, i64* %2850, align 8
  %2853 = icmp eq %"class.WTF::StringImpl"* %2852, null
  br i1 %2853, label %2867, label %2854

2854:                                             ; preds = %2848
  %2855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2852, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2856 = load atomic i32, i32* %2855 monotonic, align 4
  %2857 = and i32 %2856, 2
  %2858 = icmp eq i32 %2857, 0
  %2859 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2852, i64 0, i32 0
  %2860 = load i32, i32* %2859, align 4
  br i1 %2858, label %2861, label %2863

2861:                                             ; preds = %2854
  %2862 = add i32 %2860, -1
  store i32 %2862, i32* %2859, align 4
  br label %2863

2863:                                             ; preds = %2861, %2854
  %2864 = phi i32 [ %2862, %2861 ], [ %2860, %2854 ]
  %2865 = icmp eq i32 %2864, 0
  br i1 %2865, label %2866, label %2867

2866:                                             ; preds = %2863
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2852) #15
  br label %2867

2867:                                             ; preds = %2848, %2863, %2866
  store i8 1, i8* %5, align 1
  br label %2870

2868:                                             ; preds = %2819
  %2869 = load i64, i64* %2763, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2754) #15
  br label %4590

2870:                                             ; preds = %2867, %2752
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2754) #15
  br label %2871

2871:                                             ; preds = %2681, %2725, %2655, %2732, %2736, %2660, %2657, %2688, %2741, %2870
  %2872 = bitcast %"class.WTF::String"* %7 to i64*
  %2873 = load i64, i64* %2872, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4590

2874:                                             ; preds = %2559, %2561, %2565, %2570
  %2875 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %2875, label %2896, label %2876

2876:                                             ; preds = %2874
  %2877 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %2878 = icmp eq %"class.blink::Node"* %2877, null
  br i1 %2878, label %2896, label %2879

2879:                                             ; preds = %2876
  %2880 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2877, i64 0, i32 1
  %2881 = load i32, i32* %2880, align 8
  %2882 = and i32 %2881, 48
  %2883 = icmp eq i32 %2882, 0
  br i1 %2883, label %2884, label %2896

2884:                                             ; preds = %2879
  %2885 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %2886 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %2885, i64 0, i32 0, i32 0, i32 0
  %2887 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2886, align 8
  %2888 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2877, i64 1, i32 2
  %2889 = bitcast %"class.blink::Member.318"* %2888 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %2890 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2889, align 8
  %2891 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2890, i64 0, i32 3, i32 0, i32 0, i32 0
  %2892 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2891, align 8
  %2893 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2887, i64 0, i32 3, i32 0, i32 0, i32 0
  %2894 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2893, align 8
  %2895 = icmp eq %"class.WTF::StringImpl"* %2892, %2894
  br i1 %2895, label %2935, label %2896

2896:                                             ; preds = %2874, %2879, %2876, %2884
  %2897 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %2897, label %2918, label %2898

2898:                                             ; preds = %2896
  %2899 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %2900 = icmp eq %"class.blink::Node"* %2899, null
  br i1 %2900, label %2918, label %2901

2901:                                             ; preds = %2898
  %2902 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2899, i64 0, i32 1
  %2903 = load i32, i32* %2902, align 8
  %2904 = and i32 %2903, 48
  %2905 = icmp eq i32 %2904, 0
  br i1 %2905, label %2906, label %2918

2906:                                             ; preds = %2901
  %2907 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kAreaTagE, align 8
  %2908 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %2907, i64 0, i32 0, i32 0, i32 0
  %2909 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2908, align 8
  %2910 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %2899, i64 1, i32 2
  %2911 = bitcast %"class.blink::Member.318"* %2910 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %2912 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %2911, align 8
  %2913 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2912, i64 0, i32 3, i32 0, i32 0, i32 0
  %2914 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2913, align 8
  %2915 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %2909, i64 0, i32 3, i32 0, i32 0, i32 0
  %2916 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2915, align 8
  %2917 = icmp eq %"class.WTF::StringImpl"* %2914, %2916
  br i1 %2917, label %2935, label %2918

2918:                                             ; preds = %2896, %2901, %2898, %2906
  %2919 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %2920 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %2919, align 8
  %2921 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %2920, i64 125
  %2922 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %2921, align 8
  %2923 = call %"class.blink::LayoutObject"* %2922(%"class.blink::AXObject"* %40) #15
  %2924 = icmp eq %"class.blink::LayoutObject"* %2923, null
  br i1 %2924, label %3151, label %2925

2925:                                             ; preds = %2918
  %2926 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %2919, align 8
  %2927 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %2926, i64 125
  %2928 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %2927, align 8
  %2929 = call %"class.blink::LayoutObject"* %2928(%"class.blink::AXObject"* %40) #15
  %2930 = bitcast %"class.blink::LayoutObject"* %2929 to i1 (%"class.blink::LayoutObject"*, i32)***
  %2931 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %2930, align 8
  %2932 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %2931, i64 92
  %2933 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %2932, align 8
  %2934 = call zeroext i1 %2933(%"class.blink::LayoutObject"* %2929, i32 63) #15
  br i1 %2934, label %2935, label %3151

2935:                                             ; preds = %2925, %2906, %2884
  %2936 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kAltAttrE, align 8
  %2937 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)***
  %2938 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*** %2937, align 8
  %2939 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %2938, i64 131
  %2940 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %2939, align 8
  %2941 = call dereferenceable(8) %"class.WTF::AtomicString"* %2940(%"class.blink::AXNodeObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %2936) #15
  %2942 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2941, i64 0, i32 0, i32 0, i32 0
  %2943 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2942, align 8
  %2944 = icmp eq %"class.WTF::StringImpl"* %2943, null
  br i1 %2944, label %2949, label %2945

2945:                                             ; preds = %2935
  %2946 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2943, i64 0, i32 1
  %2947 = load i32, i32* %2946, align 4
  %2948 = icmp eq i32 %2947, 0
  br i1 %2948, label %2949, label %2951

2949:                                             ; preds = %2935, %2945
  %2950 = select i1 %2944, i32 2, i32 3
  br label %2951

2951:                                             ; preds = %2949, %2945
  %2952 = phi i32 [ 2, %2945 ], [ %2950, %2949 ]
  store i32 %2952, i32* %2, align 4
  %2953 = icmp ne %"class.blink::HeapVector.3890"* %4, null
  br i1 %2953, label %2954, label %3020

2954:                                             ; preds = %2951
  %2955 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %2956 = bitcast %"class.blink::NameSource"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2956) #15
  %2957 = load i8, i8* %5, align 1, !range !2
  %2958 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %26, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2958, align 8
  %2959 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %26, i64 0, i32 1
  store i8 %2957, i8* %2959, align 8
  %2960 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %26, i64 0, i32 2
  store i8 0, i8* %2960, align 1
  %2961 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %26, i64 0, i32 3
  store i32 1, i32* %2961, align 4
  %2962 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %26, i64 0, i32 4
  store %"class.blink::QualifiedName"* %2936, %"class.blink::QualifiedName"** %2962, align 8
  %2963 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %26, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2963, align 8
  %2964 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %26, i64 0, i32 6
  store i32 -1, i32* %2964, align 8
  %2965 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %26, i64 0, i32 7
  %2966 = bitcast %"class.blink::HeapVector.3879"* %2965 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2966, i8 0, i64 16, i1 false) #15
  %2967 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %2968 = load i32, i32* %2967, align 4
  %2969 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %2970 = load i32, i32* %2969, align 8
  %2971 = icmp eq i32 %2968, %2970
  br i1 %2971, label %2981, label %2972, !prof !3

2972:                                             ; preds = %2954
  %2973 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %2974 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %2973, align 8
  %2975 = zext i32 %2968 to i64
  %2976 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %2974, i64 %2975
  %2977 = bitcast %"class.blink::NameSource"* %2976 to i8*
  %2978 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %2977, %"class.blink::NameSource"* nonnull dereferenceable(56) %26) #15
  %2979 = load i32, i32* %2967, align 4
  %2980 = add i32 %2979, 1
  store i32 %2980, i32* %2967, align 4
  br label %2982

2981:                                             ; preds = %2954
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %2955, %"class.blink::NameSource"* nonnull dereferenceable(56) %26) #15
  br label %2982

2982:                                             ; preds = %2972, %2981
  %2983 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2963, align 8
  %2984 = icmp eq %"class.WTF::StringImpl"* %2983, null
  br i1 %2984, label %2998, label %2985

2985:                                             ; preds = %2982
  %2986 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2983, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2987 = load atomic i32, i32* %2986 monotonic, align 4
  %2988 = and i32 %2987, 2
  %2989 = icmp eq i32 %2988, 0
  %2990 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2983, i64 0, i32 0
  %2991 = load i32, i32* %2990, align 4
  br i1 %2989, label %2992, label %2994

2992:                                             ; preds = %2985
  %2993 = add i32 %2991, -1
  store i32 %2993, i32* %2990, align 4
  br label %2994

2994:                                             ; preds = %2992, %2985
  %2995 = phi i32 [ %2993, %2992 ], [ %2991, %2985 ]
  %2996 = icmp eq i32 %2995, 0
  br i1 %2996, label %2997, label %2998

2997:                                             ; preds = %2994
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2983) #15
  br label %2998

2998:                                             ; preds = %2997, %2994, %2982
  %2999 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2958, align 8
  %3000 = icmp eq %"class.WTF::StringImpl"* %2999, null
  br i1 %3000, label %3014, label %3001

3001:                                             ; preds = %2998
  %3002 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2999, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3003 = load atomic i32, i32* %3002 monotonic, align 4
  %3004 = and i32 %3003, 2
  %3005 = icmp eq i32 %3004, 0
  %3006 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2999, i64 0, i32 0
  %3007 = load i32, i32* %3006, align 4
  br i1 %3005, label %3008, label %3010

3008:                                             ; preds = %3001
  %3009 = add i32 %3007, -1
  store i32 %3009, i32* %3006, align 4
  br label %3010

3010:                                             ; preds = %3008, %3001
  %3011 = phi i32 [ %3009, %3008 ], [ %3007, %3001 ]
  %3012 = icmp eq i32 %3011, 0
  br i1 %3012, label %3013, label %3014

3013:                                             ; preds = %3010
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2999) #15
  br label %3014

3014:                                             ; preds = %2998, %3010, %3013
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2956) #15
  %3015 = load i32, i32* %2, align 4
  %3016 = load i32, i32* %2967, align 4
  %3017 = add i32 %3016, -1
  %3018 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %2955, i32 %3017) #15
  %3019 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3018, i64 0, i32 3
  store i32 %3015, i32* %3019, align 4
  br label %3020

3020:                                             ; preds = %3014, %2951
  %3021 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2942, align 8
  %3022 = icmp eq %"class.WTF::StringImpl"* %3021, null
  br i1 %3022, label %3023, label %3025

3023:                                             ; preds = %3020
  %3024 = bitcast %"class.WTF::String"* %7 to i64*
  br label %3148

3025:                                             ; preds = %3020
  %3026 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3021, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3027 = load atomic i32, i32* %3026 monotonic, align 4
  %3028 = and i32 %3027, 2
  %3029 = icmp eq i32 %3028, 0
  br i1 %3029, label %3030, label %3042

3030:                                             ; preds = %3025
  %3031 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3021, i64 0, i32 0
  %3032 = load i32, i32* %3031, align 4
  %3033 = zext i32 %3032 to i33
  %3034 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %3033, i33 1) #15
  %3035 = extractvalue { i33, i1 } %3034, 1
  %3036 = extractvalue { i33, i1 } %3034, 0
  %3037 = icmp slt i33 %3036, 0
  %3038 = or i1 %3035, %3037
  br i1 %3038, label %3039, label %3040, !prof !3

3039:                                             ; preds = %3030
  call void @llvm.trap() #15
  unreachable

3040:                                             ; preds = %3030
  %3041 = trunc i33 %3036 to i32
  store i32 %3041, i32* %3031, align 4
  br label %3042

3042:                                             ; preds = %3040, %3025
  %3043 = ptrtoint %"class.WTF::StringImpl"* %3021 to i64
  %3044 = bitcast %"class.WTF::String"* %7 to i64*
  %3045 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %3043, i64* %3044, align 8
  %3046 = icmp eq %"class.WTF::StringImpl"* %3045, null
  br i1 %3046, label %3060, label %3047

3047:                                             ; preds = %3042
  %3048 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3045, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3049 = load atomic i32, i32* %3048 monotonic, align 4
  %3050 = and i32 %3049, 2
  %3051 = icmp eq i32 %3050, 0
  %3052 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3045, i64 0, i32 0
  %3053 = load i32, i32* %3052, align 4
  br i1 %3051, label %3054, label %3056

3054:                                             ; preds = %3047
  %3055 = add i32 %3053, -1
  store i32 %3055, i32* %3052, align 4
  br label %3056

3056:                                             ; preds = %3054, %3047
  %3057 = phi i32 [ %3055, %3054 ], [ %3053, %3047 ]
  %3058 = icmp eq i32 %3057, 0
  br i1 %3058, label %3059, label %3060

3059:                                             ; preds = %3056
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3045) #15
  br label %3060

3060:                                             ; preds = %3042, %3056, %3059
  br i1 %2953, label %3061, label %3146

3061:                                             ; preds = %3060
  %3062 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %3063 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %3064 = load i32, i32* %3063, align 4
  %3065 = add i32 %3064, -1
  %3066 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %3062, i32 %3065) #15
  %3067 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3066, i64 0, i32 5
  %3068 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2942, align 8
  %3069 = icmp eq %"class.WTF::StringImpl"* %3068, null
  br i1 %3069, label %3087, label %3070

3070:                                             ; preds = %3061
  %3071 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3068, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3072 = load atomic i32, i32* %3071 monotonic, align 4
  %3073 = and i32 %3072, 2
  %3074 = icmp eq i32 %3073, 0
  br i1 %3074, label %3075, label %3087

3075:                                             ; preds = %3070
  %3076 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3068, i64 0, i32 0
  %3077 = load i32, i32* %3076, align 4
  %3078 = zext i32 %3077 to i33
  %3079 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %3078, i33 1) #15
  %3080 = extractvalue { i33, i1 } %3079, 1
  %3081 = extractvalue { i33, i1 } %3079, 0
  %3082 = icmp slt i33 %3081, 0
  %3083 = or i1 %3080, %3082
  br i1 %3083, label %3084, label %3085, !prof !3

3084:                                             ; preds = %3075
  call void @llvm.trap() #15
  unreachable

3085:                                             ; preds = %3075
  %3086 = trunc i33 %3081 to i32
  store i32 %3086, i32* %3076, align 4
  br label %3087

3087:                                             ; preds = %3085, %3070, %3061
  %3088 = ptrtoint %"class.WTF::StringImpl"* %3068 to i64
  %3089 = bitcast %"class.WTF::AtomicString"* %3067 to i64*
  %3090 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3067, i64 0, i32 0, i32 0, i32 0
  %3091 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3090, align 8
  store i64 %3088, i64* %3089, align 8
  %3092 = icmp eq %"class.WTF::StringImpl"* %3091, null
  br i1 %3092, label %3106, label %3093

3093:                                             ; preds = %3087
  %3094 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3091, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3095 = load atomic i32, i32* %3094 monotonic, align 4
  %3096 = and i32 %3095, 2
  %3097 = icmp eq i32 %3096, 0
  %3098 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3091, i64 0, i32 0
  %3099 = load i32, i32* %3098, align 4
  br i1 %3097, label %3100, label %3102

3100:                                             ; preds = %3093
  %3101 = add i32 %3099, -1
  store i32 %3101, i32* %3098, align 4
  br label %3102

3102:                                             ; preds = %3100, %3093
  %3103 = phi i32 [ %3101, %3100 ], [ %3099, %3093 ]
  %3104 = icmp eq i32 %3103, 0
  br i1 %3104, label %3105, label %3106

3105:                                             ; preds = %3102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3091) #15
  br label %3106

3106:                                             ; preds = %3087, %3102, %3105
  %3107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %3108 = icmp eq %"class.WTF::StringImpl"* %3107, null
  br i1 %3108, label %3126, label %3109

3109:                                             ; preds = %3106
  %3110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3111 = load atomic i32, i32* %3110 monotonic, align 4
  %3112 = and i32 %3111, 2
  %3113 = icmp eq i32 %3112, 0
  br i1 %3113, label %3114, label %3126

3114:                                             ; preds = %3109
  %3115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3107, i64 0, i32 0
  %3116 = load i32, i32* %3115, align 4
  %3117 = zext i32 %3116 to i33
  %3118 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %3117, i33 1) #15
  %3119 = extractvalue { i33, i1 } %3118, 1
  %3120 = extractvalue { i33, i1 } %3118, 0
  %3121 = icmp slt i33 %3120, 0
  %3122 = or i1 %3119, %3121
  br i1 %3122, label %3123, label %3124, !prof !3

3123:                                             ; preds = %3114
  call void @llvm.trap() #15
  unreachable

3124:                                             ; preds = %3114
  %3125 = trunc i33 %3120 to i32
  store i32 %3125, i32* %3115, align 4
  br label %3126

3126:                                             ; preds = %3124, %3109, %3106
  %3127 = ptrtoint %"class.WTF::StringImpl"* %3107 to i64
  %3128 = bitcast %"class.blink::NameSource"* %3066 to i64*
  %3129 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3066, i64 0, i32 0, i32 0, i32 0
  %3130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3129, align 8
  store i64 %3127, i64* %3128, align 8
  %3131 = icmp eq %"class.WTF::StringImpl"* %3130, null
  br i1 %3131, label %3145, label %3132

3132:                                             ; preds = %3126
  %3133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3134 = load atomic i32, i32* %3133 monotonic, align 4
  %3135 = and i32 %3134, 2
  %3136 = icmp eq i32 %3135, 0
  %3137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3130, i64 0, i32 0
  %3138 = load i32, i32* %3137, align 4
  br i1 %3136, label %3139, label %3141

3139:                                             ; preds = %3132
  %3140 = add i32 %3138, -1
  store i32 %3140, i32* %3137, align 4
  br label %3141

3141:                                             ; preds = %3139, %3132
  %3142 = phi i32 [ %3140, %3139 ], [ %3138, %3132 ]
  %3143 = icmp eq i32 %3142, 0
  br i1 %3143, label %3144, label %3145

3144:                                             ; preds = %3141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3130) #15
  br label %3145

3145:                                             ; preds = %3126, %3141, %3144
  store i8 1, i8* %5, align 1
  br label %3148

3146:                                             ; preds = %3060
  %3147 = load i64, i64* %3044, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4590

3148:                                             ; preds = %3023, %3145
  %3149 = phi i64* [ %3024, %3023 ], [ %3044, %3145 ]
  %3150 = load i64, i64* %3149, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4590

3151:                                             ; preds = %2918, %2925
  %3152 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %3152, label %3579, label %3153

3153:                                             ; preds = %3151
  %3154 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %3155 = icmp eq %"class.blink::Node"* %3154, null
  br i1 %3155, label %3579, label %3156

3156:                                             ; preds = %3153
  %3157 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3154, i64 0, i32 1
  %3158 = load i32, i32* %3157, align 8
  %3159 = and i32 %3158, 48
  %3160 = icmp eq i32 %3159, 0
  br i1 %3160, label %3161, label %3579

3161:                                             ; preds = %3156
  %3162 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %3163 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %3162, i64 0, i32 0, i32 0, i32 0
  %3164 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3163, align 8
  %3165 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3154, i64 1, i32 2
  %3166 = bitcast %"class.blink::Member.318"* %3165 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %3167 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3166, align 8
  %3168 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3167, i64 0, i32 3, i32 0, i32 0, i32 0
  %3169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3168, align 8
  %3170 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3164, i64 0, i32 3, i32 0, i32 0, i32 0
  %3171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3170, align 8
  %3172 = icmp eq %"class.WTF::StringImpl"* %3169, %3171
  %3173 = bitcast %"class.blink::Node"* %3154 to %"class.blink::HTMLTableElement"*
  br i1 %3172, label %3174, label %3579

3174:                                             ; preds = %3161
  store i32 4, i32* %2, align 4
  %3175 = icmp ne %"class.blink::HeapVector.3890"* %4, null
  br i1 %3175, label %3176, label %3248

3176:                                             ; preds = %3174
  %3177 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %3178 = bitcast %"class.blink::NameSource"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3178) #15
  %3179 = load i8, i8* %5, align 1, !range !2
  %3180 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %27, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3180, align 8
  %3181 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %27, i64 0, i32 1
  store i8 %3179, i8* %3181, align 8
  %3182 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %27, i64 0, i32 2
  store i8 0, i8* %3182, align 1
  %3183 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %27, i64 0, i32 3
  store i32 1, i32* %3183, align 4
  %3184 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %27, i64 0, i32 4
  %3185 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %3186 = bitcast %"class.blink::QualifiedName"** %3184 to i64*
  store i64 %3185, i64* %3186, align 8
  %3187 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %27, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3187, align 8
  %3188 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %27, i64 0, i32 6
  store i32 -1, i32* %3188, align 8
  %3189 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %27, i64 0, i32 7
  %3190 = bitcast %"class.blink::HeapVector.3879"* %3189 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3190, i8 0, i64 16, i1 false) #15
  %3191 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %3192 = load i32, i32* %3191, align 4
  %3193 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %3194 = load i32, i32* %3193, align 8
  %3195 = icmp eq i32 %3192, %3194
  br i1 %3195, label %3205, label %3196, !prof !3

3196:                                             ; preds = %3176
  %3197 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %3198 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %3197, align 8
  %3199 = zext i32 %3192 to i64
  %3200 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3198, i64 %3199
  %3201 = bitcast %"class.blink::NameSource"* %3200 to i8*
  %3202 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %3201, %"class.blink::NameSource"* nonnull dereferenceable(56) %27) #15
  %3203 = load i32, i32* %3191, align 4
  %3204 = add i32 %3203, 1
  store i32 %3204, i32* %3191, align 4
  br label %3206

3205:                                             ; preds = %3176
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %3177, %"class.blink::NameSource"* nonnull dereferenceable(56) %27) #15
  br label %3206

3206:                                             ; preds = %3196, %3205
  %3207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3187, align 8
  %3208 = icmp eq %"class.WTF::StringImpl"* %3207, null
  br i1 %3208, label %3222, label %3209

3209:                                             ; preds = %3206
  %3210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3211 = load atomic i32, i32* %3210 monotonic, align 4
  %3212 = and i32 %3211, 2
  %3213 = icmp eq i32 %3212, 0
  %3214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3207, i64 0, i32 0
  %3215 = load i32, i32* %3214, align 4
  br i1 %3213, label %3216, label %3218

3216:                                             ; preds = %3209
  %3217 = add i32 %3215, -1
  store i32 %3217, i32* %3214, align 4
  br label %3218

3218:                                             ; preds = %3216, %3209
  %3219 = phi i32 [ %3217, %3216 ], [ %3215, %3209 ]
  %3220 = icmp eq i32 %3219, 0
  br i1 %3220, label %3221, label %3222

3221:                                             ; preds = %3218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3207) #15
  br label %3222

3222:                                             ; preds = %3221, %3218, %3206
  %3223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3180, align 8
  %3224 = icmp eq %"class.WTF::StringImpl"* %3223, null
  br i1 %3224, label %3238, label %3225

3225:                                             ; preds = %3222
  %3226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3227 = load atomic i32, i32* %3226 monotonic, align 4
  %3228 = and i32 %3227, 2
  %3229 = icmp eq i32 %3228, 0
  %3230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3223, i64 0, i32 0
  %3231 = load i32, i32* %3230, align 4
  br i1 %3229, label %3232, label %3234

3232:                                             ; preds = %3225
  %3233 = add i32 %3231, -1
  store i32 %3233, i32* %3230, align 4
  br label %3234

3234:                                             ; preds = %3232, %3225
  %3235 = phi i32 [ %3233, %3232 ], [ %3231, %3225 ]
  %3236 = icmp eq i32 %3235, 0
  br i1 %3236, label %3237, label %3238

3237:                                             ; preds = %3234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3223) #15
  br label %3238

3238:                                             ; preds = %3222, %3234, %3237
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3178) #15
  %3239 = load i32, i32* %2, align 4
  %3240 = load i32, i32* %3191, align 4
  %3241 = add i32 %3240, -1
  %3242 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %3177, i32 %3241) #15
  %3243 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3242, i64 0, i32 3
  store i32 %3239, i32* %3243, align 4
  %3244 = load i32, i32* %3191, align 4
  %3245 = add i32 %3244, -1
  %3246 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %3177, i32 %3245) #15
  %3247 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3246, i64 0, i32 6
  store i32 6, i32* %3247, align 8
  br label %3248

3248:                                             ; preds = %3238, %3174
  %3249 = call %"class.blink::HTMLTableCaptionElement"* @_ZNK5blink16HTMLTableElement7captionEv(%"class.blink::HTMLTableElement"* nonnull %3173) #15
  %3250 = icmp eq %"class.blink::HTMLTableCaptionElement"* %3249, null
  br i1 %3250, label %3369, label %3251

3251:                                             ; preds = %3248
  %3252 = bitcast %"class.blink::AXObject"** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3252) #15
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %28, align 8
  %3253 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %3254 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3253, align 8
  %3255 = getelementptr inbounds %"class.blink::HTMLTableCaptionElement", %"class.blink::HTMLTableCaptionElement"* %3249, i64 0, i32 0, i32 0, i32 0, i32 0
  %3256 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %3254, %"class.blink::Node"* %3255) #15
  store %"class.blink::AXObject"* %3256, %"class.blink::AXObject"** %28, align 8
  %3257 = icmp eq %"class.blink::AXObject"* %3256, null
  br i1 %3257, label %3366, label %3258

3258:                                             ; preds = %3251
  %3259 = call %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEE(%"class.blink::AXObject"* nonnull dereferenceable(120) %3256, i1 zeroext false, %"class.blink::HeapHashSet.3867"* dereferenceable(24) %1) #15
  %3260 = ptrtoint %"class.WTF::StringImpl"* %3259 to i64
  %3261 = bitcast %"class.WTF::String"* %7 to i64*
  %3262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %3260, i64* %3261, align 8
  %3263 = icmp eq %"class.WTF::StringImpl"* %3262, null
  br i1 %3263, label %3277, label %3264

3264:                                             ; preds = %3258
  %3265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3266 = load atomic i32, i32* %3265 monotonic, align 4
  %3267 = and i32 %3266, 2
  %3268 = icmp eq i32 %3267, 0
  %3269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3262, i64 0, i32 0
  %3270 = load i32, i32* %3269, align 4
  br i1 %3268, label %3271, label %3273

3271:                                             ; preds = %3264
  %3272 = add i32 %3270, -1
  store i32 %3272, i32* %3269, align 4
  br label %3273

3273:                                             ; preds = %3271, %3264
  %3274 = phi i32 [ %3272, %3271 ], [ %3270, %3264 ]
  %3275 = icmp eq i32 %3274, 0
  br i1 %3275, label %3276, label %3277

3276:                                             ; preds = %3273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3262) #15
  br label %3277

3277:                                             ; preds = %3276, %3273, %3258
  %3278 = icmp eq %"class.blink::HeapVector.3879"* %3, null
  br i1 %3278, label %3317, label %3279

3279:                                             ; preds = %3277
  %3280 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %8, i64 0, i32 0
  %3281 = bitcast %"class.blink::NameSourceRelatedObject"** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3281) #15
  %3282 = call %"class.blink::NameSourceRelatedObject"* @_ZN5blink25MakeGarbageCollectedTraitINS_23NameSourceRelatedObjectEE4CallIJRPNS_8AXObjectERN3WTF6StringEEEEPS1_DpOT_(%"class.blink::AXObject"** nonnull dereferenceable(8) %28, %"class.WTF::String"* nonnull dereferenceable(8) %7) #15
  store %"class.blink::NameSourceRelatedObject"* %3282, %"class.blink::NameSourceRelatedObject"** %29, align 8
  %3283 = load i32, i32* %52, align 4
  %3284 = load i32, i32* %51, align 8
  %3285 = icmp eq i32 %3283, %3284
  br i1 %3285, label %3300, label %3286, !prof !3

3286:                                             ; preds = %3279
  %3287 = ptrtoint %"class.blink::NameSourceRelatedObject"* %3282 to i64
  %3288 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %50, align 8
  %3289 = zext i32 %3283 to i64
  %3290 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %3288, i64 %3289
  %3291 = bitcast %"class.blink::Member.3885"* %3290 to i64*
  store atomic i64 %3287, i64* %3291 monotonic, align 8
  %3292 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3293 = icmp eq i32 %3292, 0
  br i1 %3293, label %3297, label %3294

3294:                                             ; preds = %3286
  %3295 = bitcast %"class.blink::NameSourceRelatedObject"* %3282 to i8*
  %3296 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %3295) #15
  br label %3297

3297:                                             ; preds = %3294, %3286
  %3298 = load i32, i32* %52, align 4
  %3299 = add i32 %3298, 1
  store i32 %3299, i32* %52, align 4
  br label %3301

3300:                                             ; preds = %3279
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3882"* nonnull %3280, %"class.blink::NameSourceRelatedObject"** nonnull dereferenceable(8) %29) #15
  br label %3301

3301:                                             ; preds = %3297, %3300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3281) #15
  %3302 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %3, i64 0, i32 0
  %3303 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %3302, %"class.WTF::Vector.3882"* nonnull dereferenceable(16) %3280) #15
  %3304 = load i32, i32* %51, align 8
  %3305 = icmp eq i32 %3304, 0
  br i1 %3305, label %3317, label %3306

3306:                                             ; preds = %3301
  %3307 = load i32, i32* %52, align 4
  %3308 = icmp eq i32 %3307, 0
  %3309 = bitcast %"class.blink::HeapVector.3879"* %8 to i8**
  br i1 %3308, label %3314, label %3310

3310:                                             ; preds = %3306
  %3311 = load i8*, i8** %3309, align 8
  %3312 = zext i32 %3307 to i64
  %3313 = shl nuw nsw i64 %3312, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %3311, i64 %3313) #15
  store i32 0, i32* %52, align 4
  br label %3314

3314:                                             ; preds = %3310, %3306
  %3315 = load i8*, i8** %3309, align 8
  %3316 = bitcast %"class.blink::HeapVector.3879"* %8 to i64*
  store atomic i64 0, i64* %3316 monotonic, align 8
  store i32 0, i32* %51, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3315) #15
  br label %3317

3317:                                             ; preds = %3314, %3301, %3277
  br i1 %3175, label %3318, label %3367

3318:                                             ; preds = %3317
  %3319 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %3320 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %3321 = load i32, i32* %3320, align 4
  %3322 = add i32 %3321, -1
  %3323 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %3319, i32 %3322) #15
  %3324 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3323, i64 0, i32 7, i32 0
  %3325 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %3, i64 0, i32 0
  %3326 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %3324, %"class.WTF::Vector.3882"* dereferenceable(16) %3325) #15
  %3327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %3328 = icmp eq %"class.WTF::StringImpl"* %3327, null
  br i1 %3328, label %3346, label %3329

3329:                                             ; preds = %3318
  %3330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3327, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3331 = load atomic i32, i32* %3330 monotonic, align 4
  %3332 = and i32 %3331, 2
  %3333 = icmp eq i32 %3332, 0
  br i1 %3333, label %3334, label %3346

3334:                                             ; preds = %3329
  %3335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3327, i64 0, i32 0
  %3336 = load i32, i32* %3335, align 4
  %3337 = zext i32 %3336 to i33
  %3338 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %3337, i33 1) #15
  %3339 = extractvalue { i33, i1 } %3338, 1
  %3340 = extractvalue { i33, i1 } %3338, 0
  %3341 = icmp slt i33 %3340, 0
  %3342 = or i1 %3339, %3341
  br i1 %3342, label %3343, label %3344, !prof !3

3343:                                             ; preds = %3334
  call void @llvm.trap() #15
  unreachable

3344:                                             ; preds = %3334
  %3345 = trunc i33 %3340 to i32
  store i32 %3345, i32* %3335, align 4
  br label %3346

3346:                                             ; preds = %3344, %3329, %3318
  %3347 = ptrtoint %"class.WTF::StringImpl"* %3327 to i64
  %3348 = bitcast %"class.blink::NameSource"* %3323 to i64*
  %3349 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3323, i64 0, i32 0, i32 0, i32 0
  %3350 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3349, align 8
  store i64 %3347, i64* %3348, align 8
  %3351 = icmp eq %"class.WTF::StringImpl"* %3350, null
  br i1 %3351, label %3365, label %3352

3352:                                             ; preds = %3346
  %3353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3350, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3354 = load atomic i32, i32* %3353 monotonic, align 4
  %3355 = and i32 %3354, 2
  %3356 = icmp eq i32 %3355, 0
  %3357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3350, i64 0, i32 0
  %3358 = load i32, i32* %3357, align 4
  br i1 %3356, label %3359, label %3361

3359:                                             ; preds = %3352
  %3360 = add i32 %3358, -1
  store i32 %3360, i32* %3357, align 4
  br label %3361

3361:                                             ; preds = %3359, %3352
  %3362 = phi i32 [ %3360, %3359 ], [ %3358, %3352 ]
  %3363 = icmp eq i32 %3362, 0
  br i1 %3363, label %3364, label %3365

3364:                                             ; preds = %3361
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3350) #15
  br label %3365

3365:                                             ; preds = %3346, %3361, %3364
  store i8 1, i8* %5, align 1
  br label %3366

3366:                                             ; preds = %3251, %3365
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3252) #15
  br label %3369

3367:                                             ; preds = %3317
  %3368 = load i64, i64* %3261, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3252) #15
  br label %4592

3369:                                             ; preds = %3366, %3248
  store i32 2, i32* %2, align 4
  br i1 %3175, label %3372, label %3370

3370:                                             ; preds = %3369
  %3371 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kSummaryAttrE, align 8
  br label %3441

3372:                                             ; preds = %3369
  %3373 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %3374 = bitcast %"class.blink::NameSource"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3374) #15
  %3375 = load i8, i8* %5, align 1, !range !2
  %3376 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names12kSummaryAttrE to i64*), align 8
  %3377 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3377, align 8
  %3378 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 0, i32 1
  store i8 %3375, i8* %3378, align 8
  %3379 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 0, i32 2
  store i8 0, i8* %3379, align 1
  %3380 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 0, i32 3
  store i32 1, i32* %3380, align 4
  %3381 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 0, i32 4
  %3382 = bitcast %"class.blink::QualifiedName"** %3381 to i64*
  store i64 %3376, i64* %3382, align 8
  %3383 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3383, align 8
  %3384 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 0, i32 6
  store i32 -1, i32* %3384, align 8
  %3385 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 0, i32 7
  %3386 = bitcast %"class.blink::HeapVector.3879"* %3385 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3386, i8 0, i64 16, i1 false) #15
  %3387 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %3388 = load i32, i32* %3387, align 4
  %3389 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %3390 = load i32, i32* %3389, align 8
  %3391 = icmp eq i32 %3388, %3390
  %3392 = inttoptr i64 %3376 to %"class.blink::QualifiedName"*
  br i1 %3391, label %3402, label %3393, !prof !3

3393:                                             ; preds = %3372
  %3394 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %3395 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %3394, align 8
  %3396 = zext i32 %3388 to i64
  %3397 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3395, i64 %3396
  %3398 = bitcast %"class.blink::NameSource"* %3397 to i8*
  %3399 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %3398, %"class.blink::NameSource"* nonnull dereferenceable(56) %30) #15
  %3400 = load i32, i32* %3387, align 4
  %3401 = add i32 %3400, 1
  store i32 %3401, i32* %3387, align 4
  br label %3403

3402:                                             ; preds = %3372
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %3373, %"class.blink::NameSource"* nonnull dereferenceable(56) %30) #15
  br label %3403

3403:                                             ; preds = %3393, %3402
  %3404 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3383, align 8
  %3405 = icmp eq %"class.WTF::StringImpl"* %3404, null
  br i1 %3405, label %3419, label %3406

3406:                                             ; preds = %3403
  %3407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3404, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3408 = load atomic i32, i32* %3407 monotonic, align 4
  %3409 = and i32 %3408, 2
  %3410 = icmp eq i32 %3409, 0
  %3411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3404, i64 0, i32 0
  %3412 = load i32, i32* %3411, align 4
  br i1 %3410, label %3413, label %3415

3413:                                             ; preds = %3406
  %3414 = add i32 %3412, -1
  store i32 %3414, i32* %3411, align 4
  br label %3415

3415:                                             ; preds = %3413, %3406
  %3416 = phi i32 [ %3414, %3413 ], [ %3412, %3406 ]
  %3417 = icmp eq i32 %3416, 0
  br i1 %3417, label %3418, label %3419

3418:                                             ; preds = %3415
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3404) #15
  br label %3419

3419:                                             ; preds = %3418, %3415, %3403
  %3420 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3377, align 8
  %3421 = icmp eq %"class.WTF::StringImpl"* %3420, null
  br i1 %3421, label %3435, label %3422

3422:                                             ; preds = %3419
  %3423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3420, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3424 = load atomic i32, i32* %3423 monotonic, align 4
  %3425 = and i32 %3424, 2
  %3426 = icmp eq i32 %3425, 0
  %3427 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3420, i64 0, i32 0
  %3428 = load i32, i32* %3427, align 4
  br i1 %3426, label %3429, label %3431

3429:                                             ; preds = %3422
  %3430 = add i32 %3428, -1
  store i32 %3430, i32* %3427, align 4
  br label %3431

3431:                                             ; preds = %3429, %3422
  %3432 = phi i32 [ %3430, %3429 ], [ %3428, %3422 ]
  %3433 = icmp eq i32 %3432, 0
  br i1 %3433, label %3434, label %3435

3434:                                             ; preds = %3431
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3420) #15
  br label %3435

3435:                                             ; preds = %3419, %3431, %3434
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3374) #15
  %3436 = load i32, i32* %2, align 4
  %3437 = load i32, i32* %3387, align 4
  %3438 = add i32 %3437, -1
  %3439 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %3373, i32 %3438) #15
  %3440 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3439, i64 0, i32 3
  store i32 %3436, i32* %3440, align 4
  br label %3441

3441:                                             ; preds = %3370, %3435
  %3442 = phi %"class.blink::QualifiedName"* [ %3371, %3370 ], [ %3392, %3435 ]
  %3443 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)***
  %3444 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*** %3443, align 8
  %3445 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %3444, i64 131
  %3446 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %3445, align 8
  %3447 = call dereferenceable(8) %"class.WTF::AtomicString"* %3446(%"class.blink::AXNodeObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %3442) #15
  %3448 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3447, i64 0, i32 0, i32 0, i32 0
  %3449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3448, align 8
  %3450 = icmp eq %"class.WTF::StringImpl"* %3449, null
  br i1 %3450, label %3451, label %3453

3451:                                             ; preds = %3441
  %3452 = bitcast %"class.WTF::String"* %7 to i64*
  br label %3576

3453:                                             ; preds = %3441
  %3454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3449, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3455 = load atomic i32, i32* %3454 monotonic, align 4
  %3456 = and i32 %3455, 2
  %3457 = icmp eq i32 %3456, 0
  br i1 %3457, label %3458, label %3470

3458:                                             ; preds = %3453
  %3459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3449, i64 0, i32 0
  %3460 = load i32, i32* %3459, align 4
  %3461 = zext i32 %3460 to i33
  %3462 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %3461, i33 1) #15
  %3463 = extractvalue { i33, i1 } %3462, 1
  %3464 = extractvalue { i33, i1 } %3462, 0
  %3465 = icmp slt i33 %3464, 0
  %3466 = or i1 %3463, %3465
  br i1 %3466, label %3467, label %3468, !prof !3

3467:                                             ; preds = %3458
  call void @llvm.trap() #15
  unreachable

3468:                                             ; preds = %3458
  %3469 = trunc i33 %3464 to i32
  store i32 %3469, i32* %3459, align 4
  br label %3470

3470:                                             ; preds = %3468, %3453
  %3471 = ptrtoint %"class.WTF::StringImpl"* %3449 to i64
  %3472 = bitcast %"class.WTF::String"* %7 to i64*
  %3473 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %3471, i64* %3472, align 8
  %3474 = icmp eq %"class.WTF::StringImpl"* %3473, null
  br i1 %3474, label %3488, label %3475

3475:                                             ; preds = %3470
  %3476 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3473, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3477 = load atomic i32, i32* %3476 monotonic, align 4
  %3478 = and i32 %3477, 2
  %3479 = icmp eq i32 %3478, 0
  %3480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3473, i64 0, i32 0
  %3481 = load i32, i32* %3480, align 4
  br i1 %3479, label %3482, label %3484

3482:                                             ; preds = %3475
  %3483 = add i32 %3481, -1
  store i32 %3483, i32* %3480, align 4
  br label %3484

3484:                                             ; preds = %3482, %3475
  %3485 = phi i32 [ %3483, %3482 ], [ %3481, %3475 ]
  %3486 = icmp eq i32 %3485, 0
  br i1 %3486, label %3487, label %3488

3487:                                             ; preds = %3484
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3473) #15
  br label %3488

3488:                                             ; preds = %3470, %3484, %3487
  br i1 %3175, label %3489, label %3574

3489:                                             ; preds = %3488
  %3490 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %3491 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %3492 = load i32, i32* %3491, align 4
  %3493 = add i32 %3492, -1
  %3494 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %3490, i32 %3493) #15
  %3495 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3494, i64 0, i32 5
  %3496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3448, align 8
  %3497 = icmp eq %"class.WTF::StringImpl"* %3496, null
  br i1 %3497, label %3515, label %3498

3498:                                             ; preds = %3489
  %3499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3500 = load atomic i32, i32* %3499 monotonic, align 4
  %3501 = and i32 %3500, 2
  %3502 = icmp eq i32 %3501, 0
  br i1 %3502, label %3503, label %3515

3503:                                             ; preds = %3498
  %3504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3496, i64 0, i32 0
  %3505 = load i32, i32* %3504, align 4
  %3506 = zext i32 %3505 to i33
  %3507 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %3506, i33 1) #15
  %3508 = extractvalue { i33, i1 } %3507, 1
  %3509 = extractvalue { i33, i1 } %3507, 0
  %3510 = icmp slt i33 %3509, 0
  %3511 = or i1 %3508, %3510
  br i1 %3511, label %3512, label %3513, !prof !3

3512:                                             ; preds = %3503
  call void @llvm.trap() #15
  unreachable

3513:                                             ; preds = %3503
  %3514 = trunc i33 %3509 to i32
  store i32 %3514, i32* %3504, align 4
  br label %3515

3515:                                             ; preds = %3513, %3498, %3489
  %3516 = ptrtoint %"class.WTF::StringImpl"* %3496 to i64
  %3517 = bitcast %"class.WTF::AtomicString"* %3495 to i64*
  %3518 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3495, i64 0, i32 0, i32 0, i32 0
  %3519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3518, align 8
  store i64 %3516, i64* %3517, align 8
  %3520 = icmp eq %"class.WTF::StringImpl"* %3519, null
  br i1 %3520, label %3534, label %3521

3521:                                             ; preds = %3515
  %3522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3519, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3523 = load atomic i32, i32* %3522 monotonic, align 4
  %3524 = and i32 %3523, 2
  %3525 = icmp eq i32 %3524, 0
  %3526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3519, i64 0, i32 0
  %3527 = load i32, i32* %3526, align 4
  br i1 %3525, label %3528, label %3530

3528:                                             ; preds = %3521
  %3529 = add i32 %3527, -1
  store i32 %3529, i32* %3526, align 4
  br label %3530

3530:                                             ; preds = %3528, %3521
  %3531 = phi i32 [ %3529, %3528 ], [ %3527, %3521 ]
  %3532 = icmp eq i32 %3531, 0
  br i1 %3532, label %3533, label %3534

3533:                                             ; preds = %3530
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3519) #15
  br label %3534

3534:                                             ; preds = %3515, %3530, %3533
  %3535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %3536 = icmp eq %"class.WTF::StringImpl"* %3535, null
  br i1 %3536, label %3554, label %3537

3537:                                             ; preds = %3534
  %3538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3539 = load atomic i32, i32* %3538 monotonic, align 4
  %3540 = and i32 %3539, 2
  %3541 = icmp eq i32 %3540, 0
  br i1 %3541, label %3542, label %3554

3542:                                             ; preds = %3537
  %3543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3535, i64 0, i32 0
  %3544 = load i32, i32* %3543, align 4
  %3545 = zext i32 %3544 to i33
  %3546 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %3545, i33 1) #15
  %3547 = extractvalue { i33, i1 } %3546, 1
  %3548 = extractvalue { i33, i1 } %3546, 0
  %3549 = icmp slt i33 %3548, 0
  %3550 = or i1 %3547, %3549
  br i1 %3550, label %3551, label %3552, !prof !3

3551:                                             ; preds = %3542
  call void @llvm.trap() #15
  unreachable

3552:                                             ; preds = %3542
  %3553 = trunc i33 %3548 to i32
  store i32 %3553, i32* %3543, align 4
  br label %3554

3554:                                             ; preds = %3552, %3537, %3534
  %3555 = ptrtoint %"class.WTF::StringImpl"* %3535 to i64
  %3556 = bitcast %"class.blink::NameSource"* %3494 to i64*
  %3557 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3494, i64 0, i32 0, i32 0, i32 0
  %3558 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3557, align 8
  store i64 %3555, i64* %3556, align 8
  %3559 = icmp eq %"class.WTF::StringImpl"* %3558, null
  br i1 %3559, label %3573, label %3560

3560:                                             ; preds = %3554
  %3561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3558, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3562 = load atomic i32, i32* %3561 monotonic, align 4
  %3563 = and i32 %3562, 2
  %3564 = icmp eq i32 %3563, 0
  %3565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3558, i64 0, i32 0
  %3566 = load i32, i32* %3565, align 4
  br i1 %3564, label %3567, label %3569

3567:                                             ; preds = %3560
  %3568 = add i32 %3566, -1
  store i32 %3568, i32* %3565, align 4
  br label %3569

3569:                                             ; preds = %3567, %3560
  %3570 = phi i32 [ %3568, %3567 ], [ %3566, %3560 ]
  %3571 = icmp eq i32 %3570, 0
  br i1 %3571, label %3572, label %3573

3572:                                             ; preds = %3569
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3558) #15
  br label %3573

3573:                                             ; preds = %3554, %3569, %3572
  store i8 1, i8* %5, align 1
  br label %3576

3574:                                             ; preds = %3488
  %3575 = load i64, i64* %3472, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4592

3576:                                             ; preds = %3451, %3573
  %3577 = phi i64* [ %3452, %3451 ], [ %3472, %3573 ]
  %3578 = load i64, i64* %3577, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4592

3579:                                             ; preds = %3161, %3151, %3153, %3156
  %3580 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %3580, label %3583, label %3581

3581:                                             ; preds = %3579
  %3582 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  br label %3583

3583:                                             ; preds = %3579, %3581
  %3584 = phi %"class.blink::Node"* [ %3582, %3581 ], [ null, %3579 ]
  %3585 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3584, i64 0, i32 1
  %3586 = load i32, i32* %3585, align 8
  %3587 = and i32 %3586, 48
  %3588 = icmp eq i32 %3587, 32
  br i1 %3588, label %3589, label %3920

3589:                                             ; preds = %3583
  store i32 7, i32* %2, align 4
  %3590 = icmp ne %"class.blink::HeapVector.3890"* %4, null
  br i1 %3590, label %3591, label %3663

3591:                                             ; preds = %3589
  %3592 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %3593 = bitcast %"class.blink::NameSource"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3593) #15
  %3594 = load i8, i8* %5, align 1, !range !2
  %3595 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %31, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3595, align 8
  %3596 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %31, i64 0, i32 1
  store i8 %3594, i8* %3596, align 8
  %3597 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %31, i64 0, i32 2
  store i8 0, i8* %3597, align 1
  %3598 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %31, i64 0, i32 3
  store i32 1, i32* %3598, align 4
  %3599 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %31, i64 0, i32 4
  %3600 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %3601 = bitcast %"class.blink::QualifiedName"** %3599 to i64*
  store i64 %3600, i64* %3601, align 8
  %3602 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %31, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3602, align 8
  %3603 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %31, i64 0, i32 6
  store i32 -1, i32* %3603, align 8
  %3604 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %31, i64 0, i32 7
  %3605 = bitcast %"class.blink::HeapVector.3879"* %3604 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3605, i8 0, i64 16, i1 false) #15
  %3606 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %3607 = load i32, i32* %3606, align 4
  %3608 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %3609 = load i32, i32* %3608, align 8
  %3610 = icmp eq i32 %3607, %3609
  br i1 %3610, label %3620, label %3611, !prof !3

3611:                                             ; preds = %3591
  %3612 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %3613 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %3612, align 8
  %3614 = zext i32 %3607 to i64
  %3615 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3613, i64 %3614
  %3616 = bitcast %"class.blink::NameSource"* %3615 to i8*
  %3617 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %3616, %"class.blink::NameSource"* nonnull dereferenceable(56) %31) #15
  %3618 = load i32, i32* %3606, align 4
  %3619 = add i32 %3618, 1
  store i32 %3619, i32* %3606, align 4
  br label %3621

3620:                                             ; preds = %3591
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %3592, %"class.blink::NameSource"* nonnull dereferenceable(56) %31) #15
  br label %3621

3621:                                             ; preds = %3611, %3620
  %3622 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3602, align 8
  %3623 = icmp eq %"class.WTF::StringImpl"* %3622, null
  br i1 %3623, label %3637, label %3624

3624:                                             ; preds = %3621
  %3625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3622, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3626 = load atomic i32, i32* %3625 monotonic, align 4
  %3627 = and i32 %3626, 2
  %3628 = icmp eq i32 %3627, 0
  %3629 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3622, i64 0, i32 0
  %3630 = load i32, i32* %3629, align 4
  br i1 %3628, label %3631, label %3633

3631:                                             ; preds = %3624
  %3632 = add i32 %3630, -1
  store i32 %3632, i32* %3629, align 4
  br label %3633

3633:                                             ; preds = %3631, %3624
  %3634 = phi i32 [ %3632, %3631 ], [ %3630, %3624 ]
  %3635 = icmp eq i32 %3634, 0
  br i1 %3635, label %3636, label %3637

3636:                                             ; preds = %3633
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3622) #15
  br label %3637

3637:                                             ; preds = %3636, %3633, %3621
  %3638 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3595, align 8
  %3639 = icmp eq %"class.WTF::StringImpl"* %3638, null
  br i1 %3639, label %3653, label %3640

3640:                                             ; preds = %3637
  %3641 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3638, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3642 = load atomic i32, i32* %3641 monotonic, align 4
  %3643 = and i32 %3642, 2
  %3644 = icmp eq i32 %3643, 0
  %3645 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3638, i64 0, i32 0
  %3646 = load i32, i32* %3645, align 4
  br i1 %3644, label %3647, label %3649

3647:                                             ; preds = %3640
  %3648 = add i32 %3646, -1
  store i32 %3648, i32* %3645, align 4
  br label %3649

3649:                                             ; preds = %3647, %3640
  %3650 = phi i32 [ %3648, %3647 ], [ %3646, %3640 ]
  %3651 = icmp eq i32 %3650, 0
  br i1 %3651, label %3652, label %3653

3652:                                             ; preds = %3649
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3638) #15
  br label %3653

3653:                                             ; preds = %3637, %3649, %3652
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3593) #15
  %3654 = load i32, i32* %2, align 4
  %3655 = load i32, i32* %3606, align 4
  %3656 = add i32 %3655, -1
  %3657 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %3592, i32 %3656) #15
  %3658 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3657, i64 0, i32 3
  store i32 %3654, i32* %3658, align 4
  %3659 = load i32, i32* %3606, align 4
  %3660 = add i32 %3659, -1
  %3661 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %3592, i32 %3660) #15
  %3662 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3661, i64 0, i32 6
  store i32 7, i32* %3662, align 8
  br label %3663

3663:                                             ; preds = %3653, %3589
  %3664 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %3664, label %3668, label %3665

3665:                                             ; preds = %3663
  %3666 = bitcast %"class.blink::Node"** %43 to %"class.blink::ContainerNode"**
  %3667 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %3666, align 8
  br label %3668

3668:                                             ; preds = %3663, %3665
  %3669 = phi %"class.blink::ContainerNode"* [ %3667, %3665 ], [ null, %3663 ]
  %3670 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %3671 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3670, i64 0, i32 0, i32 0
  %3672 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3671, align 8
  %3673 = getelementptr inbounds %"class.blink::HasTagName", %"class.blink::HasTagName"* %32, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %3672, %"class.blink::QualifiedName::QualifiedNameImpl"** %3673, align 8
  %3674 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %3672, null
  br i1 %3674, label %3682, label %3675

3675:                                             ; preds = %3668
  %3676 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3672, i64 0, i32 1
  %3677 = load i32, i32* %3676, align 4
  %3678 = and i32 %3677, 16777216
  %3679 = icmp eq i32 %3678, 0
  br i1 %3679, label %3680, label %3682

3680:                                             ; preds = %3675
  %3681 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3672, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %3681) #15
  br label %3682

3682:                                             ; preds = %3668, %3675, %3680
  %3683 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3669, i64 0, i32 1, i32 0, i32 0
  %3684 = load %"class.blink::Node"*, %"class.blink::Node"** %3683, align 8
  %3685 = icmp eq %"class.blink::Node"* %3684, null
  br i1 %3685, label %3733, label %3686

3686:                                             ; preds = %3682, %3692
  %3687 = phi %"class.blink::Node"* [ %3694, %3692 ], [ %3684, %3682 ]
  %3688 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3687, i64 0, i32 1
  %3689 = load i32, i32* %3688, align 8
  %3690 = and i32 %3689, 12
  %3691 = icmp eq i32 %3690, 0
  br i1 %3691, label %3696, label %3692

3692:                                             ; preds = %3686
  %3693 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3687, i64 0, i32 5, i32 0, i32 0
  %3694 = load %"class.blink::Node"*, %"class.blink::Node"** %3693, align 8
  %3695 = icmp eq %"class.blink::Node"* %3694, null
  br i1 %3695, label %3733, label %3686

3696:                                             ; preds = %3686
  %3697 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3673, align 8
  %3698 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3697, i64 0, i32 4, i32 0, i32 0, i32 0
  %3699 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3687, i64 1, i32 2
  %3700 = bitcast %"class.blink::Member.318"* %3699 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %3701 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3700, align 8
  %3702 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %3701, %3697
  br i1 %3702, label %3735, label %3703

3703:                                             ; preds = %3696
  %3704 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3697, i64 0, i32 3, i32 0, i32 0, i32 0
  %3705 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3704, align 8
  br label %3711

3706:                                             ; preds = %3728
  %3707 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3726, i64 1, i32 2
  %3708 = bitcast %"class.blink::Member.318"* %3707 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %3709 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3708, align 8
  %3710 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %3709, %3697
  br i1 %3710, label %3735, label %3711

3711:                                             ; preds = %3703, %3706
  %3712 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %3701, %3703 ], [ %3709, %3706 ]
  %3713 = phi %"class.blink::Node"* [ %3687, %3703 ], [ %3726, %3706 ]
  %3714 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3712, i64 0, i32 3, i32 0, i32 0, i32 0
  %3715 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3714, align 8
  %3716 = icmp eq %"class.WTF::StringImpl"* %3715, %3705
  br i1 %3716, label %3717, label %3722

3717:                                             ; preds = %3711
  %3718 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3712, i64 0, i32 4, i32 0, i32 0, i32 0
  %3719 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3718, align 8
  %3720 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3698, align 8
  %3721 = icmp eq %"class.WTF::StringImpl"* %3719, %3720
  br i1 %3721, label %3735, label %3722

3722:                                             ; preds = %3717, %3711
  br label %3723

3723:                                             ; preds = %3722, %3728
  %3724 = phi %"class.blink::Node"* [ %3726, %3728 ], [ %3713, %3722 ]
  %3725 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3724, i64 0, i32 5, i32 0, i32 0
  %3726 = load %"class.blink::Node"*, %"class.blink::Node"** %3725, align 8
  %3727 = icmp eq %"class.blink::Node"* %3726, null
  br i1 %3727, label %3733, label %3728

3728:                                             ; preds = %3723
  %3729 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3726, i64 0, i32 1
  %3730 = load i32, i32* %3729, align 8
  %3731 = and i32 %3730, 12
  %3732 = icmp eq i32 %3731, 0
  br i1 %3732, label %3706, label %3723

3733:                                             ; preds = %3692, %3723, %3682
  %3734 = getelementptr inbounds %"class.blink::HasTagName", %"class.blink::HasTagName"* %32, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3734) #15
  br label %3920

3735:                                             ; preds = %3706, %3717, %3696
  %3736 = phi %"class.blink::Node"* [ %3687, %3696 ], [ %3726, %3706 ], [ %3713, %3717 ]
  %3737 = getelementptr inbounds %"class.blink::HasTagName", %"class.blink::HasTagName"* %32, i64 0, i32 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3737) #15
  %3738 = bitcast %"class.blink::AXObject"** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3738) #15
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %33, align 8
  %3739 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %3740 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %3739, align 8
  %3741 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %3740, %"class.blink::Node"* nonnull %3736) #15
  store %"class.blink::AXObject"* %3741, %"class.blink::AXObject"** %33, align 8
  %3742 = icmp eq %"class.blink::AXObject"* %3741, null
  br i1 %3742, label %3868, label %3743

3743:                                             ; preds = %3735
  %3744 = ptrtoint %"class.blink::AXObject"* %3741 to i64
  %3745 = getelementptr inbounds %"class.blink::HeapHashSet.3867", %"class.blink::HeapHashSet.3867"* %1, i64 0, i32 0, i32 0, i32 0
  %3746 = load %"class.blink::Member.3136"*, %"class.blink::Member.3136"** %3745, align 8
  %3747 = icmp eq %"class.blink::Member.3136"* %3746, null
  br i1 %3747, label %3809, label %3748

3748:                                             ; preds = %3743
  %3749 = getelementptr inbounds %"class.blink::HeapHashSet.3867", %"class.blink::HeapHashSet.3867"* %1, i64 0, i32 0, i32 0, i32 1
  %3750 = load i32, i32* %3749, align 8
  %3751 = add i32 %3750, -1
  %3752 = zext i32 %3751 to i64
  %3753 = shl i64 %3744, 32
  %3754 = xor i64 %3753, -1
  %3755 = add i64 %3754, %3744
  %3756 = lshr i64 %3755, 22
  %3757 = xor i64 %3756, %3755
  %3758 = shl i64 %3757, 13
  %3759 = xor i64 %3758, -1
  %3760 = add i64 %3757, %3759
  %3761 = lshr i64 %3760, 8
  %3762 = xor i64 %3761, %3760
  %3763 = mul i64 %3762, 9
  %3764 = lshr i64 %3763, 15
  %3765 = xor i64 %3764, %3763
  %3766 = shl i64 %3765, 27
  %3767 = xor i64 %3766, -1
  %3768 = add i64 %3765, %3767
  %3769 = lshr i64 %3768, 31
  %3770 = xor i64 %3769, %3768
  %3771 = trunc i64 %3770 to i32
  %3772 = and i32 %3751, %3771
  %3773 = zext i32 %3772 to i64
  %3774 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %3746, i64 %3773
  %3775 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %3774, i64 0, i32 0, i32 0
  %3776 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3775, align 8
  %3777 = icmp eq %"class.blink::AXObject"* %3776, %3741
  br i1 %3777, label %3806, label %3778

3778:                                             ; preds = %3748
  %3779 = xor i32 %3771, -1
  %3780 = lshr i32 %3771, 23
  %3781 = add i32 %3780, %3779
  %3782 = shl i32 %3781, 12
  %3783 = xor i32 %3782, %3781
  %3784 = lshr i32 %3783, 7
  %3785 = xor i32 %3784, %3783
  %3786 = shl i32 %3785, 2
  %3787 = xor i32 %3786, %3785
  %3788 = lshr i32 %3787, 20
  %3789 = xor i32 %3788, %3787
  %3790 = or i32 %3789, 1
  %3791 = zext i32 %3790 to i64
  br label %3792

3792:                                             ; preds = %3797, %3778
  %3793 = phi %"class.blink::AXObject"* [ %3776, %3778 ], [ %3804, %3797 ]
  %3794 = phi i64 [ %3773, %3778 ], [ %3801, %3797 ]
  %3795 = phi i64 [ 0, %3778 ], [ %3799, %3797 ]
  %3796 = icmp eq %"class.blink::AXObject"* %3793, null
  br i1 %3796, label %3809, label %3797

3797:                                             ; preds = %3792
  %3798 = icmp eq i64 %3795, 0
  %3799 = select i1 %3798, i64 %3791, i64 %3795
  %3800 = add i64 %3799, %3794
  %3801 = and i64 %3800, %3752
  %3802 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %3746, i64 %3801
  %3803 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %3802, i64 0, i32 0, i32 0
  %3804 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3803, align 8
  %3805 = icmp eq %"class.blink::AXObject"* %3804, %3741
  br i1 %3805, label %3806, label %3792

3806:                                             ; preds = %3797, %3748
  %3807 = phi %"class.blink::Member.3136"* [ %3774, %3748 ], [ %3802, %3797 ]
  %3808 = icmp eq %"class.blink::Member.3136"* %3807, null
  br i1 %3808, label %3809, label %3868

3809:                                             ; preds = %3792, %3806, %3743
  %3810 = call %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEE(%"class.blink::AXObject"* nonnull dereferenceable(120) %3741, i1 zeroext false, %"class.blink::HeapHashSet.3867"* dereferenceable(24) %1) #15
  %3811 = ptrtoint %"class.WTF::StringImpl"* %3810 to i64
  %3812 = bitcast %"class.WTF::String"* %7 to i64*
  %3813 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %3811, i64* %3812, align 8
  %3814 = icmp eq %"class.WTF::StringImpl"* %3813, null
  br i1 %3814, label %3828, label %3815

3815:                                             ; preds = %3809
  %3816 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3813, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3817 = load atomic i32, i32* %3816 monotonic, align 4
  %3818 = and i32 %3817, 2
  %3819 = icmp eq i32 %3818, 0
  %3820 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3813, i64 0, i32 0
  %3821 = load i32, i32* %3820, align 4
  br i1 %3819, label %3822, label %3824

3822:                                             ; preds = %3815
  %3823 = add i32 %3821, -1
  store i32 %3823, i32* %3820, align 4
  br label %3824

3824:                                             ; preds = %3822, %3815
  %3825 = phi i32 [ %3823, %3822 ], [ %3821, %3815 ]
  %3826 = icmp eq i32 %3825, 0
  br i1 %3826, label %3827, label %3828

3827:                                             ; preds = %3824
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3813) #15
  br label %3828

3828:                                             ; preds = %3827, %3824, %3809
  %3829 = icmp eq %"class.blink::HeapVector.3879"* %3, null
  br i1 %3829, label %3868, label %3830

3830:                                             ; preds = %3828
  %3831 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %8, i64 0, i32 0
  %3832 = bitcast %"class.blink::NameSourceRelatedObject"** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3832) #15
  %3833 = call %"class.blink::NameSourceRelatedObject"* @_ZN5blink25MakeGarbageCollectedTraitINS_23NameSourceRelatedObjectEE4CallIJRPNS_8AXObjectERN3WTF6StringEEEEPS1_DpOT_(%"class.blink::AXObject"** nonnull dereferenceable(8) %33, %"class.WTF::String"* nonnull dereferenceable(8) %7) #15
  store %"class.blink::NameSourceRelatedObject"* %3833, %"class.blink::NameSourceRelatedObject"** %34, align 8
  %3834 = load i32, i32* %52, align 4
  %3835 = load i32, i32* %51, align 8
  %3836 = icmp eq i32 %3834, %3835
  br i1 %3836, label %3851, label %3837, !prof !3

3837:                                             ; preds = %3830
  %3838 = ptrtoint %"class.blink::NameSourceRelatedObject"* %3833 to i64
  %3839 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %50, align 8
  %3840 = zext i32 %3834 to i64
  %3841 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %3839, i64 %3840
  %3842 = bitcast %"class.blink::Member.3885"* %3841 to i64*
  store atomic i64 %3838, i64* %3842 monotonic, align 8
  %3843 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3844 = icmp eq i32 %3843, 0
  br i1 %3844, label %3848, label %3845

3845:                                             ; preds = %3837
  %3846 = bitcast %"class.blink::NameSourceRelatedObject"* %3833 to i8*
  %3847 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %3846) #15
  br label %3848

3848:                                             ; preds = %3845, %3837
  %3849 = load i32, i32* %52, align 4
  %3850 = add i32 %3849, 1
  store i32 %3850, i32* %52, align 4
  br label %3852

3851:                                             ; preds = %3830
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3882"* nonnull %3831, %"class.blink::NameSourceRelatedObject"** nonnull dereferenceable(8) %34) #15
  br label %3852

3852:                                             ; preds = %3848, %3851
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3832) #15
  %3853 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %3, i64 0, i32 0
  %3854 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %3853, %"class.WTF::Vector.3882"* nonnull dereferenceable(16) %3831) #15
  %3855 = load i32, i32* %51, align 8
  %3856 = icmp eq i32 %3855, 0
  br i1 %3856, label %3868, label %3857

3857:                                             ; preds = %3852
  %3858 = load i32, i32* %52, align 4
  %3859 = icmp eq i32 %3858, 0
  %3860 = bitcast %"class.blink::HeapVector.3879"* %8 to i8**
  br i1 %3859, label %3865, label %3861

3861:                                             ; preds = %3857
  %3862 = load i8*, i8** %3860, align 8
  %3863 = zext i32 %3858 to i64
  %3864 = shl nuw nsw i64 %3863, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %3862, i64 %3864) #15
  store i32 0, i32* %52, align 4
  br label %3865

3865:                                             ; preds = %3861, %3857
  %3866 = load i8*, i8** %3860, align 8
  %3867 = bitcast %"class.blink::HeapVector.3879"* %8 to i64*
  store atomic i64 0, i64* %3867 monotonic, align 8
  store i32 0, i32* %51, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3866) #15
  br label %3868

3868:                                             ; preds = %3806, %3865, %3852, %3828, %3735
  br i1 %3590, label %3869, label %3917

3869:                                             ; preds = %3868
  %3870 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %3871 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %3872 = load i32, i32* %3871, align 4
  %3873 = add i32 %3872, -1
  %3874 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %3870, i32 %3873) #15
  %3875 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %3876 = icmp eq %"class.WTF::StringImpl"* %3875, null
  br i1 %3876, label %3894, label %3877

3877:                                             ; preds = %3869
  %3878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3875, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3879 = load atomic i32, i32* %3878 monotonic, align 4
  %3880 = and i32 %3879, 2
  %3881 = icmp eq i32 %3880, 0
  br i1 %3881, label %3882, label %3894

3882:                                             ; preds = %3877
  %3883 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3875, i64 0, i32 0
  %3884 = load i32, i32* %3883, align 4
  %3885 = zext i32 %3884 to i33
  %3886 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %3885, i33 1) #15
  %3887 = extractvalue { i33, i1 } %3886, 1
  %3888 = extractvalue { i33, i1 } %3886, 0
  %3889 = icmp slt i33 %3888, 0
  %3890 = or i1 %3887, %3889
  br i1 %3890, label %3891, label %3892, !prof !3

3891:                                             ; preds = %3882
  call void @llvm.trap() #15
  unreachable

3892:                                             ; preds = %3882
  %3893 = trunc i33 %3888 to i32
  store i32 %3893, i32* %3883, align 4
  br label %3894

3894:                                             ; preds = %3892, %3877, %3869
  %3895 = ptrtoint %"class.WTF::StringImpl"* %3875 to i64
  %3896 = bitcast %"class.blink::NameSource"* %3874 to i64*
  %3897 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3874, i64 0, i32 0, i32 0, i32 0
  %3898 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3897, align 8
  store i64 %3895, i64* %3896, align 8
  %3899 = icmp eq %"class.WTF::StringImpl"* %3898, null
  br i1 %3899, label %3913, label %3900

3900:                                             ; preds = %3894
  %3901 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3898, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3902 = load atomic i32, i32* %3901 monotonic, align 4
  %3903 = and i32 %3902, 2
  %3904 = icmp eq i32 %3903, 0
  %3905 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3898, i64 0, i32 0
  %3906 = load i32, i32* %3905, align 4
  br i1 %3904, label %3907, label %3909

3907:                                             ; preds = %3900
  %3908 = add i32 %3906, -1
  store i32 %3908, i32* %3905, align 4
  br label %3909

3909:                                             ; preds = %3907, %3900
  %3910 = phi i32 [ %3908, %3907 ], [ %3906, %3900 ]
  %3911 = icmp eq i32 %3910, 0
  br i1 %3911, label %3912, label %3913

3912:                                             ; preds = %3909
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3898) #15
  br label %3913

3913:                                             ; preds = %3912, %3909, %3894
  %3914 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3874, i64 0, i32 7, i32 0
  %3915 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %3, i64 0, i32 0
  %3916 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %3914, %"class.WTF::Vector.3882"* dereferenceable(16) %3915) #15
  store i8 1, i8* %5, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3738) #15
  br label %3920

3917:                                             ; preds = %3868
  %3918 = bitcast %"class.WTF::String"* %7 to i64*
  %3919 = load i64, i64* %3918, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3738) #15
  br label %4590

3920:                                             ; preds = %3733, %3913, %3583
  %3921 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %40) #15
  br i1 %3921, label %4204, label %3922

3922:                                             ; preds = %3920
  %3923 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %3924 = icmp eq %"class.blink::Node"* %3923, null
  br i1 %3924, label %4204, label %3925

3925:                                             ; preds = %3922
  %3926 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3923, i64 0, i32 1
  %3927 = load i32, i32* %3926, align 8
  %3928 = and i32 %3927, 48
  %3929 = icmp eq i32 %3928, 0
  br i1 %3929, label %3930, label %4204

3930:                                             ; preds = %3925
  %3931 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %3932 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %3931, i64 0, i32 0, i32 0, i32 0
  %3933 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3932, align 8
  %3934 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %3923, i64 1, i32 2
  %3935 = bitcast %"class.blink::Member.318"* %3934 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %3936 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %3935, align 8
  %3937 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3936, i64 0, i32 3, i32 0, i32 0, i32 0
  %3938 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3937, align 8
  %3939 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %3933, i64 0, i32 3, i32 0, i32 0, i32 0
  %3940 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3939, align 8
  %3941 = icmp eq %"class.WTF::StringImpl"* %3938, %3940
  %3942 = bitcast %"class.blink::Node"* %3923 to %"class.blink::HTMLFieldSetElement"*
  br i1 %3941, label %3943, label %4204

3943:                                             ; preds = %3930
  store i32 7, i32* %2, align 4
  %3944 = icmp ne %"class.blink::HeapVector.3890"* %4, null
  br i1 %3944, label %3945, label %4017

3945:                                             ; preds = %3943
  %3946 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %3947 = bitcast %"class.blink::NameSource"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3947) #15
  %3948 = load i8, i8* %5, align 1, !range !2
  %3949 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %35, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3949, align 8
  %3950 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %35, i64 0, i32 1
  store i8 %3948, i8* %3950, align 8
  %3951 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %35, i64 0, i32 2
  store i8 0, i8* %3951, align 1
  %3952 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %35, i64 0, i32 3
  store i32 1, i32* %3952, align 4
  %3953 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %35, i64 0, i32 4
  %3954 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %3955 = bitcast %"class.blink::QualifiedName"** %3953 to i64*
  store i64 %3954, i64* %3955, align 8
  %3956 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %35, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3956, align 8
  %3957 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %35, i64 0, i32 6
  store i32 -1, i32* %3957, align 8
  %3958 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %35, i64 0, i32 7
  %3959 = bitcast %"class.blink::HeapVector.3879"* %3958 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3959, i8 0, i64 16, i1 false) #15
  %3960 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %3961 = load i32, i32* %3960, align 4
  %3962 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %3963 = load i32, i32* %3962, align 8
  %3964 = icmp eq i32 %3961, %3963
  br i1 %3964, label %3974, label %3965, !prof !3

3965:                                             ; preds = %3945
  %3966 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %3967 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %3966, align 8
  %3968 = zext i32 %3961 to i64
  %3969 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %3967, i64 %3968
  %3970 = bitcast %"class.blink::NameSource"* %3969 to i8*
  %3971 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %3970, %"class.blink::NameSource"* nonnull dereferenceable(56) %35) #15
  %3972 = load i32, i32* %3960, align 4
  %3973 = add i32 %3972, 1
  store i32 %3973, i32* %3960, align 4
  br label %3975

3974:                                             ; preds = %3945
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %3946, %"class.blink::NameSource"* nonnull dereferenceable(56) %35) #15
  br label %3975

3975:                                             ; preds = %3965, %3974
  %3976 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3956, align 8
  %3977 = icmp eq %"class.WTF::StringImpl"* %3976, null
  br i1 %3977, label %3991, label %3978

3978:                                             ; preds = %3975
  %3979 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3976, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3980 = load atomic i32, i32* %3979 monotonic, align 4
  %3981 = and i32 %3980, 2
  %3982 = icmp eq i32 %3981, 0
  %3983 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3976, i64 0, i32 0
  %3984 = load i32, i32* %3983, align 4
  br i1 %3982, label %3985, label %3987

3985:                                             ; preds = %3978
  %3986 = add i32 %3984, -1
  store i32 %3986, i32* %3983, align 4
  br label %3987

3987:                                             ; preds = %3985, %3978
  %3988 = phi i32 [ %3986, %3985 ], [ %3984, %3978 ]
  %3989 = icmp eq i32 %3988, 0
  br i1 %3989, label %3990, label %3991

3990:                                             ; preds = %3987
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3976) #15
  br label %3991

3991:                                             ; preds = %3990, %3987, %3975
  %3992 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3949, align 8
  %3993 = icmp eq %"class.WTF::StringImpl"* %3992, null
  br i1 %3993, label %4007, label %3994

3994:                                             ; preds = %3991
  %3995 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3992, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3996 = load atomic i32, i32* %3995 monotonic, align 4
  %3997 = and i32 %3996, 2
  %3998 = icmp eq i32 %3997, 0
  %3999 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3992, i64 0, i32 0
  %4000 = load i32, i32* %3999, align 4
  br i1 %3998, label %4001, label %4003

4001:                                             ; preds = %3994
  %4002 = add i32 %4000, -1
  store i32 %4002, i32* %3999, align 4
  br label %4003

4003:                                             ; preds = %4001, %3994
  %4004 = phi i32 [ %4002, %4001 ], [ %4000, %3994 ]
  %4005 = icmp eq i32 %4004, 0
  br i1 %4005, label %4006, label %4007

4006:                                             ; preds = %4003
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3992) #15
  br label %4007

4007:                                             ; preds = %3991, %4003, %4006
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3947) #15
  %4008 = load i32, i32* %2, align 4
  %4009 = load i32, i32* %3960, align 4
  %4010 = add i32 %4009, -1
  %4011 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %3946, i32 %4010) #15
  %4012 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4011, i64 0, i32 3
  store i32 %4008, i32* %4012, align 4
  %4013 = load i32, i32* %3960, align 4
  %4014 = add i32 %4013, -1
  %4015 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %3946, i32 %4014) #15
  %4016 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4015, i64 0, i32 6
  store i32 4, i32* %4016, align 8
  br label %4017

4017:                                             ; preds = %4007, %3943
  %4018 = call %"class.blink::HTMLLegendElement"* @_ZNK5blink19HTMLFieldSetElement6LegendEv(%"class.blink::HTMLFieldSetElement"* nonnull %3942) #15
  %4019 = icmp eq %"class.blink::HTMLLegendElement"* %4018, null
  br i1 %4019, label %4204, label %4020

4020:                                             ; preds = %4017
  %4021 = bitcast %"class.blink::AXObject"** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4021) #15
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %36, align 8
  %4022 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %4023 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %4022, align 8
  %4024 = getelementptr inbounds %"class.blink::HTMLLegendElement", %"class.blink::HTMLLegendElement"* %4018, i64 0, i32 0, i32 0, i32 0, i32 0
  %4025 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %4023, %"class.blink::Node"* %4024) #15
  store %"class.blink::AXObject"* %4025, %"class.blink::AXObject"** %36, align 8
  %4026 = icmp eq %"class.blink::AXObject"* %4025, null
  br i1 %4026, label %4201, label %4027

4027:                                             ; preds = %4020
  %4028 = ptrtoint %"class.blink::AXObject"* %4025 to i64
  %4029 = getelementptr inbounds %"class.blink::HeapHashSet.3867", %"class.blink::HeapHashSet.3867"* %1, i64 0, i32 0, i32 0, i32 0
  %4030 = load %"class.blink::Member.3136"*, %"class.blink::Member.3136"** %4029, align 8
  %4031 = icmp eq %"class.blink::Member.3136"* %4030, null
  br i1 %4031, label %4093, label %4032

4032:                                             ; preds = %4027
  %4033 = getelementptr inbounds %"class.blink::HeapHashSet.3867", %"class.blink::HeapHashSet.3867"* %1, i64 0, i32 0, i32 0, i32 1
  %4034 = load i32, i32* %4033, align 8
  %4035 = add i32 %4034, -1
  %4036 = zext i32 %4035 to i64
  %4037 = shl i64 %4028, 32
  %4038 = xor i64 %4037, -1
  %4039 = add i64 %4038, %4028
  %4040 = lshr i64 %4039, 22
  %4041 = xor i64 %4040, %4039
  %4042 = shl i64 %4041, 13
  %4043 = xor i64 %4042, -1
  %4044 = add i64 %4041, %4043
  %4045 = lshr i64 %4044, 8
  %4046 = xor i64 %4045, %4044
  %4047 = mul i64 %4046, 9
  %4048 = lshr i64 %4047, 15
  %4049 = xor i64 %4048, %4047
  %4050 = shl i64 %4049, 27
  %4051 = xor i64 %4050, -1
  %4052 = add i64 %4049, %4051
  %4053 = lshr i64 %4052, 31
  %4054 = xor i64 %4053, %4052
  %4055 = trunc i64 %4054 to i32
  %4056 = and i32 %4035, %4055
  %4057 = zext i32 %4056 to i64
  %4058 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %4030, i64 %4057
  %4059 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %4058, i64 0, i32 0, i32 0
  %4060 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %4059, align 8
  %4061 = icmp eq %"class.blink::AXObject"* %4060, %4025
  br i1 %4061, label %4090, label %4062

4062:                                             ; preds = %4032
  %4063 = xor i32 %4055, -1
  %4064 = lshr i32 %4055, 23
  %4065 = add i32 %4064, %4063
  %4066 = shl i32 %4065, 12
  %4067 = xor i32 %4066, %4065
  %4068 = lshr i32 %4067, 7
  %4069 = xor i32 %4068, %4067
  %4070 = shl i32 %4069, 2
  %4071 = xor i32 %4070, %4069
  %4072 = lshr i32 %4071, 20
  %4073 = xor i32 %4072, %4071
  %4074 = or i32 %4073, 1
  %4075 = zext i32 %4074 to i64
  br label %4076

4076:                                             ; preds = %4081, %4062
  %4077 = phi %"class.blink::AXObject"* [ %4060, %4062 ], [ %4088, %4081 ]
  %4078 = phi i64 [ %4057, %4062 ], [ %4085, %4081 ]
  %4079 = phi i64 [ 0, %4062 ], [ %4083, %4081 ]
  %4080 = icmp eq %"class.blink::AXObject"* %4077, null
  br i1 %4080, label %4093, label %4081

4081:                                             ; preds = %4076
  %4082 = icmp eq i64 %4079, 0
  %4083 = select i1 %4082, i64 %4075, i64 %4079
  %4084 = add i64 %4083, %4078
  %4085 = and i64 %4084, %4036
  %4086 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %4030, i64 %4085
  %4087 = getelementptr inbounds %"class.blink::Member.3136", %"class.blink::Member.3136"* %4086, i64 0, i32 0, i32 0
  %4088 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %4087, align 8
  %4089 = icmp eq %"class.blink::AXObject"* %4088, %4025
  br i1 %4089, label %4090, label %4076

4090:                                             ; preds = %4081, %4032
  %4091 = phi %"class.blink::Member.3136"* [ %4058, %4032 ], [ %4086, %4081 ]
  %4092 = icmp eq %"class.blink::Member.3136"* %4091, null
  br i1 %4092, label %4093, label %4201

4093:                                             ; preds = %4076, %4090, %4027
  %4094 = call %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEE(%"class.blink::AXObject"* nonnull dereferenceable(120) %4025, i1 zeroext false, %"class.blink::HeapHashSet.3867"* dereferenceable(24) %1) #15
  %4095 = ptrtoint %"class.WTF::StringImpl"* %4094 to i64
  %4096 = bitcast %"class.WTF::String"* %7 to i64*
  %4097 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %4095, i64* %4096, align 8
  %4098 = icmp eq %"class.WTF::StringImpl"* %4097, null
  br i1 %4098, label %4112, label %4099

4099:                                             ; preds = %4093
  %4100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4097, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4101 = load atomic i32, i32* %4100 monotonic, align 4
  %4102 = and i32 %4101, 2
  %4103 = icmp eq i32 %4102, 0
  %4104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4097, i64 0, i32 0
  %4105 = load i32, i32* %4104, align 4
  br i1 %4103, label %4106, label %4108

4106:                                             ; preds = %4099
  %4107 = add i32 %4105, -1
  store i32 %4107, i32* %4104, align 4
  br label %4108

4108:                                             ; preds = %4106, %4099
  %4109 = phi i32 [ %4107, %4106 ], [ %4105, %4099 ]
  %4110 = icmp eq i32 %4109, 0
  br i1 %4110, label %4111, label %4112

4111:                                             ; preds = %4108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4097) #15
  br label %4112

4112:                                             ; preds = %4111, %4108, %4093
  %4113 = icmp eq %"class.blink::HeapVector.3879"* %3, null
  br i1 %4113, label %4152, label %4114

4114:                                             ; preds = %4112
  %4115 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %8, i64 0, i32 0
  %4116 = bitcast %"class.blink::NameSourceRelatedObject"** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4116) #15
  %4117 = call %"class.blink::NameSourceRelatedObject"* @_ZN5blink25MakeGarbageCollectedTraitINS_23NameSourceRelatedObjectEE4CallIJRPNS_8AXObjectERN3WTF6StringEEEEPS1_DpOT_(%"class.blink::AXObject"** nonnull dereferenceable(8) %36, %"class.WTF::String"* nonnull dereferenceable(8) %7) #15
  store %"class.blink::NameSourceRelatedObject"* %4117, %"class.blink::NameSourceRelatedObject"** %37, align 8
  %4118 = load i32, i32* %52, align 4
  %4119 = load i32, i32* %51, align 8
  %4120 = icmp eq i32 %4118, %4119
  br i1 %4120, label %4135, label %4121, !prof !3

4121:                                             ; preds = %4114
  %4122 = ptrtoint %"class.blink::NameSourceRelatedObject"* %4117 to i64
  %4123 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %50, align 8
  %4124 = zext i32 %4118 to i64
  %4125 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %4123, i64 %4124
  %4126 = bitcast %"class.blink::Member.3885"* %4125 to i64*
  store atomic i64 %4122, i64* %4126 monotonic, align 8
  %4127 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %4128 = icmp eq i32 %4127, 0
  br i1 %4128, label %4132, label %4129

4129:                                             ; preds = %4121
  %4130 = bitcast %"class.blink::NameSourceRelatedObject"* %4117 to i8*
  %4131 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %4130) #15
  br label %4132

4132:                                             ; preds = %4129, %4121
  %4133 = load i32, i32* %52, align 4
  %4134 = add i32 %4133, 1
  store i32 %4134, i32* %52, align 4
  br label %4136

4135:                                             ; preds = %4114
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3882"* nonnull %4115, %"class.blink::NameSourceRelatedObject"** nonnull dereferenceable(8) %37) #15
  br label %4136

4136:                                             ; preds = %4132, %4135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4116) #15
  %4137 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %3, i64 0, i32 0
  %4138 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %4137, %"class.WTF::Vector.3882"* nonnull dereferenceable(16) %4115) #15
  %4139 = load i32, i32* %51, align 8
  %4140 = icmp eq i32 %4139, 0
  br i1 %4140, label %4152, label %4141

4141:                                             ; preds = %4136
  %4142 = load i32, i32* %52, align 4
  %4143 = icmp eq i32 %4142, 0
  %4144 = bitcast %"class.blink::HeapVector.3879"* %8 to i8**
  br i1 %4143, label %4149, label %4145

4145:                                             ; preds = %4141
  %4146 = load i8*, i8** %4144, align 8
  %4147 = zext i32 %4142 to i64
  %4148 = shl nuw nsw i64 %4147, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %4146, i64 %4148) #15
  store i32 0, i32* %52, align 4
  br label %4149

4149:                                             ; preds = %4145, %4141
  %4150 = load i8*, i8** %4144, align 8
  %4151 = bitcast %"class.blink::HeapVector.3879"* %8 to i64*
  store atomic i64 0, i64* %4151 monotonic, align 8
  store i32 0, i32* %51, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %4150) #15
  br label %4152

4152:                                             ; preds = %4149, %4136, %4112
  br i1 %3944, label %4153, label %4202

4153:                                             ; preds = %4152
  %4154 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %4155 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %4156 = load i32, i32* %4155, align 4
  %4157 = add i32 %4156, -1
  %4158 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %4154, i32 %4157) #15
  %4159 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4158, i64 0, i32 7, i32 0
  %4160 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %3, i64 0, i32 0
  %4161 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %4159, %"class.WTF::Vector.3882"* dereferenceable(16) %4160) #15
  %4162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %4163 = icmp eq %"class.WTF::StringImpl"* %4162, null
  br i1 %4163, label %4181, label %4164

4164:                                             ; preds = %4153
  %4165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4166 = load atomic i32, i32* %4165 monotonic, align 4
  %4167 = and i32 %4166, 2
  %4168 = icmp eq i32 %4167, 0
  br i1 %4168, label %4169, label %4181

4169:                                             ; preds = %4164
  %4170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4162, i64 0, i32 0
  %4171 = load i32, i32* %4170, align 4
  %4172 = zext i32 %4171 to i33
  %4173 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %4172, i33 1) #15
  %4174 = extractvalue { i33, i1 } %4173, 1
  %4175 = extractvalue { i33, i1 } %4173, 0
  %4176 = icmp slt i33 %4175, 0
  %4177 = or i1 %4174, %4176
  br i1 %4177, label %4178, label %4179, !prof !3

4178:                                             ; preds = %4169
  call void @llvm.trap() #15
  unreachable

4179:                                             ; preds = %4169
  %4180 = trunc i33 %4175 to i32
  store i32 %4180, i32* %4170, align 4
  br label %4181

4181:                                             ; preds = %4179, %4164, %4153
  %4182 = ptrtoint %"class.WTF::StringImpl"* %4162 to i64
  %4183 = bitcast %"class.blink::NameSource"* %4158 to i64*
  %4184 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4158, i64 0, i32 0, i32 0, i32 0
  %4185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4184, align 8
  store i64 %4182, i64* %4183, align 8
  %4186 = icmp eq %"class.WTF::StringImpl"* %4185, null
  br i1 %4186, label %4200, label %4187

4187:                                             ; preds = %4181
  %4188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4185, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4189 = load atomic i32, i32* %4188 monotonic, align 4
  %4190 = and i32 %4189, 2
  %4191 = icmp eq i32 %4190, 0
  %4192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4185, i64 0, i32 0
  %4193 = load i32, i32* %4192, align 4
  br i1 %4191, label %4194, label %4196

4194:                                             ; preds = %4187
  %4195 = add i32 %4193, -1
  store i32 %4195, i32* %4192, align 4
  br label %4196

4196:                                             ; preds = %4194, %4187
  %4197 = phi i32 [ %4195, %4194 ], [ %4193, %4187 ]
  %4198 = icmp eq i32 %4197, 0
  br i1 %4198, label %4199, label %4200

4199:                                             ; preds = %4196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4185) #15
  br label %4200

4200:                                             ; preds = %4181, %4196, %4199
  store i8 1, i8* %5, align 1
  br label %4201

4201:                                             ; preds = %4090, %4020, %4200
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4021) #15
  br label %4204

4202:                                             ; preds = %4152
  %4203 = load i64, i64* %4096, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4021) #15
  br label %4590

4204:                                             ; preds = %3930, %4017, %4201, %3920, %3922, %3925
  %4205 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %40) #15
  %4206 = icmp eq i32 %4205, 145
  br i1 %4206, label %4207, label %4587

4207:                                             ; preds = %4204
  %4208 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %4209 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %4208, align 8
  %4210 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %4209, i64 126
  %4211 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %4210, align 8
  %4212 = call %"class.blink::Document"* %4211(%"class.blink::AXNodeObject"* %0) #15
  %4213 = icmp eq %"class.blink::Document"* %4212, null
  br i1 %4213, label %4587, label %4214

4214:                                             ; preds = %4207
  store i32 2, i32* %2, align 4
  %4215 = icmp ne %"class.blink::HeapVector.3890"* %4, null
  br i1 %4215, label %4216, label %4285

4216:                                             ; preds = %4214
  %4217 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %4218 = bitcast %"class.blink::NameSource"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4218) #15
  %4219 = icmp ne i8* %5, null
  %4220 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE to i64*), align 8
  %4221 = zext i1 %4219 to i8
  %4222 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4222, align 8
  %4223 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 0, i32 1
  store i8 %4221, i8* %4223, align 8
  %4224 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 0, i32 2
  store i8 0, i8* %4224, align 1
  %4225 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 0, i32 3
  store i32 1, i32* %4225, align 4
  %4226 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 0, i32 4
  %4227 = bitcast %"class.blink::QualifiedName"** %4226 to i64*
  store i64 %4220, i64* %4227, align 8
  %4228 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4228, align 8
  %4229 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 0, i32 6
  store i32 -1, i32* %4229, align 8
  %4230 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 0, i32 7
  %4231 = bitcast %"class.blink::HeapVector.3879"* %4230 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4231, i8 0, i64 16, i1 false) #15
  %4232 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %4233 = load i32, i32* %4232, align 4
  %4234 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %4235 = load i32, i32* %4234, align 8
  %4236 = icmp eq i32 %4233, %4235
  br i1 %4236, label %4246, label %4237, !prof !3

4237:                                             ; preds = %4216
  %4238 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %4239 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %4238, align 8
  %4240 = zext i32 %4233 to i64
  %4241 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4239, i64 %4240
  %4242 = bitcast %"class.blink::NameSource"* %4241 to i8*
  %4243 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %4242, %"class.blink::NameSource"* nonnull dereferenceable(56) %38) #15
  %4244 = load i32, i32* %4232, align 4
  %4245 = add i32 %4244, 1
  store i32 %4245, i32* %4232, align 4
  br label %4247

4246:                                             ; preds = %4216
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %4217, %"class.blink::NameSource"* nonnull dereferenceable(56) %38) #15
  br label %4247

4247:                                             ; preds = %4237, %4246
  %4248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4228, align 8
  %4249 = icmp eq %"class.WTF::StringImpl"* %4248, null
  br i1 %4249, label %4263, label %4250

4250:                                             ; preds = %4247
  %4251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4252 = load atomic i32, i32* %4251 monotonic, align 4
  %4253 = and i32 %4252, 2
  %4254 = icmp eq i32 %4253, 0
  %4255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4248, i64 0, i32 0
  %4256 = load i32, i32* %4255, align 4
  br i1 %4254, label %4257, label %4259

4257:                                             ; preds = %4250
  %4258 = add i32 %4256, -1
  store i32 %4258, i32* %4255, align 4
  br label %4259

4259:                                             ; preds = %4257, %4250
  %4260 = phi i32 [ %4258, %4257 ], [ %4256, %4250 ]
  %4261 = icmp eq i32 %4260, 0
  br i1 %4261, label %4262, label %4263

4262:                                             ; preds = %4259
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4248) #15
  br label %4263

4263:                                             ; preds = %4262, %4259, %4247
  %4264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4222, align 8
  %4265 = icmp eq %"class.WTF::StringImpl"* %4264, null
  br i1 %4265, label %4279, label %4266

4266:                                             ; preds = %4263
  %4267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4268 = load atomic i32, i32* %4267 monotonic, align 4
  %4269 = and i32 %4268, 2
  %4270 = icmp eq i32 %4269, 0
  %4271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4264, i64 0, i32 0
  %4272 = load i32, i32* %4271, align 4
  br i1 %4270, label %4273, label %4275

4273:                                             ; preds = %4266
  %4274 = add i32 %4272, -1
  store i32 %4274, i32* %4271, align 4
  br label %4275

4275:                                             ; preds = %4273, %4266
  %4276 = phi i32 [ %4274, %4273 ], [ %4272, %4266 ]
  %4277 = icmp eq i32 %4276, 0
  br i1 %4277, label %4278, label %4279

4278:                                             ; preds = %4275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4264) #15
  br label %4279

4279:                                             ; preds = %4263, %4275, %4278
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4218) #15
  %4280 = load i32, i32* %2, align 4
  %4281 = load i32, i32* %4232, align 4
  %4282 = add i32 %4281, -1
  %4283 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %4217, i32 %4282) #15
  %4284 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4283, i64 0, i32 3
  store i32 %4280, i32* %4284, align 4
  br label %4285

4285:                                             ; preds = %4279, %4214
  %4286 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4212, i64 0, i32 47, i32 0, i32 0
  %4287 = load %"class.blink::Element"*, %"class.blink::Element"** %4286, align 8
  %4288 = icmp eq %"class.blink::Element"* %4287, null
  br i1 %4288, label %4421, label %4289

4289:                                             ; preds = %4285
  %4290 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_17AOMStringPropertyE(%"class.blink::Element"* nonnull %4287, i32 7) #15
  %4291 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4290, i64 0, i32 0, i32 0, i32 0
  %4292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4291, align 8
  %4293 = icmp eq %"class.WTF::StringImpl"* %4292, null
  br i1 %4293, label %4421, label %4294

4294:                                             ; preds = %4289
  %4295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4292, i64 0, i32 1
  %4296 = load i32, i32* %4295, align 4
  %4297 = icmp eq i32 %4296, 0
  br i1 %4297, label %4421, label %4298

4298:                                             ; preds = %4294
  %4299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4300 = load atomic i32, i32* %4299 monotonic, align 4
  %4301 = and i32 %4300, 2
  %4302 = icmp eq i32 %4301, 0
  br i1 %4302, label %4303, label %4315

4303:                                             ; preds = %4298
  %4304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4292, i64 0, i32 0
  %4305 = load i32, i32* %4304, align 4
  %4306 = zext i32 %4305 to i33
  %4307 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %4306, i33 1) #15
  %4308 = extractvalue { i33, i1 } %4307, 1
  %4309 = extractvalue { i33, i1 } %4307, 0
  %4310 = icmp slt i33 %4309, 0
  %4311 = or i1 %4308, %4310
  br i1 %4311, label %4312, label %4313, !prof !3

4312:                                             ; preds = %4303
  call void @llvm.trap() #15
  unreachable

4313:                                             ; preds = %4303
  %4314 = trunc i33 %4309 to i32
  store i32 %4314, i32* %4304, align 4
  br label %4315

4315:                                             ; preds = %4313, %4298
  %4316 = ptrtoint %"class.WTF::StringImpl"* %4292 to i64
  %4317 = bitcast %"class.WTF::String"* %7 to i64*
  %4318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %4316, i64* %4317, align 8
  %4319 = icmp eq %"class.WTF::StringImpl"* %4318, null
  br i1 %4319, label %4333, label %4320

4320:                                             ; preds = %4315
  %4321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4322 = load atomic i32, i32* %4321 monotonic, align 4
  %4323 = and i32 %4322, 2
  %4324 = icmp eq i32 %4323, 0
  %4325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4318, i64 0, i32 0
  %4326 = load i32, i32* %4325, align 4
  br i1 %4324, label %4327, label %4329

4327:                                             ; preds = %4320
  %4328 = add i32 %4326, -1
  store i32 %4328, i32* %4325, align 4
  br label %4329

4329:                                             ; preds = %4327, %4320
  %4330 = phi i32 [ %4328, %4327 ], [ %4326, %4320 ]
  %4331 = icmp eq i32 %4330, 0
  br i1 %4331, label %4332, label %4333

4332:                                             ; preds = %4329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4318) #15
  br label %4333

4333:                                             ; preds = %4315, %4329, %4332
  br i1 %4215, label %4334, label %4419

4334:                                             ; preds = %4333
  %4335 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %4336 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %4337 = load i32, i32* %4336, align 4
  %4338 = add i32 %4337, -1
  %4339 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %4335, i32 %4338) #15
  %4340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %4341 = icmp eq %"class.WTF::StringImpl"* %4340, null
  br i1 %4341, label %4359, label %4342

4342:                                             ; preds = %4334
  %4343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4344 = load atomic i32, i32* %4343 monotonic, align 4
  %4345 = and i32 %4344, 2
  %4346 = icmp eq i32 %4345, 0
  br i1 %4346, label %4347, label %4359

4347:                                             ; preds = %4342
  %4348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4340, i64 0, i32 0
  %4349 = load i32, i32* %4348, align 4
  %4350 = zext i32 %4349 to i33
  %4351 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %4350, i33 1) #15
  %4352 = extractvalue { i33, i1 } %4351, 1
  %4353 = extractvalue { i33, i1 } %4351, 0
  %4354 = icmp slt i33 %4353, 0
  %4355 = or i1 %4352, %4354
  br i1 %4355, label %4356, label %4357, !prof !3

4356:                                             ; preds = %4347
  call void @llvm.trap() #15
  unreachable

4357:                                             ; preds = %4347
  %4358 = trunc i33 %4353 to i32
  store i32 %4358, i32* %4348, align 4
  br label %4359

4359:                                             ; preds = %4357, %4342, %4334
  %4360 = ptrtoint %"class.WTF::StringImpl"* %4340 to i64
  %4361 = bitcast %"class.blink::NameSource"* %4339 to i64*
  %4362 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4339, i64 0, i32 0, i32 0, i32 0
  %4363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4362, align 8
  store i64 %4360, i64* %4361, align 8
  %4364 = icmp eq %"class.WTF::StringImpl"* %4363, null
  br i1 %4364, label %4378, label %4365

4365:                                             ; preds = %4359
  %4366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4363, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4367 = load atomic i32, i32* %4366 monotonic, align 4
  %4368 = and i32 %4367, 2
  %4369 = icmp eq i32 %4368, 0
  %4370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4363, i64 0, i32 0
  %4371 = load i32, i32* %4370, align 4
  br i1 %4369, label %4372, label %4374

4372:                                             ; preds = %4365
  %4373 = add i32 %4371, -1
  store i32 %4373, i32* %4370, align 4
  br label %4374

4374:                                             ; preds = %4372, %4365
  %4375 = phi i32 [ %4373, %4372 ], [ %4371, %4365 ]
  %4376 = icmp eq i32 %4375, 0
  br i1 %4376, label %4377, label %4378

4377:                                             ; preds = %4374
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4363) #15
  br label %4378

4378:                                             ; preds = %4359, %4374, %4377
  %4379 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4339, i64 0, i32 5
  %4380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4291, align 8
  %4381 = icmp eq %"class.WTF::StringImpl"* %4380, null
  br i1 %4381, label %4399, label %4382

4382:                                             ; preds = %4378
  %4383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4384 = load atomic i32, i32* %4383 monotonic, align 4
  %4385 = and i32 %4384, 2
  %4386 = icmp eq i32 %4385, 0
  br i1 %4386, label %4387, label %4399

4387:                                             ; preds = %4382
  %4388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4380, i64 0, i32 0
  %4389 = load i32, i32* %4388, align 4
  %4390 = zext i32 %4389 to i33
  %4391 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %4390, i33 1) #15
  %4392 = extractvalue { i33, i1 } %4391, 1
  %4393 = extractvalue { i33, i1 } %4391, 0
  %4394 = icmp slt i33 %4393, 0
  %4395 = or i1 %4392, %4394
  br i1 %4395, label %4396, label %4397, !prof !3

4396:                                             ; preds = %4387
  call void @llvm.trap() #15
  unreachable

4397:                                             ; preds = %4387
  %4398 = trunc i33 %4393 to i32
  store i32 %4398, i32* %4388, align 4
  br label %4399

4399:                                             ; preds = %4397, %4382, %4378
  %4400 = ptrtoint %"class.WTF::StringImpl"* %4380 to i64
  %4401 = bitcast %"class.WTF::AtomicString"* %4379 to i64*
  %4402 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4379, i64 0, i32 0, i32 0, i32 0
  %4403 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4402, align 8
  store i64 %4400, i64* %4401, align 8
  %4404 = icmp eq %"class.WTF::StringImpl"* %4403, null
  br i1 %4404, label %4418, label %4405

4405:                                             ; preds = %4399
  %4406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4403, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4407 = load atomic i32, i32* %4406 monotonic, align 4
  %4408 = and i32 %4407, 2
  %4409 = icmp eq i32 %4408, 0
  %4410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4403, i64 0, i32 0
  %4411 = load i32, i32* %4410, align 4
  br i1 %4409, label %4412, label %4414

4412:                                             ; preds = %4405
  %4413 = add i32 %4411, -1
  store i32 %4413, i32* %4410, align 4
  br label %4414

4414:                                             ; preds = %4412, %4405
  %4415 = phi i32 [ %4413, %4412 ], [ %4411, %4405 ]
  %4416 = icmp eq i32 %4415, 0
  br i1 %4416, label %4417, label %4418

4417:                                             ; preds = %4414
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4403) #15
  br label %4418

4418:                                             ; preds = %4399, %4414, %4417
  store i8 1, i8* %5, align 1
  br label %4421

4419:                                             ; preds = %4333
  %4420 = load i64, i64* %4317, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4590

4421:                                             ; preds = %4289, %4294, %4418, %4285
  %4422 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4212, i64 0, i32 76, i32 0, i32 0
  %4423 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4422, align 8
  %4424 = icmp eq %"class.WTF::StringImpl"* %4423, null
  br i1 %4424, label %4442, label %4425

4425:                                             ; preds = %4421
  %4426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4423, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4427 = load atomic i32, i32* %4426 monotonic, align 4
  %4428 = and i32 %4427, 2
  %4429 = icmp eq i32 %4428, 0
  br i1 %4429, label %4430, label %4442

4430:                                             ; preds = %4425
  %4431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4423, i64 0, i32 0
  %4432 = load i32, i32* %4431, align 4
  %4433 = zext i32 %4432 to i33
  %4434 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %4433, i33 1) #15
  %4435 = extractvalue { i33, i1 } %4434, 1
  %4436 = extractvalue { i33, i1 } %4434, 0
  %4437 = icmp slt i33 %4436, 0
  %4438 = or i1 %4435, %4437
  br i1 %4438, label %4439, label %4440, !prof !3

4439:                                             ; preds = %4430
  call void @llvm.trap() #15
  unreachable

4440:                                             ; preds = %4430
  %4441 = trunc i33 %4436 to i32
  store i32 %4441, i32* %4431, align 4
  br label %4442

4442:                                             ; preds = %4421, %4425, %4440
  %4443 = ptrtoint %"class.WTF::StringImpl"* %4423 to i64
  %4444 = bitcast %"class.WTF::String"* %7 to i64*
  %4445 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %4443, i64* %4444, align 8
  %4446 = icmp eq %"class.WTF::StringImpl"* %4445, null
  br i1 %4446, label %4463, label %4447

4447:                                             ; preds = %4442
  %4448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4445, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4449 = load atomic i32, i32* %4448 monotonic, align 4
  %4450 = and i32 %4449, 2
  %4451 = icmp eq i32 %4450, 0
  %4452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4445, i64 0, i32 0
  %4453 = load i32, i32* %4452, align 4
  br i1 %4451, label %4454, label %4456

4454:                                             ; preds = %4447
  %4455 = add i32 %4453, -1
  store i32 %4455, i32* %4452, align 4
  br label %4456

4456:                                             ; preds = %4454, %4447
  %4457 = phi i32 [ %4455, %4454 ], [ %4453, %4447 ]
  %4458 = icmp eq i32 %4457, 0
  br i1 %4458, label %4459, label %4460

4459:                                             ; preds = %4456
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4445) #15
  br label %4460

4460:                                             ; preds = %4456, %4459
  %4461 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %4462 = ptrtoint %"class.WTF::StringImpl"* %4461 to i64
  br label %4463

4463:                                             ; preds = %4460, %4442
  %4464 = phi i64 [ %4462, %4460 ], [ %4443, %4442 ]
  %4465 = phi %"class.WTF::StringImpl"* [ %4461, %4460 ], [ %4423, %4442 ]
  %4466 = icmp eq %"class.WTF::StringImpl"* %4465, null
  br i1 %4466, label %4471, label %4467

4467:                                             ; preds = %4463
  %4468 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4465, i64 0, i32 1
  %4469 = load i32, i32* %4468, align 4
  %4470 = icmp eq i32 %4469, 0
  br i1 %4470, label %4471, label %4476

4471:                                             ; preds = %4463, %4467
  %4472 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4212, i64 0, i32 78, i32 0, i32 0
  %4473 = load %"class.blink::Element"*, %"class.blink::Element"** %4472, align 8
  %4474 = icmp eq %"class.blink::Element"* %4473, null
  %4475 = select i1 %4474, i32 7, i32 3
  br label %4476

4476:                                             ; preds = %4471, %4467
  %4477 = phi i32 [ 7, %4467 ], [ %4475, %4471 ]
  store i32 %4477, i32* %2, align 4
  br i1 %4215, label %4478, label %4586

4478:                                             ; preds = %4476
  %4479 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0
  %4480 = bitcast %"class.blink::NameSource"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4480) #15
  %4481 = load i8, i8* %5, align 1, !range !2
  %4482 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %39, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4482, align 8
  %4483 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %39, i64 0, i32 1
  store i8 %4481, i8* %4483, align 8
  %4484 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %39, i64 0, i32 2
  store i8 0, i8* %4484, align 1
  %4485 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %39, i64 0, i32 3
  store i32 1, i32* %4485, align 4
  %4486 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %39, i64 0, i32 4
  %4487 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %4488 = bitcast %"class.blink::QualifiedName"** %4486 to i64*
  store i64 %4487, i64* %4488, align 8
  %4489 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %39, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4489, align 8
  %4490 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %39, i64 0, i32 6
  store i32 -1, i32* %4490, align 8
  %4491 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %39, i64 0, i32 7
  %4492 = bitcast %"class.blink::HeapVector.3879"* %4491 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4492, i8 0, i64 16, i1 false) #15
  %4493 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %4494 = load i32, i32* %4493, align 4
  %4495 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %4496 = load i32, i32* %4495, align 8
  %4497 = icmp eq i32 %4494, %4496
  br i1 %4497, label %4507, label %4498, !prof !3

4498:                                             ; preds = %4478
  %4499 = getelementptr inbounds %"class.blink::HeapVector.3890", %"class.blink::HeapVector.3890"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %4500 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %4499, align 8
  %4501 = zext i32 %4494 to i64
  %4502 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4500, i64 %4501
  %4503 = bitcast %"class.blink::NameSource"* %4502 to i8*
  %4504 = call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %4503, %"class.blink::NameSource"* nonnull dereferenceable(56) %39) #15
  %4505 = load i32, i32* %4493, align 4
  %4506 = add i32 %4505, 1
  store i32 %4506, i32* %4493, align 4
  br label %4508

4507:                                             ; preds = %4478
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"* %4479, %"class.blink::NameSource"* nonnull dereferenceable(56) %39) #15
  br label %4508

4508:                                             ; preds = %4498, %4507
  %4509 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4489, align 8
  %4510 = icmp eq %"class.WTF::StringImpl"* %4509, null
  br i1 %4510, label %4524, label %4511

4511:                                             ; preds = %4508
  %4512 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4509, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4513 = load atomic i32, i32* %4512 monotonic, align 4
  %4514 = and i32 %4513, 2
  %4515 = icmp eq i32 %4514, 0
  %4516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4509, i64 0, i32 0
  %4517 = load i32, i32* %4516, align 4
  br i1 %4515, label %4518, label %4520

4518:                                             ; preds = %4511
  %4519 = add i32 %4517, -1
  store i32 %4519, i32* %4516, align 4
  br label %4520

4520:                                             ; preds = %4518, %4511
  %4521 = phi i32 [ %4519, %4518 ], [ %4517, %4511 ]
  %4522 = icmp eq i32 %4521, 0
  br i1 %4522, label %4523, label %4524

4523:                                             ; preds = %4520
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4509) #15
  br label %4524

4524:                                             ; preds = %4523, %4520, %4508
  %4525 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4482, align 8
  %4526 = icmp eq %"class.WTF::StringImpl"* %4525, null
  br i1 %4526, label %4540, label %4527

4527:                                             ; preds = %4524
  %4528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4525, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4529 = load atomic i32, i32* %4528 monotonic, align 4
  %4530 = and i32 %4529, 2
  %4531 = icmp eq i32 %4530, 0
  %4532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4525, i64 0, i32 0
  %4533 = load i32, i32* %4532, align 4
  br i1 %4531, label %4534, label %4536

4534:                                             ; preds = %4527
  %4535 = add i32 %4533, -1
  store i32 %4535, i32* %4532, align 4
  br label %4536

4536:                                             ; preds = %4534, %4527
  %4537 = phi i32 [ %4535, %4534 ], [ %4533, %4527 ]
  %4538 = icmp eq i32 %4537, 0
  br i1 %4538, label %4539, label %4540

4539:                                             ; preds = %4536
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4525) #15
  br label %4540

4540:                                             ; preds = %4524, %4536, %4539
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4480) #15
  %4541 = load i32, i32* %4493, align 4
  %4542 = add i32 %4541, -1
  %4543 = call dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"* %4479, i32 %4542) #15
  %4544 = load i32, i32* %2, align 4
  %4545 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4543, i64 0, i32 3
  store i32 %4544, i32* %4545, align 4
  %4546 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4543, i64 0, i32 6
  store i32 7, i32* %4546, align 8
  %4547 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %4548 = icmp eq %"class.WTF::StringImpl"* %4547, null
  br i1 %4548, label %4566, label %4549

4549:                                             ; preds = %4540
  %4550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4547, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4551 = load atomic i32, i32* %4550 monotonic, align 4
  %4552 = and i32 %4551, 2
  %4553 = icmp eq i32 %4552, 0
  br i1 %4553, label %4554, label %4566

4554:                                             ; preds = %4549
  %4555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4547, i64 0, i32 0
  %4556 = load i32, i32* %4555, align 4
  %4557 = zext i32 %4556 to i33
  %4558 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %4557, i33 1) #15
  %4559 = extractvalue { i33, i1 } %4558, 1
  %4560 = extractvalue { i33, i1 } %4558, 0
  %4561 = icmp slt i33 %4560, 0
  %4562 = or i1 %4559, %4561
  br i1 %4562, label %4563, label %4564, !prof !3

4563:                                             ; preds = %4554
  call void @llvm.trap() #15
  unreachable

4564:                                             ; preds = %4554
  %4565 = trunc i33 %4560 to i32
  store i32 %4565, i32* %4555, align 4
  br label %4566

4566:                                             ; preds = %4564, %4549, %4540
  %4567 = ptrtoint %"class.WTF::StringImpl"* %4547 to i64
  %4568 = bitcast %"class.blink::NameSource"* %4543 to i64*
  %4569 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %4543, i64 0, i32 0, i32 0, i32 0
  %4570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4569, align 8
  store i64 %4567, i64* %4568, align 8
  %4571 = icmp eq %"class.WTF::StringImpl"* %4570, null
  br i1 %4571, label %4585, label %4572

4572:                                             ; preds = %4566
  %4573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4570, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4574 = load atomic i32, i32* %4573 monotonic, align 4
  %4575 = and i32 %4574, 2
  %4576 = icmp eq i32 %4575, 0
  %4577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4570, i64 0, i32 0
  %4578 = load i32, i32* %4577, align 4
  br i1 %4576, label %4579, label %4581

4579:                                             ; preds = %4572
  %4580 = add i32 %4578, -1
  store i32 %4580, i32* %4577, align 4
  br label %4581

4581:                                             ; preds = %4579, %4572
  %4582 = phi i32 [ %4580, %4579 ], [ %4578, %4572 ]
  %4583 = icmp eq i32 %4582, 0
  br i1 %4583, label %4584, label %4585

4584:                                             ; preds = %4581
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4570) #15
  br label %4585

4585:                                             ; preds = %4584, %4581, %4566
  store i8 1, i8* %5, align 1
  br label %4587

4586:                                             ; preds = %4476
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4590

4587:                                             ; preds = %4207, %4585, %4204
  %4588 = bitcast %"class.WTF::String"* %7 to i64*
  %4589 = load i64, i64* %4588, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  br label %4590

4590:                                             ; preds = %4419, %4586, %4202, %3917, %876, %663, %4587, %1111, %2556, %2554, %2868, %2871, %3148, %3146
  %4591 = phi i64 [ %4420, %4419 ], [ %4464, %4586 ], [ %665, %663 ], [ %878, %876 ], [ %3919, %3917 ], [ %4203, %4202 ], [ %4589, %4587 ], [ %3147, %3146 ], [ %3150, %3148 ], [ %2869, %2868 ], [ %2873, %2871 ], [ %2555, %2554 ], [ %2558, %2556 ], [ %1112, %1111 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #15
  br label %4611

4592:                                             ; preds = %3574, %3576, %3367
  %4593 = phi i64 [ %3578, %3576 ], [ %3575, %3574 ], [ %3368, %3367 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #15
  br label %4611

4594:                                             ; preds = %856, %859, %2347, %2344, %2334, %1958, %1955, %1661, %1658, %1645, %895, %892, %464
  %4595 = phi i64 [ %848, %856 ], [ %848, %859 ], [ %466, %464 ], [ %883, %892 ], [ %883, %895 ], [ %1647, %1645 ], [ %1649, %1658 ], [ %1649, %1661 ], [ %1947, %1955 ], [ %1947, %1958 ], [ %2319, %2334 ], [ %2319, %2344 ], [ %2319, %2347 ]
  %4596 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #15
  %4597 = icmp eq %"class.WTF::StringImpl"* %4596, null
  br i1 %4597, label %4611, label %4598

4598:                                             ; preds = %4594
  %4599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4596, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4600 = load atomic i32, i32* %4599 monotonic, align 4
  %4601 = and i32 %4600, 2
  %4602 = icmp eq i32 %4601, 0
  %4603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4596, i64 0, i32 0
  %4604 = load i32, i32* %4603, align 4
  br i1 %4602, label %4605, label %4607

4605:                                             ; preds = %4598
  %4606 = add i32 %4604, -1
  store i32 %4606, i32* %4603, align 4
  br label %4607

4607:                                             ; preds = %4605, %4598
  %4608 = phi i32 [ %4606, %4605 ], [ %4604, %4598 ]
  %4609 = icmp eq i32 %4608, 0
  br i1 %4609, label %4610, label %4611

4610:                                             ; preds = %4607
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4596) #15
  br label %4611

4611:                                             ; preds = %4592, %4590, %4594, %4607, %4610
  %4612 = phi i64 [ %4591, %4590 ], [ %4595, %4594 ], [ %4595, %4607 ], [ %4595, %4610 ], [ %4593, %4592 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %4613

4613:                                             ; preds = %6, %42, %4611
  %4614 = phi i64 [ %4612, %4611 ], [ 0, %42 ], [ 0, %6 ]
  %4615 = inttoptr i64 %4614 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %4615
}

declare zeroext i1 @_ZNK5blink8AXObject24SupportsNameFromContentsEb(%"class.blink::AXObject"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKNS_8AXObjectEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEb(%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"* dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.WTF::StringBuilder", align 8
  %6 = alloca %"class.blink::HeapVector.2999", align 8
  %7 = alloca %"class.blink::HeapVector.2999", align 8
  %8 = alloca %"class.blink::AXObject"*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %12 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %12, i64 119
  %14 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::AXNodeObject"* %0) #15
  br i1 %15, label %22, label %16

16:                                               ; preds = %3
  br i1 %2, label %393, label %17

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %19 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %18) #15
  %20 = tail call %"class.WTF::StringImpl"* @_ZN5blink7Element9innerTextEv(%"class.blink::Element"* %19) #15
  %21 = ptrtoint %"class.WTF::StringImpl"* %20 to i64
  br label %393

22:                                               ; preds = %3
  %23 = bitcast %"class.WTF::StringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 48, i1 false)
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1
  %26 = bitcast %union.anon.3242* %25 to i8*
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 2
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 3
  store i8 1, i8* %28, align 4
  %29 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 4
  store i8 0, i8* %29, align 1
  %30 = bitcast %"class.blink::HeapVector.2999"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #15
  %31 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 16, i1 false) #15
  %34 = bitcast %"class.blink::HeapVector.2999"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #15
  %37 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %38 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %39 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %38, align 8
  call void @_ZN5blink17AXObjectCacheImpl20GetAriaOwnedChildrenEPKNS_8AXObjectERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::AXObjectCacheImpl"* %39, %"class.blink::AXObject"* %37, %"class.blink::HeapVector.2999"* nonnull dereferenceable(16) %7) #15
  %40 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %41) #15
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %22
  %45 = bitcast %"class.blink::AXObject"** %8 to i8*
  %46 = bitcast %"class.blink::AXObject"** %8 to i64*
  %47 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %6, i64 0, i32 0
  br label %55

48:                                               ; preds = %107, %22
  %49 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %35, align 8
  %50 = load i32, i32* %36, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %49, i64 %51
  %53 = icmp eq i32 %50, 0
  %54 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %6, i64 0, i32 0
  br i1 %53, label %110, label %131

55:                                               ; preds = %44, %107
  %56 = phi %"class.blink::Node"* [ %42, %44 ], [ %108, %107 ]
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 12
  %60 = icmp eq i32 %59, 4
  br i1 %60, label %61, label %80

61:                                               ; preds = %55
  %62 = bitcast %"class.blink::Node"* %56 to %"class.blink::Text"*
  %63 = call %"class.WTF::StringImpl"* @_ZNK5blink4Text9wholeTextEv(%"class.blink::Text"* nonnull %62) #15
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %107, label %65

65:                                               ; preds = %61
  %66 = call zeroext i1 @_ZN3WTF10StringImpl29ContainsOnlyWhitespaceOrEmptyEv(%"class.WTF::StringImpl"* nonnull %63) #15
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %65
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %65
  %76 = phi i32 [ %74, %73 ], [ %72, %65 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #15
  br i1 %66, label %107, label %80

79:                                               ; preds = %75
  br i1 %66, label %107, label %80

80:                                               ; preds = %55, %78, %79
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #15
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %8, align 8
  %81 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %38, align 8
  %82 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %81, %"class.blink::Node"* nonnull %56) #15
  store %"class.blink::AXObject"* %82, %"class.blink::AXObject"** %8, align 8
  %83 = icmp eq %"class.blink::AXObject"* %82, null
  br i1 %83, label %106, label %84

84:                                               ; preds = %80
  %85 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %38, align 8
  %86 = call zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %85, %"class.blink::AXObject"* nonnull %82) #15
  br i1 %86, label %106, label %87

87:                                               ; preds = %84
  %88 = load i32, i32* %33, align 4
  %89 = load i32, i32* %32, align 8
  %90 = icmp eq i32 %88, %89
  br i1 %90, label %105, label %91, !prof !3

91:                                               ; preds = %87
  %92 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %31, align 8
  %93 = zext i32 %88 to i64
  %94 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %92, i64 %93
  %95 = load i64, i64* %46, align 8
  %96 = bitcast %"class.blink::Member.2997"* %94 to i64*
  store atomic i64 %95, i64* %96 monotonic, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %91
  %100 = inttoptr i64 %95 to i8*
  %101 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #15
  br label %102

102:                                              ; preds = %99, %91
  %103 = load i32, i32* %33, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %33, align 4
  br label %106

105:                                              ; preds = %87
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3002"* nonnull %47, %"class.blink::AXObject"** nonnull dereferenceable(8) %8) #15
  br label %106

106:                                              ; preds = %105, %102, %80, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #15
  br label %107

107:                                              ; preds = %61, %78, %79, %106
  %108 = call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal11NextSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %56) #15
  %109 = icmp eq %"class.blink::Node"* %108, null
  br i1 %109, label %48, label %55

110:                                              ; preds = %152, %48
  %111 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %31, align 8
  %112 = load i32, i32* %33, align 4
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %111, i64 %113
  %115 = icmp eq i32 %112, 0
  br i1 %115, label %374, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.blink::HeapHashSet.3867", %"class.blink::HeapHashSet.3867"* %1, i64 0, i32 0, i32 0, i32 2
  %118 = bitcast i32* %9 to i8*
  %119 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %120 = bitcast %union.anon.3242* %25 to i16**
  %121 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1, i32 0
  %122 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %123 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %124 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %121, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.WTF::StringView"* %10 to i8*
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %128 = bitcast i8** %127 to %"class.WTF::StringImpl"**
  %129 = bitcast %"class.WTF::StringView"* %10 to i64*
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  br label %155

131:                                              ; preds = %48, %152
  %132 = phi %"class.blink::Member.2997"* [ %153, %152 ], [ %49, %48 ]
  %133 = load i32, i32* %33, align 4
  %134 = load i32, i32* %32, align 8
  %135 = icmp eq i32 %133, %134
  br i1 %135, label %151, label %136, !prof !3

136:                                              ; preds = %131
  %137 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %31, align 8
  %138 = zext i32 %133 to i64
  %139 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %137, i64 %138
  %140 = bitcast %"class.blink::Member.2997"* %132 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.blink::Member.2997"* %139 to i64*
  store atomic i64 %141, i64* %142 monotonic, align 8
  %143 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %136
  %146 = inttoptr i64 %141 to i8*
  %147 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %146) #15
  br label %148

148:                                              ; preds = %145, %136
  %149 = load i32, i32* %33, align 4
  %150 = add i32 %149, 1
  store i32 %150, i32* %33, align 4
  br label %152

151:                                              ; preds = %131
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.3002"* nonnull %54, %"class.blink::Member.2997"* dereferenceable(8) %132) #15
  br label %152

152:                                              ; preds = %148, %151
  %153 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %132, i64 1
  %154 = icmp eq %"class.blink::Member.2997"* %153, %52
  br i1 %154, label %110, label %131

155:                                              ; preds = %116, %369
  %156 = phi %"class.blink::AXObject"* [ null, %116 ], [ %371, %369 ]
  %157 = phi %"class.blink::Member.2997"* [ %111, %116 ], [ %372, %369 ]
  %158 = phi i32 [ 1, %116 ], [ %370, %369 ]
  %159 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %157, i64 0, i32 0, i32 0
  %160 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %159, align 8
  %161 = load i32, i32* %117, align 4
  %162 = icmp ugt i32 %161, 101
  br i1 %162, label %374, label %163

163:                                              ; preds = %155
  %164 = call zeroext i1 @_ZNK5blink8AXObject32AOMPropertyOrARIAAttributeIsTrueENS_18AOMBooleanPropertyE(%"class.blink::AXObject"* %160, i32 4) #15
  br i1 %164, label %369, label %165

165:                                              ; preds = %163
  %166 = call zeroext i1 @_ZNK5blink8AXObject37IsHiddenForTextAlternativeCalculationEv(%"class.blink::AXObject"* %160) #15
  br i1 %166, label %369, label %167

167:                                              ; preds = %165
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118) #15
  store i32 1, i32* %9, align 4
  %168 = call zeroext i1 @_ZNK5blink8AXObject16IsPresentationalEv(%"class.blink::AXObject"* %160) #15
  br i1 %168, label %169, label %175

169:                                              ; preds = %167
  %170 = bitcast %"class.blink::AXObject"* %160 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::HeapHashSet.3867"*, i1)***
  %171 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::HeapHashSet.3867"*, i1)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::HeapHashSet.3867"*, i1)*** %170, align 8
  %172 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::HeapHashSet.3867"*, i1)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::HeapHashSet.3867"*, i1)** %171, i64 59
  %173 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::HeapHashSet.3867"*, i1)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::HeapHashSet.3867"*, i1)** %172, align 8
  %174 = call %"class.WTF::StringImpl"* %173(%"class.blink::AXObject"* %160, %"class.blink::HeapHashSet.3867"* dereferenceable(24) %1, i1 zeroext true) #15
  br label %177

175:                                              ; preds = %167
  %176 = call %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromE(%"class.blink::AXObject"* dereferenceable(120) %160, i1 zeroext false, %"class.blink::HeapHashSet.3867"* dereferenceable(24) %1, i32* nonnull dereferenceable(4) %9) #15
  br label %177

177:                                              ; preds = %175, %169
  %178 = phi %"class.WTF::StringImpl"* [ %174, %169 ], [ %176, %175 ]
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %342, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = icmp ne i32 %182, 0
  %184 = icmp ne %"class.blink::AXObject"* %156, null
  %185 = and i1 %184, %183
  br i1 %185, label %186, label %344

186:                                              ; preds = %180
  %187 = load i32, i32* %27, align 8
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %344, label %189

189:                                              ; preds = %186
  %190 = add i32 %187, -1
  %191 = load i8, i8* %28, align 4, !range !2
  %192 = icmp eq i8 %191, 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %192, label %204, label %195

195:                                              ; preds = %189
  %196 = load i8*, i8** %119, align 8
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 1
  %198 = bitcast %"class.WTF::StringImpl"* %197 to i8*
  %199 = select i1 %194, i8* %196, i8* %198
  %200 = zext i32 %190 to i64
  %201 = getelementptr inbounds i8, i8* %199, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i16
  br label %212

204:                                              ; preds = %189
  %205 = load i16*, i16** %120, align 8
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 1
  %207 = bitcast %"class.WTF::StringImpl"* %206 to i16*
  %208 = select i1 %194, i16* %205, i16* %207
  %209 = zext i32 %190 to i64
  %210 = getelementptr inbounds i16, i16* %208, i64 %209
  %211 = load i16, i16* %210, align 2
  br label %212

212:                                              ; preds = %195, %204
  %213 = phi i16 [ %203, %195 ], [ %211, %204 ]
  %214 = icmp ult i16 %213, 33
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  switch i16 %213, label %216 [
    i16 32, label %344
    i16 10, label %344
    i16 9, label %344
    i16 13, label %344
    i16 12, label %344
  ]

216:                                              ; preds = %212, %215
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 1
  br i1 %220, label %226, label %222

222:                                              ; preds = %216
  %223 = bitcast %"class.WTF::StringImpl"* %221 to i8*
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i16
  br label %229

226:                                              ; preds = %216
  %227 = bitcast %"class.WTF::StringImpl"* %221 to i16*
  %228 = load i16, i16* %227, align 2
  br label %229

229:                                              ; preds = %222, %226
  %230 = phi i16 [ %225, %222 ], [ %228, %226 ]
  %231 = icmp ult i16 %230, 33
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  switch i16 %230, label %233 [
    i16 32, label %344
    i16 10, label %344
    i16 9, label %344
    i16 13, label %344
    i16 12, label %344
  ]

233:                                              ; preds = %232, %229
  %234 = load i32, i32* %9, align 4
  %235 = bitcast %"class.blink::AXObject"* %160 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %236 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %235, align 8
  %237 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %236, i64 125
  %238 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %237, align 8
  %239 = call %"class.blink::LayoutObject"* %238(%"class.blink::AXObject"* %160) #15
  %240 = bitcast %"class.blink::AXObject"* %156 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %241 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %240, align 8
  %242 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %241, i64 125
  %243 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %242, align 8
  %244 = call %"class.blink::LayoutObject"* %243(%"class.blink::AXObject"* nonnull %156) #15
  %245 = icmp ne %"class.blink::LayoutObject"* %239, null
  %246 = icmp ne %"class.blink::LayoutObject"* %244, null
  %247 = and i1 %245, %246
  br i1 %247, label %248, label %319

248:                                              ; preds = %233
  %249 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %239, i64 0, i32 4
  %250 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %249 to i96*
  %251 = load i96, i96* %250, align 4
  %252 = and i96 %251, 134217728
  %253 = icmp eq i96 %252, 0
  br i1 %253, label %319, label %254

254:                                              ; preds = %248
  %255 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %244, i64 0, i32 4
  %256 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %255 to i96*
  %257 = load i96, i96* %256, align 4
  %258 = and i96 %257, 134217728
  %259 = icmp eq i96 %258, 0
  br i1 %259, label %319, label %260

260:                                              ; preds = %254, %273
  %261 = phi %"class.blink::LayoutObject"* [ %275, %273 ], [ %239, %254 ]
  %262 = bitcast %"class.blink::LayoutObject"* %261 to i1 (%"class.blink::LayoutObject"*)***
  %263 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %262, align 8
  %264 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %263, i64 24
  %265 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %264, align 8
  %266 = call zeroext i1 %265(%"class.blink::LayoutObject"* nonnull %261) #15
  br i1 %266, label %267, label %273

267:                                              ; preds = %260
  %268 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %261, i64 0, i32 4
  %269 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %268 to i96*
  %270 = load i96, i96* %269, align 4
  %271 = and i96 %270, 1073741824
  %272 = icmp eq i96 %271, 0
  br i1 %272, label %277, label %273

273:                                              ; preds = %267, %260
  %274 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %261, i64 0, i32 7
  %275 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %274, align 8
  %276 = icmp eq %"class.blink::LayoutObject"* %275, null
  br i1 %276, label %279, label %260

277:                                              ; preds = %267
  %278 = bitcast %"class.blink::LayoutObject"* %261 to %"class.blink::LayoutBlockFlow"*
  br label %279

279:                                              ; preds = %273, %277
  %280 = phi %"class.blink::LayoutBlockFlow"* [ %278, %277 ], [ null, %273 ]
  br label %281

281:                                              ; preds = %294, %279
  %282 = phi %"class.blink::LayoutObject"* [ %296, %294 ], [ %244, %279 ]
  %283 = bitcast %"class.blink::LayoutObject"* %282 to i1 (%"class.blink::LayoutObject"*)***
  %284 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %283, align 8
  %285 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %284, i64 24
  %286 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %285, align 8
  %287 = call zeroext i1 %286(%"class.blink::LayoutObject"* nonnull %282) #15
  br i1 %287, label %288, label %294

288:                                              ; preds = %281
  %289 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %282, i64 0, i32 4
  %290 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %289 to i96*
  %291 = load i96, i96* %290, align 4
  %292 = and i96 %291, 1073741824
  %293 = icmp eq i96 %292, 0
  br i1 %293, label %298, label %294

294:                                              ; preds = %288, %281
  %295 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %282, i64 0, i32 7
  %296 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %295, align 8
  %297 = icmp eq %"class.blink::LayoutObject"* %296, null
  br i1 %297, label %319, label %281

298:                                              ; preds = %288
  %299 = bitcast %"class.blink::LayoutObject"* %282 to %"class.blink::LayoutBlockFlow"*
  %300 = icmp ne %"class.blink::LayoutBlockFlow"* %280, null
  %301 = icmp ne %"class.blink::LayoutObject"* %282, null
  %302 = and i1 %300, %301
  %303 = icmp eq %"class.blink::LayoutBlockFlow"* %280, %299
  %304 = and i1 %303, %302
  br i1 %304, label %305, label %319

305:                                              ; preds = %298
  switch i32 %158, label %306 [
    i32 9, label %319
    i32 8, label %319
    i32 7, label %319
    i32 6, label %319
    i32 2, label %319
    i32 4, label %319
  ]

306:                                              ; preds = %305
  switch i32 %234, label %307 [
    i32 9, label %319
    i32 8, label %319
    i32 7, label %319
    i32 6, label %319
    i32 2, label %319
    i32 4, label %319
  ]

307:                                              ; preds = %306
  %308 = bitcast %"class.blink::AXObject"* %156 to i1 (%"class.blink::AXObject"*)***
  %309 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %308, align 8
  %310 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %309, i64 24
  %311 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %310, align 8
  %312 = call zeroext i1 %311(%"class.blink::AXObject"* nonnull %156) #15
  br i1 %312, label %319, label %313

313:                                              ; preds = %307
  %314 = bitcast %"class.blink::AXObject"* %160 to i1 (%"class.blink::AXObject"*)***
  %315 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %314, align 8
  %316 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %315, i64 24
  %317 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %316, align 8
  %318 = call zeroext i1 %317(%"class.blink::AXObject"* %160) #15
  br i1 %318, label %319, label %344

319:                                              ; preds = %294, %248, %254, %233, %307, %306, %306, %306, %306, %306, %306, %305, %305, %305, %305, %305, %305, %298, %313
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #15
  store i8 32, i8* %4, align 1
  %320 = load i8, i8* %28, align 4, !range !2
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %5, i16 zeroext 32) #15
  br label %341

323:                                              ; preds = %319
  %324 = load i8, i8* %29, align 1, !range !2
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* nonnull %5, i32 1) #15
  br label %327

327:                                              ; preds = %326, %323
  %328 = load i32, i32* %122, align 4
  %329 = load i32, i32* %123, align 8
  %330 = icmp eq i32 %328, %329
  br i1 %330, label %337, label %331, !prof !3

331:                                              ; preds = %327
  %332 = load i8*, i8** %124, align 8
  %333 = zext i32 %328 to i64
  %334 = getelementptr inbounds i8, i8* %332, i64 %333
  store i8 32, i8* %334, align 1
  %335 = load i32, i32* %122, align 4
  %336 = add i32 %335, 1
  store i32 %336, i32* %122, align 4
  br label %338

337:                                              ; preds = %327
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.3243"* %121, i8* nonnull dereferenceable(1) %4) #15
  br label %338

338:                                              ; preds = %337, %331
  %339 = load i32, i32* %27, align 8
  %340 = add i32 %339, 1
  store i32 %340, i32* %27, align 8
  br label %341

341:                                              ; preds = %322, %338
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #15
  br label %344

342:                                              ; preds = %177
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #15
  store i8* null, i8** %127, align 8
  %343 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %343, i64* %129, align 8
  br label %347

344:                                              ; preds = %341, %313, %180, %186, %215, %215, %215, %215, %215, %232, %232, %232, %232, %232
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #15
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %126, align 8
  %345 = load i32, i32* %181, align 4
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 1
  store %"class.WTF::StringImpl"* %346, %"class.WTF::StringImpl"** %128, align 8
  br label %347

347:                                              ; preds = %342, %344
  %348 = phi i32 [ %345, %344 ], [ 0, %342 ]
  store i32 %348, i32* %130, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #15
  br i1 %179, label %367, label %349

349:                                              ; preds = %347
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 1
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, 0
  %353 = load i32, i32* %9, align 4
  %354 = select i1 %352, i32 %158, i32 %353
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load atomic i32, i32* %355 monotonic, align 4
  %357 = and i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  br i1 %358, label %361, label %363

361:                                              ; preds = %349
  %362 = add i32 %360, -1
  store i32 %362, i32* %359, align 4
  br label %363

363:                                              ; preds = %361, %349
  %364 = phi i32 [ %362, %361 ], [ %360, %349 ]
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #15
  br label %367

367:                                              ; preds = %347, %363, %366
  %368 = phi i32 [ %354, %363 ], [ %354, %366 ], [ %158, %347 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118) #15
  br label %369

369:                                              ; preds = %367, %165, %163
  %370 = phi i32 [ %158, %163 ], [ %158, %165 ], [ %368, %367 ]
  %371 = phi %"class.blink::AXObject"* [ %156, %163 ], [ %156, %165 ], [ %160, %367 ]
  %372 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %157, i64 1
  %373 = icmp eq %"class.blink::Member.2997"* %372, %114
  br i1 %373, label %374, label %155

374:                                              ; preds = %369, %155, %110
  %375 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %5) #15
  %376 = ptrtoint %"class.WTF::StringImpl"* %375 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #15
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %5) #15
  %377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %378 = icmp eq %"class.WTF::StringImpl"* %377, null
  br i1 %378, label %392, label %379

379:                                              ; preds = %374
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = load atomic i32, i32* %380 monotonic, align 4
  %382 = and i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %377, i64 0, i32 0
  %385 = load i32, i32* %384, align 4
  br i1 %383, label %386, label %388

386:                                              ; preds = %379
  %387 = add i32 %385, -1
  store i32 %387, i32* %384, align 4
  br label %388

388:                                              ; preds = %386, %379
  %389 = phi i32 [ %387, %386 ], [ %385, %379 ]
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %392

391:                                              ; preds = %388
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %377) #15
  br label %392

392:                                              ; preds = %374, %388, %391
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #15
  br label %393

393:                                              ; preds = %16, %17, %392
  %394 = phi i64 [ %376, %392 ], [ %21, %17 ], [ 0, %16 ]
  %395 = inttoptr i64 %394 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %395
}

declare void @_ZN5blink17AXObjectCacheImpl20GetAriaOwnedChildrenEPKNS_8AXObjectERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObject"*, %"class.blink::HeapVector.2999"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Text9wholeTextEv(%"class.blink::Text"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal11NextSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject37IsHiddenForTextAlternativeCalculationEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEERN2ax5mojom8NameFromE(%"class.blink::AXObject"* dereferenceable(120), i1 zeroext, %"class.blink::HeapHashSet.3867"* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #15
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #15
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #15
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #15
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12AXNodeObject22IsNameFromLabelElementEPNS_11HTMLElementE(%"class.blink::HTMLElement"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::HTMLElement"* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZN5blink8AXObject23IsNameFromAriaAttributeEPNS_7ElementE(%"class.blink::Element"* %4) #15
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = tail call %"class.blink::LabelsNodeList"* @_ZN5blink11HTMLElement6labelsEv(%"class.blink::HTMLElement"* nonnull %0) #15
  %8 = icmp eq %"class.blink::LabelsNodeList"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::LabelsNodeList", %"class.blink::LabelsNodeList"* %7, i64 0, i32 0
  %11 = tail call i32 @_ZNK5blink12LiveNodeList6lengthEv(%"class.blink::LiveNodeList"* %10) #15
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %9, %6, %3, %1
  %14 = phi i1 [ false, %1 ], [ false, %3 ], [ false, %6 ], [ %12, %9 ]
  ret i1 %14
}

declare zeroext i1 @_ZN5blink8AXObject23IsNameFromAriaAttributeEPNS_7ElementE(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::LabelsNodeList"* @_ZN5blink11HTMLElement6labelsEv(%"class.blink::HTMLElement"*) local_unnamed_addr #1

declare i32 @_ZNK5blink12LiveNodeList6lengthEv(%"class.blink::LiveNodeList"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLInputElement11IsCheckableEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12AXNodeObject17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb(%"class.blink::AXNodeObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"* dereferenceable(16), %class.SkMatrix44* dereferenceable(68), i8*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::Vector.3897", align 8
  %7 = alloca %"class.blink::AXObject"*, align 8
  %8 = alloca %"class.blink::FloatRect", align 4
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %10 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %11, i64 125
  %13 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::LayoutObject"* %13(%"class.blink::AXObject"* %9) #15
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %5
  tail call void @_ZNK5blink8AXObject17GetRelativeBoundsEPPS0_RNS_9FloatRectER10SkMatrix44Pb(%"class.blink::AXObject"* %9, %"class.blink::AXObject"** %1, %"class.blink::FloatRect"* dereferenceable(16) %2, %class.SkMatrix44* dereferenceable(68) %3, i8* %4) #15
  br label %278

17:                                               ; preds = %5
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %1, align 8
  %18 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 16, i1 false)
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %3) #15
  %19 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 6, i32 1, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %116, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 6, i32 1, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %116, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %28 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 7
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %28, i64 0, i32 5, i32 0, i32 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.3014"*, %"struct.WTF::KeyValuePair.3014"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.3014"* %32, null
  br i1 %33, label %89, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::AXObjectCacheImpl", %"class.blink::AXObjectCacheImpl"* %28, i64 0, i32 5, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = add i32 %36, -1
  %38 = zext i32 %37 to i64
  %39 = shl i32 %30, 15
  %40 = xor i32 %39, -1
  %41 = add i32 %30, %40
  %42 = lshr i32 %41, 10
  %43 = xor i32 %42, %41
  %44 = mul i32 %43, 9
  %45 = lshr i32 %44, 6
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 11
  %48 = xor i32 %47, -1
  %49 = add i32 %46, %48
  %50 = lshr i32 %49, 16
  %51 = xor i32 %50, %49
  %52 = and i32 %37, %51
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.3014", %"struct.WTF::KeyValuePair.3014"* %32, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3014", %"struct.WTF::KeyValuePair.3014"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %30
  br i1 %57, label %86, label %58

58:                                               ; preds = %34
  %59 = xor i32 %51, -1
  %60 = lshr i32 %49, 23
  %61 = add i32 %60, %59
  %62 = shl i32 %61, 12
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 7
  %65 = xor i32 %64, %63
  %66 = shl i32 %65, 2
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 20
  %69 = xor i32 %68, %67
  %70 = or i32 %69, 1
  %71 = zext i32 %70 to i64
  br label %72

72:                                               ; preds = %77, %58
  %73 = phi i32 [ %56, %58 ], [ %84, %77 ]
  %74 = phi i64 [ %53, %58 ], [ %81, %77 ]
  %75 = phi i64 [ 0, %58 ], [ %79, %77 ]
  %76 = icmp eq i32 %73, 0
  br i1 %76, label %89, label %77

77:                                               ; preds = %72
  %78 = icmp eq i64 %75, 0
  %79 = select i1 %78, i64 %71, i64 %75
  %80 = add i64 %79, %74
  %81 = and i64 %80, %38
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.3014", %"struct.WTF::KeyValuePair.3014"* %32, i64 %81
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.3014", %"struct.WTF::KeyValuePair.3014"* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, %30
  br i1 %85, label %86, label %72

86:                                               ; preds = %77, %34
  %87 = phi %"struct.WTF::KeyValuePair.3014"* [ %54, %34 ], [ %82, %77 ]
  %88 = icmp eq %"struct.WTF::KeyValuePair.3014"* %87, null
  br i1 %88, label %89, label %90

89:                                               ; preds = %72, %86, %26
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %1, align 8
  br label %116

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.3014", %"struct.WTF::KeyValuePair.3014"* %87, i64 0, i32 1, i32 0, i32 0
  %92 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %91, align 8
  store %"class.blink::AXObject"* %92, %"class.blink::AXObject"** %1, align 8
  %93 = icmp eq %"class.blink::AXObject"* %92, null
  br i1 %93, label %116, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = sitofp i32 %96 to float
  %98 = fmul float %97, 1.562500e-02
  %99 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 6, i32 0, i32 1, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = sitofp i32 %100 to float
  %102 = fmul float %101, 1.562500e-02
  %103 = load i32, i32* %19, align 4
  %104 = sitofp i32 %103 to float
  %105 = fmul float %104, 1.562500e-02
  %106 = load i32, i32* %23, align 4
  %107 = sitofp i32 %106 to float
  %108 = fmul float %107, 1.562500e-02
  %109 = insertelement <2 x float> undef, float %98, i32 0
  %110 = insertelement <2 x float> %109, float %102, i32 1
  %111 = insertelement <2 x float> undef, float %105, i32 0
  %112 = insertelement <2 x float> %111, float %108, i32 1
  %113 = bitcast %"class.blink::FloatRect"* %2 to <2 x float>*
  store <2 x float> %110, <2 x float>* %113, align 4
  %114 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1
  %115 = bitcast %"class.blink::FloatSize"* %114 to <2 x float>*
  store <2 x float> %112, <2 x float>* %115, align 4
  br label %278

116:                                              ; preds = %17, %89, %90, %22
  %117 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %9) #15
  %118 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %121 = load %"class.blink::Node"*, %"class.blink::Node"** %120, align 8
  br label %122

122:                                              ; preds = %116, %119
  %123 = phi %"class.blink::Node"* [ %121, %119 ], [ null, %116 ]
  %124 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %123) #15
  %125 = icmp eq %"class.blink::ContainerNode"* %124, null
  br i1 %125, label %155, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %124, i64 0, i32 0, i32 1
  %128 = load i32, i32* %127, align 8
  %129 = and i32 %128, 12
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %155

131:                                              ; preds = %126
  %132 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  br i1 %132, label %136, label %133

133:                                              ; preds = %131
  %134 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %135 = load %"class.blink::Node"*, %"class.blink::Node"** %134, align 8
  br label %136

136:                                              ; preds = %131, %133
  %137 = phi %"class.blink::Node"* [ %135, %133 ], [ null, %131 ]
  %138 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %137) #15
  %139 = icmp eq %"class.blink::ContainerNode"* %138, null
  br i1 %139, label %147, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %138, i64 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = and i32 %142, 12
  %144 = icmp eq i32 %143, 0
  %145 = bitcast %"class.blink::ContainerNode"* %138 to %"class.blink::Element"*
  %146 = select i1 %144, %"class.blink::Element"* %145, %"class.blink::Element"* null
  br label %147

147:                                              ; preds = %136, %140
  %148 = phi %"class.blink::Element"* [ %146, %140 ], [ null, %136 ]
  %149 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %148, i64 0, i32 0, i32 0, i32 1
  %150 = load i32, i32* %149, align 8
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %147
  %154 = tail call zeroext i1 @_ZNK5blink7Element22HasElementFlagInternalENS_12ElementFlagsE(%"class.blink::Element"* %148, i32 4) #15
  br i1 %154, label %159, label %155

155:                                              ; preds = %126, %147, %122, %153
  %156 = icmp eq %"class.blink::Element"* %117, null
  br i1 %156, label %248, label %157

157:                                              ; preds = %155
  %158 = tail call zeroext i1 @_ZNK5blink7Element23HasDisplayContentsStyleEv(%"class.blink::Element"* nonnull %117) #15
  br i1 %158, label %159, label %248

159:                                              ; preds = %157, %153
  %160 = bitcast %"class.WTF::Vector.3897"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #15
  %161 = getelementptr inbounds %"class.WTF::Vector.3897", %"class.WTF::Vector.3897"* %6, i64 0, i32 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.WTF::Vector.3897", %"class.WTF::Vector.3897"* %6, i64 0, i32 0, i32 0, i32 1
  %163 = getelementptr inbounds %"class.WTF::Vector.3897", %"class.WTF::Vector.3897"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 0, i64 16, i1 false) #15
  %164 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  br i1 %164, label %183, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %167 = load %"class.blink::Node"*, %"class.blink::Node"** %166, align 8
  %168 = icmp eq %"class.blink::Node"* %167, null
  br i1 %168, label %183, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %167, i64 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %167, i64 1
  %176 = bitcast %"class.blink::Node"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %183, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %181 = bitcast %"class.blink::AXObject"** %7 to i8*
  %182 = bitcast %"class.blink::FloatRect"* %8 to i8*
  br label %186

183:                                              ; preds = %217, %159, %169, %165, %174
  %184 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %1, align 8
  %185 = icmp eq %"class.blink::AXObject"* %184, null
  br i1 %185, label %238, label %222

186:                                              ; preds = %179, %217
  %187 = phi i64 [ %177, %179 ], [ %220, %217 ]
  %188 = inttoptr i64 %187 to %"class.blink::Node"*
  %189 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %188, i64 0, i32 1
  %190 = load i32, i32* %189, align 8
  %191 = and i32 %190, 48
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %217

193:                                              ; preds = %186
  %194 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %180, align 8
  %195 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %194, %"class.blink::Node"* nonnull %188) #15
  %196 = icmp eq %"class.blink::AXObject"* %195, null
  br i1 %196, label %217, label %197

197:                                              ; preds = %193
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #15
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %182, i8 0, i64 16, i1 false) #15
  %198 = bitcast %"class.blink::AXObject"* %195 to void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)***
  %199 = load void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)**, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)** %199, i64 117
  %201 = load void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)** %200, align 8
  call void %201(%"class.blink::AXObject"* nonnull %195, %"class.blink::AXObject"** nonnull %7, %"class.blink::FloatRect"* nonnull dereferenceable(16) %8, %class.SkMatrix44* dereferenceable(68) %3, i8* %4) #15
  %202 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %7, align 8
  %203 = icmp eq %"class.blink::AXObject"* %202, null
  br i1 %203, label %216, label %204

204:                                              ; preds = %197
  store %"class.blink::AXObject"* %202, %"class.blink::AXObject"** %1, align 8
  %205 = load i32, i32* %163, align 4
  %206 = load i32, i32* %162, align 8
  %207 = icmp eq i32 %205, %206
  br i1 %207, label %215, label %208, !prof !3

208:                                              ; preds = %204
  %209 = load %"class.blink::FloatRect"*, %"class.blink::FloatRect"** %161, align 8
  %210 = zext i32 %205 to i64
  %211 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %209, i64 %210
  %212 = bitcast %"class.blink::FloatRect"* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* nonnull align 4 %182, i64 16, i1 false) #15
  %213 = load i32, i32* %163, align 4
  %214 = add i32 %213, 1
  store i32 %214, i32* %163, align 4
  br label %216

215:                                              ; preds = %204
  call void @_ZN3WTF6VectorIN5blink9FloatRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3897"* nonnull %6, %"class.blink::FloatRect"* nonnull dereferenceable(16) %8) #15
  br label %216

216:                                              ; preds = %215, %208, %197
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #15
  br label %217

217:                                              ; preds = %216, %193, %186
  %218 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %188, i64 0, i32 5, i32 0, i32 0
  %219 = bitcast %"class.blink::Node"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %183, label %186

222:                                              ; preds = %183
  %223 = call { <2 x float>, <2 x float> } @_ZN5blink9UnionRectERKN3WTF6VectorINS_9FloatRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.3897"* nonnull dereferenceable(16) %6) #15
  %224 = extractvalue { <2 x float>, <2 x float> } %223, 0
  %225 = extractvalue { <2 x float>, <2 x float> } %223, 1
  %226 = bitcast %"class.blink::FloatRect"* %2 to <2 x float>*
  store <2 x float> %224, <2 x float>* %226, align 4
  %227 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1
  %228 = bitcast %"class.blink::FloatSize"* %227 to <2 x float>*
  store <2 x float> %225, <2 x float>* %228, align 4
  %229 = load %"class.blink::FloatRect"*, %"class.blink::FloatRect"** %161, align 8
  %230 = icmp eq %"class.blink::FloatRect"* %229, null
  %231 = bitcast %"class.blink::FloatRect"* %229 to i8*
  br i1 %230, label %237, label %232, !prof !5

232:                                              ; preds = %222
  %233 = load i32, i32* %163, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %236, label %235, !prof !3

235:                                              ; preds = %232
  store i32 0, i32* %163, align 4
  br label %236

236:                                              ; preds = %235, %232
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %231) #15
  store %"class.blink::FloatRect"* null, %"class.blink::FloatRect"** %161, align 8
  br label %237

237:                                              ; preds = %222, %236
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #15
  br label %278

238:                                              ; preds = %183
  %239 = load %"class.blink::FloatRect"*, %"class.blink::FloatRect"** %161, align 8
  %240 = icmp eq %"class.blink::FloatRect"* %239, null
  %241 = bitcast %"class.blink::FloatRect"* %239 to i8*
  br i1 %240, label %247, label %242, !prof !5

242:                                              ; preds = %238
  %243 = load i32, i32* %163, align 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %246, label %245, !prof !3

245:                                              ; preds = %242
  store i32 0, i32* %163, align 4
  br label %246

246:                                              ; preds = %245, %242
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %241) #15
  store %"class.blink::FloatRect"* null, %"class.blink::FloatRect"** %161, align 8
  br label %247

247:                                              ; preds = %238, %246
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #15
  br label %248

248:                                              ; preds = %247, %155, %157
  %249 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %9) #15
  %250 = icmp eq %"class.blink::AXObject"* %249, null
  br i1 %250, label %278, label %251

251:                                              ; preds = %248, %275
  %252 = phi %"class.blink::AXObject"* [ %276, %275 ], [ %249, %248 ]
  %253 = bitcast %"class.blink::AXObject"* %252 to i1 (%"class.blink::AXObject"*)***
  %254 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %253, align 8
  %255 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %254, i64 10
  %256 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %255, align 8
  %257 = call zeroext i1 %256(%"class.blink::AXObject"* nonnull %252) #15
  br i1 %257, label %258, label %275

258:                                              ; preds = %251
  %259 = bitcast %"class.blink::AXObject"* %252 to void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)***
  %260 = load void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)**, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*** %259, align 8
  %261 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)** %260, i64 117
  %262 = load void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)*, void (%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)** %261, align 8
  call void %262(%"class.blink::AXObject"* nonnull %252, %"class.blink::AXObject"** %1, %"class.blink::FloatRect"* dereferenceable(16) %2, %class.SkMatrix44* dereferenceable(68) %3, i8* %4) #15
  %263 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %1, align 8
  %264 = icmp eq %"class.blink::AXObject"* %263, null
  br i1 %264, label %278, label %265

265:                                              ; preds = %258
  %266 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 0
  %267 = bitcast float* %266 to i32*
  %268 = load i32, i32* %267, align 4
  %269 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 1
  %270 = load float, float* %269, align 4
  %271 = fcmp olt float %270, 1.000000e+01
  %272 = select i1 %271, float %270, float 1.000000e+01
  %273 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1
  %274 = bitcast %"class.blink::FloatSize"* %273 to i32*
  store i32 %268, i32* %274, align 4
  store float %272, float* %269, align 4
  br label %278

275:                                              ; preds = %251
  %276 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* nonnull %252) #15
  %277 = icmp eq %"class.blink::AXObject"* %276, null
  br i1 %277, label %278, label %251

278:                                              ; preds = %275, %248, %237, %265, %258, %16, %94
  ret void
}

declare void @_ZNK5blink8AXObject17GetRelativeBoundsEPPS0_RNS_9FloatRectER10SkMatrix44Pb(%"class.blink::AXObject"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"* dereferenceable(16), %class.SkMatrix44* dereferenceable(68), i8*) unnamed_addr #1

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN5blink9UnionRectERKN3WTF6VectorINS_9FloatRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.3897"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject35HasValidHTMLTableStructureAndLayoutEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject15IsTableLikeRoleEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %4, label %132

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %6, i64 125
  %8 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %7, align 8
  %9 = tail call %"class.blink::LayoutObject"* %8(%"class.blink::AXObject"* %2) #15
  %10 = icmp eq %"class.blink::LayoutObject"* %9, null
  br i1 %10, label %132, label %11

11:                                               ; preds = %4
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %5, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %12, i64 125
  %14 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %13, align 8
  %15 = tail call %"class.blink::LayoutObject"* %14(%"class.blink::AXObject"* %2) #15
  %16 = bitcast %"class.blink::LayoutObject"* %15 to i1 (%"class.blink::LayoutObject"*, i32)***
  %17 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %17, i64 92
  %19 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::LayoutObject"* %15, i32 44) #15
  br i1 %20, label %21, label %132

21:                                               ; preds = %11
  %22 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %22, label %132, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %132, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 48
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %132

32:                                               ; preds = %27
  %33 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %34 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 1, i32 2
  %37 = bitcast %"class.blink::Member.318"* %36 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %40, %42
  br i1 %43, label %44, label %132

44:                                               ; preds = %32
  %45 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %2) #15
  %46 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %45, i64 0, i32 0, i32 1, i32 0, i32 0
  %47 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8
  %48 = icmp eq %"class.blink::Node"* %47, null
  br i1 %48, label %132, label %49

49:                                               ; preds = %44, %55
  %50 = phi %"class.blink::Node"* [ %57, %55 ], [ %47, %44 ]
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 12
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 5, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  %58 = icmp eq %"class.blink::Node"* %57, null
  br i1 %58, label %132, label %49

59:                                               ; preds = %49
  %60 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE, align 8
  %61 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE, align 8
  %63 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE, align 8
  %65 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE, align 8
  %67 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE, align 8
  %69 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, 48
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %132

74:                                               ; preds = %59
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  br label %83

78:                                               ; preds = %127
  %79 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %125, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, 48
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %132

83:                                               ; preds = %74, %78
  %84 = phi %"class.blink::Node"* [ %125, %78 ], [ %50, %74 ]
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %84, i64 1, i32 2
  %86 = bitcast %"class.blink::Member.318"* %85 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %87 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, %77
  br i1 %90, label %121, label %91

91:                                               ; preds = %83
  %92 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %93 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %92, i64 0, i32 3, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %89, %94
  br i1 %95, label %121, label %96

96:                                               ; preds = %91
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %89, %99
  br i1 %100, label %121, label %101

101:                                              ; preds = %96
  %102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %103 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %84, i64 1, i32 2
  %104 = bitcast %"class.blink::Member.318"* %103 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %105 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %105, i64 0, i32 3, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %102, i64 0, i32 3, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %107, %109
  br i1 %110, label %121, label %111

111:                                              ; preds = %101
  %112 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %69, align 8
  %113 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %84, i64 1, i32 2
  %114 = bitcast %"class.blink::Member.318"* %113 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %115 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 3, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 3, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %117, %119
  br i1 %120, label %121, label %132

121:                                              ; preds = %83, %91, %96, %101, %111
  br label %122

122:                                              ; preds = %121, %127
  %123 = phi %"class.blink::Node"* [ %125, %127 ], [ %84, %121 ]
  %124 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %123, i64 0, i32 5, i32 0, i32 0
  %125 = load %"class.blink::Node"*, %"class.blink::Node"** %124, align 8
  %126 = icmp eq %"class.blink::Node"* %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %125, i64 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = and i32 %129, 12
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %78, label %122

132:                                              ; preds = %55, %78, %111, %122, %59, %44, %4, %32, %11, %1, %23, %27, %21
  %133 = phi i1 [ false, %21 ], [ false, %27 ], [ false, %23 ], [ false, %1 ], [ false, %11 ], [ false, %32 ], [ false, %4 ], [ true, %44 ], [ false, %59 ], [ true, %122 ], [ false, %111 ], [ false, %78 ], [ true, %55 ]
  ret i1 %133
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject16AddTableChildrenEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = bitcast %"class.blink::Node"** %5 to %"class.blink::HTMLTableElement"**
  %7 = load %"class.blink::HTMLTableElement"*, %"class.blink::HTMLTableElement"** %6, align 8
  br label %8

8:                                                ; preds = %1, %4
  %9 = phi %"class.blink::HTMLTableElement"* [ %7, %4 ], [ null, %1 ]
  %10 = tail call %"class.blink::HTMLTableCaptionElement"* @_ZNK5blink16HTMLTableElement7captionEv(%"class.blink::HTMLTableElement"* %9) #15
  %11 = getelementptr inbounds %"class.blink::HTMLTableCaptionElement", %"class.blink::HTMLTableCaptionElement"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = icmp eq %"class.blink::HTMLTableCaptionElement"* %10, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %15 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %14, align 8
  %16 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %15, %"class.blink::Node"* nonnull %11) #15
  %17 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %14, align 8
  %18 = tail call zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %17, %"class.blink::AXObject"* %16) #15
  br i1 %18, label %29, label %19

19:                                               ; preds = %13
  %20 = icmp eq %"class.blink::AXObject"* %16, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %19
  %22 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %14, align 8
  %23 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %22, %"class.blink::Node"* nonnull %11, %"class.blink::AXObject"* %2) #15
  %24 = icmp eq %"class.blink::AXObject"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21, %19
  %26 = phi %"class.blink::AXObject"* [ %16, %19 ], [ %23, %21 ]
  %27 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %26, i32 %28, i1 zeroext undef) #15
  br label %29

29:                                               ; preds = %8, %13, %21, %25
  %30 = tail call %"class.blink::HTMLTableSectionElement"* @_ZNK5blink16HTMLTableElement5tHeadEv(%"class.blink::HTMLTableElement"* %9) #15
  %31 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = icmp eq %"class.blink::HTMLTableSectionElement"* %30, null
  br i1 %32, label %49, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %35 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %34, align 8
  %36 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %35, %"class.blink::Node"* nonnull %31) #15
  %37 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %34, align 8
  %38 = tail call zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %37, %"class.blink::AXObject"* %36) #15
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  %40 = icmp eq %"class.blink::AXObject"* %36, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %39
  %42 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %34, align 8
  %43 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %42, %"class.blink::Node"* nonnull %31, %"class.blink::AXObject"* %2) #15
  %44 = icmp eq %"class.blink::AXObject"* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %41, %39
  %46 = phi %"class.blink::AXObject"* [ %36, %39 ], [ %43, %41 ]
  %47 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %46, i32 %48, i1 zeroext undef) #15
  br label %49

49:                                               ; preds = %29, %33, %41, %45
  %50 = tail call %"class.blink::HTMLCollection"* @_ZN5blink16HTMLTableElement7tBodiesEv(%"class.blink::HTMLTableElement"* %9) #15
  %51 = tail call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %50) #15
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %55 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  br label %77

56:                                               ; preds = %96, %49
  %57 = tail call %"class.blink::HTMLTableSectionElement"* @_ZNK5blink16HTMLTableElement5tFootEv(%"class.blink::HTMLTableElement"* %9) #15
  %58 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::HTMLTableSectionElement"* %57, null
  br i1 %59, label %76, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %62 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %61, align 8
  %63 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %62, %"class.blink::Node"* nonnull %58) #15
  %64 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %61, align 8
  %65 = tail call zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %64, %"class.blink::AXObject"* %63) #15
  br i1 %65, label %76, label %66

66:                                               ; preds = %60
  %67 = icmp eq %"class.blink::AXObject"* %63, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %66
  %69 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %61, align 8
  %70 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %69, %"class.blink::Node"* nonnull %58, %"class.blink::AXObject"* %2) #15
  %71 = icmp eq %"class.blink::AXObject"* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %68, %66
  %73 = phi %"class.blink::AXObject"* [ %63, %66 ], [ %70, %68 ]
  %74 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %73, i32 %75, i1 zeroext undef) #15
  br label %76

76:                                               ; preds = %56, %60, %68, %72
  ret void

77:                                               ; preds = %53, %96
  %78 = phi i32 [ 0, %53 ], [ %100, %96 ]
  %79 = tail call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %50, i32 %78) #15
  %80 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %79, i64 0, i32 0, i32 0
  %81 = icmp eq %"class.blink::Element"* %79, null
  br i1 %81, label %96, label %82

82:                                               ; preds = %77
  %83 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %54, align 8
  %84 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %83, %"class.blink::Node"* nonnull %80) #15
  %85 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %54, align 8
  %86 = tail call zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %85, %"class.blink::AXObject"* %84) #15
  br i1 %86, label %96, label %87

87:                                               ; preds = %82
  %88 = icmp eq %"class.blink::AXObject"* %84, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %87
  %90 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %54, align 8
  %91 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %90, %"class.blink::Node"* nonnull %80, %"class.blink::AXObject"* %2) #15
  %92 = icmp eq %"class.blink::AXObject"* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %89, %87
  %94 = phi %"class.blink::AXObject"* [ %84, %87 ], [ %91, %89 ]
  %95 = load i32, i32* %55, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %94, i32 %95, i1 zeroext undef) #15
  br label %96

96:                                               ; preds = %77, %82, %89, %93
  %97 = tail call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %50) #15
  %98 = icmp ult i32 %78, %97
  %99 = zext i1 %98 to i32
  %100 = add nuw i32 %78, %99
  %101 = icmp eq i32 %100, %51
  br i1 %101, label %56, label %77
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject12AddNodeChildEPNS_4NodeE(%"class.blink::AXNodeObject"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %7 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %6, align 8
  %8 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %7, %"class.blink::Node"* nonnull %1) #15
  %9 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %6, align 8
  %10 = tail call zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %9, %"class.blink::AXObject"* %8) #15
  br i1 %10, label %21, label %11

11:                                               ; preds = %4
  %12 = icmp eq %"class.blink::AXObject"* %8, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %11
  %14 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %6, align 8
  %15 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %14, %"class.blink::Node"* nonnull %1, %"class.blink::AXObject"* %5) #15
  %16 = icmp eq %"class.blink::AXObject"* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %13, %11
  %18 = phi %"class.blink::AXObject"* [ %8, %11 ], [ %15, %13 ]
  %19 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %18, i32 %20, i1 zeroext undef) #15
  br label %21

21:                                               ; preds = %17, %4, %13, %2
  ret void
}

declare %"class.blink::HTMLTableCaptionElement"* @_ZNK5blink16HTMLTableElement7captionEv(%"class.blink::HTMLTableElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLTableSectionElement"* @_ZNK5blink16HTMLTableElement5tHeadEv(%"class.blink::HTMLTableElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLCollection"* @_ZN5blink16HTMLTableElement7tBodiesEv(%"class.blink::HTMLTableElement"*) local_unnamed_addr #1

declare %"class.blink::HTMLTableSectionElement"* @_ZNK5blink16HTMLTableElement5tFootEv(%"class.blink::HTMLTableElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12AXNodeObject29TextOffsetInFormattingContextEi(%"class.blink::AXNodeObject"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %4, label %92, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %6, label %18, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #15
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi %"class.blink::Node"* [ %14, %13 ], [ null, %11 ]
  %17 = tail call %"class.blink::LayoutObject"* @_ZN5blink24AssociatedLayoutObjectOfERKNS_4NodeEiNS_16LayoutObjectSideE(%"class.blink::Node"* dereferenceable(64) %16, i32 %1, i32 0) #15
  br label %24

18:                                               ; preds = %5, %7
  %19 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %20 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %20, i64 125
  %22 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %21, align 8
  %23 = tail call %"class.blink::LayoutObject"* %22(%"class.blink::AXObject"* %3) #15
  br label %24

24:                                               ; preds = %18, %15
  %25 = phi %"class.blink::LayoutObject"* [ %17, %15 ], [ %23, %18 ]
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = tail call i32 @_ZNK5blink8AXObject29TextOffsetInFormattingContextEi(%"class.blink::AXObject"* %3, i32 %1) #15
  br label %92

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::LayoutObject"* %25 to i1 (%"class.blink::LayoutObject"*)***
  %31 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, i64 26
  %33 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* nonnull %25) #15
  br i1 %34, label %35, label %44

35:                                               ; preds = %29
  %36 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26FirstChildIncludingIgnoredEv(%"class.blink::AXObject"* %3) #15
  %37 = icmp eq %"class.blink::AXObject"* %36, null
  br i1 %37, label %92, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.blink::AXObject"* %36 to i32 (%"class.blink::AXObject"*, i32)***
  %40 = load i32 (%"class.blink::AXObject"*, i32)**, i32 (%"class.blink::AXObject"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i32 (%"class.blink::AXObject"*, i32)*, i32 (%"class.blink::AXObject"*, i32)** %40, i64 89
  %42 = load i32 (%"class.blink::AXObject"*, i32)*, i32 (%"class.blink::AXObject"*, i32)** %41, align 8
  %43 = tail call i32 %42(%"class.blink::AXObject"* nonnull %36, i32 %1) #15
  br label %92

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 4
  %46 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %45 to i96*
  %47 = load i96, i96* %46, align 4
  %48 = and i96 %47, 1207959552
  %49 = icmp eq i96 %48, 1207959552
  %50 = and i96 %47, 33554432
  %51 = icmp ne i96 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %55, label %53

53:                                               ; preds = %44
  %54 = tail call i32 @_ZNK5blink8AXObject29TextOffsetInFormattingContextEi(%"class.blink::AXObject"* %3, i32 %1) #15
  br label %92

55:                                               ; preds = %44
  %56 = icmp eq i96 %50, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 1, i32 4, i32 0, i64 4
  %59 = bitcast i8* %58 to %"class.WTF::StringImpl"**
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %57, %62
  %67 = tail call i32 @_ZNK5blink8AXObject29TextOffsetInFormattingContextEi(%"class.blink::AXObject"* %3, i32 %1) #15
  br label %92

68:                                               ; preds = %55, %62
  %69 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink15NGOffsetMapping28GetInlineFormattingContextOfERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %25) #15
  %70 = icmp eq %"class.blink::LayoutBlockFlow"* %69, null
  %71 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = icmp eq %"class.blink::LayoutObject"* %71, %25
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %68
  %75 = tail call i32 @_ZNK5blink8AXObject29TextOffsetInFormattingContextEi(%"class.blink::AXObject"* %3, i32 %1) #15
  br label %92

76:                                               ; preds = %68
  %77 = tail call %"class.blink::NGOffsetMapping"* @_ZN5blink12NGInlineNode16GetOffsetMappingEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"* nonnull %69) #15
  %78 = icmp eq %"class.blink::NGOffsetMapping"* %77, null
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = tail call i32 @_ZNK5blink8AXObject29TextOffsetInFormattingContextEi(%"class.blink::AXObject"* %3, i32 %1) #15
  br label %92

81:                                               ; preds = %76
  %82 = tail call { i64, %"class.blink::NGOffsetMappingUnit"* } @_ZNK5blink15NGOffsetMapping30GetMappingUnitsForLayoutObjectERKNS_12LayoutObjectE(%"class.blink::NGOffsetMapping"* nonnull %77, %"class.blink::LayoutObject"* nonnull dereferenceable(88) %25) #15
  %83 = extractvalue { i64, %"class.blink::NGOffsetMappingUnit"* } %82, 0
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  %86 = tail call i32 @_ZNK5blink8AXObject29TextOffsetInFormattingContextEi(%"class.blink::AXObject"* %3, i32 %1) #15
  br label %92

87:                                               ; preds = %81
  %88 = extractvalue { i64, %"class.blink::NGOffsetMappingUnit"* } %82, 1
  %89 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %88, i64 0, i32 4
  %90 = load i32, i32* %89, align 8
  %91 = add nsw i32 %90, %1
  br label %92

92:                                               ; preds = %85, %87, %66, %27, %35, %38, %74, %79, %53, %2
  %93 = phi i32 [ 0, %2 ], [ %28, %27 ], [ %43, %38 ], [ %1, %35 ], [ %67, %66 ], [ %54, %53 ], [ %75, %74 ], [ %80, %79 ], [ %86, %85 ], [ %91, %87 ]
  ret i32 %93
}

declare %"class.blink::LayoutObject"* @_ZN5blink24AssociatedLayoutObjectOfERKNS_4NodeEiNS_16LayoutObjectSideE(%"class.blink::Node"* dereferenceable(64), i32, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink8AXObject29TextOffsetInFormattingContextEi(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject26FirstChildIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::LayoutBlockFlow"* @_ZN5blink15NGOffsetMapping28GetInlineFormattingContextOfERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare %"class.blink::NGOffsetMapping"* @_ZN5blink12NGInlineNode16GetOffsetMappingEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

declare { i64, %"class.blink::NGOffsetMappingUnit"* } @_ZNK5blink15NGOffsetMapping30GetMappingUnitsForLayoutObjectERKNS_12LayoutObjectE(%"class.blink::NGOffsetMapping"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject28LoadInlineTextBoxesRecursiveEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %9 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %8) #15
  %10 = tail call zeroext i1 @_ZN2ui28CanHaveInlineTextBoxChildrenEN2ax5mojom4RoleE(i32 %9) #15
  br i1 %10, label %11, label %17

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %118

15:                                               ; preds = %11
  tail call void @_ZN5blink12AXNodeObject24AddInlineTextBoxChildrenEb(%"class.blink::AXNodeObject"* %0, i1 zeroext true)
  %16 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %16, align 8
  br label %118

17:                                               ; preds = %1
  %18 = tail call dereferenceable(16) %"class.blink::HeapVector.2999"* @_ZN5blink8AXObject24ChildrenIncludingIgnoredEv(%"class.blink::AXObject"* %8) #15
  %19 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %18, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %20, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %118, label %26

26:                                               ; preds = %17
  %27 = bitcast %"class.logging::CheckError"* %2 to i8*
  %28 = bitcast %"class.WTF::String"* %3 to i8*
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %30 = bitcast %"class.logging::CheckError"* %4 to i8*
  %31 = bitcast %"class.WTF::String"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %33 = bitcast %"class.logging::CheckError"* %6 to i8*
  %34 = bitcast %"class.WTF::String"* %7 to i8*
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %26, %110
  %37 = phi %"class.blink::Member.2997"* [ %20, %26 ], [ %116, %110 ]
  %38 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %38, align 8
  %40 = icmp eq %"class.blink::AXObject"* %39, null
  br i1 %40, label %41, label %63

41:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.29, i64 0, i64 0), i32 3409, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0)) #15
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #15
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.31, i64 0, i64 0), i64 58) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  %44 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8ToStringEbb(%"class.blink::AXObject"* %8, i1 zeroext true, i1 zeroext true) #15
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %29, align 8
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %43, %"class.WTF::String"* nonnull dereferenceable(8) %3) #15
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #15
  br label %61

61:                                               ; preds = %41, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  %62 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %38, align 8
  br label %63

63:                                               ; preds = %36, %61
  %64 = phi %"class.blink::AXObject"* [ %39, %36 ], [ %62, %61 ]
  %65 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %64) #15
  br i1 %65, label %66, label %87

66:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.29, i64 0, i64 0), i32 3411, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i64 0, i64 0)) #15
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %67, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i64 0, i64 0), i64 57) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #15
  %69 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8ToStringEbb(%"class.blink::AXObject"* %8, i1 zeroext true, i1 zeroext true) #15
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %32, align 8
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %68, %"class.WTF::String"* nonnull dereferenceable(8) %5) #15
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #15
  br label %86

86:                                               ; preds = %66, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  br label %87

87:                                               ; preds = %63, %86
  %88 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %8) #15
  br i1 %88, label %89, label %110

89:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.29, i64 0, i64 0), i32 3414, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i64 0, i64 0)) #15
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %90, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.35, i64 0, i64 0), i64 74) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  %92 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8ToStringEbb(%"class.blink::AXObject"* %8, i1 zeroext true, i1 zeroext true) #15
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %35, align 8
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160) %91, %"class.WTF::String"* nonnull dereferenceable(8) %7) #15
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #15
  br label %109

109:                                              ; preds = %89, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  br label %110

110:                                              ; preds = %87, %109
  %111 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %38, align 8
  %112 = bitcast %"class.blink::AXObject"* %111 to void (%"class.blink::AXObject"*)***
  %113 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %113, i64 83
  %115 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %114, align 8
  call void %115(%"class.blink::AXObject"* %111) #15
  %116 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %37, i64 1
  %117 = icmp eq %"class.blink::Member.2997"* %116, %24
  br i1 %117, label %118, label %36

118:                                              ; preds = %110, %17, %11, %15
  ret void
}

declare zeroext i1 @_ZN2ui28CanHaveInlineTextBoxChildrenEN2ax5mojom4RoleE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject24AddInlineTextBoxChildrenEb(%"class.blink::AXNodeObject"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AXObject"*, align 8
  %4 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %5 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %5, i64 126
  %7 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %6, align 8
  %8 = tail call %"class.blink::Document"* %7(%"class.blink::AXNodeObject"* %0) #15
  %9 = icmp eq %"class.blink::Document"* %8, null
  br i1 %9, label %109, label %10

10:                                               ; preds = %2
  %11 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* nonnull %8) #15
  br i1 %1, label %20, label %12

12:                                               ; preds = %10
  %13 = icmp eq %"class.blink::Settings"* %11, null
  br i1 %13, label %109, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %11, i64 0, i32 71
  %16 = bitcast [14 x i8]* %15 to i112*
  %17 = load i112, i112* %16, align 8
  %18 = and i112 %17, 35184372088832
  %19 = icmp eq i112 %18, 0
  br i1 %19, label %109, label %20

20:                                               ; preds = %14, %10
  %21 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %22 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %23 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %23, i64 125
  %25 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %24, align 8
  %26 = tail call %"class.blink::LayoutObject"* %25(%"class.blink::AXObject"* %21) #15
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  br i1 %27, label %109, label %28

28:                                               ; preds = %20
  %29 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %22, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %29, i64 125
  %31 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %30, align 8
  %32 = tail call %"class.blink::LayoutObject"* %31(%"class.blink::AXObject"* %21) #15
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = and i96 %35, 33554432
  %37 = icmp eq i96 %36, 0
  br i1 %37, label %109, label %38

38:                                               ; preds = %28
  %39 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %22, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %39, i64 125
  %41 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %40, align 8
  %42 = tail call %"class.blink::LayoutObject"* %41(%"class.blink::AXObject"* %21) #15
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 4
  %44 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %43 to i96*
  %45 = load i96, i96* %44, align 4
  %46 = and i96 %45, 63
  %47 = icmp eq i96 %46, 0
  br i1 %47, label %48, label %109

48:                                               ; preds = %38
  %49 = tail call zeroext i1 @_ZNK5blink8AXObject23LastKnownIsIgnoredValueEv(%"class.blink::AXObject"* %21) #15
  br i1 %49, label %109, label %50

50:                                               ; preds = %48
  %51 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %22, align 8
  %52 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %51, i64 125
  %53 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %52, align 8
  %54 = tail call %"class.blink::LayoutObject"* %53(%"class.blink::AXObject"* %21) #15
  %55 = bitcast %"class.blink::LayoutObject"* %54 to %"class.blink::LayoutText"*
  %56 = tail call %"class.blink::AbstractInlineTextBox"* @_ZN5blink10LayoutText26FirstAbstractInlineTextBoxEv(%"class.blink::LayoutText"* %55) #15
  %57 = icmp eq %"class.blink::AbstractInlineTextBox"* %56, null
  br i1 %57, label %109, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.blink::AXObject"** %3 to i8*
  %60 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0
  %62 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %63 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %61, i64 0, i32 0, i32 0, i32 0
  br label %65

65:                                               ; preds = %58, %107
  %66 = phi %"class.blink::AbstractInlineTextBox"* [ %56, %58 ], [ %94, %107 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #15
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %3, align 8
  %67 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %60, align 8
  %68 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_21AbstractInlineTextBoxEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %67, %"class.blink::AbstractInlineTextBox"* nonnull %66, %"class.blink::AXObject"* %21) #15
  store %"class.blink::AXObject"* %68, %"class.blink::AXObject"** %3, align 8
  %69 = icmp eq %"class.blink::AXObject"* %68, null
  %70 = ptrtoint %"class.blink::AXObject"* %68 to i64
  br i1 %69, label %89, label %71

71:                                               ; preds = %65
  %72 = load i32, i32* %62, align 4
  %73 = load i32, i32* %63, align 8
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %88, label %75, !prof !3

75:                                               ; preds = %71
  %76 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %64, align 8
  %77 = zext i32 %72 to i64
  %78 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %76, i64 %77
  %79 = bitcast %"class.blink::Member.2997"* %78 to i64*
  store atomic i64 %70, i64* %79 monotonic, align 8
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %75
  %83 = bitcast %"class.blink::AXObject"* %68 to i8*
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %83) #15
  br label %85

85:                                               ; preds = %82, %75
  %86 = load i32, i32* %62, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %62, align 4
  br label %89

88:                                               ; preds = %71
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3002"* %61, %"class.blink::AXObject"** nonnull dereferenceable(8) %3) #15
  br label %89

89:                                               ; preds = %65, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #15
  %90 = bitcast %"class.blink::AbstractInlineTextBox"* %66 to %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)***
  %91 = load %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)**, %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)*, %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)** %91, i64 3
  %93 = load %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)*, %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)** %92, align 8
  %94 = call %"class.blink::AbstractInlineTextBox"* %93(%"class.blink::AbstractInlineTextBox"* nonnull %66) #15
  %95 = getelementptr inbounds %"class.blink::AbstractInlineTextBox", %"class.blink::AbstractInlineTextBox"* %66, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.base::RefCounted.3921", %"class.base::RefCounted.3921"* %95, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #15
  %97 = getelementptr inbounds %"class.base::RefCounted.3921", %"class.base::RefCounted.3921"* %95, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %107

100:                                              ; preds = %89
  %101 = getelementptr inbounds %"class.base::RefCounted.3921", %"class.base::RefCounted.3921"* %95, i64 -2
  %102 = bitcast %"class.base::RefCounted.3921"* %101 to %"class.blink::AbstractInlineTextBox"*
  %103 = bitcast %"class.base::RefCounted.3921"* %101 to void (%"class.blink::AbstractInlineTextBox"*)***
  %104 = load void (%"class.blink::AbstractInlineTextBox"*)**, void (%"class.blink::AbstractInlineTextBox"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %104, i64 1
  %106 = load void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %105, align 8
  call void %106(%"class.blink::AbstractInlineTextBox"* nonnull %102) #15
  br label %107

107:                                              ; preds = %89, %100
  %108 = icmp eq %"class.blink::AbstractInlineTextBox"* %94, null
  br i1 %108, label %109, label %65

109:                                              ; preds = %107, %50, %38, %28, %14, %12, %20, %48, %2
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3WTFlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6StringE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8ToStringEbb(%"class.blink::AXObject"*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject23LastKnownIsIgnoredValueEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AbstractInlineTextBox"* @_ZN5blink10LayoutText26FirstAbstractInlineTextBoxEv(%"class.blink::LayoutText"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_21AbstractInlineTextBoxEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AbstractInlineTextBox"*, %"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject25AddValidationMessageChildEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %3 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %2, align 8
  %4 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl32ValidationMessageObjectIfInvalidEb(%"class.blink::AXObjectCacheImpl"* %3, i1 zeroext false) #15
  %5 = icmp eq %"class.blink::AXObject"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %4, i32 %8, i1 zeroext undef) #15
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject24AddChildAndCheckIncludedEPNS_8AXObjectEb(%"class.blink::AXNodeObject"*, %"class.blink::AXObject"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::AXObject"* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %1, i32 %7, i1 zeroext undef) #15
  br label %8

8:                                                ; preds = %3, %5
  ret void
}

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl32ValidationMessageObjectIfInvalidEb(%"class.blink::AXObjectCacheImpl"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject19AddImageMapChildrenEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, i64 125
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObject"* %6(%"class.blink::AXObject"* %2) #15
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %199, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::LayoutObject"* %7 to i1 (%"class.blink::LayoutObject"*, i32)***
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, i64 92
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::LayoutObject"* nonnull %7, i32 12) #15
  br i1 %14, label %15, label %199

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::LayoutObject"* %7 to %"class.blink::LayoutImage"*
  %17 = tail call %"class.blink::HTMLMapElement"* @_ZNK5blink11LayoutImage8ImageMapEv(%"class.blink::LayoutImage"* nonnull %16) #15
  %18 = icmp eq %"class.blink::HTMLMapElement"* %17, null
  br i1 %18, label %199, label %19

19:                                               ; preds = %15
  %20 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %20, label %44, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %44, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 48
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %44

30:                                               ; preds = %25
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 1, i32 2
  %35 = bitcast %"class.blink::Member.318"* %34 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  %42 = bitcast %"class.blink::Node"* %23 to %"class.blink::HTMLImageElement"*
  %43 = select i1 %41, %"class.blink::HTMLImageElement"* %42, %"class.blink::HTMLImageElement"* null
  br label %44

44:                                               ; preds = %19, %21, %25, %30
  %45 = phi %"class.blink::HTMLImageElement"* [ %43, %30 ], [ null, %25 ], [ null, %21 ], [ null, %19 ]
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kUsemapAttrE, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %45, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %47, align 8
  %49 = icmp eq %"class.blink::ElementData"* %48, null
  br i1 %49, label %100, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %48, i64 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = bitcast %"class.blink::ElementData"* %48 to %"class.blink::UniqueElementData"*
  %57 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %48, i64 1, i32 1
  %58 = bitcast %"class.blink::Member.354"* %57 to %"class.blink::Attribute"**
  %59 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %56, i64 0, i32 2, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  br label %67

62:                                               ; preds = %50
  %63 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %48, i64 1
  %64 = bitcast %"class.blink::ElementData"* %63 to %"class.blink::Attribute"*
  %65 = lshr i32 %52, 1
  %66 = and i32 %65, 268435455
  br label %67

67:                                               ; preds = %62, %55
  %68 = phi %"class.blink::Attribute"* [ %64, %62 ], [ %59, %55 ]
  %69 = phi i32 [ %66, %62 ], [ %61, %55 ]
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %68, i64 %70
  %72 = icmp eq i32 %69, 0
  br i1 %72, label %100, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %46, i64 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %78

78:                                               ; preds = %93, %73
  %79 = phi %"class.blink::Attribute"* [ %68, %73 ], [ %94, %93 ]
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %82 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %81, %75
  br i1 %82, label %96, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %81, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %85, %86
  br i1 %87, label %88, label %93

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %81, i64 0, i32 4, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %90, %91
  br i1 %92, label %96, label %93

93:                                               ; preds = %88, %83
  %94 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %79, i64 1
  %95 = icmp eq %"class.blink::Attribute"* %94, %71
  br i1 %95, label %100, label %78

96:                                               ; preds = %88, %78
  %97 = icmp eq %"class.blink::Attribute"* %79, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %79, i64 0, i32 1
  br label %102

100:                                              ; preds = %93, %96, %67, %44
  %101 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %102

102:                                              ; preds = %98, %100
  %103 = phi %"class.WTF::AtomicString"* [ %101, %100 ], [ %99, %98 ]
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %124, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i33
  %116 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #15
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !3

121:                                              ; preds = %112
  tail call void @llvm.trap() #15
  unreachable

122:                                              ; preds = %112
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %113, align 4
  br label %124

124:                                              ; preds = %102, %107, %122
  %125 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"* nonnull %17) #15
  %126 = icmp eq %"class.blink::HTMLImageElement"* %125, %45
  %127 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %128 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %127, align 8
  br i1 %126, label %153, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %125, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %128, %"class.blink::Node"* %130) #15
  %132 = icmp eq %"class.blink::AXObject"* %131, null
  br i1 %132, label %185, label %133

133:                                              ; preds = %129
  %134 = tail call i32 @_ZNK5blink8AXObject26ChildCountIncludingIgnoredEv(%"class.blink::AXObject"* nonnull %131) #15
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %185

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.blink::HTMLMapElement", %"class.blink::HTMLMapElement"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %185, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.blink::HTMLMapElement", %"class.blink::HTMLMapElement"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %142, i64 1
  %144 = bitcast %"class.blink::Node"* %143 to %"class.blink::Node"**
  %145 = load %"class.blink::Node"*, %"class.blink::Node"** %144, align 8
  %146 = icmp eq %"class.blink::Node"* %145, null
  br i1 %146, label %185, label %147

147:                                              ; preds = %141
  %148 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %127, align 8
  %149 = bitcast %"class.blink::AXObjectCacheImpl"* %148 to void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)***
  %150 = load void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)**, void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)** %150, i64 11
  %152 = load void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)*, void (%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*)** %151, align 8
  tail call void %152(%"class.blink::AXObjectCacheImpl"* %148, %"class.blink::Node"* %130) #15
  br label %185

153:                                              ; preds = %124
  %154 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl16GetAXImageForMapERNS_14HTMLMapElementE(%"class.blink::AXObjectCacheImpl"* %128, %"class.blink::HTMLMapElement"* nonnull dereferenceable(112) %17) #15
  %155 = icmp eq %"class.blink::AXObject"* %154, null
  %156 = icmp eq %"class.blink::AXObject"* %154, %2
  %157 = or i1 %155, %156
  br i1 %157, label %169, label %158

158:                                              ; preds = %153
  %159 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %127, align 8
  %160 = bitcast %"class.blink::AXObject"* %154 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %161 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %160, align 8
  %162 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %161, i64 124
  %163 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %162, align 8
  %164 = tail call %"class.blink::Node"* %163(%"class.blink::AXObject"* nonnull %154) #15
  tail call void @_ZN5blink17AXObjectCacheImpl30ChildrenChangedWithCleanLayoutEPNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %159, %"class.blink::Node"* %164, %"class.blink::AXObject"* nonnull %154) #15
  %165 = bitcast %"class.blink::AXObject"* %154 to void (%"class.blink::AXObject"*)***
  %166 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %165, align 8
  %167 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %166, i64 120
  %168 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %167, align 8
  tail call void %168(%"class.blink::AXObject"* nonnull %154) #15
  br label %169

169:                                              ; preds = %153, %158
  %170 = getelementptr inbounds %"class.blink::HTMLMapElement", %"class.blink::HTMLMapElement"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %171 = tail call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %170) #15
  %172 = icmp eq %"class.blink::Node"* %171, null
  br i1 %172, label %185, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  br label %175

175:                                              ; preds = %173, %182
  %176 = phi %"class.blink::Node"* [ %171, %173 ], [ %183, %182 ]
  %177 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %127, align 8
  %178 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %177, %"class.blink::Node"* nonnull %176, %"class.blink::AXObject"* %2) #15
  %179 = icmp eq %"class.blink::AXObject"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %175
  %181 = load i32, i32* %174, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %178, i32 %181, i1 zeroext undef) #15
  br label %182

182:                                              ; preds = %175, %180
  %183 = tail call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal11NextSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %176) #15
  %184 = icmp eq %"class.blink::Node"* %183, null
  br i1 %184, label %185, label %175

185:                                              ; preds = %182, %169, %136, %133, %147, %129, %141
  br i1 %106, label %199, label %186

186:                                              ; preds = %185
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #15
  br label %199

199:                                              ; preds = %1, %9, %198, %195, %185, %15
  ret void
}

declare %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"*) local_unnamed_addr #1

declare i32 @_ZNK5blink8AXObject26ChildCountIncludingIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl16GetAXImageForMapERNS_14HTMLMapElementE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::HTMLMapElement"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN5blink17AXObjectCacheImpl30ChildrenChangedWithCleanLayoutEPNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*, %"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*, %"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject16AddPopupChildrenEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = load i8, i8* @_ZN5blink17AXObjectCacheImpl17use_ax_menu_list_E, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = bitcast %"class.blink::Node"* %8 to %"class.blink::HTMLSelectElement"*
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi %"class.blink::HTMLSelectElement"* [ %9, %6 ], [ null, %1 ]
  %12 = phi %"class.blink::Node"* [ %8, %6 ], [ null, %1 ]
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %4, label %14, label %44

14:                                               ; preds = %10
  br i1 %13, label %69, label %15

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 48
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %69

20:                                               ; preds = %15
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 1, i32 2
  %25 = bitcast %"class.blink::Member.318"* %24 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp ne %"class.WTF::StringImpl"* %28, %30
  %32 = icmp eq %"class.blink::HTMLSelectElement"* %11, null
  %33 = or i1 %32, %31
  br i1 %33, label %69, label %34

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"class.blink::HTMLSelectElement", %"class.blink::HTMLSelectElement"* %11, i64 0, i32 9
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %34
  %39 = tail call %"class.blink::AXObject"* @_ZNK5blink17HTMLSelectElement17PopupRootAXObjectEv(%"class.blink::HTMLSelectElement"* nonnull %11) #15
  %40 = icmp eq %"class.blink::AXObject"* %39, null
  br i1 %40, label %69, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %39, i32 %43, i1 zeroext undef) #15
  br label %69

44:                                               ; preds = %10
  br i1 %13, label %69, label %45

45:                                               ; preds = %44
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 48
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %69

50:                                               ; preds = %45
  %51 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %52 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 1, i32 2
  %55 = bitcast %"class.blink::Member.318"* %54 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %58, %60
  br i1 %61, label %62, label %69

62:                                               ; preds = %50
  %63 = bitcast %"class.blink::Node"* %12 to %"class.blink::HTMLInputElement"*
  %64 = tail call %"class.blink::AXObject"* @_ZN5blink16HTMLInputElement17PopupRootAXObjectEv(%"class.blink::HTMLInputElement"* nonnull %63) #15
  %65 = icmp eq %"class.blink::AXObject"* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %64, i32 %68, i1 zeroext undef) #15
  br label %69

69:                                               ; preds = %50, %34, %20, %44, %45, %14, %15, %66, %62, %41, %38
  ret void
}

declare %"class.blink::AXObject"* @_ZNK5blink17HTMLSelectElement17PopupRootAXObjectEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink16HTMLInputElement17PopupRootAXObjectEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12AXNodeObject17CanAddLayoutChildERNS_12LayoutObjectE(%"class.blink::AXNodeObject"* readonly, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 16777216
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %9, align 8
  %11 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %10, %"class.blink::LayoutObject"* %1) #15
  %12 = icmp eq %"class.blink::AXObject"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %11, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %15, align 8
  %17 = icmp eq %"class.blink::AXObject"* %16, null
  %18 = icmp eq %"class.blink::AXObject"* %16, %14
  %19 = or i1 %17, %18
  ret i1 %19

20:                                               ; preds = %2, %8
  ret i1 true
}

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject17AddLayoutChildrenEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, i64 125
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObject"* %6(%"class.blink::AXObject"* %2) #15
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %58, label %9

9:                                                ; preds = %1
  %10 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %10, i64 125
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call %"class.blink::LayoutObject"* %12(%"class.blink::AXObject"* %2) #15
  %14 = bitcast %"class.blink::LayoutObject"* %13 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %15 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %15, i64 13
  %17 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %16, align 8
  %18 = tail call %"class.blink::LayoutObjectChildList"* %17(%"class.blink::LayoutObject"* %13) #15
  %19 = icmp eq %"class.blink::LayoutObjectChildList"* %18, null
  br i1 %19, label %58, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %18, i64 0, i32 0
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %58, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  br label %27

27:                                               ; preds = %24, %54
  %28 = phi %"class.blink::LayoutObject"* [ %22, %24 ], [ %56, %54 ]
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 16777216
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %44

34:                                               ; preds = %27
  %35 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %25, align 8
  %36 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_12LayoutObjectE(%"class.blink::AXObjectCacheImpl"* %35, %"class.blink::LayoutObject"* nonnull %28) #15
  %37 = icmp eq %"class.blink::AXObject"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %36, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %39, align 8
  %41 = icmp eq %"class.blink::AXObject"* %40, null
  %42 = icmp eq %"class.blink::AXObject"* %40, %2
  %43 = or i1 %41, %42
  br i1 %43, label %44, label %54

44:                                               ; preds = %27, %34, %38
  %45 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %25, align 8
  %46 = bitcast %"class.blink::AXObjectCacheImpl"* %45 to %"class.blink::AXObject"* (%"class.blink::AXObjectCacheImpl"*, %"class.blink::LayoutObject"*, %"class.blink::AXObject"*)***
  %47 = load %"class.blink::AXObject"* (%"class.blink::AXObjectCacheImpl"*, %"class.blink::LayoutObject"*, %"class.blink::AXObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXObjectCacheImpl"*, %"class.blink::LayoutObject"*, %"class.blink::AXObject"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXObjectCacheImpl"*, %"class.blink::LayoutObject"*, %"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObjectCacheImpl"*, %"class.blink::LayoutObject"*, %"class.blink::AXObject"*)** %47, i64 64
  %49 = load %"class.blink::AXObject"* (%"class.blink::AXObjectCacheImpl"*, %"class.blink::LayoutObject"*, %"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObjectCacheImpl"*, %"class.blink::LayoutObject"*, %"class.blink::AXObject"*)** %48, align 8
  %50 = tail call %"class.blink::AXObject"* %49(%"class.blink::AXObjectCacheImpl"* %45, %"class.blink::LayoutObject"* nonnull %28, %"class.blink::AXObject"* %2) #15
  %51 = icmp eq %"class.blink::AXObject"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %44
  %53 = load i32, i32* %26, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %50, i32 %53, i1 zeroext undef) #15
  br label %54

54:                                               ; preds = %52, %44, %38
  %55 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 9
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %55, align 8
  %57 = icmp eq %"class.blink::LayoutObject"* %56, null
  br i1 %57, label %58, label %27

58:                                               ; preds = %54, %9, %20, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject15AddNodeChildrenEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal10FirstChildERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %3) #15
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  br label %12

12:                                               ; preds = %8, %27
  %13 = phi %"class.blink::Node"* [ %6, %8 ], [ %28, %27 ]
  %14 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %10, align 8
  %15 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %14, %"class.blink::Node"* nonnull %13) #15
  %16 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %10, align 8
  %17 = tail call zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %16, %"class.blink::AXObject"* %15) #15
  br i1 %17, label %27, label %18

18:                                               ; preds = %12
  %19 = icmp eq %"class.blink::AXObject"* %15, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %10, align 8
  %22 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %21, %"class.blink::Node"* nonnull %13, %"class.blink::AXObject"* %9) #15
  %23 = icmp eq %"class.blink::AXObject"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %20, %18
  %25 = phi %"class.blink::AXObject"* [ %15, %18 ], [ %22, %20 ]
  %26 = load i32, i32* %11, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %25, i32 %26, i1 zeroext undef) #15
  br label %27

27:                                               ; preds = %12, %20, %24
  %28 = tail call %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal11NextSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %13) #15
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %30, label %12

30:                                               ; preds = %27, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject25AddAccessibleNodeChildrenEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.3968", align 8
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %3) #15
  %5 = icmp eq %"class.blink::Element"* %4, null
  br i1 %5, label %36, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"* nonnull %4) #15
  %8 = icmp eq %"class.blink::AccessibleNode"* %7, null
  br i1 %8, label %36, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.blink::HeapVector.3968"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.blink::HeapVector.3968", %"class.blink::HeapVector.3968"* %2, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::AccessibleNode", %"class.blink::AccessibleNode"* %7, i64 0, i32 10, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.3971"* nonnull %11, %"class.WTF::Vector.3971"* dereferenceable(16) %12) #15
  %13 = getelementptr inbounds %"class.blink::HeapVector.3968", %"class.blink::HeapVector.3968"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Member.3974"*, %"class.blink::Member.3974"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HeapVector.3968", %"class.blink::HeapVector.3968"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Member.3974", %"class.blink::Member.3974"* %14, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  br label %24

23:                                               ; preds = %33, %9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  br label %36

24:                                               ; preds = %20, %33
  %25 = phi %"class.blink::Member.3974"* [ %14, %20 ], [ %34, %33 ]
  %26 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %21, align 8
  %27 = getelementptr inbounds %"class.blink::Member.3974", %"class.blink::Member.3974"* %25, i64 0, i32 0, i32 0
  %28 = load %"class.blink::AccessibleNode"*, %"class.blink::AccessibleNode"** %27, align 8
  %29 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_14AccessibleNodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %26, %"class.blink::AccessibleNode"* %28, %"class.blink::AXObject"* %3) #15
  %30 = icmp eq %"class.blink::AXObject"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %24
  %32 = load i32, i32* %22, align 4
  call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %29, i32 %32, i1 zeroext undef) #15
  br label %33

33:                                               ; preds = %24, %31
  %34 = getelementptr inbounds %"class.blink::Member.3974", %"class.blink::Member.3974"* %25, i64 1
  %35 = icmp eq %"class.blink::Member.3974"* %34, %18
  br i1 %35, label %23, label %24

36:                                               ; preds = %23, %6, %1
  ret void
}

declare %"class.blink::AccessibleNode"* @_ZNK5blink7Element22ExistingAccessibleNodeEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_14AccessibleNodeEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AccessibleNode"*, %"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject16AddOwnedChildrenEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.2999", align 8
  %3 = bitcast %"class.blink::HeapVector.2999"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #15
  %4 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #15
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %8 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %7, align 8
  call void @_ZN5blink17AXObjectCacheImpl20GetAriaOwnedChildrenEPKNS_8AXObjectERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::AXObjectCacheImpl"* %8, %"class.blink::AXObject"* %6, %"class.blink::HeapVector.2999"* nonnull dereferenceable(16) %2) #15
  %9 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %4, align 8
  %10 = load i32, i32* %5, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %9, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  br label %17

16:                                               ; preds = %24, %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #15
  ret void

17:                                               ; preds = %14, %24
  %18 = phi %"class.blink::Member.2997"* [ %9, %14 ], [ %25, %24 ]
  %19 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %19, align 8
  %21 = icmp eq %"class.blink::AXObject"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = load i32, i32* %15, align 4
  call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %20, i32 %23, i1 zeroext undef) #15
  br label %24

24:                                               ; preds = %17, %22
  %25 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %18, i64 1
  %26 = icmp eq %"class.blink::Member.2997"* %25, %12
  br i1 %26, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject15AddChildrenImplEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.2999", align 8
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %4 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %4, i64 119
  %6 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::AXNodeObject"* %0) #15
  br i1 %7, label %8, label %90

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %10 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %9) #15
  %11 = tail call zeroext i1 @_ZN2ui28CanHaveInlineTextBoxChildrenEN2ax5mojom4RoleE(i32 %10) #15
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN5blink12AXNodeObject24AddInlineTextBoxChildrenEb(%"class.blink::AXNodeObject"* %0, i1 zeroext false)
  %13 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  br label %90

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  br i1 %15, label %39, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %39, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 48
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %20
  %26 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 1, i32 2
  %30 = bitcast %"class.blink::Member.318"* %29 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %25
  tail call void @_ZN5blink12AXNodeObject19AddImageMapChildrenEv(%"class.blink::AXNodeObject"* %0)
  %38 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  br label %90

39:                                               ; preds = %14, %20, %16, %25
  %40 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %9) #15
  %41 = icmp eq i32 %40, 145
  br i1 %41, label %42, label %50

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %44 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %43, align 8
  %45 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl32ValidationMessageObjectIfInvalidEb(%"class.blink::AXObjectCacheImpl"* %44, i1 zeroext false) #15
  %46 = icmp eq %"class.blink::AXObject"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %45, i32 %49, i1 zeroext undef) #15
  br label %50

50:                                               ; preds = %47, %42, %39
  %51 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  br i1 %51, label %90, label %52

52:                                               ; preds = %50
  %53 = tail call zeroext i1 @_ZNK5blink12AXNodeObject35HasValidHTMLTableStructureAndLayoutEv(%"class.blink::AXNodeObject"* %0)
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @_ZN5blink12AXNodeObject16AddTableChildrenEv(%"class.blink::AXNodeObject"* %0)
  br label %59

55:                                               ; preds = %52
  %56 = tail call zeroext i1 @_ZNK5blink8AXObject41ShouldUseLayoutObjectTraversalForChildrenEv(%"class.blink::AXObject"* %9) #15
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @_ZN5blink12AXNodeObject17AddLayoutChildrenEv(%"class.blink::AXNodeObject"* %0)
  br label %59

58:                                               ; preds = %55
  tail call void @_ZN5blink12AXNodeObject15AddNodeChildrenEv(%"class.blink::AXNodeObject"* %0)
  br label %59

59:                                               ; preds = %57, %58, %54
  %60 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  br i1 %60, label %90, label %61

61:                                               ; preds = %59
  tail call void @_ZN5blink12AXNodeObject16AddPopupChildrenEv(%"class.blink::AXNodeObject"* %0)
  %62 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  br i1 %62, label %90, label %63

63:                                               ; preds = %61
  tail call void @_ZN5blink12AXNodeObject25AddAccessibleNodeChildrenEv(%"class.blink::AXNodeObject"* %0)
  %64 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  br i1 %64, label %90, label %65

65:                                               ; preds = %63
  %66 = bitcast %"class.blink::HeapVector.2999"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #15
  %67 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #15
  %69 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %70 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %69, align 8
  call void @_ZN5blink17AXObjectCacheImpl20GetAriaOwnedChildrenEPKNS_8AXObjectERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::AXObjectCacheImpl"* %70, %"class.blink::AXObject"* %9, %"class.blink::HeapVector.2999"* nonnull dereferenceable(16) %2) #15
  %71 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %67, align 8
  %72 = load i32, i32* %68, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %71, i64 %73
  %75 = icmp eq i32 %72, 0
  br i1 %75, label %88, label %76

76:                                               ; preds = %65
  %77 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  br label %78

78:                                               ; preds = %85, %76
  %79 = phi %"class.blink::Member.2997"* [ %71, %76 ], [ %86, %85 ]
  %80 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %80, align 8
  %82 = icmp eq %"class.blink::AXObject"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %78
  %84 = load i32, i32* %77, align 4
  call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %81, i32 %84, i1 zeroext undef) #15
  br label %85

85:                                               ; preds = %83, %78
  %86 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %79, i64 1
  %87 = icmp eq %"class.blink::Member.2997"* %86, %74
  br i1 %87, label %88, label %78

88:                                               ; preds = %85, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #15
  %89 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %9) #15
  ret void

90:                                               ; preds = %63, %61, %59, %50, %37, %12, %1
  ret void
}

declare zeroext i1 @_ZNK5blink8AXObject41ShouldUseLayoutObjectTraversalForChildrenEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject11AddChildrenEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12AXNodeObject15AddChildrenImplEv(%"class.blink::AXNodeObject"* %0)
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject8AddChildEPNS_8AXObjectEb(%"class.blink::AXNodeObject"*, %"class.blink::AXObject"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::AXObject"* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  tail call void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"* %0, %"class.blink::AXObject"* nonnull %1, i32 %7, i1 zeroext undef)
  br label %8

8:                                                ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject11InsertChildEPNS_8AXObjectEjb(%"class.blink::AXNodeObject"*, %"class.blink::AXObject"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::AXObject"*, align 8
  store %"class.blink::AXObject"* %1, %"class.blink::AXObject"** %5, align 8
  %6 = icmp eq %"class.blink::AXObject"* %1, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  tail call void @_ZNK5blink8AXObject9SetParentEPS0_(%"class.blink::AXObject"* nonnull %1, %"class.blink::AXObject"* %8) #15
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* nonnull %1, i1 zeroext false) #15
  %9 = tail call zeroext i1 @_ZNK5blink8AXObject30LastKnownIsIncludedInTreeValueEv(%"class.blink::AXObject"* nonnull %1) #15
  br i1 %9, label %34, label %10

10:                                               ; preds = %7
  %11 = tail call dereferenceable(16) %"class.blink::HeapVector.2999"* @_ZN5blink8AXObject24ChildrenIncludingIgnoredEv(%"class.blink::AXObject"* nonnull %1) #15
  %12 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0
  br label %19

19:                                               ; preds = %30, %16
  %20 = phi i32 [ 0, %16 ], [ %32, %30 ]
  %21 = phi i32 [ %2, %16 ], [ %31, %30 ]
  %22 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %17, align 8
  %23 = tail call dereferenceable(8) %"class.blink::Member.2997"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3002"* %12, i32 %20) #15
  %24 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %24, align 8
  %26 = tail call zeroext i1 @_ZNK5blink17AXObjectCacheImpl11IsAriaOwnedEPKNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %22, %"class.blink::AXObject"* %25) #15
  br i1 %26, label %30, label %27

27:                                               ; preds = %19
  %28 = add nsw i32 %21, 1
  %29 = tail call dereferenceable(8) %"class.blink::Member.2997"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3002"* %12, i32 %20) #15
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE6insertIRKS4_EEvjOT_(%"class.WTF::Vector.3002"* %18, i32 %21, %"class.blink::Member.2997"* dereferenceable(8) %29)
  br label %30

30:                                               ; preds = %19, %27
  %31 = phi i32 [ %21, %19 ], [ %28, %27 ]
  %32 = add nuw i32 %20, 1
  %33 = icmp eq i32 %32, %14
  br i1 %33, label %36, label %19

34:                                               ; preds = %7
  %35 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.3002"* %35, i32 %2, %"class.blink::AXObject"** nonnull dereferenceable(8) %5)
  br label %36

36:                                               ; preds = %30, %10, %4, %34
  ret void
}

declare void @_ZNK5blink8AXObject9SetParentEPS0_(%"class.blink::AXObject"*, %"class.blink::AXObject"*) local_unnamed_addr #1

declare void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject30LastKnownIsIncludedInTreeValueEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE6insertIRKS4_EEvjOT_(%"class.WTF::Vector.3002"*, i32, %"class.blink::Member.2997"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.60, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %57

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %30, align 8
  %32 = icmp ugt %"class.blink::Member.2997"* %31, %2
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = zext i32 %24 to i64
  %35 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %31, i64 %34
  %36 = icmp ugt %"class.blink::Member.2997"* %35, %2
  br i1 %36, label %44, label %37

37:                                               ; preds = %33, %28
  %38 = lshr i32 %24, 2
  %39 = add i32 %29, %38
  %40 = icmp ugt i32 %39, 4
  %41 = select i1 %40, i32 %39, i32 4
  %42 = icmp ugt i32 %41, %29
  %43 = select i1 %42, i32 %41, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3002"* %0, i32 %43) #15
  br label %57

44:                                               ; preds = %33
  %45 = ptrtoint %"class.blink::Member.2997"* %2 to i64
  %46 = ptrtoint %"class.blink::Member.2997"* %31 to i64
  %47 = sub i64 %45, %46
  %48 = ashr exact i64 %47, 3
  %49 = lshr i32 %24, 2
  %50 = add i32 %29, %49
  %51 = icmp ugt i32 %50, 4
  %52 = select i1 %51, i32 %50, i32 4
  %53 = icmp ugt i32 %52, %29
  %54 = select i1 %53, i32 %52, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3002"* %0, i32 %54) #15
  %55 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %30, align 8
  %56 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %55, i64 %48
  br label %57

57:                                               ; preds = %44, %37, %23
  %58 = phi %"class.blink::Member.2997"* [ %2, %23 ], [ %2, %37 ], [ %56, %44 ]
  %59 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %59, align 8
  %61 = zext i32 %1 to i64
  %62 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %60, i64 %61
  %63 = load i32, i32* %9, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %60, i64 %64
  %66 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %62, i64 1
  %67 = icmp ne %"class.blink::Member.2997"* %66, null
  %68 = icmp ne %"class.blink::Member.2997"* %62, null
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %110, !prof !5

70:                                               ; preds = %57
  %71 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %65, i64 -1
  %72 = icmp ult %"class.blink::Member.2997"* %71, %62
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = ptrtoint %"class.blink::Member.2997"* %62 to i64
  br label %90

75:                                               ; preds = %70
  %76 = ptrtoint %"class.blink::Member.2997"* %71 to i64
  %77 = ptrtoint %"class.blink::Member.2997"* %62 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %66, i64 %79
  br label %81

81:                                               ; preds = %81, %75
  %82 = phi %"class.blink::Member.2997"* [ %88, %81 ], [ %80, %75 ]
  %83 = phi %"class.blink::Member.2997"* [ %87, %81 ], [ %71, %75 ]
  %84 = bitcast %"class.blink::Member.2997"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.blink::Member.2997"* %82 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %83, i64 -1
  %88 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %82, i64 -1
  %89 = icmp ult %"class.blink::Member.2997"* %87, %62
  br i1 %89, label %90, label %81

90:                                               ; preds = %81, %73
  %91 = phi i64 [ %74, %73 ], [ %77, %81 ]
  %92 = ptrtoint %"class.blink::Member.2997"* %65 to i64
  %93 = sub i64 %92, %91
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %110, label %95

95:                                               ; preds = %90
  %96 = ashr exact i64 %93, 3
  br label %97

97:                                               ; preds = %107, %95
  %98 = phi i64 [ %100, %107 ], [ %96, %95 ]
  %99 = phi %"class.blink::Member.2997"* [ %108, %107 ], [ %66, %95 ]
  %100 = add i64 %98, -1
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.blink::Member.2997"* %99 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #15
  br label %107

107:                                              ; preds = %103, %97
  %108 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %99, i64 1
  %109 = icmp eq i64 %100, 0
  br i1 %109, label %110, label %97

110:                                              ; preds = %107, %57, %90
  %111 = bitcast %"class.blink::Member.2997"* %58 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.blink::Member.2997"* %62 to i64*
  store atomic i64 %112, i64* %113 monotonic, align 8
  %114 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %110
  %117 = inttoptr i64 %112 to i8*
  %118 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %117) #15
  br label %119

119:                                              ; preds = %110, %116
  %120 = load i32, i32* %9, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %9, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE6insertIRPS3_EEvjOT_(%"class.WTF::Vector.3002"*, i32, %"class.blink::AXObject"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.60, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %37

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = lshr i32 %24, 2
  %31 = add i32 %29, %30
  %32 = icmp ugt i32 %31, 4
  %33 = select i1 %32, i32 %31, i32 4
  %34 = icmp ugt i32 %33, %29
  %35 = select i1 %34, i32 %33, i32 %29
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3002"* %0, i32 %35) #15
  %36 = load i32, i32* %9, align 4
  br label %37

37:                                               ; preds = %28, %23
  %38 = phi i32 [ %36, %28 ], [ %24, %23 ]
  %39 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %39, align 8
  %41 = zext i32 %1 to i64
  %42 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %40, i64 %41
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %40, i64 %43
  %45 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %42, i64 1
  %46 = icmp ne %"class.blink::Member.2997"* %45, null
  %47 = icmp ne %"class.blink::Member.2997"* %42, null
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %89, !prof !5

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %44, i64 -1
  %51 = icmp ult %"class.blink::Member.2997"* %50, %42
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = ptrtoint %"class.blink::Member.2997"* %42 to i64
  br label %69

54:                                               ; preds = %49
  %55 = ptrtoint %"class.blink::Member.2997"* %50 to i64
  %56 = ptrtoint %"class.blink::Member.2997"* %42 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %45, i64 %58
  br label %60

60:                                               ; preds = %60, %54
  %61 = phi %"class.blink::Member.2997"* [ %67, %60 ], [ %59, %54 ]
  %62 = phi %"class.blink::Member.2997"* [ %66, %60 ], [ %50, %54 ]
  %63 = bitcast %"class.blink::Member.2997"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.2997"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %62, i64 -1
  %67 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %61, i64 -1
  %68 = icmp ult %"class.blink::Member.2997"* %66, %42
  br i1 %68, label %69, label %60

69:                                               ; preds = %60, %52
  %70 = phi i64 [ %53, %52 ], [ %56, %60 ]
  %71 = ptrtoint %"class.blink::Member.2997"* %44 to i64
  %72 = sub i64 %71, %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %69
  %75 = ashr exact i64 %72, 3
  br label %76

76:                                               ; preds = %86, %74
  %77 = phi i64 [ %79, %86 ], [ %75, %74 ]
  %78 = phi %"class.blink::Member.2997"* [ %87, %86 ], [ %45, %74 ]
  %79 = add i64 %77, -1
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.blink::Member.2997"* %78 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %84) #15
  br label %86

86:                                               ; preds = %82, %76
  %87 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %78, i64 1
  %88 = icmp eq i64 %79, 0
  br i1 %88, label %89, label %76

89:                                               ; preds = %86, %37, %69
  %90 = bitcast %"class.blink::AXObject"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.blink::Member.2997"* %42 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = inttoptr i64 %91 to i8*
  %97 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #15
  br label %98

98:                                               ; preds = %89, %95
  %99 = load i32, i32* %9, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject15CanHaveChildrenEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %2) #15
  %4 = icmp eq %"class.blink::Element"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %2) #15
  %7 = bitcast %"class.blink::Element"* %6 to %"class.WTF::AtomicString"* (%"class.blink::Element"*)***
  %8 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)**, %"class.WTF::AtomicString"* (%"class.blink::Element"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %8, i64 110
  %10 = load %"class.WTF::AtomicString"* (%"class.blink::Element"*)*, %"class.WTF::AtomicString"* (%"class.blink::Element"*)** %9, align 8
  %11 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %10(%"class.blink::Element"* %6) #15
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names23kPseudoInputPlaceholderE, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %14, %16
  br i1 %17, label %94, label %18

18:                                               ; preds = %1, %5
  %19 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %19, label %58, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %58, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 48
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %58

29:                                               ; preds = %24
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 1, i32 2
  %34 = bitcast %"class.blink::Member.318"* %33 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br i1 %40, label %41, label %58

41:                                               ; preds = %29
  %42 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %43 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %43, i64 125
  %45 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %44, align 8
  %46 = tail call %"class.blink::LayoutObject"* %45(%"class.blink::AXObject"* %2) #15
  %47 = icmp eq %"class.blink::LayoutObject"* %46, null
  br i1 %47, label %94, label %48

48:                                               ; preds = %41
  %49 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %42, align 8
  %50 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %49, i64 125
  %51 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %50, align 8
  %52 = tail call %"class.blink::LayoutObject"* %51(%"class.blink::AXObject"* %2) #15
  %53 = bitcast %"class.blink::LayoutObject"* %52 to i1 (%"class.blink::LayoutObject"*, i32)***
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %53, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, i64 92
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::LayoutObject"* %52, i32 0) #15
  br i1 %57, label %58, label %94

58:                                               ; preds = %18, %24, %20, %48, %29
  %59 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  switch i32 %60, label %63 [
    i32 15, label %94
    i32 114, label %94
    i32 128, label %94
    i32 125, label %94
    i32 126, label %94
    i32 127, label %94
    i32 141, label %94
    i32 142, label %94
    i32 151, label %94
    i32 156, label %94
    i32 158, label %94
    i32 164, label %94
    i32 165, label %94
    i32 176, label %94
    i32 138, label %61
    i32 110, label %62
    i32 159, label %62
  ]

61:                                               ; preds = %58
  br label %94

62:                                               ; preds = %58, %58
  br label %94

63:                                               ; preds = %58
  %64 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %64, label %68, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  br label %68

68:                                               ; preds = %63, %65
  %69 = phi %"class.blink::Node"* [ %67, %65 ], [ null, %63 ]
  %70 = tail call %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlEPKNS_4NodeE(%"class.blink::Node"* %69) #15
  %71 = icmp eq %"class.blink::TextControlElement"* %70, null
  br i1 %71, label %72, label %94

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  switch i32 %74, label %94 [
    i32 15, label %75
    i32 114, label %75
    i32 122, label %75
    i32 128, label %75
    i32 125, label %75
    i32 126, label %75
    i32 127, label %75
    i32 138, label %75
    i32 141, label %75
    i32 142, label %75
    i32 151, label %75
    i32 156, label %75
    i32 158, label %75
    i32 164, label %75
    i32 165, label %75
    i32 176, label %75
  ]

75:                                               ; preds = %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72, %72
  %76 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %2) #15
  %77 = icmp eq %"class.blink::Element"* %76, null
  br i1 %77, label %94, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %76, i64 0, i32 0, i32 0
  %80 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %79) #15
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %76, i64 0, i32 0, i32 1, i32 0, i32 0
  %83 = load %"class.blink::Node"*, %"class.blink::Node"** %82, align 8
  %84 = icmp eq %"class.blink::Node"* %83, null
  br i1 %84, label %94, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 0, i32 5, i32 0, i32 0
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %89, label %94

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 12
  %93 = icmp ne i32 %92, 4
  br label %94

94:                                               ; preds = %89, %85, %81, %72, %78, %75, %68, %58, %58, %58, %58, %58, %58, %58, %58, %58, %58, %58, %58, %58, %58, %48, %41, %5, %62, %61
  %95 = phi i1 [ true, %62 ], [ true, %61 ], [ false, %5 ], [ false, %41 ], [ false, %48 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ false, %58 ], [ true, %68 ], [ false, %75 ], [ true, %78 ], [ true, %72 ], [ true, %85 ], [ %93, %89 ], [ true, %81 ]
  ret i1 %95
}

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink12AXNodeObject24EstimatedLoadingProgressEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %3 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %3, i64 126
  %5 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %4, align 8
  %6 = tail call %"class.blink::Document"* %5(%"class.blink::AXNodeObject"* %0) #15
  %7 = icmp eq %"class.blink::Document"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %10 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %10, i64 40
  %12 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::AXNodeObject"* %0) #15
  br i1 %13, label %25, label %14

14:                                               ; preds = %8
  %15 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %16 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %15, i64 126
  %17 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %16, align 8
  %18 = tail call %"class.blink::Document"* %17(%"class.blink::AXNodeObject"* %0) #15
  %19 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %18) #15
  %20 = icmp eq %"class.blink::LocalFrame"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %19, i64 0, i32 10, i32 1, i32 0, i32 0
  %23 = load %"class.blink::ProgressTracker"*, %"class.blink::ProgressTracker"** %22, align 8
  %24 = tail call double @_ZNK5blink15ProgressTracker17EstimatedProgressEv(%"class.blink::ProgressTracker"* %23) #15
  br label %25

25:                                               ; preds = %1, %8, %14, %21
  %26 = phi double [ %24, %21 ], [ 0.000000e+00, %14 ], [ 0.000000e+00, %1 ], [ 1.000000e+00, %8 ]
  ret double %26
}

declare double @_ZNK5blink15ProgressTracker17EstimatedProgressEv(%"class.blink::ProgressTracker"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink12AXNodeObject13ActionElementEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %39, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %15 = tail call zeroext i1 @_ZNK5blink12AXNodeObject11IsClickableEv(%"class.blink::AXNodeObject"* %0)
  br i1 %15, label %39, label %16

16:                                               ; preds = %8, %13
  %17 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Element"* (%"class.blink::AXNodeObject"*)***
  %18 = load %"class.blink::Element"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Element"* (%"class.blink::AXNodeObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Element"* (%"class.blink::AXNodeObject"*)** %18, i64 127
  %20 = load %"class.blink::Element"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Element"* (%"class.blink::AXNodeObject"*)** %19, align 8
  %21 = tail call %"class.blink::Element"* %20(%"class.blink::AXNodeObject"* %0) #15
  %22 = icmp eq %"class.blink::Element"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::Element"* %21 to i1 (%"class.blink::Element"*)***
  %25 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %25, i64 96
  %27 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Element"* nonnull %21) #15
  br i1 %28, label %31, label %29

29:                                               ; preds = %16, %23
  %30 = tail call %"class.blink::Element"* @_ZNK5blink12AXNodeObject19MouseButtonListenerEv(%"class.blink::AXNodeObject"* %0)
  br label %39

31:                                               ; preds = %23
  %32 = tail call %"class.blink::Element"* @_ZNK5blink12AXNodeObject19MouseButtonListenerEv(%"class.blink::AXNodeObject"* %0)
  %33 = icmp eq %"class.blink::Element"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %32, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %21, i64 0, i32 0, i32 0
  %37 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %35, %"class.blink::Node"* %36) #15
  br i1 %37, label %39, label %38

38:                                               ; preds = %31, %34
  br label %39

39:                                               ; preds = %1, %29, %13, %34, %38, %4
  %40 = phi %"class.blink::Element"* [ null, %4 ], [ %14, %13 ], [ %21, %38 ], [ %32, %34 ], [ %30, %29 ], [ null, %1 ]
  ret %"class.blink::Element"* %40
}

declare zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink12AXNodeObject13AnchorElementEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::AXNodeObject"* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  br label %5

5:                                                ; preds = %3, %10
  %6 = phi %"class.blink::AXObject"* [ %11, %10 ], [ %4, %3 ]
  %7 = tail call zeroext i1 @_ZNK5blink8AXObject6IsLinkEv(%"class.blink::AXObject"* nonnull %6) #15
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* nonnull %6) #15
  br label %13

10:                                               ; preds = %5
  %11 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* nonnull %6) #15
  %12 = icmp eq %"class.blink::AXObject"* %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %10, %1, %8
  %14 = phi %"class.blink::Element"* [ %9, %8 ], [ null, %1 ], [ null, %10 ]
  ret %"class.blink::Element"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZNK5blink12AXNodeObject11GetDocumentEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %18, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %9, label %12, label %10

10:                                               ; preds = %8
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  br label %12

12:                                               ; preds = %8, %10
  %13 = phi %"class.blink::Node"* [ %11, %10 ], [ null, %8 ]
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  br label %18

18:                                               ; preds = %1, %4, %12
  %19 = phi %"class.blink::Document"* [ %17, %12 ], [ null, %4 ], [ null, %1 ]
  ret %"class.blink::Document"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject8LanguageEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.630", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #15
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %1, %6
  %11 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8LanguageEv(%"class.blink::AXObject"* %4) #15
  %12 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  br label %190

13:                                               ; preds = %6
  %14 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %4) #15
  %15 = icmp eq i32 %14, 145
  br i1 %15, label %16, label %187

16:                                               ; preds = %13
  %17 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %18 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %18, i64 126
  %20 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %19, align 8
  %21 = tail call %"class.blink::Document"* %20(%"class.blink::AXNodeObject"* %0) #15
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 47, i32 0, i32 0
  %23 = load %"class.blink::Element"*, %"class.blink::Element"** %22, align 8
  %24 = icmp eq %"class.blink::Element"* %23, null
  br i1 %24, label %25, label %48

25:                                               ; preds = %16
  %26 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %190, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %190

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #15
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !3

45:                                               ; preds = %36
  tail call void @llvm.trap() #15
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %190

48:                                               ; preds = %16
  %49 = tail call %"class.WTF::StringImpl"* @_ZNK5blink7Element24ComputeInheritedLanguageEv(%"class.blink::Element"* nonnull %23) #15
  %50 = bitcast %"class.WTF::Vector.630"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #15
  %51 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %2, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 16, i1 false) #15
  %53 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #15
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %54, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #15
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !3

70:                                               ; preds = %61
  tail call void @llvm.trap() #15
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %48, %56, %71
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nonnull %3, i16 zeroext 44, i1 zeroext false, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %2) #15
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #15
  br label %89

89:                                               ; preds = %73, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #15
  %90 = load i32, i32* %52, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %133, label %92

92:                                               ; preds = %89
  %93 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"* nonnull %2, i32 0) #15
  %94 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %93) #15
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %133, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 acquire, align 4
  %99 = and i32 %98, 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %117, label %101

101:                                              ; preds = %96
  %102 = load atomic i32, i32* %97 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %119

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i33
  %109 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %108, i33 1) #15
  %110 = extractvalue { i33, i1 } %109, 1
  %111 = extractvalue { i33, i1 } %109, 0
  %112 = icmp slt i33 %111, 0
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %115, !prof !3

114:                                              ; preds = %105
  call void @llvm.trap() #15
  unreachable

115:                                              ; preds = %105
  %116 = trunc i33 %111 to i32
  store i32 %116, i32* %106, align 4
  br label %119

117:                                              ; preds = %96
  %118 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %94) #15
  br label %119

119:                                              ; preds = %101, %115, %117
  %120 = phi %"class.WTF::StringImpl"* [ %94, %115 ], [ %94, %101 ], [ %118, %117 ]
  %121 = ptrtoint %"class.WTF::StringImpl"* %120 to i64
  %122 = load atomic i32, i32* %97 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %119
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %119
  %130 = phi i32 [ %128, %127 ], [ %126, %119 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #15
  br label %133

133:                                              ; preds = %92, %132, %129, %89
  %134 = phi i64 [ undef, %89 ], [ %121, %129 ], [ %121, %132 ], [ 0, %92 ]
  %135 = phi i32 [ 0, %89 ], [ 1, %129 ], [ 1, %132 ], [ 1, %92 ]
  %136 = load %"class.WTF::String"*, %"class.WTF::String"** %51, align 8
  %137 = icmp eq %"class.WTF::String"* %136, null
  br i1 %137, label %171, label %138, !prof !5

138:                                              ; preds = %133
  %139 = bitcast %"class.WTF::String"* %136 to i8*
  %140 = load i32, i32* %52, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %169, label %142, !prof !3

142:                                              ; preds = %138
  %143 = zext i32 %140 to i64
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %136, i64 %143
  br label %145

145:                                              ; preds = %163, %142
  %146 = phi %"class.WTF::String"* [ %164, %163 ], [ %136, %142 ]
  %147 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #15
  br label %163

163:                                              ; preds = %162, %159, %145
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %146, i64 1
  %165 = icmp eq %"class.WTF::String"* %164, %144
  br i1 %165, label %166, label %145

166:                                              ; preds = %163
  store i32 0, i32* %52, align 4
  %167 = bitcast %"class.WTF::Vector.630"* %2 to i8**
  %168 = load i8*, i8** %167, align 8
  br label %169

169:                                              ; preds = %166, %138
  %170 = phi i8* [ %168, %166 ], [ %139, %138 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %170) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %51, align 8
  br label %171

171:                                              ; preds = %133, %169
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #15
  br i1 %55, label %185, label %172

172:                                              ; preds = %171
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #15
  br label %185

185:                                              ; preds = %184, %181, %171
  %186 = icmp eq i32 %135, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %185, %13
  %188 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8LanguageEv(%"class.blink::AXObject"* %4) #15
  %189 = ptrtoint %"class.WTF::StringImpl"* %188 to i64
  br label %190

190:                                              ; preds = %46, %31, %25, %185, %187, %10
  %191 = phi i64 [ %12, %10 ], [ %189, %187 ], [ %134, %185 ], [ %29, %25 ], [ %29, %31 ], [ %29, %46 ]
  %192 = inttoptr i64 %191 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %192
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8LanguageEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element24ComputeInheritedLanguageEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject12HasAttributeERKNS_13QualifiedNameE(%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %3) #15
  %5 = icmp eq %"class.blink::Element"* %4, null
  br i1 %5, label %65, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %7, align 8
  %9 = icmp eq %"class.blink::ElementData"* %8, null
  br i1 %9, label %60, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::ElementData"* %8 to %"class.blink::UniqueElementData"*
  %17 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1, i32 1
  %18 = bitcast %"class.blink::Member.354"* %17 to %"class.blink::Attribute"**
  %19 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %16, i64 0, i32 2, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  br label %27

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %8, i64 1
  %24 = bitcast %"class.blink::ElementData"* %23 to %"class.blink::Attribute"*
  %25 = lshr i32 %12, 1
  %26 = and i32 %25, 268435455
  br label %27

27:                                               ; preds = %22, %15
  %28 = phi %"class.blink::Attribute"* [ %24, %22 ], [ %19, %15 ]
  %29 = phi i32 [ %26, %22 ], [ %21, %15 ]
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %28, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %60, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %54, %33
  %39 = phi %"class.blink::Attribute"* [ %28, %33 ], [ %55, %54 ]
  %40 = phi i32 [ 0, %33 ], [ %56, %54 ]
  %41 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %42, %35
  br i1 %43, label %58, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %46, %47
  br i1 %48, label %49, label %54

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, %52
  br i1 %53, label %58, label %54

54:                                               ; preds = %49, %44
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %39, i64 1
  %56 = add i32 %40, 1
  %57 = icmp eq %"class.blink::Attribute"* %55, %31
  br i1 %57, label %60, label %38

58:                                               ; preds = %38, %49
  %59 = icmp eq i32 %40, -1
  br i1 %59, label %60, label %65

60:                                               ; preds = %54, %58, %27, %6
  %61 = tail call zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"* nonnull %4) #15
  br i1 %61, label %62, label %65

62:                                               ; preds = %60
  %63 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* nonnull %4) #15
  %64 = tail call zeroext i1 @_ZNK5blink16ElementInternals12HasAttributeERKNS_13QualifiedNameE(%"class.blink::ElementInternals"* %63, %"class.blink::QualifiedName"* dereferenceable(8) %1) #15
  br label %65

65:                                               ; preds = %58, %62, %60, %2
  %66 = phi i1 [ false, %2 ], [ true, %58 ], [ %64, %62 ], [ false, %60 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject21HasInternalsAttributeERNS_7ElementERKNS_13QualifiedNameE(%"class.blink::AXNodeObject"* nocapture readnone, %"class.blink::Element"* dereferenceable(104), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"* %1) #15
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %1) #15
  %7 = tail call zeroext i1 @_ZNK5blink16ElementInternals12HasAttributeERKNS_13QualifiedNameE(%"class.blink::ElementInternals"* %6, %"class.blink::QualifiedName"* dereferenceable(8) %2) #15
  br label %8

8:                                                ; preds = %3, %5
  %9 = phi i1 [ %7, %5 ], [ false, %3 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject12GetAttributeERKNS_13QualifiedNameE(%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %4 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %3) #15
  %5 = icmp eq %"class.blink::Element"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %76

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %9, align 8
  %11 = icmp eq %"class.blink::ElementData"* %10, null
  br i1 %11, label %62, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::ElementData"* %10 to %"class.blink::UniqueElementData"*
  %19 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 1, i32 1
  %20 = bitcast %"class.blink::Member.354"* %19 to %"class.blink::Attribute"**
  %21 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %18, i64 0, i32 2, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  br label %29

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %10, i64 1
  %26 = bitcast %"class.blink::ElementData"* %25 to %"class.blink::Attribute"*
  %27 = lshr i32 %14, 1
  %28 = and i32 %27, 268435455
  br label %29

29:                                               ; preds = %24, %17
  %30 = phi %"class.blink::Attribute"* [ %26, %24 ], [ %21, %17 ]
  %31 = phi i32 [ %28, %24 ], [ %23, %17 ]
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %30, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %62, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %55, %35
  %41 = phi %"class.blink::Attribute"* [ %30, %35 ], [ %56, %55 ]
  %42 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %42, align 8
  %44 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %43, %37
  br i1 %44, label %58, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %47, %48
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %52, %53
  br i1 %54, label %58, label %55

55:                                               ; preds = %50, %45
  %56 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 1
  %57 = icmp eq %"class.blink::Attribute"* %56, %33
  br i1 %57, label %62, label %40

58:                                               ; preds = %50, %40
  %59 = icmp eq %"class.blink::Attribute"* %41, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %41, i64 0, i32 1
  br label %64

62:                                               ; preds = %55, %58, %29, %8
  %63 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %64

64:                                               ; preds = %60, %62
  %65 = phi %"class.WTF::AtomicString"* [ %63, %62 ], [ %61, %60 ]
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %69, label %76

69:                                               ; preds = %64
  %70 = tail call zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"* nonnull %4) #15
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %76

73:                                               ; preds = %69
  %74 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* nonnull %4) #15
  %75 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ElementInternals16FastGetAttributeERKNS_13QualifiedNameE(%"class.blink::ElementInternals"* %74, %"class.blink::QualifiedName"* dereferenceable(8) %1) #15
  br label %76

76:                                               ; preds = %73, %71, %64, %6
  %77 = phi %"class.WTF::AtomicString"* [ %7, %6 ], [ %65, %64 ], [ %75, %73 ], [ %72, %71 ]
  ret %"class.WTF::AtomicString"* %77
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12AXNodeObject21GetInternalsAttributeERNS_7ElementERKNS_13QualifiedNameE(%"class.blink::AXNodeObject"* nocapture readnone, %"class.blink::Element"* dereferenceable(104), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"* %1) #15
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %10

7:                                                ; preds = %3
  %8 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* %1) #15
  %9 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ElementInternals16FastGetAttributeERKNS_13QualifiedNameE(%"class.blink::ElementInternals"* %8, %"class.blink::QualifiedName"* dereferenceable(8) %2) #15
  br label %10

10:                                               ; preds = %7, %5
  %11 = phi %"class.WTF::AtomicString"* [ %9, %7 ], [ %6, %5 ]
  ret %"class.WTF::AtomicString"* %11
}

declare zeroext i1 @_ZNK5blink7Element18DidAttachInternalsEv(%"class.blink::Element"*) local_unnamed_addr #1

declare dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16ElementInternals12HasAttributeERKNS_13QualifiedNameE(%"class.blink::ElementInternals"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ElementInternals16FastGetAttributeERKNS_13QualifiedNameE(%"class.blink::ElementInternals"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12AXNodeObject19OnNativeFocusActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %3 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %3, i64 126
  %5 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %4, align 8
  %6 = tail call %"class.blink::Document"* %5(%"class.blink::AXNodeObject"* %0) #15
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %7) #15
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp ne %"class.blink::Document"* %6, null
  %13 = icmp ne %"class.blink::Node"* %11, null
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  tail call void @_ZN5blink8Document31UpdateStyleAndLayoutTreeForNodeEPKNS_4NodeE(%"class.blink::Document"* nonnull %6, %"class.blink::Node"* nonnull %11) #15
  br label %16

16:                                               ; preds = %1, %15, %9
  %17 = tail call zeroext i1 @_ZNK5blink8AXObject20CanSetFocusAttributeEv(%"class.blink::AXObject"* %7) #15
  br i1 %17, label %18, label %56

18:                                               ; preds = %16
  %19 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %7) #15
  %20 = icmp eq i32 %19, 145
  br i1 %20, label %21, label %35

21:                                               ; preds = %18
  %22 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %6) #15
  %23 = icmp eq %"class.blink::Page"* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %21
  %25 = tail call zeroext i1 @_ZNK5blink4Page12InsidePortalEv(%"class.blink::Page"* nonnull %22) #15
  br i1 %25, label %34, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %22, i64 0, i32 10, i32 0, i32 0
  %28 = load %"class.blink::FocusController"*, %"class.blink::FocusController"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 47, i32 0, i32 0
  %30 = load %"class.blink::Element"*, %"class.blink::Element"** %29, align 8
  %31 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %6) #15
  %32 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %31, i64 0, i32 0
  %33 = tail call zeroext i1 @_ZN5blink15FocusController17SetFocusedElementEPNS_7ElementEPNS_5FrameE(%"class.blink::FocusController"* %28, %"class.blink::Element"* %30, %"class.blink::Frame"* %32) #15
  br label %56

34:                                               ; preds = %21, %24
  tail call void @_ZN5blink8Document19ClearFocusedElementEv(%"class.blink::Document"* %6) #15
  br label %56

35:                                               ; preds = %18
  %36 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %7) #15
  %37 = icmp eq %"class.blink::Element"* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZN5blink8Document19ClearFocusedElementEv(%"class.blink::Document"* %6) #15
  br label %56

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 43, i32 0, i32 0
  %41 = load %"class.blink::Element"*, %"class.blink::Element"** %40, align 8
  %42 = icmp eq %"class.blink::Element"* %41, %36
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  tail call void @_ZN5blink8Document19ClearFocusedElementEv(%"class.blink::Document"* %6) #15
  %44 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %7) #15
  br i1 %44, label %56, label %45

45:                                               ; preds = %43, %39
  %46 = tail call zeroext i1 @_ZNK5blink12AXNodeObject11IsClickableEv(%"class.blink::AXNodeObject"* %0)
  br i1 %46, label %55, label %47

47:                                               ; preds = %45
  %48 = tail call zeroext i1 @_ZNK5blink8AXObject21CanBeActiveDescendantEv(%"class.blink::AXObject"* %7) #15
  br i1 %48, label %49, label %55

49:                                               ; preds = %47
  %50 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXObject"*)***
  %51 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %51, i64 148
  %53 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::AXObject"* %7) #15
  br label %56

55:                                               ; preds = %47, %45
  tail call void @_ZN5blink7Element5focusEv(%"class.blink::Element"* nonnull %36) #15
  br label %56

56:                                               ; preds = %38, %49, %55, %43, %26, %34, %16
  %57 = phi i1 [ false, %16 ], [ true, %34 ], [ true, %26 ], [ true, %55 ], [ %54, %49 ], [ true, %38 ], [ false, %43 ]
  ret i1 %57
}

declare void @_ZN5blink8Document31UpdateStyleAndLayoutTreeForNodeEPKNS_4NodeE(%"class.blink::Document"*, %"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink15FocusController17SetFocusedElementEPNS_7ElementEPNS_5FrameE(%"class.blink::FocusController"*, %"class.blink::Element"*, %"class.blink::Frame"*) local_unnamed_addr #1

declare void @_ZN5blink8Document19ClearFocusedElementEv(%"class.blink::Document"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject21CanBeActiveDescendantEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare void @_ZN5blink7Element5focusEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12AXNodeObject23OnNativeIncrementActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %3 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %3, i64 126
  %5 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %4, align 8
  %6 = tail call %"class.blink::Document"* %5(%"class.blink::AXNodeObject"* %0) #15
  %7 = icmp eq %"class.blink::Document"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %9, i64 126
  %11 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %10, align 8
  %12 = tail call %"class.blink::Document"* %11(%"class.blink::AXNodeObject"* %0) #15
  %13 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %12) #15
  br label %14

14:                                               ; preds = %1, %8
  %15 = phi %"class.blink::LocalFrame"* [ %13, %8 ], [ null, %1 ]
  tail call void @_ZN5blink10LocalFrame20NotifyUserActivationEPS0_NS_5mojom30UserActivationNotificationTypeEb(%"class.blink::LocalFrame"* %15, i32 1, i1 zeroext false) #15
  tail call void @_ZN5blink12AXNodeObject28AlterSliderOrSpinButtonValueEb(%"class.blink::AXNodeObject"* %0, i1 zeroext true)
  ret i1 true
}

declare void @_ZN5blink10LocalFrame20NotifyUserActivationEPS0_NS_5mojom30UserActivationNotificationTypeEb(%"class.blink::LocalFrame"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12AXNodeObject23OnNativeDecrementActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %3 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %3, i64 126
  %5 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %4, align 8
  %6 = tail call %"class.blink::Document"* %5(%"class.blink::AXNodeObject"* %0) #15
  %7 = icmp eq %"class.blink::Document"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %9, i64 126
  %11 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %10, align 8
  %12 = tail call %"class.blink::Document"* %11(%"class.blink::AXNodeObject"* %0) #15
  %13 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %12) #15
  br label %14

14:                                               ; preds = %1, %8
  %15 = phi %"class.blink::LocalFrame"* [ %13, %8 ], [ null, %1 ]
  tail call void @_ZN5blink10LocalFrame20NotifyUserActivationEPS0_NS_5mojom30UserActivationNotificationTypeEb(%"class.blink::LocalFrame"* %15, i32 1, i1 zeroext false) #15
  tail call void @_ZN5blink12AXNodeObject28AlterSliderOrSpinButtonValueEb(%"class.blink::AXNodeObject"* %0, i1 zeroext false)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12AXNodeObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %19, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %10 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %10, i64 126
  %12 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %11, align 8
  %13 = tail call %"class.blink::Document"* %12(%"class.blink::AXNodeObject"* %0) #15
  tail call void @_ZN5blink8Document19ClearFocusedElementEv(%"class.blink::Document"* %13) #15
  %14 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  br label %17

17:                                               ; preds = %8, %15
  %18 = phi %"class.blink::Node"* [ %16, %15 ], [ null, %8 ]
  tail call void @_ZN5blink8Document41SetSequentialFocusNavigationStartingPointEPNS_4NodeE(%"class.blink::Document"* %13, %"class.blink::Node"* %18) #15
  br label %19

19:                                               ; preds = %1, %4, %17
  %20 = phi i1 [ true, %17 ], [ false, %4 ], [ false, %1 ]
  ret i1 %20
}

declare void @_ZN5blink8Document41SetSequentialFocusNavigationStartingPointEPNS_4NodeE(%"class.blink::Document"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject15ChildrenChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %1, %4
  %9 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %10 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %10, i64 125
  %12 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %11, align 8
  %13 = tail call %"class.blink::LayoutObject"* %12(%"class.blink::AXObject"* %2) #15
  %14 = icmp eq %"class.blink::LayoutObject"* %13, null
  br i1 %14, label %70, label %15

15:                                               ; preds = %8, %4
  %16 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %16, label %53, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %53, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 48
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %53

26:                                               ; preds = %21
  %27 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kMapTagE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 1, i32 2
  %31 = bitcast %"class.blink::Member.318"* %30 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %34, %36
  br i1 %37, label %38, label %53

38:                                               ; preds = %26
  %39 = bitcast %"class.blink::Node"* %19 to %"class.blink::HTMLMapElement"*
  %40 = tail call %"class.blink::HTMLImageElement"* @_ZN5blink14HTMLMapElement12ImageElementEv(%"class.blink::HTMLMapElement"* nonnull %39) #15
  %41 = icmp eq %"class.blink::HTMLImageElement"* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %44 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLImageElement", %"class.blink::HTMLImageElement"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl3GetEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %44, %"class.blink::Node"* %45) #15
  %47 = icmp eq %"class.blink::AXObject"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.blink::AXObject"* %46 to void (%"class.blink::AXObject"*)***
  %50 = load void (%"class.blink::AXObject"*)**, void (%"class.blink::AXObject"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %50, i64 154
  %52 = load void (%"class.blink::AXObject"*)*, void (%"class.blink::AXObject"*)** %51, align 8
  tail call void %52(%"class.blink::AXObject"* nonnull %46) #15
  br label %70

53:                                               ; preds = %26, %42, %38, %15, %17, %21
  tail call void @_ZNK5blink8AXObject24SetNeedsToUpdateChildrenEv(%"class.blink::AXObject"* %2) #15
  %54 = tail call zeroext i1 @_ZNK5blink8AXObject30LastKnownIsIncludedInTreeValueEv(%"class.blink::AXObject"* %2) #15
  br i1 %54, label %59, label %55

55:                                               ; preds = %53
  %56 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"* %2) #15
  %57 = icmp eq %"class.blink::AXObject"* %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @_ZNK5blink8AXObject24SetNeedsToUpdateChildrenEv(%"class.blink::AXObject"* nonnull %56) #15
  br label %59

59:                                               ; preds = %58, %55, %53
  %60 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %61 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %60, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %61, i64 119
  %63 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::AXNodeObject"* %0) #15
  br i1 %64, label %65, label %70

65:                                               ; preds = %59
  %66 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %66, label %70, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %69 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %68, align 8
  tail call void @_ZN5blink17AXObjectCacheImpl16PostNotificationEPNS_8AXObjectEN2ax5mojom5EventE(%"class.blink::AXObjectCacheImpl"* %69, %"class.blink::AXObject"* %2, i32 7) #15
  br label %70

70:                                               ; preds = %48, %8, %65, %59, %67
  ret void
}

declare void @_ZNK5blink8AXObject24SetNeedsToUpdateChildrenEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject26ParentObjectIncludedInTreeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare void @_ZN5blink17AXObjectCacheImpl16PostNotificationEPNS_8AXObjectEN2ax5mojom5EventE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObject"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12AXNodeObject15SelectedOptionsERNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, %"class.blink::HeapVector.2999"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AXObject"*, align 8
  %4 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #15
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %71, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %71

15:                                               ; preds = %10
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.318"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  br i1 %26, label %27, label %71

27:                                               ; preds = %15
  %28 = bitcast %"class.blink::Node"* %8 to %"class.blink::HTMLSelectElement"*
  %29 = tail call %"class.blink::HTMLCollection"* @_ZN5blink17HTMLSelectElement15selectedOptionsEv(%"class.blink::HTMLSelectElement"* nonnull %28) #15
  %30 = tail call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %29) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %148, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.blink::AXObject"** %3 to i8*
  %34 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %36 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %1, i64 0, i32 0
  br label %39

39:                                               ; preds = %32, %65
  %40 = phi i32 [ 0, %32 ], [ %69, %65 ]
  %41 = call %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"* %29, i32 %40) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %3, align 8
  %42 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %34, align 8
  %43 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %41, i64 0, i32 0, i32 0
  %44 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %42, %"class.blink::Node"* %43) #15
  store %"class.blink::AXObject"* %44, %"class.blink::AXObject"** %3, align 8
  %45 = icmp eq %"class.blink::AXObject"* %44, null
  %46 = ptrtoint %"class.blink::AXObject"* %44 to i64
  br i1 %45, label %65, label %47

47:                                               ; preds = %39
  %48 = load i32, i32* %35, align 4
  %49 = load i32, i32* %36, align 8
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %64, label %51, !prof !3

51:                                               ; preds = %47
  %52 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %37, align 8
  %53 = zext i32 %48 to i64
  %54 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %52, i64 %53
  %55 = bitcast %"class.blink::Member.2997"* %54 to i64*
  store atomic i64 %46, i64* %55 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %51
  %59 = bitcast %"class.blink::AXObject"* %44 to i8*
  %60 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %59) #15
  br label %61

61:                                               ; preds = %58, %51
  %62 = load i32, i32* %35, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %35, align 4
  br label %65

64:                                               ; preds = %47
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3002"* %38, %"class.blink::AXObject"** nonnull dereferenceable(8) %3) #15
  br label %65

65:                                               ; preds = %64, %61, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %66 = call i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"* %29) #15
  %67 = icmp ult i32 %40, %66
  %68 = zext i1 %67 to i32
  %69 = add nuw i32 %40, %68
  %70 = icmp eq i32 %69, %30
  br i1 %70, label %148, label %39

71:                                               ; preds = %15, %2, %6, %10
  %72 = tail call dereferenceable(16) %"class.blink::HeapVector.2999"* @_ZNK5blink8AXObject24ChildrenIncludingIgnoredEv(%"class.blink::AXObject"* %4) #15
  %73 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %4) #15
  %74 = icmp eq i32 %73, 21
  br i1 %74, label %78, label %75

75:                                               ; preds = %71
  %76 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %4) #15
  %77 = icmp eq i32 %76, 22
  br i1 %77, label %78, label %102

78:                                               ; preds = %75, %71
  %79 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %72, i64 0, i32 0, i32 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %80, i64 %83
  %85 = icmp eq i32 %82, 0
  br i1 %85, label %102, label %88

86:                                               ; preds = %88
  %87 = icmp eq %"class.blink::Member.2997"* %94, %84
  br i1 %87, label %102, label %88

88:                                               ; preds = %78, %86
  %89 = phi %"class.blink::Member.2997"* [ %94, %86 ], [ %80, %78 ]
  %90 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %90, align 8
  %92 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %91) #15
  %93 = icmp eq i32 %92, 113
  %94 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %89, i64 1
  br i1 %93, label %95, label %86

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %89, i64 0, i32 0, i32 0
  %97 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %96, align 8
  %98 = bitcast %"class.blink::AXObject"* %97 to void (%"class.blink::AXObject"*, %"class.blink::HeapVector.2999"*)***
  %99 = load void (%"class.blink::AXObject"*, %"class.blink::HeapVector.2999"*)**, void (%"class.blink::AXObject"*, %"class.blink::HeapVector.2999"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::HeapVector.2999"*)*, void (%"class.blink::AXObject"*, %"class.blink::HeapVector.2999"*)** %99, i64 121
  %101 = load void (%"class.blink::AXObject"*, %"class.blink::HeapVector.2999"*)*, void (%"class.blink::AXObject"*, %"class.blink::HeapVector.2999"*)** %100, align 8
  tail call void %101(%"class.blink::AXObject"* %97, %"class.blink::HeapVector.2999"* dereferenceable(16) %1) #15
  br label %148

102:                                              ; preds = %86, %78, %75
  %103 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %72, i64 0, i32 0, i32 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %104, i64 %107
  %109 = icmp eq i32 %106, 0
  br i1 %109, label %148, label %110

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %112 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %113 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %1, i64 0, i32 0
  br label %115

115:                                              ; preds = %110, %145
  %116 = phi %"class.blink::Member.2997"* [ %104, %110 ], [ %146, %145 ]
  %117 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %116, i64 0, i32 0, i32 0
  %118 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %117, align 8
  %119 = bitcast %"class.blink::AXObject"* %118 to i32 (%"class.blink::AXObject"*)***
  %120 = load i32 (%"class.blink::AXObject"*)**, i32 (%"class.blink::AXObject"*)*** %119, align 8
  %121 = getelementptr inbounds i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %120, i64 45
  %122 = load i32 (%"class.blink::AXObject"*)*, i32 (%"class.blink::AXObject"*)** %121, align 8
  %123 = tail call i32 %122(%"class.blink::AXObject"* %118) #15
  %124 = icmp eq i32 %123, 2
  br i1 %124, label %125, label %145

125:                                              ; preds = %115
  %126 = load i32, i32* %111, align 4
  %127 = load i32, i32* %112, align 8
  %128 = icmp eq i32 %126, %127
  br i1 %128, label %144, label %129, !prof !3

129:                                              ; preds = %125
  %130 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %113, align 8
  %131 = zext i32 %126 to i64
  %132 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %130, i64 %131
  %133 = bitcast %"class.blink::Member.2997"* %116 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.blink::Member.2997"* %132 to i64*
  store atomic i64 %134, i64* %135 monotonic, align 8
  %136 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %129
  %139 = inttoptr i64 %134 to i8*
  %140 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %139) #15
  br label %141

141:                                              ; preds = %138, %129
  %142 = load i32, i32* %111, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %111, align 4
  br label %145

144:                                              ; preds = %125
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.3002"* %114, %"class.blink::Member.2997"* dereferenceable(8) %116) #15
  br label %145

145:                                              ; preds = %144, %141, %115
  %146 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %116, i64 1
  %147 = icmp eq %"class.blink::Member.2997"* %146, %108
  br i1 %147, label %148, label %115

148:                                              ; preds = %65, %145, %27, %102, %95
  ret void
}

declare %"class.blink::HTMLCollection"* @_ZN5blink17HTMLSelectElement15selectedOptionsEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject16SelectionChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AXNodeObject"* %0 to i1 (%"class.blink::AXNodeObject"*)***
  %3 = load i1 (%"class.blink::AXNodeObject"*)**, i1 (%"class.blink::AXNodeObject"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %3, i64 35
  %5 = load i1 (%"class.blink::AXNodeObject"*)*, i1 (%"class.blink::AXNodeObject"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::AXNodeObject"* %0) #15
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %9 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %8) #15
  %10 = icmp eq i32 %9, 145
  br i1 %10, label %11, label %30

11:                                               ; preds = %7, %1
  %12 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %14 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %13, align 8
  tail call void @_ZN5blink17AXObjectCacheImpl16PostNotificationEPNS_8AXObjectEN2ax5mojom5EventE(%"class.blink::AXObjectCacheImpl"* %14, %"class.blink::AXObject"* %12, i32 51) #15
  %15 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %16 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %16, i64 126
  %18 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %17, align 8
  %19 = tail call %"class.blink::Document"* %18(%"class.blink::AXNodeObject"* %0) #15
  %20 = icmp eq %"class.blink::Document"* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %11
  %22 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %13, align 8
  %23 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %15, align 8
  %24 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %23, i64 126
  %25 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %24, align 8
  %26 = tail call %"class.blink::Document"* %25(%"class.blink::AXNodeObject"* %0) #15
  %27 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %26, i64 0, i32 0, i32 0
  %28 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %22, %"class.blink::Node"* %27) #15
  %29 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %13, align 8
  tail call void @_ZN5blink17AXObjectCacheImpl16PostNotificationEPNS_8AXObjectEN2ax5mojom5EventE(%"class.blink::AXObjectCacheImpl"* %29, %"class.blink::AXObject"* %28, i32 10) #15
  br label %31

30:                                               ; preds = %7
  tail call void @_ZN5blink8AXObject16SelectionChangedEv(%"class.blink::AXObject"* %8) #15
  br label %31

31:                                               ; preds = %11, %21, %30
  ret void
}

declare void @_ZN5blink8AXObject16SelectionChangedEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject25HandleAriaExpandedChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %2) #15
  %4 = icmp eq %"class.blink::AXObject"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1, %8
  %6 = phi %"class.blink::AXObject"* [ %9, %8 ], [ %3, %1 ]
  %7 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %6) #15
  switch i32 %7, label %8 [
    i32 106, label %11
    i32 179, label %11
    i32 180, label %11
    i32 93, label %11
    i32 168, label %11
  ]

8:                                                ; preds = %5
  %9 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* nonnull %6) #15
  %10 = icmp eq %"class.blink::AXObject"* %9, null
  br i1 %10, label %14, label %5

11:                                               ; preds = %5, %5, %5, %5, %5
  %12 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %13 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %12, align 8
  tail call void @_ZN5blink17AXObjectCacheImpl16PostNotificationEPNS_8AXObjectEN2ax5mojom5EventE(%"class.blink::AXObjectCacheImpl"* %13, %"class.blink::AXObject"* nonnull %6, i32 40) #15
  br label %14

14:                                               ; preds = %8, %1, %11
  %15 = bitcast %"class.blink::AXNodeObject"* %0 to i32 (%"class.blink::AXNodeObject"*)***
  %16 = load i32 (%"class.blink::AXNodeObject"*)**, i32 (%"class.blink::AXNodeObject"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %16, i64 34
  %18 = load i32 (%"class.blink::AXNodeObject"*)*, i32 (%"class.blink::AXNodeObject"*)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::AXNodeObject"* %0) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %34, label %21

21:                                               ; preds = %14
  %22 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #15
  %23 = icmp eq i32 %22, 146
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #15
  %26 = icmp eq i32 %25, 181
  br i1 %26, label %27, label %30

27:                                               ; preds = %24, %21
  %28 = icmp eq i32 %19, 1
  %29 = select i1 %28, i32 39, i32 41
  br label %30

30:                                               ; preds = %24, %27
  %31 = phi i32 [ %29, %27 ], [ 13, %24 ]
  %32 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %33 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %32, align 8
  tail call void @_ZN5blink17AXObjectCacheImpl16PostNotificationEPNS_8AXObjectEN2ax5mojom5EventE(%"class.blink::AXObjectCacheImpl"* %33, %"class.blink::AXObject"* %2, i32 %31) #15
  br label %34

34:                                               ; preds = %30, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AXNodeObject29HandleActiveDescendantChangedEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %4 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %4, i64 125
  %6 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObject"* %6(%"class.blink::AXObject"* %2) #15
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %60, label %9

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %10, label %60, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %60, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::Document"* (%"class.blink::AXNodeObject"*)***
  %17 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %17, i64 126
  %19 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %18, align 8
  %20 = tail call %"class.blink::Document"* %19(%"class.blink::AXNodeObject"* %0) #15
  %21 = icmp eq %"class.blink::Document"* %20, null
  br i1 %21, label %60, label %22

22:                                               ; preds = %15
  %23 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)**, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*** %16, align 8
  %24 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %23, i64 126
  %25 = load %"class.blink::Document"* (%"class.blink::AXNodeObject"*)*, %"class.blink::Document"* (%"class.blink::AXNodeObject"*)** %24, align 8
  %26 = tail call %"class.blink::Document"* %25(%"class.blink::AXNodeObject"* %0) #15
  %27 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %26, i64 0, i32 43, i32 0, i32 0
  %28 = load %"class.blink::Element"*, %"class.blink::Element"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %28, i64 0, i32 0, i32 0
  %30 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  br label %33

33:                                               ; preds = %22, %31
  %34 = phi %"class.blink::Node"* [ %32, %31 ], [ null, %22 ]
  %35 = icmp eq %"class.blink::Node"* %29, %34
  br i1 %35, label %36, label %60

36:                                               ; preds = %33
  %37 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)***
  %38 = load %"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)** %38, i64 103
  %40 = load %"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXNodeObject"*)** %39, align 8
  %41 = tail call %"class.blink::AXObject"* %40(%"class.blink::AXNodeObject"* %0) #15
  %42 = icmp eq %"class.blink::AXObject"* %41, null
  br i1 %42, label %57, label %43

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::AXObject"* %41 to i1 (%"class.blink::AXObject"*)***
  %45 = load i1 (%"class.blink::AXObject"*)**, i1 (%"class.blink::AXObject"*)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %45, i64 46
  %47 = load i1 (%"class.blink::AXObject"*)*, i1 (%"class.blink::AXObject"*)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::AXObject"* nonnull %41) #15
  br i1 %48, label %49, label %57

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %51 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %50, align 8
  %52 = bitcast %"class.blink::AXObject"* %41 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %53 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %52, align 8
  %54 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %53, i64 124
  %55 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %54, align 8
  %56 = tail call %"class.blink::Node"* %55(%"class.blink::AXObject"* nonnull %41) #15
  tail call void @_ZN5blink17AXObjectCacheImpl40HandleAriaSelectedChangedWithCleanLayoutEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %51, %"class.blink::Node"* %56) #15
  br label %57

57:                                               ; preds = %36, %49, %43
  %58 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %59 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %58, align 8
  tail call void @_ZN5blink17AXObjectCacheImpl32MarkAXObjectDirtyWithCleanLayoutEPNS_8AXObjectEbN2ax5mojom6ActionE(%"class.blink::AXObjectCacheImpl"* %59, %"class.blink::AXObject"* %2, i1 zeroext false, i32 0) #15
  br label %60

60:                                               ; preds = %9, %33, %57, %15, %11, %1
  ret void
}

declare void @_ZN5blink17AXObjectCacheImpl40HandleAriaSelectedChangedWithCleanLayoutEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink17AXObjectCacheImpl32MarkAXObjectDirtyWithCleanLayoutEPNS_8AXObjectEbN2ax5mojom6ActionE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObject"*, i1 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink12AXNodeObject12ErrorMessageEv(%"class.blink::AXNodeObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_19AOMRelationPropertyE(%"class.blink::AXObject"* %2, i32 1) #15
  %4 = icmp eq %"class.blink::Element"* %3, null
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %5, align 8
  br i1 %4, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %3, i64 0, i32 0, i32 0
  %9 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %6, %"class.blink::Node"* %8) #15
  br label %16

10:                                               ; preds = %1
  %11 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl13FocusedObjectEv(%"class.blink::AXObjectCacheImpl"* %6) #15
  %12 = icmp eq %"class.blink::AXObject"* %2, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %5, align 8
  %15 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl32ValidationMessageObjectIfInvalidEb(%"class.blink::AXObjectCacheImpl"* %14, i1 zeroext true) #15
  br label %16

16:                                               ; preds = %10, %13, %7
  %17 = phi %"class.blink::AXObject"* [ %9, %7 ], [ %15, %13 ], [ null, %10 ]
  ret %"class.blink::AXObject"* %17
}

declare zeroext i1 @_ZN5blink17AXObjectCacheImpl16MayHaveHTMLLabelERKNS_11HTMLElementE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::HTMLElement"* dereferenceable(104)) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink12LiveNodeList4itemEj(%"class.blink::LiveNodeList"*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject16TextFromElementsEbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERNS_10HeapVectorINS2_INS_7ElementEEELj0EEEPNSC_INS2_INS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXObject"*, i1 zeroext, %"class.blink::HeapHashSet.3867"* dereferenceable(24), %"class.blink::HeapVector.365"* dereferenceable(16), %"class.blink::HeapVector.3879"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink16HTMLInputElement19ValueOrDefaultLabelEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject30PlaceholderFromNativeAttributeEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %3, label %23, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 12
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %8
  %14 = bitcast %"class.blink::Node"* %6 to %"class.blink::Element"*
  %15 = bitcast %"class.blink::Node"* %6 to i1 (%"class.blink::Element"*)***
  %16 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %16, i64 126
  %18 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::Element"* nonnull %14) #15
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::Node"* %6 to %"class.blink::TextControlElement"*
  %22 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement19StrippedPlaceholderEv(%"class.blink::TextControlElement"* nonnull %21) #15
  br label %23

23:                                               ; preds = %8, %1, %13, %4, %20
  %24 = phi %"class.WTF::StringImpl"* [ %22, %20 ], [ null, %4 ], [ null, %13 ], [ null, %1 ], [ null, %8 ]
  ret %"class.WTF::StringImpl"* %24
}

declare %"class.blink::HTMLInputElement"* @_ZNK5blink16HTMLInputElement12UploadButtonEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEE(%"class.blink::AXObject"* dereferenceable(120), i1 zeroext, %"class.blink::HeapHashSet.3867"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.blink::HTMLLegendElement"* @_ZNK5blink19HTMLFieldSetElement6LegendEv(%"class.blink::HTMLFieldSetElement"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink14AccessibleNode26GetPropertyOrARIAAttributeEPNS_7ElementENS_17AOMStringPropertyE(%"class.blink::Element"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector.2999"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HeapVector.3879", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::StringAppend.3878", align 8
  %10 = bitcast %"class.blink::HeapVector.3879"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #15
  %13 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %15 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.3995"*, %"class.blink::HeapVector.3879"*)***
  %16 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.3995"*, %"class.blink::HeapVector.3879"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.3995"*, %"class.blink::HeapVector.3879"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.3995"*, %"class.blink::HeapVector.3879"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.3995"*, %"class.blink::HeapVector.3879"*)** %16, i64 55
  %18 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.3995"*, %"class.blink::HeapVector.3879"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, i32, i32*, %"class.blink::HeapVector.3995"*, %"class.blink::HeapVector.3879"*)** %17, align 8
  %19 = call %"class.WTF::StringImpl"* %18(%"class.blink::AXNodeObject"* %0, i32 %1, i32* dereferenceable(4) %2, %"class.blink::HeapVector.3995"* null, %"class.blink::HeapVector.3879"* nonnull %5) #15
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %14, align 8
  %20 = icmp eq %"class.blink::HeapVector.2999"* %3, null
  br i1 %20, label %74, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %3, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %38, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  %30 = bitcast %"class.blink::HeapVector.2999"* %3 to i8**
  br i1 %29, label %35, label %31

31:                                               ; preds = %26
  %32 = load i8*, i8** %30, align 8
  %33 = zext i32 %28 to i64
  %34 = shl nuw nsw i64 %33, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %32, i64 %34) #15
  store i32 0, i32* %27, align 4
  br label %35

35:                                               ; preds = %31, %26
  %36 = load i8*, i8** %30, align 8
  %37 = bitcast %"class.blink::HeapVector.2999"* %3 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  store i32 0, i32* %23, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %36) #15
  br label %38

38:                                               ; preds = %21, %35
  %39 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %11, align 8
  %40 = load i32, i32* %12, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %39, i64 %41
  %43 = icmp eq i32 %40, 0
  br i1 %43, label %74, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %47

47:                                               ; preds = %44, %71
  %48 = phi %"class.blink::Member.3885"* [ %39, %44 ], [ %72, %71 ]
  %49 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::NameSourceRelatedObject"*, %"class.blink::NameSourceRelatedObject"** %49, align 8
  %51 = load i32, i32* %45, align 4
  %52 = load i32, i32* %23, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %69, label %54, !prof !3

54:                                               ; preds = %47
  %55 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %46, align 8
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %55, i64 %56
  %58 = bitcast %"class.blink::NameSourceRelatedObject"* %50 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.blink::Member.2997"* %57 to i64*
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %54
  %64 = inttoptr i64 %59 to i8*
  %65 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %64) #15
  br label %66

66:                                               ; preds = %63, %54
  %67 = load i32, i32* %45, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %45, align 4
  br label %71

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"class.blink::NameSourceRelatedObject", %"class.blink::NameSourceRelatedObject"* %50, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10WeakMemberIS3_EEEEvOT_(%"class.WTF::Vector.3002"* %22, %"class.blink::WeakMember.3043"* dereferenceable(8) %70) #15
  br label %71

71:                                               ; preds = %66, %69
  %72 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %48, i64 1
  %73 = icmp eq %"class.blink::Member.3885"* %72, %42
  br i1 %73, label %74, label %47

74:                                               ; preds = %71, %38, %4
  %75 = call %"class.WTF::StringImpl"* @_ZN5blink8AXObject18CollapseWhitespaceERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %6) #15
  %76 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %77 = bitcast %"class.WTF::String"* %6 to i64*
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  store i64 %76, i64* %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #15
  br label %93

93:                                               ; preds = %92, %89, %74
  %94 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %95 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %94) #15
  %96 = icmp eq i32 %95, 157
  br i1 %96, label %97, label %309

97:                                               ; preds = %93
  %98 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject16DatetimeAncestorEi(%"class.blink::AXObject"* %94, i32 3) #15
  %99 = icmp eq %"class.blink::AXObject"* %98, null
  br i1 %99, label %309, label %100

100:                                              ; preds = %97
  %101 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject16DatetimeAncestorEi(%"class.blink::AXObject"* %94, i32 3) #15
  %102 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #15
  store i32 -1431655766, i32* %7, align 4
  %103 = bitcast %"class.blink::AXObject"* %101 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)***
  %104 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)*** %103, align 8
  %105 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)** %104, i64 53
  %106 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32*, %"class.blink::HeapVector.2999"*)** %105, align 8
  %107 = call %"class.WTF::StringImpl"* %106(%"class.blink::AXObject"* %101, i32* nonnull dereferenceable(4) %7, %"class.blink::HeapVector.2999"* null) #15
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #15
  br label %122

122:                                              ; preds = %100, %118, %121
  %123 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %138, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.blink::HeapVector.2999", %"class.blink::HeapVector.2999"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  %130 = bitcast %"class.blink::HeapVector.2999"* %3 to i8**
  br i1 %129, label %135, label %131

131:                                              ; preds = %126
  %132 = load i8*, i8** %130, align 8
  %133 = zext i32 %128 to i64
  %134 = shl nuw nsw i64 %133, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %132, i64 %134) #15
  store i32 0, i32* %127, align 4
  br label %135

135:                                              ; preds = %131, %126
  %136 = load i8*, i8** %130, align 8
  %137 = bitcast %"class.blink::HeapVector.2999"* %3 to i64*
  store atomic i64 0, i64* %137 monotonic, align 8
  store i32 0, i32* %123, align 8
  call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %136) #15
  br label %138

138:                                              ; preds = %122, %135
  %139 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject16DatetimeAncestorEi(%"class.blink::AXObject"* %94, i32 3) #15
  %140 = load i32, i32* %7, align 4
  %141 = bitcast %"class.blink::AXObject"* %139 to %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.2999"*)***
  %142 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.2999"*)**, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.2999"*)*** %141, align 8
  %143 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.2999"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.2999"*)** %142, i64 54
  %144 = load %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.2999"*)*, %"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.2999"*)** %143, align 8
  %145 = call %"class.WTF::StringImpl"* %144(%"class.blink::AXObject"* %139, i32 %140, i32* dereferenceable(4) %2, %"class.blink::HeapVector.2999"* %3) #15
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %288, label %148

148:                                              ; preds = %138
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %288, label %152

152:                                              ; preds = %148
  %153 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %153, label %308, label %154

154:                                              ; preds = %152
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %295, label %158

158:                                              ; preds = %154
  %159 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #15
  %160 = bitcast %"class.WTF::StringAppend.3878"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #15
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %177

167:                                              ; preds = %158
  %168 = zext i32 %166 to i33
  %169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #15
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !3

174:                                              ; preds = %167
  call void @llvm.trap() #15
  unreachable

175:                                              ; preds = %167
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %165, align 4
  br label %177

177:                                              ; preds = %158, %175
  %178 = phi i32 [ %176, %175 ], [ %166, %158 ]
  %179 = load atomic i32, i32* %161 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  br i1 %181, label %183, label %193

183:                                              ; preds = %177
  %184 = zext i32 %178 to i33
  %185 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %184, i33 1) #15
  %186 = extractvalue { i33, i1 } %185, 1
  %187 = extractvalue { i33, i1 } %185, 0
  %188 = icmp slt i33 %187, 0
  %189 = or i1 %186, %188
  br i1 %189, label %190, label %191, !prof !3

190:                                              ; preds = %183
  call void @llvm.trap() #15
  unreachable

191:                                              ; preds = %183
  %192 = trunc i33 %187 to i32
  store i32 %192, i32* %182, align 4
  br label %193

193:                                              ; preds = %191, %177
  %194 = phi i32 [ %192, %191 ], [ %178, %177 ]
  %195 = load atomic i32, i32* %161 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %193
  %199 = add i32 %194, -1
  store i32 %199, i32* %182, align 4
  br label %200

200:                                              ; preds = %198, %193
  %201 = phi i32 [ %199, %198 ], [ %194, %193 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #15
  br label %204

204:                                              ; preds = %203, %200
  %205 = getelementptr inbounds %"class.WTF::StringAppend.3878", %"class.WTF::StringAppend.3878"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %146, %"class.WTF::StringImpl"** %205, align 8
  %206 = getelementptr inbounds %"class.WTF::StringAppend.3878", %"class.WTF::StringAppend.3878"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0), i8** %206, align 8
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %223

211:                                              ; preds = %204
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = zext i32 %213 to i33
  %215 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %214, i33 1) #15
  %216 = extractvalue { i33, i1 } %215, 1
  %217 = extractvalue { i33, i1 } %215, 0
  %218 = icmp slt i33 %217, 0
  %219 = or i1 %216, %218
  br i1 %219, label %220, label %221, !prof !3

220:                                              ; preds = %211
  call void @llvm.trap() #15
  unreachable

221:                                              ; preds = %211
  %222 = trunc i33 %217 to i32
  store i32 %222, i32* %212, align 4
  br label %223

223:                                              ; preds = %204, %221
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %8, %"class.WTF::StringAppend.3878"* nonnull dereferenceable(16) %9, %"class.WTF::StringImpl"* nonnull %145)
  %224 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %225 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #15
  br label %241

241:                                              ; preds = %240, %237, %223
  %242 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #15
  br label %258

258:                                              ; preds = %241, %254, %257
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %274, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #15
  br label %274

274:                                              ; preds = %273, %270, %258
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #15
  %275 = load atomic i32, i32* %207 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %274
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %274
  %283 = phi i32 [ %281, %280 ], [ %279, %274 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #15
  br label %286

286:                                              ; preds = %282, %285
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #15
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  br label %311

288:                                              ; preds = %138, %148
  %289 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %289, label %308, label %290

290:                                              ; preds = %288
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 1
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #15
  br label %311

295:                                              ; preds = %154, %290
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #15
  br label %308

308:                                              ; preds = %288, %152, %304, %307
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #15
  br label %309

309:                                              ; preds = %93, %97, %308
  %310 = load i64, i64* %77, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  br label %329

311:                                              ; preds = %286, %294
  %312 = phi %"class.WTF::StringImpl"* [ %287, %286 ], [ %146, %294 ]
  %313 = phi %"class.WTF::StringImpl"* [ %224, %286 ], [ %145, %294 ]
  %314 = ptrtoint %"class.WTF::StringImpl"* %313 to i64
  %315 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %315, label %329, label %316

316:                                              ; preds = %311
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = load atomic i32, i32* %317 monotonic, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %322 = load i32, i32* %321, align 4
  br i1 %320, label %323, label %325

323:                                              ; preds = %316
  %324 = add i32 %322, -1
  store i32 %324, i32* %321, align 4
  br label %325

325:                                              ; preds = %323, %316
  %326 = phi i32 [ %324, %323 ], [ %322, %316 ]
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %325
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #15
  br label %329

329:                                              ; preds = %309, %311, %325, %328
  %330 = phi i64 [ %310, %309 ], [ %314, %311 ], [ %314, %325 ], [ %314, %328 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  %331 = inttoptr i64 %330 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %331
}

declare %"class.WTF::StringImpl"* @_ZN5blink8AXObject18CollapseWhitespaceERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXNodeObject"*, i32, i32* nocapture dereferenceable(4), %"class.blink::HeapVector.3995"*, %"class.blink::HeapVector.3879"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::DescriptionSource", align 8
  %8 = alloca %"class.WTF::Vector.630", align 8
  %9 = alloca %"class.blink::HeapVector.365", align 8
  %10 = alloca %"class.blink::HeapHashSet.3867", align 8
  %11 = alloca %"class.blink::DescriptionSource", align 8
  %12 = alloca %"class.blink::DescriptionSource", align 8
  %13 = alloca %"class.blink::AXObject"*, align 8
  %14 = alloca %"class.blink::HeapHashSet.3867", align 8
  %15 = alloca %"class.blink::NameSourceRelatedObject"*, align 8
  %16 = alloca %"class.blink::DescriptionSource", align 8
  %17 = alloca %"class.blink::AXObject"*, align 8
  %18 = alloca %"class.blink::HeapHashSet.3867", align 8
  %19 = alloca %"class.blink::NameSourceRelatedObject"*, align 8
  %20 = alloca %"class.blink::DescriptionSource", align 8
  %21 = alloca %"class.blink::HeapHashSet.3867", align 8
  %22 = alloca %"class.blink::DescriptionSource", align 8
  %23 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %24 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %23) #15
  br i1 %24, label %1566, label %25

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %1566, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  store i32 3, i32* %2, align 4
  %32 = icmp ne %"class.blink::HeapVector.3995"* %3, null
  br i1 %32, label %33, label %100

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %35 = bitcast %"class.blink::DescriptionSource"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %35) #15
  %36 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaDescribedbyAttrE to i64*), align 8
  %37 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 1
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 2
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 3
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 4
  %42 = bitcast %"class.blink::QualifiedName"** %41 to i64*
  store i64 %36, i64* %42, align 8
  %43 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 6
  store i32 -1, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 7
  %46 = bitcast %"class.blink::HeapVector.3879"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #15
  %47 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %61, label %52, !prof !3

52:                                               ; preds = %33
  %53 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %53, align 8
  %55 = zext i32 %48 to i64
  %56 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %54, i64 %55
  %57 = bitcast %"class.blink::DescriptionSource"* %56 to i8*
  %58 = call %"class.blink::DescriptionSource"* @_ZN3WTF15ConstructTraitsIN5blink17DescriptionSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %57, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %7) #15
  %59 = load i32, i32* %47, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %47, align 4
  br label %62

61:                                               ; preds = %33
  call void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3998"* %34, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %7) #15
  br label %62

62:                                               ; preds = %52, %61
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #15
  br label %78

78:                                               ; preds = %77, %74, %62
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #15
  br label %94

94:                                               ; preds = %78, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %35) #15
  %95 = load i32, i32* %2, align 4
  %96 = load i32, i32* %47, align 4
  %97 = add i32 %96, -1
  %98 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %34, i32 %97) #15
  %99 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %98, i64 0, i32 3
  store i32 %95, i32* %99, align 4
  br label %100

100:                                              ; preds = %94, %29
  %101 = call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %23) #15
  %102 = icmp eq %"class.blink::Element"* %101, null
  br i1 %102, label %1548, label %103

103:                                              ; preds = %100
  %104 = bitcast %"class.WTF::Vector.630"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #15
  %105 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %8, i64 0, i32 0, i32 0, i32 0
  %106 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %8, i64 0, i32 0, i32 0, i32 1
  %107 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 16, i1 false) #15
  %108 = bitcast %"class.blink::HeapVector.365"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #15
  %109 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 16, i1 false) #15
  %111 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kAriaDescribedbyAttrE, align 8
  %112 = call zeroext i1 @_ZN5blink8AXObject21ElementsFromAttributeEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERKNS_13QualifiedNameERN3WTF6VectorINSB_6StringELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Element"* nonnull %101, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %9, %"class.blink::QualifiedName"* dereferenceable(8) %111, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %8) #15
  br i1 %112, label %113, label %359

113:                                              ; preds = %103
  br i1 %32, label %114, label %165

114:                                              ; preds = %113
  %115 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)***
  %116 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*** %115, align 8
  %117 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %116, i64 131
  %118 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %117, align 8
  %119 = call dereferenceable(8) %"class.WTF::AtomicString"* %118(%"class.blink::AXNodeObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %111) #15
  %120 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %121 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, -1
  %124 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %120, i32 %123) #15
  %125 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %124, i64 0, i32 5
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %119, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %146, label %129

129:                                              ; preds = %114
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %146

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i33
  %138 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %137, i33 1) #15
  %139 = extractvalue { i33, i1 } %138, 1
  %140 = extractvalue { i33, i1 } %138, 0
  %141 = icmp slt i33 %140, 0
  %142 = or i1 %139, %141
  br i1 %142, label %143, label %144, !prof !3

143:                                              ; preds = %134
  call void @llvm.trap() #15
  unreachable

144:                                              ; preds = %134
  %145 = trunc i33 %140 to i32
  store i32 %145, i32* %135, align 4
  br label %146

146:                                              ; preds = %144, %129, %114
  %147 = ptrtoint %"class.WTF::StringImpl"* %127 to i64
  %148 = bitcast %"class.WTF::AtomicString"* %125 to i64*
  %149 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  store i64 %147, i64* %148, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #15
  br label %165

165:                                              ; preds = %164, %161, %146, %113
  %166 = bitcast %"class.blink::HeapHashSet.3867"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #15
  %167 = bitcast %"class.blink::HeapHashSet.3867"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 0, i64 20, i1 false) #15
  %168 = call %"class.WTF::StringImpl"* @_ZNK5blink8AXObject16TextFromElementsEbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERNS_10HeapVectorINS2_INS_7ElementEEELj0EEEPNSC_INS2_INS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXObject"* %23, i1 zeroext true, %"class.blink::HeapHashSet.3867"* nonnull dereferenceable(24) %10, %"class.blink::HeapVector.365"* nonnull dereferenceable(16) %9, %"class.blink::HeapVector.3879"* %4) #15
  %169 = ptrtoint %"class.WTF::StringImpl"* %168 to i64
  %170 = bitcast %"class.WTF::String"* %6 to i64*
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %169, i64* %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #15
  br label %186

186:                                              ; preds = %185, %182, %165
  %187 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %109, align 8
  %188 = load i32, i32* %110, align 4
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %187, i64 %189
  %191 = icmp eq i32 %188, 0
  br i1 %191, label %196, label %192

192:                                              ; preds = %186
  %193 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %194 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %193, i64 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %202

196:                                              ; preds = %295, %186
  call void @_ZN5blink8AXObject24TokenVectorFromAttributeEPNS_7ElementERN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %101, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %8, %"class.blink::QualifiedName"* dereferenceable(8) %111) #15
  %197 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %198 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %197, align 8
  call void @_ZN5blink17AXObjectCacheImpl22UpdateReverseRelationsEPKNS_8AXObjectERKN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEE(%"class.blink::AXObjectCacheImpl"* %198, %"class.blink::AXObject"* %23, %"class.WTF::Vector.630"* nonnull dereferenceable(16) %8) #15
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  %201 = ptrtoint %"class.WTF::StringImpl"* %199 to i64
  br i1 %200, label %348, label %298

202:                                              ; preds = %192, %295
  %203 = phi %"class.blink::Member.343"* [ %187, %192 ], [ %296, %295 ]
  %204 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %203, i64 0, i32 0, i32 0
  %205 = load %"class.blink::Element"*, %"class.blink::Element"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %205, i64 0, i32 3, i32 0, i32 0
  %207 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %206, align 8
  %208 = icmp eq %"class.blink::ElementData"* %207, null
  br i1 %208, label %262, label %209

209:                                              ; preds = %202
  %210 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %207, i64 0, i32 3, i32 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %262, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %207, i64 0, i32 0, i32 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %225, label %218

218:                                              ; preds = %213
  %219 = bitcast %"class.blink::ElementData"* %207 to %"class.blink::UniqueElementData"*
  %220 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %207, i64 1, i32 1
  %221 = bitcast %"class.blink::Member.354"* %220 to %"class.blink::Attribute"**
  %222 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %219, i64 0, i32 2, i32 0, i32 0, i32 2
  %224 = load i32, i32* %223, align 4
  br label %230

225:                                              ; preds = %213
  %226 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %207, i64 1
  %227 = bitcast %"class.blink::ElementData"* %226 to %"class.blink::Attribute"*
  %228 = lshr i32 %215, 1
  %229 = and i32 %228, 268435455
  br label %230

230:                                              ; preds = %225, %218
  %231 = phi %"class.blink::Attribute"* [ %227, %225 ], [ %222, %218 ]
  %232 = phi i32 [ %229, %225 ], [ %224, %218 ]
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %231, i64 %233
  %235 = icmp eq i32 %232, 0
  br i1 %235, label %262, label %236

236:                                              ; preds = %230
  %237 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %194, align 8
  %238 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %237, i64 0, i32 3, i32 0, i32 0, i32 0
  %239 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %237, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %240

240:                                              ; preds = %255, %236
  %241 = phi %"class.blink::Attribute"* [ %231, %236 ], [ %256, %255 ]
  %242 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %241, i64 0, i32 0, i32 0, i32 0
  %243 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %242, align 8
  %244 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %243, %237
  br i1 %244, label %258, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %243, i64 0, i32 3, i32 0, i32 0, i32 0
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %249 = icmp eq %"class.WTF::StringImpl"* %247, %248
  br i1 %249, label %250, label %255

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %243, i64 0, i32 4, i32 0, i32 0, i32 0
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %252, %253
  br i1 %254, label %258, label %255

255:                                              ; preds = %250, %245
  %256 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %241, i64 1
  %257 = icmp eq %"class.blink::Attribute"* %256, %234
  br i1 %257, label %262, label %240

258:                                              ; preds = %250, %240
  %259 = icmp eq %"class.blink::Attribute"* %241, null
  %260 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %241, i64 0, i32 1
  %261 = select i1 %259, %"class.WTF::AtomicString"* %195, %"class.WTF::AtomicString"* %260
  br label %262

262:                                              ; preds = %255, %258, %202, %209, %230
  %263 = phi %"class.WTF::AtomicString"* [ %195, %230 ], [ %195, %209 ], [ %195, %202 ], [ %261, %258 ], [ %195, %255 ]
  %264 = load i32, i32* %107, align 4
  %265 = load i32, i32* %106, align 8
  %266 = icmp eq i32 %264, %265
  br i1 %266, label %294, label %267, !prof !3

267:                                              ; preds = %262
  %268 = load %"class.WTF::String"*, %"class.WTF::String"** %105, align 8
  %269 = zext i32 %264 to i64
  %270 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %263, i64 0, i32 0, i32 0, i32 0
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %270, align 8
  %272 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %268, i64 %269, i32 0, i32 0
  store %"class.WTF::StringImpl"* %271, %"class.WTF::StringImpl"** %272, align 8
  %273 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %273, label %291, label %274

274:                                              ; preds = %267
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = and i32 %276, 2
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %291

279:                                              ; preds = %274
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = zext i32 %281 to i33
  %283 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %282, i33 1) #15
  %284 = extractvalue { i33, i1 } %283, 1
  %285 = extractvalue { i33, i1 } %283, 0
  %286 = icmp slt i33 %285, 0
  %287 = or i1 %284, %286
  br i1 %287, label %288, label %289, !prof !3

288:                                              ; preds = %279
  call void @llvm.trap() #15
  unreachable

289:                                              ; preds = %279
  %290 = trunc i33 %285 to i32
  store i32 %290, i32* %280, align 4
  br label %291

291:                                              ; preds = %289, %274, %267
  %292 = load i32, i32* %107, align 4
  %293 = add i32 %292, 1
  store i32 %293, i32* %107, align 4
  br label %295

294:                                              ; preds = %262
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS_12AtomicStringEEEvOT_(%"class.WTF::Vector.630"* nonnull %8, %"class.WTF::AtomicString"* dereferenceable(8) %263) #15
  br label %295

295:                                              ; preds = %291, %294
  %296 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %203, i64 1
  %297 = icmp eq %"class.blink::Member.343"* %296, %190
  br i1 %297, label %196, label %202

298:                                              ; preds = %196
  br i1 %32, label %299, label %358

299:                                              ; preds = %298
  %300 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %301 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %302 = load i32, i32* %301, align 4
  %303 = add i32 %302, -1
  %304 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %300, i32 %303) #15
  %305 = load i32, i32* %2, align 4
  %306 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %304, i64 0, i32 3
  store i32 %305, i32* %306, align 4
  %307 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %304, i64 0, i32 7, i32 0
  %308 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0
  %309 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %307, %"class.WTF::Vector.3882"* dereferenceable(16) %308) #15
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %329, label %312

312:                                              ; preds = %299
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %329

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %319 = load i32, i32* %318, align 4
  %320 = zext i32 %319 to i33
  %321 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %320, i33 1) #15
  %322 = extractvalue { i33, i1 } %321, 1
  %323 = extractvalue { i33, i1 } %321, 0
  %324 = icmp slt i33 %323, 0
  %325 = or i1 %322, %324
  br i1 %325, label %326, label %327, !prof !3

326:                                              ; preds = %317
  call void @llvm.trap() #15
  unreachable

327:                                              ; preds = %317
  %328 = trunc i33 %323 to i32
  store i32 %328, i32* %318, align 4
  br label %329

329:                                              ; preds = %327, %312, %299
  %330 = ptrtoint %"class.WTF::StringImpl"* %310 to i64
  %331 = bitcast %"class.blink::DescriptionSource"* %304 to i64*
  %332 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %304, i64 0, i32 0, i32 0, i32 0
  %333 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %332, align 8
  store i64 %330, i64* %331, align 8
  %334 = icmp eq %"class.WTF::StringImpl"* %333, null
  br i1 %334, label %356, label %335

335:                                              ; preds = %329
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load atomic i32, i32* %336 monotonic, align 4
  %338 = and i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 0
  %341 = load i32, i32* %340, align 4
  br i1 %339, label %342, label %344

342:                                              ; preds = %335
  %343 = add i32 %341, -1
  store i32 %343, i32* %340, align 4
  br label %344

344:                                              ; preds = %342, %335
  %345 = phi i32 [ %343, %342 ], [ %341, %335 ]
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %356

347:                                              ; preds = %344
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %333) #15
  br label %356

348:                                              ; preds = %196
  br i1 %32, label %349, label %356

349:                                              ; preds = %348
  %350 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %351 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %352 = load i32, i32* %351, align 4
  %353 = add i32 %352, -1
  %354 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %350, i32 %353) #15
  %355 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %354, i64 0, i32 2
  store i8 1, i8* %355, align 1
  br label %356

356:                                              ; preds = %348, %349, %329, %344, %347
  %357 = phi i8 [ 1, %347 ], [ 1, %344 ], [ 1, %329 ], [ 0, %348 ], [ 0, %349 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #15
  br label %359

358:                                              ; preds = %298
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #15
  br label %1510

359:                                              ; preds = %356, %103
  %360 = phi i8 [ 0, %103 ], [ %357, %356 ]
  %361 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %362 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %361, align 8
  %363 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %362, i64 5
  %364 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %363, align 8
  %365 = call dereferenceable(8) %"class.WTF::AtomicString"* %364(%"class.blink::AXObject"* %23, i32 3) #15
  %366 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %365, i64 0, i32 0, i32 0, i32 0
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %454, label %369

369:                                              ; preds = %359
  store i32 1, i32* %2, align 4
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, null
  br i1 %371, label %389, label %372

372:                                              ; preds = %369
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load atomic i32, i32* %373 monotonic, align 4
  %375 = and i32 %374, 2
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %389

377:                                              ; preds = %372
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  %380 = zext i32 %379 to i33
  %381 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %380, i33 1) #15
  %382 = extractvalue { i33, i1 } %381, 1
  %383 = extractvalue { i33, i1 } %381, 0
  %384 = icmp slt i33 %383, 0
  %385 = or i1 %382, %384
  br i1 %385, label %386, label %387, !prof !3

386:                                              ; preds = %377
  call void @llvm.trap() #15
  unreachable

387:                                              ; preds = %377
  %388 = trunc i33 %383 to i32
  store i32 %388, i32* %378, align 4
  br label %389

389:                                              ; preds = %387, %372, %369
  %390 = ptrtoint %"class.WTF::StringImpl"* %370 to i64
  %391 = bitcast %"class.WTF::String"* %6 to i64*
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %390, i64* %391, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %392, null
  br i1 %393, label %407, label %394

394:                                              ; preds = %389
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load atomic i32, i32* %395 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 0
  %400 = load i32, i32* %399, align 4
  br i1 %398, label %401, label %403

401:                                              ; preds = %394
  %402 = add i32 %400, -1
  store i32 %402, i32* %399, align 4
  br label %403

403:                                              ; preds = %401, %394
  %404 = phi i32 [ %402, %401 ], [ %400, %394 ]
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %407

406:                                              ; preds = %403
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %392) #15
  br label %407

407:                                              ; preds = %389, %403, %406
  br i1 %32, label %408, label %452

408:                                              ; preds = %407
  %409 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %410 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %411 = load i32, i32* %410, align 4
  %412 = add i32 %411, -1
  %413 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %409, i32 %412) #15
  %414 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %415 = icmp eq %"class.WTF::StringImpl"* %414, null
  br i1 %415, label %433, label %416

416:                                              ; preds = %408
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %418 = load atomic i32, i32* %417 monotonic, align 4
  %419 = and i32 %418, 2
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %433

421:                                              ; preds = %416
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 0
  %423 = load i32, i32* %422, align 4
  %424 = zext i32 %423 to i33
  %425 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %424, i33 1) #15
  %426 = extractvalue { i33, i1 } %425, 1
  %427 = extractvalue { i33, i1 } %425, 0
  %428 = icmp slt i33 %427, 0
  %429 = or i1 %426, %428
  br i1 %429, label %430, label %431, !prof !3

430:                                              ; preds = %421
  call void @llvm.trap() #15
  unreachable

431:                                              ; preds = %421
  %432 = trunc i33 %427 to i32
  store i32 %432, i32* %422, align 4
  br label %433

433:                                              ; preds = %431, %416, %408
  %434 = ptrtoint %"class.WTF::StringImpl"* %414 to i64
  %435 = bitcast %"class.blink::DescriptionSource"* %413 to i64*
  %436 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %413, i64 0, i32 0, i32 0, i32 0
  %437 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %436, align 8
  store i64 %434, i64* %435, align 8
  %438 = icmp eq %"class.WTF::StringImpl"* %437, null
  br i1 %438, label %454, label %439

439:                                              ; preds = %433
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %437, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load atomic i32, i32* %440 monotonic, align 4
  %442 = and i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %437, i64 0, i32 0
  %445 = load i32, i32* %444, align 4
  br i1 %443, label %446, label %448

446:                                              ; preds = %439
  %447 = add i32 %445, -1
  store i32 %447, i32* %444, align 4
  br label %448

448:                                              ; preds = %446, %439
  %449 = phi i32 [ %447, %446 ], [ %445, %439 ]
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %454

451:                                              ; preds = %448
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %437) #15
  br label %454

452:                                              ; preds = %407
  %453 = load i64, i64* %391, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  br label %1510

454:                                              ; preds = %451, %448, %433, %359
  %455 = phi i8 [ %360, %359 ], [ 1, %433 ], [ 1, %448 ], [ 1, %451 ]
  %456 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %23) #15
  br i1 %456, label %657, label %457

457:                                              ; preds = %454
  %458 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %459 = icmp eq %"class.blink::Node"* %458, null
  br i1 %459, label %657, label %460

460:                                              ; preds = %457
  %461 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %458, i64 0, i32 1
  %462 = load i32, i32* %461, align 8
  %463 = and i32 %462, 48
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %657

465:                                              ; preds = %460
  %466 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %467 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %466, i64 0, i32 0, i32 0, i32 0
  %468 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %467, align 8
  %469 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %458, i64 1, i32 2
  %470 = bitcast %"class.blink::Member.318"* %469 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %471 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %470, align 8
  %472 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %471, i64 0, i32 3, i32 0, i32 0, i32 0
  %473 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %472, align 8
  %474 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %468, i64 0, i32 3, i32 0, i32 0, i32 0
  %475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8
  %476 = icmp eq %"class.WTF::StringImpl"* %473, %475
  %477 = bitcast %"class.blink::Node"* %458 to %"class.blink::HTMLInputElement"*
  %478 = select i1 %476, %"class.blink::HTMLInputElement"* %477, %"class.blink::HTMLInputElement"* null
  %479 = icmp ne i32 %1, 9
  %480 = and i1 %479, %476
  br i1 %480, label %481, label %657

481:                                              ; preds = %465
  %482 = call zeroext i1 @_ZNK5blink16HTMLInputElement12IsTextButtonEv(%"class.blink::HTMLInputElement"* nonnull %478) #15
  br i1 %482, label %483, label %657

483:                                              ; preds = %481
  store i32 2, i32* %2, align 4
  br i1 %32, label %484, label %552

484:                                              ; preds = %483
  %485 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %486 = bitcast %"class.blink::DescriptionSource"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %486) #15
  %487 = and i8 %455, 1
  %488 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE to i64*), align 8
  %489 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %489, align 8
  %490 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %11, i64 0, i32 1
  store i8 %487, i8* %490, align 8
  %491 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %11, i64 0, i32 2
  store i8 0, i8* %491, align 1
  %492 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %11, i64 0, i32 3
  store i32 0, i32* %492, align 4
  %493 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %11, i64 0, i32 4
  %494 = bitcast %"class.blink::QualifiedName"** %493 to i64*
  store i64 %488, i64* %494, align 8
  %495 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %11, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %495, align 8
  %496 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %11, i64 0, i32 6
  store i32 -1, i32* %496, align 8
  %497 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %11, i64 0, i32 7
  %498 = bitcast %"class.blink::HeapVector.3879"* %497 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %498, i8 0, i64 16, i1 false) #15
  %499 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %500 = load i32, i32* %499, align 4
  %501 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %502 = load i32, i32* %501, align 8
  %503 = icmp eq i32 %500, %502
  br i1 %503, label %513, label %504, !prof !3

504:                                              ; preds = %484
  %505 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %506 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %505, align 8
  %507 = zext i32 %500 to i64
  %508 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %506, i64 %507
  %509 = bitcast %"class.blink::DescriptionSource"* %508 to i8*
  %510 = call %"class.blink::DescriptionSource"* @_ZN3WTF15ConstructTraitsIN5blink17DescriptionSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %509, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %11) #15
  %511 = load i32, i32* %499, align 4
  %512 = add i32 %511, 1
  store i32 %512, i32* %499, align 4
  br label %514

513:                                              ; preds = %484
  call void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3998"* %485, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %11) #15
  br label %514

514:                                              ; preds = %504, %513
  %515 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %495, align 8
  %516 = icmp eq %"class.WTF::StringImpl"* %515, null
  br i1 %516, label %530, label %517

517:                                              ; preds = %514
  %518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %515, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %519 = load atomic i32, i32* %518 monotonic, align 4
  %520 = and i32 %519, 2
  %521 = icmp eq i32 %520, 0
  %522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %515, i64 0, i32 0
  %523 = load i32, i32* %522, align 4
  br i1 %521, label %524, label %526

524:                                              ; preds = %517
  %525 = add i32 %523, -1
  store i32 %525, i32* %522, align 4
  br label %526

526:                                              ; preds = %524, %517
  %527 = phi i32 [ %525, %524 ], [ %523, %517 ]
  %528 = icmp eq i32 %527, 0
  br i1 %528, label %529, label %530

529:                                              ; preds = %526
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %515) #15
  br label %530

530:                                              ; preds = %529, %526, %514
  %531 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %489, align 8
  %532 = icmp eq %"class.WTF::StringImpl"* %531, null
  br i1 %532, label %546, label %533

533:                                              ; preds = %530
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %531, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %535 = load atomic i32, i32* %534 monotonic, align 4
  %536 = and i32 %535, 2
  %537 = icmp eq i32 %536, 0
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %531, i64 0, i32 0
  %539 = load i32, i32* %538, align 4
  br i1 %537, label %540, label %542

540:                                              ; preds = %533
  %541 = add i32 %539, -1
  store i32 %541, i32* %538, align 4
  br label %542

542:                                              ; preds = %540, %533
  %543 = phi i32 [ %541, %540 ], [ %539, %533 ]
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %545, label %546

545:                                              ; preds = %542
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %531) #15
  br label %546

546:                                              ; preds = %530, %542, %545
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %486) #15
  %547 = load i32, i32* %2, align 4
  %548 = load i32, i32* %499, align 4
  %549 = add i32 %548, -1
  %550 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %485, i32 %549) #15
  %551 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %550, i64 0, i32 3
  store i32 %547, i32* %551, align 4
  br label %552

552:                                              ; preds = %546, %483
  %553 = bitcast %"class.blink::HTMLInputElement"* %478 to %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)***
  %554 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*** %553, align 8
  %555 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %554, i64 195
  %556 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLInputElement"*)** %555, align 8
  %557 = call %"class.WTF::StringImpl"* %556(%"class.blink::HTMLInputElement"* nonnull %478) #15
  %558 = icmp eq %"class.WTF::StringImpl"* %557, null
  br i1 %558, label %657, label %559

559:                                              ; preds = %552
  %560 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load atomic i32, i32* %560 monotonic, align 4
  %562 = and i32 %561, 2
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %564, label %576

564:                                              ; preds = %559
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %566 = load i32, i32* %565, align 4
  %567 = zext i32 %566 to i33
  %568 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %567, i33 1) #15
  %569 = extractvalue { i33, i1 } %568, 1
  %570 = extractvalue { i33, i1 } %568, 0
  %571 = icmp slt i33 %570, 0
  %572 = or i1 %569, %571
  br i1 %572, label %573, label %574, !prof !3

573:                                              ; preds = %564
  call void @llvm.trap() #15
  unreachable

574:                                              ; preds = %564
  %575 = trunc i33 %570 to i32
  store i32 %575, i32* %565, align 4
  br label %576

576:                                              ; preds = %574, %559
  %577 = ptrtoint %"class.WTF::StringImpl"* %557 to i64
  %578 = bitcast %"class.WTF::String"* %6 to i64*
  %579 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %577, i64* %578, align 8
  %580 = icmp eq %"class.WTF::StringImpl"* %579, null
  br i1 %580, label %594, label %581

581:                                              ; preds = %576
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %583 = load atomic i32, i32* %582 monotonic, align 4
  %584 = and i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 0
  %587 = load i32, i32* %586, align 4
  br i1 %585, label %588, label %590

588:                                              ; preds = %581
  %589 = add i32 %587, -1
  store i32 %589, i32* %586, align 4
  br label %590

590:                                              ; preds = %588, %581
  %591 = phi i32 [ %589, %588 ], [ %587, %581 ]
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %594

593:                                              ; preds = %590
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %579) #15
  br label %594

594:                                              ; preds = %576, %590, %593
  br i1 %32, label %595, label %639

595:                                              ; preds = %594
  %596 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %597 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %598 = load i32, i32* %597, align 4
  %599 = add i32 %598, -1
  %600 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %596, i32 %599) #15
  %601 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %602 = icmp eq %"class.WTF::StringImpl"* %601, null
  br i1 %602, label %620, label %603

603:                                              ; preds = %595
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load atomic i32, i32* %604 monotonic, align 4
  %606 = and i32 %605, 2
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %620

608:                                              ; preds = %603
  %609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 0
  %610 = load i32, i32* %609, align 4
  %611 = zext i32 %610 to i33
  %612 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %611, i33 1) #15
  %613 = extractvalue { i33, i1 } %612, 1
  %614 = extractvalue { i33, i1 } %612, 0
  %615 = icmp slt i33 %614, 0
  %616 = or i1 %613, %615
  br i1 %616, label %617, label %618, !prof !3

617:                                              ; preds = %608
  call void @llvm.trap() #15
  unreachable

618:                                              ; preds = %608
  %619 = trunc i33 %614 to i32
  store i32 %619, i32* %609, align 4
  br label %620

620:                                              ; preds = %618, %603, %595
  %621 = ptrtoint %"class.WTF::StringImpl"* %601 to i64
  %622 = bitcast %"class.blink::DescriptionSource"* %600 to i64*
  %623 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %600, i64 0, i32 0, i32 0, i32 0
  %624 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %623, align 8
  store i64 %621, i64* %622, align 8
  %625 = icmp eq %"class.WTF::StringImpl"* %624, null
  br i1 %625, label %641, label %626

626:                                              ; preds = %620
  %627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %624, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %628 = load atomic i32, i32* %627 monotonic, align 4
  %629 = and i32 %628, 2
  %630 = icmp eq i32 %629, 0
  %631 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %624, i64 0, i32 0
  %632 = load i32, i32* %631, align 4
  br i1 %630, label %633, label %635

633:                                              ; preds = %626
  %634 = add i32 %632, -1
  store i32 %634, i32* %631, align 4
  br label %635

635:                                              ; preds = %633, %626
  %636 = phi i32 [ %634, %633 ], [ %632, %626 ]
  %637 = icmp eq i32 %636, 0
  br i1 %637, label %638, label %641

638:                                              ; preds = %635
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %624) #15
  br label %641

639:                                              ; preds = %594
  %640 = load i64, i64* %578, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  br label %641

641:                                              ; preds = %638, %635, %620, %639
  %642 = phi i64 [ undef, %638 ], [ undef, %635 ], [ undef, %620 ], [ %640, %639 ]
  %643 = phi i1 [ true, %638 ], [ true, %635 ], [ true, %620 ], [ false, %639 ]
  %644 = phi i8 [ 1, %638 ], [ 1, %635 ], [ 1, %620 ], [ %455, %639 ]
  %645 = load atomic i32, i32* %560 monotonic, align 4
  %646 = and i32 %645, 2
  %647 = icmp eq i32 %646, 0
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %649 = load i32, i32* %648, align 4
  br i1 %647, label %650, label %652

650:                                              ; preds = %641
  %651 = add i32 %649, -1
  store i32 %651, i32* %648, align 4
  br label %652

652:                                              ; preds = %650, %641
  %653 = phi i32 [ %651, %650 ], [ %649, %641 ]
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %655, label %656

655:                                              ; preds = %652
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %557) #15
  br i1 %643, label %657, label %1510

656:                                              ; preds = %652
  br i1 %643, label %657, label %1510

657:                                              ; preds = %552, %454, %457, %460, %655, %656, %481, %465
  %658 = phi i8 [ %644, %656 ], [ %455, %481 ], [ %455, %465 ], [ %644, %655 ], [ %455, %460 ], [ %455, %457 ], [ %455, %454 ], [ %455, %552 ]
  %659 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %23) #15
  %660 = icmp eq i32 %659, 149
  br i1 %660, label %661, label %895

661:                                              ; preds = %657
  store i32 4, i32* %2, align 4
  br i1 %32, label %662, label %734

662:                                              ; preds = %661
  %663 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %664 = bitcast %"class.blink::DescriptionSource"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %664) #15
  %665 = and i8 %658, 1
  %666 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %666, align 8
  %667 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %12, i64 0, i32 1
  store i8 %665, i8* %667, align 8
  %668 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %12, i64 0, i32 2
  store i8 0, i8* %668, align 1
  %669 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %12, i64 0, i32 3
  store i32 0, i32* %669, align 4
  %670 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %12, i64 0, i32 4
  %671 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %672 = bitcast %"class.blink::QualifiedName"** %670 to i64*
  store i64 %671, i64* %672, align 8
  %673 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %673, align 8
  %674 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %12, i64 0, i32 6
  store i32 -1, i32* %674, align 8
  %675 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %12, i64 0, i32 7
  %676 = bitcast %"class.blink::HeapVector.3879"* %675 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %676, i8 0, i64 16, i1 false) #15
  %677 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %678 = load i32, i32* %677, align 4
  %679 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %680 = load i32, i32* %679, align 8
  %681 = icmp eq i32 %678, %680
  br i1 %681, label %691, label %682, !prof !3

682:                                              ; preds = %662
  %683 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %684 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %683, align 8
  %685 = zext i32 %678 to i64
  %686 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %684, i64 %685
  %687 = bitcast %"class.blink::DescriptionSource"* %686 to i8*
  %688 = call %"class.blink::DescriptionSource"* @_ZN3WTF15ConstructTraitsIN5blink17DescriptionSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %687, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %12) #15
  %689 = load i32, i32* %677, align 4
  %690 = add i32 %689, 1
  store i32 %690, i32* %677, align 4
  br label %692

691:                                              ; preds = %662
  call void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3998"* %663, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %12) #15
  br label %692

692:                                              ; preds = %682, %691
  %693 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %673, align 8
  %694 = icmp eq %"class.WTF::StringImpl"* %693, null
  br i1 %694, label %708, label %695

695:                                              ; preds = %692
  %696 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %693, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %697 = load atomic i32, i32* %696 monotonic, align 4
  %698 = and i32 %697, 2
  %699 = icmp eq i32 %698, 0
  %700 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %693, i64 0, i32 0
  %701 = load i32, i32* %700, align 4
  br i1 %699, label %702, label %704

702:                                              ; preds = %695
  %703 = add i32 %701, -1
  store i32 %703, i32* %700, align 4
  br label %704

704:                                              ; preds = %702, %695
  %705 = phi i32 [ %703, %702 ], [ %701, %695 ]
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %707, label %708

707:                                              ; preds = %704
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %693) #15
  br label %708

708:                                              ; preds = %707, %704, %692
  %709 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %666, align 8
  %710 = icmp eq %"class.WTF::StringImpl"* %709, null
  br i1 %710, label %724, label %711

711:                                              ; preds = %708
  %712 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %713 = load atomic i32, i32* %712 monotonic, align 4
  %714 = and i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 0, i32 0
  %717 = load i32, i32* %716, align 4
  br i1 %715, label %718, label %720

718:                                              ; preds = %711
  %719 = add i32 %717, -1
  store i32 %719, i32* %716, align 4
  br label %720

720:                                              ; preds = %718, %711
  %721 = phi i32 [ %719, %718 ], [ %717, %711 ]
  %722 = icmp eq i32 %721, 0
  br i1 %722, label %723, label %724

723:                                              ; preds = %720
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %709) #15
  br label %724

724:                                              ; preds = %708, %720, %723
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %664) #15
  %725 = load i32, i32* %2, align 4
  %726 = load i32, i32* %677, align 4
  %727 = add i32 %726, -1
  %728 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %663, i32 %727) #15
  %729 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %728, i64 0, i32 3
  store i32 %725, i32* %729, align 4
  %730 = load i32, i32* %677, align 4
  %731 = add i32 %730, -1
  %732 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %663, i32 %731) #15
  %733 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %732, i64 0, i32 6
  store i32 5, i32* %733, align 8
  br label %734

734:                                              ; preds = %724, %661
  %735 = bitcast %"class.blink::AXObject"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %735) #15
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %13, align 8
  %736 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %737 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %736, align 8
  %738 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %739 = load i32, i32* %738, align 4
  %740 = zext i32 %739 to i64
  %741 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %737, i64 %740
  %742 = icmp eq i32 %739, 0
  br i1 %742, label %891, label %743

743:                                              ; preds = %734
  %744 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kRtTagE, align 8
  %745 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %744, i64 0, i32 0, i32 0, i32 0
  br label %746

746:                                              ; preds = %743, %785
  %747 = phi %"class.blink::Member.2997"* [ %737, %743 ], [ %786, %785 ]
  %748 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %747, i64 0, i32 0, i32 0
  %749 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %748, align 8
  %750 = call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %749) #15
  %751 = icmp eq i32 %750, 150
  br i1 %751, label %752, label %785

752:                                              ; preds = %746
  %753 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %748, align 8
  %754 = bitcast %"class.blink::AXObject"* %753 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %755 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %754, align 8
  %756 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %755, i64 124
  %757 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %756, align 8
  %758 = call %"class.blink::Node"* %757(%"class.blink::AXObject"* %753) #15
  %759 = icmp eq %"class.blink::Node"* %758, null
  br i1 %759, label %785, label %760

760:                                              ; preds = %752
  %761 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %748, align 8
  %762 = bitcast %"class.blink::AXObject"* %761 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %763 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %762, align 8
  %764 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %763, i64 124
  %765 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %764, align 8
  %766 = call %"class.blink::Node"* %765(%"class.blink::AXObject"* %761) #15
  %767 = icmp eq %"class.blink::Node"* %766, null
  br i1 %767, label %785, label %768

768:                                              ; preds = %760
  %769 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %766, i64 0, i32 1
  %770 = load i32, i32* %769, align 8
  %771 = and i32 %770, 48
  %772 = icmp eq i32 %771, 0
  br i1 %772, label %773, label %785

773:                                              ; preds = %768
  %774 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %745, align 8
  %775 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %766, i64 1, i32 2
  %776 = bitcast %"class.blink::Member.318"* %775 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %777 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %776, align 8
  %778 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %777, i64 0, i32 3, i32 0, i32 0, i32 0
  %779 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %778, align 8
  %780 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %774, i64 0, i32 3, i32 0, i32 0, i32 0
  %781 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %780, align 8
  %782 = icmp eq %"class.WTF::StringImpl"* %779, %781
  br i1 %782, label %783, label %785

783:                                              ; preds = %773
  %784 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %748, align 8
  store %"class.blink::AXObject"* %784, %"class.blink::AXObject"** %13, align 8
  br label %790

785:                                              ; preds = %760, %768, %752, %773, %746
  %786 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %747, i64 1
  %787 = icmp eq %"class.blink::Member.2997"* %786, %741
  br i1 %787, label %788, label %746

788:                                              ; preds = %785
  %789 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %13, align 8
  br label %790

790:                                              ; preds = %788, %783
  %791 = phi %"class.blink::AXObject"* [ %784, %783 ], [ %789, %788 ]
  %792 = icmp eq %"class.blink::AXObject"* %791, null
  br i1 %792, label %891, label %793

793:                                              ; preds = %790
  %794 = bitcast %"class.blink::HeapHashSet.3867"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %794) #15
  %795 = bitcast %"class.blink::HeapHashSet.3867"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %795, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %794, i8 0, i64 20, i1 false) #15
  %796 = call %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEE(%"class.blink::AXObject"* nonnull dereferenceable(120) %791, i1 zeroext true, %"class.blink::HeapHashSet.3867"* nonnull dereferenceable(24) %14) #15
  %797 = ptrtoint %"class.WTF::StringImpl"* %796 to i64
  %798 = bitcast %"class.WTF::String"* %6 to i64*
  %799 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %797, i64* %798, align 8
  %800 = icmp eq %"class.WTF::StringImpl"* %799, null
  br i1 %800, label %814, label %801

801:                                              ; preds = %793
  %802 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %799, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %803 = load atomic i32, i32* %802 monotonic, align 4
  %804 = and i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %799, i64 0, i32 0
  %807 = load i32, i32* %806, align 4
  br i1 %805, label %808, label %810

808:                                              ; preds = %801
  %809 = add i32 %807, -1
  store i32 %809, i32* %806, align 4
  br label %810

810:                                              ; preds = %808, %801
  %811 = phi i32 [ %809, %808 ], [ %807, %801 ]
  %812 = icmp eq i32 %811, 0
  br i1 %812, label %813, label %814

813:                                              ; preds = %810
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %799) #15
  br label %814

814:                                              ; preds = %813, %810, %793
  %815 = icmp eq %"class.blink::HeapVector.3879"* %4, null
  br i1 %815, label %842, label %816

816:                                              ; preds = %814
  %817 = bitcast %"class.blink::NameSourceRelatedObject"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %817) #15
  %818 = call %"class.blink::NameSourceRelatedObject"* @_ZN5blink25MakeGarbageCollectedTraitINS_23NameSourceRelatedObjectEE4CallIJRPNS_8AXObjectERN3WTF6StringEEEEPS1_DpOT_(%"class.blink::AXObject"** nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %6) #15
  store %"class.blink::NameSourceRelatedObject"* %818, %"class.blink::NameSourceRelatedObject"** %15, align 8
  %819 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %820 = load i32, i32* %819, align 4
  %821 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %822 = load i32, i32* %821, align 8
  %823 = icmp eq i32 %820, %822
  br i1 %823, label %839, label %824, !prof !3

824:                                              ; preds = %816
  %825 = ptrtoint %"class.blink::NameSourceRelatedObject"* %818 to i64
  %826 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %827 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %826, align 8
  %828 = zext i32 %820 to i64
  %829 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %827, i64 %828
  %830 = bitcast %"class.blink::Member.3885"* %829 to i64*
  store atomic i64 %825, i64* %830 monotonic, align 8
  %831 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %832 = icmp eq i32 %831, 0
  br i1 %832, label %836, label %833

833:                                              ; preds = %824
  %834 = bitcast %"class.blink::NameSourceRelatedObject"* %818 to i8*
  %835 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %834) #15
  br label %836

836:                                              ; preds = %833, %824
  %837 = load i32, i32* %819, align 4
  %838 = add i32 %837, 1
  store i32 %838, i32* %819, align 4
  br label %841

839:                                              ; preds = %816
  %840 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3882"* %840, %"class.blink::NameSourceRelatedObject"** nonnull dereferenceable(8) %15) #15
  br label %841

841:                                              ; preds = %836, %839
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %817) #15
  br label %842

842:                                              ; preds = %814, %841
  br i1 %32, label %843, label %893

843:                                              ; preds = %842
  %844 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %845 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %846 = load i32, i32* %845, align 4
  %847 = add i32 %846, -1
  %848 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %844, i32 %847) #15
  %849 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %848, i64 0, i32 7, i32 0
  %850 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0
  %851 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %849, %"class.WTF::Vector.3882"* dereferenceable(16) %850) #15
  %852 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %853 = icmp eq %"class.WTF::StringImpl"* %852, null
  br i1 %853, label %871, label %854

854:                                              ; preds = %843
  %855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %852, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %856 = load atomic i32, i32* %855 monotonic, align 4
  %857 = and i32 %856, 2
  %858 = icmp eq i32 %857, 0
  br i1 %858, label %859, label %871

859:                                              ; preds = %854
  %860 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %852, i64 0, i32 0
  %861 = load i32, i32* %860, align 4
  %862 = zext i32 %861 to i33
  %863 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %862, i33 1) #15
  %864 = extractvalue { i33, i1 } %863, 1
  %865 = extractvalue { i33, i1 } %863, 0
  %866 = icmp slt i33 %865, 0
  %867 = or i1 %864, %866
  br i1 %867, label %868, label %869, !prof !3

868:                                              ; preds = %859
  call void @llvm.trap() #15
  unreachable

869:                                              ; preds = %859
  %870 = trunc i33 %865 to i32
  store i32 %870, i32* %860, align 4
  br label %871

871:                                              ; preds = %869, %854, %843
  %872 = ptrtoint %"class.WTF::StringImpl"* %852 to i64
  %873 = bitcast %"class.blink::DescriptionSource"* %848 to i64*
  %874 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %848, i64 0, i32 0, i32 0, i32 0
  %875 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %874, align 8
  store i64 %872, i64* %873, align 8
  %876 = icmp eq %"class.WTF::StringImpl"* %875, null
  br i1 %876, label %890, label %877

877:                                              ; preds = %871
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %875, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %879 = load atomic i32, i32* %878 monotonic, align 4
  %880 = and i32 %879, 2
  %881 = icmp eq i32 %880, 0
  %882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %875, i64 0, i32 0
  %883 = load i32, i32* %882, align 4
  br i1 %881, label %884, label %886

884:                                              ; preds = %877
  %885 = add i32 %883, -1
  store i32 %885, i32* %882, align 4
  br label %886

886:                                              ; preds = %884, %877
  %887 = phi i32 [ %885, %884 ], [ %883, %877 ]
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %889, label %890

889:                                              ; preds = %886
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %875) #15
  br label %890

890:                                              ; preds = %871, %886, %889
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %794) #15
  br label %891

891:                                              ; preds = %734, %890, %790
  %892 = phi i8 [ 1, %890 ], [ %658, %790 ], [ %658, %734 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %735) #15
  br label %895

893:                                              ; preds = %842
  %894 = load i64, i64* %798, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %794) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %735) #15
  br label %1510

895:                                              ; preds = %657, %891
  %896 = phi i8 [ %658, %657 ], [ %892, %891 ]
  %897 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %101, i64 0, i32 0, i32 0, i32 1
  %898 = load i32, i32* %897, align 8
  %899 = and i32 %898, 48
  %900 = icmp eq i32 %899, 0
  br i1 %900, label %901, label %1103

901:                                              ; preds = %895
  %902 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %101, i64 0, i32 0, i32 0
  %903 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE, align 8
  %904 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %903, i64 0, i32 0, i32 0, i32 0
  %905 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %904, align 8
  %906 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %902, i64 1, i32 2
  %907 = bitcast %"class.blink::Member.318"* %906 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %908 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %907, align 8
  %909 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %908, i64 0, i32 3, i32 0, i32 0, i32 0
  %910 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %909, align 8
  %911 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %905, i64 0, i32 3, i32 0, i32 0, i32 0
  %912 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %911, align 8
  %913 = icmp eq %"class.WTF::StringImpl"* %910, %912
  %914 = bitcast %"class.blink::Element"* %101 to %"class.blink::HTMLTableElement"*
  %915 = select i1 %913, %"class.blink::HTMLTableElement"* %914, %"class.blink::HTMLTableElement"* null
  %916 = icmp ne i32 %1, 4
  %917 = and i1 %916, %913
  br i1 %917, label %918, label %1103

918:                                              ; preds = %901
  store i32 6, i32* %2, align 4
  br i1 %32, label %919, label %991

919:                                              ; preds = %918
  %920 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %921 = bitcast %"class.blink::DescriptionSource"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %921) #15
  %922 = and i8 %896, 1
  %923 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %923, align 8
  %924 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %16, i64 0, i32 1
  store i8 %922, i8* %924, align 8
  %925 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %16, i64 0, i32 2
  store i8 0, i8* %925, align 1
  %926 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %16, i64 0, i32 3
  store i32 0, i32* %926, align 4
  %927 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %16, i64 0, i32 4
  %928 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %929 = bitcast %"class.blink::QualifiedName"** %927 to i64*
  store i64 %928, i64* %929, align 8
  %930 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %16, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %930, align 8
  %931 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %16, i64 0, i32 6
  store i32 -1, i32* %931, align 8
  %932 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %16, i64 0, i32 7
  %933 = bitcast %"class.blink::HeapVector.3879"* %932 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %933, i8 0, i64 16, i1 false) #15
  %934 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %935 = load i32, i32* %934, align 4
  %936 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %937 = load i32, i32* %936, align 8
  %938 = icmp eq i32 %935, %937
  br i1 %938, label %948, label %939, !prof !3

939:                                              ; preds = %919
  %940 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %941 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %940, align 8
  %942 = zext i32 %935 to i64
  %943 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %941, i64 %942
  %944 = bitcast %"class.blink::DescriptionSource"* %943 to i8*
  %945 = call %"class.blink::DescriptionSource"* @_ZN3WTF15ConstructTraitsIN5blink17DescriptionSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %944, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %16) #15
  %946 = load i32, i32* %934, align 4
  %947 = add i32 %946, 1
  store i32 %947, i32* %934, align 4
  br label %949

948:                                              ; preds = %919
  call void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3998"* %920, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %16) #15
  br label %949

949:                                              ; preds = %939, %948
  %950 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %930, align 8
  %951 = icmp eq %"class.WTF::StringImpl"* %950, null
  br i1 %951, label %965, label %952

952:                                              ; preds = %949
  %953 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %950, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %954 = load atomic i32, i32* %953 monotonic, align 4
  %955 = and i32 %954, 2
  %956 = icmp eq i32 %955, 0
  %957 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %950, i64 0, i32 0
  %958 = load i32, i32* %957, align 4
  br i1 %956, label %959, label %961

959:                                              ; preds = %952
  %960 = add i32 %958, -1
  store i32 %960, i32* %957, align 4
  br label %961

961:                                              ; preds = %959, %952
  %962 = phi i32 [ %960, %959 ], [ %958, %952 ]
  %963 = icmp eq i32 %962, 0
  br i1 %963, label %964, label %965

964:                                              ; preds = %961
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %950) #15
  br label %965

965:                                              ; preds = %964, %961, %949
  %966 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %923, align 8
  %967 = icmp eq %"class.WTF::StringImpl"* %966, null
  br i1 %967, label %981, label %968

968:                                              ; preds = %965
  %969 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %966, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %970 = load atomic i32, i32* %969 monotonic, align 4
  %971 = and i32 %970, 2
  %972 = icmp eq i32 %971, 0
  %973 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %966, i64 0, i32 0
  %974 = load i32, i32* %973, align 4
  br i1 %972, label %975, label %977

975:                                              ; preds = %968
  %976 = add i32 %974, -1
  store i32 %976, i32* %973, align 4
  br label %977

977:                                              ; preds = %975, %968
  %978 = phi i32 [ %976, %975 ], [ %974, %968 ]
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %980, label %981

980:                                              ; preds = %977
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %966) #15
  br label %981

981:                                              ; preds = %965, %977, %980
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %921) #15
  %982 = load i32, i32* %2, align 4
  %983 = load i32, i32* %934, align 4
  %984 = add i32 %983, -1
  %985 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %920, i32 %984) #15
  %986 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %985, i64 0, i32 3
  store i32 %982, i32* %986, align 4
  %987 = load i32, i32* %934, align 4
  %988 = add i32 %987, -1
  %989 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %920, i32 %988) #15
  %990 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %989, i64 0, i32 6
  store i32 6, i32* %990, align 8
  br label %991

991:                                              ; preds = %981, %918
  %992 = call %"class.blink::HTMLTableCaptionElement"* @_ZNK5blink16HTMLTableElement7captionEv(%"class.blink::HTMLTableElement"* nonnull %915) #15
  %993 = icmp eq %"class.blink::HTMLTableCaptionElement"* %992, null
  br i1 %993, label %1103, label %994

994:                                              ; preds = %991
  %995 = bitcast %"class.blink::AXObject"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %995) #15
  store %"class.blink::AXObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::AXObject"*), %"class.blink::AXObject"** %17, align 8
  %996 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %997 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %996, align 8
  %998 = getelementptr inbounds %"class.blink::HTMLTableCaptionElement", %"class.blink::HTMLTableCaptionElement"* %992, i64 0, i32 0, i32 0, i32 0, i32 0
  %999 = call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_4NodeE(%"class.blink::AXObjectCacheImpl"* %997, %"class.blink::Node"* %998) #15
  store %"class.blink::AXObject"* %999, %"class.blink::AXObject"** %17, align 8
  %1000 = icmp eq %"class.blink::AXObject"* %999, null
  br i1 %1000, label %1099, label %1001

1001:                                             ; preds = %994
  %1002 = bitcast %"class.blink::HeapHashSet.3867"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1002) #15
  %1003 = bitcast %"class.blink::HeapHashSet.3867"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1003, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1002, i8 0, i64 20, i1 false) #15
  %1004 = call %"class.WTF::StringImpl"* @_ZN5blink8AXObject24RecursiveTextAlternativeERKS0_bRNS_11HeapHashSetINS_6MemberIS1_EEN3WTF10MemberHashIS1_EENS6_10HashTraitsIS5_EEEE(%"class.blink::AXObject"* nonnull dereferenceable(120) %999, i1 zeroext false, %"class.blink::HeapHashSet.3867"* nonnull dereferenceable(24) %18) #15
  %1005 = ptrtoint %"class.WTF::StringImpl"* %1004 to i64
  %1006 = bitcast %"class.WTF::String"* %6 to i64*
  %1007 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %1005, i64* %1006, align 8
  %1008 = icmp eq %"class.WTF::StringImpl"* %1007, null
  br i1 %1008, label %1022, label %1009

1009:                                             ; preds = %1001
  %1010 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1007, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1011 = load atomic i32, i32* %1010 monotonic, align 4
  %1012 = and i32 %1011, 2
  %1013 = icmp eq i32 %1012, 0
  %1014 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1007, i64 0, i32 0
  %1015 = load i32, i32* %1014, align 4
  br i1 %1013, label %1016, label %1018

1016:                                             ; preds = %1009
  %1017 = add i32 %1015, -1
  store i32 %1017, i32* %1014, align 4
  br label %1018

1018:                                             ; preds = %1016, %1009
  %1019 = phi i32 [ %1017, %1016 ], [ %1015, %1009 ]
  %1020 = icmp eq i32 %1019, 0
  br i1 %1020, label %1021, label %1022

1021:                                             ; preds = %1018
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1007) #15
  br label %1022

1022:                                             ; preds = %1021, %1018, %1001
  %1023 = icmp eq %"class.blink::HeapVector.3879"* %4, null
  br i1 %1023, label %1050, label %1024

1024:                                             ; preds = %1022
  %1025 = bitcast %"class.blink::NameSourceRelatedObject"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1025) #15
  %1026 = call %"class.blink::NameSourceRelatedObject"* @_ZN5blink25MakeGarbageCollectedTraitINS_23NameSourceRelatedObjectEE4CallIJRPNS_8AXObjectERN3WTF6StringEEEEPS1_DpOT_(%"class.blink::AXObject"** nonnull dereferenceable(8) %17, %"class.WTF::String"* nonnull dereferenceable(8) %6) #15
  store %"class.blink::NameSourceRelatedObject"* %1026, %"class.blink::NameSourceRelatedObject"** %19, align 8
  %1027 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %1028 = load i32, i32* %1027, align 4
  %1029 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %1030 = load i32, i32* %1029, align 8
  %1031 = icmp eq i32 %1028, %1030
  br i1 %1031, label %1047, label %1032, !prof !3

1032:                                             ; preds = %1024
  %1033 = ptrtoint %"class.blink::NameSourceRelatedObject"* %1026 to i64
  %1034 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %1035 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %1034, align 8
  %1036 = zext i32 %1028 to i64
  %1037 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %1035, i64 %1036
  %1038 = bitcast %"class.blink::Member.3885"* %1037 to i64*
  store atomic i64 %1033, i64* %1038 monotonic, align 8
  %1039 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1044, label %1041

1041:                                             ; preds = %1032
  %1042 = bitcast %"class.blink::NameSourceRelatedObject"* %1026 to i8*
  %1043 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1042) #15
  br label %1044

1044:                                             ; preds = %1041, %1032
  %1045 = load i32, i32* %1027, align 4
  %1046 = add i32 %1045, 1
  store i32 %1046, i32* %1027, align 4
  br label %1049

1047:                                             ; preds = %1024
  %1048 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3882"* %1048, %"class.blink::NameSourceRelatedObject"** nonnull dereferenceable(8) %19) #15
  br label %1049

1049:                                             ; preds = %1044, %1047
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1025) #15
  br label %1050

1050:                                             ; preds = %1022, %1049
  br i1 %32, label %1051, label %1101

1051:                                             ; preds = %1050
  %1052 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %1053 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %1054 = load i32, i32* %1053, align 4
  %1055 = add i32 %1054, -1
  %1056 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %1052, i32 %1055) #15
  %1057 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1056, i64 0, i32 7, i32 0
  %1058 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0
  %1059 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %1057, %"class.WTF::Vector.3882"* dereferenceable(16) %1058) #15
  %1060 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %1061 = icmp eq %"class.WTF::StringImpl"* %1060, null
  br i1 %1061, label %1079, label %1062

1062:                                             ; preds = %1051
  %1063 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1060, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1064 = load atomic i32, i32* %1063 monotonic, align 4
  %1065 = and i32 %1064, 2
  %1066 = icmp eq i32 %1065, 0
  br i1 %1066, label %1067, label %1079

1067:                                             ; preds = %1062
  %1068 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1060, i64 0, i32 0
  %1069 = load i32, i32* %1068, align 4
  %1070 = zext i32 %1069 to i33
  %1071 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1070, i33 1) #15
  %1072 = extractvalue { i33, i1 } %1071, 1
  %1073 = extractvalue { i33, i1 } %1071, 0
  %1074 = icmp slt i33 %1073, 0
  %1075 = or i1 %1072, %1074
  br i1 %1075, label %1076, label %1077, !prof !3

1076:                                             ; preds = %1067
  call void @llvm.trap() #15
  unreachable

1077:                                             ; preds = %1067
  %1078 = trunc i33 %1073 to i32
  store i32 %1078, i32* %1068, align 4
  br label %1079

1079:                                             ; preds = %1077, %1062, %1051
  %1080 = ptrtoint %"class.WTF::StringImpl"* %1060 to i64
  %1081 = bitcast %"class.blink::DescriptionSource"* %1056 to i64*
  %1082 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1056, i64 0, i32 0, i32 0, i32 0
  %1083 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1082, align 8
  store i64 %1080, i64* %1081, align 8
  %1084 = icmp eq %"class.WTF::StringImpl"* %1083, null
  br i1 %1084, label %1098, label %1085

1085:                                             ; preds = %1079
  %1086 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1083, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1087 = load atomic i32, i32* %1086 monotonic, align 4
  %1088 = and i32 %1087, 2
  %1089 = icmp eq i32 %1088, 0
  %1090 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1083, i64 0, i32 0
  %1091 = load i32, i32* %1090, align 4
  br i1 %1089, label %1092, label %1094

1092:                                             ; preds = %1085
  %1093 = add i32 %1091, -1
  store i32 %1093, i32* %1090, align 4
  br label %1094

1094:                                             ; preds = %1092, %1085
  %1095 = phi i32 [ %1093, %1092 ], [ %1091, %1085 ]
  %1096 = icmp eq i32 %1095, 0
  br i1 %1096, label %1097, label %1098

1097:                                             ; preds = %1094
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1083) #15
  br label %1098

1098:                                             ; preds = %1079, %1094, %1097
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1002) #15
  br label %1099

1099:                                             ; preds = %1098, %994
  %1100 = phi i8 [ 1, %1098 ], [ %896, %994 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %995) #15
  br label %1103

1101:                                             ; preds = %1050
  %1102 = load i64, i64* %1006, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1002) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %995) #15
  br label %1510

1103:                                             ; preds = %991, %1099, %895, %901
  %1104 = phi i8 [ %896, %901 ], [ %896, %895 ], [ %1100, %1099 ], [ %896, %991 ]
  %1105 = icmp eq i32 %1, 5
  br i1 %1105, label %1284, label %1106

1106:                                             ; preds = %1103
  %1107 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %23) #15
  br i1 %1107, label %1281, label %1108

1108:                                             ; preds = %1106
  %1109 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %1110 = icmp eq %"class.blink::Node"* %1109, null
  br i1 %1110, label %1281, label %1111

1111:                                             ; preds = %1108
  %1112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1109, i64 0, i32 1
  %1113 = load i32, i32* %1112, align 8
  %1114 = and i32 %1113, 48
  %1115 = icmp eq i32 %1114, 0
  br i1 %1115, label %1116, label %1281

1116:                                             ; preds = %1111
  %1117 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSummaryTagE, align 8
  %1118 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1117, i64 0, i32 0, i32 0, i32 0
  %1119 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1118, align 8
  %1120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1109, i64 1, i32 2
  %1121 = bitcast %"class.blink::Member.318"* %1120 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1122 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1121, align 8
  %1123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1122, i64 0, i32 3, i32 0, i32 0, i32 0
  %1124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1123, align 8
  %1125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1119, i64 0, i32 3, i32 0, i32 0, i32 0
  %1126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1125, align 8
  %1127 = icmp eq %"class.WTF::StringImpl"* %1124, %1126
  br i1 %1127, label %1128, label %1281

1128:                                             ; preds = %1116
  store i32 5, i32* %2, align 4
  br i1 %32, label %1129, label %1197

1129:                                             ; preds = %1128
  %1130 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %1131 = bitcast %"class.blink::DescriptionSource"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1131) #15
  %1132 = and i8 %1104, 1
  %1133 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %20, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1133, align 8
  %1134 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %20, i64 0, i32 1
  store i8 %1132, i8* %1134, align 8
  %1135 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %20, i64 0, i32 2
  store i8 0, i8* %1135, align 1
  %1136 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %20, i64 0, i32 3
  store i32 0, i32* %1136, align 4
  %1137 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %20, i64 0, i32 4
  %1138 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE to i64*), align 8
  %1139 = bitcast %"class.blink::QualifiedName"** %1137 to i64*
  store i64 %1138, i64* %1139, align 8
  %1140 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %20, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1140, align 8
  %1141 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %20, i64 0, i32 6
  store i32 -1, i32* %1141, align 8
  %1142 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %20, i64 0, i32 7
  %1143 = bitcast %"class.blink::HeapVector.3879"* %1142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1143, i8 0, i64 16, i1 false) #15
  %1144 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %1145 = load i32, i32* %1144, align 4
  %1146 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %1147 = load i32, i32* %1146, align 8
  %1148 = icmp eq i32 %1145, %1147
  br i1 %1148, label %1158, label %1149, !prof !3

1149:                                             ; preds = %1129
  %1150 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %1151 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %1150, align 8
  %1152 = zext i32 %1145 to i64
  %1153 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1151, i64 %1152
  %1154 = bitcast %"class.blink::DescriptionSource"* %1153 to i8*
  %1155 = call %"class.blink::DescriptionSource"* @_ZN3WTF15ConstructTraitsIN5blink17DescriptionSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %1154, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %20) #15
  %1156 = load i32, i32* %1144, align 4
  %1157 = add i32 %1156, 1
  store i32 %1157, i32* %1144, align 4
  br label %1159

1158:                                             ; preds = %1129
  call void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3998"* %1130, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %20) #15
  br label %1159

1159:                                             ; preds = %1149, %1158
  %1160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1140, align 8
  %1161 = icmp eq %"class.WTF::StringImpl"* %1160, null
  br i1 %1161, label %1175, label %1162

1162:                                             ; preds = %1159
  %1163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1164 = load atomic i32, i32* %1163 monotonic, align 4
  %1165 = and i32 %1164, 2
  %1166 = icmp eq i32 %1165, 0
  %1167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1160, i64 0, i32 0
  %1168 = load i32, i32* %1167, align 4
  br i1 %1166, label %1169, label %1171

1169:                                             ; preds = %1162
  %1170 = add i32 %1168, -1
  store i32 %1170, i32* %1167, align 4
  br label %1171

1171:                                             ; preds = %1169, %1162
  %1172 = phi i32 [ %1170, %1169 ], [ %1168, %1162 ]
  %1173 = icmp eq i32 %1172, 0
  br i1 %1173, label %1174, label %1175

1174:                                             ; preds = %1171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1160) #15
  br label %1175

1175:                                             ; preds = %1174, %1171, %1159
  %1176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1133, align 8
  %1177 = icmp eq %"class.WTF::StringImpl"* %1176, null
  br i1 %1177, label %1191, label %1178

1178:                                             ; preds = %1175
  %1179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1180 = load atomic i32, i32* %1179 monotonic, align 4
  %1181 = and i32 %1180, 2
  %1182 = icmp eq i32 %1181, 0
  %1183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1176, i64 0, i32 0
  %1184 = load i32, i32* %1183, align 4
  br i1 %1182, label %1185, label %1187

1185:                                             ; preds = %1178
  %1186 = add i32 %1184, -1
  store i32 %1186, i32* %1183, align 4
  br label %1187

1187:                                             ; preds = %1185, %1178
  %1188 = phi i32 [ %1186, %1185 ], [ %1184, %1178 ]
  %1189 = icmp eq i32 %1188, 0
  br i1 %1189, label %1190, label %1191

1190:                                             ; preds = %1187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1176) #15
  br label %1191

1191:                                             ; preds = %1175, %1187, %1190
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1131) #15
  %1192 = load i32, i32* %2, align 4
  %1193 = load i32, i32* %1144, align 4
  %1194 = add i32 %1193, -1
  %1195 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %1130, i32 %1194) #15
  %1196 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1195, i64 0, i32 3
  store i32 %1192, i32* %1196, align 4
  br label %1197

1197:                                             ; preds = %1191, %1128
  %1198 = bitcast %"class.blink::HeapHashSet.3867"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1198) #15
  %1199 = bitcast %"class.blink::HeapHashSet.3867"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1199, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1198, i8 0, i64 20, i1 false) #15
  %1200 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)***
  %1201 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)**, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)*** %1200, align 8
  %1202 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)** %1201, i64 59
  %1203 = load %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)*, %"class.WTF::StringImpl"* (%"class.blink::AXNodeObject"*, %"class.blink::HeapHashSet.3867"*, i1)** %1202, align 8
  %1204 = call %"class.WTF::StringImpl"* %1203(%"class.blink::AXNodeObject"* %0, %"class.blink::HeapHashSet.3867"* nonnull dereferenceable(24) %21, i1 zeroext false) #15
  %1205 = ptrtoint %"class.WTF::StringImpl"* %1204 to i64
  %1206 = bitcast %"class.WTF::String"* %6 to i64*
  %1207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %1205, i64* %1206, align 8
  %1208 = icmp eq %"class.WTF::StringImpl"* %1207, null
  br i1 %1208, label %1225, label %1209

1209:                                             ; preds = %1197
  %1210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1211 = load atomic i32, i32* %1210 monotonic, align 4
  %1212 = and i32 %1211, 2
  %1213 = icmp eq i32 %1212, 0
  %1214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1207, i64 0, i32 0
  %1215 = load i32, i32* %1214, align 4
  br i1 %1213, label %1216, label %1218

1216:                                             ; preds = %1209
  %1217 = add i32 %1215, -1
  store i32 %1217, i32* %1214, align 4
  br label %1218

1218:                                             ; preds = %1216, %1209
  %1219 = phi i32 [ %1217, %1216 ], [ %1215, %1209 ]
  %1220 = icmp eq i32 %1219, 0
  br i1 %1220, label %1221, label %1222

1221:                                             ; preds = %1218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1207) #15
  br label %1222

1222:                                             ; preds = %1218, %1221
  %1223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %1224 = ptrtoint %"class.WTF::StringImpl"* %1223 to i64
  br label %1225

1225:                                             ; preds = %1222, %1197
  %1226 = phi i64 [ %1224, %1222 ], [ %1205, %1197 ]
  %1227 = phi %"class.WTF::StringImpl"* [ %1223, %1222 ], [ %1204, %1197 ]
  %1228 = icmp eq %"class.WTF::StringImpl"* %1227, null
  br i1 %1228, label %1278, label %1229

1229:                                             ; preds = %1225
  %1230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1227, i64 0, i32 1
  %1231 = load i32, i32* %1230, align 4
  %1232 = icmp eq i32 %1231, 0
  br i1 %1232, label %1278, label %1233

1233:                                             ; preds = %1229
  br i1 %32, label %1234, label %1280

1234:                                             ; preds = %1233
  %1235 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %1236 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %1237 = load i32, i32* %1236, align 4
  %1238 = add i32 %1237, -1
  %1239 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %1235, i32 %1238) #15
  %1240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %1241 = icmp eq %"class.WTF::StringImpl"* %1240, null
  br i1 %1241, label %1259, label %1242

1242:                                             ; preds = %1234
  %1243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1244 = load atomic i32, i32* %1243 monotonic, align 4
  %1245 = and i32 %1244, 2
  %1246 = icmp eq i32 %1245, 0
  br i1 %1246, label %1247, label %1259

1247:                                             ; preds = %1242
  %1248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1240, i64 0, i32 0
  %1249 = load i32, i32* %1248, align 4
  %1250 = zext i32 %1249 to i33
  %1251 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1250, i33 1) #15
  %1252 = extractvalue { i33, i1 } %1251, 1
  %1253 = extractvalue { i33, i1 } %1251, 0
  %1254 = icmp slt i33 %1253, 0
  %1255 = or i1 %1252, %1254
  br i1 %1255, label %1256, label %1257, !prof !3

1256:                                             ; preds = %1247
  call void @llvm.trap() #15
  unreachable

1257:                                             ; preds = %1247
  %1258 = trunc i33 %1253 to i32
  store i32 %1258, i32* %1248, align 4
  br label %1259

1259:                                             ; preds = %1257, %1242, %1234
  %1260 = ptrtoint %"class.WTF::StringImpl"* %1240 to i64
  %1261 = bitcast %"class.blink::DescriptionSource"* %1239 to i64*
  %1262 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1239, i64 0, i32 0, i32 0, i32 0
  %1263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1262, align 8
  store i64 %1260, i64* %1261, align 8
  %1264 = icmp eq %"class.WTF::StringImpl"* %1263, null
  br i1 %1264, label %1278, label %1265

1265:                                             ; preds = %1259
  %1266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1267 = load atomic i32, i32* %1266 monotonic, align 4
  %1268 = and i32 %1267, 2
  %1269 = icmp eq i32 %1268, 0
  %1270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1263, i64 0, i32 0
  %1271 = load i32, i32* %1270, align 4
  br i1 %1269, label %1272, label %1274

1272:                                             ; preds = %1265
  %1273 = add i32 %1271, -1
  store i32 %1273, i32* %1270, align 4
  br label %1274

1274:                                             ; preds = %1272, %1265
  %1275 = phi i32 [ %1273, %1272 ], [ %1271, %1265 ]
  %1276 = icmp eq i32 %1275, 0
  br i1 %1276, label %1277, label %1278

1277:                                             ; preds = %1274
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1263) #15
  br label %1278

1278:                                             ; preds = %1229, %1259, %1274, %1277, %1225
  %1279 = phi i8 [ 1, %1277 ], [ 1, %1274 ], [ 1, %1259 ], [ %1104, %1229 ], [ %1104, %1225 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1198) #15
  br label %1281

1280:                                             ; preds = %1233
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1198) #15
  br label %1510

1281:                                             ; preds = %1106, %1111, %1108, %1278, %1116
  %1282 = phi i8 [ %1104, %1116 ], [ %1279, %1278 ], [ %1104, %1108 ], [ %1104, %1111 ], [ %1104, %1106 ]
  %1283 = icmp eq i32 %1, 8
  br i1 %1283, label %1454, label %1284

1284:                                             ; preds = %1103, %1281
  %1285 = phi i8 [ %1282, %1281 ], [ %1104, %1103 ]
  store i32 7, i32* %2, align 4
  br i1 %32, label %1288, label %1286

1286:                                             ; preds = %1284
  %1287 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE, align 8
  br label %1357

1288:                                             ; preds = %1284
  %1289 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %1290 = bitcast %"class.blink::DescriptionSource"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %1290) #15
  %1291 = and i8 %1285, 1
  %1292 = load i64, i64* bitcast (%"class.blink::QualifiedName"** @_ZN5blink10html_names10kTitleAttrE to i64*), align 8
  %1293 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %22, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1293, align 8
  %1294 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %22, i64 0, i32 1
  store i8 %1291, i8* %1294, align 8
  %1295 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %22, i64 0, i32 2
  store i8 0, i8* %1295, align 1
  %1296 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %22, i64 0, i32 3
  store i32 0, i32* %1296, align 4
  %1297 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %22, i64 0, i32 4
  %1298 = bitcast %"class.blink::QualifiedName"** %1297 to i64*
  store i64 %1292, i64* %1298, align 8
  %1299 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %22, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1299, align 8
  %1300 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %22, i64 0, i32 6
  store i32 -1, i32* %1300, align 8
  %1301 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %22, i64 0, i32 7
  %1302 = bitcast %"class.blink::HeapVector.3879"* %1301 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1302, i8 0, i64 16, i1 false) #15
  %1303 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %1304 = load i32, i32* %1303, align 4
  %1305 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %1306 = load i32, i32* %1305, align 8
  %1307 = icmp eq i32 %1304, %1306
  %1308 = inttoptr i64 %1292 to %"class.blink::QualifiedName"*
  br i1 %1307, label %1318, label %1309, !prof !3

1309:                                             ; preds = %1288
  %1310 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %1311 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %1310, align 8
  %1312 = zext i32 %1304 to i64
  %1313 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1311, i64 %1312
  %1314 = bitcast %"class.blink::DescriptionSource"* %1313 to i8*
  %1315 = call %"class.blink::DescriptionSource"* @_ZN3WTF15ConstructTraitsIN5blink17DescriptionSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %1314, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %22) #15
  %1316 = load i32, i32* %1303, align 4
  %1317 = add i32 %1316, 1
  store i32 %1317, i32* %1303, align 4
  br label %1319

1318:                                             ; preds = %1288
  call void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3998"* %1289, %"class.blink::DescriptionSource"* nonnull dereferenceable(56) %22) #15
  br label %1319

1319:                                             ; preds = %1309, %1318
  %1320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1299, align 8
  %1321 = icmp eq %"class.WTF::StringImpl"* %1320, null
  br i1 %1321, label %1335, label %1322

1322:                                             ; preds = %1319
  %1323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1320, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1324 = load atomic i32, i32* %1323 monotonic, align 4
  %1325 = and i32 %1324, 2
  %1326 = icmp eq i32 %1325, 0
  %1327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1320, i64 0, i32 0
  %1328 = load i32, i32* %1327, align 4
  br i1 %1326, label %1329, label %1331

1329:                                             ; preds = %1322
  %1330 = add i32 %1328, -1
  store i32 %1330, i32* %1327, align 4
  br label %1331

1331:                                             ; preds = %1329, %1322
  %1332 = phi i32 [ %1330, %1329 ], [ %1328, %1322 ]
  %1333 = icmp eq i32 %1332, 0
  br i1 %1333, label %1334, label %1335

1334:                                             ; preds = %1331
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1320) #15
  br label %1335

1335:                                             ; preds = %1334, %1331, %1319
  %1336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1293, align 8
  %1337 = icmp eq %"class.WTF::StringImpl"* %1336, null
  br i1 %1337, label %1351, label %1338

1338:                                             ; preds = %1335
  %1339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1340 = load atomic i32, i32* %1339 monotonic, align 4
  %1341 = and i32 %1340, 2
  %1342 = icmp eq i32 %1341, 0
  %1343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1336, i64 0, i32 0
  %1344 = load i32, i32* %1343, align 4
  br i1 %1342, label %1345, label %1347

1345:                                             ; preds = %1338
  %1346 = add i32 %1344, -1
  store i32 %1346, i32* %1343, align 4
  br label %1347

1347:                                             ; preds = %1345, %1338
  %1348 = phi i32 [ %1346, %1345 ], [ %1344, %1338 ]
  %1349 = icmp eq i32 %1348, 0
  br i1 %1349, label %1350, label %1351

1350:                                             ; preds = %1347
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1336) #15
  br label %1351

1351:                                             ; preds = %1335, %1347, %1350
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %1290) #15
  %1352 = load i32, i32* %2, align 4
  %1353 = load i32, i32* %1303, align 4
  %1354 = add i32 %1353, -1
  %1355 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %1289, i32 %1354) #15
  %1356 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1355, i64 0, i32 3
  store i32 %1352, i32* %1356, align 4
  br label %1357

1357:                                             ; preds = %1286, %1351
  %1358 = phi %"class.blink::QualifiedName"* [ %1287, %1286 ], [ %1308, %1351 ]
  %1359 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)***
  %1360 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)**, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*** %1359, align 8
  %1361 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %1360, i64 131
  %1362 = load %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)*, %"class.WTF::AtomicString"* (%"class.blink::AXNodeObject"*, %"class.blink::QualifiedName"*)** %1361, align 8
  %1363 = call dereferenceable(8) %"class.WTF::AtomicString"* %1362(%"class.blink::AXNodeObject"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %1358) #15
  %1364 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1363, i64 0, i32 0, i32 0, i32 0
  %1365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1364, align 8
  %1366 = icmp eq %"class.WTF::StringImpl"* %1365, null
  br i1 %1366, label %1454, label %1367

1367:                                             ; preds = %1357
  %1368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1365, i64 0, i32 1
  %1369 = load i32, i32* %1368, align 4
  %1370 = icmp eq i32 %1369, 0
  br i1 %1370, label %1454, label %1371

1371:                                             ; preds = %1367
  %1372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1365, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1373 = load atomic i32, i32* %1372 monotonic, align 4
  %1374 = and i32 %1373, 2
  %1375 = icmp eq i32 %1374, 0
  br i1 %1375, label %1376, label %1388

1376:                                             ; preds = %1371
  %1377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1365, i64 0, i32 0
  %1378 = load i32, i32* %1377, align 4
  %1379 = zext i32 %1378 to i33
  %1380 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1379, i33 1) #15
  %1381 = extractvalue { i33, i1 } %1380, 1
  %1382 = extractvalue { i33, i1 } %1380, 0
  %1383 = icmp slt i33 %1382, 0
  %1384 = or i1 %1381, %1383
  br i1 %1384, label %1385, label %1386, !prof !3

1385:                                             ; preds = %1376
  call void @llvm.trap() #15
  unreachable

1386:                                             ; preds = %1376
  %1387 = trunc i33 %1382 to i32
  store i32 %1387, i32* %1377, align 4
  br label %1388

1388:                                             ; preds = %1386, %1371
  %1389 = ptrtoint %"class.WTF::StringImpl"* %1365 to i64
  %1390 = bitcast %"class.WTF::String"* %6 to i64*
  %1391 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %1389, i64* %1390, align 8
  %1392 = icmp eq %"class.WTF::StringImpl"* %1391, null
  br i1 %1392, label %1406, label %1393

1393:                                             ; preds = %1388
  %1394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1391, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1395 = load atomic i32, i32* %1394 monotonic, align 4
  %1396 = and i32 %1395, 2
  %1397 = icmp eq i32 %1396, 0
  %1398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1391, i64 0, i32 0
  %1399 = load i32, i32* %1398, align 4
  br i1 %1397, label %1400, label %1402

1400:                                             ; preds = %1393
  %1401 = add i32 %1399, -1
  store i32 %1401, i32* %1398, align 4
  br label %1402

1402:                                             ; preds = %1400, %1393
  %1403 = phi i32 [ %1401, %1400 ], [ %1399, %1393 ]
  %1404 = icmp eq i32 %1403, 0
  br i1 %1404, label %1405, label %1406

1405:                                             ; preds = %1402
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1391) #15
  br label %1406

1406:                                             ; preds = %1388, %1402, %1405
  br i1 %32, label %1407, label %1451

1407:                                             ; preds = %1406
  %1408 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0
  %1409 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %1410 = load i32, i32* %1409, align 4
  %1411 = add i32 %1410, -1
  %1412 = call dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"* %1408, i32 %1411) #15
  %1413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %1414 = icmp eq %"class.WTF::StringImpl"* %1413, null
  br i1 %1414, label %1432, label %1415

1415:                                             ; preds = %1407
  %1416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1413, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1417 = load atomic i32, i32* %1416 monotonic, align 4
  %1418 = and i32 %1417, 2
  %1419 = icmp eq i32 %1418, 0
  br i1 %1419, label %1420, label %1432

1420:                                             ; preds = %1415
  %1421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1413, i64 0, i32 0
  %1422 = load i32, i32* %1421, align 4
  %1423 = zext i32 %1422 to i33
  %1424 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1423, i33 1) #15
  %1425 = extractvalue { i33, i1 } %1424, 1
  %1426 = extractvalue { i33, i1 } %1424, 0
  %1427 = icmp slt i33 %1426, 0
  %1428 = or i1 %1425, %1427
  br i1 %1428, label %1429, label %1430, !prof !3

1429:                                             ; preds = %1420
  call void @llvm.trap() #15
  unreachable

1430:                                             ; preds = %1420
  %1431 = trunc i33 %1426 to i32
  store i32 %1431, i32* %1421, align 4
  br label %1432

1432:                                             ; preds = %1430, %1415, %1407
  %1433 = ptrtoint %"class.WTF::StringImpl"* %1413 to i64
  %1434 = bitcast %"class.blink::DescriptionSource"* %1412 to i64*
  %1435 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1412, i64 0, i32 0, i32 0, i32 0
  %1436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1435, align 8
  store i64 %1433, i64* %1434, align 8
  %1437 = icmp eq %"class.WTF::StringImpl"* %1436, null
  br i1 %1437, label %1453, label %1438

1438:                                             ; preds = %1432
  %1439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1440 = load atomic i32, i32* %1439 monotonic, align 4
  %1441 = and i32 %1440, 2
  %1442 = icmp eq i32 %1441, 0
  %1443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1436, i64 0, i32 0
  %1444 = load i32, i32* %1443, align 4
  br i1 %1442, label %1445, label %1447

1445:                                             ; preds = %1438
  %1446 = add i32 %1444, -1
  store i32 %1446, i32* %1443, align 4
  br label %1447

1447:                                             ; preds = %1445, %1438
  %1448 = phi i32 [ %1446, %1445 ], [ %1444, %1438 ]
  %1449 = icmp eq i32 %1448, 0
  br i1 %1449, label %1450, label %1453

1450:                                             ; preds = %1447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1436) #15
  br label %1453

1451:                                             ; preds = %1406
  %1452 = load i64, i64* %1390, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  br label %1510

1453:                                             ; preds = %1450, %1447, %1432
  store i32 0, i32* %2, align 4
  br label %1458

1454:                                             ; preds = %1357, %1367, %1281
  %1455 = phi i8 [ %1282, %1281 ], [ %1285, %1367 ], [ %1285, %1357 ]
  store i32 0, i32* %2, align 4
  %1456 = and i8 %1455, 1
  %1457 = icmp eq i8 %1456, 0
  br i1 %1457, label %1510, label %1458

1458:                                             ; preds = %1453, %1454
  %1459 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %1460 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %1459, align 8
  %1461 = getelementptr inbounds %"class.blink::HeapVector.3995", %"class.blink::HeapVector.3995"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %1462 = load i32, i32* %1461, align 4
  %1463 = zext i32 %1462 to i64
  %1464 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1460, i64 %1463
  %1465 = icmp eq i32 %1462, 0
  br i1 %1465, label %1510, label %1466

1466:                                             ; preds = %1458, %1507
  %1467 = phi %"class.blink::DescriptionSource"* [ %1508, %1507 ], [ %1460, %1458 ]
  %1468 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1467, i64 0, i32 0, i32 0, i32 0
  %1469 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1468, align 8
  %1470 = icmp eq %"class.WTF::StringImpl"* %1469, null
  br i1 %1470, label %1507, label %1471

1471:                                             ; preds = %1466
  %1472 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1467, i64 0, i32 1
  %1473 = load i8, i8* %1472, align 8, !range !2
  %1474 = icmp eq i8 %1473, 0
  br i1 %1474, label %1475, label %1507

1475:                                             ; preds = %1471
  %1476 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1467, i64 0, i32 0, i32 0, i32 0
  %1477 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1467, i64 0, i32 3
  %1478 = load i32, i32* %1477, align 4
  store i32 %1478, i32* %2, align 4
  %1479 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1467, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %1480 = load i32, i32* %1479, align 4
  %1481 = icmp eq i32 %1480, 0
  br i1 %1481, label %1486, label %1482

1482:                                             ; preds = %1475
  %1483 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1467, i64 0, i32 7, i32 0
  %1484 = getelementptr inbounds %"class.blink::HeapVector.3879", %"class.blink::HeapVector.3879"* %4, i64 0, i32 0
  %1485 = call dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"* %1484, %"class.WTF::Vector.3882"* dereferenceable(16) %1483) #15
  br label %1486

1486:                                             ; preds = %1482, %1475
  %1487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1476, align 8
  %1488 = ptrtoint %"class.WTF::StringImpl"* %1487 to i64
  %1489 = icmp eq %"class.WTF::StringImpl"* %1487, null
  br i1 %1489, label %1510, label %1490

1490:                                             ; preds = %1486
  %1491 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1492 = load atomic i32, i32* %1491 monotonic, align 4
  %1493 = and i32 %1492, 2
  %1494 = icmp eq i32 %1493, 0
  br i1 %1494, label %1495, label %1510

1495:                                             ; preds = %1490
  %1496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1487, i64 0, i32 0
  %1497 = load i32, i32* %1496, align 4
  %1498 = zext i32 %1497 to i33
  %1499 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1498, i33 1) #15
  %1500 = extractvalue { i33, i1 } %1499, 1
  %1501 = extractvalue { i33, i1 } %1499, 0
  %1502 = icmp slt i33 %1501, 0
  %1503 = or i1 %1500, %1502
  br i1 %1503, label %1504, label %1505, !prof !3

1504:                                             ; preds = %1495
  call void @llvm.trap() #15
  unreachable

1505:                                             ; preds = %1495
  %1506 = trunc i33 %1501 to i32
  store i32 %1506, i32* %1496, align 4
  br label %1510

1507:                                             ; preds = %1471, %1466
  %1508 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1467, i64 1
  %1509 = icmp eq %"class.blink::DescriptionSource"* %1508, %1464
  br i1 %1509, label %1510, label %1466

1510:                                             ; preds = %1507, %1458, %1454, %1505, %1490, %1486, %1451, %1280, %1101, %893, %655, %358, %452, %656
  %1511 = phi i64 [ %1452, %1451 ], [ %1226, %1280 ], [ %1102, %1101 ], [ %894, %893 ], [ %642, %656 ], [ %453, %452 ], [ %201, %358 ], [ %642, %655 ], [ %1488, %1486 ], [ %1488, %1490 ], [ %1488, %1505 ], [ 0, %1454 ], [ 0, %1458 ], [ 0, %1507 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #15
  %1512 = load %"class.WTF::String"*, %"class.WTF::String"** %105, align 8
  %1513 = icmp eq %"class.WTF::String"* %1512, null
  br i1 %1513, label %1547, label %1514, !prof !5

1514:                                             ; preds = %1510
  %1515 = bitcast %"class.WTF::String"* %1512 to i8*
  %1516 = load i32, i32* %107, align 4
  %1517 = icmp eq i32 %1516, 0
  br i1 %1517, label %1545, label %1518, !prof !3

1518:                                             ; preds = %1514
  %1519 = zext i32 %1516 to i64
  %1520 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1512, i64 %1519
  br label %1521

1521:                                             ; preds = %1539, %1518
  %1522 = phi %"class.WTF::String"* [ %1540, %1539 ], [ %1512, %1518 ]
  %1523 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1522, i64 0, i32 0, i32 0
  %1524 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1523, align 8
  %1525 = icmp eq %"class.WTF::StringImpl"* %1524, null
  br i1 %1525, label %1539, label %1526

1526:                                             ; preds = %1521
  %1527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1524, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1528 = load atomic i32, i32* %1527 monotonic, align 4
  %1529 = and i32 %1528, 2
  %1530 = icmp eq i32 %1529, 0
  %1531 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1524, i64 0, i32 0
  %1532 = load i32, i32* %1531, align 4
  br i1 %1530, label %1533, label %1535

1533:                                             ; preds = %1526
  %1534 = add i32 %1532, -1
  store i32 %1534, i32* %1531, align 4
  br label %1535

1535:                                             ; preds = %1533, %1526
  %1536 = phi i32 [ %1534, %1533 ], [ %1532, %1526 ]
  %1537 = icmp eq i32 %1536, 0
  br i1 %1537, label %1538, label %1539

1538:                                             ; preds = %1535
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1524) #15
  br label %1539

1539:                                             ; preds = %1538, %1535, %1521
  %1540 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1522, i64 1
  %1541 = icmp eq %"class.WTF::String"* %1540, %1520
  br i1 %1541, label %1542, label %1521

1542:                                             ; preds = %1539
  store i32 0, i32* %107, align 4
  %1543 = bitcast %"class.WTF::Vector.630"* %8 to i8**
  %1544 = load i8*, i8** %1543, align 8
  br label %1545

1545:                                             ; preds = %1542, %1514
  %1546 = phi i8* [ %1544, %1542 ], [ %1515, %1514 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1546) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %105, align 8
  br label %1547

1547:                                             ; preds = %1510, %1545
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #15
  br label %1548

1548:                                             ; preds = %100, %1547
  %1549 = phi i64 [ %1511, %1547 ], [ 0, %100 ]
  %1550 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %1551 = icmp eq %"class.WTF::StringImpl"* %1550, null
  br i1 %1551, label %1565, label %1552

1552:                                             ; preds = %1548
  %1553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1550, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1554 = load atomic i32, i32* %1553 monotonic, align 4
  %1555 = and i32 %1554, 2
  %1556 = icmp eq i32 %1555, 0
  %1557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1550, i64 0, i32 0
  %1558 = load i32, i32* %1557, align 4
  br i1 %1556, label %1559, label %1561

1559:                                             ; preds = %1552
  %1560 = add i32 %1558, -1
  store i32 %1560, i32* %1557, align 4
  br label %1561

1561:                                             ; preds = %1559, %1552
  %1562 = phi i32 [ %1560, %1559 ], [ %1558, %1552 ]
  %1563 = icmp eq i32 %1562, 0
  br i1 %1563, label %1564, label %1565

1564:                                             ; preds = %1561
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1550) #15
  br label %1565

1565:                                             ; preds = %1548, %1561, %1564
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  br label %1566

1566:                                             ; preds = %5, %25, %1565
  %1567 = phi i64 [ %1549, %1565 ], [ 0, %25 ], [ 0, %5 ]
  %1568 = inttoptr i64 %1567 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %1568
}

declare zeroext i1 @_ZN5blink8AXObject21ElementsFromAttributeEPNS_7ElementERNS_10HeapVectorINS_6MemberIS1_EELj0EEERKNS_13QualifiedNameERN3WTF6VectorINSB_6StringELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Element"*, %"class.blink::HeapVector.365"* dereferenceable(16), %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink17AXObjectCacheImpl22UpdateReverseRelationsEPKNS_8AXObjectERKN3WTF6VectorINS4_6StringELj0ENS4_18PartitionAllocatorEEE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObject"*, %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject11PlaceholderEN2ax5mojom8NameFromE(%"class.blink::AXNodeObject"*, i32) unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 6
  br i1 %3, label %91, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %6, label %91, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %91, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 48
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %91

16:                                               ; preds = %11
  %17 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %5) #15
  br i1 %17, label %42, label %18

18:                                               ; preds = %16
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 12
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %42

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::Node"* %19 to %"class.blink::Element"*
  %28 = bitcast %"class.blink::Node"* %19 to i1 (%"class.blink::Element"*)***
  %29 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %29, i64 126
  %31 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::Element"* nonnull %27) #15
  br i1 %32, label %33, label %42

33:                                               ; preds = %26
  %34 = bitcast %"class.blink::Node"* %19 to %"class.blink::TextControlElement"*
  %35 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement19StrippedPlaceholderEv(%"class.blink::TextControlElement"* nonnull %34) #15
  %36 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %91

42:                                               ; preds = %21, %16, %26, %18, %33, %38
  %43 = phi i64 [ %36, %38 ], [ %36, %33 ], [ 0, %18 ], [ 0, %26 ], [ 0, %16 ], [ 0, %21 ]
  %44 = bitcast %"class.blink::AXNodeObject"* %0 to %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)***
  %45 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)**, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %45, i64 5
  %47 = load %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)*, %"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)** %46, align 8
  %48 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %47(%"class.blink::AXObject"* %5, i32 10) #15
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %74, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %74, label %56

56:                                               ; preds = %52
  %57 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #15
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %62
  tail call void @llvm.trap() #15
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %42, %52, %72, %56
  %75 = phi i64 [ %57, %56 ], [ %57, %72 ], [ 0, %52 ], [ 0, %42 ]
  %76 = inttoptr i64 %43 to %"class.WTF::StringImpl"*
  %77 = icmp eq i64 %43, 0
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #15
  br label %91

91:                                               ; preds = %38, %4, %90, %87, %74, %11, %7, %2
  %92 = phi i64 [ 0, %2 ], [ 0, %7 ], [ 0, %11 ], [ %75, %74 ], [ %75, %87 ], [ %75, %90 ], [ 0, %4 ], [ %36, %38 ]
  %93 = inttoptr i64 %92 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %93
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12AXNodeObject5TitleEN2ax5mojom8NameFromE(%"class.blink::AXNodeObject"*, i32) unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 8
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %6 = tail call %"class.blink::Element"* @_ZNK5blink8AXObject10GetElementEv(%"class.blink::AXObject"* %5) #15
  %7 = icmp eq %"class.blink::Element"* %6, null
  br i1 %7, label %33, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.blink::Element"* %6 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %10, i64 108
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::Element"* nonnull %6) #15
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %33, label %15

15:                                               ; preds = %8
  %16 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %33

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #15
  br label %33

33:                                               ; preds = %8, %32, %29, %4, %15, %2
  %34 = phi i64 [ 0, %2 ], [ %16, %15 ], [ 0, %4 ], [ 0, %29 ], [ 0, %32 ], [ 0, %8 ]
  %35 = inttoptr i64 %34 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %35
}

declare %"class.WTF::StringImpl"* @_ZNK5blink18TextControlElement19StrippedPlaceholderEv(%"class.blink::TextControlElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject20CanSetValueAttributeEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12AXNodeObject25UseNameFromSelectedOptionEv(%"class.blink::AXNodeObject"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  %3 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* %2) #15
  switch i32 %3, label %27 [
    i32 21, label %28
    i32 22, label %28
    i32 113, label %28
    i32 138, label %4
  ]

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #15
  br i1 %5, label %28, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp ne i32 %11, 0
  %13 = icmp eq %"class.blink::Node"* %8, null
  %14 = or i1 %13, %12
  br i1 %14, label %28, label %15

15:                                               ; preds = %6
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.318"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  br label %28

27:                                               ; preds = %1
  br label %28

28:                                               ; preds = %15, %6, %4, %1, %1, %1, %27
  %29 = phi i1 [ false, %27 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ %26, %15 ], [ false, %6 ], [ false, %4 ]
  ret i1 %29
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject12ComputedNameEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12AXNodeObject5TraceEPNS_7VisitorE(%"class.blink::AXNodeObject"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.318"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #15
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::AXNodeObject", %"class.blink::AXNodeObject"* %0, i64 0, i32 0
  tail call void @_ZNK5blink8AXObject5TraceEPNS_7VisitorE(%"class.blink::AXObject"* %14, %"class.blink::Visitor"* %1) #15
  ret void
}

declare void @_ZNK5blink8AXObject5TraceEPNS_7VisitorE(%"class.blink::AXObject"*, %"class.blink::Visitor"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb(%"class.blink::AXObject"*, i32, i8* dereferenceable(1)) unnamed_addr #1

declare %"class.blink::AccessibleNode"* @_ZNK5blink8AXObject17GetAccessibleNodeEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsImageMapLinkEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject16IsAXLayoutObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsAXInlineTextBoxEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject6IsListEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject11IsAXListBoxEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsAXListBoxOptionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject10IsMenuListEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject16IsMenuListOptionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsMenuListPopupEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject12IsMockObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsAXRadioInputEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsValidationMessageEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsVirtualObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject20IsLineBreakingObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject8IsLinkedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject7IsModalEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject22IsSelectedOptionActiveEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsNotUserSelectableEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsVisibleEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsVisitedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.3130"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject12GetListStyleEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject10NextOnLineEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject14PreviousOnLineEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXObject"*, %"class.WTF::Vector.4002"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink8AXObject17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_(%"class.blink::AXObject"*, %"class.WTF::Vector.4002"* dereferenceable(16), %"class.WTF::Vector.4002"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10TextLengthEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject21TextOffsetInContainerEi(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject16LiveRegionStatusEv(%"class.blink::AXObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject18LiveRegionRelevantEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE(%"class.blink::AXObject"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

declare void @_ZNK5blink8AXObject13ClearChildrenEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject12RootScrollerEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink8AXObject15GetLayoutObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject11IsDataTableEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink8AXObject11ColumnCountEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject8RowCountEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.2999"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.2999"* dereferenceable(16)) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject19CellForColumnAndRowEjj(%"class.blink::AXObject"*, i32, i32) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject11ColumnIndexEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject8RowIndexEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10ColumnSpanEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject7RowSpanEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject16GetSortDirectionEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12HeaderObjectEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScrollableArea"* @_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ScrollableArea"* null
}

declare zeroext i1 @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject19OnNativeClickActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject25OnNativeSetSelectedActionEb(%"class.blink::AXObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE(%"class.blink::AXObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7DecimalC1ERKS0_(%"class.blink::Decimal"*, %"class.blink::Decimal"* dereferenceable(24)) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare void @_ZN5blink13KeyboardEventC1ERKNS_16WebKeyboardEventEPNS_14LocalDOMWindowEb(%"class.blink::KeyboardEvent"*, %"class.blink::WebKeyboardEvent"* dereferenceable(80), %"class.blink::LocalDOMWindow"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i64 0, i64 0), i8* %21, i8* %22) #15
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.38, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #15
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #15
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #15
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink20DisplayLockUtilities32IsInUnlockedOrActivatableSubtreeERKNS_4NodeENS_27DisplayLockActivationReasonE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element22HasElementFlagInternalENS_12ElementFlagsE(%"class.blink::Element"*, i32) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink26LayoutTreeBuilderTraversal15PreviousSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS4_S6_S7_EERKNS1_17HTMLQualifiedNameESE_EENS_18HashTableAddResultIS8_S2_EEOT0_OT1_(%"class.WTF::HashTable.3149"*, %"class.blink::HTMLQualifiedName"* dereferenceable(8), %"class.blink::HTMLQualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = icmp eq %"class.blink::QualifiedName"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.3149"* %0, %"class.blink::QualifiedName"* null)
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::QualifiedName"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 16777215
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %17) #15
  %24 = load i32, i32* %18, align 4
  %25 = and i32 %23, 16777215
  %26 = and i32 %24, -16777216
  %27 = or i32 %26, %25
  store i32 %27, i32* %18, align 4
  br label %28

28:                                               ; preds = %10, %22
  %29 = phi i32 [ %20, %10 ], [ %25, %22 ]
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %31
  %33 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %33, i64 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %35, %37
  br i1 %38, label %94, label %39

39:                                               ; preds = %28
  %40 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %16, align 8
  %41 = xor i32 %29, -1
  %42 = lshr i32 %29, 23
  %43 = add nsw i32 %42, %41
  %44 = shl i32 %43, 12
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 7
  %47 = xor i32 %46, %45
  %48 = shl i32 %47, 2
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 20
  %51 = xor i32 %50, %49
  %52 = or i32 %51, 1
  %53 = zext i32 %52 to i64
  br label %54

54:                                               ; preds = %39, %65
  %55 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %35, %39 ], [ %73, %65 ]
  %56 = phi %"class.blink::QualifiedName"* [ %32, %39 ], [ %71, %65 ]
  %57 = phi %"class.blink::QualifiedName"* [ null, %39 ], [ %66, %65 ]
  %58 = phi i64 [ %31, %39 ], [ %70, %65 ]
  %59 = phi i64 [ 0, %39 ], [ %68, %65 ]
  %60 = bitcast %"class.blink::QualifiedName"* %56 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %65, label %63

63:                                               ; preds = %54
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %55, %40
  br i1 %64, label %136, label %65

65:                                               ; preds = %54, %63
  %66 = phi %"class.blink::QualifiedName"* [ %57, %63 ], [ %56, %54 ]
  %67 = icmp eq i64 %59, 0
  %68 = select i1 %67, i64 %53, i64 %59
  %69 = add i64 %68, %58
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 %70
  %72 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %72, align 8
  %74 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %73, %37
  br i1 %74, label %75, label %54

75:                                               ; preds = %65
  %76 = icmp eq %"class.blink::QualifiedName"* %66, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %37, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %79 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %37, null
  br i1 %79, label %87, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 16777216
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %86) #15
  br label %87

87:                                               ; preds = %77, %80, %85
  %88 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 2147483647
  %91 = and i32 %90, 2147483647
  %92 = and i32 %89, -2147483648
  %93 = or i32 %91, %92
  store i32 %93, i32* %88, align 8
  br label %94

94:                                               ; preds = %28, %75, %87
  %95 = phi %"class.blink::QualifiedName"* [ %66, %87 ], [ %71, %75 ], [ %32, %28 ]
  %96 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %2, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, 16777216
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %105) #15
  br label %106

106:                                              ; preds = %104, %99, %94
  %107 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %97 to i64
  %108 = bitcast %"class.blink::QualifiedName"* %95 to i64*
  %109 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %95, i64 0, i32 0, i32 0
  %110 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %109, align 8
  store i64 %107, i64* %108, align 8
  %111 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %110, null
  br i1 %111, label %124, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 16777216
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %124

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %118) #15
  %119 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %117
  tail call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %110) #15
  %123 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %110 to i8*
  tail call void @free(i8* %123) #15
  br label %124

124:                                              ; preds = %106, %112, %117, %122
  %125 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 4
  %128 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, %127
  %131 = shl i32 %130, 1
  %132 = load i32, i32* %12, align 8
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %136, label %134

134:                                              ; preds = %124
  %135 = tail call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.3149"* %0, %"class.blink::QualifiedName"* %95)
  br label %136

136:                                              ; preds = %63, %124, %134
  %137 = phi i8 [ 1, %124 ], [ 1, %134 ], [ 0, %63 ]
  %138 = phi %"class.blink::QualifiedName"* [ %95, %124 ], [ %135, %134 ], [ %56, %63 ]
  %139 = insertvalue { %"class.blink::QualifiedName"*, i8 } undef, %"class.blink::QualifiedName"* %138, 0
  %140 = insertvalue { %"class.blink::QualifiedName"*, i8 } %139, i8 %137, 1
  ret { %"class.blink::QualifiedName"*, i8 } %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.3149"*, %"class.blink::QualifiedName"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.40, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13QualifiedNameEEEPKcv, i64 0, i64 0)) #15
  %36 = bitcast i8* %35 to %"class.blink::QualifiedName"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %31
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %39, i64 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %53, %38
  %42 = phi i64 [ 0, %38 ], [ %54, %53 ]
  %43 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %36, i64 %42, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %43, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %45 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %43, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = and i32 %48, 16777216
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %43, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %52) #15
  br label %53

53:                                               ; preds = %51, %46, %41
  %54 = add nuw nsw i64 %42, 1
  %55 = icmp eq i64 %54, %33
  br i1 %55, label %56, label %41

56:                                               ; preds = %53, %31
  %57 = call %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.3149"* %0, %"class.blink::QualifiedName"* %36, i32 %32, %"class.blink::QualifiedName"* %1) #15
  ret %"class.blink::QualifiedName"* %57
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::QualifiedName"* @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8RehashToEPS2_jS9_(%"class.WTF::HashTable.3149"*, %"class.blink::QualifiedName"*, i32, %"class.blink::QualifiedName"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3149", align 8
  %6 = bitcast %"class.WTF::HashTable.3149"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3149"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.blink::QualifiedName"* %1, %"class.blink::QualifiedName"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.blink::QualifiedName"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.3149"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.3149"* %5 to i64*
  br label %30

21:                                               ; preds = %4
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %25 = ptrtoint %"class.blink::QualifiedName"* %24 to i64
  br label %59

26:                                               ; preds = %93
  %27 = bitcast %"class.WTF::HashTable.3149"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.WTF::HashTable.3149"* %0 to i64*
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64* [ %20, %16 ], [ %27, %26 ]
  %32 = phi i64* [ %18, %16 ], [ %29, %26 ]
  %33 = phi i64 [ %17, %16 ], [ %28, %26 ]
  %34 = phi i64 [ %19, %16 ], [ %94, %26 ]
  %35 = phi %"class.blink::QualifiedName"* [ null, %16 ], [ %97, %26 ]
  %36 = phi i32 [ 0, %16 ], [ %95, %26 ]
  store atomic i64 %33, i64* %32 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %34, i64* %31, align 8
  store i32 %36, i32* %8, align 8
  %37 = inttoptr i64 %34 to %"class.blink::QualifiedName"*
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %30
  %40 = icmp eq i32 %36, 0
  br i1 %40, label %53, label %41

41:                                               ; preds = %39
  %42 = zext i32 %36 to i64
  br label %43

43:                                               ; preds = %50, %41
  %44 = phi i64 [ 0, %41 ], [ %51, %50 ]
  %45 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 %44
  %46 = bitcast %"class.blink::QualifiedName"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %50, label %49

49:                                               ; preds = %43
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %45) #15
  br label %50

50:                                               ; preds = %49, %43
  %51 = add nuw nsw i64 %44, 1
  %52 = icmp eq i64 %51, %42
  br i1 %52, label %53, label %43

53:                                               ; preds = %50, %39
  %54 = inttoptr i64 %34 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #15
  store atomic i64 0, i64* %31 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %55

55:                                               ; preds = %30, %53
  %56 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, -2147483648
  store i32 %58, i32* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"class.blink::QualifiedName"* %35

59:                                               ; preds = %21, %93
  %60 = phi i64 [ %25, %21 ], [ %94, %93 ]
  %61 = phi i32 [ %13, %21 ], [ %95, %93 ]
  %62 = phi %"class.blink::QualifiedName"* [ %24, %21 ], [ %96, %93 ]
  %63 = phi %"class.blink::QualifiedName"* [ null, %21 ], [ %97, %93 ]
  %64 = phi i32 [ 0, %21 ], [ %98, %93 ]
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %62, i64 %65
  %67 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %70 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, %69
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %68, inttoptr (i64 -1 to %"class.blink::QualifiedName::QualifiedNameImpl"*)
  %72 = or i1 %71, %70
  br i1 %72, label %93, label %73

73:                                               ; preds = %59
  %74 = call { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.3149"* nonnull %5, %"class.blink::QualifiedName"* dereferenceable(8) %66) #15
  %75 = extractvalue { %"class.blink::QualifiedName"*, i8 } %74, 0
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %75) #15
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %67, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %75, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %76, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %76, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 16777216
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %85) #15
  br label %86

86:                                               ; preds = %73, %79, %84
  %87 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %15, align 8
  %88 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %87, i64 %65
  %89 = icmp eq %"class.blink::QualifiedName"* %88, %3
  %90 = select i1 %89, %"class.blink::QualifiedName"* %75, %"class.blink::QualifiedName"* %63
  %91 = load i32, i32* %12, align 8
  %92 = ptrtoint %"class.blink::QualifiedName"* %87 to i64
  br label %93

93:                                               ; preds = %59, %86
  %94 = phi i64 [ %60, %59 ], [ %92, %86 ]
  %95 = phi i32 [ %61, %59 ], [ %91, %86 ]
  %96 = phi %"class.blink::QualifiedName"* [ %62, %59 ], [ %87, %86 ]
  %97 = phi %"class.blink::QualifiedName"* [ %63, %59 ], [ %90, %86 ]
  %98 = add i32 %64, 1
  %99 = icmp eq i32 %98, %95
  br i1 %99, label %26, label %59
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::QualifiedName"*, i8 } @_ZN3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE16LookupForWritingERKS2_(%"class.WTF::HashTable.3149"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 16777215
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %10) #15
  %17 = load i32, i32* %11, align 4
  %18 = and i32 %16, 16777215
  %19 = and i32 %17, -16777216
  %20 = or i32 %19, %18
  store i32 %20, i32* %11, align 4
  br label %21

21:                                               ; preds = %15, %2
  %22 = phi i32 [ %13, %2 ], [ %18, %15 ]
  %23 = and i32 %22, %7
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %24
  %26 = ptrtoint %"class.blink::QualifiedName"* %25 to i64
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %25, i64 0, i32 0, i32 0
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %21
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %35 = xor i32 %22, -1
  %36 = lshr i32 %22, 23
  %37 = add nsw i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %56

48:                                               ; preds = %68
  %49 = ptrtoint %"class.blink::QualifiedName"* %74 to i64
  br label %50

50:                                               ; preds = %48, %21
  %51 = phi i64 [ %26, %21 ], [ %49, %48 ]
  %52 = phi %"class.blink::QualifiedName"* [ null, %21 ], [ %69, %48 ]
  %53 = icmp eq %"class.blink::QualifiedName"* %52, null
  %54 = ptrtoint %"class.blink::QualifiedName"* %52 to i64
  %55 = select i1 %53, i64 %51, i64 %54
  br label %79

56:                                               ; preds = %68, %33
  %57 = phi %"class.blink::QualifiedName"* [ null, %33 ], [ %69, %68 ]
  %58 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %29, %33 ], [ %77, %68 ]
  %59 = phi i64 [ %26, %33 ], [ %75, %68 ]
  %60 = phi %"class.blink::QualifiedName"* [ %25, %33 ], [ %74, %68 ]
  %61 = phi i64 [ %24, %33 ], [ %73, %68 ]
  %62 = phi i64 [ 0, %33 ], [ %71, %68 ]
  %63 = bitcast %"class.blink::QualifiedName"* %60 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, inttoptr (i64 -1 to i8*)
  br i1 %65, label %68, label %66

66:                                               ; preds = %56
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %58, %34
  br i1 %67, label %79, label %68

68:                                               ; preds = %66, %56
  %69 = phi %"class.blink::QualifiedName"* [ %57, %66 ], [ %60, %56 ]
  %70 = icmp eq i64 %62, 0
  %71 = select i1 %70, i64 %47, i64 %62
  %72 = add i64 %71, %61
  %73 = and i64 %72, %8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %73
  %75 = ptrtoint %"class.blink::QualifiedName"* %74 to i64
  %76 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %74, i64 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %77, %31
  br i1 %78, label %48, label %56

79:                                               ; preds = %66, %50
  %80 = phi i64 [ %55, %50 ], [ %59, %66 ]
  %81 = phi i8 [ 0, %50 ], [ 1, %66 ]
  %82 = inttoptr i64 %80 to %"class.blink::QualifiedName"*
  %83 = insertvalue { %"class.blink::QualifiedName"*, i8 } undef, %"class.blink::QualifiedName"* %82, 0
  %84 = insertvalue { %"class.blink::QualifiedName"*, i8 } %83, i8 %81, 1
  ret { %"class.blink::QualifiedName"*, i8 } %84
}

declare i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16EventListenerMap8ContainsERKN3WTF12AtomicStringE(%"class.blink::EventListenerMap"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node26IsUserActionElementHoveredEv(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"**
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = icmp eq %"class.blink::AXObject"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #15
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #15
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 -1, i32 14
  %20 = bitcast %"class.blink::Member.3006"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #15
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !3

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #15
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN5blink18ImageBitmapOptionsC1Ev(%"class.blink::ImageBitmapOptions"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #8

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas13drawImageRectEPK7SkImageRK6SkRectRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

declare void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"*) local_unnamed_addr #1

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.3243"*, i8* dereferenceable(1)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3243"* %0, i32 %5) #15
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3243"* %0, i32 %5) #15
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3243"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #15
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3243"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.3243"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3243"* %0, i32 %27) #15
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3243"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.3243"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.3243"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #15
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3244"* %18, i8* nonnull %6) #15
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #15
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #15
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !5

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #15
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !5

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3244"* %46, i8* %42) #15
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.3243"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.3243", %"class.WTF::Vector.3243"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.48, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #15
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.3244"*, i8*) local_unnamed_addr #10 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #15
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.3248"*, i16* dereferenceable(2)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3248"* %0, i32 %5) #15
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3248"* %0, i32 %5) #15
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3248"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #15
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #15
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3248"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.3248"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3248"* %0, i32 %27) #15
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3248"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.3248"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.3248"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #15
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3249"* %19, i16* nonnull %6) #15
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #15
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #15
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !5

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #15
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3249"* %53, i16* %48) #15
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.3248"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.48, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.3249"*, i16*) local_unnamed_addr #10 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF10StringImpl29ContainsOnlyWhitespaceOrEmptyEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink14HTMLCollection6lengthEv(%"class.blink::HTMLCollection"*) local_unnamed_addr #1

declare %"class.blink::HTMLMapElement"* @_ZNK5blink11LayoutImage8ImageMapEv(%"class.blink::LayoutImage"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14AccessibleNodeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.3971"*, %"class.WTF::Vector.3971"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3971", %"class.WTF::Vector.3971"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.3971", %"class.WTF::Vector.3971"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.3974"* null, %"class.blink::Member.3974"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3971", %"class.WTF::Vector.3971"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14AccessibleNodeEEEEEmm(i64 %9) #15
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #15
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.3971"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.3974"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #15
  %22 = load %"class.blink::Member.3974"*, %"class.blink::Member.3974"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.3974"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.3971", %"class.WTF::Vector.3971"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.3971", %"class.WTF::Vector.3971"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.3971", %"class.WTF::Vector.3971"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.3974"*, %"class.blink::Member.3974"** %28, align 8
  %30 = icmp ne %"class.blink::Member.3974"* %24, null
  %31 = icmp ne %"class.blink::Member.3974"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !5

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.3974"* %24 to i8*
  %37 = bitcast %"class.blink::Member.3974"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #15
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.3974"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.3974"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.3974", %"class.blink::Member.3974"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14AccessibleNodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.51, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.53, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14AccessibleNodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3974"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3974", %"class.blink::Member.3974"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3974"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv) #15
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14AccessibleNodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14AccessibleNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AccessibleNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::AccessibleNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AccessibleNode"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.630"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #15
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #15
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #15
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #15
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #15
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #15
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #17
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #15
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #15
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #17
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #15
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.368"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.368"* %0, i32 %14) #15
  %15 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %16, i64 %18
  %20 = bitcast %"class.blink::Element"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.343"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #15
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.368"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %8, align 8
  %10 = icmp eq %"class.blink::Member.343"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %11) #15
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4222"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #15
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4222"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4222", %"class.blink::HeapVectorBacking.4222"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #15
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %8, align 8
  %26 = icmp eq %"class.blink::Member.343"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.343"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #15
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i64 0, i64 0)) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #15
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.368"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.368"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #15
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #15
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %14) #15
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4222"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #15
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4222"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4222"* %17, null
  %23 = icmp ne %"class.blink::Member.343"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.343"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4222", %"class.blink::HeapVectorBacking.4222"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #15
  %33 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #15
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #15
  %42 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4222", %"class.blink::HeapVectorBacking.4222"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.51, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4222"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.53, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #15
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.4222"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.4222"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.343"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.343"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::IgnoredReason"* @_ZN3WTF15ConstructTraitsIN5blink13IgnoredReasonENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::IgnoredReason"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::IgnoredReason"*
  %4 = bitcast i8* %0 to i32*
  %5 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %1, i64 0, i32 1
  %9 = bitcast %"class.blink::Member.3136"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #15
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !3

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #15
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 9
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 13
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %32, align 8
  %34 = load atomic i64, i64* %11 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %33, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to i8*
  %39 = bitcast %"class.blink::MarkingVisitor"* %33 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %37, i8* nonnull %38, i8* %38, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #15
  %43 = load i64, i64* %29, align 8
  br label %44

44:                                               ; preds = %36, %28
  %45 = phi i64 [ %31, %28 ], [ %43, %36 ]
  %46 = add i64 %45, -1
  store i64 %46, i64* %29, align 8
  br label %47

47:                                               ; preds = %2, %21, %44
  ret %"class.blink::IgnoredReason"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3133"*, %"class.blink::IgnoredReason"* dereferenceable(16)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %6, align 8
  %8 = icmp ugt %"class.blink::IgnoredReason"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %7, i64 %10
  %12 = icmp ugt %"class.blink::IgnoredReason"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3133"* %0, i32 %22) #15
  %23 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::IgnoredReason"* %1 to i64
  %26 = ptrtoint %"class.blink::IgnoredReason"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3133"* %0, i32 %37) #15
  %38 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::IgnoredReason"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::IgnoredReason"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %41, i64 %44
  %46 = bitcast %"class.blink::IgnoredReason"* %45 to i8*
  %47 = tail call %"class.blink::IgnoredReason"* @_ZN3WTF15ConstructTraitsIN5blink13IgnoredReasonENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::IgnoredReason"* dereferenceable(16) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AXObject"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3133"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %8, align 8
  %10 = icmp eq %"class.blink::IgnoredReason"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm(i64 %11) #15
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 4
  %15 = tail call %"class.blink::HeapVectorBacking.4236"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #15
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4236"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3133"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4236", %"class.blink::HeapVectorBacking.4236"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #15
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %8, align 8
  %26 = icmp eq %"class.blink::IgnoredReason"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::IgnoredReason"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #15
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 4
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i64 0, i64 0)) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #15
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3133"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13IgnoredReasonELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3133"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %67

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.3133"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %64, label %14

14:                                               ; preds = %4, %60
  %15 = phi %"class.blink::IgnoredReason"* [ %62, %60 ], [ %6, %4 ]
  %16 = phi %"class.blink::IgnoredReason"* [ %61, %60 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %15, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %16, i64 0, i32 1
  %21 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %15, i64 0, i32 1
  %22 = bitcast %"class.blink::Member.3136"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::Member.3136"* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %60, label %27

27:                                               ; preds = %14
  %28 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %29 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %28, i64 0, i32 1
  %30 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %29) #15
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %34, !prof !3

32:                                               ; preds = %27
  %33 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %29, i8* %33) #15
  br label %34

34:                                               ; preds = %32, %27
  %35 = phi i8* [ %33, %32 ], [ %30, %27 ]
  %36 = bitcast i8* %35 to %"class.blink::ThreadState"**
  %37 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 9
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %60, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 13
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %45, align 8
  %47 = load atomic i64, i64* %24 monotonic, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %46, i64 0, i32 0, i32 0
  %51 = inttoptr i64 %47 to i8*
  %52 = bitcast %"class.blink::MarkingVisitor"* %46 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, i64 5
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, align 8
  tail call void %55(%"class.blink::Visitor"* %50, i8* nonnull %51, i8* %51, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #15
  %56 = load i64, i64* %42, align 8
  br label %57

57:                                               ; preds = %49, %41
  %58 = phi i64 [ %44, %41 ], [ %56, %49 ]
  %59 = add i64 %58, -1
  store i64 %59, i64* %42, align 8
  br label %60

60:                                               ; preds = %14, %34, %57
  %61 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %16, i64 1
  %62 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %15, i64 1
  %63 = icmp eq %"class.blink::IgnoredReason"* %62, %10
  br i1 %63, label %64, label %14

64:                                               ; preds = %60, %4
  %65 = bitcast %"class.blink::IgnoredReason"* %6 to i8*
  %66 = shl nuw nsw i64 %9, 4
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %65, i64 %66) #15
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %65) #15
  br label %168

67:                                               ; preds = %2
  %68 = zext i32 %1 to i64
  %69 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm(i64 %68) #15
  %70 = lshr i64 %69, 4
  %71 = tail call %"class.blink::HeapVectorBacking.4236"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %70) #15
  %72 = ptrtoint %"class.blink::HeapVectorBacking.4236"* %71 to i64
  %73 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::IgnoredReason"*, %"class.blink::IgnoredReason"** %73, align 8
  %75 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %74, i64 %77
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %67
  %81 = bitcast %"class.blink::IgnoredReason"* %74 to i8*
  %82 = bitcast %"class.WTF::Vector.3133"* %0 to i8**
  br label %155

83:                                               ; preds = %67
  %84 = bitcast %"class.blink::HeapVectorBacking.4236"* %71 to %"class.blink::IgnoredReason"*
  %85 = shl nuw nsw i64 %77, 4
  %86 = add nsw i64 %85, -16
  %87 = lshr exact i64 %86, 4
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %107, label %91

91:                                               ; preds = %83, %91
  %92 = phi %"class.blink::IgnoredReason"* [ %104, %91 ], [ %74, %83 ]
  %93 = phi %"class.blink::IgnoredReason"* [ %103, %91 ], [ %84, %83 ]
  %94 = phi i64 [ %105, %91 ], [ %89, %83 ]
  %95 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %93, i64 0, i32 0
  %96 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %92, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  store i32 %97, i32* %95, align 8
  %98 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %93, i64 0, i32 1
  %99 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %92, i64 0, i32 1
  %100 = bitcast %"class.blink::Member.3136"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.blink::Member.3136"* %98 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %93, i64 1
  %104 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %92, i64 1
  %105 = add i64 %94, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %91, !llvm.loop !14

107:                                              ; preds = %91, %83
  %108 = phi %"class.blink::IgnoredReason"* [ %74, %83 ], [ %104, %91 ]
  %109 = phi %"class.blink::IgnoredReason"* [ %84, %83 ], [ %103, %91 ]
  %110 = icmp ult i64 %86, 48
  br i1 %110, label %149, label %111

111:                                              ; preds = %107, %111
  %112 = phi %"class.blink::IgnoredReason"* [ %147, %111 ], [ %108, %107 ]
  %113 = phi %"class.blink::IgnoredReason"* [ %146, %111 ], [ %109, %107 ]
  %114 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 0, i32 0
  %115 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  store i32 %116, i32* %114, align 8
  %117 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 0, i32 1
  %118 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 0, i32 1
  %119 = bitcast %"class.blink::Member.3136"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.blink::Member.3136"* %117 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 1, i32 0
  %123 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 1, i32 0
  %124 = load i32, i32* %123, align 8
  store i32 %124, i32* %122, align 8
  %125 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 1, i32 1
  %126 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 1, i32 1
  %127 = bitcast %"class.blink::Member.3136"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.blink::Member.3136"* %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 2, i32 0
  %131 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 2, i32 0
  %132 = load i32, i32* %131, align 8
  store i32 %132, i32* %130, align 8
  %133 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 2, i32 1
  %134 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 2, i32 1
  %135 = bitcast %"class.blink::Member.3136"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.blink::Member.3136"* %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 3, i32 0
  %139 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 3, i32 0
  %140 = load i32, i32* %139, align 8
  store i32 %140, i32* %138, align 8
  %141 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 3, i32 1
  %142 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 3, i32 1
  %143 = bitcast %"class.blink::Member.3136"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.blink::Member.3136"* %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %113, i64 4
  %147 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %112, i64 4
  %148 = icmp eq %"class.blink::IgnoredReason"* %147, %78
  br i1 %148, label %149, label %111

149:                                              ; preds = %111, %107
  %150 = bitcast %"class.WTF::Vector.3133"* %0 to i8**
  %151 = load i8*, i8** %150, align 8
  %152 = load i32, i32* %75, align 4
  %153 = zext i32 %152 to i64
  %154 = shl nuw nsw i64 %153, 4
  br label %155

155:                                              ; preds = %80, %149
  %156 = phi i8** [ %82, %80 ], [ %150, %149 ]
  %157 = phi i64 [ 0, %80 ], [ %154, %149 ]
  %158 = phi i8* [ %81, %80 ], [ %151, %149 ]
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %158, i64 %157) #15
  %159 = load i8*, i8** %156, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %159) #15
  %160 = bitcast %"class.WTF::Vector.3133"* %0 to i64*
  store atomic i64 %72, i64* %160 monotonic, align 8
  %161 = trunc i64 %70 to i32
  %162 = getelementptr inbounds %"class.WTF::Vector.3133", %"class.WTF::Vector.3133"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %161, i32* %162, align 8
  %163 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %155
  %166 = getelementptr inbounds %"class.blink::HeapVectorBacking.4236", %"class.blink::HeapVectorBacking.4236"* %71, i64 0, i32 0
  %167 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %166) #15
  br label %168

168:                                              ; preds = %165, %155, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_13IgnoredReasonEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 8388608
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 8388608) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.51, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4236"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.53, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4236"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4236"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_13IgnoredReasonENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #15
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::IgnoredReason"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = lshr i64 %49, 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"class.blink::IgnoredReason", %"class.blink::IgnoredReason"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member.3136"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #15
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp eq i64 %66, %50
  br i1 %67, label %68, label %54

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_13IgnoredReasonEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.3145"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.3145", %"class.WTF::HashTable.3145"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.40, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.55, i64 0, i64 0)) #15
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 2
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2ax5mojom4RoleEEEPKcv, i64 0, i64 0)) #15
  %30 = bitcast i8* %29 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 0, i64 %28, i1 false) #15
  %31 = call i32* @_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.3145"* %0, i32* %30, i32 %17, i32* null) #15
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.3145"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.3145", %"class.WTF::HashTable.3145"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.3145", %"class.WTF::HashTable.3145"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.3145"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %110
  %19 = bitcast %"class.WTF::HashTable.3145"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %111, %18 ]
  %23 = phi i32* [ null, %10 ], [ %114, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #15
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.3145", %"class.WTF::HashTable.3145"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %110
  %32 = phi i64 [ %17, %13 ], [ %111, %110 ]
  %33 = phi i32 [ %7, %13 ], [ %112, %110 ]
  %34 = phi i32* [ %16, %13 ], [ %113, %110 ]
  %35 = phi i32* [ null, %13 ], [ %114, %110 ]
  %36 = phi i32 [ 0, %13 ], [ %115, %110 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  switch i32 %39, label %40 [
    i32 -1000001, label %110
    i32 0, label %110
  ]

40:                                               ; preds = %31
  %41 = shl i32 %39, 15
  %42 = xor i32 %41, -1
  %43 = add i32 %39, %42
  %44 = lshr i32 %43, 10
  %45 = xor i32 %44, %43
  %46 = mul i32 %45, 9
  %47 = lshr i32 %46, 6
  %48 = xor i32 %47, %46
  %49 = shl i32 %48, 11
  %50 = xor i32 %49, -1
  %51 = add i32 %48, %50
  %52 = lshr i32 %51, 16
  %53 = xor i32 %52, %51
  %54 = and i32 %53, %14
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %1, i64 %55
  %57 = ptrtoint i32* %56 to i64
  %58 = load i32, i32* %56, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %77, label %60

60:                                               ; preds = %40
  %61 = xor i32 %53, -1
  %62 = lshr i32 %51, 23
  %63 = add i32 %62, %61
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %83

74:                                               ; preds = %90
  %75 = ptrtoint i32* %97 to i64
  %76 = inttoptr i64 %92 to i32*
  br label %77

77:                                               ; preds = %74, %40
  %78 = phi i64 [ %75, %74 ], [ %57, %40 ]
  %79 = phi i32* [ %76, %74 ], [ null, %40 ]
  %80 = icmp eq i32* %79, null
  %81 = ptrtoint i32* %79 to i64
  %82 = select i1 %80, i64 %78, i64 %81
  br label %101

83:                                               ; preds = %90, %60
  %84 = phi i64 [ 0, %60 ], [ %92, %90 ]
  %85 = phi i32 [ %58, %60 ], [ %99, %90 ]
  %86 = phi i64 [ %57, %60 ], [ %98, %90 ]
  %87 = phi i64 [ %55, %60 ], [ %96, %90 ]
  %88 = phi i64 [ 0, %60 ], [ %94, %90 ]
  %89 = icmp eq i32 %85, %39
  br i1 %89, label %101, label %90

90:                                               ; preds = %83
  %91 = icmp eq i32 %85, -1000001
  %92 = select i1 %91, i64 %86, i64 %84
  %93 = icmp eq i64 %88, 0
  %94 = select i1 %93, i64 %73, i64 %88
  %95 = add i64 %94, %87
  %96 = and i64 %95, %15
  %97 = getelementptr inbounds i32, i32* %1, i64 %96
  %98 = ptrtoint i32* %97 to i64
  %99 = load i32, i32* %97, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %74, label %83

101:                                              ; preds = %83, %77
  %102 = phi i64 [ %82, %77 ], [ %86, %83 ]
  %103 = inttoptr i64 %102 to i32*
  store i32 %39, i32* %103, align 4
  %104 = load i32*, i32** %9, align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 %37
  %106 = icmp eq i32* %105, %3
  %107 = select i1 %106, i32* %103, i32* %35
  %108 = load i32, i32* %6, align 8
  %109 = ptrtoint i32* %104 to i64
  br label %110

110:                                              ; preds = %31, %31, %101
  %111 = phi i64 [ %32, %31 ], [ %109, %101 ], [ %32, %31 ]
  %112 = phi i32 [ %33, %31 ], [ %108, %101 ], [ %33, %31 ]
  %113 = phi i32* [ %34, %31 ], [ %104, %101 ], [ %34, %31 ]
  %114 = phi i32* [ %35, %31 ], [ %107, %101 ], [ %35, %31 ]
  %115 = add i32 %36, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_SF_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.3145"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3145", %"class.WTF::HashTable.3145"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.3145"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3145", %"class.WTF::HashTable.3145"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %11, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %75, label %35

35:                                               ; preds = %10
  %36 = xor i32 %29, -1
  %37 = lshr i32 %27, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %35, %56
  %50 = phi i32 [ %33, %35 ], [ %64, %56 ]
  %51 = phi i32* [ %32, %35 ], [ %63, %56 ]
  %52 = phi i32* [ null, %35 ], [ %58, %56 ]
  %53 = phi i64 [ %31, %35 ], [ %62, %56 ]
  %54 = phi i64 [ 0, %35 ], [ %60, %56 ]
  %55 = icmp eq i32 %50, %16
  br i1 %55, label %89, label %56

56:                                               ; preds = %49
  %57 = icmp eq i32 %50, -1000001
  %58 = select i1 %57, i32* %51, i32* %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %48, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %15
  %63 = getelementptr inbounds i32, i32* %11, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = icmp eq i32* %58, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  store i32 0, i32* %58, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable.3145", %"class.WTF::HashTable.3145"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %10, %66, %68
  %76 = phi i32* [ %58, %68 ], [ %63, %66 ], [ %32, %10 ]
  %77 = load i32, i32* %2, align 4
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable.3145", %"class.WTF::HashTable.3145"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable.3145", %"class.WTF::HashTable.3145"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, %80
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = tail call i32* @_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.3145"* %0, i32* %76)
  br label %89

89:                                               ; preds = %49, %75, %87
  %90 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %49 ]
  %91 = phi i32* [ %76, %75 ], [ %88, %87 ], [ %51, %49 ]
  %92 = insertvalue { i32*, i8 } undef, i32* %91, 0
  %93 = insertvalue { i32*, i8 } %92, i8 %90, 1
  ret { i32*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.3145"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3145", %"class.WTF::HashTable.3145"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3145", %"class.WTF::HashTable.3145"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.40, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2ax5mojom4RoleEEEPKcv, i64 0, i64 0)) #15
  %36 = bitcast i8* %35 to i32*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %31
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %34, i1 false) #15
  br label %39

39:                                               ; preds = %31, %38
  %40 = call i32* @_ZN3WTF9HashTableIN2ax5mojom4RoleES3_NS_17IdentityExtractorENS_7IntHashIS3_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.3145"* %0, i32* %36, i32 %32, i32* %1) #15
  ret i32* %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIN5blink13QualifiedNameES2_NS_17IdentityExtractorENS1_17QualifiedNameHashENS_10HashTraitsIS2_EES6_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS4_S6_S7_EES2_EEbRKT0_(%"class.WTF::HashTable.3149"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = icmp eq %"class.blink::QualifiedName"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.3149", %"class.WTF::HashTable.3149"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 16777215
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK5blink13QualifiedName17QualifiedNameImpl11ComputeHashEv(%"class.blink::QualifiedName::QualifiedNameImpl"* %12) #15
  %19 = load i32, i32* %13, align 4
  %20 = and i32 %18, 16777215
  %21 = and i32 %19, -16777216
  %22 = or i32 %21, %20
  store i32 %22, i32* %13, align 4
  br label %23

23:                                               ; preds = %17, %6
  %24 = phi i32 [ %15, %6 ], [ %20, %17 ]
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %26
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11g_null_nameE, align 8
  %29 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %30, %32
  br i1 %33, label %68, label %34

34:                                               ; preds = %23
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %36 = xor i32 %24, -1
  %37 = lshr i32 %24, 23
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %34
  %50 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %30, %34 ], [ %66, %59 ]
  %51 = phi %"class.blink::QualifiedName"* [ %27, %34 ], [ %64, %59 ]
  %52 = phi i64 [ %26, %34 ], [ %63, %59 ]
  %53 = phi i64 [ 0, %34 ], [ %61, %59 ]
  %54 = bitcast %"class.blink::QualifiedName"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp ne i8* %55, inttoptr (i64 -1 to i8*)
  %57 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %50, %35
  %58 = and i1 %57, %56
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %53, 0
  %61 = select i1 %60, i64 %48, i64 %53
  %62 = add i64 %61, %52
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 %63
  %65 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %67 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %66, %32
  br i1 %67, label %68, label %49

68:                                               ; preds = %49, %59, %2, %23
  %69 = phi %"class.blink::QualifiedName"* [ null, %2 ], [ null, %23 ], [ %51, %49 ], [ null, %59 ]
  %70 = icmp ne %"class.blink::QualifiedName"* %69, null
  ret i1 %70
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3002"*, %"class.blink::AXObject"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3002"* %0, i32 %14) #15
  %15 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %16, i64 %18
  %20 = bitcast %"class.blink::AXObject"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2997"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #15
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3002"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2997"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm(i64 %11) #15
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4257"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #15
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4257"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3002"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4257", %"class.blink::HeapVectorBacking.4257"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #15
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2997"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2997"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #15
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i64 0, i64 0)) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #15
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3002"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3002"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3002"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3002"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #15
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #15
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm(i64 %14) #15
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4257"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #15
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4257"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4257"* %17, null
  %23 = icmp ne %"class.blink::Member.2997"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2997"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3002"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4257", %"class.blink::HeapVectorBacking.4257"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #15
  %33 = bitcast %"class.WTF::Vector.3002"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #15
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #15
  %42 = bitcast %"class.WTF::Vector.3002"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4257", %"class.blink::HeapVectorBacking.4257"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8AXObjectEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.51, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4257"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.53, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4257"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4257"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8AXObjectEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2997"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2997"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv) #15
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8AXObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8 1 }
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16HTMLInputElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.3383"*, %"class.blink::HTMLInputElement"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3383", %"class.WTF::Vector.3383"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3383", %"class.WTF::Vector.3383"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16HTMLInputElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3383"* %0, i32 %14) #15
  %15 = getelementptr inbounds %"class.WTF::Vector.3383", %"class.WTF::Vector.3383"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3165"*, %"class.blink::Member.3165"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3165", %"class.blink::Member.3165"* %16, i64 %18
  %20 = bitcast %"class.blink::HTMLInputElement"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3165"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #15
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16HTMLInputElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3383"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3383", %"class.WTF::Vector.3383"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3383", %"class.WTF::Vector.3383"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.3165"*, %"class.blink::Member.3165"** %8, align 8
  %10 = icmp eq %"class.blink::Member.3165"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16HTMLInputElementEEEEEmm(i64 %11) #15
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4274"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #15
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4274"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3383"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4274", %"class.blink::HeapVectorBacking.4274"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #15
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.3165"*, %"class.blink::Member.3165"** %8, align 8
  %26 = icmp eq %"class.blink::Member.3165"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.3165"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #15
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i64 0, i64 0)) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #15
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16HTMLInputElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3383"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16HTMLInputElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3383"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3383"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3383", %"class.WTF::Vector.3383"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3383"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3383", %"class.WTF::Vector.3383"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #15
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #15
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16HTMLInputElementEEEEEmm(i64 %14) #15
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4274"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #15
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4274"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3383", %"class.WTF::Vector.3383"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.3165"*, %"class.blink::Member.3165"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3383", %"class.WTF::Vector.3383"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4274"* %17, null
  %23 = icmp ne %"class.blink::Member.3165"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.3165"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3383"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4274", %"class.blink::HeapVectorBacking.4274"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #15
  %33 = bitcast %"class.WTF::Vector.3383"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #15
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #15
  %42 = bitcast %"class.WTF::Vector.3383"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3383", %"class.WTF::Vector.3383"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4274", %"class.blink::HeapVectorBacking.4274"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16HTMLInputElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.51, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4274"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.53, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16HTMLInputElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #15
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.4274"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.4274"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3165"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3165", %"class.blink::Member.3165"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3165"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv) #15
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16HTMLInputElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLInputElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLInputElement"* %3, %"class.blink::Visitor"* %0) #15
  ret void
}

declare void @_ZN5blink11ImageBitmapC1EPNS_16ImageElementBaseEN4absl8optionalINS_7IntRectEEEPKNS_18ImageBitmapOptionsE(%"class.blink::ImageBitmap"*, %"class.blink::ImageElementBase"*, %"class.absl::optional.977"* byval(%"class.absl::optional.977") align 8, %"class.blink::ImageBitmapOptions"*) unnamed_addr #1

declare void @_ZN5blink11ImageBitmapC1EPNS_17HTMLCanvasElementEN4absl8optionalINS_7IntRectEEEPKNS_18ImageBitmapOptionsE(%"class.blink::ImageBitmap"*, %"class.blink::HTMLCanvasElement"*, %"class.absl::optional.977"* byval(%"class.absl::optional.977") align 8, %"class.blink::ImageBitmapOptions"*) unnamed_addr #1

declare void @_ZN5blink11ImageBitmapC1EPNS_16HTMLVideoElementEN4absl8optionalINS_7IntRectEEEPKNS_18ImageBitmapOptionsE(%"class.blink::ImageBitmap"*, %"class.blink::HTMLVideoElement"*, %"class.absl::optional.977"* byval(%"class.absl::optional.977") align 8, %"class.blink::ImageBitmapOptions"*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.48, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #15
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.3234"* @_ZNK3WTF6VectorIN5blink6MemberINS1_11HTMLElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3231"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3231", %"class.WTF::Vector.3231"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.3231", %"class.WTF::Vector.3231"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.3234"*, %"class.blink::Member.3234"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.3234", %"class.blink::Member.3234"* %24, i64 %25
  ret %"class.blink::Member.3234"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.3873"*, i32* dereferenceable(4)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3873", %"class.WTF::Vector.3873"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3873", %"class.WTF::Vector.3873"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3873", %"class.WTF::Vector.3873"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2ax5mojom10DropeffectEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2ax5mojom10DropeffectEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.3873"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.3873"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.3873"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.3873", %"class.WTF::Vector.3873"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2ax5mojom10DropeffectEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN2ax5mojom10DropeffectEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.3873"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.3873"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.3873"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN2ax5mojom10DropeffectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.48, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #15
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #15
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #15
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %37
  tail call void @llvm.trap() #15
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #15
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #15
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.3878"* %8) #15
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.3878"* %8) #15
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.57, i64 0, i64 0), i8* %26, i8* %27) #15
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.58, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #15
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #15
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #15
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #15
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i64 0, i64 0), i8* %41, i8* %42) #15
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.58, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #15
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #15
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.4286", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4288", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.4286", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.4286"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.4286"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.4286"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.4286"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.4286"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.4288"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #15
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4288"* nonnull %4, i8* %48) #15
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4287"* nonnull %49, i8* %1) #15
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4288"* nonnull %4, i8* %52) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.3878"* %6) #15
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4287"* nonnull %53, i8* %56) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.4286", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4288", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.4286", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.4286"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.4286"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.4286"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.4286"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #15
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.4286"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.4288"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #15
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4288"* nonnull %4, i8* %48) #15
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4287"* nonnull %49, i16* %1) #15
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4288"* nonnull %4, i16* %52) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #15
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4286", %"class.WTF::StringTypeAdapter.4286"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.3878"* %6) #15
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4287"* nonnull %53, i16* %56) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #15
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4288"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.3878"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.4288", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3878", %"class.WTF::StringAppend.3878"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.4288"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.4288", %"class.WTF::StringTypeAdapter.4288"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.3878", %"class.WTF::StringAppend.3878"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.4288"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.4288"* nonnull %4, i8* %21) #15
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.57, i64 0, i64 0), i8* %30, i8* %31) #15
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.58, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #15
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #15
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i64 0, i64 0), i8* %46, i8* %47) #15
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.58, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #15
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #15
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.4287"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.4288"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4287"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.4288"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::NameSource"*
  %4 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::NameSource"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #15
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8* %10 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = getelementptr inbounds i8, i8* %0, i64 32
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds i8, i8* %0, i64 40
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7
  %22 = getelementptr inbounds i8, i8* %0, i64 48
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %0, i64 52
  %25 = bitcast i8* %24 to i32*
  %26 = bitcast %"class.blink::HeapVector.3879"* %21 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #15
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %20 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %23, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %23, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %25, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %25, align 4
  store i32 %33, i32* %32, align 4
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %2
  %38 = bitcast i8* %20 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #15
  br label %41

41:                                               ; preds = %37, %2
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::HeapVector.3879"* %21 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #15
  br label %48

48:                                               ; preds = %41, %44
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %75, label %51

51:                                               ; preds = %48
  %52 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %53 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %52, i64 0, i32 1
  %54 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %53) #15
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %58, !prof !3

56:                                               ; preds = %51
  %57 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %53, i8* %57) #15
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i8* [ %57, %56 ], [ %54, %51 ]
  %60 = bitcast i8* %59 to %"class.blink::ThreadState"**
  %61 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 9
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 13
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %66, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %70, i64 0, i32 0, i32 0
  %72 = bitcast i8* %20 to %"class.WTF::Vector.3882"*
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.3882"* %72, %"class.blink::Visitor"* %71) #15
  %73 = load i64, i64* %66, align 8
  %74 = add i64 %73, -1
  store i64 %74, i64* %66, align 8
  br label %75

75:                                               ; preds = %48, %58, %65
  ret %"class.blink::NameSource"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3893"*, %"class.blink::NameSource"* dereferenceable(56)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %8 = icmp ugt %"class.blink::NameSource"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 %10
  %12 = icmp ugt %"class.blink::NameSource"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3893"* %0, i32 %22) #15
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::NameSource"* %1 to i64
  %26 = ptrtoint %"class.blink::NameSource"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 56
  %29 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3893"* %0, i32 %37) #15
  %38 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::NameSource"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::NameSource"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %41, i64 %44
  %46 = bitcast %"class.blink::NameSource"* %45 to i8*
  %47 = tail call %"class.blink::NameSource"* @_ZN3WTF15ConstructTraitsIN5blink10NameSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::NameSource"* dereferenceable(56) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.3882"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.3882"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.WTF::Vector.3882"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #15
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #15
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3885"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3885"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv) #15
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23NameSourceRelatedObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %9, i64 6
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %1, i8* %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8AXObjectEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv) #15
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_8AXObjectEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"**
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = ptrtoint %"class.blink::AXObject"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #15
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #15
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 -1, i32 14
  %20 = bitcast %"class.blink::Member.3006"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3893"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %10 = icmp eq %"class.blink::NameSource"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %11) #15
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 56
  %15 = tail call %"class.blink::HeapVectorBacking.4307"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #15
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4307"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3893"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4307", %"class.blink::HeapVectorBacking.4307"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #15
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %8, align 8
  %26 = icmp eq %"class.blink::NameSource"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::NameSource"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #15
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 56
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i64 0, i64 0)) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #15
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3893"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3893"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.3893"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %6, %"class.blink::NameSource"* %10, %"class.blink::NameSource"* null, i1 zeroext true)
  %13 = bitcast %"class.blink::NameSource"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #15
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #15
  br label %42

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64 %16) #15
  %18 = udiv i64 %17, 56
  %19 = tail call %"class.blink::HeapVectorBacking.4307"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %18) #15
  %20 = bitcast %"class.blink::HeapVectorBacking.4307"* %19 to %"class.blink::NameSource"*
  %21 = ptrtoint %"class.blink::HeapVectorBacking.4307"* %19 to i64
  %22 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %26
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"* %23, %"class.blink::NameSource"* %27, %"class.blink::NameSource"* %20, i1 zeroext false)
  %28 = bitcast %"class.WTF::Vector.3893"* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %30 to i64
  %32 = mul nuw nsw i64 %31, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #15
  %33 = load i8*, i8** %28, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %33) #15
  %34 = bitcast %"class.WTF::Vector.3893"* %0 to i64*
  store atomic i64 %21, i64* %34 monotonic, align 8
  %35 = trunc i64 %18 to i32
  %36 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %35, i32* %36, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::HeapVectorBacking.4307", %"class.blink::HeapVectorBacking.4307"* %19, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #15
  br label %42

42:                                               ; preds = %39, %15, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_10NameSourceEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2396745
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2396745) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.51, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 56
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4307"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.53, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 56
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4307"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4307"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_10NameSourceENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #15
  br i1 %28, label %73, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::NameSource"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 56
  %51 = icmp ugt i64 %49, 55
  br i1 %51, label %52, label %73

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %54 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ 0, %52 ], [ %71, %70 ]
  %57 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %30, i64 %56, i32 7
  %58 = bitcast %"class.blink::HeapVector.3879"* %57 to i64*
  %59 = load atomic i64, i64* %58 monotonic, align 8
  %60 = icmp eq i64 %59, 0
  %61 = bitcast %"class.blink::HeapVector.3879"* %57 to i8**
  %62 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %62, i64 11
  %64 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8** %61) #15
  br i1 %60, label %70, label %65

65:                                               ; preds = %55
  %66 = inttoptr i64 %59 to i8*
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %0, i8* nonnull %66, i8* nonnull %66, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #15
  br label %70

70:                                               ; preds = %65, %55
  %71 = add nuw nsw i64 %56, 1
  %72 = icmp ult i64 %71, %50
  br i1 %72, label %55, label %73

73:                                               ; preds = %70, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HeapVectorBacking.4307"*
  tail call void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.4307"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17HeapVectorBackingINS_10NameSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.4307"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapVectorBacking.4307", %"class.blink::HeapVectorBacking.4307"* %0, i64 -8, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 6
  %4 = bitcast i8* %3 to i16*
  %5 = load i16, i16* %4, align 2
  %6 = lshr i16 %5, 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %15, !prof !3

8:                                                ; preds = %1
  %9 = ptrtoint i8* %2 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %6 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %8, %15
  %19 = phi i64 [ %14, %8 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 56
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to %"class.blink::NameSource"*
  %24 = icmp ugt i64 %20, 55
  br i1 %24, label %26, label %25

25:                                               ; preds = %62, %18
  ret void

26:                                               ; preds = %18, %62
  %27 = phi i64 [ %64, %62 ], [ 0, %18 ]
  %28 = phi i32 [ %63, %62 ], [ 0, %18 ]
  %29 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 5, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #15
  br label %45

45:                                               ; preds = %44, %41, %26
  %46 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %23, i64 %27, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #15
  br label %62

62:                                               ; preds = %45, %58, %61
  %63 = add i32 %28, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %21, %64
  br i1 %65, label %26, label %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20VectorTypeOperationsIN5blink10NameSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::NameSource"*, %"class.blink::NameSource"*, %"class.blink::NameSource"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::NameSource"* %0, %1
  br i1 %5, label %116, label %6

6:                                                ; preds = %4, %112
  %7 = phi %"class.blink::NameSource"* [ %114, %112 ], [ %0, %4 ]
  %8 = phi %"class.blink::NameSource"* [ %113, %112 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::NameSource"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::NameSource"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %13 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false) #15
  %15 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 5
  %16 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7
  %25 = bitcast %"class.blink::HeapVector.3879"* %24 to i8*
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7
  %27 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.blink::HeapVector.3879"* %26 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #15
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::HeapVector.3879"* %24 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %27, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %27, align 4
  store i32 %33, i32* %32, align 4
  %35 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %28, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %28, align 4
  store i32 %36, i32* %35, align 4
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %6
  %41 = bitcast %"class.blink::HeapVector.3879"* %24 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #15
  br label %44

44:                                               ; preds = %40, %6
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::HeapVector.3879"* %26 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #15
  br label %51

51:                                               ; preds = %44, %47
  br i1 %3, label %52, label %79

52:                                               ; preds = %51
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %79, label %55

55:                                               ; preds = %52
  %56 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %57 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %56, i64 0, i32 1
  %58 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %57) #15
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %62, !prof !3

60:                                               ; preds = %55
  %61 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %57, i8* %61) #15
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i8* [ %61, %60 ], [ %58, %55 ]
  %64 = bitcast i8* %63 to %"class.blink::ThreadState"**
  %65 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 9
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %79, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 13
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %74, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 0, i32 7, i32 0
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.3882"* %76, %"class.blink::Visitor"* %75) #15
  %77 = load i64, i64* %70, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %70, align 8
  br label %79

79:                                               ; preds = %69, %62, %52, %51
  %80 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #15
  br label %96

96:                                               ; preds = %95, %92, %79
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #15
  br label %112

112:                                              ; preds = %96, %108, %111
  %113 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %8, i64 1
  %114 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %7, i64 1
  %115 = icmp eq %"class.blink::NameSource"* %114, %1
  br i1 %115, label %116, label %6

116:                                              ; preds = %112, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::NameSource"* @_ZN3WTF6VectorIN5blink10NameSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3893"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.3893", %"class.WTF::Vector.3893"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NameSource"*, %"class.blink::NameSource"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NameSource", %"class.blink::NameSource"* %24, i64 %25
  ret %"class.blink::NameSource"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.3882"* @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.3882"*, %"class.WTF::Vector.3882"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.3882"* %1, %0
  br i1 %3, label %87, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %21

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = zext i32 %6 to i64
  %15 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %12, i64 %14
  %17 = bitcast %"class.blink::Member.3885"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member.3885"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.3885"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #15
  store i32 %8, i32* %5, align 4
  br label %41

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp ugt i32 %8, %23
  br i1 %24, label %25, label %41

25:                                               ; preds = %21
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %25
  %28 = icmp eq i32 %6, 0
  %29 = bitcast %"class.WTF::Vector.3882"* %0 to i8**
  br i1 %28, label %34, label %30

30:                                               ; preds = %27
  %31 = load i8*, i8** %29, align 8
  %32 = zext i32 %6 to i64
  %33 = shl nuw nsw i64 %32, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %31, i64 %33) #15
  store i32 0, i32* %5, align 4
  br label %34

34:                                               ; preds = %30, %27
  %35 = load i8*, i8** %29, align 8
  %36 = bitcast %"class.WTF::Vector.3882"* %0 to i64*
  store atomic i64 0, i64* %36 monotonic, align 8
  store i32 0, i32* %22, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %35) #15
  %37 = load i32, i32* %7, align 4
  br label %38

38:                                               ; preds = %25, %34
  %39 = phi i32 [ %8, %25 ], [ %37, %34 ]
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3882"* %0, i32 %39)
  %40 = load i32, i32* %5, align 4
  br label %41

41:                                               ; preds = %21, %38, %10
  %42 = phi i32 [ %6, %21 ], [ %40, %38 ], [ %8, %10 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %1, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.WTF::Vector.3882"* %1 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = zext i32 %42 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::Vector.3882"* %0 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = shl nuw nsw i64 %46, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* %49, i8* %45, i64 %50) #15
  %51 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %43, align 8
  %52 = load i32, i32* %5, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %51, i64 %53
  %55 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %47, align 8
  %56 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %55, i64 %53
  %57 = icmp ne %"class.blink::Member.3885"* %56, null
  %58 = icmp ne %"class.blink::Member.3885"* %54, null
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %85, !prof !5

60:                                               ; preds = %41
  %61 = load i32, i32* %7, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %51, i64 %62
  %64 = bitcast %"class.blink::Member.3885"* %56 to i8*
  %65 = bitcast %"class.blink::Member.3885"* %54 to i8*
  %66 = ptrtoint %"class.blink::Member.3885"* %63 to i64
  %67 = ptrtoint %"class.blink::Member.3885"* %54 to i64
  %68 = sub i64 %66, %67
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %64, i8* nonnull %65, i64 %68) #15
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %60
  %71 = ashr exact i64 %68, 3
  br label %72

72:                                               ; preds = %82, %70
  %73 = phi i64 [ %75, %82 ], [ %71, %70 ]
  %74 = phi %"class.blink::Member.3885"* [ %83, %82 ], [ %56, %70 ]
  %75 = add i64 %73, -1
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.blink::Member.3885"* %74 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #15
  br label %82

82:                                               ; preds = %78, %72
  %83 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %74, i64 1
  %84 = icmp eq i64 %75, 0
  br i1 %84, label %85, label %72

85:                                               ; preds = %82, %41, %60
  %86 = load i32, i32* %7, align 4
  store i32 %86, i32* %5, align 4
  br label %87

87:                                               ; preds = %2, %85
  ret %"class.WTF::Vector.3882"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3882"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %8, align 8
  %10 = icmp eq %"class.blink::Member.3885"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23NameSourceRelatedObjectEEEEEmm(i64 %11) #15
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.4295"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #15
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4295"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3882"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4295", %"class.blink::HeapVectorBacking.4295"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #15
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %8, align 8
  %26 = icmp eq %"class.blink::Member.3885"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.3885"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #15
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i64 0, i64 0)) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #15
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3882"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3882"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.3882"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.3882"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #15
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #15
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23NameSourceRelatedObjectEEEEEmm(i64 %14) #15
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.4295"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #15
  %18 = ptrtoint %"class.blink::HeapVectorBacking.4295"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.4295"* %17, null
  %23 = icmp ne %"class.blink::Member.3885"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.3885"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !5

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.3882"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.4295", %"class.blink::HeapVectorBacking.4295"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #15
  %33 = bitcast %"class.WTF::Vector.3882"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #15
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #15
  %42 = bitcast %"class.WTF::Vector.3882"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.4295", %"class.blink::HeapVectorBacking.4295"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #15
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_23NameSourceRelatedObjectEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.51, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4295"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.53, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4295"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4295"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([187 x i8], [187 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_23NameSourceRelatedObjectEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.3002"*, %"class.blink::Member.2997"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %6, align 8
  %8 = icmp ugt %"class.blink::Member.2997"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member.2997"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3002"* %0, i32 %22) #15
  %23 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::Member.2997"* %1 to i64
  %26 = ptrtoint %"class.blink::Member.2997"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3002"* %0, i32 %37) #15
  %38 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::Member.2997"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::Member.2997"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %41, i64 %44
  %46 = bitcast %"class.blink::Member.2997"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::Member.2997"* %45 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %40
  %52 = inttoptr i64 %47 to i8*
  %53 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #15
  br label %54

54:                                               ; preds = %40, %51
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9FloatRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.3897"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3897", %"class.WTF::Vector.3897"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3897", %"class.WTF::Vector.3897"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FloatRect"*, %"class.blink::FloatRect"** %6, align 8
  %8 = icmp ugt %"class.blink::FloatRect"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 %10
  %12 = icmp ugt %"class.blink::FloatRect"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3897", %"class.WTF::Vector.3897"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::FloatRect"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatRectEEEmm(i64 %26) #15
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatRectEEEPKcv, i64 0, i64 0)) #15
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.3897"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::FloatRect"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::FloatRect"*, %"class.blink::FloatRect"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::FloatRect"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::FloatRect"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #15
  %47 = bitcast %"class.WTF::Vector.3897"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  %51 = bitcast %"class.WTF::Vector.3897"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::FloatRect"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::FloatRect"* %1 to i64
  %56 = ptrtoint %"class.blink::FloatRect"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.3897", %"class.WTF::Vector.3897"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::FloatRect"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatRectEEEmm(i64 %71) #15
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatRectEEEPKcv, i64 0, i64 0)) #15
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.3897"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::FloatRect"*, %"class.blink::FloatRect"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::FloatRect"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::FloatRect"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #15
  %87 = bitcast %"class.WTF::Vector.3897"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #15
  %91 = bitcast %"class.WTF::Vector.3897"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::FloatRect"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::FloatRect"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::FloatRect"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::FloatRect"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %100, i64 %103
  %105 = bitcast %"class.blink::FloatRect"* %104 to i8*
  %106 = bitcast %"class.blink::FloatRect"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 16, i1 false) #15
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatRectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.48, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare %"class.blink::Element"* @_ZNK5blink14HTMLCollection4itemEj(%"class.blink::HTMLCollection"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.2997"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3002"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %24, i64 %25
  ret %"class.blink::Member.2997"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.630"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NameSourceRelatedObject"* @_ZN5blink25MakeGarbageCollectedTraitINS_23NameSourceRelatedObjectEE4CallIJRPNS_8AXObjectERN3WTF6StringEEEEPS1_DpOT_(%"class.blink::AXObject"** dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_23NameSourceRelatedObjectEEEPhm(i64 16) #15
  %4 = bitcast i8* %3 to %"class.blink::NameSourceRelatedObject"*
  %5 = bitcast %"class.blink::AXObject"** %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #15
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #15
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %31

27:                                               ; preds = %2
  %28 = bitcast i8* %3 to i64*
  store i64 %6, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %3, i64 8
  %30 = bitcast i8* %29 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %30, align 8
  br label %61

31:                                               ; preds = %10, %25
  %32 = bitcast i8* %3 to i64*
  store i64 %6, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %3, i64 8
  %34 = bitcast i8* %33 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %34, align 8
  %35 = load atomic i32, i32* %11 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %50

40:                                               ; preds = %31
  %41 = zext i32 %39 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #15
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %40
  tail call void @llvm.trap() #15
  unreachable

48:                                               ; preds = %40
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %38, align 4
  br label %50

50:                                               ; preds = %48, %31
  %51 = phi i32 [ %49, %48 ], [ %39, %31 ]
  %52 = load atomic i32, i32* %11 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = add i32 %51, -1
  store i32 %56, i32* %38, align 4
  br label %57

57:                                               ; preds = %55, %50
  %58 = phi i32 [ %56, %55 ], [ %51, %50 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #15
  br label %61

61:                                               ; preds = %27, %57, %60
  %62 = getelementptr inbounds i8, i8* %3, i64 -4
  %63 = bitcast i8* %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = or i16 %64, 1
  store atomic i16 %65, i16* %63 release, align 2
  ret %"class.blink::NameSourceRelatedObject"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_23NameSourceRelatedObjectEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_23NameSourceRelatedObjectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23NameSourceRelatedObjectEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_23NameSourceRelatedObjectEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #15
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_23NameSourceRelatedObjectEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.3882"*, %"class.blink::NameSourceRelatedObject"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3882"* %0, i32 %14) #15
  %15 = getelementptr inbounds %"class.WTF::Vector.3882", %"class.WTF::Vector.3882"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3885"*, %"class.blink::Member.3885"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3885", %"class.blink::Member.3885"* %16, i64 %18
  %20 = bitcast %"class.blink::NameSourceRelatedObject"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3885"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #15
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10WeakMemberIS3_EEEEvOT_(%"class.WTF::Vector.3002"*, %"class.blink::WeakMember.3043"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8AXObjectEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3002"* %0, i32 %14) #15
  %15 = getelementptr inbounds %"class.WTF::Vector.3002", %"class.WTF::Vector.3002"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2997"*, %"class.blink::Member.2997"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2997", %"class.blink::Member.2997"* %16, i64 %18
  %20 = bitcast %"class.blink::WeakMember.3043"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2997"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #15
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DescriptionSource"* @_ZN3WTF15ConstructTraitsIN5blink17DescriptionSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::DescriptionSource"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::DescriptionSource"*
  %4 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::DescriptionSource"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false) #15
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1, i64 0, i32 5
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8* %10 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %16 = getelementptr inbounds i8, i8* %0, i64 32
  %17 = bitcast i8* %16 to i32*
  %18 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds i8, i8* %0, i64 40
  %21 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1, i64 0, i32 7
  %22 = getelementptr inbounds i8, i8* %0, i64 48
  %23 = bitcast i8* %22 to i32*
  %24 = getelementptr inbounds i8, i8* %0, i64 52
  %25 = bitcast i8* %24 to i32*
  %26 = bitcast %"class.blink::HeapVector.3879"* %21 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #15
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %20 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %23, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %23, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %25, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %25, align 4
  store i32 %33, i32* %32, align 4
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %2
  %38 = bitcast i8* %20 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #15
  br label %41

41:                                               ; preds = %37, %2
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::HeapVector.3879"* %21 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #15
  br label %48

48:                                               ; preds = %41, %44
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %75, label %51

51:                                               ; preds = %48
  %52 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %53 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %52, i64 0, i32 1
  %54 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %53) #15
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %58, !prof !3

56:                                               ; preds = %51
  %57 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %53, i8* %57) #15
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i8* [ %57, %56 ], [ %54, %51 ]
  %60 = bitcast i8* %59 to %"class.blink::ThreadState"**
  %61 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 9
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 13
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  store i64 %68, i64* %66, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %70, i64 0, i32 0, i32 0
  %72 = bitcast i8* %20 to %"class.WTF::Vector.3882"*
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.3882"* %72, %"class.blink::Visitor"* %71) #15
  %73 = load i64, i64* %66, align 8
  %74 = add i64 %73, -1
  store i64 %74, i64* %66, align 8
  br label %75

75:                                               ; preds = %48, %58, %65
  ret %"class.blink::DescriptionSource"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.3998"*, %"class.blink::DescriptionSource"* dereferenceable(56)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %6, align 8
  %8 = icmp ugt %"class.blink::DescriptionSource"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 %10
  %12 = icmp ugt %"class.blink::DescriptionSource"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3998"* %0, i32 %22) #15
  %23 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::DescriptionSource"* %1 to i64
  %26 = ptrtoint %"class.blink::DescriptionSource"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 56
  %29 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3998"* %0, i32 %37) #15
  %38 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::DescriptionSource"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::DescriptionSource"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %41, i64 %44
  %46 = bitcast %"class.blink::DescriptionSource"* %45 to i8*
  %47 = tail call %"class.blink::DescriptionSource"* @_ZN3WTF15ConstructTraitsIN5blink17DescriptionSourceENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %46, %"class.blink::DescriptionSource"* dereferenceable(56) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.3998"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %8, align 8
  %10 = icmp eq %"class.blink::DescriptionSource"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_17DescriptionSourceEEEmm(i64 %11) #15
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 56
  %15 = tail call %"class.blink::HeapVectorBacking.4322"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %14) #15
  %16 = ptrtoint %"class.blink::HeapVectorBacking.4322"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.3998"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.4322", %"class.blink::HeapVectorBacking.4322"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #15
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %8, align 8
  %26 = icmp eq %"class.blink::DescriptionSource"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::DescriptionSource"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #15
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 56
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #15
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #15
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i64 0, i64 0)) #15
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #15
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3998"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3998"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.3998"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink17DescriptionSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::DescriptionSource"* %6, %"class.blink::DescriptionSource"* %10, %"class.blink::DescriptionSource"* null, i1 zeroext true)
  %13 = bitcast %"class.blink::DescriptionSource"* %6 to i8*
  %14 = mul nuw nsw i64 %9, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %13, i64 %14) #15
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %13) #15
  br label %42

15:                                               ; preds = %2
  %16 = zext i32 %1 to i64
  %17 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_17DescriptionSourceEEEmm(i64 %16) #15
  %18 = udiv i64 %17, 56
  %19 = tail call %"class.blink::HeapVectorBacking.4322"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %18) #15
  %20 = bitcast %"class.blink::HeapVectorBacking.4322"* %19 to %"class.blink::DescriptionSource"*
  %21 = ptrtoint %"class.blink::HeapVectorBacking.4322"* %19 to i64
  %22 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %23, i64 %26
  tail call void @_ZN3WTF20VectorTypeOperationsIN5blink17DescriptionSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::DescriptionSource"* %23, %"class.blink::DescriptionSource"* %27, %"class.blink::DescriptionSource"* %20, i1 zeroext false)
  %28 = bitcast %"class.WTF::Vector.3998"* %0 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %24, align 4
  %31 = zext i32 %30 to i64
  %32 = mul nuw nsw i64 %31, 56
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #15
  %33 = load i8*, i8** %28, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %33) #15
  %34 = bitcast %"class.WTF::Vector.3998"* %0 to i64*
  store atomic i64 %21, i64* %34 monotonic, align 8
  %35 = trunc i64 %18 to i32
  %36 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %35, i32* %36, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.blink::HeapVectorBacking.4322", %"class.blink::HeapVectorBacking.4322"* %19, i64 0, i32 0
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #15
  br label %42

42:                                               ; preds = %39, %15, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_17DescriptionSourceEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2396745
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2396745) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.51, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 56
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.4322"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.53, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = mul i64 %0, 56
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.4322"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.4322"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #15
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #15
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([144 x i8], [144 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_17DescriptionSourceENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #15
  br i1 %28, label %73, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::DescriptionSource"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !3

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 56
  %51 = icmp ugt i64 %49, 55
  br i1 %51, label %52, label %73

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %54 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %55

55:                                               ; preds = %70, %52
  %56 = phi i64 [ 0, %52 ], [ %71, %70 ]
  %57 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %30, i64 %56, i32 7
  %58 = bitcast %"class.blink::HeapVector.3879"* %57 to i64*
  %59 = load atomic i64, i64* %58 monotonic, align 8
  %60 = icmp eq i64 %59, 0
  %61 = bitcast %"class.blink::HeapVector.3879"* %57 to i8**
  %62 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %62, i64 11
  %64 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8** %61) #15
  br i1 %60, label %70, label %65

65:                                               ; preds = %55
  %66 = inttoptr i64 %59 to i8*
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %0, i8* nonnull %66, i8* nonnull %66, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23NameSourceRelatedObjectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #15
  br label %70

70:                                               ; preds = %65, %55
  %71 = add nuw nsw i64 %56, 1
  %72 = icmp ult i64 %71, %50
  br i1 %72, label %55, label %73

73:                                               ; preds = %70, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HeapVectorBacking.4322"*
  tail call void @_ZN5blink17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.4322"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17HeapVectorBackingINS_17DescriptionSourceEN3WTF12VectorTraitsIS1_EEE8FinalizeEv(%"class.blink::HeapVectorBacking.4322"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapVectorBacking.4322", %"class.blink::HeapVectorBacking.4322"* %0, i64 -8, i32 0
  %3 = getelementptr inbounds i8, i8* %2, i64 6
  %4 = bitcast i8* %3 to i16*
  %5 = load i16, i16* %4, align 2
  %6 = lshr i16 %5, 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %15, !prof !3

8:                                                ; preds = %1
  %9 = ptrtoint i8* %2 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %6 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %8, %15
  %19 = phi i64 [ %14, %8 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 56
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to %"class.blink::DescriptionSource"*
  %24 = icmp ugt i64 %20, 55
  br i1 %24, label %26, label %25

25:                                               ; preds = %62, %18
  ret void

26:                                               ; preds = %18, %62
  %27 = phi i64 [ %64, %62 ], [ 0, %18 ]
  %28 = phi i32 [ %63, %62 ], [ 0, %18 ]
  %29 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %23, i64 %27, i32 5, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #15
  br label %45

45:                                               ; preds = %44, %41, %26
  %46 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %23, i64 %27, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #15
  br label %62

62:                                               ; preds = %45, %58, %61
  %63 = add i32 %28, 1
  %64 = zext i32 %63 to i64
  %65 = icmp ugt i64 %21, %64
  br i1 %65, label %26, label %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF20VectorTypeOperationsIN5blink17DescriptionSourceENS1_13HeapAllocatorEE4MoveEPS2_S5_S5_b(%"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp eq %"class.blink::DescriptionSource"* %0, %1
  br i1 %5, label %116, label %6

6:                                                ; preds = %4, %112
  %7 = phi %"class.blink::DescriptionSource"* [ %114, %112 ], [ %0, %4 ]
  %8 = phi %"class.blink::DescriptionSource"* [ %113, %112 ], [ %2, %4 ]
  %9 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::DescriptionSource"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::DescriptionSource"* %8 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %13 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %8, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false) #15
  %15 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %8, i64 0, i32 5
  %16 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 5
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %21 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %8, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %8, i64 0, i32 7
  %25 = bitcast %"class.blink::HeapVector.3879"* %24 to i8*
  %26 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 7
  %27 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.blink::HeapVector.3879"* %26 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #15
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::HeapVector.3879"* %24 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %27, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %27, align 4
  store i32 %33, i32* %32, align 4
  %35 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 7, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %28, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %28, align 4
  store i32 %36, i32* %35, align 4
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %6
  %41 = bitcast %"class.blink::HeapVector.3879"* %24 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #15
  br label %44

44:                                               ; preds = %40, %6
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::HeapVector.3879"* %26 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #15
  br label %51

51:                                               ; preds = %44, %47
  br i1 %3, label %52, label %79

52:                                               ; preds = %51
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %79, label %55

55:                                               ; preds = %52
  %56 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %57 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %56, i64 0, i32 1
  %58 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %57) #15
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %62, !prof !3

60:                                               ; preds = %55
  %61 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %57, i8* %61) #15
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i8* [ %61, %60 ], [ %58, %55 ]
  %64 = bitcast i8* %63 to %"class.blink::ThreadState"**
  %65 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 9
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %79, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 13
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %74, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %8, i64 0, i32 7, i32 0
  tail call void @_ZNK3WTF6VectorIN5blink6MemberINS1_23NameSourceRelatedObjectEEELj0ENS1_13HeapAllocatorEE5TraceIPNS1_7VisitorES5_EENSt3__19enable_ifIXsrT0_19kIsGarbageCollectedEvE4typeET_(%"class.WTF::Vector.3882"* %76, %"class.blink::Visitor"* %75) #15
  %77 = load i64, i64* %70, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %70, align 8
  br label %79

79:                                               ; preds = %69, %62, %52, %51
  %80 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 0, i32 5, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #15
  br label %96

96:                                               ; preds = %95, %92, %79
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #15
  br label %112

112:                                              ; preds = %96, %108, %111
  %113 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %8, i64 1
  %114 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %7, i64 1
  %115 = icmp eq %"class.blink::DescriptionSource"* %114, %1
  br i1 %115, label %116, label %6

116:                                              ; preds = %112, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::DescriptionSource"* @_ZN3WTF6VectorIN5blink17DescriptionSourceELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3998"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #15
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0), i8* %14, i8* %15) #15
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  %23 = getelementptr inbounds %"class.WTF::Vector.3998", %"class.WTF::Vector.3998"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::DescriptionSource"*, %"class.blink::DescriptionSource"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::DescriptionSource", %"class.blink::DescriptionSource"* %24, i64 %25
  ret %"class.blink::DescriptionSource"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKNS_12AtomicStringEEEvOT_(%"class.WTF::Vector.630"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #15
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #15
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #15
  %36 = bitcast %"class.WTF::Vector.630"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #15
  %40 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #15
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !3

67:                                               ; preds = %58
  tail call void @llvm.trap() #15
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %45, %53, %68
  %71 = load i32, i32* %3, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.47, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.48, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!8 = distinct !{!8, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!9 = distinct !{!9, !10, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!10 = distinct !{!10, !"_ZN11SkImageInfo7MakeN32Eii11SkAlphaType5sk_spI12SkColorSpaceE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!13 = distinct !{!13, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
