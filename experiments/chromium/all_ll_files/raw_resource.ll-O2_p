; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/raw_resource.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/raw_resource.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.132", i32, [4 x i8], %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.270", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.287", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.305", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.312", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.250", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__cxx_atomic_impl.171" }
%"struct.std::__1::__cxx_atomic_impl.171" = type { %"struct.std::__1::__cxx_atomic_base_impl.172" }
%"struct.std::__1::__cxx_atomic_base_impl.172" = type { i64 }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::Worklist.179"* }
%"class.blink::Worklist.179" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::Worklist.186"* }
%"class.blink::Worklist.186" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::Worklist.193"* }
%"class.blink::Worklist.193" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::Worklist.200"* }
%"class.blink::Worklist.200" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::Worklist.207"* }
%"class.blink::Worklist.207" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::Worklist.221"* }
%"class.blink::Worklist.221" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.168" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.228", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.244", [4 x i8] }>
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { i64 }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { float }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.253", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.262" }
%"class.WTF::Vector.262" = type { %"class.WTF::VectorBuffer.263" }
%"class.WTF::VectorBuffer.263" = type { %"class.WTF::VectorBufferBase.264" }
%"class.WTF::VectorBufferBase.264" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.278" }
%"class.WTF::VectorBuffer.278" = type { %"class.WTF::VectorBufferBase.279" }
%"class.WTF::VectorBufferBase.279" = type { %"struct.std::__1::pair.280"*, i32, i32 }
%"struct.std::__1::pair.280" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.293" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.179"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.186"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.193"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.200"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.207"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.369", i64 }
%"class.std::__1::vector.369" = type { %"class.std::__1::__vector_base.370" }
%"class.std::__1::__vector_base.370" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.371" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.312" = type { %"struct.std::__1::__atomic_base.313" }
%"struct.std::__1::__atomic_base.313" = type { %"struct.std::__1::__cxx_atomic_impl.314" }
%"struct.std::__1::__cxx_atomic_impl.314" = type { %"struct.std::__1::__cxx_atomic_base_impl.315" }
%"struct.std::__1::__cxx_atomic_base_impl.315" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashSet<WTF::AtomicString, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashSet<WTF::AtomicString, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i32 }
%"class.blink::RawResource" = type <{ %"class.blink::Resource", %class.scoped_refptr.343, %"class.blink::Member.346", i8, [7 x i8] }>
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.21", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member", %"class.blink::ResourceResponse", %class.scoped_refptr.321, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.2", i8, %"class.absl::optional.11", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, [7 x i8], %union.anon.6 }
%union.anon.6 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.11" = type { %"class.absl::optional_internal::optional_data.12" }
%"class.absl::optional_internal::optional_data.12" = type { %"class.absl::optional_internal::optional_data_base.13" }
%"class.absl::optional_internal::optional_data_base.13" = type { %"class.absl::optional_internal::optional_data_dtor_base.14" }
%"class.absl::optional_internal::optional_data_dtor_base.14" = type { i8, %union.anon.15 }
%union.anon.15 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector", %"class.WTF::Vector.16" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.WTF::Vector.16" = type { %"class.WTF::VectorBuffer.17" }
%"class.WTF::VectorBuffer.17" = type { %"class.WTF::VectorBufferBase.18" }
%"class.WTF::VectorBufferBase.18" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.21" = type { %"class.WTF::VectorBuffer.22" }
%"class.WTF::VectorBuffer.22" = type { %"class.WTF::VectorBufferBase.23" }
%"class.WTF::VectorBufferBase.23" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.118" }
%"class.WTF::HashMap.118" = type { %"class.WTF::HashTable.119" }
%"class.WTF::HashTable.119" = type <{ %"struct.WTF::KeyValuePair.121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.121" = type <{ %"class.blink::WeakMember.627", i32, [4 x i8] }>
%"class.blink::WeakMember.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.519", [7 x i8], %"class.blink::Member.481", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.519" = type { i8 }
%"class.blink::Member.481" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::Resource"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.124" }
%"class.WTF::HashTable.124" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.126", i8, i8, %class.scoped_refptr.130, %class.scoped_refptr.316, %class.scoped_refptr.318 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.126" = type { %"class.WTF::HashTable.127" }
%"class.WTF::HashTable.127" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.130 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.131" }
%"class.base::RefCounted.131" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.316 = type { %"class.base::RefCountedData.317"* }
%"class.base::RefCountedData.317" = type opaque
%class.scoped_refptr.318 = type { %"class.base::RefCountedData.319"* }
%"class.base::RefCountedData.319" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.81" }
%"class.base::time_internal::TimeBase.81" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.320 }
%class.scoped_refptr.320 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.29, %class.scoped_refptr.29, %class.scoped_refptr.29, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.45", %"class.absl::optional.50", %"class.absl::optional.60", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.70", %"class.absl::optional.60", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.60", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.70", %"class.absl::optional.75", i8, %class.scoped_refptr.80 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.24" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%union.anon.28 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.29 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.376", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.24", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.29 }
%"class.WTF::RefCounted.376" = type { %"class.base::RefCounted.377" }
%"class.base::RefCounted.377" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.32 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.39, i8, %"class.url::Origin" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.33"*, %"class.std::__1::unique_ptr.33"*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::unique_ptr.33"* }
%class.scoped_refptr.39 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.40" }
%"class.absl::optional.45" = type { %"class.absl::optional_internal::optional_data.46" }
%"class.absl::optional_internal::optional_data.46" = type { %"class.absl::optional_internal::optional_data_base.47" }
%"class.absl::optional_internal::optional_data_base.47" = type { %"class.absl::optional_internal::optional_data_dtor_base.48" }
%"class.absl::optional_internal::optional_data_dtor_base.48" = type { i8, %union.anon.49 }
%union.anon.49 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.50" = type { %"class.absl::optional_internal::optional_data.51" }
%"class.absl::optional_internal::optional_data.51" = type { %"class.absl::optional_internal::optional_data_base.52" }
%"class.absl::optional_internal::optional_data_base.52" = type { %"class.absl::optional_internal::optional_data_dtor_base.53" }
%"class.absl::optional_internal::optional_data_dtor_base.53" = type { i8, %union.anon.54 }
%union.anon.54 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.55", %"class.WTF::Vector.16", %"class.WTF::String" }
%"class.WTF::Vector.55" = type { %"class.WTF::VectorBuffer.56" }
%"class.WTF::VectorBuffer.56" = type { %"class.WTF::VectorBufferBase.57" }
%"class.WTF::VectorBufferBase.57" = type { %class.scoped_refptr.29*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.65", %"class.absl::optional.65" }
%"class.absl::optional.65" = type { %"class.absl::optional_internal::optional_data.66" }
%"class.absl::optional_internal::optional_data.66" = type { %"class.absl::optional_internal::optional_data_base.67" }
%"class.absl::optional_internal::optional_data_base.67" = type { %"class.absl::optional_internal::optional_data_dtor_base.68" }
%"class.absl::optional_internal::optional_data_dtor_base.68" = type { i8, %union.anon.69 }
%union.anon.69 = type { %"class.base::TimeDelta" }
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%union.anon.64 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.70" = type { %"class.absl::optional_internal::optional_data.71" }
%"class.absl::optional_internal::optional_data.71" = type { %"class.absl::optional_internal::optional_data_base.72" }
%"class.absl::optional_internal::optional_data_base.72" = type { %"class.absl::optional_internal::optional_data_dtor_base.73" }
%"class.absl::optional_internal::optional_data_dtor_base.73" = type { i8, %union.anon.74 }
%union.anon.74 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.75" = type { %"class.absl::optional_internal::optional_data.76" }
%"class.absl::optional_internal::optional_data.76" = type { %"class.absl::optional_internal::optional_data_base.77" }
%"class.absl::optional_internal::optional_data_base.77" = type { %"class.absl::optional_internal::optional_data_dtor_base.78" }
%"class.absl::optional_internal::optional_data_dtor_base.78" = type { i8, %union.anon.79 }
%union.anon.79 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.80 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.619", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.619" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.620" }
%"class.std::__1::vector.620" = type { %"class.std::__1::__vector_base.621" }
%"class.std::__1::__vector_base.621" = type { i32*, i32*, %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { i32* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.82", %class.scoped_refptr.97, %class.scoped_refptr.98, %"struct.blink::CacheControlHeader", %"class.absl::optional.65", %"class.absl::optional.99", %"class.absl::optional.99", %"class.absl::optional.99", i64, %"class.blink::KURL", %"class.WTF::Vector.104", %"class.WTF::String", %"class.WTF::Vector.16", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.70", %"class.WTF::Vector.16", %"class.blink::KURL", %"class.absl::optional.109" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.82" = type { %"class.absl::optional_internal::optional_data.83" }
%"class.absl::optional_internal::optional_data.83" = type { %"class.absl::optional_internal::optional_data_base.84" }
%"class.absl::optional_internal::optional_data_base.84" = type { %"class.absl::optional_internal::optional_data_dtor_base.85" }
%"class.absl::optional_internal::optional_data_dtor_base.85" = type { i8, %union.anon.86 }
%union.anon.86 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.16", %"class.WTF::String", i64, i64, %"class.WTF::Vector.87", %"class.WTF::Vector.92" }
%"class.WTF::Vector.87" = type { %"class.WTF::VectorBuffer.88" }
%"class.WTF::VectorBuffer.88" = type { %"class.WTF::VectorBufferBase.89" }
%"class.WTF::VectorBufferBase.89" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.92" = type { %"class.WTF::VectorBuffer.93" }
%"class.WTF::VectorBuffer.93" = type { %"class.WTF::VectorBufferBase.94" }
%"class.WTF::VectorBufferBase.94" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.97 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.98 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.99" = type { %"class.absl::optional_internal::optional_data.100" }
%"class.absl::optional_internal::optional_data.100" = type { %"class.absl::optional_internal::optional_data_base.101" }
%"class.absl::optional_internal::optional_data_base.101" = type { %"class.absl::optional_internal::optional_data_dtor_base.102" }
%"class.absl::optional_internal::optional_data_dtor_base.102" = type { i8, %union.anon.103 }
%union.anon.103 = type { %"class.base::Time" }
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, %union.anon.113 }
%union.anon.113 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.321 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.322", i64, %"class.WTF::Vector.324", %"class.WTF::Vector.329" }
%"class.WTF::RefCounted.322" = type { %"class.base::RefCounted.323" }
%"class.base::RefCounted.323" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.324" = type { %"class.WTF::VectorBuffer.325" }
%"class.WTF::VectorBuffer.325" = type { %"class.WTF::VectorBufferBase.326" }
%"class.WTF::VectorBufferBase.326" = type { i8*, i32, i32 }
%"class.WTF::Vector.329" = type { %"class.WTF::VectorBuffer.330" }
%"class.WTF::VectorBuffer.330" = type { %"class.WTF::VectorBufferBase.331" }
%"class.WTF::VectorBufferBase.331" = type { %"class.std::__1::unique_ptr.332"*, i32, i32 }
%"class.std::__1::unique_ptr.332" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.335", %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%class.scoped_refptr.343 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.345", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.344" }
%"class.base::RefCountedThreadSafe.344" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.345" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::BufferingBytesConsumer"* }
%"class.blink::BufferingBytesConsumer" = type { %"class.blink::BytesConsumer", %"class.blink::BytesConsumer::Client", %"class.blink::Member.350", %"class.blink::HeapTaskRunnerTimer", %"class.WTF::Deque.362", i64, i32, i8, i8, %"class.blink::Member.367" }
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::BytesConsumer"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.361", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.352, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.352 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.353" }>
%"class.base::RefCountedThreadSafe.353" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.354 }
%class.scoped_refptr.354 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.355", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.355" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.356" }
%"struct.std::__1::atomic.356" = type { %"struct.std::__1::__atomic_base.357" }
%"struct.std::__1::__atomic_base.357" = type { %"struct.std::__1::__atomic_base.358" }
%"struct.std::__1::__atomic_base.358" = type { %"struct.std::__1::__cxx_atomic_impl.359" }
%"struct.std::__1::__cxx_atomic_impl.359" = type { %"struct.std::__1::__cxx_atomic_base_impl.360" }
%"struct.std::__1::__cxx_atomic_base_impl.360" = type { i8 }
%"class.blink::WeakMember.361" = type { %"class.blink::MemberBase.347" }
%"class.WTF::Deque.362" = type { %"class.WTF::Deque<WTF::Vector<char, 0, WTF::PartitionAllocator>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<WTF::Vector<char, 0, WTF::PartitionAllocator>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { %"class.WTF::Vector.324"*, i32, i32 }
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::BytesConsumer::Client"* }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.378, %"class.mojo::PendingRemote.387" }
%class.scoped_refptr.378 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.379", [4 x i8], %"class.WTF::Vector.381", i64, %"class.WTF::Vector.324", i8, [7 x i8] }>
%"class.WTF::RefCounted.379" = type { %"class.base::RefCounted.380" }
%"class.base::RefCounted.380" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.381" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.383" }
%"class.WTF::VectorBufferBase.383" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.324", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.343, i64, i64, %"class.absl::optional.99", %class.scoped_refptr.384 }
%class.scoped_refptr.384 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.mojo::PendingRemote.387" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::RawResourceClientStateChecker" = type { i32 }
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.390", %"class.blink::Member.392", %"class.blink::Member.394", %class.scoped_refptr.352, %class.scoped_refptr.352, %"class.blink::Member.396", %"class.blink::Member.398", %"class.blink::Member.400", %"class.blink::Member.404", %"class.blink::Member.452", %"class.blink::HeapHashMap.454", %"class.blink::HeapHashSet.461", %"class.blink::HeapHashSet.461", %"class.blink::HeapHashMap.469", %"class.blink::HeapVector", %"class.blink::Member.483", %"class.blink::HeapTaskRunnerTimer.485", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.488", %"class.WTF::Vector.495", %"class.blink::HeapHashSet.501", %"class.blink::HeapHashSet.501", %"class.std::__1::unique_ptr.507", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.516", i8, i8, %"class.base::WeakPtrFactory.518" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.408", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.410", %"class.WTF::HashSet.415", i8, [3 x i8], i32, %"class.blink::HeapHashMap", %"class.std::__1::map", %"class.std::__1::map.434", %"class.std::__1::unique_ptr.443", %"class.blink::Member.398", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.450", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.410" = type { %"class.WTF::HashTable.411" }
%"class.WTF::HashTable.411" = type <{ %"struct.WTF::KeyValuePair.414"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.414" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.421" }
%"class.WTF::HashMap.421" = type { %"class.WTF::HashTable.422" }
%"class.WTF::HashTable.422" = type <{ %"struct.WTF::KeyValuePair.424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.424" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.425" }
%"class.std::__1::__tree.425" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.426", %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"class.std::__1::map.434" = type { %"class.std::__1::__tree.435" }
%"class.std::__1::__tree.435" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.436", %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.454" = type { %"class.WTF::HashMap.457" }
%"class.WTF::HashMap.457" = type { %"class.WTF::HashTable.458" }
%"class.WTF::HashTable.458" = type <{ %"struct.WTF::KeyValuePair.460"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.460" = type opaque
%"class.blink::HeapHashSet.461" = type { %"class.WTF::HashSet.464" }
%"class.WTF::HashSet.464" = type { %"class.WTF::HashTable.465" }
%"class.WTF::HashTable.465" = type <{ %"class.blink::WeakMember.467"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::HeapHashMap.469" = type { %"class.WTF::HashMap.472" }
%"class.WTF::HashMap.472" = type { %"class.WTF::HashTable.473" }
%"class.WTF::HashTable.473" = type <{ %"struct.WTF::KeyValuePair.475"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.475" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.478" }
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { %"class.blink::Member.481"*, i32, i32 }
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.485" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.486", { i64, i64 } }
%"class.blink::WeakMember.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::HeapHashMap.488" = type { %"class.WTF::HashMap.491" }
%"class.WTF::HashMap.491" = type { %"class.WTF::HashTable.492" }
%"class.WTF::HashTable.492" = type <{ %"struct.WTF::KeyValuePair.494"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.494" = type opaque
%"class.WTF::Vector.495" = type { %"class.WTF::VectorBuffer.496" }
%"class.WTF::VectorBuffer.496" = type { %"class.WTF::VectorBufferBase.497" }
%"class.WTF::VectorBufferBase.497" = type { %class.scoped_refptr.498*, i32, i32 }
%class.scoped_refptr.498 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.501" = type { %"class.WTF::HashSet.504" }
%"class.WTF::HashSet.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.WTF::HashSet.510"* }
%"class.WTF::HashSet.510" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.446 }
%class.scoped_refptr.446 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.514" }
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.518" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::RawResourceClient" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.519", [7 x i8], %"class.blink::Member.481", i8 }>
%"class.blink::RawResource::RawResourceFactory" = type { %"class.blink::NonTextResourceFactory" }
%"class.blink::NonTextResourceFactory" = type { %"class.blink::ResourceFactory" }
%"class.blink::ResourceFactory" = type { i32 (...)**, i8, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::RawResource::PreloadBytesConsumerClient" = type { %"class.blink::BytesConsumer::Client", %"class.blink::Member.350", %"class.blink::Member.522", %"class.blink::WeakMember.524" }
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::RawResource"* }
%"class.blink::WeakMember.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::RawResourceClient"* }
%"class.blink::ResourceClientWalker" = type <{ %"class.blink::HeapHashCountedSet"*, %"class.blink::HeapVector.526", i32, [4 x i8] }>
%"class.blink::HeapVector.526" = type { %"class.WTF::Vector.529" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { %"class.blink::Member.532"*, i32, i32 }
%"class.blink::Member.532" = type { %"class.blink::MemberBase.628" }
%"class.blink::ResponseBodyLoaderDrainableInterface" = type { i32 (...)** }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.353", [4 x i8] }>
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.536", i64, %"class.absl::optional.542" }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { i8* }
%"class.absl::optional.542" = type { %"class.absl::optional_internal::optional_data.543" }
%"class.absl::optional_internal::optional_data.543" = type { %"class.absl::optional_internal::optional_data_base.544" }
%"class.absl::optional_internal::optional_data_base.544" = type { %"class.absl::optional_internal::optional_data_dtor_base.545" }
%"class.absl::optional_internal::optional_data_dtor_base.545" = type { i8, %union.anon.546 }
%union.anon.546 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.547", %"class.std::__1::unique_ptr.548" }
%"class.mojo::ScopedHandleBase.547" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::HashTable.653" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WebProcessMemoryDump" = type { %"class.std::__1::unique_ptr.557", %"class.base::trace_event::ProcessMemoryDump"*, i32, [4 x i8], %"class.WTF::HashMap.603", %"class.WTF::Vector.608" }
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.base::trace_event::ProcessMemoryDump"* }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map.560", %"class.std::__1::map.571", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.582" }
%"class.std::__1::map.560" = type { %"class.std::__1::__tree.561" }
%"class.std::__1::__tree.561" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.562", %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"class.std::__1::map.571" = type { %"class.std::__1::__tree.572" }
%"class.std::__1::__tree.572" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional.585", %"class.std::__1::vector.590" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional.585" = type { %"class.absl::optional_internal::optional_data.586" }
%"class.absl::optional_internal::optional_data.586" = type { %"class.absl::optional_internal::optional_data_base.587" }
%"class.absl::optional_internal::optional_data_base.587" = type { %"class.absl::optional_internal::optional_data_dtor_base.588" }
%"class.absl::optional_internal::optional_data_dtor_base.588" = type { i8, %union.anon.589 }
%union.anon.589 = type { i64 }
%"class.std::__1::vector.590" = type { %"class.std::__1::__vector_base.591" }
%"class.std::__1::__vector_base.591" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.592" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.607"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.607" = type opaque
%"class.WTF::Vector.608" = type { %"class.WTF::VectorBuffer.609" }
%"class.WTF::VectorBuffer.609" = type { %"class.WTF::VectorBufferBase.610" }
%"class.WTF::VectorBufferBase.610" = type { %"class.std::__1::unique_ptr.611"*, i32, i32 }
%"class.std::__1::unique_ptr.611" = type opaque
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringHasher" = type { i32, i8, i16 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.631", %"class.blink::FreeList", %"class.WTF::Vector.636" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.630" }
%"struct.std::__1::array.630" = type { [256 x i8] }
%"class.WTF::Vector.631" = type { %"class.WTF::VectorBuffer.632" }
%"class.WTF::VectorBuffer.632" = type { %"class.WTF::VectorBufferBase.633" }
%"class.WTF::VectorBufferBase.633" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.636" = type { %"class.WTF::VectorBuffer.637" }
%"class.WTF::VectorBuffer.637" = type { %"class.WTF::VectorBufferBase.638" }
%"class.WTF::VectorBufferBase.638" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink11RawResource26PreloadBytesConsumerClient13OnStateChangeEv = comdat any

$_ZN5blink11RawResourceD2Ev = comdat any

$_ZN5blink11RawResourceD0Ev = comdat any

$_ZN5blink22MemoryPressureListener16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE = comdat any

$_ZNK5blink8Resource8EncodingEv = comdat any

$_ZNK5blink11RawResource32ShouldIgnoreHTTPStatusCodeErrorsEv = comdat any

$_ZN5blink8Resource21PriorityFromObserversEv = comdat any

$_ZNK5blink8Resource13CodeCacheSizeEv = comdat any

$_ZNK5blink8Resource14ResourceBufferEv = comdat any

$_ZN5blink8Resource28WillReloadAfterDiskCacheMissEv = comdat any

$_ZN5blink8Resource15NotifyStartLoadEv = comdat any

$_ZNK5blink8Resource21HasClientsOrObserversEv = comdat any

$_ZN5blink8Resource39DestroyDecodedDataForFailedRevalidationEv = comdat any

$_ZN5blink8Resource28DestroyDecodedDataIfPossibleEv = comdat any

$_ZN5blink8Resource11SetEncodingERKN3WTF6StringE = comdat any

$_ZN5blink14ResourceClientD2Ev = comdat any

$_ZN5blink17RawResourceClientD0Ev = comdat any

$_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm = comdat any

$_ZN5blink14ResourceClient14NotifyFinishedEPNS_8ResourceE = comdat any

$_ZNK5blink14ResourceClient20IsFontResourceClientEv = comdat any

$_ZNK5blink17RawResourceClient19IsRawResourceClientEv = comdat any

$_ZN5blink17RawResourceClient8DataSentEPNS_8ResourceEmm = comdat any

$_ZN5blink17RawResourceClient20ResponseBodyReceivedEPNS_8ResourceERNS_13BytesConsumerE = comdat any

$_ZN5blink17RawResourceClient16ResponseReceivedEPNS_8ResourceERKNS_16ResourceResponseE = comdat any

$_ZN5blink17RawResourceClient22CachedMetadataReceivedEPNS_8ResourceEN9mojo_base9BigBufferE = comdat any

$_ZN5blink17RawResourceClient16RedirectReceivedEPNS_8ResourceERKNS_15ResourceRequestERKNS_16ResourceResponseE = comdat any

$_ZN5blink17RawResourceClient15RedirectBlockedEv = comdat any

$_ZN5blink17RawResourceClient14DataDownloadedEPNS_8ResourceEm = comdat any

$_ZNK5blink22NonTextResourceFactory6CreateERKNS_15ResourceRequestERKNS_21ResourceLoaderOptionsERKNS_26TextResourceDecoderOptionsE = comdat any

$_ZNK5blink11RawResource18RawResourceFactory6CreateERKNS_15ResourceRequestERKNS_21ResourceLoaderOptionsE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_8ResourceEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8ResourceEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8ResourceEE7GetNameEPKv = comdat any

$_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZZN7logging15CheckOpValueStrIhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11RawResource26PreloadBytesConsumerClientEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11RawResource26PreloadBytesConsumerClientEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11RawResource26PreloadBytesConsumerClientEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11RawResource26PreloadBytesConsumerClientEE7GetNameEPKv = comdat any

$_ZNK5blink11RawResource26PreloadBytesConsumerClient5TraceEPNS_7VisitorE = comdat any

$_ZN5blink7Visitor5TraceINS_17RawResourceClientEEEvRKNS_10WeakMemberIT_EE = comdat any

$_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11RawResourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_17RawResourceClientEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_17RawResourceClientEEEbPKT_ = comdat any

$_ZN5blink13BytesConsumer6ClientD2Ev = comdat any

$_ZN5blink11RawResource26PreloadBytesConsumerClientD0Ev = comdat any

$_ZNK5blink11RawResource26PreloadBytesConsumerClient9DebugNameEv = comdat any

$_ZN3WTF12CopyToVectorIN5blink10WeakMemberINS1_14ResourceClientEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS1_13HeapAllocatorENS1_10HeapVectorINS1_6MemberIS3_EELj0EEEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ResourceClientEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_22BufferingBytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink11RawResource18RawResourceFactoryE = comdat any

$_ZZN5blink11GCInfoTraitINS_8ResourceEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8ResourceEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11RawResource26PreloadBytesConsumerClientEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11RawResource26PreloadBytesConsumerClientEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink11RawResource26PreloadBytesConsumerClientE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink11RawResourceE = hidden unnamed_addr constant { [38 x i8*] } { [38 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::RawResource"*, %"class.blink::Visitor"*)* @_ZNK5blink11RawResource5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::RawResource"*)* @_ZN5blink11RawResourceD2Ev to i8*), i8* bitcast (void (%"class.blink::RawResource"*)* @_ZN5blink11RawResourceD0Ev to i8*), i8* bitcast (void (%"class.blink::MemoryPressureListener"*, i32)* @_ZN5blink22MemoryPressureListener16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE to i8*), i8* bitcast (void (%"class.blink::Resource"*)* @_ZN5blink8Resource13OnPurgeMemoryEv to i8*), i8* bitcast (i8* (%"class.blink::Resource"*)* @_ZNK5blink8Resource8EncodingEv to i8*), i8* bitcast (void (%"class.blink::RawResource"*, i8*, i64)* @_ZN5blink11RawResource10AppendDataEPKcm to i8*), i8* bitcast (void (%"class.blink::Resource"*, %"class.blink::ResourceError"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink8Resource13FinishAsErrorERKNS_13ResourceErrorEPN4base22SingleThreadTaskRunnerE to i8*), i8* bitcast (i1 (%"class.blink::RawResource"*)* @_ZNK5blink11RawResource32ShouldIgnoreHTTPStatusCodeErrorsEv to i8*), i8* bitcast (void (%"class.blink::Resource"*, %"class.blink::ResourceRequestHead"*)* @_ZN5blink8Resource22SetRevalidatingRequestERKNS_19ResourceRequestHeadE to i8*), i8* bitcast (i64 (%"class.blink::Resource"*)* @_ZN5blink8Resource21PriorityFromObserversEv to i8*), i8* bitcast (i64 (%"class.blink::Resource"*)* @_ZNK5blink8Resource13CodeCacheSizeEv to i8*), i8* bitcast (void (%"class.blink::Resource"*, i64, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink8Resource6FinishEN4base9TimeTicksEPNS1_22SingleThreadTaskRunnerE to i8*), i8* bitcast (%"class.WTF::SharedBuffer"* (%"class.blink::Resource"*)* @_ZNK5blink8Resource14ResourceBufferEv to i8*), i8* bitcast (i1 (%"class.blink::RawResource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)* @_ZN5blink11RawResource18WillFollowRedirectERKNS_15ResourceRequestERKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::RawResource"*)* @_ZN5blink11RawResource21WillNotFollowRedirectEv to i8*), i8* bitcast (void (%"class.blink::RawResource"*, %"class.blink::ResourceResponse"*)* @_ZN5blink11RawResource16ResponseReceivedERKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::RawResource"*, %"class.blink::ResponseBodyLoaderDrainableInterface"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink11RawResource20ResponseBodyReceivedERNS_36ResponseBodyLoaderDrainableInterfaceE13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i8*), i8* bitcast (void (%"class.blink::RawResource"*, %"class.mojo_base::BigBuffer"*)* @_ZN5blink11RawResource27SetSerializedCachedMetadataEN9mojo_base9BigBufferE to i8*), i8* bitcast (void (%"class.blink::RawResource"*, %"class.blink::FetchParameters"*)* @_ZN5blink11RawResource12MatchPreloadERKNS_15FetchParametersE to i8*), i8* bitcast (i1 (%"class.blink::Resource"*)* @_ZNK5blink8Resource20CanUseCacheValidatorEv to i8*), i8* bitcast (void (%"class.blink::RawResource"*, i64, i64)* @_ZN5blink11RawResource11DidSendDataEmm to i8*), i8* bitcast (void (%"class.blink::RawResource"*, i64)* @_ZN5blink11RawResource15DidDownloadDataEm to i8*), i8* bitcast (void (%"class.blink::RawResource"*, %"class.blink::BlobDataHandle"*)* @_ZN5blink11RawResource17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE to i8*), i8* bitcast (i32 (%"class.blink::RawResource"*, %"class.blink::FetchParameters"*)* @_ZNK5blink11RawResource8CanReuseERKNS_15FetchParametersE to i8*), i8* bitcast (void (%"class.blink::Resource"*)* @_ZN5blink8Resource28WillReloadAfterDiskCacheMissEv to i8*), i8* bitcast (void (%"class.blink::Resource"*, i32, %"class.blink::WebProcessMemoryDump"*)* @_ZNK5blink8Resource12OnMemoryDumpENS_26WebMemoryDumpLevelOfDetailEPNS_20WebProcessMemoryDumpE to i8*), i8* bitcast (void (%"class.blink::Resource"*)* @_ZN5blink8Resource15NotifyStartLoadEv to i8*), i8* bitcast (void (%"class.blink::Resource"*, i8*, i64)* @_ZN5blink8Resource18NotifyDataReceivedEPKcm to i8*), i8* bitcast (void (%"class.blink::Resource"*)* @_ZN5blink8Resource14NotifyFinishedEv to i8*), i8* bitcast (i1 (%"class.blink::Resource"*)* @_ZNK5blink8Resource21HasClientsOrObserversEv to i8*), i8* bitcast (void (%"class.blink::Resource"*)* @_ZN5blink8Resource39DestroyDecodedDataForFailedRevalidationEv to i8*), i8* bitcast (void (%"class.blink::RawResource"*, %"class.blink::ResourceClient"*)* @_ZN5blink11RawResource12DidAddClientEPNS_14ResourceClientE to i8*), i8* bitcast (void (%"class.blink::Resource"*)* @_ZN5blink8Resource29AllClientsAndObserversRemovedEv to i8*), i8* bitcast (void (%"class.blink::Resource"*)* @_ZN5blink8Resource28DestroyDecodedDataIfPossibleEv to i8*), i8* bitcast (void (%"class.blink::Resource"*, %"class.WTF::String"*)* @_ZN5blink8Resource11SetEncodingERKN3WTF6StringE to i8*)] }, align 8
@.str = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/platform/loader/fetch/raw_resource.cc\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"!IsCacheValidator()\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"Clients().size() <= 1u\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"state_ == kNotAddedAsClient\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"state_ != kNotAddedAsClient\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"state_ == kStarted\00", align 1
@.str.6 = private unnamed_addr constant [70 x i8] c"state_ == kResponseReceived || state_ == kDataReceivedAsBytesConsumer\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"state_ == kResponseReceived\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"state_ == kResponseReceived || state_ == kDataReceived\00", align 1
@.str.9 = private unnamed_addr constant [57 x i8] c"state_ == kResponseReceived || state_ == kDataDownloaded\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"state_ != kNotifyFinished\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"state_ != kStarted\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"state_ != kRedirectBlocked\00", align 1
@.str.13 = private unnamed_addr constant [189 x i8] c"resource->ErrorOccurred() || (state_ == kResponseReceived || state_ == kDataReceived || state_ == kDataDownloaded || state_ == kDataReceivedAsBytesConsumer || state_ == kDidDownloadToBlob)\00", align 1
@_ZTVN5blink17RawResourceClientE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ResourceClient"*, %"class.blink::Visitor"*)* @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*)* @_ZN5blink14ResourceClientD2Ev to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*)* @_ZN5blink17RawResourceClientD0Ev to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)* @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*)* @_ZN5blink14ResourceClient14NotifyFinishedEPNS_8ResourceE to i8*), i8* bitcast (i1 (%"class.blink::ResourceClient"*)* @_ZNK5blink14ResourceClient20IsFontResourceClientEv to i8*), i8* bitcast (i1 (%"class.blink::RawResourceClient"*)* @_ZNK5blink17RawResourceClient19IsRawResourceClientEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64, i64)* @_ZN5blink17RawResourceClient8DataSentEPNS_8ResourceEmm to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)* @_ZN5blink17RawResourceClient20ResponseBodyReceivedEPNS_8ResourceERNS_13BytesConsumerE to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)* @_ZN5blink17RawResourceClient16ResponseReceivedEPNS_8ResourceERKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*)* @_ZN5blink17RawResourceClient22CachedMetadataReceivedEPNS_8ResourceEN9mojo_base9BigBufferE to i8*), i8* bitcast (i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)* @_ZN5blink17RawResourceClient16RedirectReceivedEPNS_8ResourceERKNS_15ResourceRequestERKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*)* @_ZN5blink17RawResourceClient15RedirectBlockedEv to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64)* @_ZN5blink17RawResourceClient14DataDownloadedEPNS_8ResourceEm to i8*), i8* bitcast (void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BlobDataHandle"*)* @_ZN5blink17RawResourceClient17DidDownloadToBlobEPNS_8ResourceE13scoped_refptrINS_14BlobDataHandleEE to i8*)] }, align 8
@_ZTVN5blink11RawResource18RawResourceFactoryE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (%"class.blink::Resource"* (%"class.blink::NonTextResourceFactory"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*, %"class.blink::TextResourceDecoderOptions"*)* @_ZNK5blink22NonTextResourceFactory6CreateERKNS_15ResourceRequestERKNS_21ResourceLoaderOptionsERKNS_26TextResourceDecoderOptionsE to i8*), i8* bitcast (%"class.blink::Resource"* (%"class.blink::RawResource::RawResourceFactory"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*)* @_ZNK5blink11RawResource18RawResourceFactory6CreateERKNS_15ResourceRequestERKNS_21ResourceLoaderOptionsE to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8ResourceEEEPKcv = private unnamed_addr constant [63 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Resource]\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8ResourceEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8ResourceEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8ResourceEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8ResourceEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.16 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers = internal global i64 0, align 8
@.str.17 = private unnamed_addr constant [14 x i8] c"Cache-Control\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"If-Modified-Since\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"If-None-Match\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"Origin\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"Pragma\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"Purpose\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"Referer\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"User-Agent\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.26 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.28 = private unnamed_addr constant [39 x i8] c"status_ == ResourceStatus::kNotStarted\00", align 1
@.str.29 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/loader/fetch/resource.h\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11RawResource26PreloadBytesConsumerClientEEEPKcv = private unnamed_addr constant [94 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::RawResource::PreloadBytesConsumerClient]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11RawResource26PreloadBytesConsumerClientEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11RawResource26PreloadBytesConsumerClientEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11RawResource26PreloadBytesConsumerClientEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11RawResource26PreloadBytesConsumerClientEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11RawResource26PreloadBytesConsumerClientEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink11RawResource26PreloadBytesConsumerClientE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::RawResource::PreloadBytesConsumerClient"*, %"class.blink::Visitor"*)* @_ZNK5blink11RawResource26PreloadBytesConsumerClient5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::BytesConsumer::Client"*)* @_ZN5blink13BytesConsumer6ClientD2Ev to i8*), i8* bitcast (void (%"class.blink::RawResource::PreloadBytesConsumerClient"*)* @_ZN5blink11RawResource26PreloadBytesConsumerClientD0Ev to i8*), i8* bitcast (void (%"class.blink::RawResource::PreloadBytesConsumerClient"*)* @_ZN5blink11RawResource26PreloadBytesConsumerClient13OnStateChangeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::RawResource::PreloadBytesConsumerClient"*)* @_ZNK5blink11RawResource26PreloadBytesConsumerClient9DebugNameEv to i8*)] }, comdat, align 8
@.str.31 = private unnamed_addr constant [27 x i8] c"PreloadBytesConsumerClient\00", align 1
@.str.32 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.33 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.34 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.35 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.37 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14ResourceClientEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ResourceClient>, WTF::VectorTraits<blink::Member<blink::ResourceClient> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.38 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.39 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.40 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

@_ZN5blink11RawResourceC1ERKNS_15ResourceRequestENS_12ResourceTypeERKNS_21ResourceLoaderOptionsE = hidden unnamed_addr alias void (%"class.blink::RawResource"*, %"class.blink::ResourceRequest"*, i8, %"struct.blink::ResourceLoaderOptions"*), void (%"class.blink::RawResource"*, %"class.blink::ResourceRequest"*, i8, %"struct.blink::ResourceLoaderOptions"*)* @_ZN5blink11RawResourceC2ERKNS_15ResourceRequestENS_12ResourceTypeERKNS_21ResourceLoaderOptionsE
@_ZN5blink29RawResourceClientStateCheckerC1Ev = hidden unnamed_addr alias void (%"class.blink::RawResourceClientStateChecker"*), void (%"class.blink::RawResourceClientStateChecker"*)* @_ZN5blink29RawResourceClientStateCheckerC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RawResource"* @_ZN5blink11RawResource18FetchSynchronouslyERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::RawResource::RawResourceFactory", align 8
  tail call void @_ZN5blink15FetchParameters15MakeSynchronousEv(%"class.blink::FetchParameters"* %0) #12
  %5 = bitcast %"class.blink::RawResource::RawResourceFactory"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 1
  store i8 5, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink11RawResource18RawResourceFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::RawResourceClient"* %2 to %"class.blink::ResourceClient"*
  %11 = call %"class.blink::Resource"* @_ZN5blink15ResourceFetcher15RequestResourceERNS_15FetchParametersERKNS_15ResourceFactoryEPNS_14ResourceClientE(%"class.blink::ResourceFetcher"* %1, %"class.blink::FetchParameters"* dereferenceable(1344) %0, %"class.blink::ResourceFactory"* nonnull dereferenceable(16) %9, %"class.blink::ResourceClient"* %10) #12
  %12 = bitcast %"class.blink::Resource"* %11 to %"class.blink::RawResource"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  ret %"class.blink::RawResource"* %12
}

declare void @_ZN5blink15FetchParameters15MakeSynchronousEv(%"class.blink::FetchParameters"*) local_unnamed_addr #1

declare %"class.blink::Resource"* @_ZN5blink15ResourceFetcher15RequestResourceERNS_15FetchParametersERKNS_15ResourceFactoryEPNS_14ResourceClientE(%"class.blink::ResourceFetcher"*, %"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFactory"* dereferenceable(16), %"class.blink::ResourceClient"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RawResource"* @_ZN5blink11RawResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::RawResource::RawResourceFactory", align 8
  %5 = bitcast %"class.blink::RawResource::RawResourceFactory"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 1
  store i8 5, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink11RawResource18RawResourceFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::RawResourceClient"* %2 to %"class.blink::ResourceClient"*
  %11 = call %"class.blink::Resource"* @_ZN5blink15ResourceFetcher15RequestResourceERNS_15FetchParametersERKNS_15ResourceFactoryEPNS_14ResourceClientE(%"class.blink::ResourceFetcher"* %1, %"class.blink::FetchParameters"* dereferenceable(1344) %0, %"class.blink::ResourceFactory"* nonnull dereferenceable(16) %9, %"class.blink::ResourceClient"* %10) #12
  %12 = bitcast %"class.blink::Resource"* %11 to %"class.blink::RawResource"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  ret %"class.blink::RawResource"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RawResource"* @_ZN5blink11RawResource10FetchMediaERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::RawResource::RawResourceFactory", align 8
  %5 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 15
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  %8 = select i1 %7, i8 10, i8 11
  %9 = bitcast %"class.blink::RawResource::RawResourceFactory"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 1
  store i8 %8, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink11RawResource18RawResourceFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::RawResourceClient"* %2 to %"class.blink::ResourceClient"*
  %15 = call %"class.blink::Resource"* @_ZN5blink15ResourceFetcher15RequestResourceERNS_15FetchParametersERKNS_15ResourceFactoryEPNS_14ResourceClientE(%"class.blink::ResourceFetcher"* %1, %"class.blink::FetchParameters"* dereferenceable(1344) %0, %"class.blink::ResourceFactory"* nonnull dereferenceable(16) %13, %"class.blink::ResourceClient"* %14) #12
  %16 = bitcast %"class.blink::Resource"* %15 to %"class.blink::RawResource"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret %"class.blink::RawResource"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RawResource"* @_ZN5blink11RawResource14FetchTextTrackERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::RawResource::RawResourceFactory", align 8
  %5 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 15
  store i32 29, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %0, i64 0, i32 0, i32 0, i32 16
  store i32 17, i32* %6, align 4
  %7 = bitcast %"class.blink::RawResource::RawResourceFactory"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 1
  store i8 9, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink11RawResource18RawResourceFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::RawResourceClient"* %2 to %"class.blink::ResourceClient"*
  %13 = call %"class.blink::Resource"* @_ZN5blink15ResourceFetcher15RequestResourceERNS_15FetchParametersERKNS_15ResourceFactoryEPNS_14ResourceClientE(%"class.blink::ResourceFetcher"* %1, %"class.blink::FetchParameters"* dereferenceable(1344) %0, %"class.blink::ResourceFactory"* nonnull dereferenceable(16) %11, %"class.blink::ResourceClient"* %12) #12
  %14 = bitcast %"class.blink::Resource"* %13 to %"class.blink::RawResource"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret %"class.blink::RawResource"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RawResource"* @_ZN5blink11RawResource13FetchManifestERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::RawResource::RawResourceFactory", align 8
  %5 = bitcast %"class.blink::RawResource::RawResourceFactory"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 1
  store i8 12, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink11RawResource18RawResourceFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %4, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::RawResourceClient"* %2 to %"class.blink::ResourceClient"*
  %11 = call %"class.blink::Resource"* @_ZN5blink15ResourceFetcher15RequestResourceERNS_15FetchParametersERKNS_15ResourceFactoryEPNS_14ResourceClientE(%"class.blink::ResourceFetcher"* %1, %"class.blink::FetchParameters"* dereferenceable(1344) %0, %"class.blink::ResourceFactory"* nonnull dereferenceable(16) %9, %"class.blink::ResourceClient"* %10) #12
  %12 = bitcast %"class.blink::Resource"* %11 to %"class.blink::RawResource"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  ret %"class.blink::RawResource"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11RawResourceC2ERKNS_15ResourceRequestENS_12ResourceTypeERKNS_21ResourceLoaderOptionsE(%"class.blink::RawResource"*, %"class.blink::ResourceRequest"* dereferenceable(1032), i8 zeroext, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0
  tail call void @_ZN5blink8ResourceC2ERKNS_19ResourceRequestHeadENS_12ResourceTypeERKNS_21ResourceLoaderOptionsE(%"class.blink::Resource"* %5, %"class.blink::ResourceRequestHead"* dereferenceable(1016) %6, i8 zeroext %2, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112) %3) #12
  %7 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*] }, { [38 x i8*] }* @_ZTVN5blink11RawResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 1, i32 0
  %9 = bitcast %"class.blink::BlobDataHandle"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 17, i1 false)
  ret void
}

declare void @_ZN5blink8ResourceC2ERKNS_19ResourceRequestHeadENS_12ResourceTypeERKNS_21ResourceLoaderOptionsE(%"class.blink::Resource"*, %"class.blink::ResourceRequestHead"* dereferenceable(1016), i8 zeroext, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11RawResource10AppendDataEPKcm(%"class.blink::RawResource"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 26, i32 8
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 64
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  tail call void @_ZN5blink8Resource10AppendDataEPKcm(%"class.blink::Resource"* %9, i8* %1, i64 %2) #12
  br label %10

10:                                               ; preds = %3, %8
  ret void
}

declare void @_ZN5blink8Resource10AppendDataEPKcm(%"class.blink::Resource"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11RawResource12DidAddClientEPNS_14ResourceClientE(%"class.blink::RawResource"*, %"class.blink::ResourceClient"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ResourceClient"*, align 8
  %4 = alloca %"class.blink::ResourceClient"*, align 8
  %5 = alloca %"class.blink::ResourceClient"*, align 8
  %6 = alloca %"class.blink::ResourceClient"*, align 8
  %7 = alloca %"class.blink::ResourceClient"*, align 8
  %8 = alloca %"class.blink::ResourceClient"*, align 8
  %9 = alloca %"class.blink::ResourceClient"*, align 8
  %10 = alloca %"class.blink::ResourceClient"*, align 8
  %11 = alloca %"class.blink::ResourceClient"*, align 8
  %12 = alloca %"class.blink::ResourceClient"*, align 8
  %13 = alloca %"class.blink::ResourceClient"*, align 8
  %14 = alloca %"class.blink::ResourceClient"*, align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %"class.blink::ResourceRequest", align 8
  %17 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %"class.blink::MemberBase.347", %"class.blink::MemberBase.347"* %17, i64 0, i32 0
  %19 = load %"class.blink::BufferingBytesConsumer"*, %"class.blink::BufferingBytesConsumer"** %18, align 8
  %20 = bitcast %"class.blink::MemberBase.347"* %17 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 10
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 158, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #12
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = ptrtoint %"class.blink::ResourceClient"* %1 to i64
  %30 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 19, i32 0, i32 0, i32 0
  %31 = bitcast %"class.blink::ResourceClient"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  %32 = bitcast %"class.blink::ResourceClient"** %10 to i64*
  store i64 %29, i64* %32, align 8
  %33 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %30, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br i1 %33, label %44, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %36 = bitcast %"class.blink::ResourceClient"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  %37 = bitcast %"class.blink::ResourceClient"** %9 to i64*
  store i64 %29, i64* %37, align 8
  %38 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %35, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br i1 %38, label %44, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 21, i32 0, i32 0, i32 0
  %41 = bitcast %"class.blink::ResourceClient"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12
  %42 = bitcast %"class.blink::ResourceClient"** %11 to i64*
  store i64 %29, i64* %42, align 8
  %43 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %40, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12
  br i1 %43, label %44, label %152

44:                                               ; preds = %28, %34, %39
  %45 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 13
  %46 = load i8, i8* %45, align 1, !range !2
  store i8 1, i8* %45, align 1
  %47 = bitcast %"class.blink::ResourceClient"* %1 to %"class.blink::RawResourceClient"*
  %48 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 18, i32 0, i32 0, i32 0
  %49 = load %"struct.blink::Resource::RedirectPair"*, %"struct.blink::Resource::RedirectPair"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 18, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"struct.blink::Resource::RedirectPair", %"struct.blink::Resource::RedirectPair"* %49, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %82, label %55

55:                                               ; preds = %44
  %56 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %16, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.blink::ResourceClient"* %1 to i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)***
  %58 = bitcast %"class.blink::ResourceClient"** %7 to i8*
  %59 = bitcast %"class.blink::ResourceClient"** %7 to i64*
  %60 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %61 = bitcast %"class.blink::ResourceClient"** %6 to i8*
  %62 = bitcast %"class.blink::ResourceClient"** %6 to i64*
  %63 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 21, i32 0, i32 0, i32 0
  %64 = bitcast %"class.blink::ResourceClient"** %8 to i8*
  %65 = bitcast %"class.blink::ResourceClient"** %8 to i64*
  br label %66

66:                                               ; preds = %55, %79
  %67 = phi %"struct.blink::Resource::RedirectPair"* [ %49, %55 ], [ %80, %79 ]
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %56) #12
  %68 = getelementptr inbounds %"struct.blink::Resource::RedirectPair", %"struct.blink::Resource::RedirectPair"* %67, i64 0, i32 0
  call void @_ZN5blink15ResourceRequestC1ERKNS_19ResourceRequestHeadE(%"class.blink::ResourceRequest"* nonnull %16, %"class.blink::ResourceRequestHead"* dereferenceable(1016) %68) #12
  %69 = getelementptr inbounds %"struct.blink::Resource::RedirectPair", %"struct.blink::Resource::RedirectPair"* %67, i64 0, i32 1
  %70 = load i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)**, i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)*** %57, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)*, i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)** %70, i64 12
  %72 = load i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)*, i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)** %71, align 8
  %73 = call zeroext i1 %72(%"class.blink::RawResourceClient"* %47, %"class.blink::Resource"* %21, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %16, %"class.blink::ResourceResponse"* dereferenceable(1072) %69) #12
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %56) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  store i64 %29, i64* %59, align 8
  %74 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %30, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #12
  br i1 %74, label %79, label %75

75:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #12
  store i64 %29, i64* %62, align 8
  %76 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %60, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #12
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #12
  store i64 %29, i64* %65, align 8
  %78 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %63, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #12
  br i1 %78, label %79, label %149

79:                                               ; preds = %66, %75, %77
  %80 = getelementptr inbounds %"struct.blink::Resource::RedirectPair", %"struct.blink::Resource::RedirectPair"* %67, i64 1
  %81 = icmp eq %"struct.blink::Resource::RedirectPair"* %80, %53
  br i1 %81, label %82, label %66

82:                                               ; preds = %79, %44
  %83 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 29, i32 12
  %84 = load i8, i8* %83, align 2, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 29
  %88 = bitcast %"class.blink::ResourceClient"* %1 to void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)***
  %89 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)**, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)** %89, i64 10
  %91 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)** %90, align 8
  call void %91(%"class.blink::RawResourceClient"* %47, %"class.blink::Resource"* %21, %"class.blink::ResourceResponse"* dereferenceable(1072) %87) #12
  br label %92

92:                                               ; preds = %82, %86
  %93 = bitcast %"class.blink::ResourceClient"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #12
  %94 = bitcast %"class.blink::ResourceClient"** %4 to i64*
  store i64 %29, i64* %94, align 8
  %95 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %30, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #12
  br i1 %95, label %106, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %98 = bitcast %"class.blink::ResourceClient"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #12
  %99 = bitcast %"class.blink::ResourceClient"** %3 to i64*
  store i64 %29, i64* %99, align 8
  %100 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %97, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #12
  br i1 %100, label %106, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 21, i32 0, i32 0, i32 0
  %103 = bitcast %"class.blink::ResourceClient"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #12
  %104 = bitcast %"class.blink::ResourceClient"** %5 to i64*
  store i64 %29, i64* %104, align 8
  %105 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %102, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #12
  br i1 %105, label %106, label %149

106:                                              ; preds = %92, %96, %101
  %107 = icmp eq %"class.blink::BufferingBytesConsumer"* %19, null
  br i1 %107, label %134, label %108

108:                                              ; preds = %106
  call void @_ZN5blink22BufferingBytesConsumer13StopBufferingEv(%"class.blink::BufferingBytesConsumer"* nonnull %19) #12
  %109 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 3
  %110 = load i8, i8* %109, align 8, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %128, label %112

112:                                              ; preds = %108
  %113 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11RawResource26PreloadBytesConsumerClientEEEPhm(i64 32) #12
  %114 = bitcast i8* %113 to %"class.blink::RawResource::PreloadBytesConsumerClient"*
  %115 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %19, i64 0, i32 0
  %116 = bitcast i8* %113 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink11RawResource26PreloadBytesConsumerClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds i8, i8* %113, i64 8
  %118 = bitcast i8* %117 to %"class.blink::BytesConsumer"**
  store %"class.blink::BytesConsumer"* %115, %"class.blink::BytesConsumer"** %118, align 8
  %119 = getelementptr inbounds i8, i8* %113, i64 16
  %120 = bitcast i8* %119 to %"class.blink::RawResource"**
  store %"class.blink::RawResource"* %0, %"class.blink::RawResource"** %120, align 8
  %121 = getelementptr inbounds i8, i8* %113, i64 24
  %122 = bitcast i8* %121 to %"class.blink::ResourceClient"**
  store %"class.blink::ResourceClient"* %1, %"class.blink::ResourceClient"** %122, align 8
  %123 = getelementptr inbounds i8, i8* %113, i64 -4
  %124 = bitcast i8* %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = or i16 %125, 1
  store atomic i16 %126, i16* %124 release, align 2
  %127 = bitcast i8* %113 to %"class.blink::BytesConsumer::Client"*
  call void @_ZN5blink22BufferingBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::BufferingBytesConsumer"* nonnull %19, %"class.blink::BytesConsumer::Client"* %127) #12
  call void @_ZN5blink11RawResource26PreloadBytesConsumerClient13OnStateChangeEv(%"class.blink::RawResource::PreloadBytesConsumerClient"* %114)
  br label %134

128:                                              ; preds = %108
  %129 = getelementptr inbounds %"class.blink::BufferingBytesConsumer", %"class.blink::BufferingBytesConsumer"* %19, i64 0, i32 0
  %130 = bitcast %"class.blink::ResourceClient"* %1 to void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)***
  %131 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)**, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)** %131, i64 9
  %133 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)** %132, align 8
  call void %133(%"class.blink::RawResourceClient"* %47, %"class.blink::Resource"* %21, %"class.blink::BytesConsumer"* dereferenceable(8) %129) #12
  br label %134

134:                                              ; preds = %106, %112, %128
  %135 = bitcast %"class.blink::ResourceClient"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #12
  %136 = bitcast %"class.blink::ResourceClient"** %13 to i64*
  store i64 %29, i64* %136, align 8
  %137 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %30, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #12
  br i1 %137, label %148, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %140 = bitcast %"class.blink::ResourceClient"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #12
  %141 = bitcast %"class.blink::ResourceClient"** %12 to i64*
  store i64 %29, i64* %141, align 8
  %142 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %139, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #12
  br i1 %142, label %148, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 21, i32 0, i32 0, i32 0
  %145 = bitcast %"class.blink::ResourceClient"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #12
  %146 = bitcast %"class.blink::ResourceClient"** %14 to i64*
  store i64 %29, i64* %146, align 8
  %147 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %144, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #12
  br i1 %147, label %148, label %149

148:                                              ; preds = %134, %138, %143
  call void @_ZN5blink8Resource12DidAddClientEPNS_14ResourceClientE(%"class.blink::Resource"* %21, %"class.blink::ResourceClient"* %1) #12
  br label %149

149:                                              ; preds = %77, %143, %101, %148
  %150 = icmp eq i8* %45, null
  br i1 %150, label %152, label %151

151:                                              ; preds = %149
  store i8 %46, i8* %45, align 1
  br label %152

152:                                              ; preds = %151, %149, %39
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN5blink15ResourceRequestC1ERKNS_19ResourceRequestHeadE(%"class.blink::ResourceRequest"*, %"class.blink::ResourceRequestHead"* dereferenceable(1016)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #3

declare void @_ZN5blink22BufferingBytesConsumer13StopBufferingEv(%"class.blink::BufferingBytesConsumer"*) local_unnamed_addr #1

declare void @_ZN5blink22BufferingBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::BufferingBytesConsumer"*, %"class.blink::BytesConsumer::Client"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11RawResource26PreloadBytesConsumerClient13OnStateChangeEv(%"class.blink::RawResource::PreloadBytesConsumerClient"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::ResourceClient"*, align 8
  %3 = alloca %"class.blink::ResourceClient"*, align 8
  %4 = alloca %"class.blink::ResourceClient"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %"class.blink::RawResource::PreloadBytesConsumerClient", %"class.blink::RawResource::PreloadBytesConsumerClient"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.blink::WeakMember.524", %"class.blink::WeakMember.524"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::RawResourceClient"*, %"class.blink::RawResourceClient"** %8, align 8
  %10 = icmp eq %"class.blink::RawResourceClient"* %9, null
  br i1 %10, label %62, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::RawResource::PreloadBytesConsumerClient", %"class.blink::RawResource::PreloadBytesConsumerClient"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.blink::RawResourceClient"* %9 to %"class.blink::ResourceClient"*
  %14 = ptrtoint %"class.blink::RawResourceClient"* %9 to i64
  %15 = bitcast %"class.blink::ResourceClient"** %3 to i8*
  %16 = bitcast %"class.blink::ResourceClient"** %3 to i64*
  %17 = bitcast %"class.blink::ResourceClient"** %2 to i8*
  %18 = bitcast %"class.blink::ResourceClient"** %2 to i64*
  %19 = bitcast %"class.blink::ResourceClient"** %4 to i8*
  %20 = bitcast %"class.blink::ResourceClient"** %4 to i64*
  %21 = bitcast i8** %5 to i8*
  %22 = bitcast i64* %6 to i8*
  %23 = getelementptr inbounds %"class.blink::RawResource::PreloadBytesConsumerClient", %"class.blink::RawResource::PreloadBytesConsumerClient"* %0, i64 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.blink::RawResourceClient"* %9 to void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)***
  br label %25

25:                                               ; preds = %11, %43
  %26 = load %"class.blink::RawResource"*, %"class.blink::RawResource"** %12, align 8
  %27 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %26, i64 0, i32 0, i32 19, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  store i64 %14, i64* %16, align 8
  %28 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %27, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %26, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  store i64 %14, i64* %18, align 8
  %31 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %30, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %26, i64 0, i32 0, i32 21, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  store i64 %14, i64* %20, align 8
  %34 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %33, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br i1 %34, label %35, label %59

35:                                               ; preds = %25, %29, %32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  store i8* null, i8** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i64 0, i64* %6, align 8
  %36 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %23, align 8
  %37 = bitcast %"class.blink::BytesConsumer"* %36 to i32 (%"class.blink::BytesConsumer"*, i8**, i64*)***
  %38 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)**, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %38, i64 2
  %40 = load i32 (%"class.blink::BytesConsumer"*, i8**, i64*)*, i32 (%"class.blink::BytesConsumer"*, i8**, i64*)** %39, align 8
  %41 = call i32 %40(%"class.blink::BytesConsumer"* %36, i8** nonnull %5, i64* nonnull %6) #12
  switch i32 %41, label %42 [
    i32 1, label %61
    i32 0, label %43
  ]

42:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %62

43:                                               ; preds = %35
  %44 = load %"class.blink::RawResource"*, %"class.blink::RawResource"** %12, align 8
  %45 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %44, i64 0, i32 0
  %46 = load i8*, i8** %5, align 8
  %47 = load i64, i64* %6, align 8
  %48 = load void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)**, void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)*** %24, align 8
  %49 = getelementptr inbounds void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)*, void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)** %48, i64 3
  %50 = load void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)*, void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)** %49, align 8
  call void %50(%"class.blink::ResourceClient"* nonnull %13, %"class.blink::Resource"* %45, i8* %46, i64 %47) #12
  %51 = load %"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer"** %23, align 8
  %52 = load i64, i64* %6, align 8
  %53 = bitcast %"class.blink::BytesConsumer"* %51 to i32 (%"class.blink::BytesConsumer"*, i64)***
  %54 = load i32 (%"class.blink::BytesConsumer"*, i64)**, i32 (%"class.blink::BytesConsumer"*, i64)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %54, i64 3
  %56 = load i32 (%"class.blink::BytesConsumer"*, i64)*, i32 (%"class.blink::BytesConsumer"*, i64)** %55, align 8
  %57 = call i32 %56(%"class.blink::BytesConsumer"* %51, i64 %52) #12
  %58 = icmp eq i32 %57, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br i1 %58, label %25, label %62

59:                                               ; preds = %32
  %60 = bitcast %"class.blink::WeakMember.524"* %7 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  br label %62

61:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %62

62:                                               ; preds = %43, %42, %61, %1, %59
  ret void
}

declare void @_ZN5blink8Resource12DidAddClientEPNS_14ResourceClientE(%"class.blink::Resource"*, %"class.blink::ResourceClient"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11RawResource18WillFollowRedirectERKNS_15ResourceRequestERKNS_16ResourceResponseE(%"class.blink::RawResource"*, %"class.blink::ResourceRequest"* dereferenceable(1032), %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ResourceClient"*, align 8
  %5 = alloca %"class.blink::ResourceClientWalker", align 8
  %6 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZN5blink8Resource18WillFollowRedirectERKNS_15ResourceRequestERKNS_16ResourceResponseE(%"class.blink::Resource"* %6, %"class.blink::ResourceRequest"* dereferenceable(1032) %1, %"class.blink::ResourceResponse"* dereferenceable(1072) %2) #12
  %8 = zext i1 %7 to i8
  %9 = bitcast %"class.blink::ResourceClientWalker"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 19
  %14 = bitcast %"class.blink::ResourceClientWalker"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  store %"class.blink::HeapHashCountedSet"* %13, %"class.blink::HeapHashCountedSet"** %10, align 8
  %15 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet"* %13, i64 0, i32 0
  %17 = bitcast %"class.blink::HeapVector.526"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #12
  call void @_ZN3WTF12CopyToVectorIN5blink10WeakMemberINS1_14ResourceClientEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS1_13HeapAllocatorENS1_10HeapVectorINS1_6MemberIS3_EELj0EEEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24) %16, %"class.blink::HeapVector.526"* dereferenceable(16) %15) #12
  %18 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 1, i32 0
  %19 = bitcast %"class.blink::ResourceClientWalker"* %5 to %"class.WTF::HashCountedSet"**
  %20 = bitcast %"class.blink::ResourceClient"** %4 to i8*
  %21 = bitcast %"class.blink::ResourceClient"** %4 to i64*
  br label %22

22:                                               ; preds = %39, %3
  %23 = phi i8 [ %8, %3 ], [ %46, %39 ]
  %24 = load i32, i32* %11, align 4
  br label %25

25:                                               ; preds = %28, %22
  %26 = load i32, i32* %12, align 8
  %27 = icmp ult i32 %26, %24
  br i1 %27, label %28, label %47

28:                                               ; preds = %25
  %29 = add nuw i32 %26, 1
  store i32 %29, i32* %12, align 8
  %30 = call dereferenceable(8) %"class.blink::Member.532"* @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.529"* %18, i32 %26) #12
  %31 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %31, align 8
  %33 = load %"class.WTF::HashCountedSet"*, %"class.WTF::HashCountedSet"** %19, align 8
  %34 = ptrtoint %"class.blink::ResourceClient"* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %33, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  store i64 %34, i64* %21, align 8
  %36 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %35, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br i1 %36, label %37, label %25

37:                                               ; preds = %28
  %38 = icmp eq %"class.blink::ResourceClient"* %32, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %37
  %40 = bitcast %"class.blink::ResourceClient"* %32 to %"class.blink::RawResourceClient"*
  %41 = bitcast %"class.blink::ResourceClient"* %32 to i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)***
  %42 = load i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)**, i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)*, i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)** %42, i64 12
  %44 = load i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)*, i1 (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"*, %"class.blink::ResourceResponse"*)** %43, align 8
  %45 = call zeroext i1 %44(%"class.blink::RawResourceClient"* nonnull %40, %"class.blink::Resource"* %6, %"class.blink::ResourceRequest"* dereferenceable(1032) %1, %"class.blink::ResourceResponse"* dereferenceable(1072) %2) #12
  %46 = select i1 %45, i8 %23, i8 0
  br label %22

47:                                               ; preds = %37, %25
  %48 = and i8 %23, 1
  %49 = icmp ne i8 %48, 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #12
  ret i1 %49
}

declare zeroext i1 @_ZN5blink8Resource18WillFollowRedirectERKNS_15ResourceRequestERKNS_16ResourceResponseE(%"class.blink::Resource"*, %"class.blink::ResourceRequest"* dereferenceable(1032), %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11RawResource21WillNotFollowRedirectEv(%"class.blink::RawResource"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ResourceClient"*, align 8
  %3 = alloca %"class.blink::ResourceClientWalker", align 8
  %4 = bitcast %"class.blink::ResourceClientWalker"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 19
  %9 = bitcast %"class.blink::ResourceClientWalker"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  store %"class.blink::HeapHashCountedSet"* %8, %"class.blink::HeapHashCountedSet"** %5, align 8
  %10 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet"* %8, i64 0, i32 0
  %12 = bitcast %"class.blink::HeapVector.526"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #12
  call void @_ZN3WTF12CopyToVectorIN5blink10WeakMemberINS1_14ResourceClientEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS1_13HeapAllocatorENS1_10HeapVectorINS1_6MemberIS3_EELj0EEEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24) %11, %"class.blink::HeapVector.526"* dereferenceable(16) %10) #12
  %13 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %3, i64 0, i32 1, i32 0
  %14 = bitcast %"class.blink::ResourceClientWalker"* %3 to %"class.WTF::HashCountedSet"**
  %15 = bitcast %"class.blink::ResourceClient"** %2 to i8*
  %16 = bitcast %"class.blink::ResourceClient"** %2 to i64*
  br label %17

17:                                               ; preds = %33, %1
  %18 = load i32, i32* %6, align 4
  br label %19

19:                                               ; preds = %22, %17
  %20 = load i32, i32* %7, align 8
  %21 = icmp ult i32 %20, %18
  br i1 %21, label %22, label %39

22:                                               ; preds = %19
  %23 = add nuw i32 %20, 1
  store i32 %23, i32* %7, align 8
  %24 = call dereferenceable(8) %"class.blink::Member.532"* @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.529"* %13, i32 %20) #12
  %25 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %25, align 8
  %27 = load %"class.WTF::HashCountedSet"*, %"class.WTF::HashCountedSet"** %14, align 8
  %28 = ptrtoint %"class.blink::ResourceClient"* %26 to i64
  %29 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %27, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  store i64 %28, i64* %16, align 8
  %30 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %29, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  br i1 %30, label %31, label %19

31:                                               ; preds = %22
  %32 = icmp eq %"class.blink::ResourceClient"* %26, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %31
  %34 = bitcast %"class.blink::ResourceClient"* %26 to %"class.blink::RawResourceClient"*
  %35 = bitcast %"class.blink::ResourceClient"* %26 to void (%"class.blink::RawResourceClient"*)***
  %36 = load void (%"class.blink::RawResourceClient"*)**, void (%"class.blink::RawResourceClient"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::RawResourceClient"*)*, void (%"class.blink::RawResourceClient"*)** %36, i64 13
  %38 = load void (%"class.blink::RawResourceClient"*)*, void (%"class.blink::RawResourceClient"*)** %37, align 8
  call void %38(%"class.blink::RawResourceClient"* nonnull %34) #12
  br label %17

39:                                               ; preds = %31, %19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::BlobDataHandle"* @_ZNK5blink11RawResource14DownloadedBlobEv(%"class.blink::RawResource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %3, align 8
  %5 = icmp eq %"class.blink::BlobDataHandle"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.39, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0)) #12
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  br label %13

13:                                               ; preds = %1, %6, %10
  ret %"class.blink::BlobDataHandle"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11RawResource5TraceEPNS_7VisitorE(%"class.blink::RawResource"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.346"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22BufferingBytesConsumerEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  tail call void @_ZNK5blink8Resource5TraceEPNS_7VisitorE(%"class.blink::Resource"* %14, %"class.blink::Visitor"* %1) #12
  ret void
}

declare void @_ZNK5blink8Resource5TraceEPNS_7VisitorE(%"class.blink::Resource"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11RawResource16ResponseReceivedERKNS_16ResourceResponseE(%"class.blink::RawResource"*, %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ResourceClient"*, align 8
  %4 = alloca %"class.blink::ResourceClientWalker", align 8
  %5 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  tail call void @_ZN5blink8Resource16ResponseReceivedERKNS_16ResourceResponseE(%"class.blink::Resource"* %5, %"class.blink::ResourceResponse"* dereferenceable(1072) %1) #12
  %6 = bitcast %"class.blink::ResourceClientWalker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %4, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 19
  %11 = bitcast %"class.blink::ResourceClientWalker"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  store %"class.blink::HeapHashCountedSet"* %10, %"class.blink::HeapHashCountedSet"** %7, align 8
  %12 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet"* %10, i64 0, i32 0
  %14 = bitcast %"class.blink::HeapVector.526"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #12
  call void @_ZN3WTF12CopyToVectorIN5blink10WeakMemberINS1_14ResourceClientEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS1_13HeapAllocatorENS1_10HeapVectorINS1_6MemberIS3_EELj0EEEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24) %13, %"class.blink::HeapVector.526"* dereferenceable(16) %12) #12
  %15 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %4, i64 0, i32 1, i32 0
  %16 = bitcast %"class.blink::ResourceClientWalker"* %4 to %"class.WTF::HashCountedSet"**
  %17 = bitcast %"class.blink::ResourceClient"** %3 to i8*
  %18 = bitcast %"class.blink::ResourceClient"** %3 to i64*
  %19 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 29
  br label %20

20:                                               ; preds = %36, %2
  %21 = load i32, i32* %8, align 4
  br label %22

22:                                               ; preds = %25, %20
  %23 = load i32, i32* %9, align 8
  %24 = icmp ult i32 %23, %21
  br i1 %24, label %25, label %42

25:                                               ; preds = %22
  %26 = add nuw i32 %23, 1
  store i32 %26, i32* %9, align 8
  %27 = call dereferenceable(8) %"class.blink::Member.532"* @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.529"* %15, i32 %23) #12
  %28 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %28, align 8
  %30 = load %"class.WTF::HashCountedSet"*, %"class.WTF::HashCountedSet"** %16, align 8
  %31 = ptrtoint %"class.blink::ResourceClient"* %29 to i64
  %32 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %30, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  store i64 %31, i64* %18, align 8
  %33 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %32, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br i1 %33, label %34, label %22

34:                                               ; preds = %25
  %35 = icmp eq %"class.blink::ResourceClient"* %29, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %34
  %37 = bitcast %"class.blink::ResourceClient"* %29 to %"class.blink::RawResourceClient"*
  %38 = bitcast %"class.blink::ResourceClient"* %29 to void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)***
  %39 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)**, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)** %39, i64 10
  %41 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"*)** %40, align 8
  call void %41(%"class.blink::RawResourceClient"* nonnull %37, %"class.blink::Resource"* %5, %"class.blink::ResourceResponse"* dereferenceable(1072) %19) #12
  br label %20

42:                                               ; preds = %34, %22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

declare void @_ZN5blink8Resource16ResponseReceivedERKNS_16ResourceResponseE(%"class.blink::Resource"*, %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11RawResource20ResponseBodyReceivedERNS_36ResponseBodyLoaderDrainableInterfaceE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::RawResource"*, %"class.blink::ResponseBodyLoaderDrainableInterface"* dereferenceable(8), %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ResourceClient"*, align 8
  %5 = alloca %"class.blink::ResourceClientWalker", align 8
  %6 = bitcast %"class.blink::ResourceClientWalker"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 19
  %9 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 0
  store %"class.blink::HeapHashCountedSet"* %8, %"class.blink::HeapHashCountedSet"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet"* %8, i64 0, i32 0
  %12 = bitcast %"class.blink::HeapVector.526"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #12
  call void @_ZN3WTF12CopyToVectorIN5blink10WeakMemberINS1_14ResourceClientEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS1_13HeapAllocatorENS1_10HeapVectorINS1_6MemberIS3_EELj0EEEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24) %11, %"class.blink::HeapVector.526"* dereferenceable(16) %10) #12
  %13 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 2
  %17 = bitcast %"class.blink::ResourceClientWalker"* %5 to %"class.WTF::HashCountedSet"**
  %18 = bitcast %"class.blink::ResourceClient"** %4 to i8*
  %19 = bitcast %"class.blink::ResourceClient"** %4 to i64*
  br label %20

20:                                               ; preds = %24, %3
  %21 = load i32, i32* %16, align 8
  %22 = icmp ult i32 %21, %15
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  br label %36

24:                                               ; preds = %20
  %25 = add nuw i32 %21, 1
  store i32 %25, i32* %16, align 8
  %26 = call dereferenceable(8) %"class.blink::Member.532"* @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.529"* %13, i32 %21) #12
  %27 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %27, align 8
  %29 = load %"class.WTF::HashCountedSet"*, %"class.WTF::HashCountedSet"** %17, align 8
  %30 = ptrtoint %"class.blink::ResourceClient"* %28 to i64
  %31 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %29, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  store i64 %30, i64* %19, align 8
  %32 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %31, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br i1 %32, label %33, label %20

33:                                               ; preds = %24
  %34 = bitcast %"class.blink::ResourceClient"* %28 to %"class.blink::RawResourceClient"*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  %35 = icmp eq %"class.blink::ResourceClient"* %28, null
  br i1 %35, label %36, label %56

36:                                               ; preds = %23, %33
  %37 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 26, i32 8
  %38 = load i16, i16* %37, align 8
  %39 = and i16 %38, 64
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %56, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::ResponseBodyLoaderDrainableInterface"* %1 to %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)***
  %43 = load %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)**, %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)*, %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)** %43, i64 3
  %45 = load %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)*, %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)** %44, align 8
  %46 = call dereferenceable(8) %"class.blink::BytesConsumer"* %45(%"class.blink::ResponseBodyLoaderDrainableInterface"* %1) #12
  %47 = call %"class.blink::BufferingBytesConsumer"* @_ZN5blink22BufferingBytesConsumer6CreateEPNS_13BytesConsumerE(%"class.blink::BytesConsumer"* %46) #12
  %48 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 2
  %49 = ptrtoint %"class.blink::BufferingBytesConsumer"* %47 to i64
  %50 = bitcast %"class.blink::Member.346"* %48 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %100, label %53

53:                                               ; preds = %41
  %54 = bitcast %"class.blink::BufferingBytesConsumer"* %47 to i8*
  %55 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #12
  br label %100

56:                                               ; preds = %36, %33
  %57 = phi %"class.blink::RawResourceClient"* [ %34, %33 ], [ null, %36 ]
  %58 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %85, label %61

61:                                               ; preds = %56
  %62 = bitcast %"class.blink::ResponseBodyLoaderDrainableInterface"* %1 to %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)***
  %63 = load %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)**, %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)*, %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)** %63, i64 3
  %65 = load %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)*, %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)** %64, align 8
  %66 = call dereferenceable(8) %"class.blink::BytesConsumer"* %65(%"class.blink::ResponseBodyLoaderDrainableInterface"* %1) #12
  %67 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11RawResource26PreloadBytesConsumerClientEEEPhm(i64 32) #12
  %68 = bitcast i8* %67 to %"class.blink::RawResource::PreloadBytesConsumerClient"*
  %69 = bitcast i8* %67 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink11RawResource26PreloadBytesConsumerClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds i8, i8* %67, i64 8
  %71 = bitcast i8* %70 to %"class.blink::BytesConsumer"**
  store %"class.blink::BytesConsumer"* %66, %"class.blink::BytesConsumer"** %71, align 8
  %72 = getelementptr inbounds i8, i8* %67, i64 16
  %73 = bitcast i8* %72 to %"class.blink::RawResource"**
  store %"class.blink::RawResource"* %0, %"class.blink::RawResource"** %73, align 8
  %74 = getelementptr inbounds i8, i8* %67, i64 24
  %75 = bitcast i8* %74 to %"class.blink::RawResourceClient"**
  store %"class.blink::RawResourceClient"* %57, %"class.blink::RawResourceClient"** %75, align 8
  %76 = getelementptr inbounds i8, i8* %67, i64 -4
  %77 = bitcast i8* %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = or i16 %78, 1
  store atomic i16 %79, i16* %77 release, align 2
  %80 = bitcast i8* %67 to %"class.blink::BytesConsumer::Client"*
  %81 = bitcast %"class.blink::BytesConsumer"* %66 to void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)***
  %82 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %82, i64 7
  %84 = load void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::BytesConsumer::Client"*)** %83, align 8
  call void %84(%"class.blink::BytesConsumer"* %66, %"class.blink::BytesConsumer::Client"* %80) #12
  call void @_ZN5blink11RawResource26PreloadBytesConsumerClient13OnStateChangeEv(%"class.blink::RawResource::PreloadBytesConsumerClient"* %68)
  br label %100

85:                                               ; preds = %56
  %86 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 26, i32 8
  %87 = load i16, i16* %86, align 8
  %88 = and i16 %87, 64
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %100, label %90

90:                                               ; preds = %85
  %91 = bitcast %"class.blink::ResponseBodyLoaderDrainableInterface"* %1 to %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)***
  %92 = load %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)**, %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)*** %91, align 8
  %93 = getelementptr inbounds %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)*, %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)** %92, i64 3
  %94 = load %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)*, %"class.blink::BytesConsumer"* (%"class.blink::ResponseBodyLoaderDrainableInterface"*)** %93, align 8
  %95 = call dereferenceable(8) %"class.blink::BytesConsumer"* %94(%"class.blink::ResponseBodyLoaderDrainableInterface"* %1) #12
  %96 = bitcast %"class.blink::RawResourceClient"* %57 to void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)***
  %97 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)**, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)** %97, i64 9
  %99 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"*)** %98, align 8
  call void %99(%"class.blink::RawResourceClient"* %57, %"class.blink::Resource"* %7, %"class.blink::BytesConsumer"* dereferenceable(8) %95) #12
  br label %100

100:                                              ; preds = %85, %53, %41, %90, %61
  %101 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %101, label %110, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.base::RefCountedThreadSafe.353", %"class.base::RefCountedThreadSafe.353"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw sub i32* %104, i32 1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %110

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.base::RefCountedThreadSafe.353", %"class.base::RefCountedThreadSafe.353"* %103, i64 -2
  %109 = bitcast %"class.base::RefCountedThreadSafe.353"* %108 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %109) #12
  br label %110

110:                                              ; preds = %100, %102, %107
  ret void
}

declare %"class.blink::BufferingBytesConsumer"* @_ZN5blink22BufferingBytesConsumer6CreateEPNS_13BytesConsumerE(%"class.blink::BytesConsumer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11RawResource27SetSerializedCachedMetadataEN9mojo_base9BigBufferE(%"class.blink::RawResource"*, %"class.mojo_base::BigBuffer"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.blink::ResourceClient"*, align 8
  %5 = alloca %"class.mojo_base::BigBuffer", align 8
  %6 = alloca %"class.blink::ResourceClientWalker", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.mojo_base::BigBuffer", align 8
  %10 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  call void @_ZN9mojo_base9BigBufferC1Ev(%"class.mojo_base::BigBuffer"* nonnull %5) #12
  call void @_ZN5blink8Resource27SetSerializedCachedMetadataEN9mojo_base9BigBufferE(%"class.blink::Resource"* %10, %"class.mojo_base::BigBuffer"* nonnull %5) #12
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %5) #12
  %11 = bitcast %"class.blink::ResourceClientWalker"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %6, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %6, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 19
  %16 = bitcast %"class.blink::ResourceClientWalker"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  store %"class.blink::HeapHashCountedSet"* %15, %"class.blink::HeapHashCountedSet"** %12, align 8
  %17 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %6, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet"* %15, i64 0, i32 0
  %19 = bitcast %"class.blink::HeapVector.526"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #12
  call void @_ZN3WTF12CopyToVectorIN5blink10WeakMemberINS1_14ResourceClientEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS1_13HeapAllocatorENS1_10HeapVectorINS1_6MemberIS3_EELj0EEEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24) %18, %"class.blink::HeapVector.526"* dereferenceable(16) %17) #12
  %20 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 19, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i32 %23, 1
  br i1 %25, label %27, label %26

26:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %21, align 8
  br label %36

27:                                               ; preds = %2
  %28 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %29 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %28, i8* %29) #12
  %30 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %31, i8** %21, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 284, %"class.logging::CheckOpResult"* nonnull %7) #12
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  br label %36

36:                                               ; preds = %26, %27, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %37 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %6, i64 0, i32 1, i32 0
  %38 = load i32, i32* %13, align 4
  %39 = bitcast %"class.blink::ResourceClientWalker"* %6 to %"class.WTF::HashCountedSet"**
  %40 = bitcast %"class.blink::ResourceClient"** %4 to i8*
  %41 = bitcast %"class.blink::ResourceClient"** %4 to i64*
  br label %42

42:                                               ; preds = %45, %36
  %43 = load i32, i32* %14, align 8
  %44 = icmp ult i32 %43, %38
  br i1 %44, label %45, label %62

45:                                               ; preds = %42
  %46 = add nuw i32 %43, 1
  store i32 %46, i32* %14, align 8
  %47 = call dereferenceable(8) %"class.blink::Member.532"* @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.529"* %37, i32 %43) #12
  %48 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %48, align 8
  %50 = load %"class.WTF::HashCountedSet"*, %"class.WTF::HashCountedSet"** %39, align 8
  %51 = ptrtoint %"class.blink::ResourceClient"* %49 to i64
  %52 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %50, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  store i64 %51, i64* %41, align 8
  %53 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %52, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br i1 %53, label %54, label %42

54:                                               ; preds = %45
  %55 = icmp eq %"class.blink::ResourceClient"* %49, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %54
  %57 = bitcast %"class.blink::ResourceClient"* %49 to %"class.blink::RawResourceClient"*
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %9, %"class.mojo_base::BigBuffer"* dereferenceable(56) %1) #12
  %58 = bitcast %"class.blink::ResourceClient"* %49 to void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*)***
  %59 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*)**, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*)** %59, i64 11
  %61 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*)** %60, align 8
  call void %61(%"class.blink::RawResourceClient"* nonnull %57, %"class.blink::Resource"* %10, %"class.mojo_base::BigBuffer"* nonnull %9) #12
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %9) #12
  br label %62

62:                                               ; preds = %42, %54, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #12
  ret void
}

declare void @_ZN5blink8Resource27SetSerializedCachedMetadataEN9mojo_base9BigBufferE(%"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*) unnamed_addr #1

declare void @_ZN9mojo_base9BigBufferC1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11RawResource11DidSendDataEmm(%"class.blink::RawResource"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ResourceClient"*, align 8
  %5 = alloca %"class.blink::ResourceClientWalker", align 8
  %6 = bitcast %"class.blink::ResourceClientWalker"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 19
  %12 = bitcast %"class.blink::ResourceClientWalker"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  store %"class.blink::HeapHashCountedSet"* %11, %"class.blink::HeapHashCountedSet"** %7, align 8
  %13 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet"* %11, i64 0, i32 0
  %15 = bitcast %"class.blink::HeapVector.526"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #12
  call void @_ZN3WTF12CopyToVectorIN5blink10WeakMemberINS1_14ResourceClientEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS1_13HeapAllocatorENS1_10HeapVectorINS1_6MemberIS3_EELj0EEEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24) %14, %"class.blink::HeapVector.526"* dereferenceable(16) %13) #12
  %16 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %5, i64 0, i32 1, i32 0
  %17 = bitcast %"class.blink::ResourceClientWalker"* %5 to %"class.WTF::HashCountedSet"**
  %18 = bitcast %"class.blink::ResourceClient"** %4 to i8*
  %19 = bitcast %"class.blink::ResourceClient"** %4 to i64*
  br label %20

20:                                               ; preds = %36, %3
  %21 = load i32, i32* %8, align 4
  br label %22

22:                                               ; preds = %25, %20
  %23 = load i32, i32* %9, align 8
  %24 = icmp ult i32 %23, %21
  br i1 %24, label %25, label %42

25:                                               ; preds = %22
  %26 = add nuw i32 %23, 1
  store i32 %26, i32* %9, align 8
  %27 = call dereferenceable(8) %"class.blink::Member.532"* @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.529"* %16, i32 %23) #12
  %28 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %28, align 8
  %30 = load %"class.WTF::HashCountedSet"*, %"class.WTF::HashCountedSet"** %17, align 8
  %31 = ptrtoint %"class.blink::ResourceClient"* %29 to i64
  %32 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %30, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  store i64 %31, i64* %19, align 8
  %33 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %32, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br i1 %33, label %34, label %22

34:                                               ; preds = %25
  %35 = icmp eq %"class.blink::ResourceClient"* %29, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %34
  %37 = bitcast %"class.blink::ResourceClient"* %29 to %"class.blink::RawResourceClient"*
  %38 = bitcast %"class.blink::ResourceClient"* %29 to void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64, i64)***
  %39 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64, i64)**, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64, i64)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64, i64)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64, i64)** %39, i64 8
  %41 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64, i64)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64, i64)** %40, align 8
  call void %41(%"class.blink::RawResourceClient"* nonnull %37, %"class.blink::Resource"* %10, i64 %1, i64 %2) #12
  br label %20

42:                                               ; preds = %34, %22
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11RawResource15DidDownloadDataEm(%"class.blink::RawResource"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ResourceClient"*, align 8
  %4 = alloca %"class.blink::ResourceClientWalker", align 8
  %5 = bitcast %"class.blink::ResourceClientWalker"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %4, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 19
  %11 = bitcast %"class.blink::ResourceClientWalker"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  store %"class.blink::HeapHashCountedSet"* %10, %"class.blink::HeapHashCountedSet"** %6, align 8
  %12 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet"* %10, i64 0, i32 0
  %14 = bitcast %"class.blink::HeapVector.526"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #12
  call void @_ZN3WTF12CopyToVectorIN5blink10WeakMemberINS1_14ResourceClientEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS1_13HeapAllocatorENS1_10HeapVectorINS1_6MemberIS3_EELj0EEEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24) %13, %"class.blink::HeapVector.526"* dereferenceable(16) %12) #12
  %15 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %4, i64 0, i32 1, i32 0
  %16 = bitcast %"class.blink::ResourceClientWalker"* %4 to %"class.WTF::HashCountedSet"**
  %17 = bitcast %"class.blink::ResourceClient"** %3 to i8*
  %18 = bitcast %"class.blink::ResourceClient"** %3 to i64*
  br label %19

19:                                               ; preds = %35, %2
  %20 = load i32, i32* %7, align 4
  br label %21

21:                                               ; preds = %24, %19
  %22 = load i32, i32* %8, align 8
  %23 = icmp ult i32 %22, %20
  br i1 %23, label %24, label %41

24:                                               ; preds = %21
  %25 = add nuw i32 %22, 1
  store i32 %25, i32* %8, align 8
  %26 = call dereferenceable(8) %"class.blink::Member.532"* @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.529"* %15, i32 %22) #12
  %27 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %27, align 8
  %29 = load %"class.WTF::HashCountedSet"*, %"class.WTF::HashCountedSet"** %16, align 8
  %30 = ptrtoint %"class.blink::ResourceClient"* %28 to i64
  %31 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %29, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  store i64 %30, i64* %18, align 8
  %32 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %31, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br i1 %32, label %33, label %21

33:                                               ; preds = %24
  %34 = icmp eq %"class.blink::ResourceClient"* %28, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %33
  %36 = bitcast %"class.blink::ResourceClient"* %28 to %"class.blink::RawResourceClient"*
  %37 = bitcast %"class.blink::ResourceClient"* %28 to void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64)***
  %38 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64)**, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64)** %38, i64 14
  %40 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64)** %39, align 8
  call void %40(%"class.blink::RawResourceClient"* nonnull %36, %"class.blink::Resource"* %9, i64 %1) #12
  br label %19

41:                                               ; preds = %33, %21
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11RawResource17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::RawResource"*, %"class.blink::BlobDataHandle"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.blink::ResourceClient"*, align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.blink::ResourceClientWalker", align 8
  %7 = icmp eq %"class.blink::BlobDataHandle"* %1, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.39, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0)) #12
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  br label %15

15:                                               ; preds = %2, %8, %12
  %16 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.blink::BlobDataHandle"* %1 to i64
  %18 = bitcast %class.scoped_refptr.343* %16 to i64*
  %19 = getelementptr inbounds %class.scoped_refptr.343, %class.scoped_refptr.343* %16, i64 0, i32 0
  %20 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %19, align 8
  store i64 %17, i64* %18, align 8
  %21 = icmp eq %"class.blink::BlobDataHandle"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %20) #12
  %27 = bitcast %"class.blink::BlobDataHandle"* %20 to i8*
  call void @free(i8* %27) #12
  br label %28

28:                                               ; preds = %15, %22, %26
  %29 = bitcast %"class.blink::ResourceClientWalker"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %6, i64 0, i32 0
  %31 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %6, i64 0, i32 2
  %33 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 19
  %35 = bitcast %"class.blink::ResourceClientWalker"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 32, i1 false)
  store %"class.blink::HeapHashCountedSet"* %34, %"class.blink::HeapHashCountedSet"** %30, align 8
  %36 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %6, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet"* %34, i64 0, i32 0
  %38 = bitcast %"class.blink::HeapVector.526"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 20, i1 false) #12
  call void @_ZN3WTF12CopyToVectorIN5blink10WeakMemberINS1_14ResourceClientEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS1_13HeapAllocatorENS1_10HeapVectorINS1_6MemberIS3_EELj0EEEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24) %37, %"class.blink::HeapVector.526"* dereferenceable(16) %36) #12
  %39 = getelementptr inbounds %"class.blink::ResourceClientWalker", %"class.blink::ResourceClientWalker"* %6, i64 0, i32 1, i32 0
  %40 = bitcast %"class.blink::ResourceClientWalker"* %6 to %"class.WTF::HashCountedSet"**
  %41 = bitcast %"class.blink::ResourceClient"** %4 to i8*
  %42 = bitcast %"class.blink::ResourceClient"** %4 to i64*
  %43 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %45

45:                                               ; preds = %68, %28
  %46 = load i32, i32* %31, align 4
  br label %47

47:                                               ; preds = %50, %45
  %48 = load i32, i32* %32, align 8
  %49 = icmp ult i32 %48, %46
  br i1 %49, label %50, label %73

50:                                               ; preds = %47
  %51 = add nuw i32 %48, 1
  store i32 %51, i32* %32, align 8
  %52 = call dereferenceable(8) %"class.blink::Member.532"* @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.529"* %39, i32 %48) #12
  %53 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %53, align 8
  %55 = load %"class.WTF::HashCountedSet"*, %"class.WTF::HashCountedSet"** %40, align 8
  %56 = ptrtoint %"class.blink::ResourceClient"* %54 to i64
  %57 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %55, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #12
  store i64 %56, i64* %42, align 8
  %58 = call zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"* %57, %"class.blink::ResourceClient"** nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #12
  br i1 %58, label %59, label %47

59:                                               ; preds = %50
  %60 = bitcast %"class.blink::ResourceClient"* %54 to %"class.blink::RawResourceClient"*
  %61 = icmp eq %"class.blink::ResourceClient"* %54, null
  br i1 %61, label %73, label %62

62:                                               ; preds = %59
  br i1 %7, label %68, label %63

63:                                               ; preds = %62
  %64 = atomicrmw add i32* %43, i32 1 monotonic
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.39, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0)) #12
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #12
  br label %68

68:                                               ; preds = %62, %63, %66
  %69 = bitcast %"class.blink::ResourceClient"* %54 to void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BlobDataHandle"*)***
  %70 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BlobDataHandle"*)**, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BlobDataHandle"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BlobDataHandle"*)** %70, i64 15
  %72 = load void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BlobDataHandle"*)*, void (%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BlobDataHandle"*)** %71, align 8
  call void %72(%"class.blink::RawResourceClient"* nonnull %60, %"class.blink::Resource"* %33, %"class.blink::BlobDataHandle"* %1) #12
  br label %45

73:                                               ; preds = %59, %47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #12
  br i1 %7, label %79, label %74

74:                                               ; preds = %73
  %75 = atomicrmw sub i32* %43, i32 1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %1) #12
  %78 = bitcast %"class.blink::BlobDataHandle"* %1 to i8*
  call void @free(i8* %78) #12
  br label %79

79:                                               ; preds = %73, %74, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11RawResource12MatchPreloadERKNS_15FetchParametersE(%"class.blink::RawResource"*, %"class.blink::FetchParameters"* dereferenceable(1344)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  tail call void @_ZN5blink8Resource12MatchPreloadERKNS_15FetchParametersE(%"class.blink::Resource"* %3, %"class.blink::FetchParameters"* dereferenceable(1344) %1) #12
  %4 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 0, i32 0, i32 8
  %5 = load i16, i16* %4, align 8
  %6 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 3
  %7 = lshr i16 %5, 6
  %8 = trunc i16 %7 to i8
  %9 = and i8 %8, 1
  %10 = xor i8 %9, 1
  store i8 %10, i8* %6, align 8
  ret void
}

declare void @_ZN5blink8Resource12MatchPreloadERKNS_15FetchParametersE(%"class.blink::Resource"*, %"class.blink::FetchParameters"* dereferenceable(1344)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11RawResource8CanReuseERKNS_15FetchParametersE(%"class.blink::RawResource"*, %"class.blink::FetchParameters"* dereferenceable(1344)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 0, i32 0
  %6 = tail call dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink19ResourceRequestHead16HttpHeaderFieldsEv(%"class.blink::ResourceRequestHead"* %5) #12
  %7 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 26
  %9 = tail call dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink19ResourceRequestHead16HttpHeaderFieldsEv(%"class.blink::ResourceRequestHead"* %8) #12
  %10 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %6, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %6, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %6, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %17
  br i1 %12, label %123, label %19

19:                                               ; preds = %2
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"struct.WTF::KeyValuePair"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"struct.WTF::KeyValuePair"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %18
  br i1 %27, label %123, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"struct.WTF::KeyValuePair"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %18
  br i1 %30, label %123, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %9, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %36

36:                                               ; preds = %31, %121
  %37 = phi %"struct.WTF::KeyValuePair"* [ %29, %31 ], [ %115, %121 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %33, align 8
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %33, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %78, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %60

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #12
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  call void @llvm.trap() #12
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %78, label %60

60:                                               ; preds = %41, %56
  %61 = phi %"class.WTF::StringImpl"* [ %58, %56 ], [ %39, %41 ]
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #12
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !3

75:                                               ; preds = %66
  call void @llvm.trap() #12
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %78

78:                                               ; preds = %36, %56, %60, %76
  %79 = phi %"class.WTF::StringImpl"* [ null, %56 ], [ %61, %60 ], [ %61, %76 ], [ null, %36 ]
  %80 = call fastcc zeroext i1 @_ZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringE(%"class.WTF::StringImpl"* %79)
  br i1 %80, label %91, label %81

81:                                               ; preds = %78
  %82 = call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"* %34, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #12
  %83 = icmp eq %"struct.WTF::KeyValuePair"* %82, null
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 1
  %85 = select i1 %83, %"class.WTF::AtomicString"* %35, %"class.WTF::AtomicString"* %84
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %85, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %87, %89
  br i1 %90, label %91, label %92

91:                                               ; preds = %81, %78
  br label %92

92:                                               ; preds = %81, %91
  %93 = phi i32 [ 0, %91 ], [ 1, %81 ]
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #12
  br label %109

109:                                              ; preds = %92, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  %110 = icmp eq i32 %93, 0
  br i1 %110, label %111, label %239

111:                                              ; preds = %109
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 1
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %112, %18
  br i1 %113, label %123, label %114

114:                                              ; preds = %111, %118
  %115 = phi %"struct.WTF::KeyValuePair"* [ %119, %118 ], [ %112, %111 ]
  %116 = bitcast %"struct.WTF::KeyValuePair"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  switch i64 %117, label %121 [
    i64 -1, label %118
    i64 0, label %118
  ]

118:                                              ; preds = %114, %114
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %115, i64 1
  %120 = icmp eq %"struct.WTF::KeyValuePair"* %119, %18
  br i1 %120, label %123, label %114

121:                                              ; preds = %114
  %122 = icmp eq %"struct.WTF::KeyValuePair"* %115, %18
  br i1 %122, label %123, label %36

123:                                              ; preds = %25, %111, %121, %118, %2, %28
  %124 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %9, i64 0, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %9, i64 0, i32 0, i32 0, i32 0
  %128 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %9, i64 0, i32 0, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 %131
  br i1 %126, label %237, label %133

133:                                              ; preds = %123
  %134 = icmp eq i32 %130, 0
  br i1 %134, label %142, label %135

135:                                              ; preds = %133, %139
  %136 = phi %"struct.WTF::KeyValuePair"* [ %140, %139 ], [ %128, %133 ]
  %137 = bitcast %"struct.WTF::KeyValuePair"* %136 to i64*
  %138 = load i64, i64* %137, align 8
  switch i64 %138, label %142 [
    i64 -1, label %139
    i64 0, label %139
  ]

139:                                              ; preds = %135, %135
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %136, i64 1
  %141 = icmp eq %"struct.WTF::KeyValuePair"* %140, %132
  br i1 %141, label %237, label %135

142:                                              ; preds = %135, %133
  %143 = phi %"struct.WTF::KeyValuePair"* [ %128, %133 ], [ %136, %135 ]
  %144 = icmp eq %"struct.WTF::KeyValuePair"* %143, %132
  br i1 %144, label %237, label %145

145:                                              ; preds = %142
  %146 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  %147 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %6, i64 0, i32 0, i32 0
  %149 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %150

150:                                              ; preds = %145, %235
  %151 = phi %"struct.WTF::KeyValuePair"* [ %143, %145 ], [ %229, %235 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #12
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %147, align 8
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %151, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  store %"class.WTF::StringImpl"* %153, %"class.WTF::StringImpl"** %147, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %192, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %174

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i33
  %164 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %163, i33 1) #12
  %165 = extractvalue { i33, i1 } %164, 1
  %166 = extractvalue { i33, i1 } %164, 0
  %167 = icmp slt i33 %166, 0
  %168 = or i1 %165, %167
  br i1 %168, label %169, label %170, !prof !3

169:                                              ; preds = %160
  call void @llvm.trap() #12
  unreachable

170:                                              ; preds = %160
  %171 = trunc i33 %166 to i32
  store i32 %171, i32* %161, align 4
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %192, label %174

174:                                              ; preds = %155, %170
  %175 = phi %"class.WTF::StringImpl"* [ %172, %170 ], [ %153, %155 ]
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %192

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i33
  %184 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %183, i33 1) #12
  %185 = extractvalue { i33, i1 } %184, 1
  %186 = extractvalue { i33, i1 } %184, 0
  %187 = icmp slt i33 %186, 0
  %188 = or i1 %185, %187
  br i1 %188, label %189, label %190, !prof !3

189:                                              ; preds = %180
  call void @llvm.trap() #12
  unreachable

190:                                              ; preds = %180
  %191 = trunc i33 %186 to i32
  store i32 %191, i32* %181, align 4
  br label %192

192:                                              ; preds = %150, %170, %174, %190
  %193 = phi %"class.WTF::StringImpl"* [ null, %170 ], [ %175, %174 ], [ %175, %190 ], [ null, %150 ]
  %194 = call fastcc zeroext i1 @_ZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringE(%"class.WTF::StringImpl"* %193)
  br i1 %194, label %205, label %195

195:                                              ; preds = %192
  %196 = call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"* %148, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #12
  %197 = icmp eq %"struct.WTF::KeyValuePair"* %196, null
  %198 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %196, i64 0, i32 1
  %199 = select i1 %197, %"class.WTF::AtomicString"* %149, %"class.WTF::AtomicString"* %198
  %200 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %151, i64 0, i32 1, i32 0, i32 0, i32 0
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %200, align 8
  %202 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %199, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %201, %203
  br i1 %204, label %205, label %206

205:                                              ; preds = %195, %192
  br label %206

206:                                              ; preds = %195, %205
  %207 = phi i32 [ 0, %205 ], [ 1, %195 ]
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #12
  br label %223

223:                                              ; preds = %206, %219, %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #12
  %224 = icmp eq i32 %207, 0
  br i1 %224, label %225, label %239

225:                                              ; preds = %223
  %226 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %151, i64 1
  %227 = icmp eq %"struct.WTF::KeyValuePair"* %226, %132
  br i1 %227, label %237, label %228

228:                                              ; preds = %225, %232
  %229 = phi %"struct.WTF::KeyValuePair"* [ %233, %232 ], [ %226, %225 ]
  %230 = bitcast %"struct.WTF::KeyValuePair"* %229 to i64*
  %231 = load i64, i64* %230, align 8
  switch i64 %231, label %235 [
    i64 -1, label %232
    i64 0, label %232
  ]

232:                                              ; preds = %228, %228
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %229, i64 1
  %234 = icmp eq %"struct.WTF::KeyValuePair"* %233, %132
  br i1 %234, label %237, label %228

235:                                              ; preds = %228
  %236 = icmp eq %"struct.WTF::KeyValuePair"* %229, %132
  br i1 %236, label %237, label %150

237:                                              ; preds = %139, %225, %235, %232, %123, %142
  %238 = call i32 @_ZNK5blink8Resource8CanReuseERKNS_15FetchParametersE(%"class.blink::Resource"* %7, %"class.blink::FetchParameters"* dereferenceable(1344) %1) #12
  br label %239

239:                                              ; preds = %109, %223, %237
  %240 = phi i32 [ %238, %237 ], [ 10, %223 ], [ 10, %109 ]
  ret i32 %240
}

declare dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink19ResourceRequestHead16HttpHeaderFieldsEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringE(%"class.WTF::StringImpl"*) unnamed_addr #0 {
  %2 = alloca [8 x %"class.WTF::AtomicString"], align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %162, !prof !4

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers) #12
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %162, label %8

8:                                                ; preds = %5
  %9 = bitcast [8 x %"class.WTF::AtomicString"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #12
  %10 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i64 13) #12
  %11 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 1
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i64 17) #12
  %12 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0), i64 13) #12
  %13 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 3
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i64 6) #12
  %14 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 4
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i64 6) #12
  %15 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 5
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i64 7) #12
  %16 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 6
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i64 7) #12
  %17 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i64 10) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #12
  call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.653"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers to %"class.WTF::HashTable.653"*), i32 8) #12
  %18 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.653"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers to %"class.WTF::HashTable.653"*), %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10) #12
  %19 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.653"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers to %"class.WTF::HashTable.653"*), %"class.WTF::AtomicString"* dereferenceable(8) %11, %"class.WTF::AtomicString"* dereferenceable(8) %11) #12
  %20 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.653"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers to %"class.WTF::HashTable.653"*), %"class.WTF::AtomicString"* dereferenceable(8) %12, %"class.WTF::AtomicString"* dereferenceable(8) %12) #12
  %21 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.653"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers to %"class.WTF::HashTable.653"*), %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.WTF::AtomicString"* dereferenceable(8) %13) #12
  %22 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.653"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers to %"class.WTF::HashTable.653"*), %"class.WTF::AtomicString"* dereferenceable(8) %14, %"class.WTF::AtomicString"* dereferenceable(8) %14) #12
  %23 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.653"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers to %"class.WTF::HashTable.653"*), %"class.WTF::AtomicString"* dereferenceable(8) %15, %"class.WTF::AtomicString"* dereferenceable(8) %15) #12
  %24 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.653"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers to %"class.WTF::HashTable.653"*), %"class.WTF::AtomicString"* dereferenceable(8) %16, %"class.WTF::AtomicString"* dereferenceable(8) %16) #12
  %25 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.653"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers to %"class.WTF::HashTable.653"*), %"class.WTF::AtomicString"* dereferenceable(8) %17, %"class.WTF::AtomicString"* dereferenceable(8) %17) #12
  %26 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 7, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %42

42:                                               ; preds = %41, %38, %8
  %43 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 6, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #12
  br label %59

59:                                               ; preds = %58, %55, %42
  %60 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 5, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #12
  br label %76

76:                                               ; preds = %75, %72, %59
  %77 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 4, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #12
  br label %93

93:                                               ; preds = %92, %89, %76
  %94 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 3, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #12
  br label %110

110:                                              ; preds = %109, %106, %93
  %111 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 2, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #12
  br label %127

127:                                              ; preds = %126, %123, %110
  %128 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #12
  br label %144

144:                                              ; preds = %143, %140, %127
  %145 = getelementptr inbounds [8 x %"class.WTF::AtomicString"], [8 x %"class.WTF::AtomicString"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #12
  br label %161

161:                                              ; preds = %144, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers) #12
  br label %162

162:                                              ; preds = %5, %161, %1
  %163 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers to %"class.WTF::AtomicString"**), align 8
  %164 = icmp eq %"class.WTF::AtomicString"* %163, null
  br i1 %164, label %211, label %165

165:                                              ; preds = %162
  %166 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL31ShouldIgnoreHeaderForCacheReuseEN3WTF12AtomicStringEE9s_headers, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %167 = add i32 %166, -1
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = lshr i32 %170, 8
  %172 = and i32 %171, %167
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %163, i64 %173
  %175 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %174, i64 0, i32 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %211, label %178

178:                                              ; preds = %165
  %179 = xor i32 %171, -1
  %180 = lshr i32 %170, 31
  %181 = add nsw i32 %180, %179
  %182 = shl i32 %181, 12
  %183 = xor i32 %182, %181
  %184 = lshr i32 %183, 7
  %185 = xor i32 %184, %183
  %186 = shl i32 %185, 2
  %187 = xor i32 %186, %185
  %188 = lshr i32 %187, 20
  %189 = xor i32 %188, %187
  %190 = or i32 %189, 1
  %191 = zext i32 %190 to i64
  br label %192

192:                                              ; preds = %202, %178
  %193 = phi %"class.WTF::StringImpl"* [ %176, %178 ], [ %209, %202 ]
  %194 = phi %"class.WTF::AtomicString"* [ %174, %178 ], [ %207, %202 ]
  %195 = phi i64 [ %173, %178 ], [ %206, %202 ]
  %196 = phi i64 [ 0, %178 ], [ %204, %202 ]
  %197 = bitcast %"class.WTF::AtomicString"* %194 to i8**
  %198 = load i8*, i8** %197, align 8
  %199 = icmp ne i8* %198, inttoptr (i64 -1 to i8*)
  %200 = icmp eq %"class.WTF::StringImpl"* %193, %0
  %201 = and i1 %200, %199
  br i1 %201, label %211, label %202

202:                                              ; preds = %192
  %203 = icmp eq i64 %196, 0
  %204 = select i1 %203, i64 %191, i64 %196
  %205 = add i64 %204, %195
  %206 = and i64 %205, %168
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %163, i64 %206
  %208 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %207, i64 0, i32 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %211, label %192

211:                                              ; preds = %192, %202, %162, %165
  %212 = phi %"class.WTF::AtomicString"* [ null, %162 ], [ null, %165 ], [ null, %202 ], [ %194, %192 ]
  %213 = icmp ne %"class.WTF::AtomicString"* %212, null
  %214 = icmp eq %"class.WTF::StringImpl"* %0, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %0) #12
  br label %228

228:                                              ; preds = %211, %224, %227
  ret i1 %213
}

declare i32 @_ZNK5blink8Resource8CanReuseERKNS_15FetchParametersE(%"class.blink::Resource"*, %"class.blink::FetchParameters"* dereferenceable(1344)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17RawResourceClient17DidDownloadToBlobEPNS_8ResourceE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::RawResourceClient"* nocapture readnone, %"class.blink::Resource"* nocapture readnone, %"class.blink::BlobDataHandle"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::BlobDataHandle"* %2, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %2) #12
  %10 = bitcast %"class.blink::BlobDataHandle"* %2 to i8*
  tail call void @free(i8* %10) #12
  br label %11

11:                                               ; preds = %3, %5, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink29RawResourceClientStateCheckerC2Ev(%"class.blink::RawResourceClientStateChecker"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker13WillAddClientEv(%"class.blink::RawResourceClientStateChecker"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 364, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0)) #12
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  br label %9

9:                                                ; preds = %1, %6
  store i32 1, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker16WillRemoveClientEv(%"class.blink::RawResourceClientStateChecker"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 369, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #12
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  br label %9

9:                                                ; preds = %1, %6
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker16RedirectReceivedEv(%"class.blink::RawResourceClientStateChecker"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #12
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker15RedirectBlockedEv(%"class.blink::RawResourceClientStateChecker"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #12
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  br label %9

9:                                                ; preds = %1, %6
  store i32 2, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker8DataSentEv(%"class.blink::RawResourceClientStateChecker"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 383, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #12
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker16ResponseReceivedEv(%"class.blink::RawResourceClientStateChecker"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 387, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0)) #12
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  br label %9

9:                                                ; preds = %1, %6
  store i32 3, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker27SetSerializedCachedMetadataEv(%"class.blink::RawResourceClientStateChecker"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -3
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 393, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0)) #12
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  br label %10

10:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker20ResponseBodyReceivedEv(%"class.blink::RawResourceClientStateChecker"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0)) #12
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  br label %9

9:                                                ; preds = %1, %6
  store i32 4, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker12DataReceivedEv(%"class.blink::RawResourceClientStateChecker"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %5 [
    i32 3, label %8
    i32 5, label %8
  ]

5:                                                ; preds = %1
  %6 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0)) #12
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %8

8:                                                ; preds = %1, %1, %5
  store i32 5, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker14DataDownloadedEv(%"class.blink::RawResourceClientStateChecker"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %5 [
    i32 3, label %8
    i32 6, label %8
  ]

5:                                                ; preds = %1
  %6 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 409, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.9, i64 0, i64 0)) #12
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %8

8:                                                ; preds = %1, %1, %5
  store i32 6, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker17DidDownloadToBlobEv(%"class.blink::RawResourceClientStateChecker"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %5 [
    i32 3, label %8
    i32 6, label %8
  ]

5:                                                ; preds = %1
  %6 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 415, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.9, i64 0, i64 0)) #12
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  br label %8

8:                                                ; preds = %1, %1, %5
  store i32 7, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5blink29RawResourceClientStateChecker14NotifyFinishedEPNS_8ResourceE(%"class.blink::RawResourceClientStateChecker"* nocapture, %"class.blink::Resource"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 26, i32 16
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, 1024
  store i32 %13, i32* %3, align 4
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 26, i32 15
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 2048
  store i32 %17, i32* %4, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %10) #12
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %14) #12
  %18 = getelementptr inbounds %"class.blink::RawResourceClientStateChecker", %"class.blink::RawResourceClientStateChecker"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %2
  %22 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 433, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #12
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  %24 = load i32, i32* %18, align 4
  br label %25

25:                                               ; preds = %2, %21
  %26 = phi i32 [ %19, %2 ], [ %24, %21 ]
  %27 = icmp eq i32 %26, 8
  br i1 %27, label %28, label %31

28:                                               ; preds = %25
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 434, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0)) #12
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %31

31:                                               ; preds = %25, %28
  %32 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = add i8 %33, -3
  %35 = icmp ult i8 %34, 2
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  %37 = load i32, i32* %18, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 439, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0)) #12
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  %42 = load i32, i32* %18, align 4
  br label %43

43:                                               ; preds = %36, %39
  %44 = phi i32 [ %37, %36 ], [ %42, %39 ]
  %45 = icmp eq i32 %44, 2
  br i1 %45, label %46, label %49

46:                                               ; preds = %43
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 440, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0)) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %46, %43, %31
  %50 = load i8, i8* %32, align 1
  %51 = add i8 %50, -3
  %52 = icmp ult i8 %51, 2
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = load i32, i32* %18, align 4
  %55 = add i32 %54, -3
  %56 = icmp ult i32 %55, 5
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 447, i8* getelementptr inbounds ([189 x i8], [189 x i8]* @.str.13, i64 0, i64 0)) #12
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #12
  br label %60

60:                                               ; preds = %49, %53, %57
  store i32 8, i32* %18, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #12
  ret void
}

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11RawResourceD2Ev(%"class.blink::RawResource"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*] }, { [38 x i8*] }* @_ZTVN5blink11RawResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %3, align 8
  %5 = icmp eq %"class.blink::BlobDataHandle"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %4) #12
  %11 = bitcast %"class.blink::BlobDataHandle"* %4 to i8*
  tail call void @free(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  tail call void @_ZN5blink8ResourceD2Ev(%"class.blink::Resource"* %13) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11RawResourceD0Ev(%"class.blink::RawResource"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*] }, { [38 x i8*] }* @_ZTVN5blink11RawResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %3, align 8
  %5 = icmp eq %"class.blink::BlobDataHandle"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %4) #12
  %11 = bitcast %"class.blink::BlobDataHandle"* %4 to i8*
  tail call void @free(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0
  tail call void @_ZN5blink8ResourceD2Ev(%"class.blink::Resource"* %13) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22MemoryPressureListener16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE(%"class.blink::MemoryPressureListener"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink8Resource13OnPurgeMemoryEv(%"class.blink::Resource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink8Resource8EncodingEv(%"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

declare void @_ZN5blink8Resource13FinishAsErrorERKNS_13ResourceErrorEPN4base22SingleThreadTaskRunnerE(%"class.blink::Resource"*, %"class.blink::ResourceError"* dereferenceable(208), %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11RawResource32ShouldIgnoreHTTPStatusCodeErrorsEv(%"class.blink::RawResource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %0, i64 0, i32 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

declare void @_ZN5blink8Resource22SetRevalidatingRequestERKNS_19ResourceRequestHeadE(%"class.blink::Resource"*, %"class.blink::ResourceRequestHead"* dereferenceable(1016)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink8Resource21PriorityFromObserversEv(%"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink8Resource13CodeCacheSizeEv(%"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare void @_ZN5blink8Resource6FinishEN4base9TimeTicksEPNS1_22SingleThreadTaskRunnerE(%"class.blink::Resource"*, i64, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::SharedBuffer"* @_ZNK5blink8Resource14ResourceBufferEv(%"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %0, i64 0, i32 30, i32 0
  %3 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %2, align 8
  %4 = icmp eq %"class.WTF::SharedBuffer"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  ret %"class.WTF::SharedBuffer"* %3
}

declare zeroext i1 @_ZNK5blink8Resource20CanUseCacheValidatorEv(%"class.blink::Resource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8Resource28WillReloadAfterDiskCacheMissEv(%"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK5blink8Resource12OnMemoryDumpENS_26WebMemoryDumpLevelOfDetailEPNS_20WebProcessMemoryDumpE(%"class.blink::Resource"*, i32, %"class.blink::WebProcessMemoryDump"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8Resource15NotifyStartLoadEv(%"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %0, i64 0, i32 2
  %10 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = load i8, i8* %9, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #12
  store i8 %11, i8* %2, align 1
  %15 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %2, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #12
  store i8 0, i8* %3, align 1
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %3, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.28, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.29, i64 0, i64 0), i32 378, %"class.logging::CheckOpResult"* nonnull %5) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  store i8 1, i8* %9, align 1
  ret void
}

declare void @_ZN5blink8Resource18NotifyDataReceivedEPKcm(%"class.blink::Resource"*, i8*, i64) unnamed_addr #1

declare void @_ZN5blink8Resource14NotifyFinishedEv(%"class.blink::Resource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Resource21HasClientsOrObserversEv(%"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %17

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %0, i64 0, i32 21, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %0, i64 0, i32 22, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, 0
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ true, %9 ], [ true, %5 ], [ true, %1 ], [ %16, %13 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8Resource39DestroyDecodedDataForFailedRevalidationEv(%"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink8Resource29AllClientsAndObserversRemovedEv(%"class.blink::Resource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8Resource28DestroyDecodedDataIfPossibleEv(%"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8Resource11SetEncodingERKN3WTF6StringE(%"class.blink::Resource"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::ResourceClient"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClientD2Ev(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClientD0Ev(%"class.blink::RawResourceClient"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClient14NotifyFinishedEPNS_8ResourceE(%"class.blink::ResourceClient"*, %"class.blink::Resource"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14ResourceClient20IsFontResourceClientEv(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17RawResourceClient19IsRawResourceClientEv(%"class.blink::RawResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient8DataSentEPNS_8ResourceEmm(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient20ResponseBodyReceivedEPNS_8ResourceERNS_13BytesConsumerE(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::BytesConsumer"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient16ResponseReceivedEPNS_8ResourceERKNS_16ResourceResponseE(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient22CachedMetadataReceivedEPNS_8ResourceEN9mojo_base9BigBufferE(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.mojo_base::BigBuffer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17RawResourceClient16RedirectReceivedEPNS_8ResourceERKNS_15ResourceRequestERKNS_16ResourceResponseE(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, %"class.blink::ResourceRequest"* dereferenceable(1032), %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient15RedirectBlockedEv(%"class.blink::RawResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17RawResourceClient14DataDownloadedEPNS_8ResourceEm(%"class.blink::RawResourceClient"*, %"class.blink::Resource"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Resource"* @_ZNK5blink22NonTextResourceFactory6CreateERKNS_15ResourceRequestERKNS_21ResourceLoaderOptionsERKNS_26TextResourceDecoderOptionsE(%"class.blink::NonTextResourceFactory"*, %"class.blink::ResourceRequest"* dereferenceable(1032), %"struct.blink::ResourceLoaderOptions"* dereferenceable(112), %"class.blink::TextResourceDecoderOptions"* dereferenceable(152)) unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.blink::NonTextResourceFactory"* %0 to %"class.blink::Resource"* (%"class.blink::NonTextResourceFactory"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*)***
  %6 = load %"class.blink::Resource"* (%"class.blink::NonTextResourceFactory"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*)**, %"class.blink::Resource"* (%"class.blink::NonTextResourceFactory"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Resource"* (%"class.blink::NonTextResourceFactory"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*)*, %"class.blink::Resource"* (%"class.blink::NonTextResourceFactory"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*)** %6, i64 1
  %8 = load %"class.blink::Resource"* (%"class.blink::NonTextResourceFactory"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*)*, %"class.blink::Resource"* (%"class.blink::NonTextResourceFactory"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"*)** %7, align 8
  %9 = tail call %"class.blink::Resource"* %8(%"class.blink::NonTextResourceFactory"* %0, %"class.blink::ResourceRequest"* dereferenceable(1032) %1, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112) %2) #12
  ret %"class.blink::Resource"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Resource"* @_ZNK5blink11RawResource18RawResourceFactory6CreateERKNS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::RawResource::RawResourceFactory"*, %"class.blink::ResourceRequest"* dereferenceable(1032), %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::RawResource::RawResourceFactory", %"class.blink::RawResource::RawResourceFactory"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_8ResourceEEEPhm(i64 2752) #12
  %6 = load i8, i8* %4, align 1
  %7 = bitcast i8* %5 to %"class.blink::Resource"*
  %8 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0
  tail call void @_ZN5blink8ResourceC2ERKNS_19ResourceRequestHeadENS_12ResourceTypeERKNS_21ResourceLoaderOptionsE(%"class.blink::Resource"* %7, %"class.blink::ResourceRequestHead"* dereferenceable(1016) %8, i8 zeroext %6, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112) %2) #12
  %9 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*] }, { [38 x i8*] }* @_ZTVN5blink11RawResourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 2728
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 17, i1 false) #12
  %11 = getelementptr inbounds i8, i8* %5, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  ret %"class.blink::Resource"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_8ResourceEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8ResourceEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8ResourceEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8ResourceEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8ResourceEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Resource"*
  %4 = bitcast i8* %1 to void (%"class.blink::Resource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Resource"*, %"class.blink::Visitor"*)**, void (%"class.blink::Resource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::Resource"*, %"class.blink::Visitor"*)*, void (%"class.blink::Resource"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::Resource"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8ResourceEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::Resource"*
  %3 = bitcast i8* %0 to void (%"class.blink::Resource"*)***
  %4 = load void (%"class.blink::Resource"*)**, void (%"class.blink::Resource"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Resource"*)*, void (%"class.blink::Resource"*)** %4, i64 1
  %6 = load void (%"class.blink::Resource"*)*, void (%"class.blink::Resource"*)** %5, align 8
  tail call void %6(%"class.blink::Resource"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8ResourceEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIN5blink10WeakMemberINS1_14ResourceClientEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS1_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EEPS3_EEbRKT0_(%"class.WTF::HashTable.119"*, %"class.blink::ResourceClient"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.119", %"class.WTF::HashTable.119"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.121"*, %"struct.WTF::KeyValuePair.121"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.121"* %4, null
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.119", %"class.WTF::HashTable.119"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::ResourceClient"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.121", %"struct.WTF::KeyValuePair.121"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.121", %"struct.WTF::KeyValuePair.121"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::ResourceClient"*
  %38 = icmp eq %"class.blink::ResourceClient"* %36, %37
  br i1 %38, label %68, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %59, %39
  %54 = phi i64 [ %33, %39 ], [ %63, %59 ]
  %55 = phi i64 [ 0, %39 ], [ %61, %59 ]
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.121", %"struct.WTF::KeyValuePair.121"* %4, i64 %54, i32 0, i32 0, i32 0
  %57 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %56, align 8
  %58 = icmp eq %"class.blink::ResourceClient"* %57, null
  br i1 %58, label %68, label %59

59:                                               ; preds = %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %52, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %10
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.121", %"struct.WTF::KeyValuePair.121"* %4, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.121", %"struct.WTF::KeyValuePair.121"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::ResourceClient"*, %"class.blink::ResourceClient"** %65, align 8
  %67 = icmp eq %"class.blink::ResourceClient"* %66, %37
  br i1 %67, label %68, label %53

68:                                               ; preds = %53, %59, %2, %6
  %69 = phi %"struct.WTF::KeyValuePair.121"* [ null, %2 ], [ %34, %6 ], [ null, %53 ], [ %64, %59 ]
  %70 = icmp ne %"struct.WTF::KeyValuePair.121"* %69, null
  ret i1 %70
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.653"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.653", %"class.WTF::HashTable.653"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #12
  %30 = bitcast i8* %29 to %"class.WTF::AtomicString"*
  %31 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.653"* %0, %"class.WTF::AtomicString"* %30, i32 %17, %"class.WTF::AtomicString"* null) #12
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.653"*, %"class.WTF::AtomicString"*, i32, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.653", %"class.WTF::HashTable.653"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.653", %"class.WTF::HashTable.653"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.653"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %17 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  br label %61

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable.653"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %"class.WTF::AtomicString"* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"class.WTF::AtomicString"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  %34 = bitcast %"class.WTF::AtomicString"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #12
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #12
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.653", %"class.WTF::HashTable.653"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"class.WTF::AtomicString"* %23

61:                                               ; preds = %13, %157
  %62 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %63 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %64 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %160, %157 ]
  %65 = phi %"class.WTF::AtomicString"* [ null, %13 ], [ %161, %157 ]
  %66 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 %67
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  switch i64 %71, label %72 [
    i64 -1, label %157
    i64 0, label %157
  ]

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = lshr i32 %74, 8
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %77
  %79 = ptrtoint %"class.WTF::AtomicString"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = xor i32 %75, -1
  %85 = lshr i32 %74, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %105

97:                                               ; preds = %117
  %98 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %79, %72 ], [ %98, %97 ]
  %101 = phi %"class.WTF::AtomicString"* [ null, %72 ], [ %118, %97 ]
  %102 = icmp eq %"class.WTF::AtomicString"* %101, null
  %103 = ptrtoint %"class.WTF::AtomicString"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %128

105:                                              ; preds = %117, %83
  %106 = phi %"class.WTF::AtomicString"* [ null, %83 ], [ %118, %117 ]
  %107 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %126, %117 ]
  %108 = phi i64 [ %79, %83 ], [ %124, %117 ]
  %109 = phi %"class.WTF::AtomicString"* [ %78, %83 ], [ %123, %117 ]
  %110 = phi i64 [ %77, %83 ], [ %122, %117 ]
  %111 = phi i64 [ 0, %83 ], [ %120, %117 ]
  %112 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = icmp eq %"class.WTF::StringImpl"* %107, %70
  br i1 %116, label %128, label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.WTF::AtomicString"* [ %106, %115 ], [ %109, %105 ]
  %119 = icmp eq i64 %111, 0
  %120 = select i1 %119, i64 %96, i64 %111
  %121 = add i64 %120, %110
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %122
  %124 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %97, label %105

128:                                              ; preds = %115, %99
  %129 = phi i64 [ %104, %99 ], [ %108, %115 ]
  %130 = inttoptr i64 %129 to %"class.WTF::AtomicString"*
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #12
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = bitcast %"class.WTF::AtomicString"* %68 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %129 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 %67
  %153 = icmp eq %"class.WTF::AtomicString"* %152, %3
  %154 = select i1 %153, %"class.WTF::AtomicString"* %130, %"class.WTF::AtomicString"* %65
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  br label %157

157:                                              ; preds = %61, %61, %147
  %158 = phi i64 [ %62, %61 ], [ %156, %147 ], [ %62, %61 ]
  %159 = phi i32 [ %63, %61 ], [ %155, %147 ], [ %63, %61 ]
  %160 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %151, %147 ], [ %64, %61 ]
  %161 = phi %"class.WTF::AtomicString"* [ %65, %61 ], [ %154, %147 ], [ %65, %61 ]
  %162 = add i32 %66, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.653"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.653", %"class.WTF::HashTable.653"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %6 = icmp eq %"class.WTF::AtomicString"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.653"* %0, %"class.WTF::AtomicString"* null)
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::AtomicString"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.653", %"class.WTF::HashTable.653"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %22
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %60, %52 ]
  %43 = phi %"class.WTF::AtomicString"* [ %23, %27 ], [ %58, %52 ]
  %44 = phi %"class.WTF::AtomicString"* [ null, %27 ], [ %53, %52 ]
  %45 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %46 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %47 = bitcast %"class.WTF::AtomicString"* %43 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = icmp eq %"class.WTF::StringImpl"* %42, %17
  br i1 %51, label %125, label %52

52:                                               ; preds = %41, %50
  %53 = phi %"class.WTF::AtomicString"* [ %44, %50 ], [ %43, %41 ]
  %54 = icmp eq i64 %46, 0
  %55 = select i1 %54, i64 %40, i64 %46
  %56 = add i64 %55, %45
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %57
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"class.WTF::AtomicString"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::HashTable.653", %"class.WTF::HashTable.653"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"class.WTF::AtomicString"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #12
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  tail call void @llvm.trap() #12
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %72
  %95 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %96 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %73, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #12
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"class.WTF::HashTable.653", %"class.WTF::HashTable.653"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable.653", %"class.WTF::HashTable.653"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %12, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.653"* %0, %"class.WTF::AtomicString"* %73)
  br label %125

125:                                              ; preds = %50, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %50 ]
  %127 = phi %"class.WTF::AtomicString"* [ %73, %113 ], [ %124, %123 ], [ %43, %50 ]
  %128 = insertvalue { %"class.WTF::AtomicString"*, i8 } undef, %"class.WTF::AtomicString"* %127, 0
  %129 = insertvalue { %"class.WTF::AtomicString"*, i8 } %128, i8 %126, 1
  ret { %"class.WTF::AtomicString"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.653"*, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.653", %"class.WTF::HashTable.653"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.653", %"class.WTF::HashTable.653"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"class.WTF::AtomicString"*
  %37 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.653"* %0, %"class.WTF::AtomicString"* %36, i32 %32, %"class.WTF::AtomicString"* %1) #12
  ret %"class.WTF::AtomicString"* %37
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %74, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %14) #12
  %16 = and i32 %15, %11
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %17
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %74, label %22

22:                                               ; preds = %8
  %23 = bitcast %"class.WTF::StringView"* %3 to i8*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %26 = bitcast %"class.WTF::StringView"* %4 to i8*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = xor i32 %15, -1
  %32 = lshr i32 %15, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %45

45:                                               ; preds = %65, %22
  %46 = phi %"struct.WTF::KeyValuePair"* [ %18, %22 ], [ %70, %65 ]
  %47 = phi i64 [ %17, %22 ], [ %69, %65 ]
  %48 = phi i64 [ 0, %22 ], [ %67, %65 ]
  %49 = bitcast %"struct.WTF::KeyValuePair"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %65, label %52

52:                                               ; preds = %45
  %53 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, %53
  br i1 %55, label %74, label %56

56:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  store i8* %50, i8** %44, align 8
  %57 = getelementptr inbounds i8, i8* %50, i64 12
  store i8* %57, i8** %24, align 8
  %58 = getelementptr inbounds i8, i8* %50, i64 4
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %27, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 1
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %29, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %30, align 8
  %64 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  br i1 %64, label %74, label %65

65:                                               ; preds = %56, %45
  %66 = icmp eq i64 %48, 0
  %67 = select i1 %66, i64 %43, i64 %48
  %68 = add i64 %67, %47
  %69 = and i64 %68, %12
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %45

74:                                               ; preds = %52, %56, %65, %2, %8
  %75 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ null, %8 ], [ %46, %52 ], [ %46, %56 ], [ null, %65 ]
  ret %"struct.WTF::KeyValuePair"* %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #12
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #12
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #12
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #12
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #12
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink8ResourceD2Ev(%"class.blink::Resource"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIhEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerIS3_E4typeEEE5valueEPcE4typeES5_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESG_SI_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = load i8, i8* %1, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #12
  store i8 %4, i8* %3, align 1
  %5 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* nonnull %3, i64 1) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11RawResource26PreloadBytesConsumerClientEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11RawResource26PreloadBytesConsumerClientEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11RawResource26PreloadBytesConsumerClientEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11RawResource26PreloadBytesConsumerClientEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11RawResource26PreloadBytesConsumerClientEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11RawResource26PreloadBytesConsumerClientEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11RawResourceEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds i8, i8* %1, i64 24
  %26 = bitcast i8* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %95, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = and i64 %27, -131072
  %32 = inttoptr i64 %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 4138
  %34 = load i8, i8* %33, align 2
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %32, i64 4160
  br label %76

38:                                               ; preds = %29
  %39 = getelementptr inbounds i8, i8* %32, i64 4096
  %40 = bitcast i8* %39 to %"class.blink::NormalPage"*
  %41 = getelementptr inbounds i8, i8* %32, i64 4400
  %42 = bitcast i8* %41 to i8**
  %43 = bitcast i8* %41 to i64*
  %44 = load i64, i64* %43, align 16
  %45 = sub i64 %27, %44
  %46 = lshr i64 %45, 3
  %47 = lshr i64 %45, 6
  %48 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %40, i64 0, i32 2, i32 0, i32 1, i64 %47
  %49 = load atomic i8, i8* %48 acquire, align 1
  %50 = trunc i64 %46 to i32
  %51 = and i32 %50, 7
  %52 = shl i32 2, %51
  %53 = trunc i32 %52 to i8
  %54 = add i8 %53, -1
  %55 = and i8 %54, %49
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %38, %57
  %58 = phi i64 [ %59, %57 ], [ %47, %38 ]
  %59 = add i64 %58, -1
  %60 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %40, i64 0, i32 2, i32 0, i32 1, i64 %59
  %61 = load atomic i8, i8* %60 acquire, align 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %57, label %63

63:                                               ; preds = %57, %38
  %64 = phi i64 [ %47, %38 ], [ %59, %57 ]
  %65 = phi i8 [ %55, %38 ], [ %61, %57 ]
  %66 = zext i8 %65 to i32
  %67 = tail call i32 @llvm.ctlz.i32(i32 %66, i1 true) #12, !range !5
  %68 = add nsw i32 %67, -24
  %69 = shl i64 %64, 3
  %70 = or i64 %69, 7
  %71 = sext i32 %68 to i64
  %72 = sub i64 %70, %71
  %73 = shl i64 %72, 3
  %74 = load i8*, i8** %42, align 16
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  br label %76

76:                                               ; preds = %63, %36
  %77 = phi i8* [ %37, %36 ], [ %75, %63 ]
  %78 = getelementptr inbounds i8, i8* %77, i64 8
  %79 = getelementptr inbounds i8, i8* %77, i64 4
  %80 = bitcast i8* %79 to i16*
  %81 = load atomic i16, i16* %80 acquire, align 2
  %82 = lshr i16 %81, 2
  %83 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %84 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %83, i64 0, i32 0
  %85 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %84, align 8
  %86 = zext i16 %82 to i64
  %87 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %85, i64 %86
  %88 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %87, align 8
  %89 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %88, i64 0, i32 0
  %90 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %89, align 8
  %91 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %92, i64 6
  %94 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %93, align 8
  tail call void %94(%"class.blink::Visitor"* %0, i8* nonnull %30, i8* %25, i8* %78, void (%"class.blink::Visitor"*, i8*)* %90, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_17RawResourceClientEEEvRKNS_14LivenessBrokerEPKv) #12
  br label %95

95:                                               ; preds = %24, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11RawResource26PreloadBytesConsumerClientEE8FinalizeEPv(i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11RawResource26PreloadBytesConsumerClientEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11RawResource26PreloadBytesConsumerClient5TraceEPNS_7VisitorE(%"class.blink::RawResource::PreloadBytesConsumerClient"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::RawResource::PreloadBytesConsumerClient", %"class.blink::RawResource::PreloadBytesConsumerClient"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.350"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::RawResource::PreloadBytesConsumerClient", %"class.blink::RawResource::PreloadBytesConsumerClient"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.522"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11RawResourceEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::RawResource::PreloadBytesConsumerClient", %"class.blink::RawResource::PreloadBytesConsumerClient"* %0, i64 0, i32 3
  tail call void @_ZN5blink7Visitor5TraceINS_17RawResourceClientEEEvRKNS_10WeakMemberIT_EE(%"class.blink::Visitor"* %1, %"class.blink::WeakMember.524"* dereferenceable(8) %25)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor5TraceINS_17RawResourceClientEEEvRKNS_10WeakMemberIT_EE(%"class.blink::Visitor"*, %"class.blink::WeakMember.524"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::WeakMember.524"* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::WeakMember.524"* %1 to i8*
  %9 = and i64 %4, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %6
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %4, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #12, !range !5
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %14, %41
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %70, i64 6
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_17RawResourceClientEEEvRKNS_14LivenessBrokerEPKv) #12
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13BytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BytesConsumer"*
  %4 = bitcast i8* %1 to void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)**, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %5, i64 13
  %7 = load void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)*, void (%"class.blink::BytesConsumer"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::BytesConsumer"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11RawResourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 2736
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22BufferingBytesConsumerEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::Resource"*
  tail call void @_ZNK5blink8Resource5TraceEPNS_7VisitorE(%"class.blink::Resource"* %14, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_17RawResourceClientEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RawResourceClient"**
  %4 = load %"class.blink::RawResourceClient"*, %"class.blink::RawResourceClient"** %3, align 8
  %5 = ptrtoint %"class.blink::RawResourceClient"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %10
    i64 -1, label %10
  ]

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_17RawResourceClientEEEbPKT_(%"class.blink::LivenessBroker"* %0, %"class.blink::RawResourceClient"* %4)
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  br label %10

10:                                               ; preds = %2, %2, %8, %6
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_17RawResourceClientEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::RawResourceClient"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #12
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::RawResourceClient"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #12, !range !5
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13BytesConsumer6ClientD2Ev(%"class.blink::BytesConsumer::Client"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11RawResource26PreloadBytesConsumerClientD0Ev(%"class.blink::RawResource::PreloadBytesConsumerClient"*) unnamed_addr #6 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11RawResource26PreloadBytesConsumerClient9DebugNameEv(%"class.blink::RawResource::PreloadBytesConsumerClient"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i64 26) #12
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12CopyToVectorIN5blink10WeakMemberINS1_14ResourceClientEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS1_13HeapAllocatorENS1_10HeapVectorINS1_6MemberIS3_EELj0EEEEEvRKNS_14HashCountedSetIT_T0_T1_T2_EERT3_(%"class.WTF::HashCountedSet"* dereferenceable(24), %"class.blink::HeapVector.526"* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %3 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %4 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %3, i64 0, i32 1
  %5 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %4) #12
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9, !prof !3

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %4, i8* %8) #12
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i8* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast i8* %10 to %"class.blink::ThreadState"**
  %12 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %12, i64 0, i32 14
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"class.blink::HeapVector.526", %"class.blink::HeapVector.526"* %1, i64 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::HeapVector.526", %"class.blink::HeapVector.526"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp ult i32 %20, %18
  br i1 %21, label %33, label %22

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.blink::HeapVector.526", %"class.blink::HeapVector.526"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.532"*, %"class.blink::Member.532"** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %24, i64 %25
  %28 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %24, i64 %26
  %29 = bitcast %"class.blink::Member.532"* %27 to i8*
  %30 = ptrtoint %"class.blink::Member.532"* %28 to i64
  %31 = ptrtoint %"class.blink::Member.532"* %27 to i64
  %32 = sub i64 %30, %31
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %29, i64 %32) #12
  br label %58

33:                                               ; preds = %9
  %34 = getelementptr inbounds %"class.blink::HeapVector.526", %"class.blink::HeapVector.526"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp ult i32 %35, %18
  br i1 %36, label %37, label %46

37:                                               ; preds = %33
  %38 = lshr i32 %35, 2
  %39 = add nuw i32 %35, 1
  %40 = add i32 %39, %38
  %41 = icmp ugt i32 %40, 4
  %42 = select i1 %41, i32 %40, i32 4
  %43 = icmp ugt i32 %42, %18
  %44 = select i1 %43, i32 %42, i32 %18
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.529"* %16, i32 %44) #12
  %45 = load i32, i32* %19, align 4
  br label %46

46:                                               ; preds = %37, %33
  %47 = phi i32 [ %45, %37 ], [ %20, %33 ]
  %48 = getelementptr inbounds %"class.blink::HeapVector.526", %"class.blink::HeapVector.526"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::Member.532"*, %"class.blink::Member.532"** %48, align 8
  %50 = zext i32 %47 to i64
  %51 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %49, i64 %50
  %52 = zext i32 %18 to i64
  %53 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %49, i64 %52
  %54 = bitcast %"class.blink::Member.532"* %51 to i8*
  %55 = ptrtoint %"class.blink::Member.532"* %53 to i64
  %56 = ptrtoint %"class.blink::Member.532"* %51 to i64
  %57 = sub i64 %55, %56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 %57, i1 false) #12
  br label %58

58:                                               ; preds = %22, %46
  store i32 %18, i32* %19, align 4
  %59 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %60 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %59, i64 0, i32 1
  %61 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %60) #12
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %65, !prof !3

63:                                               ; preds = %58
  %64 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %60, i8* %64) #12
  br label %65

65:                                               ; preds = %58, %63
  %66 = phi i8* [ %64, %63 ], [ %61, %58 ]
  %67 = bitcast i8* %66 to %"class.blink::ThreadState"**
  %68 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %68, i64 0, i32 14
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, -1
  store i64 %71, i64* %69, align 8
  %72 = load i32, i32* %17, align 4
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 0
  %75 = load %"struct.WTF::KeyValuePair.121"*, %"struct.WTF::KeyValuePair.121"** %74, align 8
  %76 = getelementptr inbounds %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet"* %0, i64 0, i32 0, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.121", %"struct.WTF::KeyValuePair.121"* %75, i64 %78
  br i1 %73, label %92, label %80

80:                                               ; preds = %65
  %81 = icmp eq i32 %77, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %80, %86
  %83 = phi %"struct.WTF::KeyValuePair.121"* [ %87, %86 ], [ %75, %80 ]
  %84 = bitcast %"struct.WTF::KeyValuePair.121"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  switch i64 %85, label %89 [
    i64 -1, label %86
    i64 0, label %86
  ]

86:                                               ; preds = %82, %82
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.121", %"struct.WTF::KeyValuePair.121"* %83, i64 1
  %88 = icmp eq %"struct.WTF::KeyValuePair.121"* %87, %79
  br i1 %88, label %92, label %82

89:                                               ; preds = %82, %80
  %90 = phi %"struct.WTF::KeyValuePair.121"* [ %75, %80 ], [ %83, %82 ]
  %91 = icmp eq %"struct.WTF::KeyValuePair.121"* %90, %79
  br i1 %91, label %92, label %93

92:                                               ; preds = %86, %105, %115, %112, %65, %89
  ret void

93:                                               ; preds = %89, %115
  %94 = phi i32 [ %116, %115 ], [ 0, %89 ]
  %95 = phi %"struct.WTF::KeyValuePair.121"* [ %109, %115 ], [ %90, %89 ]
  %96 = tail call dereferenceable(8) %"class.blink::Member.532"* @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.529"* %16, i32 %94) #12
  %97 = bitcast %"struct.WTF::KeyValuePair.121"* %95 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.blink::Member.532"* %96 to i64*
  store atomic i64 %98, i64* %99 monotonic, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %93
  %103 = inttoptr i64 %98 to i8*
  %104 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %103) #12
  br label %105

105:                                              ; preds = %93, %102
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.121", %"struct.WTF::KeyValuePair.121"* %95, i64 1
  %107 = icmp eq %"struct.WTF::KeyValuePair.121"* %106, %79
  br i1 %107, label %92, label %108

108:                                              ; preds = %105, %112
  %109 = phi %"struct.WTF::KeyValuePair.121"* [ %113, %112 ], [ %106, %105 ]
  %110 = bitcast %"struct.WTF::KeyValuePair.121"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  switch i64 %111, label %115 [
    i64 -1, label %112
    i64 0, label %112
  ]

112:                                              ; preds = %108, %108
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.121", %"struct.WTF::KeyValuePair.121"* %109, i64 1
  %114 = icmp eq %"struct.WTF::KeyValuePair.121"* %113, %79
  br i1 %114, label %92, label %108

115:                                              ; preds = %108
  %116 = add i32 %94, 1
  %117 = icmp eq %"struct.WTF::KeyValuePair.121"* %109, %79
  br i1 %117, label %92, label %93
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.529"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !6

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.532"*, %"class.blink::Member.532"** %8, align 8
  %10 = icmp eq %"class.blink::Member.532"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ResourceClientEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.529"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.532"*, %"class.blink::Member.532"** %8, align 8
  %26 = icmp eq %"class.blink::Member.532"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.532"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.32, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.33, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.529"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.529"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.529"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.529"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ResourceClientEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.532"*, %"class.blink::Member.532"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.532"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.532"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !6

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.529"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.529"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.529"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14ResourceClientEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.35, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.37, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14ResourceClientEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.532"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %101, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %25, %98
  %28 = phi i64 [ %99, %98 ], [ 0, %25 ]
  %29 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.532"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %98, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = and i64 %31, -131072
  %36 = inttoptr i64 %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 4138
  %38 = load i8, i8* %37, align 2
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %33
  %41 = getelementptr inbounds i8, i8* %36, i64 4160
  br label %80

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %36, i64 4096
  %44 = bitcast i8* %43 to %"class.blink::NormalPage"*
  %45 = getelementptr inbounds i8, i8* %36, i64 4400
  %46 = bitcast i8* %45 to i8**
  %47 = bitcast i8* %45 to i64*
  %48 = load i64, i64* %47, align 16
  %49 = sub i64 %31, %48
  %50 = lshr i64 %49, 3
  %51 = lshr i64 %49, 6
  %52 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %51
  %53 = load atomic i8, i8* %52 acquire, align 1
  %54 = trunc i64 %50 to i32
  %55 = and i32 %54, 7
  %56 = shl i32 2, %55
  %57 = trunc i32 %56 to i8
  %58 = add i8 %57, -1
  %59 = and i8 %58, %53
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %42, %61
  %62 = phi i64 [ %63, %61 ], [ %51, %42 ]
  %63 = add i64 %62, -1
  %64 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %63
  %65 = load atomic i8, i8* %64 acquire, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %61, label %67

67:                                               ; preds = %61, %42
  %68 = phi i64 [ %51, %42 ], [ %63, %61 ]
  %69 = phi i8 [ %59, %42 ], [ %65, %61 ]
  %70 = zext i8 %69 to i32
  %71 = tail call i32 @llvm.ctlz.i32(i32 %70, i1 true) #12, !range !5
  %72 = add nsw i32 %71, -24
  %73 = shl i64 %68, 3
  %74 = or i64 %73, 7
  %75 = sext i32 %72 to i64
  %76 = sub i64 %74, %75
  %77 = shl i64 %76, 3
  %78 = load i8*, i8** %46, align 16
  %79 = getelementptr inbounds i8, i8* %78, i64 %77
  br label %80

80:                                               ; preds = %67, %40
  %81 = phi i8* [ %41, %40 ], [ %79, %67 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = getelementptr inbounds i8, i8* %81, i64 4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 acquire, align 2
  %86 = lshr i16 %85, 2
  %87 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %88 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %87, i64 0, i32 0
  %89 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %88, align 8
  %90 = zext i16 %86 to i64
  %91 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %89, i64 %90
  %92 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %91, align 8
  %93 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %92, i64 0, i32 0
  %94 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %93, align 8
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %96 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %95, i64 5
  %97 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, align 8
  tail call void %97(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* %82, void (%"class.blink::Visitor"*, i8*)* %94) #12
  br label %98

98:                                               ; preds = %27, %80
  %99 = add nuw nsw i64 %28, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %27

101:                                              ; preds = %98, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14ResourceClientEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.532"* @_ZN3WTF6VectorIN5blink6MemberINS1_14ResourceClientEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.529"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.32, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.529", %"class.WTF::Vector.529"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.532"*, %"class.blink::Member.532"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.532", %"class.blink::Member.532"* %24, i64 %25
  ret %"class.blink::Member.532"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22BufferingBytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BufferingBytesConsumer"*
  tail call void @_ZNK5blink22BufferingBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::BufferingBytesConsumer"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink22BufferingBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::BufferingBytesConsumer"*, %"class.blink::Visitor"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{i32 24, i32 33}
!6 = !{!"branch_weights", i32 2000, i32 1}
