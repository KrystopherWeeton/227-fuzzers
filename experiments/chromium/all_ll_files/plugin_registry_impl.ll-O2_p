; ModuleID = '../../content/browser/renderer_host/plugin_registry_impl.cc'
source_filename = "../../content/browser/renderer_host/plugin_registry_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::PluginRegistryImpl" = type { %"class.blink::mojom::PluginRegistry", i32, %"class.mojo::ReceiverSetBase", %"class.base::TimeTicks", %"class.base::WeakPtrFactory.13" }
%"class.blink::mojom::PluginRegistry" = type { i32 (...)** }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1", i64, %"class.std::__1::map", i8*, i64, %"class.base::WeakPtrFactory" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.1" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.7", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory.13" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.16, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.18", [4 x i8] }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.16 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.17" }>
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i32 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::PluginRegistryStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.140, %"class.std::__1::unique_ptr.261", %"class.base::WeakPtrFactory.308" }
%class.scoped_refptr.140 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.16, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.227", %"class.absl::optional.232", %"class.absl::optional.180", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.252", i8, [7 x i8], %class.scoped_refptr.16, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.141" }>
%"class.base::RefCountedThreadSafe.141" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.154" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.154" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.155", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.16, %"class.std::__1::unique_ptr.156", %"class.absl::optional.166", %"struct.std::__1::atomic.176", i8, i8, i8, i8, i32, i32, %"class.absl::optional.180", %"class.std::__1::unique_ptr.185", i8, i64, %class.scoped_refptr.217, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.225", %"class.base::WeakPtrFactory.226" }
%"class.base::OnceCallback.155" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.16, i8, %"class.mojo::ScopedHandleBase.159", %class.scoped_refptr.160, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.161", i8*, %"class.base::WeakPtrFactory.162" }
%"class.mojo::ScopedHandleBase.159" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.160 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.161" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.162" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.166" = type { %"class.absl::optional_internal::optional_data.167" }
%"class.absl::optional_internal::optional_data.167" = type { %"class.absl::optional_internal::optional_data_base.168" }
%"class.absl::optional_internal::optional_data_base.168" = type { %"class.absl::optional_internal::optional_data_dtor_base.169" }
%"class.absl::optional_internal::optional_data_dtor_base.169" = type { i8, %union.anon.170 }
%union.anon.170 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.171", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.171" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i8 }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.188", i8, i64, %class.scoped_refptr.189, %class.scoped_refptr.213 }
%"class.base::RepeatingCallback.188" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.189 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.191", %"class.std::__1::map.202", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.190 }
%class.scoped_refptr.190 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.191" = type { %"class.std::__1::__tree.192" }
%"class.std::__1::__tree.192" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.193", %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::map.202" = type { %"class.std::__1::__tree.203" }
%"class.std::__1::__tree.203" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.204", %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%class.scoped_refptr.213 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.217 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type <{ %"class.base::RefCountedThreadSafe.218", [4 x i8], %"struct.mojo::internal::MessageQuotaChecker::Configuration"*, %"class.base::TimeTicks", %"struct.std::__1::atomic.220", %"struct.std::__1::atomic.220", %"struct.std::__1::atomic.220", %"class.base::Lock", %"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage", i64, i64, %"class.mojo::MessagePipeHandle", [4 x i8] }>
%"class.base::RefCountedThreadSafe.218" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.mojo::internal::MessageQuotaChecker::Configuration" = type { i8, i64, i64, i64, {}* }
%"struct.std::__1::atomic.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__cxx_atomic_impl.223" }
%"struct.std::__1::__cxx_atomic_impl.223" = type { %"struct.std::__1::__cxx_atomic_base_impl.224" }
%"struct.std::__1::__cxx_atomic_base_impl.224" = type { i64 }
%"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage" = type { i64, i64, double }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.225" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.76 }
%class.scoped_refptr.76 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.226" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.227" = type { %"class.absl::optional_internal::optional_data.228" }
%"class.absl::optional_internal::optional_data.228" = type { %"class.absl::optional_internal::optional_data_base.229" }
%"class.absl::optional_internal::optional_data_base.229" = type { %"class.absl::optional_internal::optional_data_dtor_base.230" }
%"class.absl::optional_internal::optional_data_dtor_base.230" = type { i8, %union.anon.231 }
%union.anon.231 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.232" = type { %"class.absl::optional_internal::optional_data.233" }
%"class.absl::optional_internal::optional_data.233" = type { %"class.absl::optional_internal::optional_data_base.234" }
%"class.absl::optional_internal::optional_data_base.234" = type { %"class.absl::optional_internal::optional_data_dtor_base.235" }
%"class.absl::optional_internal::optional_data_dtor_base.235" = type { i8, [7 x i8], %union.anon.236 }
%union.anon.236 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.180" = type { %"class.absl::optional_internal::optional_data.181" }
%"class.absl::optional_internal::optional_data.181" = type { %"class.absl::optional_internal::optional_data_base.182" }
%"class.absl::optional_internal::optional_data_base.182" = type { %"class.absl::optional_internal::optional_data_dtor_base.183" }
%"class.absl::optional_internal::optional_data_dtor_base.183" = type { i8, %union.anon.184 }
%union.anon.184 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.237 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.237 = type { %"class.std::__1::map.240" }
%"class.std::__1::map.240" = type { %"class.std::__1::__tree.241" }
%"class.std::__1::__tree.241" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.251"*, i64 }
%"class.std::__1::unique_ptr.251" = type opaque
%"class.std::__1::map.252" = type { %"class.std::__1::__tree.253" }
%"class.std::__1::__tree.253" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.254", %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.264", %"class.absl::optional.265", %"class.absl::optional.270", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.277", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.285", %"class.std::__1::map.294", i64, %"class.base::OnceCallback.155", %"class.base::OnceCallback.303", i8, %class.scoped_refptr.16, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.304" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.264" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.265" = type { %"class.absl::optional_internal::optional_data.266" }
%"class.absl::optional_internal::optional_data.266" = type { %"class.absl::optional_internal::optional_data_base.267" }
%"class.absl::optional_internal::optional_data_base.267" = type { %"class.absl::optional_internal::optional_data_dtor_base.268" }
%"class.absl::optional_internal::optional_data_dtor_base.268" = type { i8, %union.anon.269 }
%union.anon.269 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.270" = type { %"class.absl::optional_internal::optional_data.271" }
%"class.absl::optional_internal::optional_data.271" = type { %"class.absl::optional_internal::optional_data_base.272" }
%"class.absl::optional_internal::optional_data_base.272" = type { %"class.absl::optional_internal::optional_data_dtor_base.273" }
%"class.absl::optional_internal::optional_data_dtor_base.273" = type { i8, %union.anon.274 }
%union.anon.274 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.155" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.16, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.275" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.275" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.276 }
%class.scoped_refptr.276 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.280", %class.scoped_refptr.281 }
%"class.base::RepeatingCallback.280" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.281 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.141", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.285" = type { %"class.std::__1::__tree.286" }
%"class.std::__1::__tree.286" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.287", %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::map.294" = type { %"class.std::__1::__tree.295" }
%"class.std::__1::__tree.295" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.base::OnceCallback.303" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.155" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.304" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.308" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::PluginRegistryStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::PluginRegistry"* }
%"class.mojo::ReceiverSetState::ReceiverState" = type { i32 (...)** }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.28 }
%union.anon.28 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.75" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.content::PluginServiceImpl" = type { %"class.content::PluginService", %"class.std::__1::vector", i32, %"class.content::PluginServiceFilter"*, %class.scoped_refptr.16, %"class.base::SequenceCheckerDoNothing", %"class.std::__1::map.64" }
%"class.content::PluginService" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::PepperPluginInfo"*, %"struct.content::PepperPluginInfo"*, %"class.std::__1::__compressed_pair.59" }
%"struct.content::PepperPluginInfo" = type <{ i8, i8, [6 x i8], %"class.base::FilePath", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.29", i8, [7 x i8], %"struct.content::PepperPluginInfo::EntryPoints", i32, [4 x i8] }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"*, %"class.std::__1::__compressed_pair.54" }
%"struct.content::WebPluginMimeType" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.31", %"class.std::__1::basic_string.38", %"class.std::__1::vector.47" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.41 }
%union.anon.41 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.content::WebPluginMimeType::Param"*, %"struct.content::WebPluginMimeType::Param"*, %"class.std::__1::__compressed_pair.49" }
%"struct.content::WebPluginMimeType::Param" = type { %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.content::WebPluginMimeType::Param"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.content::WebPluginMimeType"* }
%"struct.content::PepperPluginInfo::EntryPoints" = type { i8* (i8*)*, i32 (i32, i8* (i8*)*)*, void ()* }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.content::PepperPluginInfo"* }
%"class.content::PluginServiceFilter" = type { i32 (...)** }
%"class.std::__1::map.64" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"*, %"class.std::__1::__compressed_pair.79" }
%"struct.content::WebPluginInfo" = type <{ %"class.std::__1::basic_string.38", %"class.base::FilePath", %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38", %"class.std::__1::vector.29", i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.content::WebPluginInfo"* }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.103" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::mojom::PluginInfo"* }
%"class.blink::mojom::PluginInfo" = type <{ %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38", %"class.base::FilePath", i32, [4 x i8], %"class.std::__1::vector.88", i8, [7 x i8] }>
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.mojo::StructPtr.90"*, %"class.mojo::StructPtr.90"*, %"class.std::__1::__compressed_pair.95" }
%"class.mojo::StructPtr.90" = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::mojom::PluginMimeType"* }
%"class.blink::mojom::PluginMimeType" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string.38", %"class.std::__1::vector.31" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.mojo::StructPtr.90"* }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.mojo::StructPtr"* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.31" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.119" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.GURL* }
%"class.content::RenderProcessHost" = type <{ %"class.IPC::Sender", %"class.IPC::Listener", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.IPC::Sender" = type { i32 (...)** }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.108", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.108" = type { %"class.std::__1::__tree.109" }
%"class.std::__1::__tree.109" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.content::ContentClient" = type { i32 (...)**, %"class.content::ContentBrowserClient"*, %"class.content::ContentGpuClient"*, %"class.content::ContentRendererClient"*, %"class.content::ContentUtilityClient"* }
%"class.content::ContentBrowserClient" = type { i32 (...)** }
%"class.content::ContentGpuClient" = type opaque
%"class.content::ContentRendererClient" = type opaque
%"class.content::ContentUtilityClient" = type opaque
%"class.content::BrowserContext" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.42 }
%struct.anon.42 = type { %"struct.std::__1::__padding.43", i8 }
%"struct.std::__1::__padding.43" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.17", [4 x i8] }>
%"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry" = type <{ %"class.mojo::ReceiverSetState::ReceiverState", %"class.mojo::Receiver", i8, [7 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.312", %"class.mojo::internal::Buffer", %"class.std::__1::vector.313", %"class.std::__1::vector.321", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.312" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"class.mojo::ScopedHandleBase.315"*, %"class.mojo::ScopedHandleBase.315"*, %"class.std::__1::__compressed_pair.316" }
%"class.mojo::ScopedHandleBase.315" = type { %"class.mojo::Handle" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.mojo::ScopedHandleBase.315"* }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::MessageReceiverWithStatus" = type { %"class.mojo::MessageReceiver" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNK4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE8containsIS8_EEbRKT_ = comdat any

$_ZN4mojo8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS3_EEEC2EPS3_NS_15PendingReceiverIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD2Ev = comdat any

$_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD0Ev = comdat any

$_ZNK4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry10GetContextEv = comdat any

$_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry20InstallDispatchHooksENSt3__110unique_ptrINS_13MessageFilterENSA_14default_deleteISC_EEEEN4base17RepeatingCallbackIFvjRKNSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEEE = comdat any

$_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry15FlushForTestingEv = comdat any

$_ZN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEED0Ev = comdat any

$_ZN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEE6AcceptEPNS2_7MessageE = comdat any

$_ZN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEE19AcceptWithResponderEPNS2_7MessageENSt3__110unique_ptrINS2_25MessageReceiverWithStatusENS9_14default_deleteISB_EEEE = comdat any

$_ZN4mojo15MessageReceiverD2Ev = comdat any

$_ZN4mojo8internal12BindingStateIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENSA_9allocatorISH_EEEEEEERKNSB_INS3_13WebPluginInfoENSI_ISN_EEEEEJNS_7WeakPtrIS4_EES6_SM_EEEFvSR_EE7RunOnceEPNS0_13BindStateBaseESR_ = comdat any

$_ZN4base8internal13FunctorTraitsIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS9_9allocatorISG_EEEEEEERKNSA_INS2_13WebPluginInfoENSH_ISM_EEEEEvE6InvokeISS_NS_7WeakPtrIS3_EEJS5_SL_SQ_EEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS9_9allocatorISG_EEEEEEERKNSA_INS2_13WebPluginInfoENSH_ISM_EEEEEJNS_7WeakPtrIS3_EES5_SL_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENSA_9allocatorISH_EEEEEEERKNSB_INS3_13WebPluginInfoENSI_ISN_EEEEEJNS_7WeakPtrIS4_EES6_SM_EEEEEbPKNS0_13BindStateBaseENSX_21CancellationQueryModeE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom14PluginMimeTypeEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZTVN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryE = comdat any

$_ZTVN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEEE = comdat any

@_ZTVN7content18PluginRegistryImplE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::PluginRegistryImpl"*)* @_ZN7content18PluginRegistryImplD2Ev to i8*), i8* bitcast (void (%"class.content::PluginRegistryImpl"*)* @_ZN7content18PluginRegistryImplD0Ev to i8*), i8* bitcast (i1 (%"class.blink::mojom::PluginRegistry"*, i1, %"class.url::Origin"*, %"class.std::__1::vector.84"*)* @_ZN5blink5mojom14PluginRegistry10GetPluginsEbRKN3url6OriginEPNSt3__16vectorIN4mojo9StructPtrINS0_10PluginInfoEEENS6_9allocatorISB_EEEE to i8*), i8* bitcast (void (%"class.content::PluginRegistryImpl"*, i1, %"class.url::Origin"*, %"class.base::OnceCallback"*)* @_ZN7content18PluginRegistryImpl10GetPluginsEbRKN3url6OriginEN4base12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS7_9allocatorISE_EEEEEEE to i8*)] }, align 8
@_ZTVN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"*)* @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD2Ev to i8*), i8* bitcast (void (%"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"*)* @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD0Ev to i8*), i8* bitcast (i8* (%"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"*)* @_ZNK4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry10GetContextEv to i8*), i8* bitcast (void (%"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"*, %"class.mojo::MessageFilter"*, %"class.base::RepeatingCallback.1"*)* @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry20InstallDispatchHooksENSt3__110unique_ptrINS_13MessageFilterENSA_14default_deleteISC_EEEEN4base17RepeatingCallbackIFvjRKNSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEEE to i8*), i8* bitcast (void (%"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"*)* @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry15FlushForTestingEv to i8*)] }, comdat, align 8
@_ZTVN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiverD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::PluginRegistryStub"*)* @_ZN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEED0Ev to i8*), i8* bitcast (i1 (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv to i8*), i8* bitcast (i1 (%"class.blink::mojom::PluginRegistryStub"*, %"class.mojo::Message"*)* @_ZN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEE6AcceptEPNS2_7MessageE to i8*), i8* bitcast (i1 (%"class.blink::mojom::PluginRegistryStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*)* @_ZN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEE19AcceptWithResponderEPNS2_7MessageENSt3__110unique_ptrINS2_25MessageReceiverWithStatusENS9_14default_deleteISB_EEEE to i8*)] }, comdat, align 8
@_ZN5blink5mojom14PluginRegistry5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom30PluginRegistryRequestValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN7content18PluginRegistryImplC1Ei = hidden unnamed_addr alias void (%"class.content::PluginRegistryImpl"*, i32), void (%"class.content::PluginRegistryImpl"*, i32)* @_ZN7content18PluginRegistryImplC2Ei
@_ZN7content18PluginRegistryImplD1Ev = hidden unnamed_addr alias void (%"class.content::PluginRegistryImpl"*), void (%"class.content::PluginRegistryImpl"*)* @_ZN7content18PluginRegistryImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content18PluginRegistryImplC2Ei(%"class.content::PluginRegistryImpl"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content18PluginRegistryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 1
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4mojo16ReceiverSetStateC1Ev(%"class.mojo::ReceiverSetState"* %5) #10
  %6 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 4, i32 0
  %8 = ptrtoint %"class.content::PluginRegistryImpl"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %7, i64 %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content18PluginRegistryImplD2Ev(%"class.content::PluginRegistryImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content18PluginRegistryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4mojo16ReceiverSetStateD1Ev(%"class.mojo::ReceiverSetState"* %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content18PluginRegistryImplD0Ev(%"class.content::PluginRegistryImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7content18PluginRegistryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4mojo16ReceiverSetStateD1Ev(%"class.mojo::ReceiverSetState"* %4) #10
  %5 = bitcast %"class.content::PluginRegistryImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content18PluginRegistryImpl4BindEN4mojo15PendingReceiverIN5blink5mojom14PluginRegistryEEE(%"class.content::PluginRegistryImpl"*, %"class.mojo::PendingReceiver"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingReceiver", align 8
  %4 = alloca %"class.mojo::PendingReceiver", align 8
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = alloca %"class.mojo::PendingReceiver", align 8
  %7 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %8, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %9) #10
  %10 = bitcast %"class.mojo::PendingReceiver"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %11, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %8) #10
  %12 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 2, i32 0
  %13 = bitcast %"class.mojo::PendingReceiver"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = call i8* @_Znwm(i64 64) #11
  %15 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %15, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %11) #10
  %16 = bitcast %"class.mojo::PendingReceiver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %14, i64 8
  %19 = bitcast i8* %18 to %"class.mojo::Receiver"*
  %20 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %20, %"struct.mojo::internal::PendingReceiverState"* nonnull dereferenceable(24) %15) #10
  call void @_ZN4mojo8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS3_EEEC2EPS3_NS_15PendingReceiverIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Receiver"* %19, %"class.blink::mojom::PluginRegistry"* %7, %"class.mojo::PendingReceiver"* nonnull %3, %"class.base::SequencedTaskRunner"* null) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %20) #10
  %21 = getelementptr inbounds i8, i8* %14, i64 56
  store i8 0, i8* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  %22 = bitcast i8* %14 to %"class.mojo::ReceiverSetState::ReceiverState"*
  %23 = call i64 @_ZN4mojo16ReceiverSetState3AddENSt3__110unique_ptrINS0_13ReceiverStateENS1_14default_deleteIS3_EEEE(%"class.mojo::ReceiverSetState"* %12, %"class.mojo::ReceiverSetState::ReceiverState"* nonnull %22) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10)
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content18PluginRegistryImpl10GetPluginsEbRKN3url6OriginEN4base12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS7_9allocatorISE_EEEEEEE(%"class.content::PluginRegistryImpl"*, i1 zeroext, %"class.url::Origin"* dereferenceable(80), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::internal::WeakReference", align 8
  %6 = alloca %"class.base::OnceCallback.75", align 8
  %7 = alloca %"class.base::WeakPtr", align 8
  %8 = tail call %"class.content::PluginServiceImpl"* @_ZN7content17PluginServiceImpl11GetInstanceEv() #10
  br i1 %1, label %9, label %20

9:                                                ; preds = %4
  %10 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  %11 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = sub nsw i64 %10, %12
  %14 = icmp sgt i64 %13, 2999999
  br i1 %14, label %15, label %20

15:                                               ; preds = %9
  %16 = bitcast %"class.content::PluginServiceImpl"* %8 to void (%"class.content::PluginServiceImpl"*)***
  %17 = load void (%"class.content::PluginServiceImpl"*)**, void (%"class.content::PluginServiceImpl"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.content::PluginServiceImpl"*)*, void (%"class.content::PluginServiceImpl"*)** %17, i64 12
  %19 = load void (%"class.content::PluginServiceImpl"*)*, void (%"class.content::PluginServiceImpl"*)** %18, align 8
  tail call void %19(%"class.content::PluginServiceImpl"* %8) #10
  store i64 %10, i64* %11, align 8
  br label %20

20:                                               ; preds = %9, %15, %4
  %21 = bitcast %"class.base::WeakPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #10
  %22 = bitcast %"class.base::internal::WeakReference"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10, !noalias !2
  %23 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 4, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %5, %"class.base::internal::WeakReferenceOwner"* %23) #10, !noalias !2
  %24 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 4, i32 0, i32 1
  %25 = load i64, i64* %24, align 8, !noalias !2
  %26 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %26, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %5, i64 %25) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10, !noalias !2
  %27 = call i8* @_Znwm(i64 152) #11, !noalias !5
  %28 = bitcast i8* %27 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %28, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.77"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENSA_9allocatorISH_EEEEEEERKNSB_INS3_13WebPluginInfoENSI_ISN_EEEEEJNS_7WeakPtrIS4_EES6_SM_EEEFvSR_EE7RunOnceEPNS0_13BindStateBaseESR_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS9_9allocatorISG_EEEEEEERKNSA_INS2_13WebPluginInfoENSH_ISM_EEEEEJNS_7WeakPtrIS3_EES5_SL_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENSA_9allocatorISH_EEEEEEERKNSB_INS3_13WebPluginInfoENSI_ISN_EEEEEJNS_7WeakPtrIS4_EES6_SM_EEEEEbPKNS0_13BindStateBaseENSX_21CancellationQueryModeE) #10, !noalias !5
  %29 = getelementptr inbounds i8, i8* %27, i64 32
  %30 = bitcast i8* %29 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.content::PluginRegistryImpl"*, %"class.url::Origin"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.77"*)* @_ZN7content18PluginRegistryImpl18GetPluginsCompleteERKN3url6OriginEN4base12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS7_9allocatorISE_EEEEEEERKNS8_INS_13WebPluginInfoENSF_ISK_EEEE to i64), i64 0>, <2 x i64>* %30, align 8, !noalias !5
  %31 = getelementptr inbounds i8, i8* %27, i64 48
  %32 = bitcast i8* %31 to %"class.base::internal::WeakReference"*
  %33 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %32, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %33) #10, !noalias !5
  %34 = getelementptr inbounds i8, i8* %27, i64 56
  %35 = bitcast i8* %34 to i64*
  %36 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8, !noalias !5
  store i64 %37, i64* %35, align 8, !noalias !5
  %38 = getelementptr inbounds i8, i8* %27, i64 64
  %39 = bitcast i8* %38 to %"class.url::Origin"*
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %39, %"class.url::Origin"* dereferenceable(80) %2) #10, !noalias !5
  %40 = getelementptr inbounds i8, i8* %27, i64 144
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !5
  %44 = bitcast i8* %40 to i64*
  store i64 %43, i64* %44, align 8, !noalias !5
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8, !noalias !5
  %45 = bitcast %"class.base::OnceCallback.75"* %6 to i8**
  store i8* %27, i8** %45, align 8, !alias.scope !5
  %46 = bitcast %"class.content::PluginServiceImpl"* %8 to void (%"class.content::PluginServiceImpl"*, %"class.base::OnceCallback.75"*)***
  %47 = load void (%"class.content::PluginServiceImpl"*, %"class.base::OnceCallback.75"*)**, void (%"class.content::PluginServiceImpl"*, %"class.base::OnceCallback.75"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.content::PluginServiceImpl"*, %"class.base::OnceCallback.75"*)*, void (%"class.content::PluginServiceImpl"*, %"class.base::OnceCallback.75"*)** %47, i64 7
  %49 = load void (%"class.content::PluginServiceImpl"*, %"class.base::OnceCallback.75"*)*, void (%"class.content::PluginServiceImpl"*, %"class.base::OnceCallback.75"*)** %48, align 8
  call void %49(%"class.content::PluginServiceImpl"* %8, %"class.base::OnceCallback.75"* nonnull %6) #10
  %50 = getelementptr inbounds %"class.base::OnceCallback.75", %"class.base::OnceCallback.75"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #10
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.content::PluginServiceImpl"* @_ZN7content17PluginServiceImpl11GetInstanceEv() local_unnamed_addr #4

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content18PluginRegistryImpl18GetPluginsCompleteERKN3url6OriginEN4base12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS7_9allocatorISE_EEEEEEERKNS8_INS_13WebPluginInfoENSF_ISK_EEEE(%"class.content::PluginRegistryImpl"* nocapture readonly, %"class.url::Origin"* dereferenceable(80), %"class.base::OnceCallback"* nocapture, %"class.std::__1::vector.77"* nocapture readonly dereferenceable(24)) #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.std::__1::vector.84", align 8
  %8 = alloca %"class.std::__1::vector.84", align 8
  %9 = alloca %"class.base::internal::flat_tree", align 8
  %10 = alloca %"struct.content::WebPluginInfo", align 8
  %11 = alloca %class.GURL, align 8
  %12 = alloca %"class.mojo::StructPtr", align 8
  %13 = alloca %"class.base::FilePath", align 8
  %14 = alloca %"class.mojo::StructPtr.90", align 8
  %15 = alloca %"class.std::__1::vector.84", align 8
  %16 = tail call %"class.content::PluginServiceImpl"* @_ZN7content17PluginServiceImpl11GetInstanceEv() #10
  %17 = bitcast %"class.content::PluginServiceImpl"* %16 to %"class.content::PluginServiceFilter"* (%"class.content::PluginServiceImpl"*)***
  %18 = load %"class.content::PluginServiceFilter"* (%"class.content::PluginServiceImpl"*)**, %"class.content::PluginServiceFilter"* (%"class.content::PluginServiceImpl"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.content::PluginServiceFilter"* (%"class.content::PluginServiceImpl"*)*, %"class.content::PluginServiceFilter"* (%"class.content::PluginServiceImpl"*)** %18, i64 10
  %20 = load %"class.content::PluginServiceFilter"* (%"class.content::PluginServiceImpl"*)*, %"class.content::PluginServiceFilter"* (%"class.content::PluginServiceImpl"*)** %19, align 8
  %21 = tail call %"class.content::PluginServiceFilter"* %20(%"class.content::PluginServiceImpl"* %16) #10
  %22 = bitcast %"class.std::__1::vector.84"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %7, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %7, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #10
  %26 = getelementptr inbounds %"class.content::PluginRegistryImpl", %"class.content::PluginRegistryImpl"* %0, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = tail call %"class.content::RenderProcessHost"* @_ZN7content17RenderProcessHost6FromIDEi(i32 %27) #10
  %29 = icmp eq %"class.content::RenderProcessHost"* %28, null
  br i1 %29, label %30, label %65

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %8, i64 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::vector.84"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #10
  %33 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %39 = inttoptr i64 %36 to %"class.base::internal::BindStateBase"*
  %40 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %39, i64 0, i32 1
  %41 = bitcast void ()** %40 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.84"*)**
  %42 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.84"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.84"*)** %41, align 8
  call void %42(%"class.base::internal::BindStateBase"* %39, %"class.std::__1::vector.84"* nonnull dereferenceable(24) %8) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %43 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %8, i64 0, i32 0, i32 0
  %44 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %43, align 8
  %45 = icmp eq %"class.mojo::StructPtr"* %44, null
  br i1 %45, label %306, label %46

46:                                               ; preds = %30
  %47 = bitcast %"class.mojo::StructPtr"* %44 to i8*
  %48 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %31, align 8
  %49 = icmp eq %"class.mojo::StructPtr"* %48, %44
  br i1 %49, label %63, label %50

50:                                               ; preds = %46, %58
  %51 = phi %"class.mojo::StructPtr"* [ %52, %58 ], [ %48, %46 ]
  %52 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %51, i64 -1
  %53 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::mojom::PluginInfo"*, %"class.blink::mojom::PluginInfo"** %53, align 8
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %53, align 8
  %55 = icmp eq %"class.blink::mojom::PluginInfo"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %50
  call void @_ZN5blink5mojom10PluginInfoD1Ev(%"class.blink::mojom::PluginInfo"* nonnull %54) #10
  %57 = bitcast %"class.blink::mojom::PluginInfo"* %54 to i8*
  call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %56, %50
  %59 = icmp eq %"class.mojo::StructPtr"* %52, %44
  br i1 %59, label %60, label %50

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::vector.84"* %8 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %46
  %64 = phi i8* [ %62, %60 ], [ %47, %46 ]
  store %"class.mojo::StructPtr"* %44, %"class.mojo::StructPtr"** %31, align 8
  call void @_ZdlPv(i8* %64) #11
  br label %306

65:                                               ; preds = %4
  %66 = bitcast %"class.base::internal::flat_tree"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #10
  %67 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %9, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %9, i64 0, i32 0, i32 0, i32 1
  %69 = bitcast %"class.base::internal::flat_tree"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 24, i1 false)
  %70 = tail call %"class.content::ContentClient"* @_ZN7content16GetContentClientEv() #10
  %71 = getelementptr inbounds %"class.content::ContentClient", %"class.content::ContentClient"* %70, i64 0, i32 1
  %72 = load %"class.content::ContentBrowserClient"*, %"class.content::ContentBrowserClient"** %71, align 8
  %73 = bitcast %"class.content::RenderProcessHost"* %28 to %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)***
  %74 = load %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)**, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)** %74, i64 27
  %76 = load %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)*, %"class.content::BrowserContext"* (%"class.content::RenderProcessHost"*)** %75, align 8
  %77 = tail call %"class.content::BrowserContext"* %76(%"class.content::RenderProcessHost"* nonnull %28) #10
  %78 = bitcast %"class.content::ContentBrowserClient"* %72 to void (%"class.base::internal::flat_tree"*, %"class.content::ContentBrowserClient"*, %"class.content::BrowserContext"*)***
  %79 = load void (%"class.base::internal::flat_tree"*, %"class.content::ContentBrowserClient"*, %"class.content::BrowserContext"*)**, void (%"class.base::internal::flat_tree"*, %"class.content::ContentBrowserClient"*, %"class.content::BrowserContext"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.base::internal::flat_tree"*, %"class.content::ContentBrowserClient"*, %"class.content::BrowserContext"*)*, void (%"class.base::internal::flat_tree"*, %"class.content::ContentBrowserClient"*, %"class.content::BrowserContext"*)** %79, i64 186
  %81 = load void (%"class.base::internal::flat_tree"*, %"class.content::ContentBrowserClient"*, %"class.content::BrowserContext"*)*, void (%"class.base::internal::flat_tree"*, %"class.content::ContentBrowserClient"*, %"class.content::BrowserContext"*)** %80, align 8
  call void %81(%"class.base::internal::flat_tree"* nonnull sret %9, %"class.content::ContentBrowserClient"* %72, %"class.content::BrowserContext"* %77) #10
  %82 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %3, i64 0, i32 0, i32 0
  %83 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %3, i64 0, i32 0, i32 1
  %85 = load %"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"** %84, align 8
  %86 = icmp eq %"struct.content::WebPluginInfo"* %83, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %65
  %88 = bitcast %"class.mojo::StructPtr"** %24 to i64*
  br label %108

89:                                               ; preds = %65
  %90 = bitcast %"struct.content::WebPluginInfo"* %10 to i8*
  %91 = icmp eq %"class.content::PluginServiceFilter"* %21, null
  %92 = bitcast %class.GURL* %11 to i8*
  %93 = bitcast %"class.content::PluginServiceFilter"* %21 to i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)***
  %94 = bitcast %"class.mojo::StructPtr"* %12 to i8*
  %95 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.mojo::StructPtr"* %12 to i64*
  %97 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %10, i64 0, i32 0
  %98 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %10, i64 0, i32 3
  %99 = bitcast %"class.base::FilePath"* %13 to i8*
  %100 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %10, i64 0, i32 1
  %101 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %10, i64 0, i32 7
  %102 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %10, i64 0, i32 4, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %10, i64 0, i32 4, i32 0, i32 1
  %104 = bitcast %"class.mojo::StructPtr.90"* %14 to i8*
  %105 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.mojo::StructPtr.90"* %14 to i64*
  %107 = bitcast %"class.mojo::StructPtr"** %24 to i64*
  br label %177

108:                                              ; preds = %303, %87
  %109 = phi i64* [ %88, %87 ], [ %107, %303 ]
  %110 = bitcast %"class.std::__1::vector.84"* %7 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.std::__1::vector.84"* %15 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load i64, i64* %109, align 8
  %114 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %15, i64 0, i32 0, i32 1
  %115 = bitcast %"class.mojo::StructPtr"** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = bitcast %"class.mojo::StructPtr"** %25 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %119 = bitcast %"class.mojo::StructPtr"** %118 to i64*
  store i64 %117, i64* %119, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #10
  %120 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #10
  %121 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %123, i64* %124, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %121, align 8
  %125 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %126 = inttoptr i64 %123 to %"class.base::internal::BindStateBase"*
  %127 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %126, i64 0, i32 1
  %128 = bitcast void ()** %127 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.84"*)**
  %129 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.84"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.84"*)** %128, align 8
  call void %129(%"class.base::internal::BindStateBase"* %126, %"class.std::__1::vector.84"* nonnull dereferenceable(24) %15) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %125) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #10
  %130 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %15, i64 0, i32 0, i32 0
  %131 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %130, align 8
  %132 = icmp eq %"class.mojo::StructPtr"* %131, null
  br i1 %132, label %152, label %133

133:                                              ; preds = %108
  %134 = bitcast %"class.mojo::StructPtr"* %131 to i8*
  %135 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %114, align 8
  %136 = icmp eq %"class.mojo::StructPtr"* %135, %131
  br i1 %136, label %150, label %137

137:                                              ; preds = %133, %145
  %138 = phi %"class.mojo::StructPtr"* [ %139, %145 ], [ %135, %133 ]
  %139 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %138, i64 -1
  %140 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %139, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.blink::mojom::PluginInfo"*, %"class.blink::mojom::PluginInfo"** %140, align 8
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %140, align 8
  %142 = icmp eq %"class.blink::mojom::PluginInfo"* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %137
  call void @_ZN5blink5mojom10PluginInfoD1Ev(%"class.blink::mojom::PluginInfo"* nonnull %141) #10
  %144 = bitcast %"class.blink::mojom::PluginInfo"* %141 to i8*
  call void @_ZdlPv(i8* %144) #11
  br label %145

145:                                              ; preds = %143, %137
  %146 = icmp eq %"class.mojo::StructPtr"* %139, %131
  br i1 %146, label %147, label %137

147:                                              ; preds = %145
  %148 = bitcast %"class.std::__1::vector.84"* %15 to i8**
  %149 = load i8*, i8** %148, align 8
  br label %150

150:                                              ; preds = %147, %133
  %151 = phi i8* [ %149, %147 ], [ %134, %133 ]
  store %"class.mojo::StructPtr"* %131, %"class.mojo::StructPtr"** %114, align 8
  call void @_ZdlPv(i8* %151) #11
  br label %152

152:                                              ; preds = %108, %150
  %153 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %67, align 8
  %154 = icmp eq %"class.std::__1::basic_string"* %153, null
  br i1 %154, label %176, label %155

155:                                              ; preds = %152
  %156 = bitcast %"class.std::__1::basic_string"* %153 to i8*
  %157 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %68, align 8
  %158 = icmp eq %"class.std::__1::basic_string"* %157, %153
  br i1 %158, label %174, label %159

159:                                              ; preds = %155, %169
  %160 = phi %"class.std::__1::basic_string"* [ %161, %169 ], [ %157, %155 ]
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 -1
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %168) #11
  br label %169

169:                                              ; preds = %166, %159
  %170 = icmp eq %"class.std::__1::basic_string"* %161, %153
  br i1 %170, label %171, label %159

171:                                              ; preds = %169
  %172 = bitcast %"class.base::internal::flat_tree"* %9 to i8**
  %173 = load i8*, i8** %172, align 8
  br label %174

174:                                              ; preds = %171, %155
  %175 = phi i8* [ %173, %171 ], [ %156, %155 ]
  store %"class.std::__1::basic_string"* %153, %"class.std::__1::basic_string"** %68, align 8
  call void @_ZdlPv(i8* %175) #11
  br label %176

176:                                              ; preds = %152, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #10
  br label %306

177:                                              ; preds = %89, %303
  %178 = phi %"struct.content::WebPluginInfo"* [ %83, %89 ], [ %304, %303 ]
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %90) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 136, i1 false)
  call void @_ZN7content13WebPluginInfoC1ERKS0_(%"struct.content::WebPluginInfo"* nonnull %10, %"struct.content::WebPluginInfo"* dereferenceable(136) %178) #10
  br i1 %91, label %185, label %179

179:                                              ; preds = %177
  %180 = load i32, i32* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %92) #10
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %11, %"class.url::Origin"* %1) #10
  %181 = load i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)**, i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)*** %93, align 8
  %182 = getelementptr inbounds i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)*, i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)** %181, i64 2
  %183 = load i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)*, i1 (%"class.content::PluginServiceFilter"*, i32, i32, %class.GURL*, %"class.url::Origin"*, %"struct.content::WebPluginInfo"*)** %182, align 8
  %184 = call zeroext i1 %183(%"class.content::PluginServiceFilter"* nonnull %21, i32 %180, i32 -2, %class.GURL* nonnull dereferenceable(120) %11, %"class.url::Origin"* dereferenceable(80) %1, %"struct.content::WebPluginInfo"* nonnull %10) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %92) #10
  br i1 %184, label %185, label %303

185:                                              ; preds = %177, %179
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #10
  %186 = call i8* @_Znwm(i64 112) #11, !noalias !10
  %187 = bitcast i8* %186 to %"class.blink::mojom::PluginInfo"*
  call void @_ZN5blink5mojom10PluginInfoC1Ev(%"class.blink::mojom::PluginInfo"* nonnull %187) #10, !noalias !10
  %188 = ptrtoint i8* %186 to i64
  store i64 %188, i64* %96, align 8, !alias.scope !10
  %189 = bitcast i8* %186 to %"class.std::__1::basic_string.38"*
  %190 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.38"* nonnull %189, %"class.std::__1::basic_string.38"* nonnull dereferenceable(24) %97)
  %191 = load %"class.blink::mojom::PluginInfo"*, %"class.blink::mojom::PluginInfo"** %95, align 8
  %192 = getelementptr inbounds %"class.blink::mojom::PluginInfo", %"class.blink::mojom::PluginInfo"* %191, i64 0, i32 1
  %193 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.38"* %192, %"class.std::__1::basic_string.38"* dereferenceable(24) %98)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #10
  call void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* nonnull sret %13, %"class.base::FilePath"* %100) #10
  %194 = load %"class.blink::mojom::PluginInfo"*, %"class.blink::mojom::PluginInfo"** %95, align 8
  %195 = getelementptr inbounds %"class.blink::mojom::PluginInfo", %"class.blink::mojom::PluginInfo"* %194, i64 0, i32 2
  %196 = call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"* %195, %"class.base::FilePath"* nonnull dereferenceable(24) %13) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #10
  %197 = load i32, i32* %101, align 8
  %198 = load %"class.blink::mojom::PluginInfo"*, %"class.blink::mojom::PluginInfo"** %95, align 8
  %199 = getelementptr inbounds %"class.blink::mojom::PluginInfo", %"class.blink::mojom::PluginInfo"* %198, i64 0, i32 3
  store i32 %197, i32* %199, align 8
  %200 = getelementptr inbounds %"class.blink::mojom::PluginInfo", %"class.blink::mojom::PluginInfo"* %198, i64 0, i32 6
  store i8 0, i8* %200, align 8
  %201 = load %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"** %102, align 8
  %202 = load %"struct.content::WebPluginMimeType"*, %"struct.content::WebPluginMimeType"** %103, align 8
  %203 = icmp eq %"struct.content::WebPluginMimeType"* %201, %202
  br i1 %203, label %204, label %220

204:                                              ; preds = %300, %185
  %205 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %24, align 8
  %206 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %25, align 8
  %207 = icmp ult %"class.mojo::StructPtr"* %205, %206
  br i1 %207, label %208, label %214

208:                                              ; preds = %204
  %209 = bitcast %"class.mojo::StructPtr"* %205 to i64*
  %210 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %205, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %210, align 8
  %211 = load i64, i64* %96, align 8
  store i64 %211, i64* %209, align 8
  %212 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %205, i64 1
  %213 = ptrtoint %"class.mojo::StructPtr"* %212 to i64
  store i64 %213, i64* %107, align 8
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %95, align 8
  br label %219

214:                                              ; preds = %204
  call void @_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.84"* nonnull %7, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %12) #10
  %215 = load %"class.blink::mojom::PluginInfo"*, %"class.blink::mojom::PluginInfo"** %95, align 8
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %95, align 8
  %216 = icmp eq %"class.blink::mojom::PluginInfo"* %215, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %214
  %218 = bitcast %"class.blink::mojom::PluginInfo"* %215 to i8*
  call void @_ZN5blink5mojom10PluginInfoD1Ev(%"class.blink::mojom::PluginInfo"* nonnull %215) #10
  call void @_ZdlPv(i8* %218) #11
  br label %219

219:                                              ; preds = %208, %214, %217
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  br label %303

220:                                              ; preds = %185, %300
  %221 = phi %"struct.content::WebPluginMimeType"* [ %301, %300 ], [ %201, %185 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #10
  %222 = call i8* @_Znwm(i64 72) #11, !noalias !13
  %223 = bitcast i8* %222 to %"class.blink::mojom::PluginMimeType"*
  call void @_ZN5blink5mojom14PluginMimeTypeC1Ev(%"class.blink::mojom::PluginMimeType"* nonnull %223) #10, !noalias !13
  %224 = ptrtoint i8* %222 to i64
  store i64 %224, i64* %106, align 8, !alias.scope !13
  %225 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %221, i64 0, i32 0
  %226 = bitcast i8* %222 to %"class.std::__1::basic_string"*
  %227 = icmp eq %"class.std::__1::basic_string"* %225, %226
  br i1 %227, label %255, label %228

228:                                              ; preds = %220
  %229 = getelementptr inbounds i8, i8* %222, i64 23
  %230 = load i8, i8* %229, align 1
  %231 = icmp slt i8 %230, 0
  %232 = bitcast %"struct.content::WebPluginMimeType"* %221 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %234 = load i8, i8* %233, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %231, label %245, label %236

236:                                              ; preds = %228
  br i1 %235, label %239, label %237

237:                                              ; preds = %236
  %238 = bitcast %"struct.content::WebPluginMimeType"* %221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %222, i8* align 8 %238, i64 24, i1 false) #10
  br label %255

239:                                              ; preds = %236
  %240 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  %242 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %243 = load i64, i64* %242, align 8
  %244 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %226, i8* %241, i64 %243) #10
  br label %255

245:                                              ; preds = %228
  %246 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"struct.content::WebPluginMimeType"* %221 to i8*
  %251 = zext i8 %234 to i64
  %252 = select i1 %235, i8* %247, i8* %250
  %253 = select i1 %235, i64 %249, i64 %251
  %254 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %226, i8* %252, i64 %253) #10
  br label %255

255:                                              ; preds = %220, %237, %239, %245
  %256 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %221, i64 0, i32 2
  %257 = load %"class.blink::mojom::PluginMimeType"*, %"class.blink::mojom::PluginMimeType"** %105, align 8
  %258 = getelementptr inbounds %"class.blink::mojom::PluginMimeType", %"class.blink::mojom::PluginMimeType"* %257, i64 0, i32 1
  %259 = call dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.38"* %258, %"class.std::__1::basic_string.38"* dereferenceable(24) %256)
  %260 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %221, i64 0, i32 1
  %261 = load %"class.blink::mojom::PluginMimeType"*, %"class.blink::mojom::PluginMimeType"** %105, align 8
  %262 = getelementptr inbounds %"class.blink::mojom::PluginMimeType", %"class.blink::mojom::PluginMimeType"* %261, i64 0, i32 2
  %263 = icmp eq %"class.std::__1::vector.31"* %262, %260
  br i1 %263, label %269, label %264

264:                                              ; preds = %255
  %265 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %260, i64 0, i32 0, i32 0
  %266 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %265, align 8
  %267 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %221, i64 0, i32 1, i32 0, i32 1
  %268 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %267, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.31"* %262, %"class.std::__1::basic_string"* %266, %"class.std::__1::basic_string"* %268) #10
  br label %269

269:                                              ; preds = %255, %264
  %270 = load %"class.blink::mojom::PluginInfo"*, %"class.blink::mojom::PluginInfo"** %95, align 8
  %271 = getelementptr inbounds %"class.blink::mojom::PluginInfo", %"class.blink::mojom::PluginInfo"* %270, i64 0, i32 5, i32 0, i32 1
  %272 = load %"class.mojo::StructPtr.90"*, %"class.mojo::StructPtr.90"** %271, align 8
  %273 = getelementptr inbounds %"class.blink::mojom::PluginInfo", %"class.blink::mojom::PluginInfo"* %270, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %274 = load %"class.mojo::StructPtr.90"*, %"class.mojo::StructPtr.90"** %273, align 8
  %275 = icmp ult %"class.mojo::StructPtr.90"* %272, %274
  br i1 %275, label %276, label %283

276:                                              ; preds = %269
  %277 = bitcast %"class.mojo::StructPtr.90"* %272 to i64*
  %278 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %272, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginMimeType"* null, %"class.blink::mojom::PluginMimeType"** %278, align 8
  %279 = load i64, i64* %106, align 8
  store i64 %279, i64* %277, align 8
  store i64 0, i64* %106, align 8
  %280 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %272, i64 1
  %281 = ptrtoint %"class.mojo::StructPtr.90"* %280 to i64
  %282 = bitcast %"class.mojo::StructPtr.90"** %271 to i64*
  store i64 %281, i64* %282, align 8
  br label %285

283:                                              ; preds = %269
  %284 = getelementptr inbounds %"class.blink::mojom::PluginInfo", %"class.blink::mojom::PluginInfo"* %270, i64 0, i32 5
  call void @_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom14PluginMimeTypeEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.88"* %284, %"class.mojo::StructPtr.90"* nonnull dereferenceable(8) %14) #10
  br label %285

285:                                              ; preds = %276, %283
  %286 = load %"class.blink::mojom::PluginInfo"*, %"class.blink::mojom::PluginInfo"** %95, align 8
  %287 = getelementptr inbounds %"class.blink::mojom::PluginInfo", %"class.blink::mojom::PluginInfo"* %286, i64 0, i32 6
  %288 = load i8, i8* %287, align 8, !range !16
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %290, label %295

290:                                              ; preds = %285
  %291 = call zeroext i1 @_ZNK4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE8containsIS8_EEbRKT_(%"class.base::internal::flat_tree"* nonnull %9, %"class.std::__1::basic_string"* dereferenceable(24) %225) #10
  %292 = load %"class.blink::mojom::PluginInfo"*, %"class.blink::mojom::PluginInfo"** %95, align 8
  %293 = getelementptr inbounds %"class.blink::mojom::PluginInfo", %"class.blink::mojom::PluginInfo"* %292, i64 0, i32 6
  %294 = zext i1 %291 to i8
  store i8 %294, i8* %293, align 8
  br label %295

295:                                              ; preds = %285, %290
  %296 = load %"class.blink::mojom::PluginMimeType"*, %"class.blink::mojom::PluginMimeType"** %105, align 8
  store %"class.blink::mojom::PluginMimeType"* null, %"class.blink::mojom::PluginMimeType"** %105, align 8
  %297 = icmp eq %"class.blink::mojom::PluginMimeType"* %296, null
  br i1 %297, label %300, label %298

298:                                              ; preds = %295
  call void @_ZN5blink5mojom14PluginMimeTypeD1Ev(%"class.blink::mojom::PluginMimeType"* nonnull %296) #10
  %299 = bitcast %"class.blink::mojom::PluginMimeType"* %296 to i8*
  call void @_ZdlPv(i8* %299) #11
  br label %300

300:                                              ; preds = %295, %298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #10
  %301 = getelementptr inbounds %"struct.content::WebPluginMimeType", %"struct.content::WebPluginMimeType"* %221, i64 1
  %302 = icmp eq %"struct.content::WebPluginMimeType"* %301, %202
  br i1 %302, label %204, label %220

303:                                              ; preds = %219, %179
  call void @_ZN7content13WebPluginInfoD1Ev(%"struct.content::WebPluginInfo"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %90) #10
  %304 = getelementptr inbounds %"struct.content::WebPluginInfo", %"struct.content::WebPluginInfo"* %178, i64 1
  %305 = icmp eq %"struct.content::WebPluginInfo"* %304, %85
  br i1 %305, label %108, label %177

306:                                              ; preds = %63, %30, %176
  %307 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %23, align 8
  %308 = icmp eq %"class.mojo::StructPtr"* %307, null
  br i1 %308, label %328, label %309

309:                                              ; preds = %306
  %310 = bitcast %"class.mojo::StructPtr"* %307 to i8*
  %311 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %24, align 8
  %312 = icmp eq %"class.mojo::StructPtr"* %311, %307
  br i1 %312, label %326, label %313

313:                                              ; preds = %309, %321
  %314 = phi %"class.mojo::StructPtr"* [ %315, %321 ], [ %311, %309 ]
  %315 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %314, i64 -1
  %316 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %315, i64 0, i32 0, i32 0, i32 0, i32 0
  %317 = load %"class.blink::mojom::PluginInfo"*, %"class.blink::mojom::PluginInfo"** %316, align 8
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %316, align 8
  %318 = icmp eq %"class.blink::mojom::PluginInfo"* %317, null
  br i1 %318, label %321, label %319

319:                                              ; preds = %313
  call void @_ZN5blink5mojom10PluginInfoD1Ev(%"class.blink::mojom::PluginInfo"* nonnull %317) #10
  %320 = bitcast %"class.blink::mojom::PluginInfo"* %317 to i8*
  call void @_ZdlPv(i8* %320) #11
  br label %321

321:                                              ; preds = %319, %313
  %322 = icmp eq %"class.mojo::StructPtr"* %315, %307
  br i1 %322, label %323, label %313

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::vector.84"* %7 to i8**
  %325 = load i8*, i8** %324, align 8
  br label %326

326:                                              ; preds = %323, %309
  %327 = phi i8* [ %325, %323 ], [ %310, %309 ]
  store %"class.mojo::StructPtr"* %307, %"class.mojo::StructPtr"** %24, align 8
  call void @_ZdlPv(i8* %327) #11
  br label %328

328:                                              ; preds = %306, %326
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

declare %"class.content::RenderProcessHost"* @_ZN7content17RenderProcessHost6FromIDEi(i32) local_unnamed_addr #4

declare %"class.content::ContentClient"* @_ZN7content16GetContentClientEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN7content13WebPluginInfoC1ERKS0_(%"struct.content::WebPluginInfo"*, %"struct.content::WebPluginInfo"* dereferenceable(136)) unnamed_addr #4

declare void @_ZNK3url6Origin6GetURLEv(%class.GURL* sret, %"class.url::Origin"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.38"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.38"*, %"class.std::__1::basic_string.38"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.38"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.38"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.38"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.38"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.38"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.38"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.38"*
  %35 = icmp ugt %"class.std::__1::basic_string.38"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !17
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !17
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !20, !noalias !17
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !20, !noalias !17
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !17
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !17
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !20, !noalias !17
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !20, !noalias !17
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !17
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !17
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !20, !noalias !17
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !20, !noalias !17
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !17
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !17
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !20, !noalias !17
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !20, !noalias !17
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !22

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !17
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !17
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !20, !noalias !17
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !20, !noalias !17
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !24

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !26

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !27

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.38"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #12
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #12
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #11
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !28
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !28
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !31, !noalias !28
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !31, !noalias !28
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !28
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !28
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !31, !noalias !28
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !31, !noalias !28
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !28
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !28
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !31, !noalias !28
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !31, !noalias !28
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !28
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !28
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !31, !noalias !28
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !31, !noalias !28
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !33

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !28
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !28
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !31, !noalias !28
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !31, !noalias !28
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !34

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !35

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !36

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.38"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.38"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !37
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !37
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !40, !noalias !37
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !40, !noalias !37
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !37
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !37
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !40, !noalias !37
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !40, !noalias !37
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !37
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !37
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !40, !noalias !37
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !40, !noalias !37
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !37
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !37
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !40, !noalias !37
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !40, !noalias !37
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !42

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !37
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !37
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !40, !noalias !37
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !40, !noalias !37
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !43

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !44

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !45

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.38"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #10
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.38"* %0
}

declare void @_ZNK4base8FilePath8BaseNameEv(%"class.base::FilePath"* sret, %"class.base::FilePath"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7content13WebPluginInfoD1Ev(%"struct.content::WebPluginInfo"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink5mojom14PluginRegistry10GetPluginsEbRKN3url6OriginEPNSt3__16vectorIN4mojo9StructPtrINS0_10PluginInfoEEENS6_9allocatorISB_EEEE(%"class.blink::mojom::PluginRegistry"*, i1 zeroext, %"class.url::Origin"* dereferenceable(80), %"class.std::__1::vector.84"*) unnamed_addr #4

declare void @_ZN4mojo16ReceiverSetStateC1Ev(%"class.mojo::ReceiverSetState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo16ReceiverSetStateD1Ev(%"class.mojo::ReceiverSetState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE8containsIS8_EEbRKT_(%"class.base::internal::flat_tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %61, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 24
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %25 = select i1 %17, i8* %23, i8* %24
  br label %26

26:                                               ; preds = %57, %12
  %27 = phi %"class.std::__1::basic_string"* [ %4, %12 ], [ %59, %57 ]
  %28 = phi i64 [ %13, %12 ], [ %58, %57 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 %29
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 %29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i64 %36, i64 %37
  %39 = icmp ult i64 %21, %38
  %40 = select i1 %39, i64 %21, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %46 = select i1 %34, i8* %44, i8* %45
  %47 = tail call i32 @memcmp(i8* %46, i8* %25, i64 %40) #10
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %42, %26
  %50 = icmp ult i64 %38, %21
  br i1 %50, label %53, label %57

51:                                               ; preds = %42
  %52 = icmp slt i32 %47, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %51, %49
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1
  %55 = xor i64 %29, -1
  %56 = add i64 %28, %55
  br label %57

57:                                               ; preds = %53, %51, %49
  %58 = phi i64 [ %56, %53 ], [ %29, %51 ], [ %29, %49 ]
  %59 = phi %"class.std::__1::basic_string"* [ %54, %53 ], [ %27, %51 ], [ %27, %49 ]
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %61, label %26

61:                                               ; preds = %57, %2
  %62 = phi %"class.std::__1::basic_string"* [ %4, %2 ], [ %59, %57 ]
  %63 = icmp eq %"class.std::__1::basic_string"* %62, %11
  br i1 %63, label %102, label %64

64:                                               ; preds = %61
  %65 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %67 to i64
  %72 = select i1 %68, i64 %70, i64 %71
  %73 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %75 to i64
  %80 = select i1 %76, i64 %78, i64 %79
  %81 = icmp ult i64 %72, %80
  %82 = select i1 %81, i64 %72, i64 %80
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %64
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %88 = select i1 %76, i8* %86, i8* %87
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %92 = select i1 %68, i8* %90, i8* %91
  %93 = tail call i32 @memcmp(i8* %88, i8* %92, i64 %82) #10
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %84, %64
  %96 = icmp ult i64 %80, %72
  %97 = zext i1 %81 to i32
  %98 = select i1 %96, i32 -1, i32 %97
  br label %99

99:                                               ; preds = %84, %95
  %100 = phi i32 [ %98, %95 ], [ %93, %84 ]
  %101 = icmp sgt i32 %100, -1
  br label %102

102:                                              ; preds = %61, %99
  %103 = phi i1 [ false, %61 ], [ %101, %99 ]
  ret i1 %103
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom14PluginMimeTypeD1Ev(%"class.blink::mojom::PluginMimeType"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom10PluginInfoD1Ev(%"class.blink::mojom::PluginInfo"*) unnamed_addr #1

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare i64 @_ZN4mojo16ReceiverSetState3AddENSt3__110unique_ptrINS0_13ReceiverStateENS1_14default_deleteIS3_EEEE(%"class.mojo::ReceiverSetState"*, %"class.mojo::ReceiverSetState::ReceiverState"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS3_EEEC2EPS3_NS_15PendingReceiverIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Receiver"*, %"class.blink::mojom::PluginRegistry"*, %"class.mojo::PendingReceiver"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.mojo::PendingReceiver", align 8
  %6 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"* %6) #10
  %7 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = ptrtoint %"class.blink::mojom::PluginRegistry"* %1 to i64
  %9 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0, i32 1, i32 1
  %10 = bitcast %"class.blink::mojom::PluginRegistry"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %11, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %12) #10
  %13 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %0, i64 0, i32 0
  call void @_ZN4mojo8internal12BindingStateIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState"* %17, %"struct.mojo::internal::PendingReceiverState"* nonnull %11, %"class.base::SequencedTaskRunner"* %3) #10
  br label %28

18:                                               ; preds = %4
  call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %6) #10
  %19 = icmp eq %"class.base::SequencedTaskRunner"* %3, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %3, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.17", %"class.base::RefCountedThreadSafe.17"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe.17", %"class.base::RefCountedThreadSafe.17"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe.17"* %26 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %27) #10
  br label %28

28:                                               ; preds = %25, %20, %18, %16
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD2Ev(%"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %3) #10
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryD0Ev(%"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %3) #10
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %3) #10
  %4 = bitcast %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry10GetContextEv(%"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"* %0, i64 0, i32 2
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry20InstallDispatchHooksENSt3__110unique_ptrINS_13MessageFilterENSA_14default_deleteISC_EEEEN4base17RepeatingCallbackIFvjRKNSA_12basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEEEE(%"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"*, %"class.mojo::MessageFilter"*, %"class.base::RepeatingCallback.1"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.base::OnceCallback.303", align 8
  %5 = alloca %"class.base::OnceCallback.303", align 8
  %6 = alloca %"class.base::OnceCallback.303", align 8
  %7 = alloca %"class.base::RepeatingCallback.1", align 8
  %8 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase9SetFilterENSt3__110unique_ptrINS_13MessageFilterENS2_14default_deleteIS4_EEEE(%"class.mojo::internal::BindingStateBase"* %8, %"class.mojo::MessageFilter"* %1) #10
  %9 = getelementptr inbounds %"class.base::RepeatingCallback.1", %"class.base::RepeatingCallback.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::RepeatingCallback.1"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::RepeatingCallback.1"* %7 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback.303", %"class.base::OnceCallback.303"* %6, i64 0, i32 0
  %14 = getelementptr inbounds %"class.base::RepeatingCallback.1", %"class.base::RepeatingCallback.1"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %13, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %14) #10
  %15 = bitcast %"class.base::OnceCallback.303"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.base::OnceCallback.303", %"class.base::OnceCallback.303"* %6, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback.303"* %6 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %19 = bitcast %"class.base::OnceCallback.303"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %20, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.303", %"class.base::OnceCallback.303"* %5, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback.303"* %4 to i64*
  store i64 %18, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %24 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %21, i64 0, i32 18, i32 0
  %25 = getelementptr inbounds %"class.base::OnceCallback.303", %"class.base::OnceCallback.303"* %4, i64 0, i32 0
  %26 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %24, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %25) #10
  %27 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %21, i64 0, i32 17, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %27) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %28 = getelementptr inbounds %"class.base::OnceCallback.303", %"class.base::OnceCallback.303"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  %29 = getelementptr inbounds %"class.base::RepeatingCallback.1", %"class.base::RepeatingCallback.1"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15ReceiverSetBaseINS_8ReceiverIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEEEvE13ReceiverEntry15FlushForTestingEv(%"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry", %"class.mojo::ReceiverSetBase<mojo::Receiver<blink::mojom::PluginRegistry, mojo::RawPtrImplRefTraits<blink::mojom::PluginRegistry> >, void>::ReceiverEntry"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase15FlushForTestingEv(%"class.mojo::internal::BindingStateBase"* %2) #10
  ret void
}

declare void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEED0Ev(%"class.blink::mojom::PluginRegistryStub"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::mojom::PluginRegistryStub"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

declare zeroext i1 @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv(%"class.mojo::MessageReceiver"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEE6AcceptEPNS2_7MessageE(%"class.blink::mojom::PluginRegistryStub"*, %"class.mojo::Message"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::PluginRegistryStub", %"class.blink::mojom::PluginRegistryStub"* %0, i64 0, i32 1
  %4 = load %"class.blink::mojom::PluginRegistry"*, %"class.blink::mojom::PluginRegistry"** %3, align 8
  %5 = icmp eq %"class.blink::mojom::PluginRegistry"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink5mojom26PluginRegistryStubDispatch6AcceptEPNS0_14PluginRegistryEPN4mojo7MessageE(%"class.blink::mojom::PluginRegistry"* nonnull %4, %"class.mojo::Message"* %1) #10
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i1 [ %7, %6 ], [ false, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom18PluginRegistryStubIN4mojo19RawPtrImplRefTraitsINS0_14PluginRegistryEEEE19AcceptWithResponderEPNS2_7MessageENSt3__110unique_ptrINS2_25MessageReceiverWithStatusENS9_14default_deleteISB_EEEE(%"class.blink::mojom::PluginRegistryStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::mojom::PluginRegistryStub", %"class.blink::mojom::PluginRegistryStub"* %0, i64 0, i32 1
  %5 = load %"class.blink::mojom::PluginRegistry"*, %"class.blink::mojom::PluginRegistry"** %4, align 8
  %6 = icmp eq %"class.blink::mojom::PluginRegistry"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN5blink5mojom26PluginRegistryStubDispatch19AcceptWithResponderEPNS0_14PluginRegistryEPN4mojo7MessageENSt3__110unique_ptrINS4_25MessageReceiverWithStatusENS7_14default_deleteIS9_EEEE(%"class.blink::mojom::PluginRegistry"* nonnull %5, %"class.mojo::Message"* %1, %"class.mojo::MessageReceiverWithStatus"* %2) #10
  br label %16

9:                                                ; preds = %3
  %10 = icmp eq %"class.mojo::MessageReceiverWithStatus"* %2, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.mojo::MessageReceiverWithStatus"* %2 to void (%"class.mojo::MessageReceiverWithStatus"*)***
  %13 = load void (%"class.mojo::MessageReceiverWithStatus"*)**, void (%"class.mojo::MessageReceiverWithStatus"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %13, i64 1
  %15 = load void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %14, align 8
  tail call void %15(%"class.mojo::MessageReceiverWithStatus"* nonnull %2) #10
  br label %16

16:                                               ; preds = %7, %9, %11
  %17 = phi i1 [ %8, %7 ], [ false, %9 ], [ false, %11 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15MessageReceiverD2Ev(%"class.mojo::MessageReceiver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink5mojom26PluginRegistryStubDispatch6AcceptEPNS0_14PluginRegistryEPN4mojo7MessageE(%"class.blink::mojom::PluginRegistry"*, %"class.mojo::Message"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink5mojom26PluginRegistryStubDispatch19AcceptWithResponderEPNS0_14PluginRegistryEPN4mojo7MessageENSt3__110unique_ptrINS4_25MessageReceiverWithStatusENS7_14default_deleteIS9_EEEE(%"class.blink::mojom::PluginRegistry"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal12BindingStateIN5blink5mojom14PluginRegistryENS_19RawPtrImplRefTraitsIS4_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 0
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = tail call i8* @_Znwm(i64 8) #11
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom30PluginRegistryRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 1, i32 0
  %12 = bitcast i8* %9 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom14PluginRegistry5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %12, i1 zeroext false, i1 zeroext true, %"class.mojo::MessageReceiverWithResponderStatus"* %11, i32 0) #10
  %13 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.17", %"class.base::RefCountedThreadSafe.17"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %25

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.17", %"class.base::RefCountedThreadSafe.17"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe.17"* %18 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %19) #10
  br label %25

20:                                               ; preds = %3
  %21 = tail call i8* @_Znwm(i64 8) #11
  %22 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom30PluginRegistryRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 1, i32 0
  %24 = bitcast i8* %21 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom14PluginRegistry5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %24, i1 zeroext false, i1 zeroext true, %"class.mojo::MessageReceiverWithResponderStatus"* %23, i32 0) #10
  br label %25

25:                                               ; preds = %20, %6, %17
  ret void
}

declare void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*, i8*, %"class.mojo::MessageReceiver"*, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiverWithResponderStatus"*, i32) local_unnamed_addr #4

declare void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

declare void @_ZN4mojo8internal16BindingStateBase9SetFilterENSt3__110unique_ptrINS_13MessageFilterENS2_14default_deleteIS4_EEEE(%"class.mojo::internal::BindingStateBase"*, %"class.mojo::MessageFilter"*) local_unnamed_addr #4

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN4mojo8internal16BindingStateBase15FlushForTestingEv(%"class.mojo::internal::BindingStateBase"*) local_unnamed_addr #4

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENSA_9allocatorISH_EEEEEEERKNSB_INS3_13WebPluginInfoENSI_ISN_EEEEEJNS_7WeakPtrIS4_EES6_SM_EEEFvSR_EE7RunOnceEPNS0_13BindStateBaseESR_(%"class.base::internal::BindStateBase"*, %"class.std::__1::vector.77"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::WeakPtr"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.url::Origin"*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 12
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::OnceCallback"*
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #10
  br i1 %11, label %12, label %23

12:                                               ; preds = %2
  %13 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.content::PluginRegistryImpl"**
  %15 = load %"class.content::PluginRegistryImpl"*, %"class.content::PluginRegistryImpl"** %14, align 8
  %16 = icmp eq %"class.content::PluginRegistryImpl"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %21 = bitcast void ()** %20 to i64*
  %22 = load i64, i64* %21, align 8
  tail call void @_ZN4base8internal13FunctorTraitsIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS9_9allocatorISG_EEEEEEERKNSA_INS2_13WebPluginInfoENSH_ISM_EEEEEvE6InvokeISS_NS_7WeakPtrIS3_EEJS5_SL_SQ_EEEvT_OT0_DpOT1_(i64 %19, i64 %22, %"class.base::WeakPtr"* dereferenceable(16) %5, %"class.url::Origin"* dereferenceable(80) %7, %"class.base::OnceCallback"* dereferenceable(8) %9, %"class.std::__1::vector.77"* dereferenceable(24) %1) #10
  br label %23

23:                                               ; preds = %2, %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS9_9allocatorISG_EEEEEEERKNSA_INS2_13WebPluginInfoENSH_ISM_EEEEEvE6InvokeISS_NS_7WeakPtrIS3_EEJS5_SL_SQ_EEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr"* dereferenceable(16), %"class.url::Origin"* dereferenceable(80), %"class.base::OnceCallback"* dereferenceable(8), %"class.std::__1::vector.77"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #10
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #10
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %14

14:                                               ; preds = %11, %6
  %15 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #10
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %17 = bitcast i64* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = select i1 %15, i8* %18, i8* null
  %20 = getelementptr inbounds i8, i8* %19, i64 %1
  %21 = bitcast i8* %20 to %"class.content::PluginRegistryImpl"*
  %22 = and i64 %0, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %14
  %25 = bitcast i8* %20 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %0, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to void (%"class.content::PluginRegistryImpl"*, %"class.url::Origin"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.77"*)**
  %30 = load void (%"class.content::PluginRegistryImpl"*, %"class.url::Origin"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.77"*)*, void (%"class.content::PluginRegistryImpl"*, %"class.url::Origin"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.77"*)** %29, align 8
  br label %33

31:                                               ; preds = %14
  %32 = inttoptr i64 %0 to void (%"class.content::PluginRegistryImpl"*, %"class.url::Origin"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.77"*)*
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi void (%"class.content::PluginRegistryImpl"*, %"class.url::Origin"*, %"class.base::OnceCallback"*, %"class.std::__1::vector.77"*)* [ %30, %24 ], [ %32, %31 ]
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %37, i64* %38, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8
  call void %34(%"class.content::PluginRegistryImpl"* %21, %"class.url::Origin"* dereferenceable(80) %3, %"class.base::OnceCallback"* nonnull %8, %"class.std::__1::vector.77"* dereferenceable(24) %5) #10
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #10
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS9_9allocatorISG_EEEEEEERKNSA_INS2_13WebPluginInfoENSH_ISM_EEEEEJNS_7WeakPtrIS3_EES5_SL_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 4, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %7 = bitcast %"class.base::internal::BindStateBase"* %6 to %"class.url::Origin"*
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %7) #10
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %9) #10
  %10 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENSA_9allocatorISH_EEEEEEERKNSB_INS3_13WebPluginInfoENSI_ISN_EEEEEJNS_7WeakPtrIS4_EES6_SM_EEEEEbPKNS0_13BindStateBaseENSX_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.content::PluginRegistryImpl"**
  %9 = load %"class.content::PluginRegistryImpl"*, %"class.content::PluginRegistryImpl"** %8, align 8
  %10 = icmp ne %"class.content::PluginRegistryImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #4

declare void @_ZN5blink5mojom10PluginInfoC1Ev(%"class.blink::mojom::PluginInfo"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.38"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.38"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #12
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.38"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.38"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #12
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #11
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !46
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !46
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !49, !noalias !46
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !49, !noalias !46
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !46
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !46
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !49, !noalias !46
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !49, !noalias !46
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !46
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !46
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !49, !noalias !46
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !49, !noalias !46
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !46
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !46
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !49, !noalias !46
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !49, !noalias !46
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !51

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !46
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !46
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !49, !noalias !46
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !49, !noalias !46
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !52

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !53

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !54

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !55

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !56

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !57

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !59
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !59
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !62, !noalias !59
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !62, !noalias !59
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !59
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !59
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !62, !noalias !59
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !62, !noalias !59
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !59
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !59
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !62, !noalias !59
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !62, !noalias !59
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !59
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !59
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !62, !noalias !59
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !62, !noalias !59
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !64

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !59
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !59
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !62, !noalias !59
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !62, !noalias !59
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !65

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !66

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !67

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #11
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.38"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.38", %"class.std::__1::basic_string.38"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare void @_ZN5blink5mojom14PluginMimeTypeC1Ev(%"class.blink::mojom::PluginMimeType"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.31"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.31"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #10
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #10
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #10
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #10
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #11
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #11
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.31"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #11
  %134 = bitcast %"class.std::__1::vector.31"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #10
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector.31"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #12
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #11
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector.31"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #10
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #10
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom14PluginMimeTypeEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.88"*, %"class.mojo::StructPtr.90"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.mojo::StructPtr.90"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.88"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.88"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr.90"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.mojo::StructPtr.90"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.mojo::StructPtr.90"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %36, i64 %9
  %38 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %36, i64 %35
  %39 = ptrtoint %"class.mojo::StructPtr.90"* %38 to i64
  %40 = bitcast %"class.mojo::StructPtr.90"* %37 to i64*
  %41 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginMimeType"* null, %"class.blink::mojom::PluginMimeType"** %41, align 8
  %42 = bitcast %"class.mojo::StructPtr.90"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 0, i64* %42, align 8
  %44 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %37, i64 1
  %45 = ptrtoint %"class.mojo::StructPtr.90"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.mojo::StructPtr.90"*, %"class.mojo::StructPtr.90"** %46, align 8
  %48 = ptrtoint %"class.mojo::StructPtr.90"* %47 to i64
  %49 = load %"class.mojo::StructPtr.90"*, %"class.mojo::StructPtr.90"** %3, align 8
  %50 = icmp eq %"class.mojo::StructPtr.90"* %49, %47
  br i1 %50, label %108, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::mojom::PluginMimeType"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.mojo::StructPtr.90"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.mojo::StructPtr.90"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %60, i64 -1
  %64 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %61, i64 -1
  %65 = bitcast %"class.mojo::StructPtr.90"* %63 to i64*
  %66 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginMimeType"* null, %"class.blink::mojom::PluginMimeType"** %66, align 8
  %67 = bitcast %"class.mojo::StructPtr.90"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 0, i64* %67, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !68

71:                                               ; preds = %59, %51
  %72 = phi %"class.mojo::StructPtr.90"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.mojo::StructPtr.90"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.mojo::StructPtr.90"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 24
  br i1 %75, label %104, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.mojo::StructPtr.90"* [ %97, %76 ], [ %73, %71 ]
  %78 = phi %"class.mojo::StructPtr.90"* [ %98, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %77, i64 -1
  %80 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %78, i64 -1
  %81 = bitcast %"class.mojo::StructPtr.90"* %79 to i64*
  %82 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginMimeType"* null, %"class.blink::mojom::PluginMimeType"** %82, align 8
  %83 = bitcast %"class.mojo::StructPtr.90"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %81, align 8
  store i64 0, i64* %83, align 8
  %85 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %77, i64 -2
  %86 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %78, i64 -2
  %87 = bitcast %"class.mojo::StructPtr.90"* %85 to i64*
  %88 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginMimeType"* null, %"class.blink::mojom::PluginMimeType"** %88, align 8
  %89 = bitcast %"class.mojo::StructPtr.90"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  store i64 0, i64* %89, align 8
  %91 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %77, i64 -3
  %92 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %78, i64 -3
  %93 = bitcast %"class.mojo::StructPtr.90"* %91 to i64*
  %94 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginMimeType"* null, %"class.blink::mojom::PluginMimeType"** %94, align 8
  %95 = bitcast %"class.mojo::StructPtr.90"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %93, align 8
  store i64 0, i64* %95, align 8
  %97 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %77, i64 -4
  %98 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %78, i64 -4
  %99 = bitcast %"class.mojo::StructPtr.90"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginMimeType"* null, %"class.blink::mojom::PluginMimeType"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.90"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  store i64 0, i64* %101, align 8
  %103 = icmp eq %"class.mojo::StructPtr.90"* %98, %47
  br i1 %103, label %104, label %76

104:                                              ; preds = %76, %71
  %105 = phi %"class.mojo::StructPtr.90"* [ %72, %71 ], [ %97, %76 ]
  %106 = load i64, i64* %6, align 8
  %107 = load %"class.mojo::StructPtr.90"*, %"class.mojo::StructPtr.90"** %3, align 8
  br label %108

108:                                              ; preds = %34, %104
  %109 = phi %"class.mojo::StructPtr.90"* [ %107, %104 ], [ %47, %34 ]
  %110 = phi %"class.mojo::StructPtr.90"* [ %105, %104 ], [ %37, %34 ]
  %111 = phi i64 [ %106, %104 ], [ %48, %34 ]
  %112 = ptrtoint %"class.mojo::StructPtr.90"* %110 to i64
  store i64 %112, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %113 = inttoptr i64 %111 to %"class.mojo::StructPtr.90"*
  %114 = icmp eq %"class.mojo::StructPtr.90"* %109, %113
  br i1 %114, label %125, label %115

115:                                              ; preds = %108, %123
  %116 = phi %"class.mojo::StructPtr.90"* [ %117, %123 ], [ %109, %108 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %116, i64 -1
  %118 = getelementptr inbounds %"class.mojo::StructPtr.90", %"class.mojo::StructPtr.90"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::mojom::PluginMimeType"*, %"class.blink::mojom::PluginMimeType"** %118, align 8
  store %"class.blink::mojom::PluginMimeType"* null, %"class.blink::mojom::PluginMimeType"** %118, align 8
  %120 = icmp eq %"class.blink::mojom::PluginMimeType"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115
  tail call void @_ZN5blink5mojom14PluginMimeTypeD1Ev(%"class.blink::mojom::PluginMimeType"* nonnull %119) #10
  %122 = bitcast %"class.blink::mojom::PluginMimeType"* %119 to i8*
  tail call void @_ZdlPv(i8* %122) #11
  br label %123

123:                                              ; preds = %121, %115
  %124 = icmp eq %"class.mojo::StructPtr.90"* %117, %113
  br i1 %124, label %125, label %115

125:                                              ; preds = %123, %108
  %126 = icmp eq i64 %111, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %128) #11
  br label %129

129:                                              ; preds = %125, %127
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.84"*, %"class.mojo::StructPtr"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.mojo::StructPtr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.84"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.84"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.mojo::StructPtr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.mojo::StructPtr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %36, i64 %35
  %39 = ptrtoint %"class.mojo::StructPtr"* %38 to i64
  %40 = bitcast %"class.mojo::StructPtr"* %37 to i64*
  %41 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %41, align 8
  %42 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 0, i64* %42, align 8
  %44 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 1
  %45 = ptrtoint %"class.mojo::StructPtr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.84", %"class.std::__1::vector.84"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %46, align 8
  %48 = ptrtoint %"class.mojo::StructPtr"* %47 to i64
  %49 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %3, align 8
  %50 = icmp eq %"class.mojo::StructPtr"* %49, %47
  br i1 %50, label %108, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::mojom::PluginInfo"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.mojo::StructPtr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.mojo::StructPtr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %61, i64 -1
  %65 = bitcast %"class.mojo::StructPtr"* %63 to i64*
  %66 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %66, align 8
  %67 = bitcast %"class.mojo::StructPtr"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 0, i64* %67, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !69

71:                                               ; preds = %59, %51
  %72 = phi %"class.mojo::StructPtr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.mojo::StructPtr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.mojo::StructPtr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 24
  br i1 %75, label %104, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.mojo::StructPtr"* [ %97, %76 ], [ %73, %71 ]
  %78 = phi %"class.mojo::StructPtr"* [ %98, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -1
  %81 = bitcast %"class.mojo::StructPtr"* %79 to i64*
  %82 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %82, align 8
  %83 = bitcast %"class.mojo::StructPtr"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %81, align 8
  store i64 0, i64* %83, align 8
  %85 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -2
  %87 = bitcast %"class.mojo::StructPtr"* %85 to i64*
  %88 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %88, align 8
  %89 = bitcast %"class.mojo::StructPtr"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  store i64 0, i64* %89, align 8
  %91 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -3
  %93 = bitcast %"class.mojo::StructPtr"* %91 to i64*
  %94 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %94, align 8
  %95 = bitcast %"class.mojo::StructPtr"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %93, align 8
  store i64 0, i64* %95, align 8
  %97 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -4
  %99 = bitcast %"class.mojo::StructPtr"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  store i64 0, i64* %101, align 8
  %103 = icmp eq %"class.mojo::StructPtr"* %98, %47
  br i1 %103, label %104, label %76

104:                                              ; preds = %76, %71
  %105 = phi %"class.mojo::StructPtr"* [ %72, %71 ], [ %97, %76 ]
  %106 = load i64, i64* %6, align 8
  %107 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %3, align 8
  br label %108

108:                                              ; preds = %34, %104
  %109 = phi %"class.mojo::StructPtr"* [ %107, %104 ], [ %47, %34 ]
  %110 = phi %"class.mojo::StructPtr"* [ %105, %104 ], [ %37, %34 ]
  %111 = phi i64 [ %106, %104 ], [ %48, %34 ]
  %112 = ptrtoint %"class.mojo::StructPtr"* %110 to i64
  store i64 %112, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %113 = inttoptr i64 %111 to %"class.mojo::StructPtr"*
  %114 = icmp eq %"class.mojo::StructPtr"* %109, %113
  br i1 %114, label %125, label %115

115:                                              ; preds = %108, %123
  %116 = phi %"class.mojo::StructPtr"* [ %117, %123 ], [ %109, %108 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %116, i64 -1
  %118 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::mojom::PluginInfo"*, %"class.blink::mojom::PluginInfo"** %118, align 8
  store %"class.blink::mojom::PluginInfo"* null, %"class.blink::mojom::PluginInfo"** %118, align 8
  %120 = icmp eq %"class.blink::mojom::PluginInfo"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115
  tail call void @_ZN5blink5mojom10PluginInfoD1Ev(%"class.blink::mojom::PluginInfo"* nonnull %119) #10
  %122 = bitcast %"class.blink::mojom::PluginInfo"* %119 to i8*
  tail call void @_ZdlPv(i8* %122) #11
  br label %123

123:                                              ; preds = %121, %115
  %124 = icmp eq %"class.mojo::StructPtr"* %117, %113
  br i1 %124, label %125, label %115

125:                                              ; preds = %123, %108
  %126 = icmp eq i64 %111, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %128) #11
  br label %129

129:                                              ; preds = %125, %127
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN7content18PluginRegistryImplEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN7content18PluginRegistryImplEE10GetWeakPtrEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content18PluginRegistryImplEFvRKN3url6OriginENS2_IFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS9_9allocatorISG_EEEEEEERKNSA_INS3_13WebPluginInfoENSH_ISM_EEEEEJNS_7WeakPtrIS4_EES8_SL_EEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN7content18PluginRegistryImplEFvRKN3url6OriginENS2_IFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS9_9allocatorISG_EEEEEEERKNSA_INS3_13WebPluginInfoENSH_ISM_EEEEEJNS_7WeakPtrIS4_EES8_SL_EEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS8_9allocatorISF_EEEEEEERKNS9_INS1_13WebPluginInfoENSG_ISL_EEEEEJNS_7WeakPtrIS2_EES6_SK_EEENS7_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSW_DpOSX_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIMN7content18PluginRegistryImplEFvRKN3url6OriginENS_12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrIN5blink5mojom10PluginInfoEEENS8_9allocatorISF_EEEEEEERKNS9_INS1_13WebPluginInfoENSG_ISL_EEEEEJNS_7WeakPtrIS2_EES6_SK_EEENS7_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSW_DpOSX_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blink5mojom10PluginInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZN5blink5mojom10PluginInfo3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink5mojom14PluginMimeType3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZN5blink5mojom14PluginMimeType3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!16 = !{i8 0, i8 2}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.isvectorized", i32 1}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.unroll.disable"}
!26 = distinct !{!26, !25}
!27 = distinct !{!27, !23}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !23}
!34 = distinct !{!34, !25}
!35 = distinct !{!35, !25}
!36 = distinct !{!36, !23}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !23}
!43 = distinct !{!43, !25}
!44 = distinct !{!44, !25}
!45 = distinct !{!45, !23}
!46 = !{!47}
!47 = distinct !{!47, !48}
!48 = distinct !{!48, !"LVerDomain"}
!49 = !{!50}
!50 = distinct !{!50, !48}
!51 = distinct !{!51, !23}
!52 = distinct !{!52, !25}
!53 = distinct !{!53, !25}
!54 = distinct !{!54, !23}
!55 = distinct !{!55, !23}
!56 = distinct !{!56, !25}
!57 = distinct !{!57, !58, !23}
!58 = !{!"llvm.loop.unroll.runtime.disable"}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !23}
!65 = distinct !{!65, !25}
!66 = distinct !{!66, !25}
!67 = distinct !{!67, !23}
!68 = distinct !{!68, !25}
!69 = distinct !{!69, !25}
