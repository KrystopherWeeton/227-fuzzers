; ModuleID = '../../third_party/icu/source/common/normalizer2impl.cpp'
source_filename = "../../third_party/icu/source/common/normalizer2impl.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::ReorderingBuffer" = type { %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::UnicodeString"*, i16*, i16*, i16*, i32, i8, i16*, i16* }
%"class.icu_69::Normalizer2Impl" = type { %"class.icu_69::UObject", i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.UCPTrie*, i16*, i16*, i8*, %"struct.icu_69::UInitOnce", %"struct.icu_69::CanonIterData"* }
%"class.icu_69::UObject" = type { i32 (...)** }
%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic", i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.icu_69::CanonIterData" = type { %struct.UMutableCPTrie*, %struct.UCPTrie*, %"class.icu_69::UVector" }
%struct.UMutableCPTrie = type opaque
%"class.icu_69::UVector" = type { %"class.icu_69::UObject", i32, i32, %union.UElement*, void (i8*)*, i8 (i8*, i8*)* }
%union.UElement = type { i8* }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.1, [32 x i8] }
%struct.anon.1 = type { i16, i32, i32, i16* }
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UnicodeSetStringSpan" = type opaque
%struct.USetAdder = type { %struct.USet*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)*, void (%struct.USet*, i16*, i32)*, void (%struct.USet*, i32)*, void (%struct.USet*, i32, i32)* }
%struct.USet = type opaque
%struct.anon = type { i16, [27 x i16] }
%"class.icu_69::ByteSink" = type { i32 (...)** }
%"class.icu_69::Edits" = type <{ i16*, i32, i32, i32, i32, i32, [100 x i16], [4 x i8] }>
%struct.UDataSwapper = type { i8, i8, i8, i8, i16 (i16)*, i32 (i32)*, i32 (%struct.UDataSwapper*, i8*, i32, i16*, i32)*, void (i16*, i16)*, void (i32*, i32)*, {}*, {}*, {}*, {}*, void (i8*, i8*, %struct.__va_list_tag*)*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN6icu_6916ReorderingBuffer9appendBMPEDshR10UErrorCode = comdat any

@_ZTVN6icu_6915Normalizer2ImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6915Normalizer2ImplE to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2Impl"*)* @_ZN6icu_6915Normalizer2ImplD2Ev to i8*), i8* bitcast (void (%"class.icu_69::Normalizer2Impl"*)* @_ZN6icu_6915Normalizer2ImplD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c" 000000000000\1000\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00\1E\0F\0F\0F\00\00\00\00\00", align 1
@.str.2 = private unnamed_addr constant [108 x i8] c"unorm2_swap(): data format %02x.%02x.%02x.%02x (format version %02x) is not recognized as Normalizer2 data\0A\00", align 1
@.str.3 = private unnamed_addr constant [69 x i8] c"unorm2_swap(): too few bytes (%d after header) for Normalizer2 data\0A\00", align 1
@.str.4 = private unnamed_addr constant [76 x i8] c"unorm2_swap(): too few bytes (%d after header) for all of Normalizer2 data\0A\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6915Normalizer2ImplE = hidden constant [27 x i8] c"N6icu_6915Normalizer2ImplE\00", align 1
@_ZTIN6icu_697UObjectE = external constant i8*
@_ZTIN6icu_6915Normalizer2ImplE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN6icu_6915Normalizer2ImplE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_697UObjectE to i8*) }, align 8
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8

@_ZN6icu_6916ReorderingBufferC1ERKNS_15Normalizer2ImplERNS_13UnicodeStringER10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::ReorderingBuffer"*, %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::UnicodeString"*, i32*), void (%"class.icu_69::ReorderingBuffer"*, %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::UnicodeString"*, i32*)* @_ZN6icu_6916ReorderingBufferC2ERKNS_15Normalizer2ImplERNS_13UnicodeStringER10UErrorCode
@_ZN6icu_6915Normalizer2ImplD1Ev = hidden unnamed_addr alias void (%"class.icu_69::Normalizer2Impl"*), void (%"class.icu_69::Normalizer2Impl"*)* @_ZN6icu_6915Normalizer2ImplD2Ev
@_ZN6icu_6913CanonIterDataC1ER10UErrorCode = hidden unnamed_addr alias void (%"struct.icu_69::CanonIterData"*, i32*), void (%"struct.icu_69::CanonIterData"*, i32*)* @_ZN6icu_6913CanonIterDataC2ER10UErrorCode
@_ZN6icu_6913CanonIterDataD1Ev = hidden unnamed_addr alias void (%"struct.icu_69::CanonIterData"*), void (%"struct.icu_69::CanonIterData"*)* @_ZN6icu_6913CanonIterDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916ReorderingBufferC2ERKNS_15Normalizer2ImplERNS_13UnicodeStringER10UErrorCode(%"class.icu_69::ReorderingBuffer"* nocapture, %"class.icu_69::Normalizer2Impl"* dereferenceable(80), %"class.icu_69::UnicodeString"* dereferenceable(64), i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 0
  store %"class.icu_69::Normalizer2Impl"* %1, %"class.icu_69::Normalizer2Impl"** %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 1
  store %"class.icu_69::UnicodeString"* %2, %"class.icu_69::UnicodeString"** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %8 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %2, i32 8) #8
  store i16* %8, i16** %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  store i16* %8, i16** %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %11 = ptrtoint i16* %8 to i64
  %12 = bitcast i16** %10 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 5
  %14 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %6, align 8
  %15 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = load i16, i16* %15, align 8
  %17 = and i16 %16, 2
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %14, i64 0, i32 1, i32 0, i32 2
  %21 = load i32, i32* %20, align 8
  br label %22

22:                                               ; preds = %4, %19
  %23 = phi i32 [ %21, %19 ], [ 27, %4 ]
  store i32 %23, i32* %13, align 8
  %24 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 6
  store i8 0, i8* %24, align 4
  %25 = icmp ne i16* %8, null
  %26 = load i32, i32* %3, align 4
  %27 = icmp sgt i32 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  store i32 7, i32* %3, align 4
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

declare i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6916ReorderingBuffer4initEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nocapture, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 1
  %5 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load i16, i16* %6, align 8
  %8 = icmp slt i16 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = lshr i16 %7, 5
  %11 = zext i16 %10 to i32
  br label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %5, i64 0, i32 1, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %9, %12
  %16 = phi i32 [ %11, %9 ], [ %14, %12 ]
  %17 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %5, i32 %1) #8
  %18 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  store i16* %17, i16** %18, align 8
  %19 = icmp eq i16* %17, null
  %20 = ptrtoint i16* %17 to i64
  br i1 %19, label %21, label %22

21:                                               ; preds = %15
  store i32 7, i32* %2, align 4
  br label %57

22:                                               ; preds = %15
  %23 = sext i32 %16 to i64
  %24 = getelementptr inbounds i16, i16* %17, i64 %23
  %25 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  store i16* %24, i16** %25, align 8
  %26 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %4, align 8
  %27 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %26, i64 0, i32 1, i32 0, i32 0
  %28 = load i16, i16* %27, align 8
  %29 = and i16 %28, 2
  %30 = icmp eq i16 %29, 0
  %31 = ptrtoint i16* %24 to i64
  br i1 %30, label %32, label %35

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %26, i64 0, i32 1, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  br label %35

35:                                               ; preds = %22, %32
  %36 = phi i32 [ %34, %32 ], [ 27, %22 ]
  %37 = sub nsw i32 %36, %16
  %38 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 5
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %40 = bitcast i16** %39 to i64*
  store i64 %20, i64* %40, align 8
  %41 = icmp eq i32 %16, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 6
  store i8 0, i8* %43, align 4
  br label %57

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 7
  %46 = bitcast i16** %45 to i64*
  store i64 %31, i64* %46, align 8
  %47 = tail call zeroext i8 @_ZN6icu_6916ReorderingBuffer10previousCCEv(%"class.icu_69::ReorderingBuffer"* %0)
  %48 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 6
  store i8 %47, i8* %48, align 4
  %49 = icmp ugt i8 %47, 1
  br i1 %49, label %50, label %53

50:                                               ; preds = %44, %50
  %51 = tail call zeroext i8 @_ZN6icu_6916ReorderingBuffer10previousCCEv(%"class.icu_69::ReorderingBuffer"* %0)
  %52 = icmp ugt i8 %51, 1
  br i1 %52, label %50, label %53

53:                                               ; preds = %50, %44
  %54 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 8
  %55 = bitcast i16** %54 to i64*
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %40, align 8
  br label %57

57:                                               ; preds = %42, %53, %21
  %58 = phi i8 [ 0, %21 ], [ 1, %53 ], [ 1, %42 ]
  ret i8 %58
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN6icu_6916ReorderingBuffer10previousCCEv(%"class.icu_69::ReorderingBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 7
  %3 = bitcast i16** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 8
  %6 = bitcast i16** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %8 = load i16*, i16** %7, align 8
  %9 = inttoptr i64 %4 to i16*
  %10 = icmp ult i16* %8, %9
  br i1 %10, label %11, label %84

11:                                               ; preds = %1
  %12 = getelementptr inbounds i16, i16* %9, i64 -1
  store i16* %12, i16** %2, align 8
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = and i32 %14, 64512
  %16 = icmp eq i32 %15, 56320
  br i1 %16, label %17, label %31

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %19 = load i16*, i16** %18, align 8
  %20 = icmp ult i16* %19, %12
  br i1 %20, label %21, label %31

21:                                               ; preds = %17
  %22 = getelementptr inbounds i16, i16* %9, i64 -2
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = and i32 %24, 64512
  %26 = icmp eq i32 %25, 55296
  br i1 %26, label %27, label %31

27:                                               ; preds = %21
  store i16* %22, i16** %2, align 8
  %28 = shl nuw nsw i32 %24, 10
  %29 = add nuw nsw i32 %14, -56613888
  %30 = add nsw i32 %29, %28
  br label %31

31:                                               ; preds = %27, %21, %17, %11
  %32 = phi i32 [ %30, %27 ], [ %14, %21 ], [ %14, %17 ], [ %14, %11 ]
  %33 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 0
  %34 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %33, align 8
  %35 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %34, i64 0, i32 2
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = icmp slt i32 %32, %37
  %39 = and i32 %32, -1024
  %40 = icmp eq i32 %39, 55296
  %41 = or i1 %40, %38
  br i1 %41, label %84, label %42

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %34, i64 0, i32 13
  %44 = load %struct.UCPTrie*, %struct.UCPTrie** %43, align 8
  %45 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %44, i64 0, i32 1
  %46 = bitcast %union.UCPTrieData* %45 to i16**
  %47 = load i16*, i16** %46, align 8
  %48 = icmp ult i32 %32, 65536
  br i1 %48, label %49, label %59

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %44, i64 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = lshr i32 %32, 6
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds i16, i16* %51, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = and i32 %32, 63
  %58 = add nuw nsw i32 %57, %56
  br label %75

59:                                               ; preds = %42
  %60 = icmp ult i32 %32, 1114112
  br i1 %60, label %61, label %71

61:                                               ; preds = %59
  %62 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %44, i64 0, i32 4
  %63 = load i32, i32* %62, align 8
  %64 = icmp sgt i32 %63, %32
  br i1 %64, label %69, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %44, i64 0, i32 3
  %67 = load i32, i32* %66, align 4
  %68 = add nsw i32 %67, -2
  br label %75

69:                                               ; preds = %61
  %70 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %44, i32 %32) #8
  br label %75

71:                                               ; preds = %59
  %72 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %44, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = add nsw i32 %73, -1
  br label %75

75:                                               ; preds = %71, %69, %65, %49
  %76 = phi i32 [ %58, %49 ], [ %74, %71 ], [ %68, %65 ], [ %70, %69 ]
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i16, i16* %47, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = icmp ugt i16 %79, -1025
  %81 = lshr i16 %79, 1
  %82 = trunc i16 %81 to i8
  %83 = select i1 %80, i8 %82, i8 0
  br label %84

84:                                               ; preds = %75, %31, %1
  %85 = phi i8 [ 0, %1 ], [ %83, %75 ], [ 0, %31 ]
  ret i8 %85
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6916ReorderingBuffer6equalsEPKDsS2_(%"class.icu_69::ReorderingBuffer"* nocapture readonly, i16*, i16*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %8 = load i16*, i16** %7, align 8
  %9 = ptrtoint i16* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 1
  %12 = trunc i64 %11 to i32
  %13 = ptrtoint i16* %2 to i64
  %14 = ptrtoint i16* %1 to i64
  %15 = sub i64 %13, %14
  %16 = lshr exact i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = icmp eq i32 %12, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %3
  %20 = tail call i32 @u_memcmp_69(i16* %8, i16* %1, i32 %12) #8
  %21 = icmp eq i32 %20, 0
  %22 = zext i1 %21 to i8
  br label %23

23:                                               ; preds = %19, %3
  %24 = phi i8 [ 0, %3 ], [ %22, %19 ]
  ret i8 %24
}

declare i32 @u_memcmp_69(i16*, i16*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_6916ReorderingBuffer6equalsEPKhS2_(%"class.icu_69::ReorderingBuffer"* nocapture readonly, i8*, i8*) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %8 = bitcast i16** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 1
  %12 = trunc i64 %11 to i32
  %13 = ptrtoint i8* %2 to i64
  %14 = ptrtoint i8* %1 to i64
  %15 = sub i64 %13, %14
  %16 = trunc i64 %15 to i32
  %17 = icmp slt i32 %16, %12
  %18 = sdiv i32 %16, 3
  %19 = icmp sgt i32 %18, %12
  %20 = or i1 %17, %19
  %21 = inttoptr i64 %9 to i16*
  br i1 %20, label %118, label %22

22:                                               ; preds = %3, %114
  %23 = phi i32 [ %48, %114 ], [ 0, %3 ]
  %24 = phi i32 [ %115, %114 ], [ 0, %3 ]
  %25 = icmp slt i32 %23, %12
  %26 = icmp sge i32 %24, %16
  br i1 %25, label %29, label %27

27:                                               ; preds = %22
  %28 = zext i1 %26 to i8
  br label %118

29:                                               ; preds = %22
  br i1 %26, label %118, label %30

30:                                               ; preds = %29
  %31 = add nsw i32 %23, 1
  %32 = sext i32 %23 to i64
  %33 = getelementptr inbounds i16, i16* %21, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = and i32 %35, 64512
  %37 = icmp eq i32 %36, 55296
  br i1 %37, label %38, label %47

38:                                               ; preds = %30
  %39 = shl nuw nsw i32 %35, 10
  %40 = add nsw i32 %23, 2
  %41 = sext i32 %31 to i64
  %42 = getelementptr inbounds i16, i16* %21, i64 %41
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = add nsw i32 %39, -56613888
  %46 = add nsw i32 %45, %44
  br label %47

47:                                               ; preds = %30, %38
  %48 = phi i32 [ %40, %38 ], [ %31, %30 ]
  %49 = phi i32 [ %46, %38 ], [ %35, %30 ]
  %50 = add nsw i32 %24, 1
  %51 = sext i32 %24 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = icmp sgt i8 %53, -1
  br i1 %55, label %114, label %56

56:                                               ; preds = %47
  %57 = icmp ult i8 %53, -32
  br i1 %57, label %58, label %68

58:                                               ; preds = %56
  %59 = shl nuw nsw i32 %54, 6
  %60 = and i32 %59, 1984
  %61 = add nsw i32 %24, 2
  %62 = sext i32 %50 to i64
  %63 = getelementptr inbounds i8, i8* %1, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = and i8 %64, 63
  %66 = zext i8 %65 to i32
  %67 = or i32 %60, %66
  br label %114

68:                                               ; preds = %56
  %69 = icmp ult i8 %53, -16
  br i1 %69, label %70, label %88

70:                                               ; preds = %68
  %71 = shl nuw nsw i32 %54, 12
  %72 = sext i32 %50 to i64
  %73 = getelementptr inbounds i8, i8* %1, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = and i8 %74, 63
  %76 = zext i8 %75 to i32
  %77 = shl nuw nsw i32 %76, 6
  %78 = add nsw i32 %24, 2
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %1, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = and i8 %81, 63
  %83 = zext i8 %82 to i32
  %84 = and i32 %71, 61440
  %85 = or i32 %77, %84
  %86 = or i32 %85, %83
  %87 = add nsw i32 %24, 3
  br label %114

88:                                               ; preds = %68
  %89 = shl nuw nsw i32 %54, 18
  %90 = and i32 %89, 1835008
  %91 = sext i32 %50 to i64
  %92 = getelementptr inbounds i8, i8* %1, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = and i8 %93, 63
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 12
  %97 = or i32 %96, %90
  %98 = add nsw i32 %24, 2
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, i8* %1, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = and i8 %101, 63
  %103 = zext i8 %102 to i32
  %104 = shl nuw nsw i32 %103, 6
  %105 = or i32 %97, %104
  %106 = add nsw i32 %24, 3
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %1, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = and i8 %109, 63
  %111 = zext i8 %110 to i32
  %112 = or i32 %105, %111
  %113 = add nsw i32 %24, 4
  br label %114

114:                                              ; preds = %58, %88, %70, %47
  %115 = phi i32 [ %50, %47 ], [ %61, %58 ], [ %87, %70 ], [ %113, %88 ]
  %116 = phi i32 [ %54, %47 ], [ %67, %58 ], [ %86, %70 ], [ %112, %88 ]
  %117 = icmp eq i32 %49, %116
  br i1 %117, label %22, label %118

118:                                              ; preds = %114, %29, %27, %3
  %119 = phi i8 [ 0, %3 ], [ %28, %27 ], [ 0, %29 ], [ 0, %114 ]
  ret i8 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6916ReorderingBuffer19appendSupplementaryEihR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nocapture, i32, i8 zeroext, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %6, 2
  br i1 %7, label %8, label %61

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %10 = bitcast i16** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %13 = bitcast i16** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %11, %14
  %16 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %17 = bitcast i16** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %14
  %20 = lshr exact i64 %19, 1
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 1
  %23 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %22, align 8
  tail call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %23, i32 %21) #8
  %24 = add nsw i32 %21, 2
  %25 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %22, align 8
  %26 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 2
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %8
  %31 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = shl i32 %32, 1
  br label %34

34:                                               ; preds = %30, %8
  %35 = phi i32 [ %33, %30 ], [ 54, %8 ]
  %36 = icmp slt i32 %24, %35
  %37 = select i1 %36, i32 %35, i32 %24
  %38 = icmp sgt i32 %37, 256
  %39 = select i1 %38, i32 %37, i32 256
  %40 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %25, i32 %39) #8
  store i16* %40, i16** %12, align 8
  %41 = icmp eq i16* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %34
  store i32 7, i32* %3, align 4
  br label %142

43:                                               ; preds = %34
  %44 = shl i64 %15, 31
  %45 = ashr i64 %44, 32
  %46 = getelementptr inbounds i16, i16* %40, i64 %45
  store i16* %46, i16** %9, align 8
  %47 = shl i64 %19, 31
  %48 = ashr exact i64 %47, 32
  %49 = getelementptr inbounds i16, i16* %40, i64 %48
  store i16* %49, i16** %16, align 8
  %50 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %22, align 8
  %51 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1, i32 0, i32 0
  %52 = load i16, i16* %51, align 8
  %53 = and i16 %52, 2
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1, i32 0, i32 2
  %57 = load i32, i32* %56, align 8
  br label %58

58:                                               ; preds = %43, %55
  %59 = phi i32 [ %57, %55 ], [ 27, %43 ]
  %60 = sub nsw i32 %59, %21
  store i32 %60, i32* %5, align 8
  br label %61

61:                                               ; preds = %58, %4
  %62 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 6
  %63 = load i8, i8* %62, align 4
  %64 = icmp ule i8 %63, %2
  %65 = icmp eq i8 %2, 0
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %85

67:                                               ; preds = %61
  %68 = lshr i32 %1, 10
  %69 = trunc i32 %68 to i16
  %70 = add i16 %69, -10304
  %71 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %72 = load i16*, i16** %71, align 8
  store i16 %70, i16* %72, align 2
  %73 = trunc i32 %1 to i16
  %74 = and i16 %73, 1023
  %75 = or i16 %74, -9216
  %76 = load i16*, i16** %71, align 8
  %77 = getelementptr inbounds i16, i16* %76, i64 1
  store i16 %75, i16* %77, align 2
  %78 = load i16*, i16** %71, align 8
  %79 = getelementptr inbounds i16, i16* %78, i64 2
  store i16* %79, i16** %71, align 8
  store i8 %2, i8* %62, align 4
  %80 = icmp ult i8 %2, 2
  br i1 %80, label %81, label %139

81:                                               ; preds = %67
  %82 = ptrtoint i16* %79 to i64
  %83 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %84 = bitcast i16** %83 to i64*
  store i64 %82, i64* %84, align 8
  br label %139

85:                                               ; preds = %61
  %86 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %87 = bitcast i16** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 7
  %90 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 8
  %91 = bitcast i16** %90 to i64*
  store i64 %88, i64* %91, align 8
  %92 = inttoptr i64 %88 to i16*
  %93 = getelementptr inbounds i16, i16* %92, i64 -1
  store i16* %93, i16** %89, align 8
  %94 = load i16, i16* %93, align 2
  %95 = and i16 %94, -1024
  %96 = icmp eq i16 %95, -9216
  br i1 %96, label %97, label %107

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %99 = load i16*, i16** %98, align 8
  %100 = icmp ult i16* %99, %93
  br i1 %100, label %101, label %107

101:                                              ; preds = %97
  %102 = getelementptr inbounds i16, i16* %92, i64 -2
  %103 = load i16, i16* %102, align 2
  %104 = and i16 %103, -1024
  %105 = icmp eq i16 %104, -10240
  br i1 %105, label %106, label %107

106:                                              ; preds = %101
  store i16* %102, i16** %89, align 8
  br label %107

107:                                              ; preds = %106, %101, %97, %85
  br label %108

108:                                              ; preds = %107, %108
  %109 = tail call zeroext i8 @_ZN6icu_6916ReorderingBuffer10previousCCEv(%"class.icu_69::ReorderingBuffer"* %0) #8
  %110 = icmp ugt i8 %109, %2
  br i1 %110, label %108, label %111

111:                                              ; preds = %108
  %112 = load i16*, i16** %86, align 8
  %113 = icmp ult i32 %1, 65536
  %114 = select i1 %113, i64 1, i64 2
  %115 = getelementptr inbounds i16, i16* %112, i64 %114
  store i16* %115, i16** %86, align 8
  br label %116

116:                                              ; preds = %116, %111
  %117 = phi i16* [ %112, %111 ], [ %119, %116 ]
  %118 = phi i16* [ %115, %111 ], [ %121, %116 ]
  %119 = getelementptr inbounds i16, i16* %117, i64 -1
  %120 = load i16, i16* %119, align 2
  %121 = getelementptr inbounds i16, i16* %118, i64 -1
  store i16 %120, i16* %121, align 2
  %122 = load i16*, i16** %90, align 8
  %123 = icmp eq i16* %122, %119
  br i1 %123, label %124, label %116

124:                                              ; preds = %116
  %125 = icmp slt i32 %1, 65536
  br i1 %125, label %126, label %128

126:                                              ; preds = %124
  %127 = trunc i32 %1 to i16
  store i16 %127, i16* %119, align 2
  br label %135

128:                                              ; preds = %124
  %129 = lshr i32 %1, 10
  %130 = trunc i32 %129 to i16
  %131 = add i16 %130, -10304
  store i16 %131, i16* %119, align 2
  %132 = trunc i32 %1 to i16
  %133 = and i16 %132, 1023
  %134 = or i16 %133, -9216
  store i16 %134, i16* %117, align 2
  br label %135

135:                                              ; preds = %128, %126
  %136 = icmp ult i8 %2, 2
  br i1 %136, label %137, label %139

137:                                              ; preds = %135
  %138 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  store i16* %121, i16** %138, align 8
  br label %139

139:                                              ; preds = %137, %135, %67, %81
  %140 = load i32, i32* %5, align 8
  %141 = add nsw i32 %140, -2
  store i32 %141, i32* %5, align 8
  br label %142

142:                                              ; preds = %42, %139
  %143 = phi i8 [ 1, %139 ], [ 0, %42 ]
  ret i8 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6916ReorderingBuffer6resizeEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nocapture, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %8 = bitcast i16** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %12 = bitcast i16** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %9
  %15 = lshr exact i64 %14, 1
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 1
  %18 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %17, align 8
  tail call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %18, i32 %16) #8
  %19 = add nsw i32 %16, %1
  %20 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %17, align 8
  %21 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = load i16, i16* %21, align 8
  %23 = and i16 %22, 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %20, i64 0, i32 1, i32 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = shl i32 %27, 1
  br label %29

29:                                               ; preds = %3, %25
  %30 = phi i32 [ %28, %25 ], [ 54, %3 ]
  %31 = icmp slt i32 %19, %30
  %32 = select i1 %31, i32 %30, i32 %19
  %33 = icmp sgt i32 %32, 256
  %34 = select i1 %33, i32 %32, i32 256
  %35 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %20, i32 %34) #8
  store i16* %35, i16** %7, align 8
  %36 = icmp eq i16* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %29
  store i32 7, i32* %2, align 4
  br label %57

38:                                               ; preds = %29
  %39 = shl i64 %10, 31
  %40 = ashr i64 %39, 32
  %41 = getelementptr inbounds i16, i16* %35, i64 %40
  store i16* %41, i16** %4, align 8
  %42 = shl i64 %14, 31
  %43 = ashr exact i64 %42, 32
  %44 = getelementptr inbounds i16, i16* %35, i64 %43
  store i16* %44, i16** %11, align 8
  %45 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %17, align 8
  %46 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %45, i64 0, i32 1, i32 0, i32 0
  %47 = load i16, i16* %46, align 8
  %48 = and i16 %47, 2
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %45, i64 0, i32 1, i32 0, i32 2
  %52 = load i32, i32* %51, align 8
  br label %53

53:                                               ; preds = %38, %50
  %54 = phi i32 [ %52, %50 ], [ 27, %38 ]
  %55 = sub nsw i32 %54, %16
  %56 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 5
  store i32 %55, i32* %56, align 8
  br label %57

57:                                               ; preds = %53, %37
  %58 = phi i8 [ 0, %37 ], [ 1, %53 ]
  ret i8 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916ReorderingBuffer6insertEih(%"class.icu_69::ReorderingBuffer"* nocapture, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %5 = bitcast i16** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 8
  %9 = bitcast i16** %8 to i64*
  store i64 %6, i64* %9, align 8
  %10 = inttoptr i64 %6 to i16*
  %11 = getelementptr inbounds i16, i16* %10, i64 -1
  store i16* %11, i16** %7, align 8
  %12 = load i16, i16* %11, align 2
  %13 = and i16 %12, -1024
  %14 = icmp eq i16 %13, -9216
  br i1 %14, label %15, label %25

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %17 = load i16*, i16** %16, align 8
  %18 = icmp ult i16* %17, %11
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = getelementptr inbounds i16, i16* %10, i64 -2
  %21 = load i16, i16* %20, align 2
  %22 = and i16 %21, -1024
  %23 = icmp eq i16 %22, -10240
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  store i16* %20, i16** %7, align 8
  br label %25

25:                                               ; preds = %3, %15, %19, %24
  br label %26

26:                                               ; preds = %25, %26
  %27 = tail call zeroext i8 @_ZN6icu_6916ReorderingBuffer10previousCCEv(%"class.icu_69::ReorderingBuffer"* %0)
  %28 = icmp ugt i8 %27, %2
  br i1 %28, label %26, label %29

29:                                               ; preds = %26
  %30 = load i16*, i16** %4, align 8
  %31 = icmp ult i32 %1, 65536
  %32 = select i1 %31, i64 1, i64 2
  %33 = getelementptr inbounds i16, i16* %30, i64 %32
  store i16* %33, i16** %4, align 8
  br label %34

34:                                               ; preds = %34, %29
  %35 = phi i16* [ %30, %29 ], [ %37, %34 ]
  %36 = phi i16* [ %33, %29 ], [ %39, %34 ]
  %37 = getelementptr inbounds i16, i16* %35, i64 -1
  %38 = load i16, i16* %37, align 2
  %39 = getelementptr inbounds i16, i16* %36, i64 -1
  store i16 %38, i16* %39, align 2
  %40 = load i16*, i16** %8, align 8
  %41 = icmp eq i16* %40, %37
  br i1 %41, label %42, label %34

42:                                               ; preds = %34
  %43 = icmp slt i32 %1, 65536
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = trunc i32 %1 to i16
  store i16 %45, i16* %37, align 2
  br label %53

46:                                               ; preds = %42
  %47 = lshr i32 %1, 10
  %48 = trunc i32 %47 to i16
  %49 = add i16 %48, -10304
  store i16 %49, i16* %37, align 2
  %50 = trunc i32 %1 to i16
  %51 = and i16 %50, 1023
  %52 = or i16 %51, -9216
  store i16 %52, i16* %35, align 2
  br label %53

53:                                               ; preds = %44, %46
  %54 = icmp ult i8 %2, 2
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  store i16* %39, i16** %56, align 8
  br label %57

57:                                               ; preds = %55, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6916ReorderingBuffer6appendEPKDsiahhR10UErrorCode(%"class.icu_69::ReorderingBuffer"*, i16* readonly, i32, i8 signext, i8 zeroext, i8 zeroext, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %357, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, %2
  br i1 %12, label %13, label %66

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %15 = bitcast i16** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %18 = bitcast i16** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %22 = bitcast i16** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %19
  %25 = lshr exact i64 %24, 1
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 1
  %28 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %27, align 8
  tail call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %28, i32 %26) #8
  %29 = add nsw i32 %26, %2
  %30 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %27, align 8
  %31 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %30, i64 0, i32 1, i32 0, i32 0
  %32 = load i16, i16* %31, align 8
  %33 = and i16 %32, 2
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %13
  %36 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %30, i64 0, i32 1, i32 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = shl i32 %37, 1
  br label %39

39:                                               ; preds = %35, %13
  %40 = phi i32 [ %38, %35 ], [ 54, %13 ]
  %41 = icmp slt i32 %29, %40
  %42 = select i1 %41, i32 %40, i32 %29
  %43 = icmp sgt i32 %42, 256
  %44 = select i1 %43, i32 %42, i32 256
  %45 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %30, i32 %44) #8
  store i16* %45, i16** %17, align 8
  %46 = icmp eq i16* %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %39
  store i32 7, i32* %6, align 4
  br label %357

48:                                               ; preds = %39
  %49 = shl i64 %20, 31
  %50 = ashr i64 %49, 32
  %51 = getelementptr inbounds i16, i16* %45, i64 %50
  store i16* %51, i16** %14, align 8
  %52 = shl i64 %24, 31
  %53 = ashr exact i64 %52, 32
  %54 = getelementptr inbounds i16, i16* %45, i64 %53
  store i16* %54, i16** %21, align 8
  %55 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %27, align 8
  %56 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %55, i64 0, i32 1, i32 0, i32 0
  %57 = load i16, i16* %56, align 8
  %58 = and i16 %57, 2
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %48
  %61 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %55, i64 0, i32 1, i32 0, i32 2
  %62 = load i32, i32* %61, align 8
  br label %63

63:                                               ; preds = %48, %60
  %64 = phi i32 [ %62, %60 ], [ 27, %48 ]
  %65 = sub nsw i32 %64, %26
  store i32 %65, i32* %10, align 8
  br label %66

66:                                               ; preds = %63, %9
  %67 = phi i32 [ %65, %63 ], [ %11, %9 ]
  %68 = sub nsw i32 %67, %2
  store i32 %68, i32* %10, align 8
  %69 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 6
  %70 = load i8, i8* %69, align 4
  %71 = icmp ule i8 %70, %4
  %72 = icmp eq i8 %4, 0
  %73 = or i1 %72, %71
  br i1 %73, label %74, label %132

74:                                               ; preds = %66
  %75 = icmp ult i8 %5, 2
  br i1 %75, label %76, label %81

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %78 = load i16*, i16** %77, align 8
  %79 = sext i32 %2 to i64
  %80 = getelementptr inbounds i16, i16* %78, i64 %79
  br label %87

81:                                               ; preds = %74
  %82 = icmp ult i8 %4, 2
  br i1 %82, label %83, label %90

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %85 = load i16*, i16** %84, align 8
  %86 = getelementptr inbounds i16, i16* %85, i64 1
  br label %87

87:                                               ; preds = %76, %83
  %88 = phi i16* [ %86, %83 ], [ %80, %76 ]
  %89 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  store i16* %88, i16** %89, align 8
  br label %90

90:                                               ; preds = %87, %81
  %91 = sext i32 %2 to i64
  %92 = getelementptr inbounds i16, i16* %1, i64 %91
  %93 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %94 = shl nsw i64 %91, 1
  %95 = add nsw i64 %94, -2
  %96 = lshr exact i64 %95, 1
  %97 = add nuw i64 %96, 1
  %98 = and i64 %97, 3
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %109, label %100

100:                                              ; preds = %90, %100
  %101 = phi i16* [ %103, %100 ], [ %1, %90 ]
  %102 = phi i64 [ %107, %100 ], [ %98, %90 ]
  %103 = getelementptr inbounds i16, i16* %101, i64 1
  %104 = load i16, i16* %101, align 2
  %105 = load i16*, i16** %93, align 8
  %106 = getelementptr inbounds i16, i16* %105, i64 1
  store i16* %106, i16** %93, align 8
  store i16 %104, i16* %105, align 2
  %107 = add i64 %102, -1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %100, !llvm.loop !2

109:                                              ; preds = %100, %90
  %110 = phi i16* [ %1, %90 ], [ %103, %100 ]
  %111 = icmp ult i64 %95, 6
  br i1 %111, label %131, label %112

112:                                              ; preds = %109, %112
  %113 = phi i16* [ %126, %112 ], [ %110, %109 ]
  %114 = getelementptr inbounds i16, i16* %113, i64 1
  %115 = load i16, i16* %113, align 2
  %116 = load i16*, i16** %93, align 8
  %117 = getelementptr inbounds i16, i16* %116, i64 1
  store i16* %117, i16** %93, align 8
  store i16 %115, i16* %116, align 2
  %118 = getelementptr inbounds i16, i16* %113, i64 2
  %119 = load i16, i16* %114, align 2
  %120 = load i16*, i16** %93, align 8
  %121 = getelementptr inbounds i16, i16* %120, i64 1
  store i16* %121, i16** %93, align 8
  store i16 %119, i16* %120, align 2
  %122 = getelementptr inbounds i16, i16* %113, i64 3
  %123 = load i16, i16* %118, align 2
  %124 = load i16*, i16** %93, align 8
  %125 = getelementptr inbounds i16, i16* %124, i64 1
  store i16* %125, i16** %93, align 8
  store i16 %123, i16* %124, align 2
  %126 = getelementptr inbounds i16, i16* %113, i64 4
  %127 = load i16, i16* %122, align 2
  %128 = load i16*, i16** %93, align 8
  %129 = getelementptr inbounds i16, i16* %128, i64 1
  store i16* %129, i16** %93, align 8
  store i16 %127, i16* %128, align 2
  %130 = icmp eq i16* %126, %92
  br i1 %130, label %131, label %112

131:                                              ; preds = %112, %109
  store i8 %5, i8* %69, align 4
  br label %357

132:                                              ; preds = %66
  %133 = load i16, i16* %1, align 2
  %134 = zext i16 %133 to i32
  %135 = and i32 %134, 64512
  %136 = icmp ne i32 %135, 55296
  %137 = icmp eq i32 %2, 1
  %138 = or i1 %137, %136
  br i1 %138, label %149, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds i16, i16* %1, i64 1
  %141 = load i16, i16* %140, align 2
  %142 = zext i16 %141 to i32
  %143 = and i32 %142, 64512
  %144 = icmp eq i32 %143, 56320
  br i1 %144, label %145, label %149

145:                                              ; preds = %139
  %146 = shl nuw nsw i32 %134, 10
  %147 = add nsw i32 %146, -56613888
  %148 = add nsw i32 %147, %142
  br label %149

149:                                              ; preds = %132, %139, %145
  %150 = phi i32 [ 1, %132 ], [ 2, %145 ], [ 1, %139 ]
  %151 = phi i32 [ %134, %132 ], [ %148, %145 ], [ %134, %139 ]
  %152 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %153 = bitcast i16** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 7
  %156 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 8
  %157 = bitcast i16** %156 to i64*
  store i64 %154, i64* %157, align 8
  %158 = inttoptr i64 %154 to i16*
  %159 = getelementptr inbounds i16, i16* %158, i64 -1
  store i16* %159, i16** %155, align 8
  %160 = load i16, i16* %159, align 2
  %161 = and i16 %160, -1024
  %162 = icmp eq i16 %161, -9216
  br i1 %162, label %163, label %173

163:                                              ; preds = %149
  %164 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %165 = load i16*, i16** %164, align 8
  %166 = icmp ult i16* %165, %159
  br i1 %166, label %167, label %173

167:                                              ; preds = %163
  %168 = getelementptr inbounds i16, i16* %158, i64 -2
  %169 = load i16, i16* %168, align 2
  %170 = and i16 %169, -1024
  %171 = icmp eq i16 %170, -10240
  br i1 %171, label %172, label %173

172:                                              ; preds = %167
  store i16* %168, i16** %155, align 8
  br label %173

173:                                              ; preds = %172, %167, %163, %149
  br label %174

174:                                              ; preds = %173, %174
  %175 = tail call zeroext i8 @_ZN6icu_6916ReorderingBuffer10previousCCEv(%"class.icu_69::ReorderingBuffer"* %0) #8
  %176 = icmp ugt i8 %175, %4
  br i1 %176, label %174, label %177

177:                                              ; preds = %174
  %178 = load i16*, i16** %152, align 8
  %179 = icmp ult i32 %151, 65536
  %180 = select i1 %179, i64 1, i64 2
  %181 = getelementptr inbounds i16, i16* %178, i64 %180
  store i16* %181, i16** %152, align 8
  br label %182

182:                                              ; preds = %182, %177
  %183 = phi i16* [ %178, %177 ], [ %185, %182 ]
  %184 = phi i16* [ %181, %177 ], [ %187, %182 ]
  %185 = getelementptr inbounds i16, i16* %183, i64 -1
  %186 = load i16, i16* %185, align 2
  %187 = getelementptr inbounds i16, i16* %184, i64 -1
  store i16 %186, i16* %187, align 2
  %188 = load i16*, i16** %156, align 8
  %189 = icmp eq i16* %188, %185
  br i1 %189, label %190, label %182

190:                                              ; preds = %182
  %191 = icmp slt i32 %151, 65536
  br i1 %191, label %192, label %194

192:                                              ; preds = %190
  %193 = trunc i32 %151 to i16
  store i16 %193, i16* %185, align 2
  br label %201

194:                                              ; preds = %190
  %195 = lshr i32 %151, 10
  %196 = trunc i32 %195 to i16
  %197 = add i16 %196, -10304
  store i16 %197, i16* %185, align 2
  %198 = trunc i32 %151 to i16
  %199 = and i16 %198, 1023
  %200 = or i16 %199, -9216
  store i16 %200, i16* %183, align 2
  br label %201

201:                                              ; preds = %194, %192
  %202 = icmp ult i8 %4, 2
  br i1 %202, label %203, label %205

203:                                              ; preds = %201
  %204 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  store i16* %187, i16** %204, align 8
  br label %205

205:                                              ; preds = %201, %203
  %206 = icmp slt i32 %150, %2
  br i1 %206, label %207, label %357

207:                                              ; preds = %205
  %208 = icmp eq i8 %3, 0
  %209 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 0
  br label %210

210:                                              ; preds = %207, %356
  %211 = phi i32 [ %150, %207 ], [ %234, %356 ]
  %212 = add nsw i32 %211, 1
  %213 = sext i32 %211 to i64
  %214 = getelementptr inbounds i16, i16* %1, i64 %213
  %215 = load i16, i16* %214, align 2
  %216 = zext i16 %215 to i32
  %217 = and i32 %216, 64512
  %218 = icmp ne i32 %217, 55296
  %219 = icmp eq i32 %212, %2
  %220 = or i1 %219, %218
  br i1 %220, label %233, label %221

221:                                              ; preds = %210
  %222 = sext i32 %212 to i64
  %223 = getelementptr inbounds i16, i16* %1, i64 %222
  %224 = load i16, i16* %223, align 2
  %225 = zext i16 %224 to i32
  %226 = and i32 %225, 64512
  %227 = icmp eq i32 %226, 56320
  br i1 %227, label %228, label %233

228:                                              ; preds = %221
  %229 = add nsw i32 %211, 2
  %230 = shl nuw nsw i32 %216, 10
  %231 = add nsw i32 %230, -56613888
  %232 = add nsw i32 %231, %225
  br label %233

233:                                              ; preds = %210, %221, %228
  %234 = phi i32 [ %212, %210 ], [ %229, %228 ], [ %212, %221 ]
  %235 = phi i32 [ %216, %210 ], [ %232, %228 ], [ %216, %221 ]
  %236 = icmp slt i32 %234, %2
  br i1 %236, label %237, label %348

237:                                              ; preds = %233
  %238 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %209, align 8
  br i1 %208, label %281, label %239

239:                                              ; preds = %237
  %240 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %238, i64 0, i32 13
  %241 = load %struct.UCPTrie*, %struct.UCPTrie** %240, align 8
  %242 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %241, i64 0, i32 1
  %243 = bitcast %union.UCPTrieData* %242 to i16**
  %244 = load i16*, i16** %243, align 8
  %245 = icmp ult i32 %235, 65536
  br i1 %245, label %246, label %256

246:                                              ; preds = %239
  %247 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %241, i64 0, i32 0
  %248 = load i16*, i16** %247, align 8
  %249 = lshr i32 %235, 6
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds i16, i16* %248, i64 %250
  %252 = load i16, i16* %251, align 2
  %253 = zext i16 %252 to i32
  %254 = and i32 %235, 63
  %255 = add nuw nsw i32 %254, %253
  br label %272

256:                                              ; preds = %239
  %257 = icmp ult i32 %235, 1114112
  br i1 %257, label %258, label %268

258:                                              ; preds = %256
  %259 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %241, i64 0, i32 4
  %260 = load i32, i32* %259, align 8
  %261 = icmp sgt i32 %260, %235
  br i1 %261, label %266, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %241, i64 0, i32 3
  %264 = load i32, i32* %263, align 4
  %265 = add nsw i32 %264, -2
  br label %272

266:                                              ; preds = %258
  %267 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %241, i32 %235) #8
  br label %272

268:                                              ; preds = %256
  %269 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %241, i64 0, i32 3
  %270 = load i32, i32* %269, align 4
  %271 = add nsw i32 %270, -1
  br label %272

272:                                              ; preds = %246, %262, %266, %268
  %273 = phi i32 [ %255, %246 ], [ %271, %268 ], [ %265, %262 ], [ %267, %266 ]
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds i16, i16* %244, i64 %274
  %276 = load i16, i16* %275, align 2
  %277 = icmp ugt i16 %276, -1025
  %278 = lshr i16 %276, 1
  %279 = trunc i16 %278 to i8
  %280 = select i1 %277, i8 %279, i8 0
  br label %348

281:                                              ; preds = %237
  %282 = and i32 %235, -1024
  %283 = icmp eq i32 %282, 55296
  br i1 %283, label %326, label %284

284:                                              ; preds = %281
  %285 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %238, i64 0, i32 13
  %286 = load %struct.UCPTrie*, %struct.UCPTrie** %285, align 8
  %287 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %286, i64 0, i32 1
  %288 = bitcast %union.UCPTrieData* %287 to i16**
  %289 = load i16*, i16** %288, align 8
  %290 = icmp ult i32 %235, 65536
  br i1 %290, label %291, label %301

291:                                              ; preds = %284
  %292 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %286, i64 0, i32 0
  %293 = load i16*, i16** %292, align 8
  %294 = lshr i32 %235, 6
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds i16, i16* %293, i64 %295
  %297 = load i16, i16* %296, align 2
  %298 = zext i16 %297 to i32
  %299 = and i32 %235, 63
  %300 = add nuw nsw i32 %299, %298
  br label %317

301:                                              ; preds = %284
  %302 = icmp ult i32 %235, 1114112
  br i1 %302, label %303, label %313

303:                                              ; preds = %301
  %304 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %286, i64 0, i32 4
  %305 = load i32, i32* %304, align 8
  %306 = icmp sgt i32 %305, %235
  br i1 %306, label %311, label %307

307:                                              ; preds = %303
  %308 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %286, i64 0, i32 3
  %309 = load i32, i32* %308, align 4
  %310 = add nsw i32 %309, -2
  br label %317

311:                                              ; preds = %303
  %312 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %286, i32 %235) #8
  br label %317

313:                                              ; preds = %301
  %314 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %286, i64 0, i32 3
  %315 = load i32, i32* %314, align 4
  %316 = add nsw i32 %315, -1
  br label %317

317:                                              ; preds = %291, %307, %311, %313
  %318 = phi i32 [ %300, %291 ], [ %316, %313 ], [ %310, %307 ], [ %312, %311 ]
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds i16, i16* %289, i64 %319
  %321 = load i16, i16* %320, align 2
  %322 = icmp ugt i16 %321, -1025
  br i1 %322, label %323, label %326

323:                                              ; preds = %317
  %324 = lshr i16 %321, 1
  %325 = trunc i16 %324 to i8
  br label %348

326:                                              ; preds = %281, %317
  %327 = phi i16 [ %321, %317 ], [ 1, %281 ]
  %328 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %238, i64 0, i32 6
  %329 = load i16, i16* %328, align 2
  %330 = icmp ugt i16 %329, %327
  br i1 %330, label %348, label %331

331:                                              ; preds = %326
  %332 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %238, i64 0, i32 10
  %333 = load i16, i16* %332, align 2
  %334 = icmp ugt i16 %333, %327
  br i1 %334, label %335, label %348

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %238, i64 0, i32 15
  %337 = load i16*, i16** %336, align 8
  %338 = lshr i16 %327, 1
  %339 = zext i16 %338 to i64
  %340 = getelementptr inbounds i16, i16* %337, i64 %339
  %341 = load i16, i16* %340, align 2
  %342 = trunc i16 %341 to i8
  %343 = icmp slt i8 %342, 0
  br i1 %343, label %344, label %348

344:                                              ; preds = %335
  %345 = getelementptr inbounds i16, i16* %340, i64 -1
  %346 = load i16, i16* %345, align 2
  %347 = trunc i16 %346 to i8
  br label %348

348:                                              ; preds = %344, %335, %331, %326, %323, %233, %272
  %349 = phi i8 [ %280, %272 ], [ %5, %233 ], [ %325, %323 ], [ 0, %331 ], [ 0, %326 ], [ %347, %344 ], [ 0, %335 ]
  %350 = icmp slt i32 %235, 65536
  br i1 %350, label %351, label %354

351:                                              ; preds = %348
  %352 = trunc i32 %235 to i16
  %353 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer9appendBMPEDshR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %0, i16 zeroext %352, i8 zeroext %349, i32* dereferenceable(4) %6) #8
  br label %356

354:                                              ; preds = %348
  %355 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer19appendSupplementaryEihR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %0, i32 %235, i8 zeroext %349, i32* dereferenceable(4) %6) #8
  br label %356

356:                                              ; preds = %351, %354
  br i1 %236, label %210, label %357

357:                                              ; preds = %356, %205, %47, %131, %7
  %358 = phi i8 [ 1, %7 ], [ 1, %131 ], [ 0, %47 ], [ 1, %205 ], [ 1, %356 ]
  ret i8 %358
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nocapture, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = icmp ult i32 %1, 65536
  %5 = select i1 %4, i32 1, i32 2
  %6 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, %5
  br i1 %8, label %9, label %62

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %11 = bitcast i16** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %14 = bitcast i16** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %12, %15
  %17 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %18 = bitcast i16** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %15
  %21 = lshr exact i64 %20, 1
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 1
  %24 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %23, align 8
  tail call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %24, i32 %22) #8
  %25 = add nsw i32 %5, %22
  %26 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %23, align 8
  %27 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %26, i64 0, i32 1, i32 0, i32 0
  %28 = load i16, i16* %27, align 8
  %29 = and i16 %28, 2
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %26, i64 0, i32 1, i32 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = shl i32 %33, 1
  br label %35

35:                                               ; preds = %31, %9
  %36 = phi i32 [ %34, %31 ], [ 54, %9 ]
  %37 = icmp slt i32 %25, %36
  %38 = select i1 %37, i32 %36, i32 %25
  %39 = icmp sgt i32 %38, 256
  %40 = select i1 %39, i32 %38, i32 256
  %41 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %26, i32 %40) #8
  store i16* %41, i16** %13, align 8
  %42 = icmp eq i16* %41, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  store i32 7, i32* %2, align 4
  br label %91

44:                                               ; preds = %35
  %45 = shl i64 %16, 31
  %46 = ashr i64 %45, 32
  %47 = getelementptr inbounds i16, i16* %41, i64 %46
  store i16* %47, i16** %10, align 8
  %48 = shl i64 %20, 31
  %49 = ashr exact i64 %48, 32
  %50 = getelementptr inbounds i16, i16* %41, i64 %49
  store i16* %50, i16** %17, align 8
  %51 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %23, align 8
  %52 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %51, i64 0, i32 1, i32 0, i32 0
  %53 = load i16, i16* %52, align 8
  %54 = and i16 %53, 2
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %51, i64 0, i32 1, i32 0, i32 2
  %58 = load i32, i32* %57, align 8
  br label %59

59:                                               ; preds = %44, %56
  %60 = phi i32 [ %58, %56 ], [ 27, %44 ]
  %61 = sub nsw i32 %60, %22
  store i32 %61, i32* %6, align 8
  br label %62

62:                                               ; preds = %59, %3
  %63 = phi i32 [ %61, %59 ], [ %7, %3 ]
  %64 = sub nsw i32 %63, %5
  store i32 %64, i32* %6, align 8
  br i1 %4, label %65, label %72

65:                                               ; preds = %62
  %66 = trunc i32 %1 to i16
  %67 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %68 = load i16*, i16** %67, align 8
  %69 = getelementptr inbounds i16, i16* %68, i64 1
  store i16* %69, i16** %67, align 8
  store i16 %66, i16* %68, align 2
  %70 = bitcast i16** %67 to i64*
  %71 = load i64, i64* %70, align 8
  br label %86

72:                                               ; preds = %62
  %73 = lshr i32 %1, 10
  %74 = trunc i32 %73 to i16
  %75 = add i16 %74, -10304
  %76 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %77 = load i16*, i16** %76, align 8
  store i16 %75, i16* %77, align 2
  %78 = trunc i32 %1 to i16
  %79 = and i16 %78, 1023
  %80 = or i16 %79, -9216
  %81 = load i16*, i16** %76, align 8
  %82 = getelementptr inbounds i16, i16* %81, i64 1
  store i16 %80, i16* %82, align 2
  %83 = load i16*, i16** %76, align 8
  %84 = getelementptr inbounds i16, i16* %83, i64 2
  store i16* %84, i16** %76, align 8
  %85 = ptrtoint i16* %84 to i64
  br label %86

86:                                               ; preds = %72, %65
  %87 = phi i64 [ %85, %72 ], [ %71, %65 ]
  %88 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 6
  store i8 0, i8* %88, align 4
  %89 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %90 = bitcast i16** %89 to i64*
  store i64 %87, i64* %90, align 8
  br label %91

91:                                               ; preds = %43, %86
  %92 = phi i8 [ 1, %86 ], [ 0, %43 ]
  ret i8 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* nocapture, i16*, i16*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i16* %1, %2
  br i1 %5, label %85, label %6

6:                                                ; preds = %4
  %7 = ptrtoint i16* %2 to i64
  %8 = ptrtoint i16* %1 to i64
  %9 = sub i64 %7, %8
  %10 = lshr exact i64 %9, 1
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %11
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %17 = load i16*, i16** %16, align 8
  br label %71

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %20 = bitcast i16** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %23 = bitcast i16** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %27 = bitcast i16** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %24
  %30 = lshr exact i64 %29, 1
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 1
  %33 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %32, align 8
  tail call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %33, i32 %31) #8
  %34 = add nsw i32 %31, %11
  %35 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %32, align 8
  %36 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load i16, i16* %36, align 8
  %38 = and i16 %37, 2
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %18
  %41 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %35, i64 0, i32 1, i32 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = shl i32 %42, 1
  br label %44

44:                                               ; preds = %40, %18
  %45 = phi i32 [ %43, %40 ], [ 54, %18 ]
  %46 = icmp slt i32 %34, %45
  %47 = select i1 %46, i32 %45, i32 %34
  %48 = icmp sgt i32 %47, 256
  %49 = select i1 %48, i32 %47, i32 256
  %50 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %35, i32 %49) #8
  store i16* %50, i16** %22, align 8
  %51 = icmp eq i16* %50, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %44
  store i32 7, i32* %3, align 4
  br label %85

53:                                               ; preds = %44
  %54 = shl i64 %25, 31
  %55 = ashr i64 %54, 32
  %56 = getelementptr inbounds i16, i16* %50, i64 %55
  store i16* %56, i16** %19, align 8
  %57 = shl i64 %29, 31
  %58 = ashr exact i64 %57, 32
  %59 = getelementptr inbounds i16, i16* %50, i64 %58
  store i16* %59, i16** %26, align 8
  %60 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %32, align 8
  %61 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %60, i64 0, i32 1, i32 0, i32 0
  %62 = load i16, i16* %61, align 8
  %63 = and i16 %62, 2
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %53
  %66 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %60, i64 0, i32 1, i32 0, i32 2
  %67 = load i32, i32* %66, align 8
  br label %68

68:                                               ; preds = %53, %65
  %69 = phi i32 [ %67, %65 ], [ 27, %53 ]
  %70 = sub nsw i32 %69, %31
  store i32 %70, i32* %12, align 8
  br label %71

71:                                               ; preds = %15, %68
  %72 = phi i16* [ %17, %15 ], [ %59, %68 ]
  %73 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %74 = tail call i16* @u_memcpy_69(i16* %72, i16* %1, i32 %11) #8
  %75 = load i16*, i16** %73, align 8
  %76 = shl i64 %9, 31
  %77 = ashr exact i64 %76, 32
  %78 = getelementptr inbounds i16, i16* %75, i64 %77
  store i16* %78, i16** %73, align 8
  %79 = load i32, i32* %12, align 8
  %80 = sub nsw i32 %79, %11
  store i32 %80, i32* %12, align 8
  %81 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 6
  store i8 0, i8* %81, align 4
  %82 = ptrtoint i16* %78 to i64
  %83 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %84 = bitcast i16** %83 to i64*
  store i64 %82, i64* %84, align 8
  br label %85

85:                                               ; preds = %52, %71, %4
  %86 = phi i8 [ 1, %4 ], [ 1, %71 ], [ 0, %52 ]
  ret i8 %86
}

declare i16* @u_memcpy_69(i16*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6916ReorderingBuffer6removeEv(%"class.icu_69::ReorderingBuffer"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %3 = bitcast i16** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %6 = bitcast i16** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %8 = bitcast i16** %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 1
  %10 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load i16, i16* %11, align 8
  %13 = and i16 %12, 2
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %10, i64 0, i32 1, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  br label %18

18:                                               ; preds = %1, %15
  %19 = phi i32 [ %17, %15 ], [ 27, %1 ]
  %20 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 5
  store i32 %19, i32* %20, align 8
  %21 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 6
  store i8 0, i8* %21, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6916ReorderingBuffer12removeSuffixEi(%"class.icu_69::ReorderingBuffer"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %7 = load i16*, i16** %6, align 8
  %8 = ptrtoint i16* %5 to i64
  %9 = ptrtoint i16* %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 1
  %12 = icmp sgt i64 %11, %3
  br i1 %12, label %13, label %20

13:                                               ; preds = %2
  %14 = sub nsw i64 0, %3
  %15 = getelementptr inbounds i16, i16* %5, i64 %14
  store i16* %15, i16** %4, align 8
  %16 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 5
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, %1
  store i32 %18, i32* %16, align 8
  %19 = ptrtoint i16* %15 to i64
  br label %33

20:                                               ; preds = %2
  store i16* %7, i16** %4, align 8
  %21 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 1
  %22 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %21, align 8
  %23 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %22, i64 0, i32 1, i32 0, i32 0
  %24 = load i16, i16* %23, align 8
  %25 = and i16 %24, 2
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %22, i64 0, i32 1, i32 0, i32 2
  %29 = load i32, i32* %28, align 8
  br label %30

30:                                               ; preds = %20, %27
  %31 = phi i32 [ %29, %27 ], [ 27, %20 ]
  %32 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 5
  store i32 %31, i32* %32, align 8
  br label %33

33:                                               ; preds = %30, %13
  %34 = phi i64 [ %9, %30 ], [ %19, %13 ]
  %35 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 6
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %37 = bitcast i16** %36 to i64*
  store i64 %34, i64* %37, align 8
  ret void
}

declare void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6916ReorderingBuffer12skipPreviousEv(%"class.icu_69::ReorderingBuffer"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 7
  %3 = bitcast i16** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 8
  %6 = bitcast i16** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = inttoptr i64 %4 to i16*
  %8 = getelementptr inbounds i16, i16* %7, i64 -1
  store i16* %8, i16** %2, align 8
  %9 = load i16, i16* %8, align 2
  %10 = and i16 %9, -1024
  %11 = icmp eq i16 %10, -9216
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %14 = load i16*, i16** %13, align 8
  %15 = icmp ult i16* %14, %8
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = getelementptr inbounds i16, i16* %7, i64 -2
  %18 = load i16, i16* %17, align 2
  %19 = and i16 %18, -1024
  %20 = icmp eq i16 %19, -10240
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  store i16* %17, i16** %2, align 8
  br label %22

22:                                               ; preds = %21, %16, %12, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6915Normalizer2ImplD2Ev(%"class.icu_69::Normalizer2Impl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6915Normalizer2ImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 18
  %4 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %3, align 8
  %5 = icmp eq %"struct.icu_69::CanonIterData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %4, i64 0, i32 0
  %8 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %7, align 8
  tail call void @umutablecptrie_close_69(%struct.UMutableCPTrie* %8) #8
  %9 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %4, i64 0, i32 1
  %10 = load %struct.UCPTrie*, %struct.UCPTrie** %9, align 8
  tail call void @ucptrie_close_69(%struct.UCPTrie* %10) #8
  %11 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %4, i64 0, i32 2
  tail call void @_ZN6icu_697UVectorD1Ev(%"class.icu_69::UVector"* %11) #8
  %12 = bitcast %"struct.icu_69::CanonIterData"* %4 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %12) #8
  br label %13

13:                                               ; preds = %6, %1
  %14 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %14) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6915Normalizer2ImplD0Ev(%"class.icu_69::Normalizer2Impl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6915Normalizer2ImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 18
  %4 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %3, align 8
  %5 = icmp eq %"struct.icu_69::CanonIterData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %4, i64 0, i32 0
  %8 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %7, align 8
  tail call void @umutablecptrie_close_69(%struct.UMutableCPTrie* %8) #8
  %9 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %4, i64 0, i32 1
  %10 = load %struct.UCPTrie*, %struct.UCPTrie** %9, align 8
  tail call void @ucptrie_close_69(%struct.UCPTrie* %10) #8
  %11 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %4, i64 0, i32 2
  tail call void @_ZN6icu_697UVectorD1Ev(%"class.icu_69::UVector"* %11) #8
  %12 = bitcast %"struct.icu_69::CanonIterData"* %4 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %12) #8
  br label %13

13:                                               ; preds = %1, %6
  %14 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %14) #8
  %15 = bitcast %"class.icu_69::Normalizer2Impl"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %15) #8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6915Normalizer2Impl4initEPKiPK7UCPTriePKtPKh(%"class.icu_69::Normalizer2Impl"* nocapture, i32* nocapture readonly, %struct.UCPTrie*, i16*, i8*) local_unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds i32, i32* %1, i64 8
  %7 = load i32, i32* %6, align 4
  %8 = trunc i32 %7 to i16
  %9 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  store i16 %8, i16* %9, align 8
  %10 = getelementptr inbounds i32, i32* %1, i64 9
  %11 = load i32, i32* %10, align 4
  %12 = trunc i32 %11 to i16
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 2
  store i16 %12, i16* %13, align 2
  %14 = getelementptr inbounds i32, i32* %1, i64 18
  %15 = load i32, i32* %14, align 4
  %16 = trunc i32 %15 to i16
  %17 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 3
  store i16 %16, i16* %17, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 10
  %19 = load i32, i32* %18, align 4
  %20 = trunc i32 %19 to i16
  %21 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds i32, i32* %1, i64 14
  %23 = load i32, i32* %22, align 4
  %24 = trunc i32 %23 to i16
  %25 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 5
  store i16 %24, i16* %25, align 8
  %26 = getelementptr inbounds i32, i32* %1, i64 11
  %27 = load i32, i32* %26, align 4
  %28 = trunc i32 %27 to i16
  %29 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 6
  store i16 %28, i16* %29, align 2
  %30 = getelementptr inbounds i32, i32* %1, i64 15
  %31 = load i32, i32* %30, align 4
  %32 = trunc i32 %31 to i16
  %33 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 7
  store i16 %32, i16* %33, align 4
  %34 = getelementptr inbounds i32, i32* %1, i64 16
  %35 = load i32, i32* %34, align 4
  %36 = trunc i32 %35 to i16
  %37 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  store i16 %36, i16* %37, align 2
  %38 = getelementptr inbounds i32, i32* %1, i64 17
  %39 = load i32, i32* %38, align 4
  %40 = trunc i32 %39 to i16
  %41 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 9
  store i16 %40, i16* %41, align 8
  %42 = getelementptr inbounds i32, i32* %1, i64 12
  %43 = load i32, i32* %42, align 4
  %44 = trunc i32 %43 to i16
  %45 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  store i16 %44, i16* %45, align 2
  %46 = getelementptr inbounds i32, i32* %1, i64 13
  %47 = load i32, i32* %46, align 4
  %48 = trunc i32 %47 to i16
  %49 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  store i16 %48, i16* %49, align 2
  %50 = lshr i32 %47, 3
  %51 = trunc i32 %50 to i16
  %52 = and i16 %51, 8191
  %53 = add nsw i16 %52, -65
  %54 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 11
  store i16 %53, i16* %54, align 4
  %55 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  store %struct.UCPTrie* %2, %struct.UCPTrie** %55, align 8
  %56 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 14
  store i16* %3, i16** %56, align 8
  %57 = and i32 %47, 65535
  %58 = sub nsw i32 64512, %57
  %59 = ashr i32 %58, 1
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %3, i64 %60
  %62 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  store i16* %61, i16** %62, align 8
  %63 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 16
  store i8* %4, i8** %63, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6915Normalizer2Impl12addLcccCharsERNS_10UnicodeSetE(%"class.icu_69::Normalizer2Impl"* nocapture readonly, %"class.icu_69::UnicodeSet"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 -1431655766, i32* %3, align 4
  %5 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %6 = load %struct.UCPTrie*, %struct.UCPTrie** %5, align 8
  %7 = call i32 @ucptrie_getRange_69(%struct.UCPTrie* %6, i32 0, i32 1, i32 1, i32 (i8*, i32)* null, i8* null, i32* nonnull %3) #8
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %9, label %61

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %12 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 16
  br label %14

14:                                               ; preds = %9, %56
  %15 = phi i32 [ %7, %9 ], [ %59, %56 ]
  %16 = phi i32 [ 0, %9 ], [ %57, %56 ]
  %17 = load i32, i32* %3, align 4
  %18 = icmp ugt i32 %17, 64512
  %19 = icmp ne i32 %17, 65024
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEii(%"class.icu_69::UnicodeSet"* %1, i32 %16, i32 %15) #8
  br label %56

23:                                               ; preds = %14
  %24 = load i16, i16* %10, align 2
  %25 = zext i16 %24 to i32
  %26 = icmp ult i32 %17, %25
  br i1 %26, label %56, label %27

27:                                               ; preds = %23
  %28 = load i16, i16* %11, align 2
  %29 = zext i16 %28 to i32
  %30 = icmp ult i32 %17, %29
  br i1 %30, label %31, label %56

31:                                               ; preds = %27
  %32 = load i16, i16* %12, align 8
  %33 = zext i16 %32 to i32
  %34 = icmp slt i32 %16, %33
  br i1 %34, label %56, label %35

35:                                               ; preds = %31
  %36 = icmp slt i32 %16, 65536
  br i1 %36, label %37, label %51

37:                                               ; preds = %35
  %38 = load i8*, i8** %13, align 8
  %39 = ashr i32 %16, 8
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %56, label %44

44:                                               ; preds = %37
  %45 = zext i8 %42 to i32
  %46 = lshr i32 %16, 5
  %47 = and i32 %46, 7
  %48 = shl i32 1, %47
  %49 = and i32 %48, %45
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %35, %44
  %52 = call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %0, i32 %16) #8
  %53 = icmp ugt i16 %52, 255
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEii(%"class.icu_69::UnicodeSet"* %1, i32 %16, i32 %15) #8
  br label %56

56:                                               ; preds = %37, %44, %31, %51, %54, %23, %27, %21
  %57 = add nuw nsw i32 %15, 1
  %58 = load %struct.UCPTrie*, %struct.UCPTrie** %5, align 8
  %59 = call i32 @ucptrie_getRange_69(%struct.UCPTrie* %58, i32 %57, i32 1, i32 1, i32 (i8*, i32)* null, i8* null, i32* nonnull %3) #8
  %60 = icmp sgt i32 %59, -1
  br i1 %60, label %14, label %61

61:                                               ; preds = %56, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret void
}

declare i32 @ucptrie_getRange_69(%struct.UCPTrie*, i32, i32, i32, i32 (i8*, i32)*, i8*, i32*) local_unnamed_addr #1

declare dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEii(%"class.icu_69::UnicodeSet"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6915Normalizer2Impl17addPropertyStartsEPK9USetAdderR10UErrorCode(%"class.icu_69::Normalizer2Impl"* nocapture readonly, %struct.USetAdder* nocapture readonly, i32* nocapture readnone dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 -1431655766, i32* %4, align 4
  %6 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %7 = load %struct.UCPTrie*, %struct.UCPTrie** %6, align 8
  %8 = call i32 @ucptrie_getRange_69(%struct.UCPTrie* %7, i32 0, i32 1, i32 1, i32 (i8*, i32)* null, i8* null, i32* nonnull %4) #8
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %10, label %17

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 1
  %12 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 0
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %14 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %15 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 16
  br label %22

17:                                               ; preds = %98, %3
  %18 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 1
  %19 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %18, align 8
  %20 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 0
  %21 = load %struct.USet*, %struct.USet** %20, align 8
  br label %104

22:                                               ; preds = %10, %98
  %23 = phi i32 [ %8, %10 ], [ %101, %98 ]
  %24 = phi i32 [ 0, %10 ], [ %99, %98 ]
  %25 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %11, align 8
  %26 = load %struct.USet*, %struct.USet** %12, align 8
  call void %25(%struct.USet* %26, i32 %24) #8
  %27 = icmp eq i32 %24, %23
  br i1 %27, label %98, label %28

28:                                               ; preds = %22
  %29 = load i32, i32* %4, align 4
  %30 = trunc i32 %29 to i16
  %31 = load i16, i16* %13, align 2
  %32 = icmp ugt i16 %31, %30
  br i1 %32, label %98, label %33

33:                                               ; preds = %28
  %34 = load i16, i16* %14, align 2
  %35 = icmp ugt i16 %34, %30
  %36 = and i32 %29, 6
  %37 = icmp ugt i32 %36, 2
  %38 = and i1 %37, %35
  br i1 %38, label %39, label %98

39:                                               ; preds = %33
  %40 = load i16, i16* %15, align 8
  %41 = zext i16 %40 to i32
  %42 = icmp slt i32 %24, %41
  br i1 %42, label %61, label %43

43:                                               ; preds = %39
  %44 = icmp slt i32 %24, 65536
  br i1 %44, label %45, label %59

45:                                               ; preds = %43
  %46 = load i8*, i8** %16, align 8
  %47 = ashr i32 %24, 8
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %61, label %52

52:                                               ; preds = %45
  %53 = zext i8 %50 to i32
  %54 = lshr i32 %24, 5
  %55 = and i32 %54, 7
  %56 = shl i32 1, %55
  %57 = and i32 %56, %53
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %52, %43
  %60 = call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %0, i32 %24) #8
  br label %61

61:                                               ; preds = %39, %45, %52, %59
  %62 = phi i16 [ %60, %59 ], [ 0, %39 ], [ 0, %52 ], [ 0, %45 ]
  %63 = icmp slt i32 %24, %23
  br i1 %63, label %64, label %98

64:                                               ; preds = %61, %95
  %65 = phi i32 [ %67, %95 ], [ %24, %61 ]
  %66 = phi i16 [ %96, %95 ], [ %62, %61 ]
  %67 = add i32 %65, 1
  %68 = load i16, i16* %15, align 8
  %69 = zext i16 %68 to i32
  %70 = icmp slt i32 %67, %69
  br i1 %70, label %89, label %71

71:                                               ; preds = %64
  %72 = icmp slt i32 %67, 65536
  br i1 %72, label %73, label %87

73:                                               ; preds = %71
  %74 = load i8*, i8** %16, align 8
  %75 = ashr i32 %67, 8
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %73
  %81 = zext i8 %78 to i32
  %82 = lshr i32 %67, 5
  %83 = and i32 %82, 7
  %84 = shl i32 1, %83
  %85 = and i32 %84, %81
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %80, %71
  %88 = call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %0, i32 %67) #8
  br label %89

89:                                               ; preds = %64, %73, %80, %87
  %90 = phi i16 [ %88, %87 ], [ 0, %64 ], [ 0, %80 ], [ 0, %73 ]
  %91 = icmp eq i16 %90, %66
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %11, align 8
  %94 = load %struct.USet*, %struct.USet** %12, align 8
  call void %93(%struct.USet* %94, i32 %67) #8
  br label %95

95:                                               ; preds = %89, %92
  %96 = phi i16 [ %90, %92 ], [ %66, %89 ]
  %97 = icmp eq i32 %67, %23
  br i1 %97, label %98, label %64

98:                                               ; preds = %95, %61, %33, %28, %22
  %99 = add nsw i32 %23, 1
  %100 = load %struct.UCPTrie*, %struct.UCPTrie** %6, align 8
  %101 = call i32 @ucptrie_getRange_69(%struct.UCPTrie* %100, i32 %99, i32 1, i32 1, i32 (i8*, i32)* null, i8* null, i32* nonnull %4) #8
  %102 = icmp sgt i32 %101, -1
  br i1 %102, label %22, label %17

103:                                              ; preds = %104
  call void %114(%struct.USet* %115, i32 55204) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret void

104:                                              ; preds = %17, %104
  %105 = phi %struct.USet* [ %21, %17 ], [ %115, %104 ]
  %106 = phi void (%struct.USet*, i32)* [ %19, %17 ], [ %114, %104 ]
  %107 = phi i32 [ 44032, %17 ], [ %112, %104 ]
  call void %106(%struct.USet* %105, i32 %107) #8
  %108 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %18, align 8
  %109 = load %struct.USet*, %struct.USet** %20, align 8
  %110 = add nuw nsw i32 %107, 1
  call void %108(%struct.USet* %109, i32 %110) #8
  %111 = add nuw nsw i32 %107, 28
  %112 = and i32 %111, 65535
  %113 = icmp ult i32 %112, 55204
  %114 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %18, align 8
  %115 = load %struct.USet*, %struct.USet** %20, align 8
  br i1 %113, label %104, label %103
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6915Normalizer2Impl26addCanonIterPropertyStartsEPK9USetAdderR10UErrorCode(%"class.icu_69::Normalizer2Impl"*, %struct.USetAdder* nocapture readonly, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 17
  %6 = load i32, i32* %2, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %49

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.icu_69::UInitOnce", %"struct.icu_69::UInitOnce"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) %5) #8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  tail call void @_ZN6icu_6917InitCanonIterData6doInitEPNS_15Normalizer2ImplER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i32* dereferenceable(4) %2) #8
  %16 = load i32, i32* %2, align 4
  %17 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 17, i32 1
  store i32 %16, i32* %17, align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) %5) #8
  br label %23

18:                                               ; preds = %12, %8
  %19 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 17, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  store i32 %20, i32* %2, align 4
  br label %49

23:                                               ; preds = %15, %18
  %24 = load i32, i32* %2, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %49, label %26

26:                                               ; preds = %23
  %27 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #8
  store i32 -1431655766, i32* %4, align 4
  %28 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 18
  %29 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %28, align 8
  %30 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %29, i64 0, i32 1
  %31 = load %struct.UCPTrie*, %struct.UCPTrie** %30, align 8
  %32 = call i32 @ucptrie_getRange_69(%struct.UCPTrie* %31, i32 0, i32 0, i32 0, i32 (i8*, i32)* nonnull @_ZN6icu_69L20segmentStarterMapperEPKvj, i8* null, i32* nonnull %4) #8
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %34, label %48

34:                                               ; preds = %26
  %35 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 1
  %36 = getelementptr inbounds %struct.USetAdder, %struct.USetAdder* %1, i64 0, i32 0
  br label %37

37:                                               ; preds = %34, %37
  %38 = phi i32 [ %32, %34 ], [ %46, %37 ]
  %39 = phi i32 [ 0, %34 ], [ %42, %37 ]
  %40 = load void (%struct.USet*, i32)*, void (%struct.USet*, i32)** %35, align 8
  %41 = load %struct.USet*, %struct.USet** %36, align 8
  call void %40(%struct.USet* %41, i32 %39) #8
  %42 = add nuw nsw i32 %38, 1
  %43 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %28, align 8
  %44 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %43, i64 0, i32 1
  %45 = load %struct.UCPTrie*, %struct.UCPTrie** %44, align 8
  %46 = call i32 @ucptrie_getRange_69(%struct.UCPTrie* %45, i32 %42, i32 0, i32 0, i32 (i8*, i32)* nonnull @_ZN6icu_69L20segmentStarterMapperEPKvj, i8* null, i32* nonnull %4) #8
  %47 = icmp sgt i32 %46, -1
  br i1 %47, label %37, label %48

48:                                               ; preds = %37, %26
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #8
  br label %49

49:                                               ; preds = %22, %3, %23, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl19ensureCanonIterDataER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 17
  %4 = load i32, i32* %1, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.icu_69::UInitOnce", %"struct.icu_69::UInitOnce"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = tail call signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) %3) #8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  tail call void @_ZN6icu_6917InitCanonIterData6doInitEPNS_15Normalizer2ImplER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i32* dereferenceable(4) %1) #8
  %14 = load i32, i32* %1, align 4
  %15 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 17, i32 1
  store i32 %14, i32* %15, align 4
  tail call void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8) %3) #8
  br label %21

16:                                               ; preds = %10, %6
  %17 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 17, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  store i32 %18, i32* %1, align 4
  br label %21

21:                                               ; preds = %2, %13, %16, %20
  %22 = load i32, i32* %1, align 4
  %23 = icmp slt i32 %22, 1
  %24 = zext i1 %23 to i8
  ret i8 %24
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN6icu_69L20segmentStarterMapperEPKvj(i8* nocapture readnone, i32) #6 {
  %3 = and i32 %1, -2147483648
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6icu_6915Normalizer2Impl30copyLowPrefixFromNulTerminatedEPKDsiPNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* nocapture readnone, i16*, i32, %"class.icu_69::ReorderingBuffer"*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  br label %6

6:                                                ; preds = %6, %5
  %7 = phi i16* [ %1, %5 ], [ %8, %6 ]
  %8 = getelementptr inbounds i16, i16* %7, i64 1
  %9 = load i16, i16* %7, align 2
  %10 = zext i16 %9 to i32
  %11 = icmp slt i32 %10, %2
  %12 = icmp ne i16 %9, 0
  %13 = and i1 %12, %11
  br i1 %13, label %6, label %14

14:                                               ; preds = %6
  %15 = icmp ne i16* %7, %1
  %16 = icmp ne %"class.icu_69::ReorderingBuffer"* %3, null
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %3, i16* %1, i16* %7, i32* dereferenceable(4) %4)
  br label %20

20:                                               ; preds = %18, %14
  ret i16* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZNK6icu_6915Normalizer2Impl9decomposeERKNS_13UnicodeStringERS1_R10UErrorCode(%"class.icu_69::Normalizer2Impl"*, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::UnicodeString"* returned dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::ReorderingBuffer", align 8
  %6 = load i32, i32* %3, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"* %2) #8
  br label %75

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %10, i64 0, i32 0, i32 0
  %12 = load i16, i16* %11, align 8
  %13 = sext i16 %12 to i32
  %14 = and i32 %13, 17
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %27

16:                                               ; preds = %9
  %17 = and i32 %13, 2
  %18 = icmp eq i32 %17, 0
  %19 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %10 to %struct.anon*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %19, i64 0, i32 1, i64 0
  %21 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 3
  %22 = load i16*, i16** %21, align 8
  %23 = select i1 %18, i16* %22, i16* %20
  %24 = icmp eq %"class.icu_69::UnicodeString"* %2, %1
  %25 = icmp eq i16* %23, null
  %26 = or i1 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %9, %16
  store i32 1, i32* %3, align 4
  tail call void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"* %2) #8
  br label %75

28:                                               ; preds = %16
  %29 = icmp slt i16 %12, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %28
  %31 = lshr i16 %12, 5
  %32 = zext i16 %31 to i64
  %33 = zext i16 %31 to i32
  br label %38

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %1, i64 0, i32 1, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  br label %38

38:                                               ; preds = %30, %34
  %39 = phi i64 [ %32, %30 ], [ %37, %34 ]
  %40 = phi i32 [ %33, %30 ], [ %36, %34 ]
  %41 = getelementptr inbounds i16, i16* %23, i64 %39
  %42 = icmp slt i32 %40, 0
  %43 = icmp ne i16* %41, null
  %44 = and i1 %43, %42
  %45 = trunc i64 %39 to i32
  %46 = select i1 %44, i32 %45, i32 %40
  %47 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %2, i64 0, i32 1, i32 0, i32 0
  %48 = load i16, i16* %47, align 8
  %49 = and i16 %48, 1
  %50 = icmp eq i16 %49, 0
  %51 = and i16 %48, 31
  %52 = select i1 %50, i16 %51, i16 2
  store i16 %52, i16* %47, align 8
  %53 = bitcast %"class.icu_69::ReorderingBuffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %53) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 64, i1 false) #8
  %54 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 0
  store %"class.icu_69::Normalizer2Impl"* %0, %"class.icu_69::Normalizer2Impl"** %54, align 8
  %55 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 1
  store %"class.icu_69::UnicodeString"* %2, %"class.icu_69::UnicodeString"** %55, align 8
  %56 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 2
  %57 = bitcast i16** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 29, i1 false) #8
  %58 = call signext i8 @_ZN6icu_6916ReorderingBuffer4initEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %5, i32 %46, i32* dereferenceable(4) %3) #8
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %38
  %61 = call i16* @_ZNK6icu_6915Normalizer2Impl9decomposeEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i16* nonnull %23, i16* %41, %"class.icu_69::ReorderingBuffer"* nonnull %5, i32* dereferenceable(4) %3) #8
  br label %62

62:                                               ; preds = %60, %38
  %63 = load i16*, i16** %56, align 8
  %64 = icmp eq i16* %63, null
  br i1 %64, label %74, label %65

65:                                               ; preds = %62
  %66 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %55, align 8
  %67 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 4
  %68 = bitcast i16** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = ptrtoint i16* %63 to i64
  %71 = sub i64 %69, %70
  %72 = lshr exact i64 %71, 1
  %73 = trunc i64 %72 to i32
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %66, i32 %73) #8
  br label %74

74:                                               ; preds = %62, %65
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %53) #8
  br label %75

75:                                               ; preds = %27, %74, %8
  ret %"class.icu_69::UnicodeString"* %2
}

declare void @_ZN6icu_6913UnicodeString10setToBogusEv(%"class.icu_69::UnicodeString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6915Normalizer2Impl9decomposeEPKDsS2_RNS_13UnicodeStringEiR10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i16*, i16*, %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.icu_69::ReorderingBuffer", align 8
  %8 = icmp slt i32 %4, 0
  %9 = icmp ne i16* %2, null
  %10 = and i1 %9, %8
  %11 = ptrtoint i16* %2 to i64
  %12 = ptrtoint i16* %1 to i64
  %13 = sub i64 %11, %12
  %14 = lshr exact i64 %13, 1
  %15 = trunc i64 %14 to i32
  %16 = select i1 %10, i32 %15, i32 %4
  %17 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %3, i64 0, i32 1, i32 0, i32 0
  %18 = load i16, i16* %17, align 8
  %19 = and i16 %18, 1
  %20 = icmp eq i16 %19, 0
  %21 = and i16 %18, 31
  %22 = select i1 %20, i16 %21, i16 2
  store i16 %22, i16* %17, align 8
  %23 = bitcast %"class.icu_69::ReorderingBuffer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 64, i1 false)
  %24 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %7, i64 0, i32 0
  store %"class.icu_69::Normalizer2Impl"* %0, %"class.icu_69::Normalizer2Impl"** %24, align 8
  %25 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %7, i64 0, i32 1
  store %"class.icu_69::UnicodeString"* %3, %"class.icu_69::UnicodeString"** %25, align 8
  %26 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %7, i64 0, i32 2
  %27 = bitcast i16** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 29, i1 false) #8
  %28 = call signext i8 @_ZN6icu_6916ReorderingBuffer4initEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %7, i32 %16, i32* dereferenceable(4) %5)
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %6
  %31 = call i16* @_ZNK6icu_6915Normalizer2Impl9decomposeEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i16* %1, i16* %2, %"class.icu_69::ReorderingBuffer"* nonnull %7, i32* dereferenceable(4) %5)
  br label %32

32:                                               ; preds = %6, %30
  %33 = load i16*, i16** %26, align 8
  %34 = icmp eq i16* %33, null
  br i1 %34, label %44, label %35

35:                                               ; preds = %32
  %36 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %25, align 8
  %37 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %7, i64 0, i32 4
  %38 = bitcast i16** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = ptrtoint i16* %33 to i64
  %41 = sub i64 %39, %40
  %42 = lshr exact i64 %41, 1
  %43 = trunc i64 %42 to i32
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %36, i32 %43) #8
  br label %44

44:                                               ; preds = %32, %35
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6icu_6915Normalizer2Impl9decomposeEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16*, i16* readnone, %"class.icu_69::ReorderingBuffer"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %7 = load i16, i16* %6, align 8
  %8 = icmp eq i16* %2, null
  br i1 %8, label %9, label %27

9:                                                ; preds = %5, %9
  %10 = phi i16* [ %11, %9 ], [ %1, %5 ]
  %11 = getelementptr inbounds i16, i16* %10, i64 1
  %12 = load i16, i16* %10, align 2
  %13 = icmp ult i16 %12, %7
  %14 = icmp ne i16 %12, 0
  %15 = and i1 %14, %13
  br i1 %15, label %9, label %16

16:                                               ; preds = %9
  %17 = icmp ne i16* %10, %1
  %18 = icmp ne %"class.icu_69::ReorderingBuffer"* %3, null
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %3, i16* %1, i16* %10, i32* dereferenceable(4) %4) #8
  br label %22

22:                                               ; preds = %16, %20
  %23 = load i32, i32* %4, align 4
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %159

25:                                               ; preds = %22
  %26 = tail call i16* @u_strchr_69(i16* %10, i16 zeroext 0) #8
  br label %27

27:                                               ; preds = %25, %5
  %28 = phi i16* [ %26, %25 ], [ %2, %5 ]
  %29 = phi i16* [ %10, %25 ], [ %1, %5 ]
  %30 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %31 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %32 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %33 = icmp eq %"class.icu_69::ReorderingBuffer"* %3, null
  br label %34

34:                                               ; preds = %139, %27
  %35 = phi i16* [ %29, %27 ], [ %135, %139 ]
  %36 = phi i32 [ 0, %27 ], [ %119, %139 ]
  %37 = phi i16 [ 0, %27 ], [ %120, %139 ]
  %38 = phi i16* [ %29, %27 ], [ %140, %139 ]
  %39 = phi i8 [ 0, %27 ], [ %141, %139 ]
  %40 = icmp eq i16* %35, %28
  br i1 %40, label %117, label %41

41:                                               ; preds = %34, %108
  %42 = phi i16 [ %111, %108 ], [ %37, %34 ]
  %43 = phi i16* [ %109, %108 ], [ %35, %34 ]
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = icmp ult i16 %44, %7
  br i1 %46, label %69, label %47

47:                                               ; preds = %41
  %48 = load %struct.UCPTrie*, %struct.UCPTrie** %31, align 8
  %49 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %48, i64 0, i32 1
  %50 = bitcast %union.UCPTrieData* %49 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %48, i64 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = lshr i32 %45, 6
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %53, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = and i32 %45, 63
  %60 = add nuw nsw i32 %59, %58
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i16, i16* %51, i64 %61
  %63 = load i16, i16* %62, align 2
  %64 = load i16, i16* %32, align 2
  %65 = icmp ule i16 %64, %63
  %66 = or i16 %63, 512
  %67 = icmp ne i16 %66, -512
  %68 = and i1 %65, %67
  br i1 %68, label %72, label %69

69:                                               ; preds = %47, %41
  %70 = phi i16 [ %42, %41 ], [ %63, %47 ]
  %71 = getelementptr inbounds i16, i16* %43, i64 1
  br label %108

72:                                               ; preds = %47
  %73 = and i32 %45, 64512
  %74 = icmp eq i32 %73, 55296
  br i1 %74, label %75, label %113

75:                                               ; preds = %72
  %76 = getelementptr inbounds i16, i16* %43, i64 1
  %77 = icmp eq i16* %76, %28
  br i1 %77, label %115, label %78

78:                                               ; preds = %75
  %79 = load i16, i16* %76, align 2
  %80 = zext i16 %79 to i32
  %81 = and i32 %80, 64512
  %82 = icmp eq i32 %81, 56320
  br i1 %82, label %83, label %108

83:                                               ; preds = %78
  %84 = shl nuw nsw i32 %45, 10
  %85 = add nsw i32 %84, -56613888
  %86 = add nsw i32 %85, %80
  %87 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %48, i64 0, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = icmp slt i32 %86, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %48, i64 0, i32 3
  %92 = load i32, i32* %91, align 4
  %93 = add nsw i32 %92, -2
  br label %97

94:                                               ; preds = %83
  %95 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %48, i32 %86) #8
  %96 = load i16, i16* %32, align 2
  br label %97

97:                                               ; preds = %90, %94
  %98 = phi i16 [ %64, %90 ], [ %96, %94 ]
  %99 = phi i32 [ %93, %90 ], [ %95, %94 ]
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i16, i16* %51, i64 %100
  %102 = load i16, i16* %101, align 2
  %103 = icmp ule i16 %98, %102
  %104 = or i16 %102, 512
  %105 = icmp ne i16 %104, -512
  %106 = and i1 %103, %105
  %107 = getelementptr inbounds i16, i16* %43, i64 2
  br i1 %106, label %117, label %108

108:                                              ; preds = %97, %78, %69
  %109 = phi i16* [ %71, %69 ], [ %107, %97 ], [ %76, %78 ]
  %110 = phi i32 [ %45, %69 ], [ %86, %97 ], [ %45, %78 ]
  %111 = phi i16 [ %70, %69 ], [ %102, %97 ], [ %63, %78 ]
  %112 = icmp eq i16* %109, %28
  br i1 %112, label %117, label %41

113:                                              ; preds = %72
  %114 = zext i16 %44 to i32
  br label %117

115:                                              ; preds = %75
  %116 = zext i16 %44 to i32
  br label %117

117:                                              ; preds = %97, %108, %113, %115, %34
  %118 = phi i16* [ %28, %34 ], [ %43, %113 ], [ %28, %115 ], [ %43, %97 ], [ %28, %108 ]
  %119 = phi i32 [ %36, %34 ], [ %114, %113 ], [ %116, %115 ], [ %86, %97 ], [ %110, %108 ]
  %120 = phi i16 [ %37, %34 ], [ %63, %113 ], [ %63, %115 ], [ %102, %97 ], [ %111, %108 ]
  %121 = icmp eq i16* %118, %35
  %122 = or i1 %121, %33
  %123 = select i1 %121, i16* %38, i16* %118
  %124 = select i1 %121, i8 %39, i8 0
  br i1 %122, label %128, label %125

125:                                              ; preds = %117
  %126 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %3, i16* %35, i16* %118, i32* dereferenceable(4) %4)
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %159, label %128

128:                                              ; preds = %117, %125
  %129 = phi i16* [ %38, %125 ], [ %123, %117 ]
  %130 = phi i8 [ %39, %125 ], [ %124, %117 ]
  %131 = icmp eq i16* %118, %28
  br i1 %131, label %159, label %132

132:                                              ; preds = %128
  %133 = icmp ult i32 %119, 65536
  %134 = select i1 %133, i64 1, i64 2
  %135 = getelementptr inbounds i16, i16* %118, i64 %134
  br i1 %33, label %142, label %136

136:                                              ; preds = %132
  %137 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl9decomposeEitRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i32 %119, i16 zeroext %120, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %3, i32* dereferenceable(4) %4)
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %159, label %139

139:                                              ; preds = %136, %156
  %140 = phi i16* [ %129, %136 ], [ %158, %156 ]
  %141 = phi i8 [ %130, %136 ], [ %152, %156 ]
  br label %34

142:                                              ; preds = %132
  %143 = load i16, i16* %32, align 2
  %144 = icmp ugt i16 %143, %120
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  %146 = load i16, i16* %30, align 2
  %147 = icmp ugt i16 %146, %120
  br i1 %147, label %159, label %148

148:                                              ; preds = %142, %145
  %149 = icmp ugt i16 %120, -1025
  %150 = lshr i16 %120, 1
  %151 = trunc i16 %150 to i8
  %152 = select i1 %149, i8 %151, i8 0
  %153 = icmp ule i8 %130, %152
  %154 = icmp eq i8 %152, 0
  %155 = or i1 %154, %153
  br i1 %155, label %156, label %159

156:                                              ; preds = %148
  %157 = icmp ult i8 %152, 2
  %158 = select i1 %157, i16* %135, i16* %129
  br label %139

159:                                              ; preds = %148, %145, %125, %136, %128, %22
  %160 = phi i16* [ %10, %22 ], [ %129, %148 ], [ %118, %125 ], [ %135, %136 ], [ %28, %128 ], [ %129, %145 ]
  ret i16* %160
}

declare i16* @u_strchr_69(i16*, i16 zeroext) local_unnamed_addr #1

declare i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl9decomposeEitRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32, i16 zeroext, %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = alloca [3 x i16], align 2
  %7 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %8 = load i16, i16* %7, align 2
  %9 = icmp ugt i16 %8, %2
  br i1 %9, label %70, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %12 = load i16, i16* %11, align 2
  %13 = icmp ugt i16 %12, %2
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = icmp ugt i16 %2, -1025
  %16 = lshr i16 %2, 1
  %17 = trunc i16 %16 to i8
  %18 = select i1 %15, i8 %17, i8 0
  %19 = icmp slt i32 %1, 65536
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = trunc i32 %1 to i16
  %22 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer9appendBMPEDshR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %3, i16 zeroext %21, i8 zeroext %18, i32* dereferenceable(4) %4) #8
  br label %134

23:                                               ; preds = %14
  %24 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer19appendSupplementaryEihR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %3, i32 %1, i8 zeroext %18, i32* dereferenceable(4) %4) #8
  br label %134

25:                                               ; preds = %10
  %26 = lshr i16 %2, 3
  %27 = zext i16 %26 to i32
  %28 = add nsw i32 %27, %1
  %29 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 11
  %30 = load i16, i16* %29, align 4
  %31 = zext i16 %30 to i32
  %32 = sub i32 %28, %31
  %33 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %34 = load %struct.UCPTrie*, %struct.UCPTrie** %33, align 8
  %35 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %34, i64 0, i32 1
  %36 = bitcast %union.UCPTrieData* %35 to i16**
  %37 = load i16*, i16** %36, align 8
  %38 = icmp ult i32 %32, 65536
  br i1 %38, label %39, label %49

39:                                               ; preds = %25
  %40 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %34, i64 0, i32 0
  %41 = load i16*, i16** %40, align 8
  %42 = lshr i32 %32, 6
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i16, i16* %41, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = and i32 %32, 63
  %48 = add nuw nsw i32 %47, %46
  br label %65

49:                                               ; preds = %25
  %50 = icmp ult i32 %32, 1114112
  br i1 %50, label %51, label %61

51:                                               ; preds = %49
  %52 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %34, i64 0, i32 4
  %53 = load i32, i32* %52, align 8
  %54 = icmp sgt i32 %53, %32
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %34, i64 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %57, -2
  br label %65

59:                                               ; preds = %51
  %60 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %34, i32 %32) #8
  br label %65

61:                                               ; preds = %49
  %62 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %34, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = add nsw i32 %63, -1
  br label %65

65:                                               ; preds = %39, %55, %59, %61
  %66 = phi i32 [ %48, %39 ], [ %64, %61 ], [ %58, %55 ], [ %60, %59 ]
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i16, i16* %37, i64 %67
  %69 = load i16, i16* %68, align 2
  br label %70

70:                                               ; preds = %5, %65
  %71 = phi i16 [ %69, %65 ], [ %2, %5 ]
  %72 = phi i32 [ %32, %65 ], [ %1, %5 ]
  %73 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %74 = load i16, i16* %73, align 2
  %75 = icmp ult i16 %71, %74
  br i1 %75, label %76, label %83

76:                                               ; preds = %70
  %77 = icmp slt i32 %72, 65536
  br i1 %77, label %78, label %81

78:                                               ; preds = %76
  %79 = trunc i32 %72 to i16
  %80 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer9appendBMPEDshR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %3, i16 zeroext %79, i8 zeroext 0, i32* dereferenceable(4) %4) #8
  br label %134

81:                                               ; preds = %76
  %82 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer19appendSupplementaryEihR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %3, i32 %72, i8 zeroext 0, i32* dereferenceable(4) %4) #8
  br label %134

83:                                               ; preds = %70
  %84 = icmp eq i16 %74, %71
  br i1 %84, label %90, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 5
  %87 = load i16, i16* %86, align 8
  %88 = or i16 %87, 1
  %89 = icmp eq i16 %88, %71
  br i1 %89, label %90, label %112

90:                                               ; preds = %85, %83
  %91 = bitcast [3 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %91) #8
  %92 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  %93 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  %94 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  store i16 -21846, i16* %94, align 2
  %95 = add nsw i32 %72, -44032
  %96 = srem i32 %95, 28
  %97 = sdiv i32 %95, 28
  %98 = sdiv i32 %95, 588
  %99 = trunc i32 %98 to i16
  %100 = add i16 %99, 4352
  store i16 %100, i16* %92, align 2
  %101 = srem i32 %97, 21
  %102 = trunc i32 %101 to i16
  %103 = add nsw i16 %102, 4449
  store i16 %103, i16* %93, align 2
  %104 = icmp eq i32 %96, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %90
  %106 = trunc i32 %96 to i16
  %107 = add nsw i16 %106, 4519
  store i16 %107, i16* %94, align 2
  br label %108

108:                                              ; preds = %90, %105
  %109 = phi i64 [ 3, %105 ], [ 2, %90 ]
  %110 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 %109
  %111 = call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %3, i16* nonnull %92, i16* %110, i32* dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %91) #8
  br label %134

112:                                              ; preds = %85
  %113 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %114 = load i16*, i16** %113, align 8
  %115 = lshr i16 %71, 1
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds i16, i16* %114, i64 %116
  %118 = load i16, i16* %117, align 2
  %119 = and i16 %118, 31
  %120 = zext i16 %119 to i32
  %121 = lshr i16 %118, 8
  %122 = trunc i16 %121 to i8
  %123 = trunc i16 %118 to i8
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %112
  %126 = getelementptr inbounds i16, i16* %117, i64 -1
  %127 = load i16, i16* %126, align 2
  %128 = lshr i16 %127, 8
  %129 = trunc i16 %128 to i8
  br label %130

130:                                              ; preds = %112, %125
  %131 = phi i8 [ %129, %125 ], [ 0, %112 ]
  %132 = getelementptr inbounds i16, i16* %117, i64 1
  %133 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer6appendEPKDsiahhR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %3, i16* %132, i32 %120, i8 signext 1, i8 zeroext %131, i8 zeroext %122, i32* dereferenceable(4) %4)
  br label %134

134:                                              ; preds = %81, %78, %23, %20, %130, %108
  %135 = phi i8 [ %111, %108 ], [ %133, %130 ], [ %22, %20 ], [ %24, %23 ], [ %80, %78 ], [ %82, %81 ]
  ret i8 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6icu_6915Normalizer2Impl14decomposeShortEPKDsS2_aaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16* readonly, i16* readnone, i8 signext, i8 signext, %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = load i32, i32* %6, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %126

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %12 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %13 = icmp ult i16* %1, %2
  br i1 %13, label %14, label %126

14:                                               ; preds = %10
  %15 = icmp ne i8 %3, 0
  %16 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %18 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %19 = xor i1 %15, true
  %20 = icmp eq i8 %4, 0
  %21 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  br label %22

22:                                               ; preds = %125, %14
  %23 = phi i16* [ %1, %14 ], [ %77, %125 ]
  %24 = load i16, i16* %23, align 2
  br i1 %15, label %25, label %28

25:                                               ; preds = %22
  %26 = load i16, i16* %16, align 2
  %27 = icmp ult i16 %24, %26
  br i1 %27, label %126, label %28

28:                                               ; preds = %22, %25
  %29 = getelementptr inbounds i16, i16* %23, i64 1
  %30 = zext i16 %24 to i32
  %31 = and i32 %30, 63488
  %32 = icmp eq i32 %31, 55296
  br i1 %32, label %44, label %33

33:                                               ; preds = %28
  %34 = load %struct.UCPTrie*, %struct.UCPTrie** %17, align 8
  %35 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %34, i64 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = lshr i32 %30, 6
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %36, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = and i32 %30, 63
  %43 = add nuw nsw i32 %42, %41
  br label %75

44:                                               ; preds = %28
  %45 = and i32 %30, 1024
  %46 = icmp ne i32 %45, 0
  %47 = icmp eq i16* %29, %2
  %48 = or i1 %47, %46
  br i1 %48, label %70, label %49

49:                                               ; preds = %44
  %50 = load i16, i16* %29, align 2
  %51 = zext i16 %50 to i32
  %52 = and i32 %51, 64512
  %53 = icmp eq i32 %52, 56320
  br i1 %53, label %54, label %70

54:                                               ; preds = %49
  %55 = getelementptr inbounds i16, i16* %23, i64 2
  %56 = shl nuw nsw i32 %30, 10
  %57 = add nsw i32 %56, -56613888
  %58 = add nsw i32 %57, %51
  %59 = load %struct.UCPTrie*, %struct.UCPTrie** %17, align 8
  %60 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %59, i64 0, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = icmp slt i32 %58, %61
  br i1 %62, label %67, label %63

63:                                               ; preds = %54
  %64 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %59, i64 0, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %65, -2
  br label %75

67:                                               ; preds = %54
  %68 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %59, i32 %58) #8
  %69 = load %struct.UCPTrie*, %struct.UCPTrie** %17, align 8
  br label %75

70:                                               ; preds = %44, %49
  %71 = load %struct.UCPTrie*, %struct.UCPTrie** %17, align 8
  %72 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %71, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = add nsw i32 %73, -1
  br label %75

75:                                               ; preds = %70, %67, %63, %33
  %76 = phi %struct.UCPTrie* [ %34, %33 ], [ %71, %70 ], [ %69, %67 ], [ %59, %63 ]
  %77 = phi i16* [ %29, %33 ], [ %29, %70 ], [ %55, %67 ], [ %55, %63 ]
  %78 = phi i32 [ %30, %33 ], [ %30, %70 ], [ %58, %67 ], [ %58, %63 ]
  %79 = phi i32 [ %43, %33 ], [ %74, %70 ], [ %68, %67 ], [ %66, %63 ]
  %80 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %76, i64 0, i32 1
  %81 = bitcast %union.UCPTrieData* %80 to i16**
  %82 = load i16*, i16** %81, align 8
  %83 = sext i32 %79 to i64
  %84 = getelementptr inbounds i16, i16* %82, i64 %83
  %85 = load i16, i16* %84, align 2
  br i1 %15, label %86, label %95

86:                                               ; preds = %75
  %87 = load i16, i16* %11, align 2
  %88 = icmp ugt i16 %87, %85
  br i1 %88, label %126, label %89

89:                                               ; preds = %86
  %90 = load i16, i16* %18, align 2
  %91 = icmp ugt i16 %90, %85
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = load i16, i16* %12, align 2
  %94 = icmp ugt i16 %93, %85
  br i1 %94, label %126, label %95

95:                                               ; preds = %92, %89, %75
  %96 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl9decomposeEitRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i32 %78, i16 zeroext %85, %"class.icu_69::ReorderingBuffer"* dereferenceable(64) %5, i32* dereferenceable(4) %6)
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %126, label %98

98:                                               ; preds = %95
  %99 = and i16 %85, 1
  %100 = icmp eq i16 %99, 0
  %101 = or i1 %100, %19
  br i1 %101, label %123, label %102

102:                                              ; preds = %98
  %103 = icmp eq i16 %85, 1
  %104 = or i1 %20, %103
  br i1 %104, label %126, label %105

105:                                              ; preds = %102
  %106 = load i16, i16* %18, align 2
  %107 = icmp ugt i16 %106, %85
  br i1 %107, label %111, label %108

108:                                              ; preds = %105
  %109 = and i16 %85, 6
  %110 = icmp ult i16 %109, 3
  br label %118

111:                                              ; preds = %105
  %112 = load i16*, i16** %21, align 8
  %113 = lshr i16 %85, 1
  %114 = zext i16 %113 to i64
  %115 = getelementptr inbounds i16, i16* %112, i64 %114
  %116 = load i16, i16* %115, align 2
  %117 = icmp ult i16 %116, 512
  br label %118

118:                                              ; preds = %108, %111
  %119 = phi i1 [ %110, %108 ], [ %117, %111 ]
  %120 = xor i1 %119, true
  %121 = icmp ult i16* %77, %2
  %122 = and i1 %121, %120
  br i1 %122, label %125, label %126

123:                                              ; preds = %98
  %124 = icmp ult i16* %77, %2
  br i1 %124, label %125, label %126

125:                                              ; preds = %123, %118
  br label %22

126:                                              ; preds = %118, %25, %123, %95, %86, %102, %92, %10, %7
  %127 = phi i16* [ null, %7 ], [ %1, %10 ], [ %23, %25 ], [ %77, %123 ], [ null, %95 ], [ %23, %86 ], [ %77, %102 ], [ %77, %118 ], [ %23, %92 ]
  ret i16* %127
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK6icu_6915Normalizer2Impl13decomposeUTF8EjPKhS2_PNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i32, i8*, i8*, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.icu_69::UnicodeString", align 8
  %9 = alloca %"class.icu_69::ReorderingBuffer", align 8
  %10 = bitcast %"class.icu_69::UnicodeString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 64, i1 false)
  %11 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %8, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %14 = load i16, i16* %13, align 8
  %15 = icmp ult i16 %14, 128
  br i1 %15, label %16, label %18

16:                                               ; preds = %7
  %17 = trunc i16 %14 to i8
  br label %24

18:                                               ; preds = %7
  %19 = icmp ult i16 %14, 2048
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = lshr i16 %14, 6
  %22 = trunc i16 %21 to i8
  %23 = add nuw nsw i8 %22, -64
  br label %24

24:                                               ; preds = %16, %18, %20
  %25 = phi i8 [ %17, %16 ], [ %23, %20 ], [ -32, %18 ]
  %26 = icmp eq i8* %2, %3
  br i1 %26, label %50, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %29 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %30 = icmp eq %"class.icu_69::ByteSink"* %4, null
  %31 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %32 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %33 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %34 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %35 = bitcast %"class.icu_69::ReorderingBuffer"* %9 to i8*
  %36 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %9, i64 0, i32 0
  %37 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %9, i64 0, i32 1
  %38 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %9, i64 0, i32 2
  %39 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %9, i64 0, i32 3
  %40 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %9, i64 0, i32 4
  %41 = bitcast i16** %40 to i64*
  %42 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %9, i64 0, i32 5
  %43 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %9, i64 0, i32 6
  %44 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %9, i64 0, i32 2
  %45 = bitcast i16** %44 to i8*
  br label %46

46:                                               ; preds = %27, %321
  %47 = phi i8 [ 0, %27 ], [ %322, %321 ]
  %48 = phi i8* [ %2, %27 ], [ %323, %321 ]
  %49 = phi i8* [ %2, %27 ], [ %324, %321 ]
  br label %58

50:                                               ; preds = %321, %189, %24
  %51 = phi i8* [ %2, %24 ], [ %48, %189 ], [ %323, %321 ]
  %52 = phi i8* [ %2, %24 ], [ %3, %189 ], [ %3, %321 ]
  %53 = icmp ne i8* %51, %3
  %54 = icmp ne %"class.icu_69::ByteSink"* %4, null
  %55 = and i1 %54, %53
  br i1 %55, label %56, label %326

56:                                               ; preds = %50
  %57 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %51, i8* %3, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %4, i32 %1, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6) #8
  br label %326

58:                                               ; preds = %46, %189
  %59 = phi i8* [ %49, %46 ], [ %190, %189 ]
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = icmp ult i8 %60, %25
  %63 = getelementptr inbounds i8, i8* %59, i64 1
  br i1 %62, label %189, label %64

64:                                               ; preds = %58
  %65 = icmp sgt i8 %60, -1
  br i1 %65, label %174, label %66

66:                                               ; preds = %64
  %67 = icmp eq i8* %63, %3
  br i1 %67, label %168, label %68

68:                                               ; preds = %66
  %69 = icmp ugt i8 %60, -33
  br i1 %69, label %70, label %147

70:                                               ; preds = %68
  %71 = icmp ult i8 %60, -16
  br i1 %71, label %72, label %104

72:                                               ; preds = %70
  %73 = and i32 %61, 15
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = load i8, i8* %63, align 1
  %79 = zext i8 %78 to i32
  %80 = lshr i32 %79, 5
  %81 = shl i32 1, %80
  %82 = and i32 %81, %77
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %168, label %84

84:                                               ; preds = %72
  %85 = getelementptr inbounds i8, i8* %59, i64 2
  %86 = icmp eq i8* %85, %3
  br i1 %86, label %168, label %87

87:                                               ; preds = %84
  %88 = load i8, i8* %85, align 1
  %89 = xor i8 %88, -128
  %90 = icmp ult i8 %89, 64
  br i1 %90, label %91, label %168

91:                                               ; preds = %87
  %92 = zext i8 %89 to i32
  %93 = load %struct.UCPTrie*, %struct.UCPTrie** %28, align 8
  %94 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %93, i64 0, i32 0
  %95 = load i16*, i16** %94, align 8
  %96 = shl nuw nsw i32 %73, 6
  %97 = and i32 %79, 63
  %98 = or i32 %97, %96
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds i16, i16* %95, i64 %99
  %101 = load i16, i16* %100, align 2
  %102 = zext i16 %101 to i32
  %103 = add nuw nsw i32 %102, %92
  br label %164

104:                                              ; preds = %70
  %105 = add nsw i32 %61, -240
  %106 = icmp slt i32 %105, 5
  br i1 %106, label %107, label %168

107:                                              ; preds = %104
  %108 = load i8, i8* %63, align 1
  %109 = zext i8 %108 to i32
  %110 = lshr i32 %109, 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = sext i8 %113 to i32
  %115 = shl i32 1, %105
  %116 = and i32 %115, %114
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %168, label %118

118:                                              ; preds = %107
  %119 = shl nsw i32 %105, 6
  %120 = and i32 %109, 63
  %121 = or i32 %120, %119
  %122 = getelementptr inbounds i8, i8* %59, i64 2
  %123 = icmp eq i8* %122, %3
  br i1 %123, label %168, label %124

124:                                              ; preds = %118
  %125 = load i8, i8* %122, align 1
  %126 = xor i8 %125, -128
  %127 = icmp ult i8 %126, 64
  br i1 %127, label %128, label %168

128:                                              ; preds = %124
  %129 = getelementptr inbounds i8, i8* %59, i64 3
  %130 = icmp eq i8* %129, %3
  br i1 %130, label %168, label %131

131:                                              ; preds = %128
  %132 = load i8, i8* %129, align 1
  %133 = xor i8 %132, -128
  %134 = icmp ult i8 %133, 64
  br i1 %134, label %135, label %168

135:                                              ; preds = %131
  %136 = load %struct.UCPTrie*, %struct.UCPTrie** %28, align 8
  %137 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %136, i64 0, i32 5
  %138 = load i16, i16* %137, align 4
  %139 = zext i16 %138 to i32
  %140 = icmp slt i32 %121, %139
  br i1 %140, label %145, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %136, i64 0, i32 3
  %143 = load i32, i32* %142, align 4
  %144 = add nsw i32 %143, -2
  br label %164

145:                                              ; preds = %135
  %146 = call i32 @ucptrie_internalSmallU8Index_69(%struct.UCPTrie* %136, i32 %121, i8 zeroext %126, i8 zeroext %133) #8
  br label %164

147:                                              ; preds = %68
  %148 = icmp ugt i8 %60, -63
  br i1 %148, label %149, label %168

149:                                              ; preds = %147
  %150 = load i8, i8* %63, align 1
  %151 = xor i8 %150, -128
  %152 = icmp ult i8 %151, 64
  br i1 %152, label %153, label %168

153:                                              ; preds = %149
  %154 = zext i8 %151 to i32
  %155 = load %struct.UCPTrie*, %struct.UCPTrie** %28, align 8
  %156 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %155, i64 0, i32 0
  %157 = load i16*, i16** %156, align 8
  %158 = and i32 %61, 31
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds i16, i16* %157, i64 %159
  %161 = load i16, i16* %160, align 2
  %162 = zext i16 %161 to i32
  %163 = add nuw nsw i32 %162, %154
  br label %164

164:                                              ; preds = %141, %145, %91, %153
  %165 = phi i8* [ %85, %91 ], [ %63, %153 ], [ %129, %145 ], [ %129, %141 ]
  %166 = phi i32 [ %103, %91 ], [ %163, %153 ], [ %146, %145 ], [ %144, %141 ]
  %167 = getelementptr inbounds i8, i8* %165, i64 1
  br label %174

168:                                              ; preds = %84, %72, %128, %118, %107, %66, %149, %147, %131, %124, %104, %87
  %169 = phi i8* [ %85, %87 ], [ %3, %84 ], [ %63, %72 ], [ %129, %131 ], [ %3, %128 ], [ %122, %124 ], [ %3, %118 ], [ %63, %107 ], [ %63, %104 ], [ %63, %149 ], [ %63, %147 ], [ %3, %66 ]
  %170 = load %struct.UCPTrie*, %struct.UCPTrie** %28, align 8
  %171 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %170, i64 0, i32 3
  %172 = load i32, i32* %171, align 4
  %173 = add nsw i32 %172, -1
  br label %174

174:                                              ; preds = %164, %168, %64
  %175 = phi i8* [ %63, %64 ], [ %167, %164 ], [ %169, %168 ]
  %176 = phi i32 [ %61, %64 ], [ %166, %164 ], [ %173, %168 ]
  %177 = load %struct.UCPTrie*, %struct.UCPTrie** %28, align 8
  %178 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %177, i64 0, i32 1
  %179 = bitcast %union.UCPTrieData* %178 to i16**
  %180 = load i16*, i16** %179, align 8
  %181 = sext i32 %176 to i64
  %182 = getelementptr inbounds i16, i16* %180, i64 %181
  %183 = load i16, i16* %182, align 2
  %184 = load i16, i16* %29, align 2
  %185 = icmp ule i16 %184, %183
  %186 = or i16 %183, 512
  %187 = icmp ne i16 %186, -512
  %188 = and i1 %185, %187
  br i1 %188, label %192, label %189

189:                                              ; preds = %58, %174
  %190 = phi i8* [ %175, %174 ], [ %63, %58 ]
  %191 = icmp eq i8* %190, %3
  br i1 %191, label %50, label %58

192:                                              ; preds = %174
  %193 = icmp eq i8* %59, %49
  %194 = or i1 %193, %30
  %195 = select i1 %193, i8* %48, i8* %59
  %196 = select i1 %193, i8 %47, i8 0
  br i1 %194, label %200, label %197

197:                                              ; preds = %192
  %198 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %48, i8* %59, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %4, i32 %1, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6) #8
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %326, label %200

200:                                              ; preds = %192, %197
  %201 = phi i8* [ %195, %192 ], [ %59, %197 ]
  %202 = phi i8 [ %196, %192 ], [ 0, %197 ]
  %203 = load i16, i16* %31, align 2
  %204 = icmp ugt i16 %203, %183
  br i1 %204, label %221, label %205

205:                                              ; preds = %200
  %206 = icmp ugt i16 %183, -1025
  %207 = lshr i16 %183, 1
  %208 = trunc i16 %207 to i8
  %209 = select i1 %206, i8 %208, i8 0
  %210 = icmp ule i8 %202, %209
  %211 = icmp eq i8 %209, 0
  %212 = or i1 %211, %210
  br i1 %212, label %213, label %221

213:                                              ; preds = %205
  %214 = icmp ugt i8 %209, 1
  %215 = or i1 %214, %30
  %216 = select i1 %214, i8 %208, i8 %209
  %217 = select i1 %214, i8* %201, i8* %175
  br i1 %215, label %321, label %218

218:                                              ; preds = %213
  %219 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %201, i8* %175, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %4, i32 %1, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6) #8
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %326, label %321

221:                                              ; preds = %205, %200
  br i1 %30, label %326, label %222

222:                                              ; preds = %221
  %223 = icmp eq i8* %201, %59
  br i1 %223, label %249, label %224

224:                                              ; preds = %222
  %225 = load i16, i16* %32, align 2
  %226 = icmp ugt i16 %225, %183
  br i1 %226, label %246, label %227

227:                                              ; preds = %224
  %228 = load i16, i16* %33, align 2
  %229 = icmp ugt i16 %228, %183
  br i1 %229, label %234, label %230

230:                                              ; preds = %227
  %231 = icmp ult i16 %183, -1023
  %232 = icmp eq i16 %183, -512
  %233 = or i1 %231, %232
  br i1 %233, label %246, label %249

234:                                              ; preds = %227
  %235 = load i16*, i16** %34, align 8
  %236 = lshr i16 %183, 1
  %237 = zext i16 %236 to i64
  %238 = getelementptr inbounds i16, i16* %235, i64 %237
  %239 = load i16, i16* %238, align 2
  %240 = trunc i16 %239 to i8
  %241 = icmp sgt i8 %240, -1
  br i1 %241, label %246, label %242

242:                                              ; preds = %234
  %243 = getelementptr inbounds i16, i16* %238, i64 -1
  %244 = load i16, i16* %243, align 2
  %245 = icmp ult i16 %244, 256
  br i1 %245, label %246, label %249

246:                                              ; preds = %230, %242, %234, %224
  %247 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %201, i8* %59, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %4, i32 %1, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6) #8
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %326, label %249

249:                                              ; preds = %230, %242, %246, %222
  %250 = phi i8* [ %201, %242 ], [ %59, %222 ], [ %59, %246 ], [ %201, %230 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %35) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 48, i1 false)
  store %"class.icu_69::Normalizer2Impl"* %0, %"class.icu_69::Normalizer2Impl"** %36, align 8
  store %"class.icu_69::UnicodeString"* %8, %"class.icu_69::UnicodeString"** %37, align 8
  %251 = call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* nonnull %8, i32 8) #8
  store i16* %251, i16** %38, align 8
  store i16* %251, i16** %39, align 8
  %252 = ptrtoint i16* %251 to i64
  store i64 %252, i64* %41, align 8
  %253 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %37, align 8
  %254 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %253, i64 0, i32 1, i32 0, i32 0
  %255 = load i16, i16* %254, align 8
  %256 = and i16 %255, 2
  %257 = icmp eq i16 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %249
  %259 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %253, i64 0, i32 1, i32 0, i32 2
  %260 = load i32, i32* %259, align 8
  br label %261

261:                                              ; preds = %258, %249
  %262 = phi i32 [ %260, %258 ], [ 27, %249 ]
  store i32 %262, i32* %42, align 8
  store i8 0, i8* %43, align 4
  %263 = icmp ne i16* %251, null
  %264 = load i32, i32* %6, align 4
  %265 = icmp sgt i32 %264, 0
  %266 = or i1 %263, %265
  br i1 %266, label %268, label %267

267:                                              ; preds = %261
  store i32 7, i32* %6, align 4
  br label %305

268:                                              ; preds = %261
  %269 = icmp slt i32 %264, 1
  br i1 %269, label %270, label %305

270:                                              ; preds = %268
  %271 = call i8* @_ZNK6icu_6915Normalizer2Impl14decomposeShortEPKhS2_NS0_6StopAtEaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i8* %250, i8* %175, i32 0, i8 signext 0, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %9, i32* dereferenceable(4) %6)
  %272 = load i8, i8* %43, align 4
  %273 = icmp ugt i8 %272, 1
  br i1 %273, label %274, label %276

274:                                              ; preds = %270
  %275 = call i8* @_ZNK6icu_6915Normalizer2Impl14decomposeShortEPKhS2_NS0_6StopAtEaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i8* %175, i8* %3, i32 1, i8 signext 0, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %9, i32* dereferenceable(4) %6)
  br label %276

276:                                              ; preds = %274, %270
  %277 = phi i8* [ %275, %274 ], [ %175, %270 ]
  %278 = load i32, i32* %6, align 4
  %279 = icmp slt i32 %278, 1
  br i1 %279, label %280, label %305

280:                                              ; preds = %276
  %281 = ptrtoint i8* %277 to i64
  %282 = ptrtoint i8* %59 to i64
  %283 = sub i64 %281, %282
  %284 = icmp sgt i64 %283, 2147483647
  br i1 %284, label %285, label %286

285:                                              ; preds = %280
  store i32 8, i32* %6, align 4
  br label %305

286:                                              ; preds = %280
  %287 = load i16, i16* %31, align 2
  %288 = icmp ugt i16 %287, %183
  br i1 %288, label %295, label %289

289:                                              ; preds = %286
  %290 = call signext i8 @_ZNK6icu_6916ReorderingBuffer6equalsEPKhS2_(%"class.icu_69::ReorderingBuffer"* nonnull %9, i8* %250, i8* %277)
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %289
  %293 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %250, i8* %277, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %4, i32 %1, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6) #8
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %305, label %304

295:                                              ; preds = %289, %286
  %296 = load i16*, i16** %38, align 8
  %297 = load i64, i64* %41, align 8
  %298 = ptrtoint i16* %296 to i64
  %299 = sub i64 %297, %298
  %300 = lshr exact i64 %299, 1
  %301 = trunc i64 %300 to i32
  %302 = call signext i8 @_ZN6icu_6912ByteSinkUtil12appendChangeEPKhS2_PKDsiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i8* %250, i8* %277, i16* %296, i32 %301, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %4, %"class.icu_69::Edits"* %5, i32* dereferenceable(4) %6) #8
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %305, label %304

304:                                              ; preds = %292, %295
  br label %305

305:                                              ; preds = %267, %295, %292, %276, %268, %304, %285
  %306 = phi i8* [ %277, %285 ], [ %277, %304 ], [ %175, %268 ], [ %277, %276 ], [ %277, %292 ], [ %277, %295 ], [ %175, %267 ]
  %307 = phi i8* [ %250, %285 ], [ %277, %304 ], [ %250, %268 ], [ %250, %276 ], [ %250, %292 ], [ %250, %295 ], [ %250, %267 ]
  %308 = phi i8 [ %202, %285 ], [ 0, %304 ], [ %202, %268 ], [ %202, %276 ], [ %202, %292 ], [ %202, %295 ], [ %202, %267 ]
  %309 = phi i32 [ 2, %285 ], [ 0, %304 ], [ 2, %268 ], [ 2, %276 ], [ 2, %292 ], [ 2, %295 ], [ 2, %267 ]
  %310 = load i16*, i16** %38, align 8
  %311 = icmp eq i16* %310, null
  br i1 %311, label %319, label %312

312:                                              ; preds = %305
  %313 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %37, align 8
  %314 = load i64, i64* %41, align 8
  %315 = ptrtoint i16* %310 to i64
  %316 = sub i64 %314, %315
  %317 = lshr exact i64 %316, 1
  %318 = trunc i64 %317 to i32
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %313, i32 %318) #8
  br label %319

319:                                              ; preds = %312, %305
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %35) #8
  %320 = icmp eq i32 %309, 0
  br i1 %320, label %321, label %326

321:                                              ; preds = %213, %319, %218
  %322 = phi i8 [ %308, %319 ], [ %216, %213 ], [ %209, %218 ]
  %323 = phi i8* [ %307, %319 ], [ %217, %213 ], [ %175, %218 ]
  %324 = phi i8* [ %306, %319 ], [ %175, %213 ], [ %175, %218 ]
  %325 = icmp eq i8* %324, %3
  br i1 %325, label %50, label %46

326:                                              ; preds = %319, %197, %246, %218, %221, %50, %56
  %327 = phi i8* [ %52, %50 ], [ %52, %56 ], [ %175, %218 ], [ %175, %246 ], [ %175, %197 ], [ %306, %319 ], [ %201, %221 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #8
  ret i8* %327
}

declare signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8*, i8*, %"class.icu_69::ByteSink"* dereferenceable(8), i32, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare i32 @ucptrie_internalSmallU8Index_69(%struct.UCPTrie*, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl29norm16HasDecompBoundaryBeforeEt(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %4 = load i16, i16* %3, align 2
  %5 = icmp ugt i16 %4, %1
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %8 = load i16, i16* %7, align 2
  %9 = icmp ugt i16 %8, %1
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = icmp ult i16 %1, -1023
  %12 = icmp eq i16 %1, -512
  %13 = or i1 %11, %12
  br label %27

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %16 = load i16*, i16** %15, align 8
  %17 = lshr i16 %1, 1
  %18 = zext i16 %17 to i64
  %19 = getelementptr inbounds i16, i16* %16, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = trunc i16 %20 to i8
  %22 = icmp sgt i8 %21, -1
  br i1 %22, label %27, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds i16, i16* %19, i64 -1
  %25 = load i16, i16* %24, align 2
  %26 = icmp ult i16 %25, 256
  br label %27

27:                                               ; preds = %14, %23, %2, %10
  %28 = phi i1 [ %13, %10 ], [ true, %2 ], [ true, %14 ], [ %26, %23 ]
  %29 = zext i1 %28 to i8
  ret i8 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK6icu_6915Normalizer2Impl14decomposeShortEPKhS2_NS0_6StopAtEaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i8*, i8* readnone, i32, i8 signext, %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = alloca [3 x i16], align 2
  %9 = load i32, i32* %6, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %533

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %14 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %15 = icmp eq i32 %3, 1
  %16 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 6
  %17 = icmp eq i32 %3, 0
  %18 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 11
  %19 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %20 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %23 = bitcast [3 x i16]* %8 to i8*
  %24 = getelementptr inbounds [3 x i16], [3 x i16]* %8, i64 0, i64 0
  %25 = getelementptr inbounds [3 x i16], [3 x i16]* %8, i64 0, i64 1
  %26 = getelementptr inbounds [3 x i16], [3 x i16]* %8, i64 0, i64 2
  %27 = icmp eq i8 %4, 0
  %28 = icmp ult i8* %1, %2
  br i1 %28, label %29, label %533

29:                                               ; preds = %11, %532
  %30 = phi i8* [ %144, %532 ], [ %1, %11 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  %32 = load i8, i8* %30, align 1
  %33 = zext i8 %32 to i32
  %34 = icmp sgt i8 %32, -1
  br i1 %34, label %143, label %35

35:                                               ; preds = %29
  %36 = icmp eq i8* %31, %2
  br i1 %36, label %137, label %37

37:                                               ; preds = %35
  %38 = icmp ugt i8 %32, -33
  br i1 %38, label %39, label %116

39:                                               ; preds = %37
  %40 = icmp ult i8 %32, -16
  br i1 %40, label %41, label %73

41:                                               ; preds = %39
  %42 = and i32 %33, 15
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = load i8, i8* %31, align 1
  %48 = zext i8 %47 to i32
  %49 = lshr i32 %48, 5
  %50 = shl i32 1, %49
  %51 = and i32 %50, %46
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %137, label %53

53:                                               ; preds = %41
  %54 = getelementptr inbounds i8, i8* %30, i64 2
  %55 = icmp eq i8* %54, %2
  br i1 %55, label %137, label %56

56:                                               ; preds = %53
  %57 = load i8, i8* %54, align 1
  %58 = xor i8 %57, -128
  %59 = icmp ult i8 %58, 64
  br i1 %59, label %60, label %137

60:                                               ; preds = %56
  %61 = zext i8 %58 to i32
  %62 = load %struct.UCPTrie*, %struct.UCPTrie** %12, align 8
  %63 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %62, i64 0, i32 0
  %64 = load i16*, i16** %63, align 8
  %65 = shl nuw nsw i32 %42, 6
  %66 = and i32 %48, 63
  %67 = or i32 %66, %65
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i16, i16* %64, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = zext i16 %70 to i32
  %72 = add nuw nsw i32 %71, %61
  br label %133

73:                                               ; preds = %39
  %74 = add nsw i32 %33, -240
  %75 = icmp slt i32 %74, 5
  br i1 %75, label %76, label %137

76:                                               ; preds = %73
  %77 = load i8, i8* %31, align 1
  %78 = zext i8 %77 to i32
  %79 = lshr i32 %78, 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i32
  %84 = shl i32 1, %74
  %85 = and i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %137, label %87

87:                                               ; preds = %76
  %88 = shl nsw i32 %74, 6
  %89 = and i32 %78, 63
  %90 = or i32 %89, %88
  %91 = getelementptr inbounds i8, i8* %30, i64 2
  %92 = icmp eq i8* %91, %2
  br i1 %92, label %137, label %93

93:                                               ; preds = %87
  %94 = load i8, i8* %91, align 1
  %95 = xor i8 %94, -128
  %96 = icmp ult i8 %95, 64
  br i1 %96, label %97, label %137

97:                                               ; preds = %93
  %98 = getelementptr inbounds i8, i8* %30, i64 3
  %99 = icmp eq i8* %98, %2
  br i1 %99, label %137, label %100

100:                                              ; preds = %97
  %101 = load i8, i8* %98, align 1
  %102 = xor i8 %101, -128
  %103 = icmp ult i8 %102, 64
  br i1 %103, label %104, label %137

104:                                              ; preds = %100
  %105 = load %struct.UCPTrie*, %struct.UCPTrie** %12, align 8
  %106 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %105, i64 0, i32 5
  %107 = load i16, i16* %106, align 4
  %108 = zext i16 %107 to i32
  %109 = icmp slt i32 %90, %108
  br i1 %109, label %114, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %105, i64 0, i32 3
  %112 = load i32, i32* %111, align 4
  %113 = add nsw i32 %112, -2
  br label %133

114:                                              ; preds = %104
  %115 = call i32 @ucptrie_internalSmallU8Index_69(%struct.UCPTrie* %105, i32 %90, i8 zeroext %95, i8 zeroext %102) #8
  br label %133

116:                                              ; preds = %37
  %117 = icmp ugt i8 %32, -63
  br i1 %117, label %118, label %137

118:                                              ; preds = %116
  %119 = load i8, i8* %31, align 1
  %120 = xor i8 %119, -128
  %121 = icmp ult i8 %120, 64
  br i1 %121, label %122, label %137

122:                                              ; preds = %118
  %123 = zext i8 %120 to i32
  %124 = load %struct.UCPTrie*, %struct.UCPTrie** %12, align 8
  %125 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %124, i64 0, i32 0
  %126 = load i16*, i16** %125, align 8
  %127 = and i32 %33, 31
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds i16, i16* %126, i64 %128
  %130 = load i16, i16* %129, align 2
  %131 = zext i16 %130 to i32
  %132 = add nuw nsw i32 %131, %123
  br label %133

133:                                              ; preds = %110, %114, %60, %122
  %134 = phi i8* [ %54, %60 ], [ %31, %122 ], [ %98, %114 ], [ %98, %110 ]
  %135 = phi i32 [ %72, %60 ], [ %132, %122 ], [ %115, %114 ], [ %113, %110 ]
  %136 = getelementptr inbounds i8, i8* %134, i64 1
  br label %143

137:                                              ; preds = %53, %41, %97, %87, %76, %35, %118, %116, %100, %93, %73, %56
  %138 = phi i8* [ %54, %56 ], [ %2, %53 ], [ %31, %41 ], [ %98, %100 ], [ %2, %97 ], [ %91, %93 ], [ %2, %87 ], [ %31, %76 ], [ %31, %73 ], [ %31, %118 ], [ %31, %116 ], [ %2, %35 ]
  %139 = load %struct.UCPTrie*, %struct.UCPTrie** %12, align 8
  %140 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %139, i64 0, i32 3
  %141 = load i32, i32* %140, align 4
  %142 = add nsw i32 %141, -1
  br label %143

143:                                              ; preds = %133, %137, %29
  %144 = phi i8* [ %31, %29 ], [ %136, %133 ], [ %138, %137 ]
  %145 = phi i32 [ %33, %29 ], [ %135, %133 ], [ %142, %137 ]
  %146 = load %struct.UCPTrie*, %struct.UCPTrie** %12, align 8
  %147 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %146, i64 0, i32 1
  %148 = bitcast %union.UCPTrieData* %147 to i16**
  %149 = load i16*, i16** %148, align 8
  %150 = sext i32 %145 to i64
  %151 = getelementptr inbounds i16, i16* %149, i64 %150
  %152 = load i16, i16* %151, align 2
  %153 = load i16, i16* %13, align 2
  %154 = icmp ult i16 %152, %153
  br i1 %154, label %325, label %155

155:                                              ; preds = %143
  %156 = load i16, i16* %14, align 2
  %157 = icmp ugt i16 %156, %152
  br i1 %157, label %234, label %158

158:                                              ; preds = %155
  %159 = icmp ugt i16 %152, -1025
  %160 = lshr i16 %152, 1
  %161 = trunc i16 %160 to i8
  %162 = select i1 %159, i8 %161, i8 0
  %163 = icmp eq i8 %162, 0
  %164 = and i1 %15, %163
  br i1 %164, label %533, label %165

165:                                              ; preds = %158
  %166 = load i8, i8* %30, align 1
  %167 = ptrtoint i8* %144 to i64
  %168 = ptrtoint i8* %30 to i64
  %169 = sub i64 %167, %168
  switch i64 %169, label %214 [
    i64 1, label %170
    i64 2, label %172
    i64 3, label %180
    i64 4, label %194
  ]

170:                                              ; preds = %165
  %171 = zext i8 %166 to i32
  br label %218

172:                                              ; preds = %165
  %173 = and i8 %166, 31
  %174 = zext i8 %173 to i32
  %175 = shl nuw nsw i32 %174, 6
  %176 = load i8, i8* %31, align 1
  %177 = and i8 %176, 63
  %178 = zext i8 %177 to i32
  %179 = or i32 %175, %178
  br label %215

180:                                              ; preds = %165
  %181 = zext i8 %166 to i32
  %182 = shl nuw nsw i32 %181, 12
  %183 = load i8, i8* %31, align 1
  %184 = and i8 %183, 63
  %185 = zext i8 %184 to i32
  %186 = shl nuw nsw i32 %185, 6
  %187 = getelementptr inbounds i8, i8* %30, i64 2
  %188 = load i8, i8* %187, align 1
  %189 = and i8 %188, 63
  %190 = zext i8 %189 to i32
  %191 = and i32 %182, 61440
  %192 = or i32 %186, %191
  %193 = or i32 %192, %190
  br label %215

194:                                              ; preds = %165
  %195 = and i8 %166, 7
  %196 = zext i8 %195 to i32
  %197 = shl nuw nsw i32 %196, 18
  %198 = load i8, i8* %31, align 1
  %199 = and i8 %198, 63
  %200 = zext i8 %199 to i32
  %201 = shl nuw nsw i32 %200, 12
  %202 = or i32 %201, %197
  %203 = getelementptr inbounds i8, i8* %30, i64 2
  %204 = load i8, i8* %203, align 1
  %205 = and i8 %204, 63
  %206 = zext i8 %205 to i32
  %207 = shl nuw nsw i32 %206, 6
  %208 = or i32 %202, %207
  %209 = getelementptr inbounds i8, i8* %30, i64 3
  %210 = load i8, i8* %209, align 1
  %211 = and i8 %210, 63
  %212 = zext i8 %211 to i32
  %213 = or i32 %208, %212
  br label %215

214:                                              ; preds = %165
  call void @abort() #9
  unreachable

215:                                              ; preds = %172, %180, %194
  %216 = phi i32 [ %213, %194 ], [ %193, %180 ], [ %179, %172 ]
  %217 = icmp slt i32 %216, 65536
  br i1 %217, label %218, label %222

218:                                              ; preds = %170, %215
  %219 = phi i32 [ %171, %170 ], [ %216, %215 ]
  %220 = trunc i32 %219 to i16
  %221 = call signext i8 @_ZN6icu_6916ReorderingBuffer9appendBMPEDshR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16 zeroext %220, i8 zeroext %162, i32* dereferenceable(4) %6) #8
  br label %224

222:                                              ; preds = %215
  %223 = call signext i8 @_ZN6icu_6916ReorderingBuffer19appendSupplementaryEihR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i32 %216, i8 zeroext %162, i32* dereferenceable(4) %6) #8
  br label %224

224:                                              ; preds = %218, %222
  %225 = phi i8 [ %221, %218 ], [ %223, %222 ]
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %533, label %227

227:                                              ; preds = %224
  %228 = load i8, i8* %16, align 4
  %229 = icmp ult i8 %228, 2
  %230 = and i1 %15, %229
  %231 = xor i1 %230, true
  %232 = icmp ult i8* %144, %2
  %233 = and i1 %232, %231
  br i1 %233, label %532, label %533

234:                                              ; preds = %155
  br i1 %17, label %235, label %533

235:                                              ; preds = %234
  %236 = load i8, i8* %30, align 1
  %237 = ptrtoint i8* %144 to i64
  %238 = ptrtoint i8* %30 to i64
  %239 = sub i64 %237, %238
  switch i64 %239, label %284 [
    i64 1, label %240
    i64 2, label %242
    i64 3, label %250
    i64 4, label %264
  ]

240:                                              ; preds = %235
  %241 = zext i8 %236 to i32
  br label %285

242:                                              ; preds = %235
  %243 = and i8 %236, 31
  %244 = zext i8 %243 to i32
  %245 = shl nuw nsw i32 %244, 6
  %246 = load i8, i8* %31, align 1
  %247 = and i8 %246, 63
  %248 = zext i8 %247 to i32
  %249 = or i32 %245, %248
  br label %285

250:                                              ; preds = %235
  %251 = zext i8 %236 to i32
  %252 = shl nuw nsw i32 %251, 12
  %253 = load i8, i8* %31, align 1
  %254 = and i8 %253, 63
  %255 = zext i8 %254 to i32
  %256 = shl nuw nsw i32 %255, 6
  %257 = getelementptr inbounds i8, i8* %30, i64 2
  %258 = load i8, i8* %257, align 1
  %259 = and i8 %258, 63
  %260 = zext i8 %259 to i32
  %261 = and i32 %252, 61440
  %262 = or i32 %256, %261
  %263 = or i32 %262, %260
  br label %285

264:                                              ; preds = %235
  %265 = and i8 %236, 7
  %266 = zext i8 %265 to i32
  %267 = shl nuw nsw i32 %266, 18
  %268 = load i8, i8* %31, align 1
  %269 = and i8 %268, 63
  %270 = zext i8 %269 to i32
  %271 = shl nuw nsw i32 %270, 12
  %272 = or i32 %271, %267
  %273 = getelementptr inbounds i8, i8* %30, i64 2
  %274 = load i8, i8* %273, align 1
  %275 = and i8 %274, 63
  %276 = zext i8 %275 to i32
  %277 = shl nuw nsw i32 %276, 6
  %278 = or i32 %272, %277
  %279 = getelementptr inbounds i8, i8* %30, i64 3
  %280 = load i8, i8* %279, align 1
  %281 = and i8 %280, 63
  %282 = zext i8 %281 to i32
  %283 = or i32 %278, %282
  br label %285

284:                                              ; preds = %235
  call void @abort() #9
  unreachable

285:                                              ; preds = %240, %242, %250, %264
  %286 = phi i32 [ %283, %264 ], [ %263, %250 ], [ %249, %242 ], [ %241, %240 ]
  %287 = lshr i16 %152, 3
  %288 = zext i16 %287 to i32
  %289 = add nsw i32 %286, %288
  %290 = load i16, i16* %18, align 4
  %291 = zext i16 %290 to i32
  %292 = sub i32 %289, %291
  %293 = icmp ult i32 %292, 65536
  br i1 %293, label %294, label %304

294:                                              ; preds = %285
  %295 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %146, i64 0, i32 0
  %296 = load i16*, i16** %295, align 8
  %297 = lshr i32 %292, 6
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds i16, i16* %296, i64 %298
  %300 = load i16, i16* %299, align 2
  %301 = zext i16 %300 to i32
  %302 = and i32 %292, 63
  %303 = add nuw nsw i32 %302, %301
  br label %320

304:                                              ; preds = %285
  %305 = icmp ult i32 %292, 1114112
  br i1 %305, label %306, label %316

306:                                              ; preds = %304
  %307 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %146, i64 0, i32 4
  %308 = load i32, i32* %307, align 8
  %309 = icmp sgt i32 %308, %292
  br i1 %309, label %314, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %146, i64 0, i32 3
  %312 = load i32, i32* %311, align 4
  %313 = add nsw i32 %312, -2
  br label %320

314:                                              ; preds = %306
  %315 = call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %146, i32 %292) #8
  br label %320

316:                                              ; preds = %304
  %317 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %146, i64 0, i32 3
  %318 = load i32, i32* %317, align 4
  %319 = add nsw i32 %318, -1
  br label %320

320:                                              ; preds = %294, %310, %314, %316
  %321 = phi i32 [ %303, %294 ], [ %319, %316 ], [ %313, %310 ], [ %315, %314 ]
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds i16, i16* %149, i64 %322
  %324 = load i16, i16* %323, align 2
  br label %329

325:                                              ; preds = %143
  br i1 %17, label %329, label %326

326:                                              ; preds = %325
  %327 = load i16, i16* %19, align 2
  %328 = icmp ult i16 %152, %327
  br i1 %328, label %533, label %329

329:                                              ; preds = %325, %326, %320
  %330 = phi i16 [ %324, %320 ], [ %152, %326 ], [ %152, %325 ]
  %331 = phi i32 [ %292, %320 ], [ -1, %326 ], [ -1, %325 ]
  %332 = load i16, i16* %20, align 2
  %333 = icmp ult i16 %330, %332
  br i1 %333, label %334, label %398

334:                                              ; preds = %329
  %335 = icmp slt i32 %331, 0
  br i1 %335, label %336, label %386

336:                                              ; preds = %334
  %337 = load i8, i8* %30, align 1
  %338 = ptrtoint i8* %144 to i64
  %339 = ptrtoint i8* %30 to i64
  %340 = sub i64 %338, %339
  switch i64 %340, label %385 [
    i64 1, label %341
    i64 2, label %343
    i64 3, label %351
    i64 4, label %365
  ]

341:                                              ; preds = %336
  %342 = zext i8 %337 to i32
  br label %389

343:                                              ; preds = %336
  %344 = and i8 %337, 31
  %345 = zext i8 %344 to i32
  %346 = shl nuw nsw i32 %345, 6
  %347 = load i8, i8* %31, align 1
  %348 = and i8 %347, 63
  %349 = zext i8 %348 to i32
  %350 = or i32 %346, %349
  br label %386

351:                                              ; preds = %336
  %352 = zext i8 %337 to i32
  %353 = shl nuw nsw i32 %352, 12
  %354 = load i8, i8* %31, align 1
  %355 = and i8 %354, 63
  %356 = zext i8 %355 to i32
  %357 = shl nuw nsw i32 %356, 6
  %358 = getelementptr inbounds i8, i8* %30, i64 2
  %359 = load i8, i8* %358, align 1
  %360 = and i8 %359, 63
  %361 = zext i8 %360 to i32
  %362 = and i32 %353, 61440
  %363 = or i32 %357, %362
  %364 = or i32 %363, %361
  br label %386

365:                                              ; preds = %336
  %366 = and i8 %337, 7
  %367 = zext i8 %366 to i32
  %368 = shl nuw nsw i32 %367, 18
  %369 = load i8, i8* %31, align 1
  %370 = and i8 %369, 63
  %371 = zext i8 %370 to i32
  %372 = shl nuw nsw i32 %371, 12
  %373 = or i32 %372, %368
  %374 = getelementptr inbounds i8, i8* %30, i64 2
  %375 = load i8, i8* %374, align 1
  %376 = and i8 %375, 63
  %377 = zext i8 %376 to i32
  %378 = shl nuw nsw i32 %377, 6
  %379 = or i32 %373, %378
  %380 = getelementptr inbounds i8, i8* %30, i64 3
  %381 = load i8, i8* %380, align 1
  %382 = and i8 %381, 63
  %383 = zext i8 %382 to i32
  %384 = or i32 %379, %383
  br label %386

385:                                              ; preds = %336
  call void @abort() #9
  unreachable

386:                                              ; preds = %365, %351, %343, %334
  %387 = phi i32 [ %331, %334 ], [ %384, %365 ], [ %364, %351 ], [ %350, %343 ]
  %388 = icmp slt i32 %387, 65536
  br i1 %388, label %389, label %393

389:                                              ; preds = %341, %386
  %390 = phi i32 [ %342, %341 ], [ %387, %386 ]
  %391 = trunc i32 %390 to i16
  %392 = call signext i8 @_ZN6icu_6916ReorderingBuffer9appendBMPEDshR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16 zeroext %391, i8 zeroext 0, i32* dereferenceable(4) %6) #8
  br label %395

393:                                              ; preds = %386
  %394 = call signext i8 @_ZN6icu_6916ReorderingBuffer19appendSupplementaryEihR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i32 %387, i8 zeroext 0, i32* dereferenceable(4) %6) #8
  br label %395

395:                                              ; preds = %389, %393
  %396 = phi i8 [ %392, %389 ], [ %394, %393 ]
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %533, label %501

398:                                              ; preds = %329
  %399 = icmp eq i16 %332, %330
  br i1 %399, label %404, label %400

400:                                              ; preds = %398
  %401 = load i16, i16* %21, align 8
  %402 = or i16 %401, 1
  %403 = icmp eq i16 %402, %330
  br i1 %403, label %404, label %476

404:                                              ; preds = %400, %398
  %405 = icmp slt i32 %331, 0
  br i1 %405, label %406, label %456

406:                                              ; preds = %404
  %407 = load i8, i8* %30, align 1
  %408 = ptrtoint i8* %144 to i64
  %409 = ptrtoint i8* %30 to i64
  %410 = sub i64 %408, %409
  switch i64 %410, label %455 [
    i64 1, label %411
    i64 2, label %413
    i64 3, label %421
    i64 4, label %435
  ]

411:                                              ; preds = %406
  %412 = zext i8 %407 to i32
  br label %456

413:                                              ; preds = %406
  %414 = and i8 %407, 31
  %415 = zext i8 %414 to i32
  %416 = shl nuw nsw i32 %415, 6
  %417 = load i8, i8* %31, align 1
  %418 = and i8 %417, 63
  %419 = zext i8 %418 to i32
  %420 = or i32 %416, %419
  br label %456

421:                                              ; preds = %406
  %422 = zext i8 %407 to i32
  %423 = shl nuw nsw i32 %422, 12
  %424 = load i8, i8* %31, align 1
  %425 = and i8 %424, 63
  %426 = zext i8 %425 to i32
  %427 = shl nuw nsw i32 %426, 6
  %428 = getelementptr inbounds i8, i8* %30, i64 2
  %429 = load i8, i8* %428, align 1
  %430 = and i8 %429, 63
  %431 = zext i8 %430 to i32
  %432 = and i32 %423, 61440
  %433 = or i32 %427, %432
  %434 = or i32 %433, %431
  br label %456

435:                                              ; preds = %406
  %436 = and i8 %407, 7
  %437 = zext i8 %436 to i32
  %438 = shl nuw nsw i32 %437, 18
  %439 = load i8, i8* %31, align 1
  %440 = and i8 %439, 63
  %441 = zext i8 %440 to i32
  %442 = shl nuw nsw i32 %441, 12
  %443 = or i32 %442, %438
  %444 = getelementptr inbounds i8, i8* %30, i64 2
  %445 = load i8, i8* %444, align 1
  %446 = and i8 %445, 63
  %447 = zext i8 %446 to i32
  %448 = shl nuw nsw i32 %447, 6
  %449 = or i32 %443, %448
  %450 = getelementptr inbounds i8, i8* %30, i64 3
  %451 = load i8, i8* %450, align 1
  %452 = and i8 %451, 63
  %453 = zext i8 %452 to i32
  %454 = or i32 %449, %453
  br label %456

455:                                              ; preds = %406
  call void @abort() #9
  unreachable

456:                                              ; preds = %435, %421, %413, %411, %404
  %457 = phi i32 [ %331, %404 ], [ %454, %435 ], [ %434, %421 ], [ %420, %413 ], [ %412, %411 ]
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %23) #8
  store i16 -21846, i16* %26, align 2
  %458 = add nsw i32 %457, -44032
  %459 = srem i32 %458, 28
  %460 = sdiv i32 %458, 28
  %461 = sdiv i32 %458, 588
  %462 = trunc i32 %461 to i16
  %463 = add i16 %462, 4352
  store i16 %463, i16* %24, align 2
  %464 = srem i32 %460, 21
  %465 = trunc i32 %464 to i16
  %466 = add nsw i16 %465, 4449
  store i16 %466, i16* %25, align 2
  %467 = icmp eq i32 %459, 0
  br i1 %467, label %471, label %468

468:                                              ; preds = %456
  %469 = trunc i32 %459 to i16
  %470 = add nsw i16 %469, 4519
  store i16 %470, i16* %26, align 2
  br label %471

471:                                              ; preds = %456, %468
  %472 = phi i64 [ 3, %468 ], [ 2, %456 ]
  %473 = getelementptr inbounds [3 x i16], [3 x i16]* %8, i64 0, i64 %472
  %474 = call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* nonnull %24, i16* %473, i32* dereferenceable(4) %6)
  %475 = icmp eq i8 %474, 0
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %23) #8
  br i1 %475, label %533, label %501

476:                                              ; preds = %400
  %477 = load i16*, i16** %22, align 8
  %478 = lshr i16 %330, 1
  %479 = zext i16 %478 to i64
  %480 = getelementptr inbounds i16, i16* %477, i64 %479
  %481 = load i16, i16* %480, align 2
  %482 = and i16 %481, 31
  %483 = zext i16 %482 to i32
  %484 = lshr i16 %481, 8
  %485 = trunc i16 %484 to i8
  %486 = trunc i16 %481 to i8
  %487 = icmp slt i8 %486, 0
  br i1 %487, label %488, label %493

488:                                              ; preds = %476
  %489 = getelementptr inbounds i16, i16* %480, i64 -1
  %490 = load i16, i16* %489, align 2
  %491 = lshr i16 %490, 8
  %492 = trunc i16 %491 to i8
  br label %493

493:                                              ; preds = %476, %488
  %494 = phi i8 [ %492, %488 ], [ 0, %476 ]
  %495 = icmp eq i8 %494, 0
  %496 = and i1 %15, %495
  br i1 %496, label %533, label %497

497:                                              ; preds = %493
  %498 = getelementptr inbounds i16, i16* %480, i64 1
  %499 = call signext i8 @_ZN6icu_6916ReorderingBuffer6appendEPKDsiahhR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %498, i32 %483, i8 signext 1, i8 zeroext %494, i8 zeroext %485, i32* dereferenceable(4) %6)
  %500 = icmp eq i8 %499, 0
  br i1 %500, label %533, label %501

501:                                              ; preds = %471, %497, %395
  switch i32 %3, label %530 [
    i32 2, label %502
    i32 1, label %525
  ]

502:                                              ; preds = %501
  %503 = and i16 %330, 1
  %504 = icmp eq i16 %503, 0
  br i1 %504, label %530, label %505

505:                                              ; preds = %502
  %506 = icmp eq i16 %330, 1
  %507 = or i1 %27, %506
  br i1 %507, label %533, label %508

508:                                              ; preds = %505
  %509 = load i16, i16* %13, align 2
  %510 = icmp ugt i16 %509, %330
  br i1 %510, label %516, label %511

511:                                              ; preds = %508
  %512 = and i16 %330, 6
  %513 = icmp ugt i16 %512, 2
  %514 = icmp ult i8* %144, %2
  %515 = and i1 %513, %514
  br i1 %515, label %532, label %533

516:                                              ; preds = %508
  %517 = load i16*, i16** %22, align 8
  %518 = lshr i16 %330, 1
  %519 = zext i16 %518 to i64
  %520 = getelementptr inbounds i16, i16* %517, i64 %519
  %521 = load i16, i16* %520, align 2
  %522 = icmp ugt i16 %521, 511
  %523 = icmp ult i8* %144, %2
  %524 = and i1 %522, %523
  br i1 %524, label %532, label %533

525:                                              ; preds = %501
  %526 = load i8, i8* %16, align 4
  %527 = icmp ugt i8 %526, 1
  %528 = icmp ult i8* %144, %2
  %529 = and i1 %527, %528
  br i1 %529, label %532, label %533

530:                                              ; preds = %501, %502
  %531 = icmp ult i8* %144, %2
  br i1 %531, label %532, label %533

532:                                              ; preds = %530, %511, %516, %525, %227
  br label %29

533:                                              ; preds = %227, %525, %516, %511, %530, %158, %224, %234, %326, %395, %493, %497, %505, %471, %11, %7
  %534 = phi i8* [ null, %7 ], [ %1, %11 ], [ null, %471 ], [ %144, %516 ], [ %144, %505 ], [ null, %497 ], [ %30, %493 ], [ %144, %525 ], [ null, %395 ], [ %30, %326 ], [ %30, %234 ], [ null, %224 ], [ %30, %158 ], [ %144, %530 ], [ %144, %227 ], [ %144, %511 ]
  ret i8* %534
}

declare signext i8 @_ZN6icu_6912ByteSinkUtil12appendChangeEPKhS2_PKDsiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i8*, i8*, i16*, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6icu_6915Normalizer2Impl16getDecompositionEiPDsRi(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32, i16*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %6 = load i16, i16* %5, align 8
  %7 = zext i16 %6 to i32
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %163, label %9

9:                                                ; preds = %4
  %10 = and i32 %1, -1024
  %11 = icmp eq i32 %10, 55296
  br i1 %11, label %50, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %14 = load %struct.UCPTrie*, %struct.UCPTrie** %13, align 8
  %15 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 1
  %16 = bitcast %union.UCPTrieData* %15 to i16**
  %17 = load i16*, i16** %16, align 8
  %18 = icmp ult i32 %1, 65536
  br i1 %18, label %19, label %29

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = lshr i32 %1, 6
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i16, i16* %21, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  %27 = and i32 %1, 63
  %28 = add nuw nsw i32 %27, %26
  br label %45

29:                                               ; preds = %12
  %30 = icmp ult i32 %1, 1114112
  br i1 %30, label %31, label %41

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, %1
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, -2
  br label %45

39:                                               ; preds = %31
  %40 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %14, i32 %1) #8
  br label %45

41:                                               ; preds = %29
  %42 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, -1
  br label %45

45:                                               ; preds = %41, %39, %35, %19
  %46 = phi i32 [ %28, %19 ], [ %44, %41 ], [ %38, %35 ], [ %40, %39 ]
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i16, i16* %17, i64 %47
  %49 = load i16, i16* %48, align 2
  br label %50

50:                                               ; preds = %9, %45
  %51 = phi i16 [ %49, %45 ], [ 1, %9 ]
  %52 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %53 = load i16, i16* %52, align 2
  %54 = icmp ugt i16 %53, %51
  br i1 %54, label %55, label %163

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %57 = load i16, i16* %56, align 2
  %58 = icmp ugt i16 %57, %51
  br i1 %58, label %121, label %59

59:                                               ; preds = %55
  %60 = lshr i16 %51, 3
  %61 = zext i16 %60 to i32
  %62 = add nsw i32 %61, %1
  %63 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 11
  %64 = load i16, i16* %63, align 4
  %65 = zext i16 %64 to i32
  %66 = sub i32 %62, %65
  store i32 0, i32* %3, align 4
  %67 = icmp ult i32 %66, 65536
  br i1 %67, label %68, label %84

68:                                               ; preds = %59
  %69 = trunc i32 %66 to i16
  store i32 1, i32* %3, align 4
  store i16 %69, i16* %2, align 2
  %70 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %71 = load %struct.UCPTrie*, %struct.UCPTrie** %70, align 8
  %72 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %71, i64 0, i32 1
  %73 = bitcast %union.UCPTrieData* %72 to i16**
  %74 = load i16*, i16** %73, align 8
  %75 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %71, i64 0, i32 0
  %76 = load i16*, i16** %75, align 8
  %77 = lshr i32 %66, 6
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i16, i16* %76, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = and i32 %66, 63
  %83 = add nuw nsw i32 %82, %81
  br label %115

84:                                               ; preds = %59
  %85 = lshr i32 %66, 10
  %86 = trunc i32 %85 to i16
  %87 = add i16 %86, -10304
  store i32 1, i32* %3, align 4
  store i16 %87, i16* %2, align 2
  %88 = trunc i32 %66 to i16
  %89 = and i16 %88, 1023
  %90 = or i16 %89, -9216
  %91 = load i32, i32* %3, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %3, align 4
  %93 = sext i32 %91 to i64
  %94 = getelementptr inbounds i16, i16* %2, i64 %93
  store i16 %90, i16* %94, align 2
  %95 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %96 = load %struct.UCPTrie*, %struct.UCPTrie** %95, align 8
  %97 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %96, i64 0, i32 1
  %98 = bitcast %union.UCPTrieData* %97 to i16**
  %99 = load i16*, i16** %98, align 8
  %100 = icmp ult i32 %66, 1114112
  br i1 %100, label %101, label %111

101:                                              ; preds = %84
  %102 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %96, i64 0, i32 4
  %103 = load i32, i32* %102, align 8
  %104 = icmp sgt i32 %103, %66
  br i1 %104, label %109, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %96, i64 0, i32 3
  %107 = load i32, i32* %106, align 4
  %108 = add nsw i32 %107, -2
  br label %115

109:                                              ; preds = %101
  %110 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %96, i32 %66) #8
  br label %115

111:                                              ; preds = %84
  %112 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %96, i64 0, i32 3
  %113 = load i32, i32* %112, align 4
  %114 = add nsw i32 %113, -1
  br label %115

115:                                              ; preds = %68, %105, %109, %111
  %116 = phi i16* [ %74, %68 ], [ %99, %111 ], [ %99, %105 ], [ %99, %109 ]
  %117 = phi i32 [ %83, %68 ], [ %114, %111 ], [ %108, %105 ], [ %110, %109 ]
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i16, i16* %116, i64 %118
  %120 = load i16, i16* %119, align 2
  br label %121

121:                                              ; preds = %55, %115
  %122 = phi i32 [ %66, %115 ], [ %1, %55 ]
  %123 = phi i16 [ %120, %115 ], [ %51, %55 ]
  %124 = phi i16* [ %2, %115 ], [ null, %55 ]
  %125 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %126 = load i16, i16* %125, align 2
  %127 = icmp ult i16 %123, %126
  br i1 %127, label %163, label %128

128:                                              ; preds = %121
  %129 = icmp eq i16 %126, %123
  br i1 %129, label %135, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 5
  %132 = load i16, i16* %131, align 8
  %133 = or i16 %132, 1
  %134 = icmp eq i16 %133, %123
  br i1 %134, label %135, label %153

135:                                              ; preds = %130, %128
  %136 = add nsw i32 %122, -44032
  %137 = srem i32 %136, 28
  %138 = sdiv i32 %136, 28
  %139 = sdiv i32 %136, 588
  %140 = trunc i32 %139 to i16
  %141 = add i16 %140, 4352
  store i16 %141, i16* %2, align 2
  %142 = srem i32 %138, 21
  %143 = trunc i32 %142 to i16
  %144 = add nsw i16 %143, 4449
  %145 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %144, i16* %145, align 2
  %146 = icmp eq i32 %137, 0
  br i1 %146, label %151, label %147

147:                                              ; preds = %135
  %148 = trunc i32 %137 to i16
  %149 = add nsw i16 %148, 4519
  %150 = getelementptr inbounds i16, i16* %2, i64 2
  store i16 %149, i16* %150, align 2
  br label %151

151:                                              ; preds = %135, %147
  %152 = phi i32 [ 3, %147 ], [ 2, %135 ]
  store i32 %152, i32* %3, align 4
  br label %163

153:                                              ; preds = %130
  %154 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %155 = load i16*, i16** %154, align 8
  %156 = lshr i16 %123, 1
  %157 = zext i16 %156 to i64
  %158 = getelementptr inbounds i16, i16* %155, i64 %157
  %159 = load i16, i16* %158, align 2
  %160 = and i16 %159, 31
  %161 = zext i16 %160 to i32
  store i32 %161, i32* %3, align 4
  %162 = getelementptr inbounds i16, i16* %158, i64 1
  br label %163

163:                                              ; preds = %151, %153, %121, %4, %50
  %164 = phi i16* [ null, %50 ], [ null, %4 ], [ %2, %151 ], [ %162, %153 ], [ %124, %121 ]
  ret i16* %164
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6icu_6915Normalizer2Impl19getRawDecompositionEiPDsRi(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32, i16*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %6 = load i16, i16* %5, align 8
  %7 = zext i16 %6 to i32
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %144, label %9

9:                                                ; preds = %4
  %10 = and i32 %1, -1024
  %11 = icmp eq i32 %10, 55296
  br i1 %11, label %50, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %14 = load %struct.UCPTrie*, %struct.UCPTrie** %13, align 8
  %15 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 1
  %16 = bitcast %union.UCPTrieData* %15 to i16**
  %17 = load i16*, i16** %16, align 8
  %18 = icmp ult i32 %1, 65536
  br i1 %18, label %19, label %29

19:                                               ; preds = %12
  %20 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = lshr i32 %1, 6
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i16, i16* %21, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  %27 = and i32 %1, 63
  %28 = add nuw nsw i32 %27, %26
  br label %45

29:                                               ; preds = %12
  %30 = icmp ult i32 %1, 1114112
  br i1 %30, label %31, label %41

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 4
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, %1
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, -2
  br label %45

39:                                               ; preds = %31
  %40 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %14, i32 %1) #8
  br label %45

41:                                               ; preds = %29
  %42 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, -1
  br label %45

45:                                               ; preds = %41, %39, %35, %19
  %46 = phi i32 [ %28, %19 ], [ %44, %41 ], [ %38, %35 ], [ %40, %39 ]
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i16, i16* %17, i64 %47
  %49 = load i16, i16* %48, align 2
  br label %50

50:                                               ; preds = %9, %45
  %51 = phi i16 [ %49, %45 ], [ 1, %9 ]
  %52 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %53 = load i16, i16* %52, align 2
  %54 = icmp ugt i16 %53, %51
  br i1 %54, label %144, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %57 = load i16, i16* %56, align 2
  %58 = icmp ugt i16 %57, %51
  br i1 %58, label %59, label %144

59:                                               ; preds = %55
  %60 = icmp eq i16 %53, %51
  br i1 %60, label %66, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 5
  %63 = load i16, i16* %62, align 8
  %64 = or i16 %63, 1
  %65 = icmp eq i16 %64, %51
  br i1 %65, label %66, label %85

66:                                               ; preds = %61, %59
  %67 = add nsw i32 %1, -44032
  %68 = srem i32 %67, 28
  %69 = sdiv i32 %67, 28
  %70 = icmp eq i32 %68, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %66
  %72 = sdiv i32 %67, 588
  %73 = trunc i32 %72 to i16
  %74 = add i16 %73, 4352
  store i16 %74, i16* %2, align 2
  %75 = srem i32 %69, 21
  br label %79

76:                                               ; preds = %66
  %77 = sub nsw i32 %1, %68
  %78 = trunc i32 %77 to i16
  store i16 %78, i16* %2, align 2
  br label %79

79:                                               ; preds = %71, %76
  %80 = phi i32 [ %75, %71 ], [ %68, %76 ]
  %81 = phi i16 [ 4449, %71 ], [ 4519, %76 ]
  %82 = trunc i32 %80 to i16
  %83 = add nsw i16 %81, %82
  %84 = getelementptr inbounds i16, i16* %2, i64 1
  store i16 %83, i16* %84, align 2
  store i32 2, i32* %3, align 4
  br label %144

85:                                               ; preds = %61
  %86 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %87 = load i16, i16* %86, align 2
  %88 = icmp ugt i16 %87, %51
  br i1 %88, label %111, label %89

89:                                               ; preds = %85
  %90 = lshr i16 %51, 3
  %91 = zext i16 %90 to i32
  %92 = add nsw i32 %91, %1
  %93 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 11
  %94 = load i16, i16* %93, align 4
  %95 = zext i16 %94 to i32
  %96 = sub i32 %92, %95
  store i32 0, i32* %3, align 4
  %97 = icmp ult i32 %96, 65536
  br i1 %97, label %98, label %100

98:                                               ; preds = %89
  %99 = trunc i32 %96 to i16
  store i32 1, i32* %3, align 4
  store i16 %99, i16* %2, align 2
  br label %144

100:                                              ; preds = %89
  %101 = lshr i32 %96, 10
  %102 = trunc i32 %101 to i16
  %103 = add i16 %102, -10304
  store i32 1, i32* %3, align 4
  store i16 %103, i16* %2, align 2
  %104 = trunc i32 %96 to i16
  %105 = and i16 %104, 1023
  %106 = or i16 %105, -9216
  %107 = load i32, i32* %3, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %3, align 4
  %109 = sext i32 %107 to i64
  %110 = getelementptr inbounds i16, i16* %2, i64 %109
  store i16 %106, i16* %110, align 2
  br label %144

111:                                              ; preds = %85
  %112 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %113 = load i16*, i16** %112, align 8
  %114 = lshr i16 %51, 1
  %115 = zext i16 %114 to i64
  %116 = getelementptr inbounds i16, i16* %113, i64 %115
  %117 = load i16, i16* %116, align 2
  %118 = zext i16 %117 to i32
  %119 = and i32 %118, 31
  %120 = and i32 %118, 64
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %142, label %122

122:                                              ; preds = %111
  %123 = lshr i32 %118, 7
  %124 = and i32 %123, 1
  %125 = zext i32 %124 to i64
  %126 = sub nsw i64 0, %125
  %127 = getelementptr inbounds i16, i16* %116, i64 %126
  %128 = getelementptr inbounds i16, i16* %127, i64 -1
  %129 = load i16, i16* %128, align 2
  %130 = icmp ult i16 %129, 32
  br i1 %130, label %131, label %136

131:                                              ; preds = %122
  %132 = zext i16 %129 to i32
  store i32 %132, i32* %3, align 4
  %133 = zext i16 %129 to i64
  %134 = sub nsw i64 0, %133
  %135 = getelementptr inbounds i16, i16* %128, i64 %134
  br label %144

136:                                              ; preds = %122
  store i16 %129, i16* %2, align 2
  %137 = getelementptr inbounds i16, i16* %2, i64 1
  %138 = getelementptr inbounds i16, i16* %116, i64 3
  %139 = add nsw i32 %119, -2
  %140 = tail call i16* @u_memcpy_69(i16* %137, i16* %138, i32 %139) #8
  %141 = add nsw i32 %119, -1
  store i32 %141, i32* %3, align 4
  br label %144

142:                                              ; preds = %111
  store i32 %119, i32* %3, align 4
  %143 = getelementptr inbounds i16, i16* %116, i64 1
  br label %144

144:                                              ; preds = %50, %142, %136, %131, %98, %100, %4, %55, %79
  %145 = phi i16* [ %2, %79 ], [ null, %55 ], [ null, %4 ], [ %2, %100 ], [ %2, %98 ], [ %143, %142 ], [ %135, %131 ], [ %2, %136 ], [ null, %50 ]
  ret i16* %145
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6915Normalizer2Impl18decomposeAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16*, i16*, i8 signext, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 3
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 4
  %11 = bitcast i16** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint i16* %9 to i64
  %14 = sub i64 %12, %13
  %15 = lshr exact i64 %14, 1
  %16 = trunc i64 %15 to i32
  tail call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %4) #8
  %17 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 0
  %18 = load i16, i16* %17, align 8
  %19 = icmp slt i16 %18, 0
  %20 = lshr i16 %18, 5
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %4, i64 0, i32 1, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = select i1 %19, i32 %23, i32 %21
  %25 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiPKDsii(%"class.icu_69::UnicodeString"* %4, i32 0, i32 %24, i16* %9, i32 0, i32 %16) #8
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %9) #8, !srcloc !4
  %26 = icmp eq i8 %3, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %7
  %28 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 6
  %29 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %30 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %31 = icmp eq i16* %1, %2
  br i1 %31, label %130, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  br label %36

34:                                               ; preds = %7
  %35 = tail call i16* @_ZNK6icu_6915Normalizer2Impl9decomposeEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i16* %1, i16* %2, %"class.icu_69::ReorderingBuffer"* %5, i32* dereferenceable(4) %6)
  br label %148

36:                                               ; preds = %32, %122
  %37 = phi i16* [ %1, %32 ], [ %90, %122 ]
  %38 = phi i8 [ 0, %32 ], [ %120, %122 ]
  %39 = phi i8 [ 0, %32 ], [ %126, %122 ]
  %40 = phi i8 [ 1, %32 ], [ %125, %122 ]
  %41 = getelementptr inbounds i16, i16* %37, i64 1
  %42 = load i16, i16* %37, align 2
  %43 = zext i16 %42 to i32
  %44 = and i32 %43, 63488
  %45 = icmp eq i32 %44, 55296
  br i1 %45, label %57, label %46

46:                                               ; preds = %36
  %47 = load %struct.UCPTrie*, %struct.UCPTrie** %33, align 8
  %48 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %47, i64 0, i32 0
  %49 = load i16*, i16** %48, align 8
  %50 = lshr i32 %43, 6
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %49, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i32
  %55 = and i32 %43, 63
  %56 = add nuw nsw i32 %55, %54
  br label %88

57:                                               ; preds = %36
  %58 = and i32 %43, 1024
  %59 = icmp ne i32 %58, 0
  %60 = icmp eq i16* %41, %2
  %61 = or i1 %60, %59
  br i1 %61, label %83, label %62

62:                                               ; preds = %57
  %63 = load i16, i16* %41, align 2
  %64 = zext i16 %63 to i32
  %65 = and i32 %64, 64512
  %66 = icmp eq i32 %65, 56320
  br i1 %66, label %67, label %83

67:                                               ; preds = %62
  %68 = getelementptr inbounds i16, i16* %37, i64 2
  %69 = shl nuw nsw i32 %43, 10
  %70 = add nsw i32 %69, -56613888
  %71 = add nsw i32 %70, %64
  %72 = load %struct.UCPTrie*, %struct.UCPTrie** %33, align 8
  %73 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %72, i64 0, i32 4
  %74 = load i32, i32* %73, align 8
  %75 = icmp slt i32 %71, %74
  br i1 %75, label %80, label %76

76:                                               ; preds = %67
  %77 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %72, i64 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = add nsw i32 %78, -2
  br label %88

80:                                               ; preds = %67
  %81 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %72, i32 %71) #8
  %82 = load %struct.UCPTrie*, %struct.UCPTrie** %33, align 8
  br label %88

83:                                               ; preds = %57, %62
  %84 = load %struct.UCPTrie*, %struct.UCPTrie** %33, align 8
  %85 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %84, i64 0, i32 3
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %86, -1
  br label %88

88:                                               ; preds = %83, %80, %76, %46
  %89 = phi %struct.UCPTrie* [ %47, %46 ], [ %84, %83 ], [ %82, %80 ], [ %72, %76 ]
  %90 = phi i16* [ %41, %46 ], [ %41, %83 ], [ %68, %80 ], [ %68, %76 ]
  %91 = phi i32 [ %56, %46 ], [ %87, %83 ], [ %81, %80 ], [ %79, %76 ]
  %92 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %89, i64 0, i32 1
  %93 = bitcast %union.UCPTrieData* %92 to i16**
  %94 = load i16*, i16** %93, align 8
  %95 = sext i32 %91 to i64
  %96 = getelementptr inbounds i16, i16* %94, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = icmp ugt i16 %97, -1025
  br i1 %98, label %99, label %101

99:                                               ; preds = %88
  %100 = lshr i16 %97, 1
  br label %118

101:                                              ; preds = %88
  %102 = load i16, i16* %28, align 2
  %103 = icmp ugt i16 %102, %97
  br i1 %103, label %130, label %104

104:                                              ; preds = %101
  %105 = load i16, i16* %29, align 2
  %106 = icmp ugt i16 %105, %97
  br i1 %106, label %107, label %130

107:                                              ; preds = %104
  %108 = load i16*, i16** %30, align 8
  %109 = lshr i16 %97, 1
  %110 = zext i16 %109 to i64
  %111 = getelementptr inbounds i16, i16* %108, i64 %110
  %112 = load i16, i16* %111, align 2
  %113 = trunc i16 %112 to i8
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %130

115:                                              ; preds = %107
  %116 = getelementptr inbounds i16, i16* %111, i64 -1
  %117 = load i16, i16* %116, align 2
  br label %118

118:                                              ; preds = %99, %115
  %119 = phi i16 [ %100, %99 ], [ %117, %115 ]
  %120 = trunc i16 %119 to i8
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %130, label %122

122:                                              ; preds = %118
  %123 = and i8 %40, 1
  %124 = icmp eq i8 %123, 0
  %125 = select i1 %124, i8 %40, i8 0
  %126 = select i1 %124, i8 %39, i8 %120
  %127 = icmp eq i16* %90, %2
  br i1 %127, label %128, label %36

128:                                              ; preds = %122
  %129 = trunc i16 %119 to i8
  br label %130

130:                                              ; preds = %107, %101, %104, %118, %128, %27
  %131 = phi i8 [ 0, %27 ], [ %126, %128 ], [ %39, %118 ], [ %39, %104 ], [ %39, %101 ], [ %39, %107 ]
  %132 = phi i8 [ 0, %27 ], [ %129, %128 ], [ %38, %118 ], [ %38, %104 ], [ %38, %101 ], [ %38, %107 ]
  %133 = phi i16* [ %1, %27 ], [ %2, %128 ], [ %37, %118 ], [ %37, %104 ], [ %37, %101 ], [ %37, %107 ]
  %134 = icmp eq i16* %2, null
  br i1 %134, label %135, label %137

135:                                              ; preds = %130
  %136 = tail call i16* @u_strchr_69(i16* %133, i16 zeroext 0) #8
  br label %137

137:                                              ; preds = %135, %130
  %138 = phi i16* [ %136, %135 ], [ %2, %130 ]
  %139 = ptrtoint i16* %133 to i64
  %140 = ptrtoint i16* %1 to i64
  %141 = sub i64 %139, %140
  %142 = lshr exact i64 %141, 1
  %143 = trunc i64 %142 to i32
  %144 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer6appendEPKDsiahhR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %1, i32 %143, i8 signext 0, i8 zeroext %131, i8 zeroext %132, i32* dereferenceable(4) %6)
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %137
  %147 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %133, i16* %138, i32* dereferenceable(4) %6)
  br label %148

148:                                              ; preds = %146, %137, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl23hasDecompBoundaryBeforeEi(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 3
  %4 = load i16, i16* %3, align 4
  %5 = zext i16 %4 to i32
  %6 = icmp sgt i32 %5, %1
  br i1 %6, label %94, label %7

7:                                                ; preds = %2
  %8 = icmp slt i32 %1, 65536
  br i1 %8, label %9, label %24

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 16
  %11 = load i8*, i8** %10, align 8
  %12 = ashr i32 %1, 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %94, label %17

17:                                               ; preds = %9
  %18 = zext i8 %15 to i32
  %19 = lshr i32 %1, 5
  %20 = and i32 %19, 7
  %21 = shl i32 1, %20
  %22 = and i32 %21, %18
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %94, label %24

24:                                               ; preds = %17, %7
  %25 = and i32 %1, -1024
  %26 = icmp eq i32 %25, 55296
  br i1 %26, label %65, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %29 = load %struct.UCPTrie*, %struct.UCPTrie** %28, align 8
  %30 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 1
  %31 = bitcast %union.UCPTrieData* %30 to i16**
  %32 = load i16*, i16** %31, align 8
  %33 = icmp ult i32 %1, 65536
  br i1 %33, label %34, label %44

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = lshr i32 %1, 6
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %36, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = and i32 %1, 63
  %43 = add nuw nsw i32 %42, %41
  br label %60

44:                                               ; preds = %27
  %45 = icmp ult i32 %1, 1114112
  br i1 %45, label %46, label %56

46:                                               ; preds = %44
  %47 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %48, %1
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %52, -2
  br label %60

54:                                               ; preds = %46
  %55 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %29, i32 %1) #8
  br label %60

56:                                               ; preds = %44
  %57 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, -1
  br label %60

60:                                               ; preds = %56, %54, %50, %34
  %61 = phi i32 [ %43, %34 ], [ %59, %56 ], [ %53, %50 ], [ %55, %54 ]
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i16, i16* %32, i64 %62
  %64 = load i16, i16* %63, align 2
  br label %65

65:                                               ; preds = %24, %60
  %66 = phi i16 [ %64, %60 ], [ 1, %24 ]
  %67 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %68 = load i16, i16* %67, align 2
  %69 = icmp ugt i16 %68, %66
  br i1 %69, label %91, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %72 = load i16, i16* %71, align 2
  %73 = icmp ugt i16 %72, %66
  br i1 %73, label %78, label %74

74:                                               ; preds = %70
  %75 = icmp ult i16 %66, -1023
  %76 = icmp eq i16 %66, -512
  %77 = or i1 %75, %76
  br label %91

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %80 = load i16*, i16** %79, align 8
  %81 = lshr i16 %66, 1
  %82 = zext i16 %81 to i64
  %83 = getelementptr inbounds i16, i16* %80, i64 %82
  %84 = load i16, i16* %83, align 2
  %85 = trunc i16 %84 to i8
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %91, label %87

87:                                               ; preds = %78
  %88 = getelementptr inbounds i16, i16* %83, i64 -1
  %89 = load i16, i16* %88, align 2
  %90 = icmp ult i16 %89, 256
  br label %91

91:                                               ; preds = %65, %74, %78, %87
  %92 = phi i1 [ %77, %74 ], [ true, %65 ], [ true, %78 ], [ %90, %87 ]
  %93 = zext i1 %92 to i8
  br label %94

94:                                               ; preds = %9, %17, %91, %2
  %95 = phi i8 [ 1, %17 ], [ 1, %2 ], [ %93, %91 ], [ 1, %9 ]
  ret i8 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl22hasDecompBoundaryAfterEi(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %4 = load i16, i16* %3, align 8
  %5 = zext i16 %4 to i32
  %6 = icmp sgt i32 %5, %1
  br i1 %6, label %110, label %7

7:                                                ; preds = %2
  %8 = icmp slt i32 %1, 65536
  br i1 %8, label %9, label %24

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 16
  %11 = load i8*, i8** %10, align 8
  %12 = ashr i32 %1, 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %110, label %17

17:                                               ; preds = %9
  %18 = zext i8 %15 to i32
  %19 = lshr i32 %1, 5
  %20 = and i32 %19, 7
  %21 = shl i32 1, %20
  %22 = and i32 %21, %18
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %110, label %24

24:                                               ; preds = %17, %7
  %25 = and i32 %1, -1024
  %26 = icmp eq i32 %25, 55296
  br i1 %26, label %65, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %29 = load %struct.UCPTrie*, %struct.UCPTrie** %28, align 8
  %30 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 1
  %31 = bitcast %union.UCPTrieData* %30 to i16**
  %32 = load i16*, i16** %31, align 8
  %33 = icmp ult i32 %1, 65536
  br i1 %33, label %34, label %44

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = lshr i32 %1, 6
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %36, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = and i32 %1, 63
  %43 = add nuw nsw i32 %42, %41
  br label %60

44:                                               ; preds = %27
  %45 = icmp ult i32 %1, 1114112
  br i1 %45, label %46, label %56

46:                                               ; preds = %44
  %47 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %48, %1
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %52, -2
  br label %60

54:                                               ; preds = %46
  %55 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %29, i32 %1) #8
  br label %60

56:                                               ; preds = %44
  %57 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, -1
  br label %60

60:                                               ; preds = %56, %54, %50, %34
  %61 = phi i32 [ %43, %34 ], [ %59, %56 ], [ %53, %50 ], [ %55, %54 ]
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i16, i16* %32, i64 %62
  %64 = load i16, i16* %63, align 2
  br label %65

65:                                               ; preds = %24, %60
  %66 = phi i16 [ %64, %60 ], [ 1, %24 ]
  %67 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %68 = load i16, i16* %67, align 2
  %69 = icmp ult i16 %68, %66
  br i1 %69, label %70, label %107

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 5
  %72 = load i16, i16* %71, align 8
  %73 = or i16 %72, 1
  %74 = icmp eq i16 %73, %66
  br i1 %74, label %107, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %77 = load i16, i16* %76, align 2
  %78 = icmp ugt i16 %77, %66
  br i1 %78, label %90, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %81 = load i16, i16* %80, align 2
  %82 = icmp ugt i16 %81, %66
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = icmp ult i16 %66, -1023
  %85 = icmp eq i16 %66, -512
  %86 = or i1 %84, %85
  br label %107

87:                                               ; preds = %79
  %88 = and i16 %66, 6
  %89 = icmp ult i16 %88, 3
  br label %107

90:                                               ; preds = %75
  %91 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %92 = load i16*, i16** %91, align 8
  %93 = lshr i16 %66, 1
  %94 = zext i16 %93 to i64
  %95 = getelementptr inbounds i16, i16* %92, i64 %94
  %96 = load i16, i16* %95, align 2
  %97 = icmp ugt i16 %96, 511
  br i1 %97, label %107, label %98

98:                                               ; preds = %90
  %99 = icmp ult i16 %96, 256
  %100 = trunc i16 %96 to i8
  %101 = icmp sgt i8 %100, -1
  %102 = or i1 %99, %101
  br i1 %102, label %107, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds i16, i16* %95, i64 -1
  %105 = load i16, i16* %104, align 2
  %106 = icmp ult i16 %105, 256
  br label %107

107:                                              ; preds = %65, %70, %83, %87, %90, %98, %103
  %108 = phi i1 [ %86, %83 ], [ %89, %87 ], [ true, %70 ], [ true, %65 ], [ false, %90 ], [ true, %98 ], [ %106, %103 ]
  %109 = zext i1 %108 to i8
  br label %110

110:                                              ; preds = %9, %17, %2, %107
  %111 = phi i8 [ %109, %107 ], [ 1, %2 ], [ 1, %17 ], [ 1, %9 ]
  ret i8 %111
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl28norm16HasDecompBoundaryAfterEt(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %4 = load i16, i16* %3, align 2
  %5 = icmp ult i16 %4, %1
  br i1 %5, label %6, label %43

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 5
  %8 = load i16, i16* %7, align 8
  %9 = or i16 %8, 1
  %10 = icmp eq i16 %9, %1
  br i1 %10, label %43, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %13 = load i16, i16* %12, align 2
  %14 = icmp ugt i16 %13, %1
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %17 = load i16, i16* %16, align 2
  %18 = icmp ugt i16 %17, %1
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = icmp ult i16 %1, -1023
  %21 = icmp eq i16 %1, -512
  %22 = or i1 %20, %21
  br label %43

23:                                               ; preds = %15
  %24 = and i16 %1, 6
  %25 = icmp ult i16 %24, 3
  br label %43

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %28 = load i16*, i16** %27, align 8
  %29 = lshr i16 %1, 1
  %30 = zext i16 %29 to i64
  %31 = getelementptr inbounds i16, i16* %28, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = icmp ugt i16 %32, 511
  br i1 %33, label %43, label %34

34:                                               ; preds = %26
  %35 = icmp ult i16 %32, 256
  %36 = trunc i16 %32 to i8
  %37 = icmp sgt i8 %36, -1
  %38 = or i1 %35, %37
  br i1 %38, label %43, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds i16, i16* %31, i64 -1
  %41 = load i16, i16* %40, align 2
  %42 = icmp ult i16 %41, 256
  br label %43

43:                                               ; preds = %6, %26, %34, %39, %2, %23, %19
  %44 = phi i1 [ %22, %19 ], [ %25, %23 ], [ true, %6 ], [ true, %2 ], [ false, %26 ], [ true, %34 ], [ %42, %39 ]
  %45 = zext i1 %44 to i8
  ret i8 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6icu_6915Normalizer2Impl7combineEPKti(i16* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp slt i32 %1, 13312
  br i1 %3, label %4, label %39

4:                                                ; preds = %2
  %5 = shl i32 %1, 1
  %6 = and i32 %5, 65534
  %7 = load i16, i16* %0, align 2
  %8 = zext i16 %7 to i32
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %22

10:                                               ; preds = %4, %10
  %11 = phi i32 [ %18, %10 ], [ %8, %4 ]
  %12 = phi i16* [ %16, %10 ], [ %0, %4 ]
  %13 = and i32 %11, 1
  %14 = or i32 %13, 2
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i16, i16* %12, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = icmp ugt i32 %6, %18
  br i1 %19, label %10, label %20

20:                                               ; preds = %10
  %21 = zext i16 %17 to i32
  br label %22

22:                                               ; preds = %20, %4
  %23 = phi i16* [ %0, %4 ], [ %16, %20 ]
  %24 = phi i32 [ %8, %4 ], [ %21, %20 ]
  %25 = and i32 %24, 32766
  %26 = icmp eq i32 %6, %25
  br i1 %26, label %27, label %78

27:                                               ; preds = %22
  %28 = and i32 %24, 1
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds i16, i16* %23, i64 1
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  br i1 %29, label %78, label %33

33:                                               ; preds = %27
  %34 = shl nuw i32 %32, 16
  %35 = getelementptr inbounds i16, i16* %23, i64 2
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = or i32 %34, %37
  br label %78

39:                                               ; preds = %2
  %40 = lshr i32 %1, 9
  %41 = add nuw nsw i32 %40, 13312
  %42 = and i32 %41, 65534
  %43 = shl i32 %1, 6
  %44 = and i32 %43, 65472
  br label %45

45:                                               ; preds = %68, %39
  %46 = phi i16* [ %0, %39 ], [ %70, %68 ]
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = icmp ugt i32 %42, %48
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  %51 = and i32 %48, 1
  %52 = or i32 %51, 2
  %53 = zext i32 %52 to i64
  br label %68

54:                                               ; preds = %45
  %55 = and i32 %48, 32766
  %56 = icmp eq i32 %42, %55
  br i1 %56, label %57, label %78

57:                                               ; preds = %54
  %58 = getelementptr inbounds i16, i16* %46, i64 1
  %59 = load i16, i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = icmp ugt i32 %44, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = icmp slt i16 %47, 0
  br i1 %63, label %78, label %68

64:                                               ; preds = %57
  %65 = zext i16 %59 to i32
  %66 = and i32 %65, 65472
  %67 = icmp eq i32 %44, %66
  br i1 %67, label %71, label %78

68:                                               ; preds = %62, %50
  %69 = phi i64 [ %53, %50 ], [ 3, %62 ]
  %70 = getelementptr inbounds i16, i16* %46, i64 %69
  br label %45

71:                                               ; preds = %64
  %72 = shl nuw i32 %65, 16
  %73 = and i32 %72, 4128768
  %74 = getelementptr inbounds i16, i16* %46, i64 2
  %75 = load i16, i16* %74, align 2
  %76 = zext i16 %75 to i32
  %77 = or i32 %73, %76
  br label %78

78:                                               ; preds = %62, %54, %64, %22, %71, %27, %33
  %79 = phi i32 [ %38, %33 ], [ %77, %71 ], [ %32, %27 ], [ -1, %22 ], [ -1, %64 ], [ -1, %54 ], [ -1, %62 ]
  ret i32 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6915Normalizer2Impl13addCompositesEPKtRNS_10UnicodeSetE(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16* nocapture readonly, %"class.icu_69::UnicodeSet"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %5 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  br label %6

6:                                                ; preds = %74, %3
  %7 = phi i16* [ %1, %3 ], [ %24, %74 ]
  %8 = load i16, i16* %7, align 2
  %9 = and i16 %8, 1
  %10 = icmp eq i16 %9, 0
  %11 = getelementptr inbounds i16, i16* %7, i64 1
  %12 = load i16, i16* %11, align 2
  %13 = zext i16 %12 to i32
  br i1 %10, label %21, label %14

14:                                               ; preds = %6
  %15 = shl nuw i32 %13, 16
  %16 = and i32 %15, 4128768
  %17 = getelementptr inbounds i16, i16* %7, i64 2
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = or i32 %16, %19
  br label %21

21:                                               ; preds = %6, %14
  %22 = phi i64 [ 3, %14 ], [ 2, %6 ]
  %23 = phi i32 [ %20, %14 ], [ %13, %6 ]
  %24 = getelementptr inbounds i16, i16* %7, i64 %22
  %25 = ashr i32 %23, 1
  %26 = and i32 %23, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %74, label %28

28:                                               ; preds = %21
  %29 = load %struct.UCPTrie*, %struct.UCPTrie** %4, align 8
  %30 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 1
  %31 = bitcast %union.UCPTrieData* %30 to i16**
  %32 = load i16*, i16** %31, align 8
  %33 = icmp ult i32 %25, 65536
  br i1 %33, label %34, label %44

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = lshr i32 %25, 6
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %36, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = and i32 %25, 63
  %43 = add nuw nsw i32 %42, %41
  br label %60

44:                                               ; preds = %28
  %45 = icmp ult i32 %25, 1114112
  br i1 %45, label %46, label %56

46:                                               ; preds = %44
  %47 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %48, %25
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %52, -2
  br label %60

54:                                               ; preds = %46
  %55 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %29, i32 %25) #8
  br label %60

56:                                               ; preds = %44
  %57 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %29, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, -1
  br label %60

60:                                               ; preds = %34, %50, %54, %56
  %61 = phi i32 [ %43, %34 ], [ %59, %56 ], [ %53, %50 ], [ %55, %54 ]
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i16, i16* %32, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = load i16*, i16** %5, align 8
  %66 = lshr i16 %64, 1
  %67 = zext i16 %66 to i64
  %68 = getelementptr inbounds i16, i16* %65, i64 %67
  %69 = getelementptr inbounds i16, i16* %68, i64 1
  %70 = load i16, i16* %68, align 2
  %71 = and i16 %70, 31
  %72 = zext i16 %71 to i64
  %73 = getelementptr inbounds i16, i16* %69, i64 %72
  tail call void @_ZNK6icu_6915Normalizer2Impl13addCompositesEPKtRNS_10UnicodeSetE(%"class.icu_69::Normalizer2Impl"* %0, i16* %73, %"class.icu_69::UnicodeSet"* dereferenceable(200) %2)
  br label %74

74:                                               ; preds = %21, %60
  %75 = tail call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEi(%"class.icu_69::UnicodeSet"* %2, i32 %25) #8
  %76 = icmp sgt i16 %8, -1
  br i1 %76, label %6, label %77

77:                                               ; preds = %74
  ret void
}

declare dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEi(%"class.icu_69::UnicodeSet"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6915Normalizer2Impl9recomposeERNS_16ReorderingBufferEia(%"class.icu_69::Normalizer2Impl"* nocapture readonly, %"class.icu_69::ReorderingBuffer"* nocapture dereferenceable(64), i32, i8 signext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %1, i64 0, i32 2
  %6 = load i16*, i16** %5, align 8
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds i16, i16* %6, i64 %7
  %9 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %1, i64 0, i32 4
  %10 = load i16*, i16** %9, align 8
  %11 = icmp eq i16* %8, %10
  br i1 %11, label %707, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %14 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %15 = icmp eq i8 %3, 0
  %16 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 14
  %17 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  br label %18

18:                                               ; preds = %610, %12
  %19 = phi i16* [ %8, %12 ], [ %611, %610 ]
  %20 = phi i16* [ %10, %12 ], [ %612, %610 ]
  %21 = phi i16* [ null, %12 ], [ %28, %610 ]
  %22 = phi i16* [ null, %12 ], [ %613, %610 ]
  %23 = phi i8 [ 0, %12 ], [ %35, %610 ]
  %24 = phi i8 [ 0, %12 ], [ %614, %610 ]
  %25 = bitcast i16* %20 to i8*
  br label %26

26:                                               ; preds = %686, %18
  %27 = phi i16* [ %19, %18 ], [ %85, %686 ]
  %28 = phi i16* [ %21, %18 ], [ %690, %686 ]
  %29 = phi i16* [ %22, %18 ], [ %684, %686 ]
  %30 = phi i8 [ %23, %18 ], [ %97, %686 ]
  %31 = phi i8 [ %24, %18 ], [ %691, %686 ]
  br label %32

32:                                               ; preds = %668, %26
  %33 = phi i16* [ %27, %26 ], [ %85, %668 ]
  %34 = phi i16* [ %29, %26 ], [ %669, %668 ]
  %35 = phi i8 [ %30, %26 ], [ %97, %668 ]
  %36 = getelementptr inbounds i16, i16* %33, i64 1
  %37 = load i16, i16* %33, align 2
  %38 = zext i16 %37 to i32
  %39 = and i32 %38, 63488
  %40 = icmp eq i32 %39, 55296
  br i1 %40, label %52, label %41

41:                                               ; preds = %32
  %42 = load %struct.UCPTrie*, %struct.UCPTrie** %13, align 8
  %43 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %42, i64 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = lshr i32 %38, 6
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %44, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = and i32 %38, 63
  %51 = add nuw nsw i32 %50, %49
  br label %83

52:                                               ; preds = %32
  %53 = and i32 %38, 1024
  %54 = icmp ne i32 %53, 0
  %55 = icmp eq i16* %36, %20
  %56 = or i1 %55, %54
  br i1 %56, label %78, label %57

57:                                               ; preds = %52
  %58 = load i16, i16* %36, align 2
  %59 = zext i16 %58 to i32
  %60 = and i32 %59, 64512
  %61 = icmp eq i32 %60, 56320
  br i1 %61, label %62, label %78

62:                                               ; preds = %57
  %63 = getelementptr inbounds i16, i16* %33, i64 2
  %64 = shl nuw nsw i32 %38, 10
  %65 = add nsw i32 %64, -56613888
  %66 = add nsw i32 %65, %59
  %67 = load %struct.UCPTrie*, %struct.UCPTrie** %13, align 8
  %68 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %67, i64 0, i32 4
  %69 = load i32, i32* %68, align 8
  %70 = icmp slt i32 %66, %69
  br i1 %70, label %75, label %71

71:                                               ; preds = %62
  %72 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %67, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = add nsw i32 %73, -2
  br label %83

75:                                               ; preds = %62
  %76 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %67, i32 %66) #8
  %77 = load %struct.UCPTrie*, %struct.UCPTrie** %13, align 8
  br label %83

78:                                               ; preds = %52, %57
  %79 = load %struct.UCPTrie*, %struct.UCPTrie** %13, align 8
  %80 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %79, i64 0, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = add nsw i32 %81, -1
  br label %83

83:                                               ; preds = %78, %75, %71, %41
  %84 = phi %struct.UCPTrie* [ %42, %41 ], [ %79, %78 ], [ %77, %75 ], [ %67, %71 ]
  %85 = phi i16* [ %36, %41 ], [ %36, %78 ], [ %63, %75 ], [ %63, %71 ]
  %86 = phi i32 [ %38, %41 ], [ %38, %78 ], [ %66, %75 ], [ %66, %71 ]
  %87 = phi i32 [ %51, %41 ], [ %82, %78 ], [ %76, %75 ], [ %74, %71 ]
  %88 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %84, i64 0, i32 1
  %89 = bitcast %union.UCPTrieData* %88 to i16**
  %90 = load i16*, i16** %89, align 8
  %91 = sext i32 %87 to i64
  %92 = getelementptr inbounds i16, i16* %90, i64 %91
  %93 = load i16, i16* %92, align 2
  %94 = icmp ugt i16 %93, -1025
  %95 = lshr i16 %93, 1
  %96 = trunc i16 %95 to i8
  %97 = select i1 %94, i8 %96, i8 0
  %98 = load i16, i16* %14, align 2
  %99 = icmp ule i16 %98, %93
  %100 = icmp ult i16 %93, -511
  %101 = and i1 %100, %99
  %102 = icmp ne i16* %34, null
  %103 = and i1 %102, %101
  br i1 %103, label %104, label %661

104:                                              ; preds = %83
  %105 = icmp ult i8 %35, %97
  %106 = icmp eq i8 %35, 0
  %107 = or i1 %106, %105
  br i1 %107, label %108, label %661

108:                                              ; preds = %104
  %109 = icmp eq i16 %93, -512
  br i1 %109, label %110, label %252

110:                                              ; preds = %108
  %111 = icmp slt i32 %86, 4519
  br i1 %111, label %112, label %248

112:                                              ; preds = %110
  %113 = load i16, i16* %28, align 2
  %114 = add i16 %113, -4352
  %115 = icmp ult i16 %114, 19
  br i1 %115, label %116, label %248

116:                                              ; preds = %112
  %117 = zext i16 %114 to i32
  %118 = getelementptr inbounds i16, i16* %85, i64 -1
  %119 = mul nuw nsw i32 %117, 21
  %120 = add nsw i32 %86, 61087
  %121 = add nsw i32 %120, %119
  %122 = trunc i32 %121 to i16
  %123 = mul i16 %122, 28
  %124 = add i16 %123, -21504
  %125 = icmp eq i16* %85, %20
  br i1 %125, label %126, label %127

126:                                              ; preds = %116
  store i16 %124, i16* %28, align 2
  br label %694

127:                                              ; preds = %116
  %128 = load i16, i16* %85, align 2
  %129 = add i16 %128, -4519
  %130 = icmp ult i16 %129, 28
  %131 = getelementptr inbounds i16, i16* %85, i64 1
  %132 = select i1 %130, i16* %131, i16* %85
  %133 = ptrtoint i16* %132 to i64
  %134 = select i1 %130, i16 %129, i16 0
  %135 = add i16 %124, %134
  store i16 %135, i16* %28, align 2
  %136 = icmp ult i16* %132, %20
  br i1 %136, label %137, label %694

137:                                              ; preds = %127
  %138 = getelementptr i8, i8* %25, i64 -1
  %139 = sub i64 0, %133
  %140 = getelementptr i8, i8* %138, i64 %139
  %141 = ptrtoint i8* %140 to i64
  %142 = lshr i64 %141, 1
  %143 = add nuw i64 %142, 1
  %144 = icmp ult i64 %143, 16
  br i1 %144, label %238, label %145

145:                                              ; preds = %137
  %146 = getelementptr i8, i8* %25, i64 -1
  %147 = sub i64 0, %133
  %148 = getelementptr i8, i8* %146, i64 %147
  %149 = ptrtoint i8* %148 to i64
  %150 = lshr i64 %149, 1
  %151 = getelementptr i16, i16* %85, i64 %150
  %152 = getelementptr i16, i16* %132, i64 1
  %153 = getelementptr i16, i16* %152, i64 %150
  %154 = icmp ult i16* %118, %153
  %155 = icmp ult i16* %132, %151
  %156 = and i1 %154, %155
  br i1 %156, label %238, label %157

157:                                              ; preds = %145
  %158 = and i64 %143, -16
  %159 = getelementptr i16, i16* %132, i64 %158
  %160 = getelementptr i16, i16* %118, i64 %158
  %161 = add i64 %158, -16
  %162 = lshr exact i64 %161, 4
  %163 = add nuw nsw i64 %162, 1
  %164 = and i64 %163, 3
  %165 = icmp ult i64 %161, 48
  br i1 %165, label %217, label %166

166:                                              ; preds = %157
  %167 = sub nsw i64 %163, %164
  br label %168

168:                                              ; preds = %168, %166
  %169 = phi i64 [ 0, %166 ], [ %214, %168 ]
  %170 = phi i64 [ %167, %166 ], [ %215, %168 ]
  %171 = getelementptr i16, i16* %132, i64 %169
  %172 = getelementptr i16, i16* %118, i64 %169
  %173 = bitcast i16* %171 to <8 x i16>*
  %174 = load <8 x i16>, <8 x i16>* %173, align 2, !alias.scope !5
  %175 = getelementptr i16, i16* %171, i64 8
  %176 = bitcast i16* %175 to <8 x i16>*
  %177 = load <8 x i16>, <8 x i16>* %176, align 2, !alias.scope !5
  %178 = bitcast i16* %172 to <8 x i16>*
  store <8 x i16> %174, <8 x i16>* %178, align 2, !alias.scope !8, !noalias !5
  %179 = getelementptr i16, i16* %172, i64 8
  %180 = bitcast i16* %179 to <8 x i16>*
  store <8 x i16> %177, <8 x i16>* %180, align 2, !alias.scope !8, !noalias !5
  %181 = or i64 %169, 16
  %182 = getelementptr i16, i16* %132, i64 %181
  %183 = getelementptr i16, i16* %118, i64 %181
  %184 = bitcast i16* %182 to <8 x i16>*
  %185 = load <8 x i16>, <8 x i16>* %184, align 2, !alias.scope !5
  %186 = getelementptr i16, i16* %182, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  %188 = load <8 x i16>, <8 x i16>* %187, align 2, !alias.scope !5
  %189 = bitcast i16* %183 to <8 x i16>*
  store <8 x i16> %185, <8 x i16>* %189, align 2, !alias.scope !8, !noalias !5
  %190 = getelementptr i16, i16* %183, i64 8
  %191 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %188, <8 x i16>* %191, align 2, !alias.scope !8, !noalias !5
  %192 = or i64 %169, 32
  %193 = getelementptr i16, i16* %132, i64 %192
  %194 = getelementptr i16, i16* %118, i64 %192
  %195 = bitcast i16* %193 to <8 x i16>*
  %196 = load <8 x i16>, <8 x i16>* %195, align 2, !alias.scope !5
  %197 = getelementptr i16, i16* %193, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  %199 = load <8 x i16>, <8 x i16>* %198, align 2, !alias.scope !5
  %200 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %200, align 2, !alias.scope !8, !noalias !5
  %201 = getelementptr i16, i16* %194, i64 8
  %202 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %202, align 2, !alias.scope !8, !noalias !5
  %203 = or i64 %169, 48
  %204 = getelementptr i16, i16* %132, i64 %203
  %205 = getelementptr i16, i16* %118, i64 %203
  %206 = bitcast i16* %204 to <8 x i16>*
  %207 = load <8 x i16>, <8 x i16>* %206, align 2, !alias.scope !5
  %208 = getelementptr i16, i16* %204, i64 8
  %209 = bitcast i16* %208 to <8 x i16>*
  %210 = load <8 x i16>, <8 x i16>* %209, align 2, !alias.scope !5
  %211 = bitcast i16* %205 to <8 x i16>*
  store <8 x i16> %207, <8 x i16>* %211, align 2, !alias.scope !8, !noalias !5
  %212 = getelementptr i16, i16* %205, i64 8
  %213 = bitcast i16* %212 to <8 x i16>*
  store <8 x i16> %210, <8 x i16>* %213, align 2, !alias.scope !8, !noalias !5
  %214 = add i64 %169, 64
  %215 = add i64 %170, -4
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %168, !llvm.loop !10

217:                                              ; preds = %168, %157
  %218 = phi i64 [ 0, %157 ], [ %214, %168 ]
  %219 = icmp eq i64 %164, 0
  br i1 %219, label %236, label %220

220:                                              ; preds = %217, %220
  %221 = phi i64 [ %233, %220 ], [ %218, %217 ]
  %222 = phi i64 [ %234, %220 ], [ %164, %217 ]
  %223 = getelementptr i16, i16* %132, i64 %221
  %224 = getelementptr i16, i16* %118, i64 %221
  %225 = bitcast i16* %223 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2, !alias.scope !5
  %227 = getelementptr i16, i16* %223, i64 8
  %228 = bitcast i16* %227 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !5
  %230 = bitcast i16* %224 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %230, align 2, !alias.scope !8, !noalias !5
  %231 = getelementptr i16, i16* %224, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %232, align 2, !alias.scope !8, !noalias !5
  %233 = add i64 %221, 16
  %234 = add i64 %222, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %220, !llvm.loop !12

236:                                              ; preds = %220, %217
  %237 = icmp eq i64 %143, %158
  br i1 %237, label %248, label %238

238:                                              ; preds = %236, %145, %137
  %239 = phi i16* [ %132, %145 ], [ %132, %137 ], [ %159, %236 ]
  %240 = phi i16* [ %118, %145 ], [ %118, %137 ], [ %160, %236 ]
  br label %241

241:                                              ; preds = %238, %241
  %242 = phi i16* [ %244, %241 ], [ %239, %238 ]
  %243 = phi i16* [ %246, %241 ], [ %240, %238 ]
  %244 = getelementptr inbounds i16, i16* %242, i64 1
  %245 = load i16, i16* %242, align 2
  %246 = getelementptr inbounds i16, i16* %243, i64 1
  store i16 %245, i16* %243, align 2
  %247 = icmp ult i16* %244, %20
  br i1 %247, label %241, label %248, !llvm.loop !13

248:                                              ; preds = %241, %236, %112, %110
  %249 = phi i16* [ %85, %110 ], [ %85, %112 ], [ %118, %236 ], [ %118, %241 ]
  %250 = phi i16* [ %20, %110 ], [ %20, %112 ], [ %160, %236 ], [ %246, %241 ]
  %251 = icmp eq i16* %249, %250
  br i1 %251, label %694, label %610

252:                                              ; preds = %108
  %253 = icmp slt i32 %86, 13312
  br i1 %253, label %254, label %285

254:                                              ; preds = %252
  %255 = shl nsw i32 %86, 1
  %256 = and i32 %255, 65534
  %257 = load i16, i16* %34, align 2
  %258 = zext i16 %257 to i32
  %259 = icmp ugt i32 %256, %258
  br i1 %259, label %260, label %272

260:                                              ; preds = %254, %260
  %261 = phi i32 [ %268, %260 ], [ %258, %254 ]
  %262 = phi i16* [ %266, %260 ], [ %34, %254 ]
  %263 = and i32 %261, 1
  %264 = or i32 %263, 2
  %265 = zext i32 %264 to i64
  %266 = getelementptr inbounds i16, i16* %262, i64 %265
  %267 = load i16, i16* %266, align 2
  %268 = zext i16 %267 to i32
  %269 = icmp ugt i32 %256, %268
  br i1 %269, label %260, label %270

270:                                              ; preds = %260
  %271 = zext i16 %267 to i32
  br label %272

272:                                              ; preds = %270, %254
  %273 = phi i16* [ %34, %254 ], [ %266, %270 ]
  %274 = phi i32 [ %258, %254 ], [ %271, %270 ]
  %275 = and i32 %274, 32766
  %276 = icmp eq i32 %256, %275
  br i1 %276, label %277, label %661

277:                                              ; preds = %272
  %278 = and i32 %274, 1
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds i16, i16* %273, i64 1
  %281 = load i16, i16* %280, align 2
  %282 = zext i16 %281 to i32
  br i1 %279, label %328, label %283

283:                                              ; preds = %277
  %284 = shl nuw i32 %282, 16
  br label %320

285:                                              ; preds = %252
  %286 = lshr i32 %86, 9
  %287 = add nuw nsw i32 %286, 13312
  %288 = and i32 %287, 65534
  %289 = shl i32 %86, 6
  %290 = and i32 %289, 65472
  br label %291

291:                                              ; preds = %314, %285
  %292 = phi i16* [ %34, %285 ], [ %316, %314 ]
  %293 = load i16, i16* %292, align 2
  %294 = zext i16 %293 to i32
  %295 = icmp ugt i32 %288, %294
  br i1 %295, label %296, label %300

296:                                              ; preds = %291
  %297 = and i32 %294, 1
  %298 = or i32 %297, 2
  %299 = zext i32 %298 to i64
  br label %314

300:                                              ; preds = %291
  %301 = and i32 %294, 32766
  %302 = icmp eq i32 %288, %301
  br i1 %302, label %303, label %661

303:                                              ; preds = %300
  %304 = getelementptr inbounds i16, i16* %292, i64 1
  %305 = load i16, i16* %304, align 2
  %306 = zext i16 %305 to i32
  %307 = icmp ugt i32 %290, %306
  br i1 %307, label %308, label %310

308:                                              ; preds = %303
  %309 = icmp slt i16 %293, 0
  br i1 %309, label %661, label %314

310:                                              ; preds = %303
  %311 = zext i16 %305 to i32
  %312 = and i32 %311, 65472
  %313 = icmp eq i32 %290, %312
  br i1 %313, label %317, label %661

314:                                              ; preds = %308, %296
  %315 = phi i64 [ %299, %296 ], [ 3, %308 ]
  %316 = getelementptr inbounds i16, i16* %292, i64 %315
  br label %291

317:                                              ; preds = %310
  %318 = shl nuw i32 %311, 16
  %319 = and i32 %318, 4128768
  br label %320

320:                                              ; preds = %283, %317
  %321 = phi i16* [ %273, %283 ], [ %292, %317 ]
  %322 = phi i32 [ %284, %283 ], [ %319, %317 ]
  %323 = getelementptr inbounds i16, i16* %321, i64 2
  %324 = load i16, i16* %323, align 2
  %325 = zext i16 %324 to i32
  %326 = or i32 %322, %325
  %327 = icmp sgt i32 %326, -1
  br i1 %327, label %330, label %661

328:                                              ; preds = %277
  %329 = zext i16 %281 to i32
  br label %330

330:                                              ; preds = %320, %328
  %331 = phi i32 [ %329, %328 ], [ %326, %320 ]
  %332 = ptrtoint i16* %28 to i64
  %333 = ptrtoint i16* %85 to i64
  %334 = lshr i32 %331, 1
  %335 = icmp ult i32 %86, 65536
  %336 = select i1 %335, i64 -1, i64 -2
  %337 = getelementptr inbounds i16, i16* %85, i64 %336
  %338 = icmp eq i8 %31, 0
  %339 = add nsw i32 %334, -65536
  %340 = icmp ult i32 %339, 1048576
  br i1 %338, label %464, label %341

341:                                              ; preds = %330
  br i1 %340, label %342, label %350

342:                                              ; preds = %341
  %343 = lshr i32 %331, 11
  %344 = trunc i32 %343 to i16
  %345 = add i16 %344, -10304
  store i16 %345, i16* %28, align 2
  %346 = trunc i32 %334 to i16
  %347 = and i16 %346, 1023
  %348 = or i16 %347, -9216
  %349 = getelementptr inbounds i16, i16* %28, i64 1
  store i16 %348, i16* %349, align 2
  br label %485

350:                                              ; preds = %341
  %351 = trunc i32 %334 to i16
  store i16 %351, i16* %28, align 2
  %352 = getelementptr inbounds i16, i16* %28, i64 2
  %353 = icmp ult i16* %352, %337
  br i1 %353, label %354, label %462

354:                                              ; preds = %350
  %355 = getelementptr i16, i16* %85, i64 -2
  %356 = bitcast i16* %355 to i8*
  %357 = getelementptr i8, i8* %356, i64 -1
  %358 = shl nsw i64 %336, 1
  %359 = sub i64 %358, %332
  %360 = getelementptr i8, i8* %357, i64 %359
  %361 = ptrtoint i8* %360 to i64
  %362 = lshr i64 %361, 1
  %363 = add nuw i64 %362, 1
  %364 = icmp ult i64 %363, 16
  br i1 %364, label %452, label %365

365:                                              ; preds = %354
  %366 = and i64 %363, -16
  %367 = getelementptr i16, i16* %28, i64 %366
  %368 = getelementptr i16, i16* %352, i64 %366
  %369 = add i64 %366, -16
  %370 = lshr exact i64 %369, 4
  %371 = add nuw nsw i64 %370, 1
  %372 = and i64 %371, 3
  %373 = icmp ult i64 %369, 48
  br i1 %373, label %429, label %374

374:                                              ; preds = %365
  %375 = sub nsw i64 %371, %372
  %376 = getelementptr i16, i16* %28, i64 1
  %377 = getelementptr i16, i16* %28, i64 1
  %378 = getelementptr i16, i16* %28, i64 1
  %379 = getelementptr i16, i16* %28, i64 1
  br label %380

380:                                              ; preds = %380, %374
  %381 = phi i64 [ 0, %374 ], [ %426, %380 ]
  %382 = phi i64 [ %375, %374 ], [ %427, %380 ]
  %383 = getelementptr i16, i16* %352, i64 %381
  %384 = getelementptr inbounds i16, i16* %376, i64 %381
  %385 = bitcast i16* %383 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2
  %387 = getelementptr i16, i16* %383, i64 8
  %388 = bitcast i16* %387 to <8 x i16>*
  %389 = load <8 x i16>, <8 x i16>* %388, align 2
  %390 = bitcast i16* %384 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %390, align 2
  %391 = getelementptr inbounds i16, i16* %384, i64 8
  %392 = bitcast i16* %391 to <8 x i16>*
  store <8 x i16> %389, <8 x i16>* %392, align 2
  %393 = or i64 %381, 16
  %394 = getelementptr i16, i16* %352, i64 %393
  %395 = getelementptr inbounds i16, i16* %377, i64 %393
  %396 = bitcast i16* %394 to <8 x i16>*
  %397 = load <8 x i16>, <8 x i16>* %396, align 2
  %398 = getelementptr i16, i16* %394, i64 8
  %399 = bitcast i16* %398 to <8 x i16>*
  %400 = load <8 x i16>, <8 x i16>* %399, align 2
  %401 = bitcast i16* %395 to <8 x i16>*
  store <8 x i16> %397, <8 x i16>* %401, align 2
  %402 = getelementptr inbounds i16, i16* %395, i64 8
  %403 = bitcast i16* %402 to <8 x i16>*
  store <8 x i16> %400, <8 x i16>* %403, align 2
  %404 = or i64 %381, 32
  %405 = getelementptr i16, i16* %352, i64 %404
  %406 = getelementptr inbounds i16, i16* %378, i64 %404
  %407 = bitcast i16* %405 to <8 x i16>*
  %408 = load <8 x i16>, <8 x i16>* %407, align 2
  %409 = getelementptr i16, i16* %405, i64 8
  %410 = bitcast i16* %409 to <8 x i16>*
  %411 = load <8 x i16>, <8 x i16>* %410, align 2
  %412 = bitcast i16* %406 to <8 x i16>*
  store <8 x i16> %408, <8 x i16>* %412, align 2
  %413 = getelementptr inbounds i16, i16* %406, i64 8
  %414 = bitcast i16* %413 to <8 x i16>*
  store <8 x i16> %411, <8 x i16>* %414, align 2
  %415 = or i64 %381, 48
  %416 = getelementptr i16, i16* %352, i64 %415
  %417 = getelementptr inbounds i16, i16* %379, i64 %415
  %418 = bitcast i16* %416 to <8 x i16>*
  %419 = load <8 x i16>, <8 x i16>* %418, align 2
  %420 = getelementptr i16, i16* %416, i64 8
  %421 = bitcast i16* %420 to <8 x i16>*
  %422 = load <8 x i16>, <8 x i16>* %421, align 2
  %423 = bitcast i16* %417 to <8 x i16>*
  store <8 x i16> %419, <8 x i16>* %423, align 2
  %424 = getelementptr inbounds i16, i16* %417, i64 8
  %425 = bitcast i16* %424 to <8 x i16>*
  store <8 x i16> %422, <8 x i16>* %425, align 2
  %426 = add i64 %381, 64
  %427 = add i64 %382, -4
  %428 = icmp eq i64 %427, 0
  br i1 %428, label %429, label %380, !llvm.loop !14

429:                                              ; preds = %380, %365
  %430 = phi i64 [ 0, %365 ], [ %426, %380 ]
  %431 = icmp eq i64 %372, 0
  br i1 %431, label %450, label %432

432:                                              ; preds = %429
  %433 = getelementptr i16, i16* %28, i64 1
  br label %434

434:                                              ; preds = %434, %432
  %435 = phi i64 [ %430, %432 ], [ %447, %434 ]
  %436 = phi i64 [ %372, %432 ], [ %448, %434 ]
  %437 = getelementptr i16, i16* %352, i64 %435
  %438 = getelementptr inbounds i16, i16* %433, i64 %435
  %439 = bitcast i16* %437 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2
  %441 = getelementptr i16, i16* %437, i64 8
  %442 = bitcast i16* %441 to <8 x i16>*
  %443 = load <8 x i16>, <8 x i16>* %442, align 2
  %444 = bitcast i16* %438 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %444, align 2
  %445 = getelementptr inbounds i16, i16* %438, i64 8
  %446 = bitcast i16* %445 to <8 x i16>*
  store <8 x i16> %443, <8 x i16>* %446, align 2
  %447 = add i64 %435, 16
  %448 = add i64 %436, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %434, !llvm.loop !15

450:                                              ; preds = %434, %429
  %451 = icmp eq i64 %363, %366
  br i1 %451, label %462, label %452

452:                                              ; preds = %450, %354
  %453 = phi i16* [ %28, %354 ], [ %367, %450 ]
  %454 = phi i16* [ %352, %354 ], [ %368, %450 ]
  br label %455

455:                                              ; preds = %452, %455
  %456 = phi i16* [ %458, %455 ], [ %453, %452 ]
  %457 = phi i16* [ %459, %455 ], [ %454, %452 ]
  %458 = getelementptr inbounds i16, i16* %456, i64 1
  %459 = getelementptr inbounds i16, i16* %457, i64 1
  %460 = load i16, i16* %457, align 2
  store i16 %460, i16* %458, align 2
  %461 = icmp ult i16* %459, %337
  br i1 %461, label %455, label %462, !llvm.loop !16

462:                                              ; preds = %455, %450, %350
  %463 = getelementptr inbounds i16, i16* %337, i64 -1
  br label %485

464:                                              ; preds = %330
  br i1 %340, label %465, label %483

465:                                              ; preds = %464
  %466 = getelementptr inbounds i16, i16* %28, i64 1
  %467 = getelementptr inbounds i16, i16* %337, i64 1
  %468 = icmp ult i16* %466, %337
  br i1 %468, label %469, label %476

469:                                              ; preds = %465, %469
  %470 = phi i16* [ %474, %469 ], [ %467, %465 ]
  %471 = phi i16* [ %472, %469 ], [ %337, %465 ]
  %472 = getelementptr inbounds i16, i16* %471, i64 -1
  %473 = load i16, i16* %472, align 2
  %474 = getelementptr inbounds i16, i16* %470, i64 -1
  store i16 %473, i16* %474, align 2
  %475 = icmp ult i16* %466, %472
  br i1 %475, label %469, label %476

476:                                              ; preds = %469, %465
  %477 = trunc i32 %334 to i16
  %478 = and i16 %477, 1023
  %479 = or i16 %478, -9216
  store i16 %479, i16* %466, align 2
  %480 = lshr i32 %331, 11
  %481 = trunc i32 %480 to i16
  %482 = add i16 %481, -10304
  store i16 %482, i16* %28, align 2
  br label %485

483:                                              ; preds = %464
  %484 = trunc i32 %334 to i16
  store i16 %484, i16* %28, align 2
  br label %485

485:                                              ; preds = %476, %483, %342, %462
  %486 = phi i16* [ %337, %342 ], [ %463, %462 ], [ %467, %476 ], [ %337, %483 ]
  %487 = phi i8 [ %31, %342 ], [ 0, %462 ], [ 1, %476 ], [ 0, %483 ]
  %488 = icmp ult i16* %486, %85
  br i1 %488, label %489, label %603

489:                                              ; preds = %485
  %490 = icmp ult i16* %85, %20
  br i1 %490, label %491, label %694

491:                                              ; preds = %489
  %492 = getelementptr i8, i8* %25, i64 -1
  %493 = sub i64 0, %333
  %494 = getelementptr i8, i8* %492, i64 %493
  %495 = ptrtoint i8* %494 to i64
  %496 = lshr i64 %495, 1
  %497 = add nuw i64 %496, 1
  %498 = icmp ult i64 %497, 16
  br i1 %498, label %593, label %499

499:                                              ; preds = %491
  %500 = getelementptr i16, i16* %486, i64 1
  %501 = getelementptr i8, i8* %25, i64 -1
  %502 = sub i64 0, %333
  %503 = getelementptr i8, i8* %501, i64 %502
  %504 = ptrtoint i8* %503 to i64
  %505 = lshr i64 %504, 1
  %506 = getelementptr i16, i16* %500, i64 %505
  %507 = getelementptr i16, i16* %85, i64 1
  %508 = getelementptr i16, i16* %507, i64 %505
  %509 = icmp ult i16* %486, %508
  %510 = icmp ult i16* %85, %506
  %511 = and i1 %509, %510
  br i1 %511, label %593, label %512

512:                                              ; preds = %499
  %513 = and i64 %497, -16
  %514 = getelementptr i16, i16* %85, i64 %513
  %515 = getelementptr i16, i16* %486, i64 %513
  %516 = add i64 %513, -16
  %517 = lshr exact i64 %516, 4
  %518 = add nuw nsw i64 %517, 1
  %519 = and i64 %518, 3
  %520 = icmp ult i64 %516, 48
  br i1 %520, label %572, label %521

521:                                              ; preds = %512
  %522 = sub nsw i64 %518, %519
  br label %523

523:                                              ; preds = %523, %521
  %524 = phi i64 [ 0, %521 ], [ %569, %523 ]
  %525 = phi i64 [ %522, %521 ], [ %570, %523 ]
  %526 = getelementptr i16, i16* %85, i64 %524
  %527 = getelementptr i16, i16* %486, i64 %524
  %528 = bitcast i16* %526 to <8 x i16>*
  %529 = load <8 x i16>, <8 x i16>* %528, align 2, !alias.scope !18
  %530 = getelementptr i16, i16* %526, i64 8
  %531 = bitcast i16* %530 to <8 x i16>*
  %532 = load <8 x i16>, <8 x i16>* %531, align 2, !alias.scope !18
  %533 = bitcast i16* %527 to <8 x i16>*
  store <8 x i16> %529, <8 x i16>* %533, align 2, !alias.scope !21, !noalias !18
  %534 = getelementptr i16, i16* %527, i64 8
  %535 = bitcast i16* %534 to <8 x i16>*
  store <8 x i16> %532, <8 x i16>* %535, align 2, !alias.scope !21, !noalias !18
  %536 = or i64 %524, 16
  %537 = getelementptr i16, i16* %85, i64 %536
  %538 = getelementptr i16, i16* %486, i64 %536
  %539 = bitcast i16* %537 to <8 x i16>*
  %540 = load <8 x i16>, <8 x i16>* %539, align 2, !alias.scope !18
  %541 = getelementptr i16, i16* %537, i64 8
  %542 = bitcast i16* %541 to <8 x i16>*
  %543 = load <8 x i16>, <8 x i16>* %542, align 2, !alias.scope !18
  %544 = bitcast i16* %538 to <8 x i16>*
  store <8 x i16> %540, <8 x i16>* %544, align 2, !alias.scope !21, !noalias !18
  %545 = getelementptr i16, i16* %538, i64 8
  %546 = bitcast i16* %545 to <8 x i16>*
  store <8 x i16> %543, <8 x i16>* %546, align 2, !alias.scope !21, !noalias !18
  %547 = or i64 %524, 32
  %548 = getelementptr i16, i16* %85, i64 %547
  %549 = getelementptr i16, i16* %486, i64 %547
  %550 = bitcast i16* %548 to <8 x i16>*
  %551 = load <8 x i16>, <8 x i16>* %550, align 2, !alias.scope !18
  %552 = getelementptr i16, i16* %548, i64 8
  %553 = bitcast i16* %552 to <8 x i16>*
  %554 = load <8 x i16>, <8 x i16>* %553, align 2, !alias.scope !18
  %555 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %551, <8 x i16>* %555, align 2, !alias.scope !21, !noalias !18
  %556 = getelementptr i16, i16* %549, i64 8
  %557 = bitcast i16* %556 to <8 x i16>*
  store <8 x i16> %554, <8 x i16>* %557, align 2, !alias.scope !21, !noalias !18
  %558 = or i64 %524, 48
  %559 = getelementptr i16, i16* %85, i64 %558
  %560 = getelementptr i16, i16* %486, i64 %558
  %561 = bitcast i16* %559 to <8 x i16>*
  %562 = load <8 x i16>, <8 x i16>* %561, align 2, !alias.scope !18
  %563 = getelementptr i16, i16* %559, i64 8
  %564 = bitcast i16* %563 to <8 x i16>*
  %565 = load <8 x i16>, <8 x i16>* %564, align 2, !alias.scope !18
  %566 = bitcast i16* %560 to <8 x i16>*
  store <8 x i16> %562, <8 x i16>* %566, align 2, !alias.scope !21, !noalias !18
  %567 = getelementptr i16, i16* %560, i64 8
  %568 = bitcast i16* %567 to <8 x i16>*
  store <8 x i16> %565, <8 x i16>* %568, align 2, !alias.scope !21, !noalias !18
  %569 = add i64 %524, 64
  %570 = add i64 %525, -4
  %571 = icmp eq i64 %570, 0
  br i1 %571, label %572, label %523, !llvm.loop !23

572:                                              ; preds = %523, %512
  %573 = phi i64 [ 0, %512 ], [ %569, %523 ]
  %574 = icmp eq i64 %519, 0
  br i1 %574, label %591, label %575

575:                                              ; preds = %572, %575
  %576 = phi i64 [ %588, %575 ], [ %573, %572 ]
  %577 = phi i64 [ %589, %575 ], [ %519, %572 ]
  %578 = getelementptr i16, i16* %85, i64 %576
  %579 = getelementptr i16, i16* %486, i64 %576
  %580 = bitcast i16* %578 to <8 x i16>*
  %581 = load <8 x i16>, <8 x i16>* %580, align 2, !alias.scope !18
  %582 = getelementptr i16, i16* %578, i64 8
  %583 = bitcast i16* %582 to <8 x i16>*
  %584 = load <8 x i16>, <8 x i16>* %583, align 2, !alias.scope !18
  %585 = bitcast i16* %579 to <8 x i16>*
  store <8 x i16> %581, <8 x i16>* %585, align 2, !alias.scope !21, !noalias !18
  %586 = getelementptr i16, i16* %579, i64 8
  %587 = bitcast i16* %586 to <8 x i16>*
  store <8 x i16> %584, <8 x i16>* %587, align 2, !alias.scope !21, !noalias !18
  %588 = add i64 %576, 16
  %589 = add i64 %577, -1
  %590 = icmp eq i64 %589, 0
  br i1 %590, label %591, label %575, !llvm.loop !24

591:                                              ; preds = %575, %572
  %592 = icmp eq i64 %497, %513
  br i1 %592, label %603, label %593

593:                                              ; preds = %591, %499, %491
  %594 = phi i16* [ %85, %499 ], [ %85, %491 ], [ %514, %591 ]
  %595 = phi i16* [ %486, %499 ], [ %486, %491 ], [ %515, %591 ]
  br label %596

596:                                              ; preds = %593, %596
  %597 = phi i16* [ %599, %596 ], [ %594, %593 ]
  %598 = phi i16* [ %601, %596 ], [ %595, %593 ]
  %599 = getelementptr inbounds i16, i16* %597, i64 1
  %600 = load i16, i16* %597, align 2
  %601 = getelementptr inbounds i16, i16* %598, i64 1
  store i16 %600, i16* %598, align 2
  %602 = icmp ult i16* %599, %20
  br i1 %602, label %596, label %603, !llvm.loop !25

603:                                              ; preds = %596, %591, %485
  %604 = phi i16* [ %85, %485 ], [ %486, %591 ], [ %486, %596 ]
  %605 = phi i16* [ %20, %485 ], [ %515, %591 ], [ %601, %596 ]
  %606 = icmp eq i16* %604, %605
  br i1 %606, label %694, label %607

607:                                              ; preds = %603
  %608 = and i32 %331, 1
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %615

610:                                              ; preds = %607, %647, %248
  %611 = phi i16* [ %249, %248 ], [ %604, %647 ], [ %604, %607 ]
  %612 = phi i16* [ %250, %248 ], [ %605, %647 ], [ %605, %607 ]
  %613 = phi i16* [ null, %248 ], [ %660, %647 ], [ null, %607 ]
  %614 = phi i8 [ %31, %248 ], [ %487, %647 ], [ %487, %607 ]
  br label %18

615:                                              ; preds = %607
  %616 = load %struct.UCPTrie*, %struct.UCPTrie** %13, align 8
  %617 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %616, i64 0, i32 1
  %618 = bitcast %union.UCPTrieData* %617 to i16**
  %619 = load i16*, i16** %618, align 8
  %620 = icmp ult i32 %331, 131072
  br i1 %620, label %621, label %631

621:                                              ; preds = %615
  %622 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %616, i64 0, i32 0
  %623 = load i16*, i16** %622, align 8
  %624 = lshr i32 %331, 7
  %625 = zext i32 %624 to i64
  %626 = getelementptr inbounds i16, i16* %623, i64 %625
  %627 = load i16, i16* %626, align 2
  %628 = zext i16 %627 to i32
  %629 = and i32 %334, 63
  %630 = add nuw nsw i32 %629, %628
  br label %647

631:                                              ; preds = %615
  %632 = icmp ult i32 %331, 2228224
  br i1 %632, label %633, label %643

633:                                              ; preds = %631
  %634 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %616, i64 0, i32 4
  %635 = load i32, i32* %634, align 8
  %636 = icmp sgt i32 %635, %334
  br i1 %636, label %641, label %637

637:                                              ; preds = %633
  %638 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %616, i64 0, i32 3
  %639 = load i32, i32* %638, align 4
  %640 = add nsw i32 %639, -2
  br label %647

641:                                              ; preds = %633
  %642 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %616, i32 %334) #8
  br label %647

643:                                              ; preds = %631
  %644 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %616, i64 0, i32 3
  %645 = load i32, i32* %644, align 4
  %646 = add nsw i32 %645, -1
  br label %647

647:                                              ; preds = %621, %637, %641, %643
  %648 = phi i32 [ %630, %621 ], [ %646, %643 ], [ %640, %637 ], [ %642, %641 ]
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds i16, i16* %619, i64 %649
  %651 = load i16, i16* %650, align 2
  %652 = load i16*, i16** %17, align 8
  %653 = lshr i16 %651, 1
  %654 = zext i16 %653 to i64
  %655 = getelementptr inbounds i16, i16* %652, i64 %654
  %656 = getelementptr inbounds i16, i16* %655, i64 1
  %657 = load i16, i16* %655, align 2
  %658 = and i16 %657, 31
  %659 = zext i16 %658 to i64
  %660 = getelementptr inbounds i16, i16* %656, i64 %659
  br label %610

661:                                              ; preds = %308, %300, %310, %272, %104, %320, %83
  %662 = icmp eq i16* %85, %20
  br i1 %662, label %694, label %663

663:                                              ; preds = %661
  %664 = icmp eq i8 %97, 0
  br i1 %664, label %665, label %692

665:                                              ; preds = %663
  %666 = add i16 %93, -2
  %667 = icmp ugt i16 %666, -1027
  br i1 %667, label %668, label %670

668:                                              ; preds = %665, %692, %683
  %669 = phi i16* [ null, %665 ], [ %693, %692 ], [ null, %683 ]
  br label %32

670:                                              ; preds = %665
  %671 = icmp ugt i16 %98, %93
  br i1 %671, label %672, label %676

672:                                              ; preds = %670
  %673 = load i16*, i16** %17, align 8
  %674 = zext i16 %95 to i64
  %675 = getelementptr inbounds i16, i16* %673, i64 %674
  br label %683

676:                                              ; preds = %670
  %677 = load i16*, i16** %16, align 8
  %678 = zext i16 %93 to i64
  %679 = getelementptr inbounds i16, i16* %677, i64 %678
  %680 = zext i16 %98 to i64
  %681 = sub nsw i64 0, %680
  %682 = getelementptr inbounds i16, i16* %679, i64 %681
  br label %683

683:                                              ; preds = %672, %676
  %684 = phi i16* [ %675, %672 ], [ %682, %676 ]
  %685 = icmp eq i16* %684, null
  br i1 %685, label %668, label %686

686:                                              ; preds = %683
  %687 = icmp ult i32 %86, 65536
  %688 = getelementptr inbounds i16, i16* %85, i64 -1
  %689 = getelementptr inbounds i16, i16* %85, i64 -2
  %690 = select i1 %687, i16* %688, i16* %689
  %691 = select i1 %687, i8 0, i8 1
  br label %26

692:                                              ; preds = %663
  %693 = select i1 %15, i16* %34, i16* null
  br label %668

694:                                              ; preds = %489, %127, %603, %248, %661, %126
  %695 = phi i16* [ %118, %126 ], [ %20, %661 ], [ %486, %489 ], [ %118, %127 ], [ %604, %603 ], [ %249, %248 ]
  %696 = bitcast i16** %9 to i64*
  %697 = load i64, i64* %696, align 8
  %698 = ptrtoint i16* %695 to i64
  %699 = sub i64 %697, %698
  %700 = lshr exact i64 %699, 1
  %701 = trunc i64 %700 to i32
  %702 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %1, i64 0, i32 5
  %703 = load i32, i32* %702, align 8
  %704 = add nsw i32 %703, %701
  store i32 %704, i32* %702, align 8
  store i16* %695, i16** %9, align 8
  %705 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %1, i64 0, i32 3
  store i16* %695, i16** %705, align 8
  %706 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %1, i64 0, i32 6
  store i8 0, i8* %706, align 4
  br label %707

707:                                              ; preds = %4, %694
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6915Normalizer2Impl11composePairEii(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = and i32 %1, -1024
  %5 = icmp eq i32 %4, 55296
  br i1 %5, label %180, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %8 = load %struct.UCPTrie*, %struct.UCPTrie** %7, align 8
  %9 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %8, i64 0, i32 1
  %10 = bitcast %union.UCPTrieData* %9 to i16**
  %11 = load i16*, i16** %10, align 8
  %12 = icmp ult i32 %1, 65536
  br i1 %12, label %13, label %23

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %8, i64 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = lshr i32 %1, 6
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i16, i16* %15, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = and i32 %1, 63
  %22 = add nuw nsw i32 %21, %20
  br label %39

23:                                               ; preds = %6
  %24 = icmp ult i32 %1, 1114112
  br i1 %24, label %25, label %35

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %8, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = icmp sgt i32 %27, %1
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %8, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = add nsw i32 %31, -2
  br label %39

33:                                               ; preds = %25
  %34 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %8, i32 %1) #8
  br label %39

35:                                               ; preds = %23
  %36 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %8, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, -1
  br label %39

39:                                               ; preds = %13, %29, %33, %35
  %40 = phi i32 [ %22, %13 ], [ %38, %35 ], [ %32, %29 ], [ %34, %33 ]
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i16, i16* %11, i64 %41
  %43 = load i16, i16* %42, align 2
  %44 = icmp eq i16 %43, 1
  br i1 %44, label %180, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 5
  %47 = load i16, i16* %46, align 8
  %48 = icmp ult i16 %43, %47
  br i1 %48, label %49, label %83

49:                                               ; preds = %45
  %50 = icmp eq i16 %43, 2
  br i1 %50, label %51, label %60

51:                                               ; preds = %49
  %52 = add nsw i32 %2, -4449
  %53 = icmp ult i32 %52, 21
  br i1 %53, label %54, label %180

54:                                               ; preds = %51
  %55 = mul i32 %1, 21
  %56 = add i32 %55, -91392
  %57 = add nsw i32 %56, %52
  %58 = mul nsw i32 %57, 28
  %59 = add nsw i32 %58, 44032
  br label %180

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %62 = load i16, i16* %61, align 2
  %63 = icmp eq i16 %62, %43
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = add i32 %2, -4520
  %66 = icmp ult i32 %65, 27
  br i1 %66, label %67, label %180

67:                                               ; preds = %64
  %68 = add i32 %1, -4519
  %69 = add i32 %68, %2
  br label %180

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %72 = load i16*, i16** %71, align 8
  %73 = lshr i16 %43, 1
  %74 = zext i16 %73 to i64
  %75 = getelementptr inbounds i16, i16* %72, i64 %74
  %76 = icmp ugt i16 %43, %62
  br i1 %76, label %77, label %98

77:                                               ; preds = %70
  %78 = load i16, i16* %75, align 2
  %79 = and i16 %78, 31
  %80 = add nuw nsw i16 %79, 1
  %81 = zext i16 %80 to i64
  %82 = getelementptr inbounds i16, i16* %75, i64 %81
  br label %98

83:                                               ; preds = %45
  %84 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %85 = load i16, i16* %84, align 2
  %86 = icmp ult i16 %43, %85
  %87 = icmp ugt i16 %43, -1025
  %88 = or i1 %87, %86
  br i1 %88, label %180, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 14
  %91 = load i16*, i16** %90, align 8
  %92 = zext i16 %43 to i32
  %93 = zext i16 %85 to i32
  %94 = sub nsw i32 %92, %93
  %95 = ashr i32 %94, 1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i16, i16* %91, i64 %96
  br label %98

98:                                               ; preds = %89, %77, %70
  %99 = phi i16* [ %82, %77 ], [ %75, %70 ], [ %97, %89 ]
  %100 = icmp ugt i32 %2, 1114111
  br i1 %100, label %180, label %101

101:                                              ; preds = %98
  %102 = icmp slt i32 %2, 13312
  br i1 %102, label %103, label %138

103:                                              ; preds = %101
  %104 = shl i32 %2, 1
  %105 = and i32 %104, 65534
  %106 = load i16, i16* %99, align 2
  %107 = zext i16 %106 to i32
  %108 = icmp ugt i32 %105, %107
  br i1 %108, label %109, label %121

109:                                              ; preds = %103, %109
  %110 = phi i32 [ %117, %109 ], [ %107, %103 ]
  %111 = phi i16* [ %115, %109 ], [ %99, %103 ]
  %112 = and i32 %110, 1
  %113 = or i32 %112, 2
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds i16, i16* %111, i64 %114
  %116 = load i16, i16* %115, align 2
  %117 = zext i16 %116 to i32
  %118 = icmp ugt i32 %105, %117
  br i1 %118, label %109, label %119

119:                                              ; preds = %109
  %120 = zext i16 %116 to i32
  br label %121

121:                                              ; preds = %119, %103
  %122 = phi i16* [ %99, %103 ], [ %115, %119 ]
  %123 = phi i32 [ %107, %103 ], [ %120, %119 ]
  %124 = and i32 %123, 32766
  %125 = icmp eq i32 %105, %124
  br i1 %125, label %126, label %177

126:                                              ; preds = %121
  %127 = and i32 %123, 1
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds i16, i16* %122, i64 1
  %130 = load i16, i16* %129, align 2
  %131 = zext i16 %130 to i32
  br i1 %128, label %177, label %132

132:                                              ; preds = %126
  %133 = shl nuw i32 %131, 16
  %134 = getelementptr inbounds i16, i16* %122, i64 2
  %135 = load i16, i16* %134, align 2
  %136 = zext i16 %135 to i32
  %137 = or i32 %133, %136
  br label %177

138:                                              ; preds = %101
  %139 = lshr i32 %2, 9
  %140 = add nuw nsw i32 %139, 13312
  %141 = and i32 %140, 65534
  %142 = shl i32 %2, 6
  %143 = and i32 %142, 65472
  br label %144

144:                                              ; preds = %167, %138
  %145 = phi i16* [ %99, %138 ], [ %169, %167 ]
  %146 = load i16, i16* %145, align 2
  %147 = zext i16 %146 to i32
  %148 = icmp ugt i32 %141, %147
  br i1 %148, label %149, label %153

149:                                              ; preds = %144
  %150 = and i32 %147, 1
  %151 = or i32 %150, 2
  %152 = zext i32 %151 to i64
  br label %167

153:                                              ; preds = %144
  %154 = and i32 %147, 32766
  %155 = icmp eq i32 %141, %154
  br i1 %155, label %156, label %177

156:                                              ; preds = %153
  %157 = getelementptr inbounds i16, i16* %145, i64 1
  %158 = load i16, i16* %157, align 2
  %159 = zext i16 %158 to i32
  %160 = icmp ugt i32 %143, %159
  br i1 %160, label %161, label %163

161:                                              ; preds = %156
  %162 = icmp slt i16 %146, 0
  br i1 %162, label %177, label %167

163:                                              ; preds = %156
  %164 = zext i16 %158 to i32
  %165 = and i32 %164, 65472
  %166 = icmp eq i32 %143, %165
  br i1 %166, label %170, label %177

167:                                              ; preds = %161, %149
  %168 = phi i64 [ %152, %149 ], [ 3, %161 ]
  %169 = getelementptr inbounds i16, i16* %145, i64 %168
  br label %144

170:                                              ; preds = %163
  %171 = shl nuw i32 %164, 16
  %172 = and i32 %171, 4128768
  %173 = getelementptr inbounds i16, i16* %145, i64 2
  %174 = load i16, i16* %173, align 2
  %175 = zext i16 %174 to i32
  %176 = or i32 %172, %175
  br label %177

177:                                              ; preds = %153, %161, %121, %126, %132, %163, %170
  %178 = phi i32 [ %137, %132 ], [ %176, %170 ], [ %131, %126 ], [ -1, %121 ], [ -1, %163 ], [ -1, %161 ], [ -1, %153 ]
  %179 = ashr i32 %178, 1
  br label %180

180:                                              ; preds = %39, %3, %98, %83, %64, %51, %177, %67, %54
  %181 = phi i32 [ %59, %54 ], [ %69, %67 ], [ %179, %177 ], [ -1, %39 ], [ -1, %51 ], [ -1, %64 ], [ -1, %83 ], [ -1, %98 ], [ -1, %3 ]
  ret i32 %181
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl7composeEPKDsS2_aaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* readonly, i16*, i16*, i8 signext, i8 signext, %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 2
  %9 = load i16, i16* %8, align 2
  %10 = icmp eq i16* %2, null
  br i1 %10, label %11, label %111

11:                                               ; preds = %7
  %12 = icmp eq i8 %4, 0
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i16* [ %1, %11 ], [ %15, %13 ]
  %15 = getelementptr inbounds i16, i16* %14, i64 1
  %16 = load i16, i16* %14, align 2
  %17 = icmp ult i16 %16, %9
  %18 = icmp ne i16 %16, 0
  %19 = and i1 %18, %17
  br i1 %19, label %13, label %20

20:                                               ; preds = %13
  %21 = select i1 %12, %"class.icu_69::ReorderingBuffer"* null, %"class.icu_69::ReorderingBuffer"* %5
  %22 = icmp ne i16* %14, %1
  %23 = icmp ne %"class.icu_69::ReorderingBuffer"* %21, null
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %21, i16* %1, i16* %14, i32* dereferenceable(4) %6) #8
  br label %27

27:                                               ; preds = %20, %25
  %28 = load i32, i32* %6, align 4
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %30, label %657

30:                                               ; preds = %27
  %31 = tail call i16* @u_strchr_69(i16* %14, i16 zeroext 0) #8
  %32 = icmp eq i16* %14, %1
  br i1 %32, label %111, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds i16, i16* %14, i64 -1
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = and i32 %36, 64512
  %38 = icmp eq i32 %37, 55296
  br i1 %38, label %111, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %41 = load %struct.UCPTrie*, %struct.UCPTrie** %40, align 8
  %42 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %41, i64 0, i32 1
  %43 = bitcast %union.UCPTrieData* %42 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %41, i64 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = lshr i32 %36, 6
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i16, i16* %46, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = and i32 %36, 63
  %53 = add nuw nsw i32 %52, %51
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i16, i16* %44, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = and i16 %56, 1
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %39
  %60 = icmp eq i8 %3, 0
  %61 = icmp eq i16 %56, 1
  %62 = or i1 %60, %61
  br i1 %62, label %111, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %65 = load i16, i16* %64, align 2
  %66 = icmp ugt i16 %65, %56
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = and i16 %56, 6
  %69 = icmp ult i16 %68, 3
  br i1 %69, label %111, label %78

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %72 = load i16*, i16** %71, align 8
  %73 = lshr i16 %56, 1
  %74 = zext i16 %73 to i64
  %75 = getelementptr inbounds i16, i16* %72, i64 %74
  %76 = load i16, i16* %75, align 2
  %77 = icmp ult i16 %76, 512
  br i1 %77, label %111, label %78

78:                                               ; preds = %67, %70, %39
  %79 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 4
  %80 = load i16*, i16** %79, align 8
  %81 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 2
  %82 = load i16*, i16** %81, align 8
  %83 = ptrtoint i16* %80 to i64
  %84 = ptrtoint i16* %82 to i64
  %85 = sub i64 %83, %84
  %86 = icmp sgt i64 %85, 2
  br i1 %86, label %87, label %93

87:                                               ; preds = %78
  %88 = getelementptr inbounds i16, i16* %80, i64 -1
  store i16* %88, i16** %79, align 8
  %89 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 5
  %90 = load i32, i32* %89, align 8
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %89, align 8
  %92 = ptrtoint i16* %88 to i64
  br label %106

93:                                               ; preds = %78
  store i16* %82, i16** %79, align 8
  %94 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 1
  %95 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %94, align 8
  %96 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %95, i64 0, i32 1, i32 0, i32 0
  %97 = load i16, i16* %96, align 8
  %98 = and i16 %97, 2
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %95, i64 0, i32 1, i32 0, i32 2
  %102 = load i32, i32* %101, align 8
  br label %103

103:                                              ; preds = %100, %93
  %104 = phi i32 [ %102, %100 ], [ 27, %93 ]
  %105 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 5
  store i32 %104, i32* %105, align 8
  br label %106

106:                                              ; preds = %87, %103
  %107 = phi i64 [ %84, %103 ], [ %92, %87 ]
  %108 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 6
  store i8 0, i8* %108, align 4
  %109 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 3
  %110 = bitcast i16** %109 to i64*
  store i64 %107, i64* %110, align 8
  br label %111

111:                                              ; preds = %33, %67, %70, %59, %30, %106, %7
  %112 = phi i16* [ %31, %106 ], [ %31, %30 ], [ %2, %7 ], [ %31, %70 ], [ %31, %59 ], [ %31, %67 ], [ %31, %33 ]
  %113 = phi i16* [ %34, %106 ], [ %1, %30 ], [ %1, %7 ], [ %14, %70 ], [ %14, %59 ], [ %14, %67 ], [ %14, %33 ]
  %114 = icmp eq i16* %113, %112
  br i1 %114, label %143, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %117 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 6
  %118 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %119 = icmp eq i8 %4, 0
  %120 = icmp eq i8 %3, 0
  %121 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %122 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 16
  %123 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %124 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %125 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %126 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 11
  %127 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 7
  %128 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 9
  %129 = icmp ne i8 %4, 0
  %130 = xor i1 %129, true
  %131 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 4
  %132 = bitcast i16** %131 to i64*
  %133 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 2
  %134 = bitcast i16** %133 to i64*
  %135 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 3
  %136 = bitcast i16** %135 to i64*
  %137 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 1
  %138 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 5
  %139 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 6
  br label %140

140:                                              ; preds = %115, %653
  %141 = phi i16* [ %113, %115 ], [ %655, %653 ]
  %142 = phi i16* [ %113, %115 ], [ %654, %653 ]
  br label %150

143:                                              ; preds = %653, %180, %209, %111
  %144 = phi i16* [ %113, %111 ], [ %142, %209 ], [ %142, %180 ], [ %654, %653 ]
  %145 = icmp ne i16* %144, %112
  %146 = icmp ne i8 %4, 0
  %147 = and i1 %146, %145
  br i1 %147, label %148, label %657

148:                                              ; preds = %143
  %149 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %144, i16* %112, i32* dereferenceable(4) %6)
  br label %657

150:                                              ; preds = %140, %209
  %151 = phi i16* [ %141, %140 ], [ %210, %209 ]
  %152 = load i16, i16* %151, align 2
  %153 = zext i16 %152 to i32
  %154 = icmp ult i16 %152, %9
  br i1 %154, label %174, label %155

155:                                              ; preds = %150
  %156 = load %struct.UCPTrie*, %struct.UCPTrie** %116, align 8
  %157 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %156, i64 0, i32 1
  %158 = bitcast %union.UCPTrieData* %157 to i16**
  %159 = load i16*, i16** %158, align 8
  %160 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %156, i64 0, i32 0
  %161 = load i16*, i16** %160, align 8
  %162 = lshr i32 %153, 6
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds i16, i16* %161, i64 %163
  %165 = load i16, i16* %164, align 2
  %166 = zext i16 %165 to i32
  %167 = and i32 %153, 63
  %168 = add nuw nsw i32 %167, %166
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i16, i16* %159, i64 %169
  %171 = load i16, i16* %170, align 2
  %172 = load i16, i16* %117, align 2
  %173 = icmp ugt i16 %172, %171
  br i1 %173, label %174, label %176

174:                                              ; preds = %155, %150
  %175 = getelementptr inbounds i16, i16* %151, i64 1
  br label %209

176:                                              ; preds = %155
  %177 = getelementptr inbounds i16, i16* %151, i64 1
  %178 = and i32 %153, 64512
  %179 = icmp eq i32 %178, 55296
  br i1 %179, label %180, label %212

180:                                              ; preds = %176
  %181 = icmp eq i16* %177, %112
  br i1 %181, label %143, label %182

182:                                              ; preds = %180
  %183 = load i16, i16* %177, align 2
  %184 = zext i16 %183 to i32
  %185 = and i32 %184, 64512
  %186 = icmp eq i32 %185, 56320
  br i1 %186, label %187, label %209

187:                                              ; preds = %182
  %188 = getelementptr inbounds i16, i16* %151, i64 2
  %189 = shl nuw nsw i32 %153, 10
  %190 = add nsw i32 %189, -56613888
  %191 = add nsw i32 %190, %184
  %192 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %156, i64 0, i32 4
  %193 = load i32, i32* %192, align 8
  %194 = icmp slt i32 %191, %193
  br i1 %194, label %199, label %195

195:                                              ; preds = %187
  %196 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %156, i64 0, i32 3
  %197 = load i32, i32* %196, align 4
  %198 = add nsw i32 %197, -2
  br label %202

199:                                              ; preds = %187
  %200 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %156, i32 %191) #8
  %201 = load i16, i16* %117, align 2
  br label %202

202:                                              ; preds = %199, %195
  %203 = phi i16 [ %172, %195 ], [ %201, %199 ]
  %204 = phi i32 [ %198, %195 ], [ %200, %199 ]
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i16, i16* %159, i64 %205
  %207 = load i16, i16* %206, align 2
  %208 = icmp ugt i16 %203, %207
  br i1 %208, label %209, label %214

209:                                              ; preds = %202, %182, %174
  %210 = phi i16* [ %175, %174 ], [ %188, %202 ], [ %177, %182 ]
  %211 = icmp eq i16* %210, %112
  br i1 %211, label %143, label %150

212:                                              ; preds = %176
  %213 = zext i16 %152 to i32
  br label %214

214:                                              ; preds = %202, %212
  %215 = phi i32 [ %213, %212 ], [ %191, %202 ]
  %216 = phi i16 [ %171, %212 ], [ %207, %202 ]
  %217 = phi i16* [ %177, %212 ], [ %188, %202 ]
  %218 = load i16, i16* %118, align 2
  %219 = icmp ugt i16 %218, %216
  br i1 %219, label %220, label %307

220:                                              ; preds = %214
  br i1 %119, label %657, label %221

221:                                              ; preds = %220
  %222 = load i16, i16* %124, align 2
  %223 = icmp ugt i16 %222, %216
  br i1 %223, label %257, label %224

224:                                              ; preds = %221
  %225 = and i16 %216, 1
  %226 = icmp eq i16 %225, 0
  br i1 %226, label %233, label %227

227:                                              ; preds = %224
  %228 = icmp eq i16 %216, 1
  %229 = or i1 %120, %228
  %230 = and i16 %216, 6
  %231 = icmp ult i16 %230, 3
  %232 = or i1 %229, %231
  br i1 %232, label %236, label %233

233:                                              ; preds = %227, %224
  %234 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl21hasCompBoundaryBeforeEPKDsS2_(%"class.icu_69::Normalizer2Impl"* %0, i16* %217, i16* %112)
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %515, label %236

236:                                              ; preds = %227, %233
  %237 = icmp eq i16* %142, %151
  br i1 %237, label %241, label %238

238:                                              ; preds = %236
  %239 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %142, i16* %151, i32* dereferenceable(4) %6)
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %657, label %241

241:                                              ; preds = %238, %236
  %242 = lshr i16 %216, 3
  %243 = zext i16 %242 to i32
  %244 = add nsw i32 %215, %243
  %245 = load i16, i16* %126, align 4
  %246 = zext i16 %245 to i32
  %247 = sub nsw i32 %244, %246
  %248 = icmp slt i32 %247, 65536
  br i1 %248, label %249, label %252

249:                                              ; preds = %241
  %250 = trunc i32 %247 to i16
  %251 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer9appendBMPEDshR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16 zeroext %250, i8 zeroext 0, i32* dereferenceable(4) %6) #8
  br label %254

252:                                              ; preds = %241
  %253 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer19appendSupplementaryEihR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i32 %247, i8 zeroext 0, i32* dereferenceable(4) %6) #8
  br label %254

254:                                              ; preds = %249, %252
  %255 = phi i8 [ %251, %249 ], [ %253, %252 ]
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %657, label %653

257:                                              ; preds = %221
  %258 = load i16, i16* %127, align 4
  %259 = icmp ult i16 %216, %258
  br i1 %259, label %260, label %293

260:                                              ; preds = %257
  %261 = and i16 %216, 1
  %262 = icmp eq i16 %261, 0
  br i1 %262, label %273, label %263

263:                                              ; preds = %260
  %264 = icmp eq i16 %216, 1
  %265 = or i1 %120, %264
  br i1 %265, label %276, label %266

266:                                              ; preds = %263
  %267 = load i16*, i16** %125, align 8
  %268 = lshr i16 %216, 1
  %269 = zext i16 %268 to i64
  %270 = getelementptr inbounds i16, i16* %267, i64 %269
  %271 = load i16, i16* %270, align 2
  %272 = icmp ult i16 %271, 512
  br i1 %272, label %276, label %273

273:                                              ; preds = %266, %260
  %274 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl21hasCompBoundaryBeforeEPKDsS2_(%"class.icu_69::Normalizer2Impl"* %0, i16* %217, i16* %112)
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %515, label %276

276:                                              ; preds = %266, %263, %273
  %277 = icmp eq i16* %142, %151
  br i1 %277, label %281, label %278

278:                                              ; preds = %276
  %279 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %142, i16* %151, i32* dereferenceable(4) %6)
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %657, label %281

281:                                              ; preds = %278, %276
  %282 = load i16*, i16** %125, align 8
  %283 = lshr i16 %216, 1
  %284 = zext i16 %283 to i64
  %285 = getelementptr inbounds i16, i16* %282, i64 %284
  %286 = getelementptr inbounds i16, i16* %285, i64 1
  %287 = load i16, i16* %285, align 2
  %288 = and i16 %287, 31
  %289 = zext i16 %288 to i64
  %290 = getelementptr inbounds i16, i16* %286, i64 %289
  %291 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %286, i16* %290, i32* dereferenceable(4) %6)
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %657, label %653

293:                                              ; preds = %257
  %294 = load i16, i16* %128, align 8
  %295 = icmp ult i16 %216, %294
  br i1 %295, label %515, label %296

296:                                              ; preds = %293
  %297 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl21hasCompBoundaryBeforeEPKDsS2_(%"class.icu_69::Normalizer2Impl"* %0, i16* %217, i16* %112)
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %302

299:                                              ; preds = %296
  %300 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl20hasCompBoundaryAfterEPKDsS2_a(%"class.icu_69::Normalizer2Impl"* %0, i16* %142, i16* %151, i8 signext %3)
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %515, label %302

302:                                              ; preds = %299, %296
  %303 = icmp eq i16* %142, %151
  br i1 %303, label %653, label %304

304:                                              ; preds = %302
  %305 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %142, i16* %151, i32* dereferenceable(4) %6)
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %657, label %653

307:                                              ; preds = %214
  %308 = icmp ne i16 %216, -512
  %309 = icmp eq i16* %142, %151
  %310 = or i1 %309, %308
  br i1 %310, label %370, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds i16, i16* %151, i64 -1
  %313 = load i16, i16* %312, align 2
  %314 = icmp slt i32 %215, 4519
  br i1 %314, label %315, label %350

315:                                              ; preds = %311
  %316 = add i16 %313, -4352
  %317 = zext i16 %316 to i32
  %318 = icmp ult i16 %316, 19
  br i1 %318, label %319, label %515

319:                                              ; preds = %315
  br i1 %119, label %657, label %320

320:                                              ; preds = %319
  %321 = icmp eq i16* %217, %112
  br i1 %321, label %330, label %322

322:                                              ; preds = %320
  %323 = load i16, i16* %217, align 2
  %324 = zext i16 %323 to i32
  %325 = add nsw i32 %324, -4520
  %326 = icmp ult i32 %325, 27
  br i1 %326, label %327, label %330

327:                                              ; preds = %322
  %328 = add nsw i32 %324, -4519
  %329 = getelementptr inbounds i16, i16* %217, i64 1
  br label %333

330:                                              ; preds = %320, %322
  %331 = tail call signext i8 @_ZNK6icu_6915Normalizer2Impl21hasCompBoundaryBeforeEPKDsS2_(%"class.icu_69::Normalizer2Impl"* %0, i16* %217, i16* %112)
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %515, label %333

333:                                              ; preds = %327, %330
  %334 = phi i16* [ %217, %330 ], [ %329, %327 ]
  %335 = phi i32 [ 0, %330 ], [ %328, %327 ]
  %336 = mul nuw nsw i32 %317, 21
  %337 = add nsw i32 %215, -4449
  %338 = add nsw i32 %337, %336
  %339 = mul nsw i32 %338, 28
  %340 = add nsw i32 %339, 44032
  %341 = add nsw i32 %340, %335
  %342 = icmp eq i16* %142, %312
  br i1 %342, label %346, label %343

343:                                              ; preds = %333
  %344 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %142, i16* %312, i32* dereferenceable(4) %6)
  %345 = icmp eq i8 %344, 0
  br i1 %345, label %657, label %346

346:                                              ; preds = %343, %333
  %347 = trunc i32 %341 to i16
  %348 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer9appendBMPEDshR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16 zeroext %347, i8 zeroext 0, i32* dereferenceable(4) %6)
  %349 = icmp eq i8 %348, 0
  br i1 %349, label %657, label %653

350:                                              ; preds = %311
  %351 = zext i16 %313 to i32
  %352 = add nsw i32 %351, -44032
  %353 = icmp ult i32 %352, 11172
  br i1 %353, label %354, label %515

354:                                              ; preds = %350
  %355 = trunc i32 %352 to i16
  %356 = urem i16 %355, 28
  %357 = icmp eq i16 %356, 0
  br i1 %357, label %358, label %515

358:                                              ; preds = %354
  br i1 %119, label %657, label %359

359:                                              ; preds = %358
  %360 = icmp eq i16* %142, %312
  br i1 %360, label %364, label %361

361:                                              ; preds = %359
  %362 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %142, i16* %312, i32* dereferenceable(4) %6)
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %657, label %364

364:                                              ; preds = %361, %359
  %365 = trunc i32 %215 to i16
  %366 = add i16 %365, -4519
  %367 = add i16 %366, %313
  %368 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer9appendBMPEDshR10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16 zeroext %367, i8 zeroext 0, i32* dereferenceable(4) %6)
  %369 = icmp eq i8 %368, 0
  br i1 %369, label %657, label %653

370:                                              ; preds = %307
  %371 = icmp ugt i16 %216, -512
  br i1 %371, label %372, label %515

372:                                              ; preds = %370
  %373 = lshr i16 %216, 1
  %374 = trunc i16 %373 to i8
  %375 = or i1 %120, %309
  br i1 %375, label %429, label %376

376:                                              ; preds = %372
  %377 = ptrtoint i16* %151 to i64
  %378 = ptrtoint i16* %142 to i64
  %379 = sub i64 %377, %378
  %380 = lshr exact i64 %379, 1
  %381 = trunc i64 %380 to i32
  %382 = add nsw i32 %381, -1
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i16, i16* %142, i64 %383
  %385 = load i16, i16* %384, align 2
  %386 = zext i16 %385 to i32
  %387 = and i32 %386, 64512
  %388 = icmp eq i32 %387, 56320
  %389 = icmp sgt i32 %382, 0
  %390 = and i1 %389, %388
  br i1 %390, label %391, label %404

391:                                              ; preds = %376
  %392 = shl i64 %379, 31
  %393 = add i64 %392, -8589934592
  %394 = ashr exact i64 %393, 32
  %395 = getelementptr inbounds i16, i16* %142, i64 %394
  %396 = load i16, i16* %395, align 2
  %397 = zext i16 %396 to i32
  %398 = and i32 %397, 64512
  %399 = icmp eq i32 %398, 55296
  br i1 %399, label %400, label %404

400:                                              ; preds = %391
  %401 = shl nuw nsw i32 %397, 10
  %402 = add nuw nsw i32 %386, -56613888
  %403 = add nsw i32 %402, %401
  br label %404

404:                                              ; preds = %400, %391, %376
  %405 = phi i32 [ %386, %376 ], [ %403, %400 ], [ %386, %391 ]
  %406 = load i16, i16* %121, align 8
  %407 = zext i16 %406 to i32
  %408 = icmp slt i32 %405, %407
  br i1 %408, label %429, label %409

409:                                              ; preds = %404
  %410 = icmp slt i32 %405, 65536
  br i1 %410, label %411, label %425

411:                                              ; preds = %409
  %412 = load i8*, i8** %122, align 8
  %413 = ashr i32 %405, 8
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds i8, i8* %412, i64 %414
  %416 = load i8, i8* %415, align 1
  %417 = icmp eq i8 %416, 0
  br i1 %417, label %429, label %418

418:                                              ; preds = %411
  %419 = zext i8 %416 to i32
  %420 = lshr i32 %405, 5
  %421 = and i32 %420, 7
  %422 = shl i32 1, %421
  %423 = and i32 %422, %419
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %429, label %425

425:                                              ; preds = %409, %418
  %426 = tail call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %0, i32 %405) #8
  %427 = trunc i16 %426 to i8
  %428 = icmp ugt i8 %427, %374
  br i1 %428, label %430, label %429

429:                                              ; preds = %372, %411, %418, %404, %425
  br label %431

430:                                              ; preds = %425
  br i1 %119, label %657, label %515

431:                                              ; preds = %429, %497
  %432 = phi i16* [ %488, %497 ], [ %217, %429 ]
  %433 = phi i8 [ %499, %497 ], [ %374, %429 ]
  %434 = icmp eq i16* %432, %112
  br i1 %434, label %435, label %438

435:                                              ; preds = %431
  br i1 %119, label %657, label %436

436:                                              ; preds = %435
  %437 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %142, i16* %112, i32* dereferenceable(4) %6)
  br label %657

438:                                              ; preds = %431
  %439 = getelementptr inbounds i16, i16* %432, i64 1
  %440 = load i16, i16* %432, align 2
  %441 = zext i16 %440 to i32
  %442 = and i32 %441, 63488
  %443 = icmp eq i32 %442, 55296
  br i1 %443, label %455, label %444

444:                                              ; preds = %438
  %445 = load %struct.UCPTrie*, %struct.UCPTrie** %116, align 8
  %446 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %445, i64 0, i32 0
  %447 = load i16*, i16** %446, align 8
  %448 = lshr i32 %441, 6
  %449 = zext i32 %448 to i64
  %450 = getelementptr inbounds i16, i16* %447, i64 %449
  %451 = load i16, i16* %450, align 2
  %452 = zext i16 %451 to i32
  %453 = and i32 %441, 63
  %454 = add nuw nsw i32 %453, %452
  br label %486

455:                                              ; preds = %438
  %456 = and i32 %441, 1024
  %457 = icmp ne i32 %456, 0
  %458 = icmp eq i16* %439, %112
  %459 = or i1 %458, %457
  br i1 %459, label %481, label %460

460:                                              ; preds = %455
  %461 = load i16, i16* %439, align 2
  %462 = zext i16 %461 to i32
  %463 = and i32 %462, 64512
  %464 = icmp eq i32 %463, 56320
  br i1 %464, label %465, label %481

465:                                              ; preds = %460
  %466 = getelementptr inbounds i16, i16* %432, i64 2
  %467 = shl nuw nsw i32 %441, 10
  %468 = add nsw i32 %467, -56613888
  %469 = add nsw i32 %468, %462
  %470 = load %struct.UCPTrie*, %struct.UCPTrie** %116, align 8
  %471 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %470, i64 0, i32 4
  %472 = load i32, i32* %471, align 8
  %473 = icmp slt i32 %469, %472
  br i1 %473, label %478, label %474

474:                                              ; preds = %465
  %475 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %470, i64 0, i32 3
  %476 = load i32, i32* %475, align 4
  %477 = add nsw i32 %476, -2
  br label %486

478:                                              ; preds = %465
  %479 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %470, i32 %469) #8
  %480 = load %struct.UCPTrie*, %struct.UCPTrie** %116, align 8
  br label %486

481:                                              ; preds = %455, %460
  %482 = load %struct.UCPTrie*, %struct.UCPTrie** %116, align 8
  %483 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %482, i64 0, i32 3
  %484 = load i32, i32* %483, align 4
  %485 = add nsw i32 %484, -1
  br label %486

486:                                              ; preds = %481, %478, %474, %444
  %487 = phi %struct.UCPTrie* [ %445, %444 ], [ %482, %481 ], [ %480, %478 ], [ %470, %474 ]
  %488 = phi i16* [ %439, %444 ], [ %439, %481 ], [ %466, %478 ], [ %466, %474 ]
  %489 = phi i32 [ %454, %444 ], [ %485, %481 ], [ %479, %478 ], [ %477, %474 ]
  %490 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %487, i64 0, i32 1
  %491 = bitcast %union.UCPTrieData* %490 to i16**
  %492 = load i16*, i16** %491, align 8
  %493 = sext i32 %489 to i64
  %494 = getelementptr inbounds i16, i16* %492, i64 %493
  %495 = load i16, i16* %494, align 2
  %496 = icmp ugt i16 %495, -511
  br i1 %496, label %497, label %502

497:                                              ; preds = %486
  %498 = lshr i16 %495, 1
  %499 = trunc i16 %498 to i8
  %500 = icmp ugt i8 %433, %499
  br i1 %500, label %501, label %431

501:                                              ; preds = %497
  br i1 %119, label %657, label %502

502:                                              ; preds = %486, %501
  %503 = load i16, i16* %123, align 2
  %504 = icmp ugt i16 %503, %495
  br i1 %504, label %511, label %505

505:                                              ; preds = %502
  %506 = load i16, i16* %124, align 2
  %507 = icmp ugt i16 %506, %495
  br i1 %507, label %515, label %508

508:                                              ; preds = %505
  %509 = load i16, i16* %118, align 2
  %510 = icmp ugt i16 %509, %495
  br i1 %510, label %511, label %515

511:                                              ; preds = %508, %502
  %512 = load i16, i16* %117, align 2
  %513 = icmp ugt i16 %512, %495
  %514 = select i1 %513, i16* %488, i16* %432
  br label %653

515:                                              ; preds = %508, %354, %505, %350, %315, %330, %430, %233, %273, %299, %293, %370
  %516 = phi i16* [ %217, %370 ], [ %217, %233 ], [ %217, %273 ], [ %217, %299 ], [ %217, %293 ], [ %217, %354 ], [ %217, %430 ], [ %432, %508 ], [ %217, %330 ], [ %217, %315 ], [ %217, %350 ], [ %432, %505 ]
  %517 = icmp eq i16* %142, %151
  br i1 %517, label %604, label %518

518:                                              ; preds = %515
  %519 = load i16, i16* %123, align 2
  %520 = icmp ugt i16 %519, %216
  br i1 %520, label %604, label %521

521:                                              ; preds = %518
  %522 = load i16, i16* %124, align 2
  %523 = icmp ugt i16 %522, %216
  br i1 %523, label %527, label %524

524:                                              ; preds = %521
  %525 = load i16, i16* %118, align 2
  %526 = icmp ugt i16 %525, %216
  br i1 %526, label %604, label %527

527:                                              ; preds = %524, %521
  %528 = getelementptr inbounds i16, i16* %151, i64 -1
  %529 = load i16, i16* %528, align 2
  %530 = zext i16 %529 to i32
  %531 = and i32 %530, 63488
  %532 = icmp eq i32 %531, 55296
  br i1 %532, label %544, label %533

533:                                              ; preds = %527
  %534 = load %struct.UCPTrie*, %struct.UCPTrie** %116, align 8
  %535 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %534, i64 0, i32 0
  %536 = load i16*, i16** %535, align 8
  %537 = lshr i32 %530, 6
  %538 = zext i32 %537 to i64
  %539 = getelementptr inbounds i16, i16* %536, i64 %538
  %540 = load i16, i16* %539, align 2
  %541 = zext i16 %540 to i32
  %542 = and i32 %530, 63
  %543 = add nuw nsw i32 %542, %541
  br label %575

544:                                              ; preds = %527
  %545 = and i32 %530, 1024
  %546 = icmp eq i32 %545, 0
  %547 = icmp eq i16* %528, %142
  %548 = or i1 %547, %546
  br i1 %548, label %570, label %549

549:                                              ; preds = %544
  %550 = getelementptr inbounds i16, i16* %151, i64 -2
  %551 = load i16, i16* %550, align 2
  %552 = zext i16 %551 to i32
  %553 = and i32 %552, 64512
  %554 = icmp eq i32 %553, 55296
  br i1 %554, label %555, label %570

555:                                              ; preds = %549
  %556 = shl nuw nsw i32 %552, 10
  %557 = add nuw nsw i32 %530, -56613888
  %558 = add nsw i32 %557, %556
  %559 = load %struct.UCPTrie*, %struct.UCPTrie** %116, align 8
  %560 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %559, i64 0, i32 4
  %561 = load i32, i32* %560, align 8
  %562 = icmp slt i32 %558, %561
  br i1 %562, label %567, label %563

563:                                              ; preds = %555
  %564 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %559, i64 0, i32 3
  %565 = load i32, i32* %564, align 4
  %566 = add nsw i32 %565, -2
  br label %575

567:                                              ; preds = %555
  %568 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %559, i32 %558) #8
  %569 = load %struct.UCPTrie*, %struct.UCPTrie** %116, align 8
  br label %575

570:                                              ; preds = %544, %549
  %571 = load %struct.UCPTrie*, %struct.UCPTrie** %116, align 8
  %572 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %571, i64 0, i32 3
  %573 = load i32, i32* %572, align 4
  %574 = add nsw i32 %573, -1
  br label %575

575:                                              ; preds = %570, %567, %563, %533
  %576 = phi %struct.UCPTrie* [ %534, %533 ], [ %571, %570 ], [ %569, %567 ], [ %559, %563 ]
  %577 = phi i16* [ %528, %533 ], [ %528, %570 ], [ %550, %567 ], [ %550, %563 ]
  %578 = phi i32 [ %543, %533 ], [ %574, %570 ], [ %568, %567 ], [ %566, %563 ]
  %579 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %576, i64 0, i32 1
  %580 = bitcast %union.UCPTrieData* %579 to i16**
  %581 = load i16*, i16** %580, align 8
  %582 = sext i32 %578 to i64
  %583 = getelementptr inbounds i16, i16* %581, i64 %582
  %584 = load i16, i16* %583, align 2
  %585 = and i16 %584, 1
  %586 = icmp eq i16 %585, 0
  br i1 %586, label %603, label %587

587:                                              ; preds = %575
  %588 = icmp eq i16 %584, 1
  %589 = or i1 %120, %588
  br i1 %589, label %604, label %590

590:                                              ; preds = %587
  %591 = load i16, i16* %124, align 2
  %592 = icmp ugt i16 %591, %584
  br i1 %592, label %596, label %593

593:                                              ; preds = %590
  %594 = and i16 %584, 6
  %595 = icmp ult i16 %594, 3
  br i1 %595, label %604, label %603

596:                                              ; preds = %590
  %597 = load i16*, i16** %125, align 8
  %598 = lshr i16 %584, 1
  %599 = zext i16 %598 to i64
  %600 = getelementptr inbounds i16, i16* %597, i64 %599
  %601 = load i16, i16* %600, align 2
  %602 = icmp ult i16 %601, 512
  br i1 %602, label %604, label %603

603:                                              ; preds = %593, %596, %575
  br label %604

604:                                              ; preds = %593, %596, %524, %587, %518, %603, %515
  %605 = phi i16* [ %151, %524 ], [ %142, %515 ], [ %577, %603 ], [ %151, %596 ], [ %151, %518 ], [ %151, %587 ], [ %151, %593 ]
  %606 = icmp eq i16* %142, %605
  %607 = or i1 %606, %130
  br i1 %607, label %611, label %608

608:                                              ; preds = %604
  %609 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %142, i16* %605, i32* dereferenceable(4) %6)
  %610 = icmp eq i8 %609, 0
  br i1 %610, label %657, label %611

611:                                              ; preds = %604, %608
  %612 = load i64, i64* %132, align 8
  %613 = load i64, i64* %134, align 8
  %614 = sub i64 %612, %613
  %615 = lshr exact i64 %614, 1
  %616 = trunc i64 %615 to i32
  %617 = tail call i16* @_ZNK6icu_6915Normalizer2Impl14decomposeShortEPKDsS2_aaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i16* %605, i16* %516, i8 signext 0, i8 signext %3, %"class.icu_69::ReorderingBuffer"* dereferenceable(64) %5, i32* dereferenceable(4) %6)
  %618 = tail call i16* @_ZNK6icu_6915Normalizer2Impl14decomposeShortEPKDsS2_aaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i16* %516, i16* %112, i8 signext 1, i8 signext %3, %"class.icu_69::ReorderingBuffer"* dereferenceable(64) %5, i32* dereferenceable(4) %6)
  %619 = load i32, i32* %6, align 4
  %620 = icmp slt i32 %619, 1
  br i1 %620, label %621, label %657

621:                                              ; preds = %611
  %622 = ptrtoint i16* %618 to i64
  %623 = ptrtoint i16* %605 to i64
  %624 = sub i64 %622, %623
  %625 = icmp sgt i64 %624, 4294967294
  br i1 %625, label %626, label %627

626:                                              ; preds = %621
  store i32 8, i32* %6, align 4
  br label %657

627:                                              ; preds = %621
  tail call void @_ZNK6icu_6915Normalizer2Impl9recomposeERNS_16ReorderingBufferEia(%"class.icu_69::Normalizer2Impl"* %0, %"class.icu_69::ReorderingBuffer"* dereferenceable(64) %5, i32 %616, i8 signext %3)
  br i1 %129, label %653, label %628

628:                                              ; preds = %627
  %629 = load i64, i64* %132, align 8
  %630 = load i16*, i16** %133, align 8
  %631 = ptrtoint i16* %630 to i64
  %632 = sub i64 %629, %631
  %633 = lshr exact i64 %632, 1
  %634 = trunc i64 %633 to i32
  %635 = lshr exact i64 %624, 1
  %636 = trunc i64 %635 to i32
  %637 = icmp eq i32 %634, %636
  br i1 %637, label %638, label %657

638:                                              ; preds = %628
  %639 = tail call i32 @u_memcmp_69(i16* %630, i16* %605, i32 %634) #8
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %641, label %657

641:                                              ; preds = %638
  %642 = load i64, i64* %134, align 8
  store i64 %642, i64* %132, align 8
  store i64 %642, i64* %136, align 8
  %643 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %137, align 8
  %644 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %643, i64 0, i32 1, i32 0, i32 0
  %645 = load i16, i16* %644, align 8
  %646 = and i16 %645, 2
  %647 = icmp eq i16 %646, 0
  br i1 %647, label %648, label %651

648:                                              ; preds = %641
  %649 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %643, i64 0, i32 1, i32 0, i32 2
  %650 = load i32, i32* %649, align 8
  br label %651

651:                                              ; preds = %641, %648
  %652 = phi i32 [ %650, %648 ], [ 27, %641 ]
  store i32 %652, i32* %138, align 8
  store i8 0, i8* %139, align 4
  br label %653

653:                                              ; preds = %346, %364, %511, %302, %304, %254, %281, %651, %627
  %654 = phi i16* [ %217, %281 ], [ %217, %254 ], [ %618, %651 ], [ %618, %627 ], [ %217, %304 ], [ %217, %302 ], [ %217, %364 ], [ %334, %346 ], [ %142, %511 ]
  %655 = phi i16* [ %217, %281 ], [ %217, %254 ], [ %618, %651 ], [ %618, %627 ], [ %217, %304 ], [ %217, %302 ], [ %217, %364 ], [ %334, %346 ], [ %514, %511 ]
  %656 = icmp eq i16* %655, %112
  br i1 %656, label %143, label %140

657:                                              ; preds = %638, %346, %364, %343, %361, %501, %430, %358, %319, %238, %278, %304, %608, %611, %281, %254, %628, %220, %435, %436, %626, %143, %148, %27
  %658 = phi i8 [ 0, %27 ], [ 1, %626 ], [ 1, %143 ], [ 1, %148 ], [ 1, %435 ], [ 1, %436 ], [ 1, %346 ], [ 1, %364 ], [ 1, %343 ], [ 1, %361 ], [ 0, %319 ], [ 0, %358 ], [ 0, %430 ], [ 0, %501 ], [ 1, %238 ], [ 1, %278 ], [ 1, %304 ], [ 1, %608 ], [ 1, %611 ], [ 1, %281 ], [ 1, %254 ], [ 0, %628 ], [ 0, %220 ], [ 0, %638 ]
  ret i8 %658
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl21hasCompBoundaryBeforeEPKDsS2_(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16* readonly, i16* readnone) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i16* %1, %2
  br i1 %4, label %80, label %5

5:                                                ; preds = %3
  %6 = load i16, i16* %1, align 2
  %7 = zext i16 %6 to i32
  %8 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 2
  %9 = load i16, i16* %8, align 2
  %10 = icmp ult i16 %6, %9
  br i1 %10, label %80, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds i16, i16* %1, i64 1
  %13 = and i32 %7, 63488
  %14 = icmp eq i32 %13, 55296
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %17 = load %struct.UCPTrie*, %struct.UCPTrie** %16, align 8
  %18 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %17, i64 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = lshr i32 %7, 6
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %19, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = and i32 %7, 63
  %26 = add nuw nsw i32 %25, %24
  br label %59

27:                                               ; preds = %11
  %28 = and i32 %7, 1024
  %29 = icmp ne i32 %28, 0
  %30 = icmp eq i16* %12, %2
  %31 = or i1 %30, %29
  br i1 %31, label %53, label %32

32:                                               ; preds = %27
  %33 = load i16, i16* %12, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 64512
  %36 = icmp eq i32 %35, 56320
  br i1 %36, label %37, label %53

37:                                               ; preds = %32
  %38 = shl nuw nsw i32 %7, 10
  %39 = add nsw i32 %38, -56613888
  %40 = add nsw i32 %39, %34
  %41 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %42 = load %struct.UCPTrie*, %struct.UCPTrie** %41, align 8
  %43 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %42, i64 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = icmp slt i32 %40, %44
  br i1 %45, label %50, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %42, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = add nsw i32 %48, -2
  br label %59

50:                                               ; preds = %37
  %51 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %42, i32 %40) #8
  %52 = load %struct.UCPTrie*, %struct.UCPTrie** %41, align 8
  br label %59

53:                                               ; preds = %27, %32
  %54 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %55 = load %struct.UCPTrie*, %struct.UCPTrie** %54, align 8
  %56 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %55, i64 0, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %57, -1
  br label %59

59:                                               ; preds = %53, %50, %46, %15
  %60 = phi %struct.UCPTrie* [ %17, %15 ], [ %55, %53 ], [ %42, %46 ], [ %52, %50 ]
  %61 = phi i32 [ %26, %15 ], [ %58, %53 ], [ %49, %46 ], [ %51, %50 ]
  %62 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %60, i64 0, i32 1
  %63 = bitcast %union.UCPTrieData* %62 to i16**
  %64 = load i16*, i16** %63, align 8
  %65 = sext i32 %61 to i64
  %66 = getelementptr inbounds i16, i16* %64, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %69 = load i16, i16* %68, align 2
  %70 = icmp ugt i16 %69, %67
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %73 = load i16, i16* %72, align 2
  %74 = icmp ugt i16 %73, %67
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %77 = load i16, i16* %76, align 2
  %78 = icmp ugt i16 %77, %67
  %79 = zext i1 %78 to i8
  br label %80

80:                                               ; preds = %75, %71, %59, %3, %5
  %81 = phi i8 [ 1, %5 ], [ 1, %3 ], [ 1, %59 ], [ 0, %71 ], [ %79, %75 ]
  ret i8 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl20hasCompBoundaryAfterEPKDsS2_a(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16* readnone, i16* readonly, i8 signext) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i16* %1, %2
  br i1 %5, label %90, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds i16, i16* %2, i64 -1
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i32
  %10 = and i32 %9, 63488
  %11 = icmp eq i32 %10, 55296
  br i1 %11, label %24, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %14 = load %struct.UCPTrie*, %struct.UCPTrie** %13, align 8
  %15 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %14, i64 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = lshr i32 %9, 6
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %16, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %9, 63
  %23 = add nuw nsw i32 %22, %21
  br label %57

24:                                               ; preds = %6
  %25 = and i32 %9, 1024
  %26 = icmp eq i32 %25, 0
  %27 = icmp eq i16* %7, %1
  %28 = or i1 %27, %26
  br i1 %28, label %51, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds i16, i16* %2, i64 -2
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = and i32 %32, 64512
  %34 = icmp eq i32 %33, 55296
  br i1 %34, label %35, label %51

35:                                               ; preds = %29
  %36 = shl nuw nsw i32 %32, 10
  %37 = add nuw nsw i32 %9, -56613888
  %38 = add nsw i32 %37, %36
  %39 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %40 = load %struct.UCPTrie*, %struct.UCPTrie** %39, align 8
  %41 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %40, i64 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = icmp slt i32 %38, %42
  br i1 %43, label %48, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %40, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = add nsw i32 %46, -2
  br label %57

48:                                               ; preds = %35
  %49 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %40, i32 %38) #8
  %50 = load %struct.UCPTrie*, %struct.UCPTrie** %39, align 8
  br label %57

51:                                               ; preds = %24, %29
  %52 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %53 = load %struct.UCPTrie*, %struct.UCPTrie** %52, align 8
  %54 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, -1
  br label %57

57:                                               ; preds = %51, %48, %44, %12
  %58 = phi %struct.UCPTrie* [ %14, %12 ], [ %53, %51 ], [ %40, %44 ], [ %50, %48 ]
  %59 = phi i32 [ %23, %12 ], [ %56, %51 ], [ %47, %44 ], [ %49, %48 ]
  %60 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %58, i64 0, i32 1
  %61 = bitcast %union.UCPTrieData* %60 to i16**
  %62 = load i16*, i16** %61, align 8
  %63 = sext i32 %59 to i64
  %64 = getelementptr inbounds i16, i16* %62, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = and i16 %65, 1
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %90, label %68

68:                                               ; preds = %57
  %69 = icmp eq i8 %3, 0
  br i1 %69, label %90, label %70

70:                                               ; preds = %68
  %71 = icmp eq i16 %65, 1
  br i1 %71, label %87, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %74 = load i16, i16* %73, align 2
  %75 = icmp ugt i16 %74, %65
  br i1 %75, label %79, label %76

76:                                               ; preds = %72
  %77 = and i16 %65, 6
  %78 = icmp ult i16 %77, 3
  br label %87

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %81 = load i16*, i16** %80, align 8
  %82 = lshr i16 %65, 1
  %83 = zext i16 %82 to i64
  %84 = getelementptr inbounds i16, i16* %81, i64 %83
  %85 = load i16, i16* %84, align 2
  %86 = icmp ult i16 %85, 512
  br label %87

87:                                               ; preds = %79, %76, %70
  %88 = phi i1 [ true, %70 ], [ %78, %76 ], [ %86, %79 ]
  %89 = zext i1 %88 to i8
  br label %90

90:                                               ; preds = %87, %68, %57, %4
  %91 = phi i8 [ 1, %4 ], [ 0, %57 ], [ 1, %68 ], [ %89, %87 ]
  ret i8 %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZN6icu_6916ReorderingBuffer9appendBMPEDshR10UErrorCode(%"class.icu_69::ReorderingBuffer"*, i16 zeroext, i8 zeroext, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %61

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %10 = bitcast i16** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %13 = bitcast i16** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %11, %14
  %16 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  %17 = bitcast i16** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %14
  %20 = lshr exact i64 %19, 1
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 1
  %23 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %22, align 8
  tail call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %23, i32 %21) #8
  %24 = add nsw i32 %21, 1
  %25 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %22, align 8
  %26 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 2
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %8
  %31 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %25, i64 0, i32 1, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = shl i32 %32, 1
  br label %34

34:                                               ; preds = %30, %8
  %35 = phi i32 [ %33, %30 ], [ 54, %8 ]
  %36 = icmp slt i32 %24, %35
  %37 = select i1 %36, i32 %35, i32 %24
  %38 = icmp sgt i32 %37, 256
  %39 = select i1 %38, i32 %37, i32 256
  %40 = tail call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* %25, i32 %39) #8
  store i16* %40, i16** %12, align 8
  %41 = icmp eq i16* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %34
  store i32 7, i32* %3, align 4
  br label %120

43:                                               ; preds = %34
  %44 = shl i64 %15, 31
  %45 = ashr i64 %44, 32
  %46 = getelementptr inbounds i16, i16* %40, i64 %45
  store i16* %46, i16** %9, align 8
  %47 = shl i64 %19, 31
  %48 = ashr exact i64 %47, 32
  %49 = getelementptr inbounds i16, i16* %40, i64 %48
  store i16* %49, i16** %16, align 8
  %50 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %22, align 8
  %51 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1, i32 0, i32 0
  %52 = load i16, i16* %51, align 8
  %53 = and i16 %52, 2
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %50, i64 0, i32 1, i32 0, i32 2
  %57 = load i32, i32* %56, align 8
  br label %58

58:                                               ; preds = %43, %55
  %59 = phi i32 [ %57, %55 ], [ 27, %43 ]
  %60 = sub nsw i32 %59, %21
  store i32 %60, i32* %5, align 8
  br label %61

61:                                               ; preds = %58, %4
  %62 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 6
  %63 = load i8, i8* %62, align 4
  %64 = icmp ule i8 %63, %2
  %65 = icmp eq i8 %2, 0
  %66 = or i1 %65, %64
  %67 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 4
  br i1 %66, label %68, label %77

68:                                               ; preds = %61
  %69 = load i16*, i16** %67, align 8
  %70 = getelementptr inbounds i16, i16* %69, i64 1
  store i16* %70, i16** %67, align 8
  store i16 %1, i16* %69, align 2
  store i8 %2, i8* %62, align 4
  %71 = icmp ult i8 %2, 2
  br i1 %71, label %72, label %117

72:                                               ; preds = %68
  %73 = bitcast i16** %67 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  %76 = bitcast i16** %75 to i64*
  store i64 %74, i64* %76, align 8
  br label %117

77:                                               ; preds = %61
  %78 = bitcast i16** %67 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 7
  %81 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 8
  %82 = bitcast i16** %81 to i64*
  store i64 %79, i64* %82, align 8
  %83 = inttoptr i64 %79 to i16*
  %84 = getelementptr inbounds i16, i16* %83, i64 -1
  store i16* %84, i16** %80, align 8
  %85 = load i16, i16* %84, align 2
  %86 = and i16 %85, -1024
  %87 = icmp eq i16 %86, -9216
  br i1 %87, label %88, label %98

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 2
  %90 = load i16*, i16** %89, align 8
  %91 = icmp ult i16* %90, %84
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = getelementptr inbounds i16, i16* %83, i64 -2
  %94 = load i16, i16* %93, align 2
  %95 = and i16 %94, -1024
  %96 = icmp eq i16 %95, -10240
  br i1 %96, label %97, label %98

97:                                               ; preds = %92
  store i16* %93, i16** %80, align 8
  br label %98

98:                                               ; preds = %97, %92, %88, %77
  br label %99

99:                                               ; preds = %98, %99
  %100 = tail call zeroext i8 @_ZN6icu_6916ReorderingBuffer10previousCCEv(%"class.icu_69::ReorderingBuffer"* %0) #8
  %101 = icmp ugt i8 %100, %2
  br i1 %101, label %99, label %102

102:                                              ; preds = %99
  %103 = load i16*, i16** %67, align 8
  %104 = getelementptr inbounds i16, i16* %103, i64 1
  store i16* %104, i16** %67, align 8
  br label %105

105:                                              ; preds = %105, %102
  %106 = phi i16* [ %103, %102 ], [ %108, %105 ]
  %107 = phi i16* [ %104, %102 ], [ %110, %105 ]
  %108 = getelementptr inbounds i16, i16* %106, i64 -1
  %109 = load i16, i16* %108, align 2
  %110 = getelementptr inbounds i16, i16* %107, i64 -1
  store i16 %109, i16* %110, align 2
  %111 = load i16*, i16** %81, align 8
  %112 = icmp eq i16* %111, %108
  br i1 %112, label %113, label %105

113:                                              ; preds = %105
  store i16 %1, i16* %108, align 2
  %114 = icmp ult i8 %2, 2
  br i1 %114, label %115, label %117

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %0, i64 0, i32 3
  store i16* %110, i16** %116, align 8
  br label %117

117:                                              ; preds = %115, %113, %68, %72
  %118 = load i32, i32* %5, align 8
  %119 = add nsw i32 %118, -1
  store i32 %119, i32* %5, align 8
  br label %120

120:                                              ; preds = %42, %117
  %121 = phi i8 [ 1, %117 ], [ 0, %42 ]
  ret i8 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK6icu_6915Normalizer2Impl18getPreviousTrailCCEPKDsS2_(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16*, i16*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i16* %1, %2
  br i1 %4, label %59, label %5

5:                                                ; preds = %3
  %6 = ptrtoint i16* %2 to i64
  %7 = ptrtoint i16* %1 to i64
  %8 = sub i64 %6, %7
  %9 = lshr exact i64 %8, 1
  %10 = trunc i64 %9 to i32
  %11 = add nsw i32 %10, -1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i16, i16* %1, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = and i32 %15, 64512
  %17 = icmp eq i32 %16, 56320
  %18 = icmp sgt i32 %11, 0
  %19 = and i1 %18, %17
  br i1 %19, label %20, label %33

20:                                               ; preds = %5
  %21 = shl i64 %8, 31
  %22 = add i64 %21, -8589934592
  %23 = ashr exact i64 %22, 32
  %24 = getelementptr inbounds i16, i16* %1, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  %27 = and i32 %26, 64512
  %28 = icmp eq i32 %27, 55296
  br i1 %28, label %29, label %33

29:                                               ; preds = %20
  %30 = shl nuw nsw i32 %26, 10
  %31 = add nuw nsw i32 %15, -56613888
  %32 = add nsw i32 %31, %30
  br label %33

33:                                               ; preds = %20, %29, %5
  %34 = phi i32 [ %15, %5 ], [ %32, %29 ], [ %15, %20 ]
  %35 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %36 = load i16, i16* %35, align 8
  %37 = zext i16 %36 to i32
  %38 = icmp slt i32 %34, %37
  br i1 %38, label %59, label %39

39:                                               ; preds = %33
  %40 = icmp slt i32 %34, 65536
  br i1 %40, label %41, label %56

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 16
  %43 = load i8*, i8** %42, align 8
  %44 = ashr i32 %34, 8
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %41
  %50 = zext i8 %47 to i32
  %51 = lshr i32 %34, 5
  %52 = and i32 %51, 7
  %53 = shl i32 1, %52
  %54 = and i32 %53, %50
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %49, %39
  %57 = tail call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %0, i32 %34) #8
  %58 = trunc i16 %57 to i8
  br label %59

59:                                               ; preds = %56, %49, %41, %33, %3
  %60 = phi i8 [ 0, %3 ], [ %58, %56 ], [ 0, %33 ], [ 0, %49 ], [ 0, %41 ]
  ret i8 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6icu_6915Normalizer2Impl17composeQuickCheckEPKDsS2_aP25UNormalizationCheckResult(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16*, i16* readnone, i8 signext, i32*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 2
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16* %2, null
  br i1 %8, label %9, label %65

9:                                                ; preds = %5, %9
  %10 = phi i16* [ %11, %9 ], [ %1, %5 ]
  %11 = getelementptr inbounds i16, i16* %10, i64 1
  %12 = load i16, i16* %10, align 2
  %13 = icmp ult i16 %12, %7
  %14 = icmp ne i16 %12, 0
  %15 = and i1 %14, %13
  br i1 %15, label %9, label %16

16:                                               ; preds = %9
  %17 = tail call i16* @u_strchr_69(i16* %10, i16 zeroext 0) #8
  %18 = icmp eq i16* %10, %1
  br i1 %18, label %65, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds i16, i16* %10, i64 -1
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = and i32 %22, 64512
  %24 = icmp eq i32 %23, 55296
  br i1 %24, label %65, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %27 = load %struct.UCPTrie*, %struct.UCPTrie** %26, align 8
  %28 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %27, i64 0, i32 1
  %29 = bitcast %union.UCPTrieData* %28 to i16**
  %30 = load i16*, i16** %29, align 8
  %31 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %27, i64 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = lshr i32 %22, 6
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i16, i16* %32, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = and i32 %22, 63
  %39 = add nuw nsw i32 %38, %37
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %30, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = and i16 %42, 1
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %64, label %45

45:                                               ; preds = %25
  %46 = icmp eq i8 %3, 0
  %47 = icmp eq i16 %42, 1
  %48 = or i1 %46, %47
  br i1 %48, label %65, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %51 = load i16, i16* %50, align 2
  %52 = icmp ugt i16 %51, %42
  br i1 %52, label %56, label %53

53:                                               ; preds = %49
  %54 = and i16 %42, 6
  %55 = icmp ult i16 %54, 3
  br i1 %55, label %65, label %64

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %58 = load i16*, i16** %57, align 8
  %59 = lshr i16 %42, 1
  %60 = zext i16 %59 to i64
  %61 = getelementptr inbounds i16, i16* %58, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = icmp ult i16 %62, 512
  br i1 %63, label %65, label %64

64:                                               ; preds = %53, %56, %25
  br label %65

65:                                               ; preds = %19, %53, %56, %45, %16, %64, %5
  %66 = phi i16* [ %2, %5 ], [ %17, %64 ], [ %17, %56 ], [ %17, %16 ], [ %17, %45 ], [ %17, %53 ], [ %17, %19 ]
  %67 = phi i16* [ %1, %5 ], [ %20, %64 ], [ %10, %56 ], [ %1, %16 ], [ %10, %45 ], [ %10, %53 ], [ %10, %19 ]
  %68 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %69 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 6
  %70 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %71 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %72 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %73 = icmp eq i8 %3, 0
  %74 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %75 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %76 = icmp eq i32* %4, null
  br label %77

77:                                               ; preds = %336, %65
  %78 = phi i16* [ %67, %65 ], [ %318, %336 ]
  %79 = phi i16* [ %67, %65 ], [ %260, %336 ]
  %80 = icmp eq i16* %78, %66
  br i1 %80, label %341, label %81

81:                                               ; preds = %77, %140
  %82 = phi i16* [ %141, %140 ], [ %78, %77 ]
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = icmp ult i16 %83, %7
  br i1 %85, label %105, label %86

86:                                               ; preds = %81
  %87 = load %struct.UCPTrie*, %struct.UCPTrie** %68, align 8
  %88 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %87, i64 0, i32 1
  %89 = bitcast %union.UCPTrieData* %88 to i16**
  %90 = load i16*, i16** %89, align 8
  %91 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %87, i64 0, i32 0
  %92 = load i16*, i16** %91, align 8
  %93 = lshr i32 %84, 6
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i16, i16* %92, i64 %94
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  %98 = and i32 %84, 63
  %99 = add nuw nsw i32 %98, %97
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i16, i16* %90, i64 %100
  %102 = load i16, i16* %101, align 2
  %103 = load i16, i16* %69, align 2
  %104 = icmp ugt i16 %103, %102
  br i1 %104, label %105, label %107

105:                                              ; preds = %86, %81
  %106 = getelementptr inbounds i16, i16* %82, i64 1
  br label %140

107:                                              ; preds = %86
  %108 = getelementptr inbounds i16, i16* %82, i64 1
  %109 = and i32 %84, 64512
  %110 = icmp eq i32 %109, 55296
  br i1 %110, label %111, label %143

111:                                              ; preds = %107
  %112 = icmp eq i16* %108, %66
  br i1 %112, label %341, label %113

113:                                              ; preds = %111
  %114 = load i16, i16* %108, align 2
  %115 = zext i16 %114 to i32
  %116 = and i32 %115, 64512
  %117 = icmp eq i32 %116, 56320
  br i1 %117, label %118, label %140

118:                                              ; preds = %113
  %119 = getelementptr inbounds i16, i16* %82, i64 2
  %120 = shl nuw nsw i32 %84, 10
  %121 = add nsw i32 %120, -56613888
  %122 = add nsw i32 %121, %115
  %123 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %87, i64 0, i32 4
  %124 = load i32, i32* %123, align 8
  %125 = icmp slt i32 %122, %124
  br i1 %125, label %130, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %87, i64 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = add nsw i32 %128, -2
  br label %133

130:                                              ; preds = %118
  %131 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %87, i32 %122) #8
  %132 = load i16, i16* %69, align 2
  br label %133

133:                                              ; preds = %130, %126
  %134 = phi i16 [ %103, %126 ], [ %132, %130 ]
  %135 = phi i32 [ %129, %126 ], [ %131, %130 ]
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i16, i16* %90, i64 %136
  %138 = load i16, i16* %137, align 2
  %139 = icmp ugt i16 %134, %138
  br i1 %139, label %140, label %143

140:                                              ; preds = %133, %113, %105
  %141 = phi i16* [ %106, %105 ], [ %119, %133 ], [ %108, %113 ]
  %142 = icmp eq i16* %141, %66
  br i1 %142, label %341, label %81

143:                                              ; preds = %133, %107
  %144 = phi i16* [ %108, %107 ], [ %119, %133 ]
  %145 = phi i16 [ %102, %107 ], [ %138, %133 ]
  %146 = icmp eq i16* %79, %82
  br i1 %146, label %234, label %147

147:                                              ; preds = %143
  %148 = load i16, i16* %70, align 2
  %149 = icmp ugt i16 %148, %145
  br i1 %149, label %234, label %150

150:                                              ; preds = %147
  %151 = load i16, i16* %71, align 2
  %152 = icmp ugt i16 %151, %145
  br i1 %152, label %156, label %153

153:                                              ; preds = %150
  %154 = load i16, i16* %72, align 2
  %155 = icmp ugt i16 %154, %145
  br i1 %155, label %234, label %156

156:                                              ; preds = %153, %150
  %157 = getelementptr inbounds i16, i16* %82, i64 -1
  %158 = load i16, i16* %157, align 2
  %159 = zext i16 %158 to i32
  %160 = and i32 %159, 63488
  %161 = icmp eq i32 %160, 55296
  br i1 %161, label %173, label %162

162:                                              ; preds = %156
  %163 = load %struct.UCPTrie*, %struct.UCPTrie** %68, align 8
  %164 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %163, i64 0, i32 0
  %165 = load i16*, i16** %164, align 8
  %166 = lshr i32 %159, 6
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds i16, i16* %165, i64 %167
  %169 = load i16, i16* %168, align 2
  %170 = zext i16 %169 to i32
  %171 = and i32 %159, 63
  %172 = add nuw nsw i32 %171, %170
  br label %204

173:                                              ; preds = %156
  %174 = and i32 %159, 1024
  %175 = icmp eq i32 %174, 0
  %176 = icmp eq i16* %157, %79
  %177 = or i1 %176, %175
  br i1 %177, label %199, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds i16, i16* %82, i64 -2
  %180 = load i16, i16* %179, align 2
  %181 = zext i16 %180 to i32
  %182 = and i32 %181, 64512
  %183 = icmp eq i32 %182, 55296
  br i1 %183, label %184, label %199

184:                                              ; preds = %178
  %185 = shl nuw nsw i32 %181, 10
  %186 = add nuw nsw i32 %159, -56613888
  %187 = add nsw i32 %186, %185
  %188 = load %struct.UCPTrie*, %struct.UCPTrie** %68, align 8
  %189 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %188, i64 0, i32 4
  %190 = load i32, i32* %189, align 8
  %191 = icmp slt i32 %187, %190
  br i1 %191, label %196, label %192

192:                                              ; preds = %184
  %193 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %188, i64 0, i32 3
  %194 = load i32, i32* %193, align 4
  %195 = add nsw i32 %194, -2
  br label %204

196:                                              ; preds = %184
  %197 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %188, i32 %187) #8
  %198 = load %struct.UCPTrie*, %struct.UCPTrie** %68, align 8
  br label %204

199:                                              ; preds = %173, %178
  %200 = load %struct.UCPTrie*, %struct.UCPTrie** %68, align 8
  %201 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %200, i64 0, i32 3
  %202 = load i32, i32* %201, align 4
  %203 = add nsw i32 %202, -1
  br label %204

204:                                              ; preds = %199, %196, %192, %162
  %205 = phi %struct.UCPTrie* [ %163, %162 ], [ %200, %199 ], [ %198, %196 ], [ %188, %192 ]
  %206 = phi i16* [ %157, %162 ], [ %157, %199 ], [ %179, %196 ], [ %179, %192 ]
  %207 = phi i32 [ %172, %162 ], [ %203, %199 ], [ %197, %196 ], [ %195, %192 ]
  %208 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %205, i64 0, i32 1
  %209 = bitcast %union.UCPTrieData* %208 to i16**
  %210 = load i16*, i16** %209, align 8
  %211 = sext i32 %207 to i64
  %212 = getelementptr inbounds i16, i16* %210, i64 %211
  %213 = load i16, i16* %212, align 2
  %214 = and i16 %213, 1
  %215 = icmp eq i16 %214, 0
  %216 = or i1 %215, %73
  br i1 %216, label %232, label %217

217:                                              ; preds = %204
  %218 = icmp eq i16 %213, 1
  br i1 %218, label %234, label %219

219:                                              ; preds = %217
  %220 = load i16, i16* %71, align 2
  %221 = icmp ugt i16 %220, %213
  br i1 %221, label %225, label %222

222:                                              ; preds = %219
  %223 = and i16 %213, 6
  %224 = icmp ult i16 %223, 3
  br i1 %224, label %234, label %233

225:                                              ; preds = %219
  %226 = load i16*, i16** %74, align 8
  %227 = lshr i16 %213, 1
  %228 = zext i16 %227 to i64
  %229 = getelementptr inbounds i16, i16* %226, i64 %228
  %230 = load i16, i16* %229, align 2
  %231 = icmp ult i16 %230, 512
  br i1 %231, label %234, label %233

232:                                              ; preds = %204
  br i1 %215, label %233, label %234

233:                                              ; preds = %232, %222, %225
  br label %234

234:                                              ; preds = %232, %217, %233, %225, %222, %153, %147, %143
  %235 = phi i16* [ %79, %143 ], [ %82, %153 ], [ %82, %147 ], [ %206, %233 ], [ %82, %225 ], [ %82, %222 ], [ %82, %232 ], [ %82, %217 ]
  %236 = phi i16 [ 1, %143 ], [ 1, %153 ], [ 1, %147 ], [ %213, %233 ], [ 1, %225 ], [ 1, %222 ], [ 1, %232 ], [ 1, %217 ]
  %237 = load i16, i16* %72, align 2
  %238 = icmp ugt i16 %237, %145
  br i1 %238, label %339, label %239

239:                                              ; preds = %234
  %240 = icmp ugt i16 %145, -1025
  %241 = lshr i16 %145, 1
  %242 = trunc i16 %241 to i8
  %243 = select i1 %240, i8 %242, i8 0
  %244 = icmp eq i8 %243, 0
  %245 = or i1 %73, %244
  br i1 %245, label %258, label %246

246:                                              ; preds = %239
  %247 = load i16, i16* %75, align 2
  %248 = icmp ult i16 %247, %236
  br i1 %248, label %249, label %258

249:                                              ; preds = %246
  %250 = load i16*, i16** %74, align 8
  %251 = lshr i16 %236, 1
  %252 = zext i16 %251 to i64
  %253 = getelementptr inbounds i16, i16* %250, i64 %252
  %254 = load i16, i16* %253, align 2
  %255 = lshr i16 %254, 8
  %256 = trunc i16 %255 to i8
  %257 = icmp ult i8 %243, %256
  br i1 %257, label %339, label %258

258:                                              ; preds = %246, %239, %249
  br label %259

259:                                              ; preds = %258, %328
  %260 = phi i16* [ %318, %328 ], [ %144, %258 ]
  %261 = phi i16 [ %325, %328 ], [ %145, %258 ]
  %262 = phi i8 [ %332, %328 ], [ %243, %258 ]
  %263 = icmp ult i16 %261, -510
  br i1 %263, label %264, label %266

264:                                              ; preds = %259
  br i1 %76, label %341, label %265

265:                                              ; preds = %264
  store i32 2, i32* %4, align 4
  br label %266

266:                                              ; preds = %265, %259
  %267 = icmp eq i16* %260, %66
  br i1 %267, label %341, label %268

268:                                              ; preds = %266
  %269 = getelementptr inbounds i16, i16* %260, i64 1
  %270 = load i16, i16* %260, align 2
  %271 = zext i16 %270 to i32
  %272 = and i32 %271, 63488
  %273 = icmp eq i32 %272, 55296
  br i1 %273, label %285, label %274

274:                                              ; preds = %268
  %275 = load %struct.UCPTrie*, %struct.UCPTrie** %68, align 8
  %276 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %275, i64 0, i32 0
  %277 = load i16*, i16** %276, align 8
  %278 = lshr i32 %271, 6
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds i16, i16* %277, i64 %279
  %281 = load i16, i16* %280, align 2
  %282 = zext i16 %281 to i32
  %283 = and i32 %271, 63
  %284 = add nuw nsw i32 %283, %282
  br label %316

285:                                              ; preds = %268
  %286 = and i32 %271, 1024
  %287 = icmp ne i32 %286, 0
  %288 = icmp eq i16* %269, %66
  %289 = or i1 %288, %287
  br i1 %289, label %311, label %290

290:                                              ; preds = %285
  %291 = load i16, i16* %269, align 2
  %292 = zext i16 %291 to i32
  %293 = and i32 %292, 64512
  %294 = icmp eq i32 %293, 56320
  br i1 %294, label %295, label %311

295:                                              ; preds = %290
  %296 = getelementptr inbounds i16, i16* %260, i64 2
  %297 = shl nuw nsw i32 %271, 10
  %298 = add nsw i32 %297, -56613888
  %299 = add nsw i32 %298, %292
  %300 = load %struct.UCPTrie*, %struct.UCPTrie** %68, align 8
  %301 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %300, i64 0, i32 4
  %302 = load i32, i32* %301, align 8
  %303 = icmp slt i32 %299, %302
  br i1 %303, label %308, label %304

304:                                              ; preds = %295
  %305 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %300, i64 0, i32 3
  %306 = load i32, i32* %305, align 4
  %307 = add nsw i32 %306, -2
  br label %316

308:                                              ; preds = %295
  %309 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %300, i32 %299) #8
  %310 = load %struct.UCPTrie*, %struct.UCPTrie** %68, align 8
  br label %316

311:                                              ; preds = %285, %290
  %312 = load %struct.UCPTrie*, %struct.UCPTrie** %68, align 8
  %313 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %312, i64 0, i32 3
  %314 = load i32, i32* %313, align 4
  %315 = add nsw i32 %314, -1
  br label %316

316:                                              ; preds = %311, %308, %304, %274
  %317 = phi %struct.UCPTrie* [ %275, %274 ], [ %312, %311 ], [ %310, %308 ], [ %300, %304 ]
  %318 = phi i16* [ %269, %274 ], [ %269, %311 ], [ %296, %308 ], [ %296, %304 ]
  %319 = phi i32 [ %284, %274 ], [ %315, %311 ], [ %309, %308 ], [ %307, %304 ]
  %320 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %317, i64 0, i32 1
  %321 = bitcast %union.UCPTrieData* %320 to i16**
  %322 = load i16*, i16** %321, align 8
  %323 = sext i32 %319 to i64
  %324 = getelementptr inbounds i16, i16* %322, i64 %323
  %325 = load i16, i16* %324, align 2
  %326 = load i16, i16* %72, align 2
  %327 = icmp ugt i16 %326, %325
  br i1 %327, label %336, label %328

328:                                              ; preds = %316
  %329 = icmp ugt i16 %325, -1025
  %330 = lshr i16 %325, 1
  %331 = trunc i16 %330 to i8
  %332 = select i1 %329, i8 %331, i8 0
  %333 = icmp ule i8 %262, %332
  %334 = icmp eq i8 %332, 0
  %335 = or i1 %333, %334
  br i1 %335, label %259, label %336

336:                                              ; preds = %316, %328
  %337 = load i16, i16* %69, align 2
  %338 = icmp ugt i16 %337, %325
  br i1 %338, label %77, label %339

339:                                              ; preds = %336, %249, %234
  br i1 %76, label %341, label %340

340:                                              ; preds = %339
  store i32 0, i32* %4, align 4
  br label %341

341:                                              ; preds = %77, %111, %140, %266, %264, %339, %340
  %342 = phi i16* [ %235, %340 ], [ %235, %339 ], [ %66, %266 ], [ %235, %264 ], [ %66, %140 ], [ %66, %111 ], [ %66, %77 ]
  ret i16* %342
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6915Normalizer2Impl16composeAndAppendEPKDsS2_aaRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* readonly, i16*, i16*, i8 signext, i8 signext, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.icu_69::UnicodeString", align 8
  %10 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %6, i64 0, i32 2
  %11 = load i16*, i16** %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %6, i64 0, i32 4
  %13 = load i16*, i16** %12, align 8
  %14 = icmp eq i16* %11, %13
  br i1 %14, label %98, label %15

15:                                               ; preds = %8
  %16 = tail call i16* @_ZNK6icu_6915Normalizer2Impl20findNextCompBoundaryEPKDsS2_a(%"class.icu_69::Normalizer2Impl"* %0, i16* %1, i16* %2, i8 signext %4)
  %17 = icmp eq i16* %16, %1
  br i1 %17, label %98, label %18

18:                                               ; preds = %15
  %19 = load i16*, i16** %10, align 8
  %20 = load i16*, i16** %12, align 8
  %21 = tail call i16* @_ZNK6icu_6915Normalizer2Impl24findPreviousCompBoundaryEPKDsS2_a(%"class.icu_69::Normalizer2Impl"* %0, i16* %19, i16* %20, i8 signext %4)
  %22 = bitcast i16** %12 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = ptrtoint i16* %21 to i64
  %25 = sub i64 %23, %24
  %26 = lshr exact i64 %25, 1
  %27 = trunc i64 %26 to i32
  %28 = bitcast %"class.icu_69::UnicodeString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %28) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 64, i1 false)
  call void @_ZN6icu_6913UnicodeStringC1EPKDsi(%"class.icu_69::UnicodeString"* nonnull %9, i16* %21, i32 %27) #8
  %29 = shl i64 %25, 31
  %30 = ashr exact i64 %29, 32
  %31 = load i16*, i16** %12, align 8
  %32 = load i16*, i16** %10, align 8
  %33 = ptrtoint i16* %31 to i64
  %34 = ptrtoint i16* %32 to i64
  %35 = sub i64 %33, %34
  %36 = ashr exact i64 %35, 1
  %37 = icmp sgt i64 %36, %30
  br i1 %37, label %38, label %45

38:                                               ; preds = %18
  %39 = sub nsw i64 0, %30
  %40 = getelementptr inbounds i16, i16* %31, i64 %39
  store i16* %40, i16** %12, align 8
  %41 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %6, i64 0, i32 5
  %42 = load i32, i32* %41, align 8
  %43 = add nsw i32 %42, %27
  store i32 %43, i32* %41, align 8
  %44 = ptrtoint i16* %40 to i64
  br label %58

45:                                               ; preds = %18
  store i16* %32, i16** %12, align 8
  %46 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %6, i64 0, i32 1
  %47 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %46, align 8
  %48 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %47, i64 0, i32 1, i32 0, i32 0
  %49 = load i16, i16* %48, align 8
  %50 = and i16 %49, 2
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %47, i64 0, i32 1, i32 0, i32 2
  %54 = load i32, i32* %53, align 8
  br label %55

55:                                               ; preds = %52, %45
  %56 = phi i32 [ %54, %52 ], [ 27, %45 ]
  %57 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %6, i64 0, i32 5
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %38, %55
  %59 = phi i64 [ %34, %55 ], [ %44, %38 ]
  %60 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %6, i64 0, i32 6
  store i8 0, i8* %60, align 4
  %61 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %6, i64 0, i32 3
  %62 = bitcast i16** %61 to i64*
  store i64 %59, i64* %62, align 8
  %63 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSERKS0_(%"class.icu_69::UnicodeString"* %5, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %9) #8
  %64 = ptrtoint i16* %16 to i64
  %65 = ptrtoint i16* %1 to i64
  %66 = sub i64 %64, %65
  %67 = lshr exact i64 %66, 1
  %68 = trunc i64 %67 to i32
  %69 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* nonnull %9, i16* %1, i32 0, i32 %68) #8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #8, !srcloc !4
  %70 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1
  %71 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %70, i64 0, i32 0, i32 0
  %72 = load i16, i16* %71, align 8
  %73 = sext i16 %72 to i32
  %74 = and i32 %73, 17
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %85

76:                                               ; preds = %58
  %77 = and i32 %73, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %70 to %struct.anon*
  %81 = getelementptr inbounds %struct.anon, %struct.anon* %80, i64 0, i32 1, i64 0
  br label %85

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 3
  %84 = load i16*, i16** %83, align 8
  br label %85

85:                                               ; preds = %58, %79, %82
  %86 = phi i16* [ %81, %79 ], [ %84, %82 ], [ null, %58 ]
  %87 = icmp slt i16 %72, 0
  %88 = lshr i16 %72, 5
  %89 = zext i16 %88 to i32
  %90 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %9, i64 0, i32 1, i32 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = select i1 %87, i32 %91, i32 %89
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i16, i16* %86, i64 %93
  %95 = call signext i8 @_ZNK6icu_6915Normalizer2Impl7composeEPKDsS2_aaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i16* %86, i16* %94, i8 signext %4, i8 signext 1, %"class.icu_69::ReorderingBuffer"* dereferenceable(64) %6, i32* dereferenceable(4) %7)
  %96 = load i32, i32* %7, align 4
  %97 = icmp slt i32 %96, 1
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %28) #8
  br i1 %97, label %98, label %110

98:                                               ; preds = %8, %15, %85
  %99 = phi i16* [ %1, %8 ], [ %16, %85 ], [ %1, %15 ]
  %100 = icmp eq i8 %3, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = call signext i8 @_ZNK6icu_6915Normalizer2Impl7composeEPKDsS2_aaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i16* %99, i16* %2, i8 signext %4, i8 signext 1, %"class.icu_69::ReorderingBuffer"* dereferenceable(64) %6, i32* dereferenceable(4) %7)
  br label %110

103:                                              ; preds = %98
  %104 = icmp eq i16* %2, null
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = call i16* @u_strchr_69(i16* %99, i16 zeroext 0) #8
  br label %107

107:                                              ; preds = %105, %103
  %108 = phi i16* [ %106, %105 ], [ %2, %103 ]
  %109 = call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %6, i16* %99, i16* %108, i32* dereferenceable(4) %7)
  br label %110

110:                                              ; preds = %85, %107, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6icu_6915Normalizer2Impl20findNextCompBoundaryEPKDsS2_a(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16* readonly, i16* readnone, i8 signext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %7 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %8 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %10 = icmp eq i8 %3, 0
  %11 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  br label %12

12:                                               ; preds = %106, %4
  %13 = phi i16* [ %1, %4 ], [ %65, %106 ]
  %14 = icmp eq i16* %13, %2
  br i1 %14, label %109, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i16, i16* %13, i64 1
  %17 = load i16, i16* %13, align 2
  %18 = zext i16 %17 to i32
  %19 = and i32 %18, 63488
  %20 = icmp eq i32 %19, 55296
  br i1 %20, label %32, label %21

21:                                               ; preds = %15
  %22 = load %struct.UCPTrie*, %struct.UCPTrie** %7, align 8
  %23 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %22, i64 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = lshr i32 %18, 6
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %24, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %18, 63
  %31 = add nuw nsw i32 %30, %29
  br label %63

32:                                               ; preds = %15
  %33 = and i32 %18, 1024
  %34 = icmp ne i32 %33, 0
  %35 = icmp eq i16* %16, %2
  %36 = or i1 %35, %34
  br i1 %36, label %58, label %37

37:                                               ; preds = %32
  %38 = load i16, i16* %16, align 2
  %39 = zext i16 %38 to i32
  %40 = and i32 %39, 64512
  %41 = icmp eq i32 %40, 56320
  br i1 %41, label %42, label %58

42:                                               ; preds = %37
  %43 = getelementptr inbounds i16, i16* %13, i64 2
  %44 = shl nuw nsw i32 %18, 10
  %45 = add nsw i32 %44, -56613888
  %46 = add nsw i32 %45, %39
  %47 = load %struct.UCPTrie*, %struct.UCPTrie** %7, align 8
  %48 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %47, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = icmp slt i32 %46, %49
  br i1 %50, label %55, label %51

51:                                               ; preds = %42
  %52 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %47, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = add nsw i32 %53, -2
  br label %63

55:                                               ; preds = %42
  %56 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %47, i32 %46) #8
  %57 = load %struct.UCPTrie*, %struct.UCPTrie** %7, align 8
  br label %63

58:                                               ; preds = %32, %37
  %59 = load %struct.UCPTrie*, %struct.UCPTrie** %7, align 8
  %60 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %59, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, -1
  br label %63

63:                                               ; preds = %58, %55, %51, %21
  %64 = phi %struct.UCPTrie* [ %22, %21 ], [ %59, %58 ], [ %57, %55 ], [ %47, %51 ]
  %65 = phi i16* [ %16, %21 ], [ %16, %58 ], [ %43, %55 ], [ %43, %51 ]
  %66 = phi i32 [ %18, %21 ], [ %18, %58 ], [ %46, %55 ], [ %46, %51 ]
  %67 = phi i32 [ %31, %21 ], [ %62, %58 ], [ %56, %55 ], [ %54, %51 ]
  %68 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %64, i64 0, i32 1
  %69 = bitcast %union.UCPTrieData* %68 to i16**
  %70 = load i16*, i16** %69, align 8
  %71 = sext i32 %67 to i64
  %72 = getelementptr inbounds i16, i16* %70, i64 %71
  %73 = load i16, i16* %72, align 2
  %74 = load i16, i16* %8, align 2
  %75 = zext i16 %74 to i32
  %76 = icmp slt i32 %66, %75
  br i1 %76, label %109, label %77

77:                                               ; preds = %63
  %78 = load i16, i16* %5, align 2
  %79 = icmp ugt i16 %78, %73
  br i1 %79, label %109, label %80

80:                                               ; preds = %77
  %81 = load i16, i16* %9, align 2
  %82 = icmp ugt i16 %81, %73
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = load i16, i16* %6, align 2
  %85 = icmp ugt i16 %84, %73
  br i1 %85, label %109, label %86

86:                                               ; preds = %83, %80
  %87 = and i16 %73, 1
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %106, label %89

89:                                               ; preds = %86
  br i1 %10, label %109, label %90

90:                                               ; preds = %89
  %91 = icmp eq i16 %73, 1
  br i1 %91, label %103, label %92

92:                                               ; preds = %90
  br i1 %82, label %96, label %93

93:                                               ; preds = %92
  %94 = and i16 %73, 6
  %95 = icmp ult i16 %94, 3
  br label %103

96:                                               ; preds = %92
  %97 = load i16*, i16** %11, align 8
  %98 = lshr i16 %73, 1
  %99 = zext i16 %98 to i64
  %100 = getelementptr inbounds i16, i16* %97, i64 %99
  %101 = load i16, i16* %100, align 2
  %102 = icmp ult i16 %101, 512
  br label %103

103:                                              ; preds = %96, %93, %90
  %104 = phi i1 [ true, %90 ], [ %95, %93 ], [ %102, %96 ]
  %105 = zext i1 %104 to i8
  br label %106

106:                                              ; preds = %103, %86
  %107 = phi i8 [ 0, %86 ], [ %105, %103 ]
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %12, label %109

109:                                              ; preds = %83, %77, %63, %89, %12, %106
  %110 = phi i16* [ %65, %106 ], [ %2, %12 ], [ %65, %89 ], [ %13, %83 ], [ %13, %63 ], [ %13, %77 ]
  ret i16* %110
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6icu_6915Normalizer2Impl24findPreviousCompBoundaryEPKDsS2_a(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16* readnone, i16* readonly, i8 signext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %7 = icmp eq i8 %3, 0
  %8 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %9 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %10 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  br label %12

12:                                               ; preds = %106, %4
  %13 = phi i16* [ %2, %4 ], [ %65, %106 ]
  %14 = icmp eq i16* %13, %1
  br i1 %14, label %109, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i16, i16* %13, i64 -1
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = and i32 %18, 63488
  %20 = icmp eq i32 %19, 55296
  br i1 %20, label %32, label %21

21:                                               ; preds = %15
  %22 = load %struct.UCPTrie*, %struct.UCPTrie** %6, align 8
  %23 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %22, i64 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = lshr i32 %18, 6
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %24, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = and i32 %18, 63
  %31 = add nuw nsw i32 %30, %29
  br label %63

32:                                               ; preds = %15
  %33 = and i32 %18, 1024
  %34 = icmp eq i32 %33, 0
  %35 = icmp eq i16* %16, %1
  %36 = or i1 %35, %34
  br i1 %36, label %58, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds i16, i16* %13, i64 -2
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = and i32 %40, 64512
  %42 = icmp eq i32 %41, 55296
  br i1 %42, label %43, label %58

43:                                               ; preds = %37
  %44 = shl nuw nsw i32 %40, 10
  %45 = add nuw nsw i32 %18, -56613888
  %46 = add nsw i32 %45, %44
  %47 = load %struct.UCPTrie*, %struct.UCPTrie** %6, align 8
  %48 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %47, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = icmp slt i32 %46, %49
  br i1 %50, label %55, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %47, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = add nsw i32 %53, -2
  br label %63

55:                                               ; preds = %43
  %56 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %47, i32 %46) #8
  %57 = load %struct.UCPTrie*, %struct.UCPTrie** %6, align 8
  br label %63

58:                                               ; preds = %32, %37
  %59 = load %struct.UCPTrie*, %struct.UCPTrie** %6, align 8
  %60 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %59, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, -1
  br label %63

63:                                               ; preds = %58, %55, %51, %21
  %64 = phi %struct.UCPTrie* [ %22, %21 ], [ %59, %58 ], [ %57, %55 ], [ %47, %51 ]
  %65 = phi i16* [ %16, %21 ], [ %16, %58 ], [ %38, %55 ], [ %38, %51 ]
  %66 = phi i32 [ %18, %21 ], [ %18, %58 ], [ %46, %55 ], [ %46, %51 ]
  %67 = phi i32 [ %31, %21 ], [ %62, %58 ], [ %56, %55 ], [ %54, %51 ]
  %68 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %64, i64 0, i32 1
  %69 = bitcast %union.UCPTrieData* %68 to i16**
  %70 = load i16*, i16** %69, align 8
  %71 = sext i32 %67 to i64
  %72 = getelementptr inbounds i16, i16* %70, i64 %71
  %73 = load i16, i16* %72, align 2
  %74 = and i16 %73, 1
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %92, label %76

76:                                               ; preds = %63
  %77 = icmp eq i16 %73, 1
  %78 = or i1 %7, %77
  br i1 %78, label %109, label %79

79:                                               ; preds = %76
  %80 = load i16, i16* %8, align 2
  %81 = icmp ugt i16 %80, %73
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  %83 = and i16 %73, 6
  %84 = icmp ult i16 %83, 3
  br i1 %84, label %109, label %92

85:                                               ; preds = %79
  %86 = load i16*, i16** %9, align 8
  %87 = lshr i16 %73, 1
  %88 = zext i16 %87 to i64
  %89 = getelementptr inbounds i16, i16* %86, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = icmp ult i16 %90, 512
  br i1 %91, label %109, label %92

92:                                               ; preds = %82, %85, %63
  %93 = load i16, i16* %10, align 2
  %94 = zext i16 %93 to i32
  %95 = icmp slt i32 %66, %94
  br i1 %95, label %109, label %96

96:                                               ; preds = %92
  %97 = load i16, i16* %5, align 2
  %98 = icmp ugt i16 %97, %73
  br i1 %98, label %109, label %99

99:                                               ; preds = %96
  %100 = load i16, i16* %8, align 2
  %101 = icmp ugt i16 %100, %73
  br i1 %101, label %106, label %102

102:                                              ; preds = %99
  %103 = load i16, i16* %11, align 2
  %104 = icmp ugt i16 %103, %73
  %105 = zext i1 %104 to i8
  br label %106

106:                                              ; preds = %102, %99
  %107 = phi i8 [ 0, %99 ], [ %105, %102 ]
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %12, label %109

109:                                              ; preds = %82, %85, %96, %92, %76, %12, %106
  %110 = phi i16* [ %65, %106 ], [ %1, %12 ], [ %13, %85 ], [ %13, %76 ], [ %65, %92 ], [ %65, %96 ], [ %13, %82 ]
  ret i16* %110
}

declare void @_ZN6icu_6913UnicodeStringC1EPKDsi(%"class.icu_69::UnicodeString"*, i16*, i32) unnamed_addr #1

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSERKS0_(%"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl11composeUTF8EjaPKhS2_PNS_8ByteSinkEPNS_5EditsER10UErrorCode(%"class.icu_69::Normalizer2Impl"*, i32, i8 signext, i8*, i8*, %"class.icu_69::ByteSink"*, %"class.icu_69::Edits"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %9 = alloca i32, align 4
  %10 = bitcast i32* %9 to i8*
  %11 = alloca i32, align 4
  %12 = alloca %"class.icu_69::UnicodeString", align 8
  %13 = alloca %"class.icu_69::ReorderingBuffer", align 8
  %14 = bitcast %"class.icu_69::UnicodeString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 64, i1 false)
  %15 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %12, i64 0, i32 1, i32 0, i32 0
  store i16 2, i16* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 2
  %18 = load i16, i16* %17, align 2
  %19 = icmp ult i16 %18, 128
  br i1 %19, label %20, label %22

20:                                               ; preds = %8
  %21 = trunc i16 %18 to i8
  br label %28

22:                                               ; preds = %8
  %23 = icmp ult i16 %18, 2048
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = lshr i16 %18, 6
  %26 = trunc i16 %25 to i8
  %27 = add nuw nsw i8 %26, -64
  br label %28

28:                                               ; preds = %20, %22, %24
  %29 = phi i8 [ %21, %20 ], [ %27, %24 ], [ -32, %22 ]
  %30 = icmp eq i8* %3, %4
  br i1 %30, label %66, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %33 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 6
  %34 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %35 = icmp eq i8 %2, 0
  %36 = bitcast i32* %11 to i8*
  %37 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %38 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 16
  %39 = icmp eq %"class.icu_69::ByteSink"* %5, null
  %40 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %41 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %42 = ptrtoint i8* %4 to i64
  %43 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %44 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 11
  %45 = bitcast i32* %9 to [4 x i8]*
  %46 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 1
  %47 = icmp eq %"class.icu_69::Edits"* %6, null
  %48 = bitcast %"class.icu_69::ByteSink"* %5 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %49 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 7
  %50 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 9
  %51 = bitcast %"class.icu_69::ReorderingBuffer"* %13 to i8*
  %52 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %13, i64 0, i32 0
  %53 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %13, i64 0, i32 1
  %54 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %13, i64 0, i32 2
  %55 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %13, i64 0, i32 3
  %56 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %13, i64 0, i32 4
  %57 = bitcast i16** %56 to i64*
  %58 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %13, i64 0, i32 5
  %59 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %13, i64 0, i32 6
  %60 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %13, i64 0, i32 2
  %61 = bitcast i16** %60 to i8*
  br label %62

62:                                               ; preds = %31, %1009
  %63 = phi i8 [ undef, %31 ], [ %1010, %1009 ]
  %64 = phi i8* [ %3, %31 ], [ %1011, %1009 ]
  %65 = phi i8* [ %3, %31 ], [ %1012, %1009 ]
  br label %73

66:                                               ; preds = %1009, %201, %28
  %67 = phi i8* [ %3, %28 ], [ %65, %201 ], [ %1012, %1009 ]
  %68 = icmp ne i8* %67, %4
  %69 = icmp ne %"class.icu_69::ByteSink"* %5, null
  %70 = and i1 %69, %68
  br i1 %70, label %71, label %1016

71:                                               ; preds = %66
  %72 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %67, i8* %4, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  br label %1016

73:                                               ; preds = %62, %201
  %74 = phi i8* [ %64, %62 ], [ %202, %201 ]
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = icmp ult i8 %75, %29
  %78 = getelementptr inbounds i8, i8* %74, i64 1
  br i1 %77, label %201, label %79

79:                                               ; preds = %73
  %80 = icmp sgt i8 %75, -1
  br i1 %80, label %189, label %81

81:                                               ; preds = %79
  %82 = icmp eq i8* %78, %4
  br i1 %82, label %183, label %83

83:                                               ; preds = %81
  %84 = icmp ugt i8 %75, -33
  br i1 %84, label %85, label %162

85:                                               ; preds = %83
  %86 = icmp ult i8 %75, -16
  br i1 %86, label %87, label %119

87:                                               ; preds = %85
  %88 = and i32 %76, 15
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = load i8, i8* %78, align 1
  %94 = zext i8 %93 to i32
  %95 = lshr i32 %94, 5
  %96 = shl i32 1, %95
  %97 = and i32 %96, %92
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %183, label %99

99:                                               ; preds = %87
  %100 = getelementptr inbounds i8, i8* %74, i64 2
  %101 = icmp eq i8* %100, %4
  br i1 %101, label %183, label %102

102:                                              ; preds = %99
  %103 = load i8, i8* %100, align 1
  %104 = xor i8 %103, -128
  %105 = icmp ult i8 %104, 64
  br i1 %105, label %106, label %183

106:                                              ; preds = %102
  %107 = zext i8 %104 to i32
  %108 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %109 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %108, i64 0, i32 0
  %110 = load i16*, i16** %109, align 8
  %111 = shl nuw nsw i32 %88, 6
  %112 = and i32 %94, 63
  %113 = or i32 %112, %111
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds i16, i16* %110, i64 %114
  %116 = load i16, i16* %115, align 2
  %117 = zext i16 %116 to i32
  %118 = add nuw nsw i32 %117, %107
  br label %179

119:                                              ; preds = %85
  %120 = add nsw i32 %76, -240
  %121 = icmp slt i32 %120, 5
  br i1 %121, label %122, label %183

122:                                              ; preds = %119
  %123 = load i8, i8* %78, align 1
  %124 = zext i8 %123 to i32
  %125 = lshr i32 %124, 4
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = sext i8 %128 to i32
  %130 = shl i32 1, %120
  %131 = and i32 %130, %129
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %183, label %133

133:                                              ; preds = %122
  %134 = shl nsw i32 %120, 6
  %135 = and i32 %124, 63
  %136 = or i32 %135, %134
  %137 = getelementptr inbounds i8, i8* %74, i64 2
  %138 = icmp eq i8* %137, %4
  br i1 %138, label %183, label %139

139:                                              ; preds = %133
  %140 = load i8, i8* %137, align 1
  %141 = xor i8 %140, -128
  %142 = icmp ult i8 %141, 64
  br i1 %142, label %143, label %183

143:                                              ; preds = %139
  %144 = getelementptr inbounds i8, i8* %74, i64 3
  %145 = icmp eq i8* %144, %4
  br i1 %145, label %183, label %146

146:                                              ; preds = %143
  %147 = load i8, i8* %144, align 1
  %148 = xor i8 %147, -128
  %149 = icmp ult i8 %148, 64
  br i1 %149, label %150, label %183

150:                                              ; preds = %146
  %151 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %152 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %151, i64 0, i32 5
  %153 = load i16, i16* %152, align 4
  %154 = zext i16 %153 to i32
  %155 = icmp slt i32 %136, %154
  br i1 %155, label %160, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %151, i64 0, i32 3
  %158 = load i32, i32* %157, align 4
  %159 = add nsw i32 %158, -2
  br label %179

160:                                              ; preds = %150
  %161 = call i32 @ucptrie_internalSmallU8Index_69(%struct.UCPTrie* %151, i32 %136, i8 zeroext %141, i8 zeroext %148) #8
  br label %179

162:                                              ; preds = %83
  %163 = icmp ugt i8 %75, -63
  br i1 %163, label %164, label %183

164:                                              ; preds = %162
  %165 = load i8, i8* %78, align 1
  %166 = xor i8 %165, -128
  %167 = icmp ult i8 %166, 64
  br i1 %167, label %168, label %183

168:                                              ; preds = %164
  %169 = zext i8 %166 to i32
  %170 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %171 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %170, i64 0, i32 0
  %172 = load i16*, i16** %171, align 8
  %173 = and i32 %76, 31
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds i16, i16* %172, i64 %174
  %176 = load i16, i16* %175, align 2
  %177 = zext i16 %176 to i32
  %178 = add nuw nsw i32 %177, %169
  br label %179

179:                                              ; preds = %156, %160, %106, %168
  %180 = phi i32 [ %118, %106 ], [ %178, %168 ], [ %159, %156 ], [ %161, %160 ]
  %181 = phi i8* [ %100, %106 ], [ %78, %168 ], [ %144, %156 ], [ %144, %160 ]
  %182 = getelementptr inbounds i8, i8* %181, i64 1
  br label %189

183:                                              ; preds = %99, %87, %143, %133, %122, %81, %164, %162, %146, %139, %119, %102
  %184 = phi i8* [ %100, %102 ], [ %4, %99 ], [ %78, %87 ], [ %144, %146 ], [ %4, %143 ], [ %137, %139 ], [ %4, %133 ], [ %78, %122 ], [ %78, %119 ], [ %78, %164 ], [ %78, %162 ], [ %4, %81 ]
  %185 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %186 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %185, i64 0, i32 3
  %187 = load i32, i32* %186, align 4
  %188 = add nsw i32 %187, -1
  br label %189

189:                                              ; preds = %179, %183, %79
  %190 = phi i32 [ %76, %79 ], [ %180, %179 ], [ %188, %183 ]
  %191 = phi i8* [ %78, %79 ], [ %182, %179 ], [ %184, %183 ]
  %192 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %193 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %192, i64 0, i32 1
  %194 = bitcast %union.UCPTrieData* %193 to i16**
  %195 = load i16*, i16** %194, align 8
  %196 = sext i32 %190 to i64
  %197 = getelementptr inbounds i16, i16* %195, i64 %196
  %198 = load i16, i16* %197, align 2
  %199 = load i16, i16* %33, align 2
  %200 = icmp ugt i16 %199, %198
  br i1 %200, label %201, label %204

201:                                              ; preds = %189, %73
  %202 = phi i8* [ %191, %189 ], [ %78, %73 ]
  %203 = icmp eq i8* %202, %4
  br i1 %203, label %66, label %73

204:                                              ; preds = %189
  %205 = ptrtoint i8* %74 to i64
  %206 = load i16, i16* %34, align 2
  %207 = icmp ugt i16 %206, %198
  br i1 %207, label %208, label %553

208:                                              ; preds = %204
  br i1 %39, label %1014, label %209

209:                                              ; preds = %208
  %210 = load i16, i16* %41, align 2
  %211 = icmp ugt i16 %210, %198
  br i1 %211, label %464, label %212

212:                                              ; preds = %209
  %213 = and i16 %198, 1
  %214 = icmp eq i16 %213, 0
  br i1 %214, label %221, label %215

215:                                              ; preds = %212
  %216 = icmp eq i16 %198, 1
  %217 = or i1 %35, %216
  %218 = and i16 %198, 6
  %219 = icmp ult i16 %218, 3
  %220 = or i1 %217, %219
  br i1 %220, label %224, label %221

221:                                              ; preds = %215, %212
  %222 = call signext i8 @_ZNK6icu_6915Normalizer2Impl21hasCompBoundaryBeforeEPKhS2_(%"class.icu_69::Normalizer2Impl"* %0, i8* %191, i8* %4)
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %888, label %224

224:                                              ; preds = %215, %221
  %225 = icmp eq i8* %65, %74
  br i1 %225, label %229, label %226

226:                                              ; preds = %224
  %227 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %65, i8* %74, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %1016, label %229

229:                                              ; preds = %226, %224
  %230 = lshr i16 %198, 3
  %231 = zext i16 %230 to i32
  %232 = load i16, i16* %44, align 4
  %233 = zext i16 %232 to i32
  %234 = sub nsw i32 %231, %233
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  %235 = ptrtoint i8* %191 to i64
  %236 = sub i64 %235, %205
  %237 = trunc i64 %236 to i32
  %238 = icmp eq i32 %237, 1
  store i32 -1431655766, i32* %9, align 4
  br i1 %238, label %239, label %243

239:                                              ; preds = %229
  %240 = load i8, i8* %74, align 1
  %241 = trunc i32 %234 to i8
  %242 = add i8 %240, %241
  store i8 %242, i8* %10, align 4
  br label %457

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %191, i64 -1
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = add nsw i32 %234, %246
  %248 = and i32 %247, -64
  %249 = icmp eq i32 %248, 128
  br i1 %249, label %250, label %367

250:                                              ; preds = %243
  %251 = getelementptr i8, i8* %74, i64 1
  %252 = icmp ugt i8* %244, %251
  %253 = select i1 %252, i8* %244, i8* %251
  %254 = ptrtoint i8* %253 to i64
  %255 = sub i64 %254, %205
  %256 = icmp ult i64 %255, 32
  br i1 %256, label %348, label %257

257:                                              ; preds = %250
  %258 = getelementptr i8, i8* %74, i64 1
  %259 = icmp ugt i8* %244, %258
  %260 = select i1 %259, i8* %244, i8* %258
  %261 = ptrtoint i8* %260 to i64
  %262 = sub i64 %261, %205
  %263 = getelementptr i8, i8* %10, i64 %262
  %264 = icmp ugt i8* %260, %10
  %265 = icmp ult i8* %74, %263
  %266 = and i1 %264, %265
  br i1 %266, label %348, label %267

267:                                              ; preds = %257
  %268 = and i64 %255, -32
  %269 = getelementptr i8, i8* %74, i64 %268
  %270 = add i64 %268, -32
  %271 = lshr exact i64 %270, 5
  %272 = add nuw nsw i64 %271, 1
  %273 = and i64 %272, 3
  %274 = icmp ult i64 %270, 96
  br i1 %274, label %326, label %275

275:                                              ; preds = %267
  %276 = sub nsw i64 %272, %273
  br label %277

277:                                              ; preds = %277, %275
  %278 = phi i64 [ 0, %275 ], [ %323, %277 ]
  %279 = phi i64 [ %276, %275 ], [ %324, %277 ]
  %280 = getelementptr i8, i8* %74, i64 %278
  %281 = bitcast i8* %280 to <16 x i8>*
  %282 = load <16 x i8>, <16 x i8>* %281, align 1, !alias.scope !26
  %283 = getelementptr i8, i8* %280, i64 16
  %284 = bitcast i8* %283 to <16 x i8>*
  %285 = load <16 x i8>, <16 x i8>* %284, align 1, !alias.scope !26
  %286 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 %278
  %287 = bitcast i8* %286 to <16 x i8>*
  store <16 x i8> %282, <16 x i8>* %287, align 4, !alias.scope !29, !noalias !26
  %288 = getelementptr inbounds i8, i8* %286, i64 16
  %289 = bitcast i8* %288 to <16 x i8>*
  store <16 x i8> %285, <16 x i8>* %289, align 4, !alias.scope !29, !noalias !26
  %290 = or i64 %278, 32
  %291 = getelementptr i8, i8* %74, i64 %290
  %292 = bitcast i8* %291 to <16 x i8>*
  %293 = load <16 x i8>, <16 x i8>* %292, align 1, !alias.scope !26
  %294 = getelementptr i8, i8* %291, i64 16
  %295 = bitcast i8* %294 to <16 x i8>*
  %296 = load <16 x i8>, <16 x i8>* %295, align 1, !alias.scope !26
  %297 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 %290
  %298 = bitcast i8* %297 to <16 x i8>*
  store <16 x i8> %293, <16 x i8>* %298, align 4, !alias.scope !29, !noalias !26
  %299 = getelementptr inbounds i8, i8* %297, i64 16
  %300 = bitcast i8* %299 to <16 x i8>*
  store <16 x i8> %296, <16 x i8>* %300, align 4, !alias.scope !29, !noalias !26
  %301 = or i64 %278, 64
  %302 = getelementptr i8, i8* %74, i64 %301
  %303 = bitcast i8* %302 to <16 x i8>*
  %304 = load <16 x i8>, <16 x i8>* %303, align 1, !alias.scope !26
  %305 = getelementptr i8, i8* %302, i64 16
  %306 = bitcast i8* %305 to <16 x i8>*
  %307 = load <16 x i8>, <16 x i8>* %306, align 1, !alias.scope !26
  %308 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 %301
  %309 = bitcast i8* %308 to <16 x i8>*
  store <16 x i8> %304, <16 x i8>* %309, align 4, !alias.scope !29, !noalias !26
  %310 = getelementptr inbounds i8, i8* %308, i64 16
  %311 = bitcast i8* %310 to <16 x i8>*
  store <16 x i8> %307, <16 x i8>* %311, align 4, !alias.scope !29, !noalias !26
  %312 = or i64 %278, 96
  %313 = getelementptr i8, i8* %74, i64 %312
  %314 = bitcast i8* %313 to <16 x i8>*
  %315 = load <16 x i8>, <16 x i8>* %314, align 1, !alias.scope !26
  %316 = getelementptr i8, i8* %313, i64 16
  %317 = bitcast i8* %316 to <16 x i8>*
  %318 = load <16 x i8>, <16 x i8>* %317, align 1, !alias.scope !26
  %319 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 %312
  %320 = bitcast i8* %319 to <16 x i8>*
  store <16 x i8> %315, <16 x i8>* %320, align 4, !alias.scope !29, !noalias !26
  %321 = getelementptr inbounds i8, i8* %319, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  store <16 x i8> %318, <16 x i8>* %322, align 4, !alias.scope !29, !noalias !26
  %323 = add i64 %278, 128
  %324 = add i64 %279, -4
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %326, label %277, !llvm.loop !31

326:                                              ; preds = %277, %267
  %327 = phi i64 [ 0, %267 ], [ %323, %277 ]
  %328 = icmp eq i64 %273, 0
  br i1 %328, label %345, label %329

329:                                              ; preds = %326, %329
  %330 = phi i64 [ %342, %329 ], [ %327, %326 ]
  %331 = phi i64 [ %343, %329 ], [ %273, %326 ]
  %332 = getelementptr i8, i8* %74, i64 %330
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !26
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !26
  %338 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 %330
  %339 = bitcast i8* %338 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %339, align 4, !alias.scope !29, !noalias !26
  %340 = getelementptr inbounds i8, i8* %338, i64 16
  %341 = bitcast i8* %340 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %341, align 4, !alias.scope !29, !noalias !26
  %342 = add i64 %330, 32
  %343 = add i64 %331, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %329, !llvm.loop !32

345:                                              ; preds = %329, %326
  %346 = icmp eq i64 %255, %268
  %347 = add i64 %268, -1
  br i1 %346, label %359, label %348

348:                                              ; preds = %345, %257, %250
  %349 = phi i64 [ 0, %257 ], [ 0, %250 ], [ %268, %345 ]
  %350 = phi i8* [ %74, %257 ], [ %74, %250 ], [ %269, %345 ]
  br label %351

351:                                              ; preds = %348, %351
  %352 = phi i64 [ %356, %351 ], [ %349, %348 ]
  %353 = phi i8* [ %354, %351 ], [ %350, %348 ]
  %354 = getelementptr inbounds i8, i8* %353, i64 1
  %355 = load i8, i8* %353, align 1
  %356 = add nuw i64 %352, 1
  %357 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 %352
  store i8 %355, i8* %357, align 1
  %358 = icmp ult i8* %354, %244
  br i1 %358, label %351, label %359, !llvm.loop !33

359:                                              ; preds = %351, %345
  %360 = phi i64 [ %347, %345 ], [ %352, %351 ]
  %361 = phi i64 [ %268, %345 ], [ %356, %351 ]
  %362 = trunc i64 %360 to i32
  %363 = trunc i32 %247 to i8
  %364 = add nuw nsw i32 %362, 2
  %365 = and i64 %361, 4294967295
  %366 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 %365
  store i8 %363, i8* %366, align 1
  br label %457

367:                                              ; preds = %243
  %368 = load i8, i8* %74, align 1
  switch i64 %236, label %413 [
    i64 1, label %369
    i64 2, label %371
    i64 3, label %379
    i64 4, label %393
  ]

369:                                              ; preds = %367
  %370 = zext i8 %368 to i32
  br label %414

371:                                              ; preds = %367
  %372 = and i8 %368, 31
  %373 = zext i8 %372 to i32
  %374 = shl nuw nsw i32 %373, 6
  %375 = load i8, i8* %78, align 1
  %376 = and i8 %375, 63
  %377 = zext i8 %376 to i32
  %378 = or i32 %374, %377
  br label %414

379:                                              ; preds = %367
  %380 = zext i8 %368 to i32
  %381 = shl nuw nsw i32 %380, 12
  %382 = load i8, i8* %78, align 1
  %383 = and i8 %382, 63
  %384 = zext i8 %383 to i32
  %385 = shl nuw nsw i32 %384, 6
  %386 = getelementptr inbounds i8, i8* %74, i64 2
  %387 = load i8, i8* %386, align 1
  %388 = and i8 %387, 63
  %389 = zext i8 %388 to i32
  %390 = and i32 %381, 61440
  %391 = or i32 %385, %390
  %392 = or i32 %391, %389
  br label %414

393:                                              ; preds = %367
  %394 = and i8 %368, 7
  %395 = zext i8 %394 to i32
  %396 = shl nuw nsw i32 %395, 18
  %397 = load i8, i8* %78, align 1
  %398 = and i8 %397, 63
  %399 = zext i8 %398 to i32
  %400 = shl nuw nsw i32 %399, 12
  %401 = or i32 %400, %396
  %402 = getelementptr inbounds i8, i8* %74, i64 2
  %403 = load i8, i8* %402, align 1
  %404 = and i8 %403, 63
  %405 = zext i8 %404 to i32
  %406 = shl nuw nsw i32 %405, 6
  %407 = or i32 %401, %406
  %408 = getelementptr inbounds i8, i8* %74, i64 3
  %409 = load i8, i8* %408, align 1
  %410 = and i8 %409, 63
  %411 = zext i8 %410 to i32
  %412 = or i32 %407, %411
  br label %414

413:                                              ; preds = %367
  call void @abort() #9
  unreachable

414:                                              ; preds = %393, %379, %371, %369
  %415 = phi i32 [ %412, %393 ], [ %392, %379 ], [ %378, %371 ], [ %370, %369 ]
  %416 = add nsw i32 %415, %234
  %417 = icmp ult i32 %416, 128
  br i1 %417, label %418, label %420

418:                                              ; preds = %414
  %419 = trunc i32 %416 to i8
  store i8 %419, i8* %10, align 4
  br label %457

420:                                              ; preds = %414
  %421 = icmp ult i32 %416, 2048
  br i1 %421, label %422, label %426

422:                                              ; preds = %420
  %423 = lshr i32 %416, 6
  %424 = trunc i32 %423 to i8
  %425 = or i8 %424, -64
  store i8 %425, i8* %10, align 4
  br label %449

426:                                              ; preds = %420
  %427 = icmp ult i32 %416, 65536
  br i1 %427, label %428, label %432

428:                                              ; preds = %426
  %429 = lshr i32 %416, 12
  %430 = trunc i32 %429 to i8
  %431 = or i8 %430, -32
  store i8 %431, i8* %10, align 4
  br label %440

432:                                              ; preds = %426
  %433 = lshr i32 %416, 18
  %434 = trunc i32 %433 to i8
  %435 = or i8 %434, -16
  store i8 %435, i8* %10, align 4
  %436 = lshr i32 %416, 12
  %437 = trunc i32 %436 to i8
  %438 = and i8 %437, 63
  %439 = or i8 %438, -128
  store i8 %439, i8* %46, align 1
  br label %440

440:                                              ; preds = %432, %428
  %441 = phi i32 [ 1, %428 ], [ 2, %432 ]
  %442 = lshr i32 %416, 6
  %443 = trunc i32 %442 to i8
  %444 = and i8 %443, 63
  %445 = or i8 %444, -128
  %446 = add nuw nsw i32 %441, 1
  %447 = zext i32 %441 to i64
  %448 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 %447
  store i8 %445, i8* %448, align 1
  br label %449

449:                                              ; preds = %440, %422
  %450 = phi i32 [ 1, %422 ], [ %446, %440 ]
  %451 = trunc i32 %416 to i8
  %452 = and i8 %451, 63
  %453 = or i8 %452, -128
  %454 = add nuw nsw i32 %450, 1
  %455 = sext i32 %450 to i64
  %456 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 0, i64 %455
  store i8 %453, i8* %456, align 1
  br label %457

457:                                              ; preds = %449, %418, %359, %239
  %458 = phi i32 [ 1, %239 ], [ %364, %359 ], [ 1, %418 ], [ %454, %449 ]
  br i1 %47, label %460, label %459

459:                                              ; preds = %457
  call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %6, i32 %237, i32 %458) #8
  br label %460

460:                                              ; preds = %457, %459
  %461 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %48, align 8
  %462 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %461, i64 2
  %463 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %462, align 8
  call void %463(%"class.icu_69::ByteSink"* nonnull %5, i8* nonnull %10, i32 %458) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  br label %1009

464:                                              ; preds = %209
  %465 = load i16, i16* %49, align 4
  %466 = icmp ult i16 %198, %465
  br i1 %466, label %467, label %499

467:                                              ; preds = %464
  %468 = and i16 %198, 1
  %469 = icmp eq i16 %468, 0
  br i1 %469, label %480, label %470

470:                                              ; preds = %467
  %471 = icmp eq i16 %198, 1
  %472 = or i1 %35, %471
  br i1 %472, label %483, label %473

473:                                              ; preds = %470
  %474 = load i16*, i16** %43, align 8
  %475 = lshr i16 %198, 1
  %476 = zext i16 %475 to i64
  %477 = getelementptr inbounds i16, i16* %474, i64 %476
  %478 = load i16, i16* %477, align 2
  %479 = icmp ult i16 %478, 512
  br i1 %479, label %483, label %480

480:                                              ; preds = %473, %467
  %481 = call signext i8 @_ZNK6icu_6915Normalizer2Impl21hasCompBoundaryBeforeEPKhS2_(%"class.icu_69::Normalizer2Impl"* %0, i8* %191, i8* %4)
  %482 = icmp eq i8 %481, 0
  br i1 %482, label %888, label %483

483:                                              ; preds = %473, %470, %480
  %484 = icmp eq i8* %65, %74
  br i1 %484, label %488, label %485

485:                                              ; preds = %483
  %486 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %65, i8* %74, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  %487 = icmp eq i8 %486, 0
  br i1 %487, label %1016, label %488

488:                                              ; preds = %485, %483
  %489 = load i16*, i16** %43, align 8
  %490 = lshr i16 %198, 1
  %491 = zext i16 %490 to i64
  %492 = getelementptr inbounds i16, i16* %489, i64 %491
  %493 = getelementptr inbounds i16, i16* %492, i64 1
  %494 = load i16, i16* %492, align 2
  %495 = and i16 %494, 31
  %496 = zext i16 %495 to i32
  %497 = call signext i8 @_ZN6icu_6912ByteSinkUtil12appendChangeEPKhS2_PKDsiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i8* %74, i8* %191, i16* %493, i32 %496, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  %498 = icmp eq i8 %497, 0
  br i1 %498, label %1016, label %1009

499:                                              ; preds = %464
  %500 = load i16, i16* %50, align 8
  %501 = icmp ult i16 %198, %500
  br i1 %501, label %888, label %502

502:                                              ; preds = %499
  %503 = call signext i8 @_ZNK6icu_6915Normalizer2Impl21hasCompBoundaryBeforeEPKhS2_(%"class.icu_69::Normalizer2Impl"* %0, i8* %191, i8* %4)
  %504 = icmp ne i8 %503, 0
  %505 = icmp eq i8* %65, %74
  %506 = or i1 %505, %504
  br i1 %506, label %543, label %507

507:                                              ; preds = %502
  %508 = getelementptr inbounds i8, i8* %74, i64 -1
  %509 = load i8, i8* %508, align 1
  %510 = zext i8 %509 to i32
  %511 = icmp sgt i8 %509, -1
  br i1 %511, label %516, label %512

512:                                              ; preds = %507
  %513 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %514 = call i32 @ucptrie_internalU8PrevIndex_69(%struct.UCPTrie* %513, i32 %510, i8* %65, i8* %508) #8
  %515 = ashr i32 %514, 3
  br label %516

516:                                              ; preds = %512, %507
  %517 = phi i32 [ %510, %507 ], [ %515, %512 ]
  %518 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %519 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %518, i64 0, i32 1
  %520 = bitcast %union.UCPTrieData* %519 to i16**
  %521 = load i16*, i16** %520, align 8
  %522 = sext i32 %517 to i64
  %523 = getelementptr inbounds i16, i16* %521, i64 %522
  %524 = load i16, i16* %523, align 2
  %525 = and i16 %524, 1
  %526 = icmp eq i16 %525, 0
  br i1 %526, label %888, label %527

527:                                              ; preds = %516
  %528 = icmp eq i16 %524, 1
  %529 = or i1 %35, %528
  br i1 %529, label %543, label %530

530:                                              ; preds = %527
  %531 = load i16, i16* %41, align 2
  %532 = icmp ugt i16 %531, %524
  br i1 %532, label %536, label %533

533:                                              ; preds = %530
  %534 = and i16 %524, 6
  %535 = icmp ult i16 %534, 3
  br i1 %535, label %543, label %888

536:                                              ; preds = %530
  %537 = load i16*, i16** %43, align 8
  %538 = lshr i16 %524, 1
  %539 = zext i16 %538 to i64
  %540 = getelementptr inbounds i16, i16* %537, i64 %539
  %541 = load i16, i16* %540, align 2
  %542 = icmp ult i16 %541, 512
  br i1 %542, label %543, label %888

543:                                              ; preds = %533, %536, %502, %527
  br i1 %505, label %547, label %544

544:                                              ; preds = %543
  %545 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %65, i8* %74, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  %546 = icmp eq i8 %545, 0
  br i1 %546, label %1016, label %547

547:                                              ; preds = %544, %543
  br i1 %47, label %1009, label %548

548:                                              ; preds = %547
  %549 = ptrtoint i8* %191 to i64
  %550 = ptrtoint i8* %74 to i64
  %551 = sub i64 %549, %550
  %552 = trunc i64 %551 to i32
  call void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"* nonnull %6, i32 %552, i32 0) #8
  br label %1009

553:                                              ; preds = %204
  %554 = icmp eq i16 %198, -512
  br i1 %554, label %555, label %691

555:                                              ; preds = %553
  %556 = ptrtoint i8* %74 to i64
  %557 = ptrtoint i8* %65 to i64
  %558 = sub i64 %556, %557
  %559 = icmp sgt i64 %558, 2
  br i1 %559, label %560, label %588

560:                                              ; preds = %555
  %561 = getelementptr inbounds i8, i8* %74, i64 -3
  %562 = load i8, i8* %561, align 1
  %563 = add i8 %562, 31
  %564 = icmp ult i8 %563, 13
  br i1 %564, label %565, label %588

565:                                              ; preds = %560
  %566 = getelementptr inbounds i8, i8* %74, i64 -2
  %567 = load i8, i8* %566, align 1
  %568 = xor i8 %567, -128
  %569 = zext i8 %568 to i32
  %570 = icmp ult i8 %568, 64
  br i1 %570, label %571, label %588

571:                                              ; preds = %565
  %572 = getelementptr inbounds i8, i8* %74, i64 -1
  %573 = load i8, i8* %572, align 1
  %574 = xor i8 %573, -128
  %575 = zext i8 %574 to i32
  %576 = icmp ult i8 %574, 64
  br i1 %576, label %577, label %588

577:                                              ; preds = %571
  %578 = icmp ult i8 %562, -19
  %579 = icmp ult i8 %568, 32
  %580 = or i1 %578, %579
  br i1 %580, label %581, label %588

581:                                              ; preds = %577
  %582 = and i8 %562, 15
  %583 = zext i8 %582 to i32
  %584 = shl nuw nsw i32 %583, 12
  %585 = shl nuw nsw i32 %569, 6
  %586 = or i32 %585, %584
  %587 = or i32 %586, %575
  br label %588

588:                                              ; preds = %555, %560, %565, %571, %577, %581
  %589 = phi i32 [ %587, %581 ], [ -1, %555 ], [ -1, %577 ], [ -1, %571 ], [ -1, %565 ], [ -1, %560 ]
  %590 = load i8, i8* %78, align 1
  %591 = icmp eq i8 %590, -123
  br i1 %591, label %592, label %649

592:                                              ; preds = %588
  %593 = add nsw i32 %589, -4352
  %594 = icmp ult i32 %593, 19
  br i1 %594, label %595, label %888

595:                                              ; preds = %592
  br i1 %39, label %1014, label %596

596:                                              ; preds = %595
  %597 = ptrtoint i8* %191 to i64
  %598 = sub i64 %42, %597
  %599 = icmp sgt i64 %598, 2
  br i1 %599, label %600, label %624

600:                                              ; preds = %596
  %601 = load i8, i8* %191, align 1
  %602 = icmp eq i8 %601, -31
  br i1 %602, label %603, label %624

603:                                              ; preds = %600
  %604 = getelementptr inbounds i8, i8* %191, i64 1
  %605 = load i8, i8* %604, align 1
  switch i8 %605, label %624 [
    i8 -122, label %606
    i8 -121, label %613
  ]

606:                                              ; preds = %603
  %607 = getelementptr inbounds i8, i8* %191, i64 2
  %608 = load i8, i8* %607, align 1
  %609 = zext i8 %608 to i32
  %610 = add i8 %608, 88
  %611 = icmp ugt i8 %610, 23
  %612 = add nsw i32 %609, -167
  br i1 %611, label %624, label %619

613:                                              ; preds = %603
  %614 = getelementptr inbounds i8, i8* %191, i64 2
  %615 = load i8, i8* %614, align 1
  %616 = icmp sgt i8 %615, -126
  %617 = zext i8 %615 to i32
  %618 = add nsw i32 %617, -103
  br i1 %616, label %624, label %619

619:                                              ; preds = %606, %613
  %620 = phi i32 [ %612, %606 ], [ %618, %613 ]
  %621 = icmp sgt i32 %620, -1
  br i1 %621, label %622, label %624

622:                                              ; preds = %619
  %623 = getelementptr inbounds i8, i8* %191, i64 3
  br label %627

624:                                              ; preds = %613, %606, %603, %600, %596, %619
  %625 = call signext i8 @_ZNK6icu_6915Normalizer2Impl21hasCompBoundaryBeforeEPKhS2_(%"class.icu_69::Normalizer2Impl"* %0, i8* %191, i8* %4)
  %626 = icmp eq i8 %625, 0
  br i1 %626, label %888, label %627

627:                                              ; preds = %622, %624
  %628 = phi i8* [ %191, %624 ], [ %623, %622 ]
  %629 = phi i32 [ 0, %624 ], [ %620, %622 ]
  %630 = mul nsw i32 %593, 21
  %631 = getelementptr inbounds i8, i8* %74, i64 2
  %632 = load i8, i8* %631, align 1
  %633 = zext i8 %632 to i32
  %634 = add nsw i32 %630, -161
  %635 = add nsw i32 %634, %633
  %636 = mul nsw i32 %635, 28
  %637 = add nuw nsw i32 %629, 44032
  %638 = add nsw i32 %637, %636
  %639 = getelementptr inbounds i8, i8* %74, i64 -3
  %640 = icmp eq i8* %65, %639
  br i1 %640, label %644, label %641

641:                                              ; preds = %627
  %642 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %65, i8* %639, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  %643 = icmp eq i8 %642, 0
  br i1 %643, label %1016, label %644

644:                                              ; preds = %641, %627
  %645 = ptrtoint i8* %628 to i64
  %646 = ptrtoint i8* %639 to i64
  %647 = sub i64 %645, %646
  %648 = trunc i64 %647 to i32
  call void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32 %648, i32 %638, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, %"class.icu_69::Edits"* %6) #8
  br label %1009

649:                                              ; preds = %588
  %650 = add nsw i32 %589, -44032
  %651 = icmp ult i32 %650, 11172
  br i1 %651, label %652, label %888

652:                                              ; preds = %649
  %653 = trunc i32 %650 to i16
  %654 = urem i16 %653, 28
  %655 = icmp eq i16 %654, 0
  br i1 %655, label %656, label %888

656:                                              ; preds = %652
  br i1 %39, label %1014, label %657

657:                                              ; preds = %656
  %658 = ptrtoint i8* %191 to i64
  %659 = sub i64 %658, %556
  %660 = icmp sgt i64 %659, 2
  br i1 %660, label %661, label %678

661:                                              ; preds = %657
  %662 = load i8, i8* %74, align 1
  %663 = icmp eq i8 %662, -31
  br i1 %663, label %664, label %678

664:                                              ; preds = %661
  switch i8 %590, label %678 [
    i8 -122, label %665
    i8 -121, label %672
  ]

665:                                              ; preds = %664
  %666 = getelementptr inbounds i8, i8* %74, i64 2
  %667 = load i8, i8* %666, align 1
  %668 = zext i8 %667 to i32
  %669 = add i8 %667, 88
  %670 = icmp ugt i8 %669, 23
  %671 = add nsw i32 %668, -167
  br i1 %670, label %678, label %679

672:                                              ; preds = %664
  %673 = getelementptr inbounds i8, i8* %74, i64 2
  %674 = load i8, i8* %673, align 1
  %675 = icmp sgt i8 %674, -126
  %676 = zext i8 %674 to i32
  %677 = add nsw i32 %676, -103
  br i1 %675, label %678, label %679

678:                                              ; preds = %672, %665, %664, %661, %657
  br label %679

679:                                              ; preds = %665, %672, %678
  %680 = phi i32 [ -1, %678 ], [ %671, %665 ], [ %677, %672 ]
  %681 = add nsw i32 %680, %589
  %682 = getelementptr inbounds i8, i8* %74, i64 -3
  %683 = icmp eq i8* %65, %682
  br i1 %683, label %687, label %684

684:                                              ; preds = %679
  %685 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %65, i8* %682, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  %686 = icmp eq i8 %685, 0
  br i1 %686, label %1016, label %687

687:                                              ; preds = %684, %679
  %688 = ptrtoint i8* %682 to i64
  %689 = sub i64 %658, %688
  %690 = trunc i64 %689 to i32
  call void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32 %690, i32 %681, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, %"class.icu_69::Edits"* %6) #8
  br label %1009

691:                                              ; preds = %553
  %692 = icmp ugt i16 %198, -512
  br i1 %692, label %693, label %888

693:                                              ; preds = %691
  %694 = lshr i16 %198, 1
  %695 = trunc i16 %694 to i8
  %696 = icmp eq i8* %65, %74
  %697 = or i1 %35, %696
  br i1 %697, label %737, label %698

698:                                              ; preds = %693
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #8
  %699 = ptrtoint i8* %74 to i64
  %700 = ptrtoint i8* %65 to i64
  %701 = sub i64 %699, %700
  %702 = trunc i64 %701 to i32
  %703 = add nsw i32 %702, -1
  store i32 %703, i32* %11, align 4
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds i8, i8* %65, i64 %704
  %706 = load i8, i8* %705, align 1
  %707 = zext i8 %706 to i32
  %708 = icmp sgt i8 %706, -1
  br i1 %708, label %711, label %709

709:                                              ; preds = %698
  %710 = call i32 @utf8_prevCharSafeBody_69(i8* %65, i32 0, i32* nonnull %11, i32 %707, i8 signext -1) #8
  br label %711

711:                                              ; preds = %709, %698
  %712 = phi i32 [ %707, %698 ], [ %710, %709 ]
  %713 = load i16, i16* %37, align 8
  %714 = zext i16 %713 to i32
  %715 = icmp slt i32 %712, %714
  br i1 %715, label %732, label %716

716:                                              ; preds = %711
  %717 = icmp slt i32 %712, 65536
  br i1 %717, label %718, label %733

718:                                              ; preds = %716
  %719 = load i8*, i8** %38, align 8
  %720 = ashr i32 %712, 8
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds i8, i8* %719, i64 %721
  %723 = load i8, i8* %722, align 1
  %724 = icmp eq i8 %723, 0
  br i1 %724, label %732, label %725

725:                                              ; preds = %718
  %726 = zext i8 %723 to i32
  %727 = lshr i32 %712, 5
  %728 = and i32 %727, 7
  %729 = shl i32 1, %728
  %730 = and i32 %729, %726
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %732, label %733

732:                                              ; preds = %711, %725, %718
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #8
  br label %737

733:                                              ; preds = %716, %725
  %734 = call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %0, i32 %712) #8
  %735 = trunc i16 %734 to i8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #8
  %736 = icmp ugt i8 %735, %695
  br i1 %736, label %738, label %737

737:                                              ; preds = %732, %693, %733
  br label %739

738:                                              ; preds = %733
  br i1 %39, label %1014, label %888

739:                                              ; preds = %737, %870
  %740 = phi i8* [ %860, %870 ], [ %191, %737 ]
  %741 = phi i8 [ %872, %870 ], [ %695, %737 ]
  %742 = icmp eq i8* %740, %4
  br i1 %742, label %743, label %746

743:                                              ; preds = %739
  br i1 %39, label %1016, label %744

744:                                              ; preds = %743
  %745 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %65, i8* %4, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  br label %1016

746:                                              ; preds = %739
  %747 = getelementptr inbounds i8, i8* %740, i64 1
  %748 = load i8, i8* %740, align 1
  %749 = zext i8 %748 to i32
  %750 = icmp sgt i8 %748, -1
  br i1 %750, label %859, label %751

751:                                              ; preds = %746
  %752 = icmp eq i8* %747, %4
  br i1 %752, label %853, label %753

753:                                              ; preds = %751
  %754 = icmp ugt i8 %748, -33
  br i1 %754, label %755, label %832

755:                                              ; preds = %753
  %756 = icmp ult i8 %748, -16
  br i1 %756, label %757, label %789

757:                                              ; preds = %755
  %758 = and i32 %749, 15
  %759 = zext i32 %758 to i64
  %760 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %759
  %761 = load i8, i8* %760, align 1
  %762 = sext i8 %761 to i32
  %763 = load i8, i8* %747, align 1
  %764 = zext i8 %763 to i32
  %765 = lshr i32 %764, 5
  %766 = shl i32 1, %765
  %767 = and i32 %766, %762
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %853, label %769

769:                                              ; preds = %757
  %770 = getelementptr inbounds i8, i8* %740, i64 2
  %771 = icmp eq i8* %770, %4
  br i1 %771, label %853, label %772

772:                                              ; preds = %769
  %773 = load i8, i8* %770, align 1
  %774 = xor i8 %773, -128
  %775 = icmp ult i8 %774, 64
  br i1 %775, label %776, label %853

776:                                              ; preds = %772
  %777 = zext i8 %774 to i32
  %778 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %779 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %778, i64 0, i32 0
  %780 = load i16*, i16** %779, align 8
  %781 = shl nuw nsw i32 %758, 6
  %782 = and i32 %764, 63
  %783 = or i32 %782, %781
  %784 = zext i32 %783 to i64
  %785 = getelementptr inbounds i16, i16* %780, i64 %784
  %786 = load i16, i16* %785, align 2
  %787 = zext i16 %786 to i32
  %788 = add nuw nsw i32 %787, %777
  br label %849

789:                                              ; preds = %755
  %790 = add nsw i32 %749, -240
  %791 = icmp slt i32 %790, 5
  br i1 %791, label %792, label %853

792:                                              ; preds = %789
  %793 = load i8, i8* %747, align 1
  %794 = zext i8 %793 to i32
  %795 = lshr i32 %794, 4
  %796 = zext i32 %795 to i64
  %797 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %796
  %798 = load i8, i8* %797, align 1
  %799 = sext i8 %798 to i32
  %800 = shl i32 1, %790
  %801 = and i32 %800, %799
  %802 = icmp eq i32 %801, 0
  br i1 %802, label %853, label %803

803:                                              ; preds = %792
  %804 = shl nsw i32 %790, 6
  %805 = and i32 %794, 63
  %806 = or i32 %805, %804
  %807 = getelementptr inbounds i8, i8* %740, i64 2
  %808 = icmp eq i8* %807, %4
  br i1 %808, label %853, label %809

809:                                              ; preds = %803
  %810 = load i8, i8* %807, align 1
  %811 = xor i8 %810, -128
  %812 = icmp ult i8 %811, 64
  br i1 %812, label %813, label %853

813:                                              ; preds = %809
  %814 = getelementptr inbounds i8, i8* %740, i64 3
  %815 = icmp eq i8* %814, %4
  br i1 %815, label %853, label %816

816:                                              ; preds = %813
  %817 = load i8, i8* %814, align 1
  %818 = xor i8 %817, -128
  %819 = icmp ult i8 %818, 64
  br i1 %819, label %820, label %853

820:                                              ; preds = %816
  %821 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %822 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %821, i64 0, i32 5
  %823 = load i16, i16* %822, align 4
  %824 = zext i16 %823 to i32
  %825 = icmp slt i32 %806, %824
  br i1 %825, label %830, label %826

826:                                              ; preds = %820
  %827 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %821, i64 0, i32 3
  %828 = load i32, i32* %827, align 4
  %829 = add nsw i32 %828, -2
  br label %849

830:                                              ; preds = %820
  %831 = call i32 @ucptrie_internalSmallU8Index_69(%struct.UCPTrie* %821, i32 %806, i8 zeroext %811, i8 zeroext %818) #8
  br label %849

832:                                              ; preds = %753
  %833 = icmp ugt i8 %748, -63
  br i1 %833, label %834, label %853

834:                                              ; preds = %832
  %835 = load i8, i8* %747, align 1
  %836 = xor i8 %835, -128
  %837 = icmp ult i8 %836, 64
  br i1 %837, label %838, label %853

838:                                              ; preds = %834
  %839 = zext i8 %836 to i32
  %840 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %841 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %840, i64 0, i32 0
  %842 = load i16*, i16** %841, align 8
  %843 = and i32 %749, 31
  %844 = zext i32 %843 to i64
  %845 = getelementptr inbounds i16, i16* %842, i64 %844
  %846 = load i16, i16* %845, align 2
  %847 = zext i16 %846 to i32
  %848 = add nuw nsw i32 %847, %839
  br label %849

849:                                              ; preds = %826, %830, %776, %838
  %850 = phi i8* [ %770, %776 ], [ %747, %838 ], [ %814, %830 ], [ %814, %826 ]
  %851 = phi i32 [ %788, %776 ], [ %848, %838 ], [ %831, %830 ], [ %829, %826 ]
  %852 = getelementptr inbounds i8, i8* %850, i64 1
  br label %859

853:                                              ; preds = %769, %757, %813, %803, %792, %751, %834, %832, %816, %809, %789, %772
  %854 = phi i8* [ %770, %772 ], [ %4, %769 ], [ %747, %757 ], [ %814, %816 ], [ %4, %813 ], [ %807, %809 ], [ %4, %803 ], [ %747, %792 ], [ %747, %789 ], [ %747, %834 ], [ %747, %832 ], [ %4, %751 ]
  %855 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %856 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %855, i64 0, i32 3
  %857 = load i32, i32* %856, align 4
  %858 = add nsw i32 %857, -1
  br label %859

859:                                              ; preds = %849, %853, %746
  %860 = phi i8* [ %747, %746 ], [ %852, %849 ], [ %854, %853 ]
  %861 = phi i32 [ %749, %746 ], [ %851, %849 ], [ %858, %853 ]
  %862 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %863 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %862, i64 0, i32 1
  %864 = bitcast %union.UCPTrieData* %863 to i16**
  %865 = load i16*, i16** %864, align 8
  %866 = sext i32 %861 to i64
  %867 = getelementptr inbounds i16, i16* %865, i64 %866
  %868 = load i16, i16* %867, align 2
  %869 = icmp ugt i16 %868, -511
  br i1 %869, label %870, label %875

870:                                              ; preds = %859
  %871 = lshr i16 %868, 1
  %872 = trunc i16 %871 to i8
  %873 = icmp ugt i8 %741, %872
  br i1 %873, label %874, label %739

874:                                              ; preds = %870
  br i1 %39, label %1014, label %875

875:                                              ; preds = %859, %874
  %876 = load i16, i16* %40, align 2
  %877 = icmp ugt i16 %876, %868
  br i1 %877, label %884, label %878

878:                                              ; preds = %875
  %879 = load i16, i16* %41, align 2
  %880 = icmp ugt i16 %879, %868
  br i1 %880, label %888, label %881

881:                                              ; preds = %878
  %882 = load i16, i16* %34, align 2
  %883 = icmp ugt i16 %882, %868
  br i1 %883, label %884, label %888

884:                                              ; preds = %881, %875
  %885 = load i16, i16* %33, align 2
  %886 = icmp ugt i16 %885, %868
  %887 = select i1 %886, i8* %860, i8* %740
  br label %1009

888:                                              ; preds = %533, %536, %881, %652, %878, %649, %592, %624, %516, %738, %221, %480, %499, %691
  %889 = phi i8* [ %191, %691 ], [ %191, %221 ], [ %191, %480 ], [ %191, %536 ], [ %191, %499 ], [ %191, %652 ], [ %191, %738 ], [ %740, %881 ], [ %191, %516 ], [ %191, %624 ], [ %191, %592 ], [ %191, %649 ], [ %740, %878 ], [ %191, %533 ]
  %890 = icmp eq i8* %65, %74
  br i1 %890, label %942, label %891

891:                                              ; preds = %888
  %892 = load i16, i16* %40, align 2
  %893 = icmp ugt i16 %892, %198
  br i1 %893, label %942, label %894

894:                                              ; preds = %891
  %895 = load i16, i16* %41, align 2
  %896 = icmp ugt i16 %895, %198
  br i1 %896, label %900, label %897

897:                                              ; preds = %894
  %898 = load i16, i16* %34, align 2
  %899 = icmp ugt i16 %898, %198
  br i1 %899, label %942, label %900

900:                                              ; preds = %897, %894
  %901 = getelementptr inbounds i8, i8* %74, i64 -1
  %902 = load i8, i8* %901, align 1
  %903 = zext i8 %902 to i32
  %904 = icmp sgt i8 %902, -1
  br i1 %904, label %913, label %905

905:                                              ; preds = %900
  %906 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %907 = call i32 @ucptrie_internalU8PrevIndex_69(%struct.UCPTrie* %906, i32 %903, i8* %65, i8* %901) #8
  %908 = and i32 %907, 7
  %909 = zext i32 %908 to i64
  %910 = sub nsw i64 0, %909
  %911 = getelementptr inbounds i8, i8* %901, i64 %910
  %912 = ashr i32 %907, 3
  br label %913

913:                                              ; preds = %905, %900
  %914 = phi i8* [ %901, %900 ], [ %911, %905 ]
  %915 = phi i32 [ %903, %900 ], [ %912, %905 ]
  %916 = load %struct.UCPTrie*, %struct.UCPTrie** %32, align 8
  %917 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %916, i64 0, i32 1
  %918 = bitcast %union.UCPTrieData* %917 to i16**
  %919 = load i16*, i16** %918, align 8
  %920 = sext i32 %915 to i64
  %921 = getelementptr inbounds i16, i16* %919, i64 %920
  %922 = load i16, i16* %921, align 2
  %923 = and i16 %922, 1
  %924 = icmp eq i16 %923, 0
  br i1 %924, label %941, label %925

925:                                              ; preds = %913
  %926 = icmp eq i16 %922, 1
  %927 = or i1 %35, %926
  br i1 %927, label %942, label %928

928:                                              ; preds = %925
  %929 = load i16, i16* %41, align 2
  %930 = icmp ugt i16 %929, %922
  br i1 %930, label %934, label %931

931:                                              ; preds = %928
  %932 = and i16 %922, 6
  %933 = icmp ult i16 %932, 3
  br i1 %933, label %942, label %941

934:                                              ; preds = %928
  %935 = load i16*, i16** %43, align 8
  %936 = lshr i16 %922, 1
  %937 = zext i16 %936 to i64
  %938 = getelementptr inbounds i16, i16* %935, i64 %937
  %939 = load i16, i16* %938, align 2
  %940 = icmp ult i16 %939, 512
  br i1 %940, label %942, label %941

941:                                              ; preds = %931, %934, %913
  br label %942

942:                                              ; preds = %931, %934, %897, %925, %891, %941, %888
  %943 = phi i8* [ %74, %897 ], [ %65, %888 ], [ %914, %941 ], [ %74, %934 ], [ %74, %891 ], [ %74, %925 ], [ %74, %931 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %51) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 48, i1 false)
  store %"class.icu_69::Normalizer2Impl"* %0, %"class.icu_69::Normalizer2Impl"** %52, align 8
  store %"class.icu_69::UnicodeString"* %12, %"class.icu_69::UnicodeString"** %53, align 8
  %944 = call i16* @_ZN6icu_6913UnicodeString9getBufferEi(%"class.icu_69::UnicodeString"* nonnull %12, i32 8) #8
  store i16* %944, i16** %54, align 8
  store i16* %944, i16** %55, align 8
  %945 = ptrtoint i16* %944 to i64
  store i64 %945, i64* %57, align 8
  %946 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %53, align 8
  %947 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %946, i64 0, i32 1, i32 0, i32 0
  %948 = load i16, i16* %947, align 8
  %949 = and i16 %948, 2
  %950 = icmp eq i16 %949, 0
  br i1 %950, label %951, label %954

951:                                              ; preds = %942
  %952 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %946, i64 0, i32 1, i32 0, i32 2
  %953 = load i32, i32* %952, align 8
  br label %954

954:                                              ; preds = %951, %942
  %955 = phi i32 [ %953, %951 ], [ 27, %942 ]
  store i32 %955, i32* %58, align 8
  store i8 0, i8* %59, align 4
  %956 = icmp ne i16* %944, null
  %957 = load i32, i32* %7, align 4
  %958 = icmp sgt i32 %957, 0
  %959 = or i1 %956, %958
  br i1 %959, label %961, label %960

960:                                              ; preds = %954
  store i32 7, i32* %7, align 4
  br label %994

961:                                              ; preds = %954
  %962 = icmp slt i32 %957, 1
  br i1 %962, label %963, label %994

963:                                              ; preds = %961
  %964 = call i8* @_ZNK6icu_6915Normalizer2Impl14decomposeShortEPKhS2_NS0_6StopAtEaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i8* %943, i8* %889, i32 0, i8 signext %2, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %13, i32* dereferenceable(4) %7)
  %965 = call i8* @_ZNK6icu_6915Normalizer2Impl14decomposeShortEPKhS2_NS0_6StopAtEaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i8* %889, i8* %4, i32 2, i8 signext %2, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %13, i32* dereferenceable(4) %7)
  %966 = load i32, i32* %7, align 4
  %967 = icmp slt i32 %966, 1
  br i1 %967, label %968, label %994

968:                                              ; preds = %963
  %969 = ptrtoint i8* %965 to i64
  %970 = ptrtoint i8* %943 to i64
  %971 = sub i64 %969, %970
  %972 = icmp sgt i64 %971, 2147483647
  br i1 %972, label %973, label %974

973:                                              ; preds = %968
  store i32 8, i32* %7, align 4
  br label %994

974:                                              ; preds = %968
  call void @_ZNK6icu_6915Normalizer2Impl9recomposeERNS_16ReorderingBufferEia(%"class.icu_69::Normalizer2Impl"* %0, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %13, i32 0, i8 signext %2)
  %975 = call signext i8 @_ZNK6icu_6916ReorderingBuffer6equalsEPKhS2_(%"class.icu_69::ReorderingBuffer"* nonnull %13, i8* %943, i8* %965)
  %976 = icmp eq i8 %975, 0
  br i1 %976, label %977, label %992

977:                                              ; preds = %974
  br i1 %39, label %994, label %978

978:                                              ; preds = %977
  %979 = icmp eq i8* %65, %943
  br i1 %979, label %983, label %980

980:                                              ; preds = %978
  %981 = call signext i8 @_ZN6icu_6912ByteSinkUtil15appendUnchangedEPKhS2_RNS_8ByteSinkEjPNS_5EditsER10UErrorCode(i8* %65, i8* %943, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, i32 %1, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  %982 = icmp eq i8 %981, 0
  br i1 %982, label %994, label %983

983:                                              ; preds = %980, %978
  %984 = load i16*, i16** %54, align 8
  %985 = load i64, i64* %57, align 8
  %986 = ptrtoint i16* %984 to i64
  %987 = sub i64 %985, %986
  %988 = lshr exact i64 %987, 1
  %989 = trunc i64 %988 to i32
  %990 = call signext i8 @_ZN6icu_6912ByteSinkUtil12appendChangeEPKhS2_PKDsiRNS_8ByteSinkEPNS_5EditsER10UErrorCode(i8* %943, i8* %965, i16* %984, i32 %989, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %5, %"class.icu_69::Edits"* %6, i32* dereferenceable(4) %7) #8
  %991 = icmp eq i8 %990, 0
  br i1 %991, label %994, label %992

992:                                              ; preds = %983, %974
  %993 = phi i8* [ %65, %974 ], [ %965, %983 ]
  br label %994

994:                                              ; preds = %960, %983, %980, %977, %963, %961, %992, %973
  %995 = phi i8* [ %65, %973 ], [ %993, %992 ], [ %65, %961 ], [ %65, %963 ], [ %65, %977 ], [ %65, %980 ], [ %65, %983 ], [ %65, %960 ]
  %996 = phi i32 [ 1, %973 ], [ 0, %992 ], [ 2, %961 ], [ 2, %963 ], [ 1, %977 ], [ 2, %980 ], [ 2, %983 ], [ 2, %960 ]
  %997 = phi i8* [ %965, %973 ], [ %965, %992 ], [ %889, %961 ], [ %965, %963 ], [ %965, %977 ], [ %965, %980 ], [ %965, %983 ], [ %889, %960 ]
  %998 = phi i8 [ 1, %973 ], [ %63, %992 ], [ %63, %961 ], [ %63, %963 ], [ 0, %977 ], [ %63, %980 ], [ %63, %983 ], [ %63, %960 ]
  %999 = load i16*, i16** %54, align 8
  %1000 = icmp eq i16* %999, null
  br i1 %1000, label %1008, label %1001

1001:                                             ; preds = %994
  %1002 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %53, align 8
  %1003 = load i64, i64* %57, align 8
  %1004 = ptrtoint i16* %999 to i64
  %1005 = sub i64 %1003, %1004
  %1006 = lshr exact i64 %1005, 1
  %1007 = trunc i64 %1006 to i32
  call void @_ZN6icu_6913UnicodeString13releaseBufferEi(%"class.icu_69::UnicodeString"* %1002, i32 %1007) #8
  br label %1008

1008:                                             ; preds = %1001, %994
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %51) #8
  switch i32 %996, label %1014 [
    i32 0, label %1009
    i32 2, label %1016
  ]

1009:                                             ; preds = %884, %644, %687, %548, %547, %488, %460, %1008
  %1010 = phi i8 [ %998, %1008 ], [ %63, %460 ], [ %63, %488 ], [ %63, %547 ], [ %63, %548 ], [ %63, %687 ], [ %63, %644 ], [ %63, %884 ]
  %1011 = phi i8* [ %997, %1008 ], [ %191, %460 ], [ %191, %488 ], [ %191, %547 ], [ %191, %548 ], [ %191, %687 ], [ %628, %644 ], [ %887, %884 ]
  %1012 = phi i8* [ %995, %1008 ], [ %191, %460 ], [ %191, %488 ], [ %191, %547 ], [ %191, %548 ], [ %191, %687 ], [ %628, %644 ], [ %65, %884 ]
  %1013 = icmp eq i8* %1011, %4
  br i1 %1013, label %66, label %62

1014:                                             ; preds = %1008, %208, %595, %656, %738, %874
  %1015 = phi i8 [ 0, %595 ], [ 0, %656 ], [ 0, %738 ], [ 0, %874 ], [ 0, %208 ], [ %998, %1008 ]
  br label %1016

1016:                                             ; preds = %1008, %226, %485, %544, %488, %684, %641, %1014, %743, %744, %66, %71
  %1017 = phi i8 [ 1, %66 ], [ 1, %71 ], [ 1, %743 ], [ 1, %744 ], [ %1015, %1014 ], [ 1, %641 ], [ 1, %684 ], [ 1, %488 ], [ 1, %544 ], [ 1, %485 ], [ 1, %226 ], [ 1, %1008 ]
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #8
  ret i8 %1017
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl21hasCompBoundaryBeforeEPKhS2_(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i8* readonly, i8* readnone) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i8* %1, %2
  br i1 %4, label %139, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8, i8* %1, i64 1
  %7 = load i8, i8* %1, align 1
  %8 = zext i8 %7 to i32
  %9 = icmp sgt i8 %7, -1
  br i1 %9, label %117, label %10

10:                                               ; preds = %5
  %11 = icmp eq i8* %6, %2
  br i1 %11, label %111, label %12

12:                                               ; preds = %10
  %13 = icmp ugt i8 %7, -33
  br i1 %13, label %14, label %93

14:                                               ; preds = %12
  %15 = icmp ult i8 %7, -16
  br i1 %15, label %16, label %49

16:                                               ; preds = %14
  %17 = and i32 %8, 15
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = load i8, i8* %6, align 1
  %23 = zext i8 %22 to i32
  %24 = lshr i32 %23, 5
  %25 = shl i32 1, %24
  %26 = and i32 %25, %21
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %111, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds i8, i8* %1, i64 2
  %30 = icmp eq i8* %29, %2
  br i1 %30, label %111, label %31

31:                                               ; preds = %28
  %32 = load i8, i8* %29, align 1
  %33 = xor i8 %32, -128
  %34 = icmp ult i8 %33, 64
  br i1 %34, label %35, label %111

35:                                               ; preds = %31
  %36 = zext i8 %33 to i32
  %37 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %38 = load %struct.UCPTrie*, %struct.UCPTrie** %37, align 8
  %39 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %38, i64 0, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = shl nuw nsw i32 %17, 6
  %42 = and i32 %23, 63
  %43 = or i32 %42, %41
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i16, i16* %40, i64 %44
  %46 = load i16, i16* %45, align 2
  %47 = zext i16 %46 to i32
  %48 = add nuw nsw i32 %47, %36
  br label %117

49:                                               ; preds = %14
  %50 = add nsw i32 %8, -240
  %51 = icmp slt i32 %50, 5
  br i1 %51, label %52, label %111

52:                                               ; preds = %49
  %53 = load i8, i8* %6, align 1
  %54 = zext i8 %53 to i32
  %55 = lshr i32 %54, 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = shl i32 1, %50
  %61 = and i32 %60, %59
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %111, label %63

63:                                               ; preds = %52
  %64 = shl nsw i32 %50, 6
  %65 = and i32 %54, 63
  %66 = or i32 %65, %64
  %67 = getelementptr inbounds i8, i8* %1, i64 2
  %68 = icmp eq i8* %67, %2
  br i1 %68, label %111, label %69

69:                                               ; preds = %63
  %70 = load i8, i8* %67, align 1
  %71 = xor i8 %70, -128
  %72 = icmp ult i8 %71, 64
  br i1 %72, label %73, label %111

73:                                               ; preds = %69
  %74 = getelementptr inbounds i8, i8* %1, i64 3
  %75 = icmp eq i8* %74, %2
  br i1 %75, label %111, label %76

76:                                               ; preds = %73
  %77 = load i8, i8* %74, align 1
  %78 = xor i8 %77, -128
  %79 = icmp ult i8 %78, 64
  br i1 %79, label %80, label %111

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %82 = load %struct.UCPTrie*, %struct.UCPTrie** %81, align 8
  %83 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %82, i64 0, i32 5
  %84 = load i16, i16* %83, align 4
  %85 = zext i16 %84 to i32
  %86 = icmp slt i32 %66, %85
  br i1 %86, label %91, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %82, i64 0, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = add nsw i32 %89, -2
  br label %117

91:                                               ; preds = %80
  %92 = tail call i32 @ucptrie_internalSmallU8Index_69(%struct.UCPTrie* %82, i32 %66, i8 zeroext %71, i8 zeroext %78) #8
  br label %117

93:                                               ; preds = %12
  %94 = icmp ugt i8 %7, -63
  br i1 %94, label %95, label %111

95:                                               ; preds = %93
  %96 = load i8, i8* %6, align 1
  %97 = xor i8 %96, -128
  %98 = icmp ult i8 %97, 64
  br i1 %98, label %99, label %111

99:                                               ; preds = %95
  %100 = zext i8 %97 to i32
  %101 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %102 = load %struct.UCPTrie*, %struct.UCPTrie** %101, align 8
  %103 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %102, i64 0, i32 0
  %104 = load i16*, i16** %103, align 8
  %105 = and i32 %8, 31
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i16, i16* %104, i64 %106
  %108 = load i16, i16* %107, align 2
  %109 = zext i16 %108 to i32
  %110 = add nuw nsw i32 %109, %100
  br label %117

111:                                              ; preds = %28, %16, %73, %63, %52, %10, %95, %93, %76, %69, %49, %31
  %112 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %113 = load %struct.UCPTrie*, %struct.UCPTrie** %112, align 8
  %114 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %113, i64 0, i32 3
  %115 = load i32, i32* %114, align 4
  %116 = add nsw i32 %115, -1
  br label %117

117:                                              ; preds = %111, %87, %91, %35, %99, %5
  %118 = phi i32 [ %8, %5 ], [ %116, %111 ], [ %48, %35 ], [ %110, %99 ], [ %90, %87 ], [ %92, %91 ]
  %119 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %120 = load %struct.UCPTrie*, %struct.UCPTrie** %119, align 8
  %121 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %120, i64 0, i32 1
  %122 = bitcast %union.UCPTrieData* %121 to i16**
  %123 = load i16*, i16** %122, align 8
  %124 = sext i32 %118 to i64
  %125 = getelementptr inbounds i16, i16* %123, i64 %124
  %126 = load i16, i16* %125, align 2
  %127 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %128 = load i16, i16* %127, align 2
  %129 = icmp ugt i16 %128, %126
  br i1 %129, label %139, label %130

130:                                              ; preds = %117
  %131 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %132 = load i16, i16* %131, align 2
  %133 = icmp ugt i16 %132, %126
  br i1 %133, label %139, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %136 = load i16, i16* %135, align 2
  %137 = icmp ugt i16 %136, %126
  %138 = zext i1 %137 to i8
  br label %139

139:                                              ; preds = %134, %130, %117, %3
  %140 = phi i8 [ 1, %3 ], [ 1, %117 ], [ 0, %130 ], [ %138, %134 ]
  ret i8 %140
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl20hasCompBoundaryAfterEPKhS2_a(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i8*, i8*, i8 signext) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i8* %1, %2
  br i1 %5, label %50, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %2, i64 -1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = icmp sgt i8 %8, -1
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %13 = load %struct.UCPTrie*, %struct.UCPTrie** %12, align 8
  %14 = tail call i32 @ucptrie_internalU8PrevIndex_69(%struct.UCPTrie* %13, i32 %9, i8* %1, i8* %7) #8
  %15 = ashr i32 %14, 3
  br label %16

16:                                               ; preds = %11, %6
  %17 = phi i32 [ %9, %6 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %19 = load %struct.UCPTrie*, %struct.UCPTrie** %18, align 8
  %20 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %19, i64 0, i32 1
  %21 = bitcast %union.UCPTrieData* %20 to i16**
  %22 = load i16*, i16** %21, align 8
  %23 = sext i32 %17 to i64
  %24 = getelementptr inbounds i16, i16* %22, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = and i16 %25, 1
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %50, label %28

28:                                               ; preds = %16
  %29 = icmp eq i8 %3, 0
  br i1 %29, label %50, label %30

30:                                               ; preds = %28
  %31 = icmp eq i16 %25, 1
  br i1 %31, label %47, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %34 = load i16, i16* %33, align 2
  %35 = icmp ugt i16 %34, %25
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = and i16 %25, 6
  %38 = icmp ult i16 %37, 3
  br label %47

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %41 = load i16*, i16** %40, align 8
  %42 = lshr i16 %25, 1
  %43 = zext i16 %42 to i64
  %44 = getelementptr inbounds i16, i16* %41, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = icmp ult i16 %45, 512
  br label %47

47:                                               ; preds = %39, %36, %30
  %48 = phi i1 [ true, %30 ], [ %38, %36 ], [ %46, %39 ]
  %49 = zext i1 %48 to i8
  br label %50

50:                                               ; preds = %47, %28, %16, %4
  %51 = phi i8 [ 1, %4 ], [ 0, %16 ], [ 1, %28 ], [ %49, %47 ]
  ret i8 %51
}

declare void @_ZN6icu_695Edits10addReplaceEii(%"class.icu_69::Edits"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK6icu_6915Normalizer2Impl18getPreviousTrailCCEPKhS2_(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i8*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = icmp eq i8* %1, %2
  br i1 %5, label %48, label %6

6:                                                ; preds = %3
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  %8 = ptrtoint i8* %2 to i64
  %9 = ptrtoint i8* %1 to i64
  %10 = sub i64 %8, %9
  %11 = trunc i64 %10 to i32
  %12 = add nsw i32 %11, -1
  store i32 %12, i32* %4, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = icmp sgt i8 %15, -1
  br i1 %17, label %20, label %18

18:                                               ; preds = %6
  %19 = call i32 @utf8_prevCharSafeBody_69(i8* %1, i32 0, i32* nonnull %4, i32 %16, i8 signext -1) #8
  br label %20

20:                                               ; preds = %18, %6
  %21 = phi i32 [ %16, %6 ], [ %19, %18 ]
  %22 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %23 = load i16, i16* %22, align 8
  %24 = zext i16 %23 to i32
  %25 = icmp slt i32 %21, %24
  br i1 %25, label %46, label %26

26:                                               ; preds = %20
  %27 = icmp slt i32 %21, 65536
  br i1 %27, label %28, label %43

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 16
  %30 = load i8*, i8** %29, align 8
  %31 = ashr i32 %21, 8
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %28
  %37 = zext i8 %34 to i32
  %38 = lshr i32 %21, 5
  %39 = and i32 %38, 7
  %40 = shl i32 1, %39
  %41 = and i32 %40, %37
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %36, %26
  %44 = call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %0, i32 %21) #8
  %45 = trunc i16 %44 to i8
  br label %46

46:                                               ; preds = %20, %28, %36, %43
  %47 = phi i8 [ %45, %43 ], [ 0, %20 ], [ 0, %36 ], [ 0, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  br label %48

48:                                               ; preds = %3, %46
  %49 = phi i8 [ %47, %46 ], [ 0, %3 ]
  ret i8 %49
}

declare i32 @ucptrie_internalU8PrevIndex_69(%struct.UCPTrie*, i32, i8*, i8*) local_unnamed_addr #1

declare i32 @utf8_prevCharSafeBody_69(i8*, i32, i32*, i32, i8 signext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = and i32 %1, -1024
  %4 = icmp eq i32 %3, 55296
  br i1 %4, label %43, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %7 = load %struct.UCPTrie*, %struct.UCPTrie** %6, align 8
  %8 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %7, i64 0, i32 1
  %9 = bitcast %union.UCPTrieData* %8 to i16**
  %10 = load i16*, i16** %9, align 8
  %11 = icmp ult i32 %1, 65536
  br i1 %11, label %12, label %22

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %7, i64 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = lshr i32 %1, 6
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i16, i16* %14, i64 %16
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = and i32 %1, 63
  %21 = add nuw nsw i32 %20, %19
  br label %38

22:                                               ; preds = %5
  %23 = icmp ult i32 %1, 1114112
  br i1 %23, label %24, label %34

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %7, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %7, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, -2
  br label %38

32:                                               ; preds = %24
  %33 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %7, i32 %1) #8
  br label %38

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %7, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = add nsw i32 %36, -1
  br label %38

38:                                               ; preds = %34, %32, %28, %12
  %39 = phi i32 [ %21, %12 ], [ %37, %34 ], [ %31, %28 ], [ %33, %32 ]
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %10, i64 %40
  %42 = load i16, i16* %41, align 2
  br label %43

43:                                               ; preds = %2, %38
  %44 = phi i16 [ %42, %38 ], [ 1, %2 ]
  %45 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %46 = load i16, i16* %45, align 2
  %47 = icmp ult i16 %44, %46
  br i1 %47, label %109, label %48

48:                                               ; preds = %43
  %49 = icmp ugt i16 %44, -1025
  br i1 %49, label %50, label %55

50:                                               ; preds = %48
  %51 = lshr i16 %44, 1
  %52 = and i16 %51, 255
  %53 = shl i16 %51, 8
  %54 = or i16 %53, %52
  br label %134

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %57 = load i16, i16* %56, align 2
  %58 = icmp ult i16 %44, %57
  br i1 %58, label %59, label %134

59:                                               ; preds = %55
  %60 = and i16 %44, 6
  %61 = icmp ult i16 %60, 3
  br i1 %61, label %107, label %62

62:                                               ; preds = %59
  %63 = lshr i16 %44, 3
  %64 = zext i16 %63 to i32
  %65 = add nsw i32 %64, %1
  %66 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 11
  %67 = load i16, i16* %66, align 4
  %68 = zext i16 %67 to i32
  %69 = sub i32 %65, %68
  %70 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %71 = load %struct.UCPTrie*, %struct.UCPTrie** %70, align 8
  %72 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %71, i64 0, i32 1
  %73 = bitcast %union.UCPTrieData* %72 to i16**
  %74 = load i16*, i16** %73, align 8
  %75 = icmp ult i32 %69, 65536
  br i1 %75, label %76, label %86

76:                                               ; preds = %62
  %77 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %71, i64 0, i32 0
  %78 = load i16*, i16** %77, align 8
  %79 = lshr i32 %69, 6
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i16, i16* %78, i64 %80
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = and i32 %69, 63
  %85 = add nuw nsw i32 %84, %83
  br label %102

86:                                               ; preds = %62
  %87 = icmp ult i32 %69, 1114112
  br i1 %87, label %88, label %98

88:                                               ; preds = %86
  %89 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %71, i64 0, i32 4
  %90 = load i32, i32* %89, align 8
  %91 = icmp sgt i32 %90, %69
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %71, i64 0, i32 3
  %94 = load i32, i32* %93, align 4
  %95 = add nsw i32 %94, -2
  br label %102

96:                                               ; preds = %88
  %97 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %71, i32 %69) #8
  br label %102

98:                                               ; preds = %86
  %99 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %71, i64 0, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = add nsw i32 %100, -1
  br label %102

102:                                              ; preds = %98, %96, %92, %76
  %103 = phi i32 [ %85, %76 ], [ %101, %98 ], [ %95, %92 ], [ %97, %96 ]
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i16, i16* %74, i64 %104
  %106 = load i16, i16* %105, align 2
  br label %109

107:                                              ; preds = %59
  %108 = lshr exact i16 %60, 1
  br label %134

109:                                              ; preds = %102, %43
  %110 = phi i16 [ %44, %43 ], [ %106, %102 ]
  %111 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %112 = load i16, i16* %111, align 2
  %113 = icmp ugt i16 %110, %112
  br i1 %113, label %114, label %134

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 5
  %116 = load i16, i16* %115, align 8
  %117 = or i16 %116, 1
  %118 = icmp eq i16 %117, %110
  br i1 %118, label %134, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %121 = load i16*, i16** %120, align 8
  %122 = lshr i16 %110, 1
  %123 = zext i16 %122 to i64
  %124 = getelementptr inbounds i16, i16* %121, i64 %123
  %125 = load i16, i16* %124, align 2
  %126 = lshr i16 %125, 8
  %127 = trunc i16 %125 to i8
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %134

129:                                              ; preds = %119
  %130 = getelementptr inbounds i16, i16* %124, i64 -1
  %131 = load i16, i16* %130, align 2
  %132 = and i16 %131, -256
  %133 = or i16 %132, %126
  br label %134

134:                                              ; preds = %114, %107, %119, %129, %109, %55, %50
  %135 = phi i16 [ %54, %50 ], [ %108, %107 ], [ 0, %55 ], [ 0, %114 ], [ 0, %109 ], [ %133, %129 ], [ %126, %119 ]
  ret i16 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6icu_6915Normalizer2Impl7makeFCDEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16*, i16*, %"class.icu_69::ReorderingBuffer"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i16* %2, null
  br i1 %6, label %7, label %59

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 3
  %9 = load i16, i16* %8, align 4
  br label %10

10:                                               ; preds = %10, %7
  %11 = phi i16* [ %1, %7 ], [ %12, %10 ]
  %12 = getelementptr inbounds i16, i16* %11, i64 1
  %13 = load i16, i16* %11, align 2
  %14 = icmp ult i16 %13, %9
  %15 = icmp ne i16 %13, 0
  %16 = and i1 %15, %14
  br i1 %16, label %10, label %17

17:                                               ; preds = %10
  %18 = icmp ne i16* %11, %1
  %19 = icmp ne %"class.icu_69::ReorderingBuffer"* %3, null
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %3, i16* %1, i16* %11, i32* dereferenceable(4) %4) #8
  br label %23

23:                                               ; preds = %17, %21
  %24 = load i32, i32* %4, align 4
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %26, label %249

26:                                               ; preds = %23
  %27 = icmp ugt i16* %11, %1
  br i1 %27, label %28, label %55

28:                                               ; preds = %26
  %29 = getelementptr inbounds i16, i16* %11, i64 -1
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %33 = load i16, i16* %32, align 8
  %34 = icmp ugt i16 %33, %30
  br i1 %34, label %55, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 16
  %37 = load i8*, i8** %36, align 8
  %38 = lshr i32 %31, 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %35
  %44 = zext i8 %41 to i32
  %45 = lshr i32 %31, 5
  %46 = and i32 %45, 7
  %47 = shl i32 1, %46
  %48 = and i32 %47, %44
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %43
  %51 = tail call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %0, i32 %31) #8
  %52 = zext i16 %51 to i32
  %53 = icmp ugt i16 %51, 1
  %54 = select i1 %53, i16* %29, i16* %11
  br label %55

55:                                               ; preds = %50, %35, %43, %28, %26
  %56 = phi i16* [ %1, %26 ], [ %11, %28 ], [ %11, %43 ], [ %11, %35 ], [ %54, %50 ]
  %57 = phi i32 [ 0, %26 ], [ 0, %28 ], [ 0, %43 ], [ 0, %35 ], [ %52, %50 ]
  %58 = tail call i16* @u_strchr_69(i16* %11, i16 zeroext 0) #8
  br label %59

59:                                               ; preds = %55, %5
  %60 = phi i16* [ %58, %55 ], [ %2, %5 ]
  %61 = phi i16* [ %11, %55 ], [ %1, %5 ]
  %62 = phi i16* [ %56, %55 ], [ %1, %5 ]
  %63 = phi i32 [ %57, %55 ], [ 0, %5 ]
  %64 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 3
  %65 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 16
  %66 = icmp eq %"class.icu_69::ReorderingBuffer"* %3, null
  %67 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %68 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %3, i64 0, i32 4
  %69 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %3, i64 0, i32 2
  %70 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %3, i64 0, i32 1
  %71 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %3, i64 0, i32 5
  %72 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %3, i64 0, i32 6
  %73 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %3, i64 0, i32 3
  %74 = bitcast i16** %73 to i64*
  br label %75

75:                                               ; preds = %203, %59
  %76 = phi i16* [ %61, %59 ], [ %204, %203 ]
  %77 = phi i16* [ %62, %59 ], [ %205, %203 ]
  %78 = phi i32 [ %63, %59 ], [ %206, %203 ]
  %79 = phi i32 [ 0, %59 ], [ %140, %203 ]
  %80 = phi i16 [ 0, %59 ], [ %141, %203 ]
  %81 = icmp eq i16* %76, %60
  br i1 %81, label %136, label %82

82:                                               ; preds = %75, %129
  %83 = phi i16 [ %133, %129 ], [ %80, %75 ]
  %84 = phi i32 [ %131, %129 ], [ %78, %75 ]
  %85 = phi i16* [ %134, %129 ], [ %76, %75 ]
  %86 = load i16, i16* %85, align 2
  %87 = zext i16 %86 to i32
  %88 = load i16, i16* %64, align 4
  %89 = icmp ult i16 %86, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %82
  %91 = xor i32 %87, -1
  br label %129

92:                                               ; preds = %82
  %93 = load i8*, i8** %65, align 8
  %94 = lshr i32 %87, 8
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %129, label %99

99:                                               ; preds = %92
  %100 = zext i8 %97 to i32
  %101 = lshr i32 %87, 5
  %102 = and i32 %101, 7
  %103 = shl i32 1, %102
  %104 = and i32 %103, %100
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %129, label %106

106:                                              ; preds = %99
  %107 = and i32 %87, 64512
  %108 = icmp eq i32 %107, 55296
  br i1 %108, label %109, label %121

109:                                              ; preds = %106
  %110 = getelementptr inbounds i16, i16* %85, i64 1
  %111 = icmp eq i16* %110, %60
  br i1 %111, label %121, label %112

112:                                              ; preds = %109
  %113 = load i16, i16* %110, align 2
  %114 = zext i16 %113 to i32
  %115 = and i32 %114, 64512
  %116 = icmp eq i32 %115, 56320
  br i1 %116, label %117, label %121

117:                                              ; preds = %112
  %118 = shl nuw nsw i32 %87, 10
  %119 = add nsw i32 %118, -56613888
  %120 = add nsw i32 %119, %114
  br label %121

121:                                              ; preds = %112, %117, %109, %106
  %122 = phi i32 [ %87, %106 ], [ %120, %117 ], [ %87, %112 ], [ %87, %109 ]
  %123 = tail call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %0, i32 %122)
  %124 = icmp ult i16 %123, 256
  br i1 %124, label %125, label %136

125:                                              ; preds = %121
  %126 = zext i16 %123 to i32
  %127 = icmp ult i32 %122, 65536
  %128 = select i1 %127, i64 1, i64 2
  br label %129

129:                                              ; preds = %99, %92, %125, %90
  %130 = phi i64 [ %128, %125 ], [ 1, %90 ], [ 1, %92 ], [ 1, %99 ]
  %131 = phi i32 [ %126, %125 ], [ %91, %90 ], [ 0, %92 ], [ 0, %99 ]
  %132 = phi i32 [ %122, %125 ], [ %87, %90 ], [ %87, %92 ], [ %87, %99 ]
  %133 = phi i16 [ %123, %125 ], [ %83, %90 ], [ %83, %92 ], [ %83, %99 ]
  %134 = getelementptr inbounds i16, i16* %85, i64 %130
  %135 = icmp eq i16* %134, %60
  br i1 %135, label %136, label %82

136:                                              ; preds = %121, %129, %75
  %137 = phi i16* [ %60, %75 ], [ %60, %129 ], [ %85, %121 ]
  %138 = phi i32 [ %78, %75 ], [ %131, %129 ], [ %84, %121 ]
  %139 = phi i1 [ true, %75 ], [ true, %129 ], [ false, %121 ]
  %140 = phi i32 [ %79, %75 ], [ %132, %129 ], [ %122, %121 ]
  %141 = phi i16 [ %80, %75 ], [ %133, %129 ], [ %123, %121 ]
  %142 = icmp eq i16* %137, %76
  br i1 %142, label %187, label %143

143:                                              ; preds = %136
  br i1 %66, label %148, label %144

144:                                              ; preds = %143
  %145 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %3, i16* %76, i16* %137, i32* dereferenceable(4) %4)
  %146 = icmp eq i8 %145, 0
  %147 = or i1 %139, %146
  br i1 %147, label %249, label %149

148:                                              ; preds = %143
  br i1 %139, label %249, label %149

149:                                              ; preds = %144, %148
  %150 = icmp slt i32 %138, 0
  br i1 %150, label %151, label %162

151:                                              ; preds = %149
  %152 = xor i32 %138, -1
  %153 = load i16, i16* %67, align 8
  %154 = zext i16 %153 to i32
  %155 = icmp slt i32 %152, %154
  br i1 %155, label %188, label %156

156:                                              ; preds = %151
  %157 = tail call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %0, i32 %152)
  %158 = zext i16 %157 to i32
  %159 = icmp ugt i16 %157, 1
  %160 = getelementptr inbounds i16, i16* %137, i64 -1
  %161 = select i1 %159, i16* %160, i16* %137
  br label %188

162:                                              ; preds = %149
  %163 = getelementptr inbounds i16, i16* %137, i64 -1
  %164 = load i16, i16* %163, align 2
  %165 = and i16 %164, -1024
  %166 = icmp eq i16 %165, -9216
  %167 = icmp ult i16* %76, %163
  %168 = and i1 %167, %166
  br i1 %168, label %169, label %182

169:                                              ; preds = %162
  %170 = getelementptr inbounds i16, i16* %137, i64 -2
  %171 = load i16, i16* %170, align 2
  %172 = and i16 %171, -1024
  %173 = icmp eq i16 %172, -10240
  br i1 %173, label %174, label %182

174:                                              ; preds = %169
  %175 = zext i16 %171 to i32
  %176 = shl nuw nsw i32 %175, 10
  %177 = zext i16 %164 to i32
  %178 = add nuw nsw i32 %177, -56613888
  %179 = add nsw i32 %178, %176
  %180 = tail call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %0, i32 %179)
  %181 = zext i16 %180 to i32
  br label %182

182:                                              ; preds = %174, %169, %162
  %183 = phi i32 [ %181, %174 ], [ %138, %169 ], [ %138, %162 ]
  %184 = phi i16* [ %170, %174 ], [ %163, %169 ], [ %163, %162 ]
  %185 = icmp sgt i32 %183, 1
  %186 = select i1 %185, i16* %184, i16* %137
  br label %188

187:                                              ; preds = %136
  br i1 %139, label %249, label %188

188:                                              ; preds = %156, %182, %151, %187
  %189 = phi i16* [ %77, %187 ], [ %186, %182 ], [ %137, %151 ], [ %161, %156 ]
  %190 = phi i32 [ %138, %187 ], [ %183, %182 ], [ 0, %151 ], [ %158, %156 ]
  %191 = phi i16* [ %76, %187 ], [ %137, %182 ], [ %137, %151 ], [ %137, %156 ]
  %192 = icmp ult i32 %140, 65536
  %193 = select i1 %192, i64 1, i64 2
  %194 = getelementptr inbounds i16, i16* %137, i64 %193
  %195 = and i32 %190, 255
  %196 = zext i16 %141 to i32
  %197 = lshr i32 %196, 8
  %198 = icmp ugt i32 %195, %197
  br i1 %198, label %210, label %199

199:                                              ; preds = %188
  %200 = and i32 %196, 254
  %201 = icmp eq i32 %200, 0
  %202 = select i1 %201, i16* %194, i16* %189
  br i1 %66, label %203, label %207

203:                                              ; preds = %199, %207, %243
  %204 = phi i16* [ %245, %243 ], [ %194, %207 ], [ %194, %199 ]
  %205 = phi i16* [ %245, %243 ], [ %202, %207 ], [ %202, %199 ]
  %206 = phi i32 [ 0, %243 ], [ %196, %207 ], [ %196, %199 ]
  br label %75

207:                                              ; preds = %199
  %208 = tail call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEiR10UErrorCode(%"class.icu_69::ReorderingBuffer"* nonnull %3, i32 %140, i32* dereferenceable(4) %4)
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %249, label %203

210:                                              ; preds = %188
  br i1 %66, label %249, label %211

211:                                              ; preds = %210
  %212 = ptrtoint i16* %191 to i64
  %213 = ptrtoint i16* %189 to i64
  %214 = sub i64 %212, %213
  %215 = shl i64 %214, 31
  %216 = ashr exact i64 %215, 32
  %217 = load i16*, i16** %68, align 8
  %218 = load i16*, i16** %69, align 8
  %219 = ptrtoint i16* %217 to i64
  %220 = ptrtoint i16* %218 to i64
  %221 = sub i64 %219, %220
  %222 = ashr exact i64 %221, 1
  %223 = icmp sgt i64 %222, %216
  br i1 %223, label %224, label %232

224:                                              ; preds = %211
  %225 = lshr exact i64 %214, 1
  %226 = trunc i64 %225 to i32
  %227 = sub nsw i64 0, %216
  %228 = getelementptr inbounds i16, i16* %217, i64 %227
  store i16* %228, i16** %68, align 8
  %229 = load i32, i32* %71, align 8
  %230 = add nsw i32 %229, %226
  store i32 %230, i32* %71, align 8
  %231 = ptrtoint i16* %228 to i64
  br label %243

232:                                              ; preds = %211
  store i16* %218, i16** %68, align 8
  %233 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %70, align 8
  %234 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %233, i64 0, i32 1, i32 0, i32 0
  %235 = load i16, i16* %234, align 8
  %236 = and i16 %235, 2
  %237 = icmp eq i16 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %232
  %239 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %233, i64 0, i32 1, i32 0, i32 2
  %240 = load i32, i32* %239, align 8
  br label %241

241:                                              ; preds = %238, %232
  %242 = phi i32 [ %240, %238 ], [ 27, %232 ]
  store i32 %242, i32* %71, align 8
  br label %243

243:                                              ; preds = %224, %241
  %244 = phi i64 [ %220, %241 ], [ %231, %224 ]
  store i8 0, i8* %72, align 4
  store i64 %244, i64* %74, align 8
  %245 = tail call i16* @_ZNK6icu_6915Normalizer2Impl19findNextFCDBoundaryEPKDsS2_(%"class.icu_69::Normalizer2Impl"* %0, i16* %194, i16* %60)
  %246 = tail call i16* @_ZNK6icu_6915Normalizer2Impl14decomposeShortEPKDsS2_aaRNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i16* %189, i16* %245, i8 signext 0, i8 signext 0, %"class.icu_69::ReorderingBuffer"* nonnull dereferenceable(64) %3, i32* dereferenceable(4) %4)
  %247 = load i32, i32* %4, align 4
  %248 = icmp slt i32 %247, 1
  br i1 %248, label %203, label %249

249:                                              ; preds = %210, %144, %207, %243, %187, %148, %23
  %250 = phi i16* [ %11, %23 ], [ %76, %187 ], [ %137, %144 ], [ %245, %243 ], [ %194, %207 ], [ %137, %148 ], [ %189, %210 ]
  ret i16* %250
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6icu_6915Normalizer2Impl19findNextFCDBoundaryEPKDsS2_(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16* readonly, i16* readnone) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %6 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %9 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %11 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %12 = icmp ult i16* %1, %2
  br i1 %12, label %13, label %141

13:                                               ; preds = %3, %140
  %14 = phi i16* [ %64, %140 ], [ %1, %3 ]
  %15 = getelementptr inbounds i16, i16* %14, i64 1
  %16 = load i16, i16* %14, align 2
  %17 = zext i16 %16 to i32
  %18 = and i32 %17, 63488
  %19 = icmp eq i32 %18, 55296
  br i1 %19, label %31, label %20

20:                                               ; preds = %13
  %21 = load %struct.UCPTrie*, %struct.UCPTrie** %8, align 8
  %22 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %21, i64 0, i32 0
  %23 = load i16*, i16** %22, align 8
  %24 = lshr i32 %17, 6
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i16, i16* %23, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = and i32 %17, 63
  %30 = add nuw nsw i32 %29, %28
  br label %62

31:                                               ; preds = %13
  %32 = and i32 %17, 1024
  %33 = icmp ne i32 %32, 0
  %34 = icmp eq i16* %15, %2
  %35 = or i1 %34, %33
  br i1 %35, label %57, label %36

36:                                               ; preds = %31
  %37 = load i16, i16* %15, align 2
  %38 = zext i16 %37 to i32
  %39 = and i32 %38, 64512
  %40 = icmp eq i32 %39, 56320
  br i1 %40, label %41, label %57

41:                                               ; preds = %36
  %42 = getelementptr inbounds i16, i16* %14, i64 2
  %43 = shl nuw nsw i32 %17, 10
  %44 = add nsw i32 %43, -56613888
  %45 = add nsw i32 %44, %38
  %46 = load %struct.UCPTrie*, %struct.UCPTrie** %8, align 8
  %47 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %46, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = icmp slt i32 %45, %48
  br i1 %49, label %54, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %46, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %52, -2
  br label %62

54:                                               ; preds = %41
  %55 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %46, i32 %45) #8
  %56 = load %struct.UCPTrie*, %struct.UCPTrie** %8, align 8
  br label %62

57:                                               ; preds = %31, %36
  %58 = load %struct.UCPTrie*, %struct.UCPTrie** %8, align 8
  %59 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %58, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = add nsw i32 %60, -1
  br label %62

62:                                               ; preds = %57, %54, %50, %20
  %63 = phi %struct.UCPTrie* [ %21, %20 ], [ %58, %57 ], [ %56, %54 ], [ %46, %50 ]
  %64 = phi i16* [ %15, %20 ], [ %15, %57 ], [ %42, %54 ], [ %42, %50 ]
  %65 = phi i32 [ %17, %20 ], [ %17, %57 ], [ %45, %54 ], [ %45, %50 ]
  %66 = phi i32 [ %30, %20 ], [ %61, %57 ], [ %55, %54 ], [ %53, %50 ]
  %67 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %63, i64 0, i32 1
  %68 = bitcast %union.UCPTrieData* %67 to i16**
  %69 = load i16*, i16** %68, align 8
  %70 = sext i32 %66 to i64
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  %72 = load i16, i16* %71, align 2
  %73 = load i16, i16* %9, align 4
  %74 = zext i16 %73 to i32
  %75 = icmp slt i32 %65, %74
  br i1 %75, label %141, label %76

76:                                               ; preds = %62
  %77 = load i16, i16* %4, align 2
  %78 = icmp ugt i16 %77, %72
  br i1 %78, label %141, label %79

79:                                               ; preds = %76
  %80 = load i16, i16* %10, align 2
  %81 = icmp ugt i16 %80, %72
  br i1 %81, label %86, label %82

82:                                               ; preds = %79
  %83 = icmp ult i16 %72, -1023
  %84 = icmp eq i16 %72, -512
  %85 = or i1 %83, %84
  br i1 %85, label %141, label %98

86:                                               ; preds = %79
  %87 = load i16*, i16** %5, align 8
  %88 = lshr i16 %72, 1
  %89 = zext i16 %88 to i64
  %90 = getelementptr inbounds i16, i16* %87, i64 %89
  %91 = load i16, i16* %90, align 2
  %92 = trunc i16 %91 to i8
  %93 = icmp sgt i8 %92, -1
  br i1 %93, label %141, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds i16, i16* %90, i64 -1
  %96 = load i16, i16* %95, align 2
  %97 = icmp ult i16 %96, 256
  br i1 %97, label %141, label %98

98:                                               ; preds = %82, %94
  %99 = load i16, i16* %6, align 2
  %100 = icmp ult i16 %99, %72
  br i1 %100, label %101, label %141

101:                                              ; preds = %98
  %102 = load i16, i16* %7, align 8
  %103 = or i16 %102, 1
  %104 = icmp eq i16 %103, %72
  br i1 %104, label %141, label %105

105:                                              ; preds = %101
  br i1 %81, label %120, label %106

106:                                              ; preds = %105
  %107 = load i16, i16* %11, align 2
  %108 = icmp ugt i16 %107, %72
  br i1 %108, label %115, label %109

109:                                              ; preds = %106
  %110 = icmp ugt i16 %72, -1024
  %111 = icmp ne i16 %72, -512
  %112 = and i1 %110, %111
  %113 = icmp ult i16* %64, %2
  %114 = and i1 %112, %113
  br i1 %114, label %140, label %141

115:                                              ; preds = %106
  %116 = and i16 %72, 6
  %117 = icmp ugt i16 %116, 2
  %118 = icmp ult i16* %64, %2
  %119 = and i1 %117, %118
  br i1 %119, label %140, label %141

120:                                              ; preds = %105
  %121 = load i16*, i16** %5, align 8
  %122 = lshr i16 %72, 1
  %123 = zext i16 %122 to i64
  %124 = getelementptr inbounds i16, i16* %121, i64 %123
  %125 = load i16, i16* %124, align 2
  %126 = icmp ugt i16 %125, 511
  br i1 %126, label %138, label %127

127:                                              ; preds = %120
  %128 = icmp ult i16 %125, 256
  %129 = trunc i16 %125 to i8
  %130 = icmp sgt i8 %129, -1
  %131 = or i1 %128, %130
  br i1 %131, label %141, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds i16, i16* %124, i64 -1
  %134 = load i16, i16* %133, align 2
  %135 = icmp ugt i16 %134, 255
  %136 = icmp ult i16* %64, %2
  %137 = and i1 %135, %136
  br i1 %137, label %140, label %141

138:                                              ; preds = %120
  %139 = icmp ult i16* %64, %2
  br i1 %139, label %140, label %141

140:                                              ; preds = %138, %115, %109, %132
  br label %13

141:                                              ; preds = %132, %109, %115, %138, %62, %76, %86, %101, %98, %127, %94, %82, %3
  %142 = phi i16* [ %1, %3 ], [ %64, %138 ], [ %14, %62 ], [ %14, %76 ], [ %14, %86 ], [ %64, %101 ], [ %64, %98 ], [ %64, %127 ], [ %14, %94 ], [ %14, %82 ], [ %64, %132 ], [ %64, %109 ], [ %64, %115 ]
  ret i16* %142
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6915Normalizer2Impl16makeFCDAndAppendEPKDsS2_aRNS_13UnicodeStringERNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16*, i16*, i8 signext, %"class.icu_69::UnicodeString"* dereferenceable(64), %"class.icu_69::ReorderingBuffer"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.icu_69::UnicodeString", align 8
  %9 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 2
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 4
  %12 = load i16*, i16** %11, align 8
  %13 = icmp eq i16* %10, %12
  br i1 %13, label %97, label %14

14:                                               ; preds = %7
  %15 = tail call i16* @_ZNK6icu_6915Normalizer2Impl19findNextFCDBoundaryEPKDsS2_(%"class.icu_69::Normalizer2Impl"* %0, i16* %1, i16* %2)
  %16 = icmp eq i16* %15, %1
  br i1 %16, label %97, label %17

17:                                               ; preds = %14
  %18 = load i16*, i16** %9, align 8
  %19 = load i16*, i16** %11, align 8
  %20 = tail call i16* @_ZNK6icu_6915Normalizer2Impl23findPreviousFCDBoundaryEPKDsS2_(%"class.icu_69::Normalizer2Impl"* %0, i16* %18, i16* %19)
  %21 = bitcast i16** %11 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint i16* %20 to i64
  %24 = sub i64 %22, %23
  %25 = lshr exact i64 %24, 1
  %26 = trunc i64 %25 to i32
  %27 = bitcast %"class.icu_69::UnicodeString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %27) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 64, i1 false)
  call void @_ZN6icu_6913UnicodeStringC1EPKDsi(%"class.icu_69::UnicodeString"* nonnull %8, i16* %20, i32 %26) #8
  %28 = shl i64 %24, 31
  %29 = ashr exact i64 %28, 32
  %30 = load i16*, i16** %11, align 8
  %31 = load i16*, i16** %9, align 8
  %32 = ptrtoint i16* %30 to i64
  %33 = ptrtoint i16* %31 to i64
  %34 = sub i64 %32, %33
  %35 = ashr exact i64 %34, 1
  %36 = icmp sgt i64 %35, %29
  br i1 %36, label %37, label %44

37:                                               ; preds = %17
  %38 = sub nsw i64 0, %29
  %39 = getelementptr inbounds i16, i16* %30, i64 %38
  store i16* %39, i16** %11, align 8
  %40 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 5
  %41 = load i32, i32* %40, align 8
  %42 = add nsw i32 %41, %26
  store i32 %42, i32* %40, align 8
  %43 = ptrtoint i16* %39 to i64
  br label %57

44:                                               ; preds = %17
  store i16* %31, i16** %11, align 8
  %45 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 1
  %46 = load %"class.icu_69::UnicodeString"*, %"class.icu_69::UnicodeString"** %45, align 8
  %47 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %46, i64 0, i32 1, i32 0, i32 0
  %48 = load i16, i16* %47, align 8
  %49 = and i16 %48, 2
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %46, i64 0, i32 1, i32 0, i32 2
  %53 = load i32, i32* %52, align 8
  br label %54

54:                                               ; preds = %51, %44
  %55 = phi i32 [ %53, %51 ], [ 27, %44 ]
  %56 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 5
  store i32 %55, i32* %56, align 8
  br label %57

57:                                               ; preds = %37, %54
  %58 = phi i64 [ %33, %54 ], [ %43, %37 ]
  %59 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 6
  store i8 0, i8* %59, align 4
  %60 = getelementptr inbounds %"class.icu_69::ReorderingBuffer", %"class.icu_69::ReorderingBuffer"* %5, i64 0, i32 3
  %61 = bitcast i16** %60 to i64*
  store i64 %58, i64* %61, align 8
  %62 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeStringaSERKS0_(%"class.icu_69::UnicodeString"* %4, %"class.icu_69::UnicodeString"* nonnull dereferenceable(64) %8) #8
  %63 = ptrtoint i16* %15 to i64
  %64 = ptrtoint i16* %1 to i64
  %65 = sub i64 %63, %64
  %66 = lshr exact i64 %65, 1
  %67 = trunc i64 %66 to i32
  %68 = call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"* nonnull %8, i16* %1, i32 0, i32 %67) #8
  call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #8, !srcloc !4
  %69 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %8, i64 0, i32 1
  %70 = getelementptr inbounds %"union.icu_69::UnicodeString::StackBufferOrFields", %"union.icu_69::UnicodeString::StackBufferOrFields"* %69, i64 0, i32 0, i32 0
  %71 = load i16, i16* %70, align 8
  %72 = sext i16 %71 to i32
  %73 = and i32 %72, 17
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %84

75:                                               ; preds = %57
  %76 = and i32 %72, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = bitcast %"union.icu_69::UnicodeString::StackBufferOrFields"* %69 to %struct.anon*
  %80 = getelementptr inbounds %struct.anon, %struct.anon* %79, i64 0, i32 1, i64 0
  br label %84

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %8, i64 0, i32 1, i32 0, i32 3
  %83 = load i16*, i16** %82, align 8
  br label %84

84:                                               ; preds = %57, %78, %81
  %85 = phi i16* [ %80, %78 ], [ %83, %81 ], [ null, %57 ]
  %86 = icmp slt i16 %71, 0
  %87 = lshr i16 %71, 5
  %88 = zext i16 %87 to i32
  %89 = getelementptr inbounds %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString"* %8, i64 0, i32 1, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = select i1 %86, i32 %90, i32 %88
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %85, i64 %92
  %94 = call i16* @_ZNK6icu_6915Normalizer2Impl7makeFCDEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i16* %85, i16* %93, %"class.icu_69::ReorderingBuffer"* %5, i32* dereferenceable(4) %6)
  %95 = load i32, i32* %6, align 4
  %96 = icmp slt i32 %95, 1
  call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %27) #8
  br i1 %96, label %97, label %109

97:                                               ; preds = %7, %14, %84
  %98 = phi i16* [ %1, %7 ], [ %15, %84 ], [ %1, %14 ]
  %99 = icmp eq i8 %3, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  %101 = call i16* @_ZNK6icu_6915Normalizer2Impl7makeFCDEPKDsS2_PNS_16ReorderingBufferER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i16* %98, i16* %2, %"class.icu_69::ReorderingBuffer"* %5, i32* dereferenceable(4) %6)
  br label %109

102:                                              ; preds = %97
  %103 = icmp eq i16* %2, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %102
  %105 = call i16* @u_strchr_69(i16* %98, i16 zeroext 0) #8
  br label %106

106:                                              ; preds = %104, %102
  %107 = phi i16* [ %105, %104 ], [ %2, %102 ]
  %108 = call signext i8 @_ZN6icu_6916ReorderingBuffer12appendZeroCCEPKDsS2_R10UErrorCode(%"class.icu_69::ReorderingBuffer"* %5, i16* %98, i16* %107, i32* dereferenceable(4) %6)
  br label %109

109:                                              ; preds = %84, %106, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i16* @_ZNK6icu_6915Normalizer2Impl23findPreviousFCDBoundaryEPKDsS2_(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i16* readnone, i16* readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %7 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %8 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %10 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %11 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 8
  %12 = icmp ugt i16* %2, %1
  br i1 %12, label %13, label %137

13:                                               ; preds = %3, %136
  %14 = phi i16* [ %64, %136 ], [ %2, %3 ]
  %15 = getelementptr inbounds i16, i16* %14, i64 -1
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = and i32 %17, 63488
  %19 = icmp eq i32 %18, 55296
  br i1 %19, label %31, label %20

20:                                               ; preds = %13
  %21 = load %struct.UCPTrie*, %struct.UCPTrie** %7, align 8
  %22 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %21, i64 0, i32 0
  %23 = load i16*, i16** %22, align 8
  %24 = lshr i32 %17, 6
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i16, i16* %23, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = and i32 %17, 63
  %30 = add nuw nsw i32 %29, %28
  br label %62

31:                                               ; preds = %13
  %32 = and i32 %17, 1024
  %33 = icmp eq i32 %32, 0
  %34 = icmp eq i16* %15, %1
  %35 = or i1 %34, %33
  br i1 %35, label %57, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds i16, i16* %14, i64 -2
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = and i32 %39, 64512
  %41 = icmp eq i32 %40, 55296
  br i1 %41, label %42, label %57

42:                                               ; preds = %36
  %43 = shl nuw nsw i32 %39, 10
  %44 = add nuw nsw i32 %17, -56613888
  %45 = add nsw i32 %44, %43
  %46 = load %struct.UCPTrie*, %struct.UCPTrie** %7, align 8
  %47 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %46, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = icmp slt i32 %45, %48
  br i1 %49, label %54, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %46, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %52, -2
  br label %62

54:                                               ; preds = %42
  %55 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %46, i32 %45) #8
  %56 = load %struct.UCPTrie*, %struct.UCPTrie** %7, align 8
  br label %62

57:                                               ; preds = %31, %36
  %58 = load %struct.UCPTrie*, %struct.UCPTrie** %7, align 8
  %59 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %58, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = add nsw i32 %60, -1
  br label %62

62:                                               ; preds = %57, %54, %50, %20
  %63 = phi %struct.UCPTrie* [ %21, %20 ], [ %58, %57 ], [ %56, %54 ], [ %46, %50 ]
  %64 = phi i16* [ %15, %20 ], [ %15, %57 ], [ %37, %54 ], [ %37, %50 ]
  %65 = phi i32 [ %17, %20 ], [ %17, %57 ], [ %45, %54 ], [ %45, %50 ]
  %66 = phi i32 [ %30, %20 ], [ %61, %57 ], [ %55, %54 ], [ %53, %50 ]
  %67 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %63, i64 0, i32 1
  %68 = bitcast %union.UCPTrieData* %67 to i16**
  %69 = load i16*, i16** %68, align 8
  %70 = sext i32 %66 to i64
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  %72 = load i16, i16* %71, align 2
  %73 = load i16, i16* %8, align 8
  %74 = zext i16 %73 to i32
  %75 = icmp slt i32 %65, %74
  br i1 %75, label %137, label %76

76:                                               ; preds = %62
  %77 = load i16, i16* %4, align 2
  %78 = icmp ult i16 %77, %72
  br i1 %78, label %79, label %137

79:                                               ; preds = %76
  %80 = load i16, i16* %5, align 8
  %81 = or i16 %80, 1
  %82 = icmp eq i16 %81, %72
  br i1 %82, label %137, label %83

83:                                               ; preds = %79
  %84 = load i16, i16* %9, align 2
  %85 = icmp ugt i16 %84, %72
  br i1 %85, label %96, label %86

86:                                               ; preds = %83
  %87 = load i16, i16* %10, align 2
  %88 = icmp ugt i16 %87, %72
  br i1 %88, label %93, label %89

89:                                               ; preds = %86
  %90 = icmp ult i16 %72, -1023
  %91 = icmp eq i16 %72, -512
  %92 = or i1 %90, %91
  br i1 %92, label %137, label %112

93:                                               ; preds = %86
  %94 = and i16 %72, 6
  %95 = icmp ult i16 %94, 3
  br i1 %95, label %137, label %112

96:                                               ; preds = %83
  %97 = load i16*, i16** %6, align 8
  %98 = lshr i16 %72, 1
  %99 = zext i16 %98 to i64
  %100 = getelementptr inbounds i16, i16* %97, i64 %99
  %101 = load i16, i16* %100, align 2
  %102 = icmp ugt i16 %101, 511
  br i1 %102, label %112, label %103

103:                                              ; preds = %96
  %104 = icmp ult i16 %101, 256
  %105 = trunc i16 %101 to i8
  %106 = icmp sgt i8 %105, -1
  %107 = or i1 %104, %106
  br i1 %107, label %137, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds i16, i16* %100, i64 -1
  %110 = load i16, i16* %109, align 2
  %111 = icmp ult i16 %110, 256
  br i1 %111, label %137, label %112

112:                                              ; preds = %93, %89, %108, %96
  %113 = load i16, i16* %11, align 2
  %114 = icmp ugt i16 %113, %72
  br i1 %114, label %137, label %115

115:                                              ; preds = %112
  br i1 %85, label %122, label %116

116:                                              ; preds = %115
  %117 = icmp ugt i16 %72, -1024
  %118 = icmp ne i16 %72, -512
  %119 = and i1 %117, %118
  %120 = icmp ugt i16* %64, %1
  %121 = and i1 %119, %120
  br i1 %121, label %136, label %137

122:                                              ; preds = %115
  %123 = load i16*, i16** %6, align 8
  %124 = lshr i16 %72, 1
  %125 = zext i16 %124 to i64
  %126 = getelementptr inbounds i16, i16* %123, i64 %125
  %127 = load i16, i16* %126, align 2
  %128 = trunc i16 %127 to i8
  %129 = icmp sgt i8 %128, -1
  br i1 %129, label %137, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds i16, i16* %126, i64 -1
  %132 = load i16, i16* %131, align 2
  %133 = icmp ugt i16 %132, 255
  %134 = icmp ugt i16* %64, %1
  %135 = and i1 %133, %134
  br i1 %135, label %136, label %137

136:                                              ; preds = %130, %116
  br label %13

137:                                              ; preds = %116, %130, %62, %79, %76, %103, %112, %122, %108, %89, %93, %3
  %138 = phi i16* [ %2, %3 ], [ %14, %62 ], [ %14, %79 ], [ %14, %76 ], [ %14, %103 ], [ %64, %112 ], [ %64, %122 ], [ %14, %108 ], [ %64, %130 ], [ %14, %89 ], [ %14, %93 ], [ %64, %116 ]
  ret i16* %138
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6913CanonIterDataC2ER10UErrorCode(%"struct.icu_69::CanonIterData"*, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %0, i64 0, i32 0
  %4 = tail call %struct.UMutableCPTrie* @umutablecptrie_open_69(i32 0, i32 0, i32* %1) #8
  store %struct.UMutableCPTrie* %4, %struct.UMutableCPTrie** %3, align 8
  %5 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %0, i64 0, i32 1
  store %struct.UCPTrie* null, %struct.UCPTrie** %5, align 8
  %6 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %0, i64 0, i32 2
  tail call void @_ZN6icu_697UVectorC1EPFvPvEPFa8UElementS4_ER10UErrorCode(%"class.icu_69::UVector"* %6, void (i8*)* nonnull @uprv_deleteUObject_69, i8 (i8*, i8*)* null, i32* dereferenceable(4) %1) #8
  ret void
}

declare %struct.UMutableCPTrie* @umutablecptrie_open_69(i32, i32, i32*) local_unnamed_addr #1

declare void @uprv_deleteUObject_69(i8*) #1

declare void @_ZN6icu_697UVectorC1EPFvPvEPFa8UElementS4_ER10UErrorCode(%"class.icu_69::UVector"*, void (i8*)*, i8 (i8*, i8*)*, i32* dereferenceable(4)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6913CanonIterDataD2Ev(%"struct.icu_69::CanonIterData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %0, i64 0, i32 0
  %3 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %2, align 8
  tail call void @umutablecptrie_close_69(%struct.UMutableCPTrie* %3) #8
  %4 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %0, i64 0, i32 1
  %5 = load %struct.UCPTrie*, %struct.UCPTrie** %4, align 8
  tail call void @ucptrie_close_69(%struct.UCPTrie* %5) #8
  %6 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %0, i64 0, i32 2
  tail call void @_ZN6icu_697UVectorD1Ev(%"class.icu_69::UVector"* %6) #8
  ret void
}

declare void @umutablecptrie_close_69(%struct.UMutableCPTrie*) local_unnamed_addr #1

declare void @ucptrie_close_69(%struct.UCPTrie*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6icu_697UVectorD1Ev(%"class.icu_69::UVector"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6913CanonIterData13addToStartSetEiiR10UErrorCode(%"struct.icu_69::CanonIterData"*, i32, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %0, i64 0, i32 0
  %6 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %5, align 8
  %7 = tail call i32 @umutablecptrie_get_69(%struct.UMutableCPTrie* %6, i32 %2) #8
  %8 = and i32 %7, 4194303
  %9 = icmp eq i32 %8, 0
  %10 = icmp ne i32 %1, 0
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %15

12:                                               ; preds = %4
  %13 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %5, align 8
  %14 = or i32 %7, %1
  tail call void @umutablecptrie_set_69(%struct.UMutableCPTrie* %13, i32 %2, i32 %14, i32* %3) #8
  br label %43

15:                                               ; preds = %4
  %16 = and i32 %7, 2097152
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %35

18:                                               ; preds = %15
  %19 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 200) #8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %18
  %22 = bitcast i8* %19 to %"class.icu_69::UnicodeSet"*
  tail call void @_ZN6icu_6910UnicodeSetC1Ev(%"class.icu_69::UnicodeSet"* nonnull %22) #8
  %23 = and i32 %7, 2097151
  %24 = and i32 %7, -4194304
  %25 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %0, i64 0, i32 2
  %26 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %0, i64 0, i32 2, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = or i32 %24, %27
  %29 = or i32 %28, 2097152
  %30 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %5, align 8
  tail call void @umutablecptrie_set_69(%struct.UMutableCPTrie* %30, i32 %2, i32 %29, i32* %3) #8
  tail call void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"* %25, i8* nonnull %19, i32* dereferenceable(4) %3) #8
  %31 = icmp eq i32 %23, 0
  br i1 %31, label %40, label %33

32:                                               ; preds = %18
  store i32 7, i32* %3, align 4
  br label %43

33:                                               ; preds = %21
  %34 = tail call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEi(%"class.icu_69::UnicodeSet"* nonnull %22, i32 %23) #8
  br label %40

35:                                               ; preds = %15
  %36 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %0, i64 0, i32 2
  %37 = and i32 %7, 2097151
  %38 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %36, i32 %37) #8
  %39 = bitcast i8* %38 to %"class.icu_69::UnicodeSet"*
  br label %40

40:                                               ; preds = %33, %21, %35
  %41 = phi %"class.icu_69::UnicodeSet"* [ %39, %35 ], [ %22, %21 ], [ %22, %33 ]
  %42 = tail call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEi(%"class.icu_69::UnicodeSet"* %41, i32 %1) #8
  br label %43

43:                                               ; preds = %12, %40, %32
  ret void
}

declare i32 @umutablecptrie_get_69(%struct.UMutableCPTrie*, i32) local_unnamed_addr #1

declare void @umutablecptrie_set_69(%struct.UMutableCPTrie*, i32, i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #5

declare void @_ZN6icu_6910UnicodeSetC1Ev(%"class.icu_69::UnicodeSet"*) unnamed_addr #1

declare void @_ZN6icu_697UVector10addElementEPvR10UErrorCode(%"class.icu_69::UVector"*, i8*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917InitCanonIterData6doInitEPNS_15Normalizer2ImplER10UErrorCode(%"class.icu_69::Normalizer2Impl"* nocapture, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 56) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 18
  store %"struct.icu_69::CanonIterData"* null, %"struct.icu_69::CanonIterData"** %7, align 8
  store i32 7, i32* %1, align 4
  br label %53

8:                                                ; preds = %2
  %9 = bitcast i8* %4 to %struct.UMutableCPTrie**
  %10 = tail call %struct.UMutableCPTrie* @umutablecptrie_open_69(i32 0, i32 0, i32* %1) #8
  store %struct.UMutableCPTrie* %10, %struct.UMutableCPTrie** %9, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 8
  %12 = bitcast i8* %11 to %struct.UCPTrie**
  store %struct.UCPTrie* null, %struct.UCPTrie** %12, align 8
  %13 = getelementptr inbounds i8, i8* %4, i64 16
  %14 = bitcast i8* %13 to %"class.icu_69::UVector"*
  tail call void @_ZN6icu_697UVectorC1EPFvPvEPFa8UElementS4_ER10UErrorCode(%"class.icu_69::UVector"* %14, void (i8*)* nonnull @uprv_deleteUObject_69, i8 (i8*, i8*)* null, i32* dereferenceable(4) %1) #8
  %15 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 18
  %16 = bitcast %"struct.icu_69::CanonIterData"** %15 to i8**
  store i8* %4, i8** %16, align 8
  %17 = load i32, i32* %1, align 4
  %18 = icmp sgt i32 %17, 0
  %19 = bitcast i8* %4 to %"struct.icu_69::CanonIterData"*
  br i1 %18, label %57, label %20

20:                                               ; preds = %8
  %21 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #8
  store i32 -1431655766, i32* %3, align 4
  %22 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %23 = load %struct.UCPTrie*, %struct.UCPTrie** %22, align 8
  %24 = call i32 @ucptrie_getRange_69(%struct.UCPTrie* %23, i32 0, i32 1, i32 1, i32 (i8*, i32)* null, i8* null, i32* nonnull %3) #8
  %25 = icmp sgt i32 %24, -1
  br i1 %25, label %26, label %39

26:                                               ; preds = %20, %34
  %27 = phi i32 [ %37, %34 ], [ %24, %20 ]
  %28 = phi i32 [ %35, %34 ], [ 0, %20 ]
  %29 = load i32, i32* %3, align 4
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  %32 = trunc i32 %29 to i16
  %33 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %15, align 8
  call void @_ZNK6icu_6915Normalizer2Impl27makeCanonIterDataFromNorm16EiitRNS_13CanonIterDataER10UErrorCode(%"class.icu_69::Normalizer2Impl"* %0, i32 %28, i32 %27, i16 zeroext %32, %"struct.icu_69::CanonIterData"* dereferenceable(56) %33, i32* dereferenceable(4) %1)
  br label %34

34:                                               ; preds = %26, %31
  %35 = add nuw nsw i32 %27, 1
  %36 = load %struct.UCPTrie*, %struct.UCPTrie** %22, align 8
  %37 = call i32 @ucptrie_getRange_69(%struct.UCPTrie* %36, i32 %35, i32 1, i32 1, i32 (i8*, i32)* null, i8* null, i32* nonnull %3) #8
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %26, label %39

39:                                               ; preds = %34, %20
  %40 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %15, align 8
  %41 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %40, i64 0, i32 0
  %42 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %41, align 8
  %43 = call %struct.UCPTrie* @umutablecptrie_buildImmutable_69(%struct.UMutableCPTrie* %42, i32 1, i32 1, i32* %1) #8
  %44 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %15, align 8
  %45 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %44, i64 0, i32 1
  store %struct.UCPTrie* %43, %struct.UCPTrie** %45, align 8
  %46 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %15, align 8
  %47 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %46, i64 0, i32 0
  %48 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %47, align 8
  call void @umutablecptrie_close_69(%struct.UMutableCPTrie* %48) #8
  %49 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %15, align 8
  %50 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %49, i64 0, i32 0
  store %struct.UMutableCPTrie* null, %struct.UMutableCPTrie** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #8
  %51 = load i32, i32* %1, align 4
  %52 = icmp slt i32 %51, 1
  br i1 %52, label %69, label %53

53:                                               ; preds = %39, %6
  %54 = phi %"struct.icu_69::CanonIterData"** [ %7, %6 ], [ %15, %39 ]
  %55 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %54, align 8
  %56 = bitcast %"struct.icu_69::CanonIterData"* %55 to i8*
  br label %57

57:                                               ; preds = %53, %8
  %58 = phi i8* [ %56, %53 ], [ %4, %8 ]
  %59 = phi %"struct.icu_69::CanonIterData"* [ %55, %53 ], [ %19, %8 ]
  %60 = phi %"struct.icu_69::CanonIterData"** [ %54, %53 ], [ %15, %8 ]
  %61 = icmp eq %"struct.icu_69::CanonIterData"* %59, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %59, i64 0, i32 0
  %64 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %63, align 8
  call void @umutablecptrie_close_69(%struct.UMutableCPTrie* %64) #8
  %65 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %59, i64 0, i32 1
  %66 = load %struct.UCPTrie*, %struct.UCPTrie** %65, align 8
  call void @ucptrie_close_69(%struct.UCPTrie* %66) #8
  %67 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %59, i64 0, i32 2
  call void @_ZN6icu_697UVectorD1Ev(%"class.icu_69::UVector"* %67) #8
  call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %58) #8
  br label %68

68:                                               ; preds = %62, %57
  store %"struct.icu_69::CanonIterData"* null, %"struct.icu_69::CanonIterData"** %60, align 8
  br label %69

69:                                               ; preds = %39, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6915Normalizer2Impl27makeCanonIterDataFromNorm16EiitRNS_13CanonIterDataER10UErrorCode(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32, i32, i16 zeroext, %"struct.icu_69::CanonIterData"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %7 = icmp eq i16 %3, 1
  br i1 %7, label %176, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %10 = load i16, i16* %9, align 2
  %11 = icmp ugt i16 %10, %3
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 6
  %14 = load i16, i16* %13, align 2
  %15 = icmp ugt i16 %14, %3
  %16 = icmp sgt i32 %1, %2
  %17 = or i1 %15, %16
  br i1 %17, label %176, label %20

18:                                               ; preds = %8
  %19 = icmp sgt i32 %1, %2
  br i1 %19, label %176, label %20

20:                                               ; preds = %12, %18
  %21 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %23 = icmp ult i16 %3, -1024
  %24 = select i1 %23, i32 -1073741824, i32 -2147483648
  %25 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 10
  %26 = lshr i16 %3, 3
  %27 = zext i16 %26 to i32
  %28 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 11
  %29 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %30 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %31 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 6
  br label %32

32:                                               ; preds = %173, %20
  %33 = phi i32 [ %1, %20 ], [ %174, %173 ]
  %34 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %21, align 8
  %35 = tail call i32 @umutablecptrie_get_69(%struct.UMutableCPTrie* %34, i32 %33) #8
  %36 = load i16, i16* %22, align 2
  %37 = icmp ugt i16 %36, %3
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = or i32 %35, %24
  br label %168

40:                                               ; preds = %32
  %41 = load i16, i16* %9, align 2
  %42 = icmp ugt i16 %41, %3
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = or i32 %35, 1073741824
  br label %168

45:                                               ; preds = %40
  %46 = load i16, i16* %25, align 2
  %47 = icmp ugt i16 %46, %3
  br i1 %47, label %91, label %48

48:                                               ; preds = %45
  %49 = add nsw i32 %33, %27
  %50 = load i16, i16* %28, align 4
  %51 = zext i16 %50 to i32
  %52 = sub i32 %49, %51
  %53 = load %struct.UCPTrie*, %struct.UCPTrie** %29, align 8
  %54 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %53, i64 0, i32 1
  %55 = bitcast %union.UCPTrieData* %54 to i16**
  %56 = load i16*, i16** %55, align 8
  %57 = icmp ult i32 %52, 65536
  br i1 %57, label %58, label %68

58:                                               ; preds = %48
  %59 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %53, i64 0, i32 0
  %60 = load i16*, i16** %59, align 8
  %61 = lshr i32 %52, 6
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i16, i16* %60, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = and i32 %52, 63
  %67 = add nuw nsw i32 %66, %65
  br label %85

68:                                               ; preds = %48
  %69 = icmp ult i32 %52, 1114112
  br i1 %69, label %70, label %81

70:                                               ; preds = %68
  %71 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %53, i64 0, i32 4
  %72 = load i32, i32* %71, align 8
  %73 = icmp sgt i32 %72, %52
  br i1 %73, label %78, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %53, i64 0, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = add nsw i32 %76, -2
  br label %85

78:                                               ; preds = %70
  %79 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %53, i32 %52) #8
  %80 = load i16, i16* %9, align 2
  br label %85

81:                                               ; preds = %68
  %82 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %53, i64 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = add nsw i32 %83, -1
  br label %85

85:                                               ; preds = %58, %74, %78, %81
  %86 = phi i16 [ %41, %58 ], [ %41, %81 ], [ %41, %74 ], [ %80, %78 ]
  %87 = phi i32 [ %67, %58 ], [ %84, %81 ], [ %77, %74 ], [ %79, %78 ]
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i16, i16* %56, i64 %88
  %90 = load i16, i16* %89, align 2
  br label %91

91:                                               ; preds = %45, %85
  %92 = phi i16 [ %86, %85 ], [ %41, %45 ]
  %93 = phi i32 [ %52, %85 ], [ %33, %45 ]
  %94 = phi i16 [ %90, %85 ], [ %3, %45 ]
  %95 = icmp ugt i16 %94, %92
  br i1 %95, label %96, label %167

96:                                               ; preds = %91
  %97 = load i16*, i16** %30, align 8
  %98 = lshr i16 %94, 1
  %99 = zext i16 %98 to i64
  %100 = getelementptr inbounds i16, i16* %97, i64 %99
  %101 = load i16, i16* %100, align 2
  %102 = and i16 %101, 31
  %103 = zext i16 %102 to i32
  %104 = trunc i16 %101 to i8
  %105 = icmp slt i8 %104, 0
  %106 = icmp eq i32 %33, %93
  %107 = and i1 %106, %105
  br i1 %107, label %108, label %115

108:                                              ; preds = %96
  %109 = getelementptr inbounds i16, i16* %100, i64 -1
  %110 = load i16, i16* %109, align 2
  %111 = and i16 %110, 255
  %112 = icmp eq i16 %111, 0
  %113 = or i32 %35, -2147483648
  %114 = select i1 %112, i32 %35, i32 %113
  br label %115

115:                                              ; preds = %108, %96
  %116 = phi i32 [ %35, %96 ], [ %114, %108 ]
  %117 = icmp eq i16 %102, 0
  br i1 %117, label %168, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds i16, i16* %100, i64 1
  %120 = load i16, i16* %119, align 2
  %121 = zext i16 %120 to i32
  %122 = and i32 %121, 64512
  %123 = icmp eq i32 %122, 55296
  br i1 %123, label %124, label %131

124:                                              ; preds = %118
  %125 = shl nuw nsw i32 %121, 10
  %126 = getelementptr inbounds i16, i16* %100, i64 2
  %127 = load i16, i16* %126, align 2
  %128 = zext i16 %127 to i32
  %129 = add nsw i32 %125, -56613888
  %130 = add nsw i32 %129, %128
  br label %131

131:                                              ; preds = %124, %118
  %132 = phi i32 [ %130, %124 ], [ %121, %118 ]
  %133 = phi i32 [ 2, %124 ], [ 1, %118 ]
  tail call void @_ZN6icu_6913CanonIterData13addToStartSetEiiR10UErrorCode(%"struct.icu_69::CanonIterData"* %4, i32 %33, i32 %132, i32* dereferenceable(4) %5)
  %134 = load i16, i16* %31, align 2
  %135 = icmp uge i16 %94, %134
  %136 = icmp ult i32 %133, %103
  %137 = and i1 %135, %136
  br i1 %137, label %138, label %168

138:                                              ; preds = %131, %165
  %139 = phi i32 [ %158, %165 ], [ %133, %131 ]
  %140 = add nsw i32 %139, 1
  %141 = sext i32 %139 to i64
  %142 = getelementptr inbounds i16, i16* %119, i64 %141
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i32
  %145 = and i32 %144, 64512
  %146 = icmp eq i32 %145, 55296
  br i1 %146, label %147, label %156

147:                                              ; preds = %138
  %148 = shl nuw nsw i32 %144, 10
  %149 = add nsw i32 %139, 2
  %150 = sext i32 %140 to i64
  %151 = getelementptr inbounds i16, i16* %119, i64 %150
  %152 = load i16, i16* %151, align 2
  %153 = zext i16 %152 to i32
  %154 = add nsw i32 %148, -56613888
  %155 = add nsw i32 %154, %153
  br label %156

156:                                              ; preds = %147, %138
  %157 = phi i32 [ %155, %147 ], [ %144, %138 ]
  %158 = phi i32 [ %149, %147 ], [ %140, %138 ]
  %159 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %21, align 8
  %160 = tail call i32 @umutablecptrie_get_69(%struct.UMutableCPTrie* %159, i32 %157) #8
  %161 = icmp sgt i32 %160, -1
  br i1 %161, label %162, label %165

162:                                              ; preds = %156
  %163 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %21, align 8
  %164 = or i32 %160, -2147483648
  tail call void @umutablecptrie_set_69(%struct.UMutableCPTrie* %163, i32 %157, i32 %164, i32* %5) #8
  br label %165

165:                                              ; preds = %162, %156
  %166 = icmp slt i32 %158, %103
  br i1 %166, label %138, label %168

167:                                              ; preds = %91
  tail call void @_ZN6icu_6913CanonIterData13addToStartSetEiiR10UErrorCode(%"struct.icu_69::CanonIterData"* %4, i32 %33, i32 %93, i32* dereferenceable(4) %5)
  br label %173

168:                                              ; preds = %165, %131, %38, %115, %43
  %169 = phi i32 [ %44, %43 ], [ %39, %38 ], [ %116, %131 ], [ %116, %115 ], [ %116, %165 ]
  %170 = icmp eq i32 %169, %35
  br i1 %170, label %173, label %171

171:                                              ; preds = %168
  %172 = load %struct.UMutableCPTrie*, %struct.UMutableCPTrie** %21, align 8
  tail call void @umutablecptrie_set_69(%struct.UMutableCPTrie* %172, i32 %33, i32 %169, i32* %5) #8
  br label %173

173:                                              ; preds = %167, %168, %171
  %174 = add nsw i32 %33, 1
  %175 = icmp slt i32 %33, %2
  br i1 %175, label %32, label %176

176:                                              ; preds = %173, %18, %6, %12
  ret void
}

declare %struct.UCPTrie* @umutablecptrie_buildImmutable_69(%struct.UMutableCPTrie*, i32, i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6915Normalizer2Impl13getCanonValueEi(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 18
  %4 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %3, align 8
  %5 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %4, i64 0, i32 1
  %6 = load %struct.UCPTrie*, %struct.UCPTrie** %5, align 8
  %7 = tail call i32 @ucptrie_get_69(%struct.UCPTrie* %6, i32 %1) #8
  ret i32 %7
}

declare i32 @ucptrie_get_69(%struct.UCPTrie*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZNK6icu_6915Normalizer2Impl16getCanonStartSetEi(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 18
  %4 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %3, align 8
  %5 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %4, i64 0, i32 2
  %6 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %5, i32 %1) #8
  %7 = bitcast i8* %6 to %"class.icu_69::UnicodeSet"*
  ret %"class.icu_69::UnicodeSet"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl21isCanonSegmentStarterEi(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 18
  %4 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %3, align 8
  %5 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %4, i64 0, i32 1
  %6 = load %struct.UCPTrie*, %struct.UCPTrie** %5, align 8
  %7 = tail call i32 @ucptrie_get_69(%struct.UCPTrie* %6, i32 %1) #8
  %8 = lshr i32 %7, 31
  %9 = trunc i32 %8 to i8
  %10 = xor i8 %9, 1
  ret i8 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6915Normalizer2Impl16getCanonStartSetEiRNS_10UnicodeSetE(%"class.icu_69::Normalizer2Impl"* nocapture readonly, i32, %"class.icu_69::UnicodeSet"* dereferenceable(200)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 18
  %5 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %4, align 8
  %6 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %5, i64 0, i32 1
  %7 = load %struct.UCPTrie*, %struct.UCPTrie** %6, align 8
  %8 = tail call i32 @ucptrie_get_69(%struct.UCPTrie* %7, i32 %1) #8
  %9 = and i32 %8, 2147483647
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %115, label %11

11:                                               ; preds = %3
  %12 = tail call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet5clearEv(%"class.icu_69::UnicodeSet"* %2) #8
  %13 = and i32 %8, 2097151
  %14 = and i32 %8, 2097152
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = load %"struct.icu_69::CanonIterData"*, %"struct.icu_69::CanonIterData"** %4, align 8
  %18 = getelementptr inbounds %"struct.icu_69::CanonIterData", %"struct.icu_69::CanonIterData"* %17, i64 0, i32 2
  %19 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %18, i32 %13) #8
  %20 = bitcast i8* %19 to %"class.icu_69::UnicodeSet"*
  %21 = tail call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet6addAllERKS0_(%"class.icu_69::UnicodeSet"* %2, %"class.icu_69::UnicodeSet"* dereferenceable(200) %20) #8
  br label %26

22:                                               ; preds = %11
  %23 = icmp eq i32 %13, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = tail call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEi(%"class.icu_69::UnicodeSet"* %2, i32 %13) #8
  br label %26

26:                                               ; preds = %22, %24, %16
  %27 = and i32 %8, 1073741824
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %115, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 13
  %31 = load %struct.UCPTrie*, %struct.UCPTrie** %30, align 8
  %32 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %31, i64 0, i32 1
  %33 = bitcast %union.UCPTrieData* %32 to i16**
  %34 = load i16*, i16** %33, align 8
  %35 = icmp ult i32 %1, 65536
  br i1 %35, label %36, label %46

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %31, i64 0, i32 0
  %38 = load i16*, i16** %37, align 8
  %39 = lshr i32 %1, 6
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %38, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = and i32 %1, 63
  %45 = add nuw nsw i32 %44, %43
  br label %62

46:                                               ; preds = %29
  %47 = icmp ult i32 %1, 1114112
  br i1 %47, label %48, label %58

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %31, i64 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, %1
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %31, i64 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %54, -2
  br label %62

56:                                               ; preds = %48
  %57 = tail call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %31, i32 %1) #8
  br label %62

58:                                               ; preds = %46
  %59 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %31, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = add nsw i32 %60, -1
  br label %62

62:                                               ; preds = %36, %52, %56, %58
  %63 = phi i32 [ %45, %36 ], [ %61, %58 ], [ %55, %52 ], [ %57, %56 ]
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i16, i16* %34, i64 %64
  %66 = load i16, i16* %65, align 2
  %67 = icmp eq i16 %66, 2
  br i1 %67, label %68, label %73

68:                                               ; preds = %62
  %69 = mul i32 %1, 588
  %70 = add i32 %69, -2514944
  %71 = add i32 %69, -2514357
  %72 = tail call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEii(%"class.icu_69::UnicodeSet"* %2, i32 %70, i32 %71) #8
  br label %115

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 4
  %75 = load i16, i16* %74, align 2
  %76 = icmp ugt i16 %75, %66
  br i1 %76, label %81, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %79 = load i16, i16* %78, align 2
  %80 = icmp ugt i16 %79, %66
  br i1 %80, label %102, label %81

81:                                               ; preds = %77, %73
  %82 = add i16 %66, -2
  %83 = icmp ugt i16 %82, -1027
  br i1 %83, label %113, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 12
  %86 = load i16, i16* %85, align 2
  %87 = icmp ugt i16 %86, %66
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %90 = load i16*, i16** %89, align 8
  %91 = lshr i16 %66, 1
  %92 = zext i16 %91 to i64
  %93 = getelementptr inbounds i16, i16* %90, i64 %92
  br label %113

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 14
  %96 = load i16*, i16** %95, align 8
  %97 = zext i16 %66 to i64
  %98 = getelementptr inbounds i16, i16* %96, i64 %97
  %99 = zext i16 %86 to i64
  %100 = sub nsw i64 0, %99
  %101 = getelementptr inbounds i16, i16* %98, i64 %100
  br label %113

102:                                              ; preds = %77
  %103 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %0, i64 0, i32 15
  %104 = load i16*, i16** %103, align 8
  %105 = lshr i16 %66, 1
  %106 = zext i16 %105 to i64
  %107 = getelementptr inbounds i16, i16* %104, i64 %106
  %108 = getelementptr inbounds i16, i16* %107, i64 1
  %109 = load i16, i16* %107, align 2
  %110 = and i16 %109, 31
  %111 = zext i16 %110 to i64
  %112 = getelementptr inbounds i16, i16* %108, i64 %111
  br label %113

113:                                              ; preds = %81, %88, %94, %102
  %114 = phi i16* [ %112, %102 ], [ %93, %88 ], [ %101, %94 ], [ null, %81 ]
  tail call void @_ZNK6icu_6915Normalizer2Impl13addCompositesEPKtRNS_10UnicodeSetE(%"class.icu_69::Normalizer2Impl"* %0, i16* %114, %"class.icu_69::UnicodeSet"* dereferenceable(200) %2)
  br label %115

115:                                              ; preds = %26, %113, %68, %3
  %116 = phi i8 [ 0, %3 ], [ 1, %68 ], [ 1, %113 ], [ 1, %26 ]
  ret i8 %116
}

declare dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet5clearEv(%"class.icu_69::UnicodeSet"*) unnamed_addr #1

declare dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet6addAllERKS0_(%"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"* dereferenceable(200)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @unorm2_swap_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #0 {
  %6 = tail call i32 @udata_swapDataHeader_69(%struct.UDataSwapper* %0, i8* %1, i32 %2, i8* %3, i32* %4) #8
  %7 = icmp eq i32* %4, null
  br i1 %7, label %117, label %8

8:                                                ; preds = %5
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %117

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %1, i64 16
  %13 = load i8, i8* %12, align 2
  %14 = getelementptr inbounds i8, i8* %1, i64 12
  %15 = load i8, i8* %14, align 2
  %16 = icmp eq i8 %15, 78
  %17 = getelementptr inbounds i8, i8* %1, i64 13
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 114
  %20 = and i1 %16, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %11
  %22 = getelementptr inbounds i8, i8* %1, i64 14
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, 109
  br i1 %24, label %25, label %32

25:                                               ; preds = %21
  %26 = getelementptr inbounds i8, i8* %1, i64 15
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 50
  %29 = add i8 %13, -1
  %30 = icmp ult i8 %29, 4
  %31 = and i1 %30, %28
  br i1 %31, label %43, label %32

32:                                               ; preds = %11, %25, %21
  %33 = phi i8 [ 114, %25 ], [ 114, %21 ], [ %18, %11 ]
  %34 = zext i8 %15 to i32
  %35 = zext i8 %33 to i32
  %36 = getelementptr inbounds i8, i8* %1, i64 14
  %37 = load i8, i8* %36, align 2
  %38 = zext i8 %37 to i32
  %39 = getelementptr inbounds i8, i8* %1, i64 15
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = zext i8 %13 to i32
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.2, i64 0, i64 0), i32 %34, i32 %35, i32 %38, i32 %41, i32 %42) #8
  store i32 16, i32* %4, align 4
  br label %117

43:                                               ; preds = %25
  %44 = sext i32 %6 to i64
  %45 = getelementptr inbounds i8, i8* %1, i64 %44
  %46 = getelementptr inbounds i8, i8* %3, i64 %44
  %47 = bitcast i8* %45 to i32*
  %48 = icmp sgt i32 %2, -1
  br i1 %48, label %49, label %57

49:                                               ; preds = %43
  %50 = icmp eq i8 %13, 1
  %51 = icmp eq i8 %13, 2
  %52 = select i1 %51, i32 60, i32 76
  %53 = select i1 %50, i32 56, i32 %52
  %54 = sub nsw i32 %2, %6
  %55 = icmp slt i32 %54, %53
  br i1 %55, label %56, label %57

56:                                               ; preds = %49
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i32 %54) #8
  store i32 8, i32* %4, align 4
  br label %117

57:                                               ; preds = %49, %43
  %58 = phi i32 [ %54, %49 ], [ %2, %43 ]
  %59 = load i32, i32* %47, align 4
  %60 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %59) #8
  %61 = getelementptr inbounds i8, i8* %45, i64 4
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %63) #8
  %65 = getelementptr inbounds i8, i8* %45, i64 8
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %67) #8
  %69 = getelementptr inbounds i8, i8* %45, i64 12
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %71) #8
  %73 = getelementptr inbounds i8, i8* %45, i64 16
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %75) #8
  %77 = getelementptr inbounds i8, i8* %45, i64 20
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %79) #8
  %81 = getelementptr inbounds i8, i8* %45, i64 24
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %83) #8
  %85 = getelementptr inbounds i8, i8* %45, i64 28
  %86 = bitcast i8* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = tail call i32 @udata_readInt32_69(%struct.UDataSwapper* %0, i32 %87) #8
  %89 = icmp sgt i32 %58, -1
  br i1 %89, label %90, label %115

90:                                               ; preds = %57
  %91 = icmp slt i32 %58, %88
  br i1 %91, label %92, label %93

92:                                               ; preds = %90
  tail call void (%struct.UDataSwapper*, i8*, ...) @udata_printError_69(%struct.UDataSwapper* %0, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.4, i64 0, i64 0), i32 %58) #8
  store i32 8, i32* %4, align 4
  br label %117

93:                                               ; preds = %90
  %94 = icmp eq i8* %1, %3
  br i1 %94, label %97, label %95

95:                                               ; preds = %93
  %96 = sext i32 %88 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %45, i64 %96, i1 false)
  br label %97

97:                                               ; preds = %93, %95
  %98 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 10
  %99 = bitcast {}** %98 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %100 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %99, align 8
  %101 = tail call i32 %100(%struct.UDataSwapper* %0, i8* %45, i32 %60, i8* %46, i32* nonnull %4) #8
  %102 = sext i32 %60 to i64
  %103 = getelementptr inbounds i8, i8* %45, i64 %102
  %104 = sub nsw i32 %64, %60
  %105 = getelementptr inbounds i8, i8* %46, i64 %102
  %106 = tail call i32 @utrie_swapAnyVersion_69(%struct.UDataSwapper* %0, i8* %103, i32 %104, i8* %105, i32* nonnull %4) #8
  %107 = getelementptr inbounds %struct.UDataSwapper, %struct.UDataSwapper* %0, i64 0, i32 9
  %108 = bitcast {}** %107 to i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)**
  %109 = load i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)*, i32 (%struct.UDataSwapper*, i8*, i32, i8*, i32*)** %108, align 8
  %110 = sext i32 %64 to i64
  %111 = getelementptr inbounds i8, i8* %45, i64 %110
  %112 = sub nsw i32 %68, %64
  %113 = getelementptr inbounds i8, i8* %46, i64 %110
  %114 = tail call i32 %109(%struct.UDataSwapper* %0, i8* %111, i32 %112, i8* %113, i32* nonnull %4) #8
  br label %115

115:                                              ; preds = %97, %57
  %116 = add nsw i32 %88, %6
  br label %117

117:                                              ; preds = %32, %115, %92, %56, %5, %8
  %118 = phi i32 [ 0, %8 ], [ 0, %5 ], [ 0, %32 ], [ 0, %56 ], [ 0, %92 ], [ %116, %115 ]
  ret i32 %118
}

declare i32 @udata_swapDataHeader_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #1

declare void @udata_printError_69(%struct.UDataSwapper*, i8*, ...) local_unnamed_addr #1

declare i32 @udata_readInt32_69(%struct.UDataSwapper*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @utrie_swapAnyVersion_69(%struct.UDataSwapper*, i8*, i32, i8*, i32*) local_unnamed_addr #1

declare i8* @_ZNK6icu_697UObject17getDynamicClassIDEv(%"class.icu_69::UObject"*) unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

declare void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"*) local_unnamed_addr #1

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiPKDsii(%"class.icu_69::UnicodeString"*, i32, i32, i16*, i32, i32) local_unnamed_addr #1

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString8doAppendEPKDsii(%"class.icu_69::UnicodeString"*, i16*, i32, i32) local_unnamed_addr #1

declare void @_ZN6icu_6912ByteSinkUtil15appendCodePointEiiRNS_8ByteSinkEPNS_5EditsE(i32, i32, %"class.icu_69::ByteSink"* dereferenceable(8), %"class.icu_69::Edits"*) local_unnamed_addr #1

declare i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"*, i32) local_unnamed_addr #1

declare signext i8 @_ZN6icu_6920umtx_initImplPreInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN6icu_6921umtx_initImplPostInitERNS_9UInitOnceE(%"struct.icu_69::UInitOnce"* dereferenceable(8)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i32 -2144019171}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !11}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !17, !11}
!17 = !{!"llvm.loop.unroll.runtime.disable"}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !11}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !11}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !11}
!32 = distinct !{!32, !3}
!33 = distinct !{!33, !11}
