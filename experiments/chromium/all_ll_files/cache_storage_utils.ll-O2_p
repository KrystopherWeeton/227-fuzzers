; ModuleID = '../../third_party/blink/common/cache_storage/cache_storage_utils.cc'
source_filename = "../../third_party/blink/common/cache_storage/cache_storage_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@_ZZN5blink13cache_storage13CreateTraceIdEvE3seq = internal global { { { i32 } } } zeroinitializer, align 4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink13cache_storage13CreateTraceIdEv() local_unnamed_addr #0 {
  %1 = tail call i32 @_ZN4base21GetUniqueIdForProcessEv() #2
  %2 = zext i32 %1 to i64
  %3 = shl nuw i64 %2, 32
  %4 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN5blink13cache_storage13CreateTraceIdEvE3seq, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %5 = zext i32 %4 to i64
  %6 = or i64 %3, %5
  ret i64 %6
}

declare i32 @_ZN4base21GetUniqueIdForProcessEv() local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
