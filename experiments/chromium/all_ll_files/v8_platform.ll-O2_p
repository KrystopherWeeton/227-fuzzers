; ModuleID = '../../gin/v8_platform.cc'
source_filename = "../../gin/v8_platform.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [16 x i8] }
%"class.base::LazyInstance.1" = type { i64, [8 x i8] }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.base::LazyInstance.74" = type { i64, [8 x i8] }
%"class.base::LazyInstance.101" = type { i64, [88 x i8] }
%"class.gin::V8Platform" = type { %"class.v8::Platform", %"class.std::__1::unique_ptr" }
%"class.v8::Platform" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gin::V8Platform::TracingControllerImpl"* }
%"class.gin::V8Platform::TracingControllerImpl" = type { %"class.v8::TracingController" }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.gin::(anonymous namespace)::PageAllocator" = type { %"class.v8::PageAllocator" }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.v8::Isolate" = type { i8 }
%"class.gin::PerIsolateData" = type { %"class.v8::Isolate"*, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::map", %"class.std::__1::map.8", %"class.std::__1::map.17", %"class.std::__1::map.28", %"class.std::__1::shared_ptr.37" }
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i64 }
%"class.std::__1::map.8" = type { %"class.std::__1::__tree.9" }
%"class.std::__1::__tree.9" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.17" = type { %"class.std::__1::__tree.18" }
%"class.std::__1::__tree.18" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::map.28" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::shared_ptr.37" = type { %"class.gin::V8ForegroundTaskRunnerBase"*, %"class.std::__1::__shared_weak_count"* }
%"class.gin::V8ForegroundTaskRunnerBase" = type { %"class.v8::TaskRunner", %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.gin::V8IdleTaskRunner"* }
%"class.gin::V8IdleTaskRunner" = type { i32 (...)** }
%"class.base::ThreadPoolInstance" = type { i32 (...)** }
%"class.v8::Task" = type { i32 (...)** }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::JobTask" = type { i32 (...)** }
%"class.base::JobHandle" = type { %class.scoped_refptr.63 }
%class.scoped_refptr.63 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.64" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.73" }
%"class.base::time_internal::TimeBase.73" = type { i64 }
%"class.gin::(anonymous namespace)::TimeClamper" = type { i64 }
%"class.base::debug::StackTrace" = type { [250 x i8*], i64 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.81", i64, i64 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.92" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::TracingController::TraceStateObserver" = type { i32 (...)** }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::trace_event::TraceLog" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::Lock", %"class.base::Lock", i8, i32, %"class.std::__1::unique_ptr.126", %"class.std::__1::vector.132", %"class.base::Lock", i8, %"class.std::__1::vector.140", %"class.std::__1::map.147", %"class.std::__1::vector.158", %"class.std::__1::basic_string", %"class.std::__1::unordered_map", i32, [4 x i8], %"class.std::__1::unordered_map.191", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.215", %"class.std::__1::unordered_map.239", %"class.base::TimeTicks", i64, i32, %"class.base::TimeDelta", %"struct.std::__1::atomic.267", %"class.base::trace_event::TraceConfig", %"class.std::__1::vector.317", %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalBoolean", %"class.base::ThreadLocalBoolean", %"class.std::__1::unordered_map.375", %"class.std::__1::unique_ptr.399", i64, %"class.base::RepeatingCallback.405", %class.scoped_refptr.406, %"class.base::RepeatingCallback.408", %"class.base::RepeatingCallback.409", i64, i8, %"struct.std::__1::atomic.410", %"struct.std::__1::atomic.416", %"struct.std::__1::atomic.420", {}* }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.base::trace_event::TraceBuffer"* }
%"class.base::trace_event::TraceBuffer" = type opaque
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"class.std::__1::unique_ptr.134"*, %"class.std::__1::unique_ptr.134"*, %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::unique_ptr.134" = type opaque
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.std::__1::unique_ptr.134"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.base::trace_event::TraceLog::EnabledStateObserver"**, %"class.std::__1::__compressed_pair.142" }
%"class.base::trace_event::TraceLog::EnabledStateObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver"** }
%"class.std::__1::map.147" = type { %"class.std::__1::__tree.148" }
%"class.std::__1::__tree.148" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"class.std::__1::unique_ptr.160"*, %"class.std::__1::unique_ptr.160"*, %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::unique_ptr.160" = type opaque
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::unique_ptr.160"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.191" = type { %"class.std::__1::__hash_table.192" }
%"class.std::__1::__hash_table.192" = type <{ %"class.std::__1::unique_ptr.193", %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.211", [4 x i8] }>
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195", %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::__hash_node_base.196"** }
%"struct.std::__1::__hash_node_base.196" = type { %"struct.std::__1::__hash_node_base.196"* }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.std::__1::__bucket_list_deallocator.198" }
%"class.std::__1::__bucket_list_deallocator.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.std::__1::__hash_node_base.196" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { float }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.166" }
%"class.std::__1::__hash_table.166" = type <{ %"class.std::__1::unique_ptr.167", %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.186", [4 x i8] }>
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169", %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base.170"** }
%"struct.std::__1::__hash_node_base.170" = type { %"struct.std::__1::__hash_node_base.170"* }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.std::__1::__bucket_list_deallocator.172" }
%"class.std::__1::__bucket_list_deallocator.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base.170" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::unordered_map.215" = type { %"class.std::__1::__hash_table.216" }
%"class.std::__1::__hash_table.216" = type <{ %"class.std::__1::unique_ptr.217", %"class.std::__1::__compressed_pair.227", %"class.std::__1::__compressed_pair.232", %"class.std::__1::__compressed_pair.235", [4 x i8] }>
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219", %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::__hash_node_base.220"** }
%"struct.std::__1::__hash_node_base.220" = type { %"struct.std::__1::__hash_node_base.220"* }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.std::__1::__bucket_list_deallocator.222" }
%"class.std::__1::__bucket_list_deallocator.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.std::__1::__hash_node_base.220" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::unordered_map.239" = type { %"class.std::__1::__hash_table.240" }
%"class.std::__1::__hash_table.240" = type <{ %"class.std::__1::unique_ptr.241", %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.256", %"class.std::__1::__compressed_pair.261", [4 x i8] }>
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243", %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.std::__1::__hash_node_base.244"** }
%"struct.std::__1::__hash_node_base.244" = type { %"struct.std::__1::__hash_node_base.244"* }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.std::__1::__bucket_list_deallocator.246" }
%"class.std::__1::__bucket_list_deallocator.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::__hash_node_base.244" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.base::TimeDelta" = type { i64 }
%"struct.std::__1::atomic.267" = type { %"struct.std::__1::__atomic_base.268" }
%"struct.std::__1::__atomic_base.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__cxx_atomic_impl.270" }
%"struct.std::__1::__cxx_atomic_impl.270" = type { %"struct.std::__1::__cxx_atomic_base_impl.271" }
%"struct.std::__1::__cxx_atomic_base_impl.271" = type { i32 }
%"class.base::trace_event::TraceConfig" = type { i32, i64, i64, i8, %"class.base::trace_event::TraceConfigCategoryFilter", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig", %"class.base::trace_event::TraceConfig::ProcessFilterConfig", %"class.std::__1::vector.317", %"class.std::__1::unordered_set.352", %"class.std::__1::unordered_set.352" }
%"class.base::trace_event::TraceConfigCategoryFilter" = type { %"class.std::__1::vector.272", %"class.std::__1::vector.272", %"class.std::__1::vector.272" }
%"class.std::__1::vector.272" = type { %"class.std::__1::__vector_base.273" }
%"class.std::__1::__vector_base.273" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.std::__1::basic_string"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig" = type <{ %"class.std::__1::set", %"class.std::__1::vector.288", %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler", [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.279" }
%"class.std::__1::__tree.279" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"*, %"class.std::__1::__compressed_pair.290" }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.base::trace_event::TraceConfig::MemoryDumpConfig::Trigger"* }
%"struct.base::trace_event::TraceConfig::MemoryDumpConfig::HeapProfiler" = type { i32 }
%"class.base::trace_event::TraceConfig::ProcessFilterConfig" = type { %"class.std::__1::unordered_set.295" }
%"class.std::__1::unordered_set.295" = type { %"class.std::__1::__hash_table.296" }
%"class.std::__1::__hash_table.296" = type <{ %"class.std::__1::unique_ptr.297", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.314", [4 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299", %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.std::__1::__hash_node_base.300"** }
%"struct.std::__1::__hash_node_base.300" = type { %"struct.std::__1::__hash_node_base.300"* }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.std::__1::__bucket_list_deallocator.302" }
%"class.std::__1::__bucket_list_deallocator.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.300" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::unordered_set.352" = type { %"class.std::__1::__hash_table.353" }
%"class.std::__1::__hash_table.353" = type <{ %"class.std::__1::unique_ptr.354", %"class.std::__1::__compressed_pair.364", %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.371", [4 x i8] }>
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356", %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"struct.std::__1::__hash_node_base.357"** }
%"struct.std::__1::__hash_node_base.357" = type { %"struct.std::__1::__hash_node_base.357"* }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::__bucket_list_deallocator.359" }
%"class.std::__1::__bucket_list_deallocator.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.357" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::vector.317" = type { %"class.std::__1::__vector_base.318" }
%"class.std::__1::__vector_base.318" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.base::trace_event::TraceConfig::EventFilterConfig"*, %"class.std::__1::__compressed_pair.347" }
%"class.base::trace_event::TraceConfig::EventFilterConfig" = type { %"class.std::__1::basic_string", %"class.base::trace_event::TraceConfigCategoryFilter", %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.319" }
%"union.absl::variant_internal::DestructibleUnionImpl.319" = type { %"union.absl::variant_internal::DestructibleUnionImpl.320" }
%"union.absl::variant_internal::DestructibleUnionImpl.320" = type { %"union.absl::variant_internal::DestructibleUnionImpl.321" }
%"union.absl::variant_internal::DestructibleUnionImpl.321" = type { %"union.absl::variant_internal::DestructibleUnionImpl.322" }
%"union.absl::variant_internal::DestructibleUnionImpl.322" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.base::trace_event::TraceConfig::EventFilterConfig"* }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalBoolean" = type { %"class.base::ThreadLocalPointer.374" }
%"class.base::ThreadLocalPointer.374" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.std::__1::unordered_map.375" = type { %"class.std::__1::__hash_table.376" }
%"class.std::__1::__hash_table.376" = type <{ %"class.std::__1::unique_ptr.377", %"class.std::__1::__compressed_pair.387", %"class.std::__1::__compressed_pair.392", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379", %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"struct.std::__1::__hash_node_base.380"** }
%"struct.std::__1::__hash_node_base.380" = type { %"struct.std::__1::__hash_node_base.380"* }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.std::__1::__bucket_list_deallocator.382" }
%"class.std::__1::__bucket_list_deallocator.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"struct.std::__1::__hash_node_base.380" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.base::trace_event::TraceBufferChunk"* }
%"class.base::trace_event::TraceBufferChunk" = type opaque
%"class.base::RepeatingCallback.405" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.406 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.407" }>
%"class.base::RefCountedThreadSafe.407" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.408" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.409" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.410" = type { %"struct.std::__1::__atomic_base.411" }
%"struct.std::__1::__atomic_base.411" = type { %"struct.std::__1::__cxx_atomic_impl.412" }
%"struct.std::__1::__cxx_atomic_impl.412" = type { %"struct.std::__1::__cxx_atomic_base_impl.413" }
%"struct.std::__1::__cxx_atomic_base_impl.413" = type { void (%"class.base::trace_event::TraceEvent"*, i1, %"struct.base::trace_event::TraceEventHandle"*)* }
%"class.base::trace_event::TraceEvent" = type <{ %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::trace_event::ThreadInstructionCount", %"class.base::trace_event::ThreadInstructionDelta", i8*, i64, i8*, i8*, %"class.base::trace_event::StringStorage", %"class.base::trace_event::TraceArguments", %union.anon.415, i32, i64, i8, [7 x i8] }>
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.414" }
%"class.base::time_internal::TimeBase.414" = type { i64 }
%"class.base::trace_event::ThreadInstructionCount" = type { i64 }
%"class.base::trace_event::ThreadInstructionDelta" = type { i64 }
%"class.base::trace_event::StringStorage" = type { %"struct.base::trace_event::StringStorage::Data"* }
%"struct.base::trace_event::StringStorage::Data" = type <{ i64, [1 x i8], [7 x i8] }>
%union.anon.415 = type { i32 }
%"struct.base::trace_event::TraceEventHandle" = type { i32, i32 }
%"struct.std::__1::atomic.416" = type { %"struct.std::__1::__atomic_base.417" }
%"struct.std::__1::__atomic_base.417" = type { %"struct.std::__1::__cxx_atomic_impl.418" }
%"struct.std::__1::__cxx_atomic_impl.418" = type { %"struct.std::__1::__cxx_atomic_base_impl.419" }
%"struct.std::__1::__cxx_atomic_base_impl.419" = type { void ()* }
%"struct.std::__1::atomic.420" = type { %"struct.std::__1::__atomic_base.421" }
%"struct.std::__1::__atomic_base.421" = type { %"struct.std::__1::__cxx_atomic_impl.422" }
%"struct.std::__1::__cxx_atomic_impl.422" = type { %"struct.std::__1::__cxx_atomic_base_impl.423" }
%"struct.std::__1::__cxx_atomic_base_impl.423" = type { void (i8*, i8*, i64, i32, i1, %"class.base::TimeTicks"*, %"class.base::ThreadTicks"*, i64)* }
%"class.gin::(anonymous namespace)::EnabledStateObserverImpl" = type { %"class.base::trace_event::TraceLog::EnabledStateObserver", %"class.base::Lock", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.117", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430", %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"class.v8::TracingController::TraceStateObserver"* }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.113"*, i8, [7 x i8] }>
%"class.std::__1::allocator.113" = type { i8 }
%"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.75" }
%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender" = type { i32 (...)** }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }
%"class.v8::PageAllocator::SharedMemory" = type { i32 (...)** }
%"class.base::JobDelegate" = type <{ %"class.base::internal::JobTaskSource"*, %"class.base::internal::PooledTaskRunnerDelegate"*, i8, [7 x i8] }>
%"class.base::internal::PooledTaskRunnerDelegate" = type opaque
%"class.gin::(anonymous namespace)::JobDelegateImpl" = type { %"class.v8::JobDelegate", %"class.base::JobDelegate"* }
%"class.v8::JobDelegate" = type { i32 (...)** }
%"class.gin::(anonymous namespace)::JobHandleImpl" = type { %"class.v8::JobHandle", %"class.base::JobHandle" }

$_ZN2v88Platform24OnCriticalMemoryPressureEm = comdat any

$_ZN2v88Platform19DumpWithoutCrashingEv = comdat any

$_ZN2v817TracingControllerD2Ev = comdat any

$_ZN3gin10V8Platform21TracingControllerImplD0Ev = comdat any

$_ZN3gin10V8Platform21TracingControllerImpl23GetCategoryGroupEnabledEPKc = comdat any

$_ZN3gin10V8Platform21TracingControllerImpl13AddTraceEventEcPKhPKcS5_mmiPS5_S3_PKmPNSt3__110unique_ptrIN2v824ConvertableToTraceFormatENS9_14default_deleteISC_EEEEj = comdat any

$_ZN3gin10V8Platform21TracingControllerImpl26AddTraceEventWithTimestampEcPKhPKcS5_mmiPS5_S3_PKmPNSt3__110unique_ptrIN2v824ConvertableToTraceFormatENS9_14default_deleteISC_EEEEjl = comdat any

$_ZN3gin10V8Platform21TracingControllerImpl24UpdateTraceEventDurationEPKhPKcm = comdat any

$_ZN3gin10V8Platform21TracingControllerImpl21AddTraceStateObserverEPN2v817TracingController18TraceStateObserverE = comdat any

$_ZN3gin10V8Platform21TracingControllerImpl24RemoveTraceStateObserverEPN2v817TracingController18TraceStateObserverE = comdat any

$_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE = comdat any

$_ZN2v813PageAllocatorD2Ev = comdat any

$_ZN2v813PageAllocator29ReserveForSharedMemoryMappingEPvm = comdat any

$_ZN2v813PageAllocator19AllocateSharedPagesEmPKv = comdat any

$_ZN2v813PageAllocator22CanAllocateSharedPagesEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZTVN3gin10V8Platform21TracingControllerImplE = comdat any

$_ZZN4base11trace_event14TraceArgumentsC1INSt3__110unique_ptrIN2v824ConvertableToTraceFormatENS3_14default_deleteIS6_EEEEEEiPKPKcPKhPKyPT_E8max_args = comdat any

@_ZN3gin12_GLOBAL__N_113g_v8_platformE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZTVN3gin10V8PlatformE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gin::V8Platform"*)* @_ZN3gin10V8PlatformD2Ev to i8*), i8* bitcast (void (%"class.gin::V8Platform"*)* @_ZN3gin10V8PlatformD0Ev to i8*), i8* bitcast (%"class.v8::PageAllocator"* (%"class.gin::V8Platform"*)* @_ZN3gin10V8Platform16GetPageAllocatorEv to i8*), i8* bitcast (void (%"class.gin::V8Platform"*)* @_ZN3gin10V8Platform24OnCriticalMemoryPressureEv to i8*), i8* bitcast (i1 (%"class.v8::Platform"*, i64)* @_ZN2v88Platform24OnCriticalMemoryPressureEm to i8*), i8* bitcast (i32 (%"class.gin::V8Platform"*)* @_ZN3gin10V8Platform21NumberOfWorkerThreadsEv to i8*), i8* bitcast ({ %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } (%"class.gin::V8Platform"*, %"class.v8::Isolate"*)* @_ZN3gin10V8Platform23GetForegroundTaskRunnerEPN2v87IsolateE to i8*), i8* bitcast (void (%"class.gin::V8Platform"*, %"class.v8::Task"*)* @_ZN3gin10V8Platform18CallOnWorkerThreadENSt3__110unique_ptrIN2v84TaskENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.gin::V8Platform"*, %"class.v8::Task"*)* @_ZN3gin10V8Platform30CallBlockingTaskOnWorkerThreadENSt3__110unique_ptrIN2v84TaskENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.gin::V8Platform"*, %"class.v8::Task"*)* @_ZN3gin10V8Platform33CallLowPriorityTaskOnWorkerThreadENSt3__110unique_ptrIN2v84TaskENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.gin::V8Platform"*, %"class.v8::Task"*, double)* @_ZN3gin10V8Platform25CallDelayedOnWorkerThreadENSt3__110unique_ptrIN2v84TaskENS1_14default_deleteIS4_EEEEd to i8*), i8* bitcast (i1 (%"class.gin::V8Platform"*, %"class.v8::Isolate"*)* @_ZN3gin10V8Platform16IdleTasksEnabledEPN2v87IsolateE to i8*), i8* bitcast (%"class.v8::JobHandle"* (%"class.gin::V8Platform"*, i8, %"class.v8::JobTask"*)* @_ZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS1_7JobTaskENS3_14default_deleteIS5_EEEE to i8*), i8* bitcast (double (%"class.gin::V8Platform"*)* @_ZN3gin10V8Platform27MonotonicallyIncreasingTimeEv to i8*), i8* bitcast (double (%"class.gin::V8Platform"*)* @_ZN3gin10V8Platform22CurrentClockTimeMillisEv to i8*), i8* bitcast (void ()* (%"class.gin::V8Platform"*)* @_ZN3gin10V8Platform20GetStackTracePrinterEv to i8*), i8* bitcast (%"class.v8::TracingController"* (%"class.gin::V8Platform"*)* @_ZN3gin10V8Platform20GetTracingControllerEv to i8*), i8* bitcast (void (%"class.v8::Platform"*)* @_ZN2v88Platform19DumpWithoutCrashingEv to i8*)] }, align 8
@_ZN3gin12_GLOBAL__N_116g_page_allocatorE = internal global %"class.base::LazyInstance.1" zeroinitializer, align 8
@_ZN3gin12_GLOBAL__N_118kDefaultTaskTraitsE = internal constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 1, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str = private unnamed_addr constant [19 x i8] c"CallOnWorkerThread\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"../../gin/v8_platform.cc\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"CallBlockingTaskOnWorkerThread\00", align 1
@_ZN3gin12_GLOBAL__N_119kBlockingTaskTraitsE = internal constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"CallLowPriorityTaskOnWorkerThread\00", align 1
@_ZN3gin12_GLOBAL__N_122kLowPriorityTaskTraitsE = internal constant %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 0, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"CallDelayedOnWorkerThread\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"PostJob\00", align 1
@_ZN3gin12_GLOBAL__N_114g_time_clamperE = internal global %"class.base::LazyInstance.74" zeroinitializer, align 8
@_ZTVN3gin10V8Platform21TracingControllerImplE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::TracingController"*)* @_ZN2v817TracingControllerD2Ev to i8*), i8* bitcast (void (%"class.gin::V8Platform::TracingControllerImpl"*)* @_ZN3gin10V8Platform21TracingControllerImplD0Ev to i8*), i8* bitcast (i8* (%"class.gin::V8Platform::TracingControllerImpl"*, i8*)* @_ZN3gin10V8Platform21TracingControllerImpl23GetCategoryGroupEnabledEPKc to i8*), i8* bitcast (i64 (%"class.gin::V8Platform::TracingControllerImpl"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.75"*, i32)* @_ZN3gin10V8Platform21TracingControllerImpl13AddTraceEventEcPKhPKcS5_mmiPS5_S3_PKmPNSt3__110unique_ptrIN2v824ConvertableToTraceFormatENS9_14default_deleteISC_EEEEj to i8*), i8* bitcast (i64 (%"class.gin::V8Platform::TracingControllerImpl"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.75"*, i32, i64)* @_ZN3gin10V8Platform21TracingControllerImpl26AddTraceEventWithTimestampEcPKhPKcS5_mmiPS5_S3_PKmPNSt3__110unique_ptrIN2v824ConvertableToTraceFormatENS9_14default_deleteISC_EEEEjl to i8*), i8* bitcast (void (%"class.gin::V8Platform::TracingControllerImpl"*, i8*, i8*, i64)* @_ZN3gin10V8Platform21TracingControllerImpl24UpdateTraceEventDurationEPKhPKcm to i8*), i8* bitcast (void (%"class.gin::V8Platform::TracingControllerImpl"*, %"class.v8::TracingController::TraceStateObserver"*)* @_ZN3gin10V8Platform21TracingControllerImpl21AddTraceStateObserverEPN2v817TracingController18TraceStateObserverE to i8*), i8* bitcast (void (%"class.gin::V8Platform::TracingControllerImpl"*, %"class.v8::TracingController::TraceStateObserver"*)* @_ZN3gin10V8Platform21TracingControllerImpl24RemoveTraceStateObserverEPN2v817TracingController18TraceStateObserverE to i8*)] }, comdat, align 8
@_ZZN4base11trace_event14TraceArgumentsC1INSt3__110unique_ptrIN2v824ConvertableToTraceFormatENS3_14default_deleteIS6_EEEEEEiPKPKcPKhPKyPT_E8max_args = linkonce_odr hidden local_unnamed_addr global i32 2, comdat, align 4
@_ZTVN3gin12_GLOBAL__N_131ConvertableToTraceFormatWrapperE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"*)* @_ZN3gin12_GLOBAL__N_131ConvertableToTraceFormatWrapperD2Ev to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"*)* @_ZN3gin12_GLOBAL__N_131ConvertableToTraceFormatWrapperD0Ev to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"*, %"class.std::__1::basic_string"*)* @_ZNK3gin12_GLOBAL__N_131ConvertableToTraceFormatWrapper19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*)* @_ZN4base11trace_event24ConvertableToTraceFormat13AppendToProtoEPNS1_13ProtoAppenderE to i8*), i8* bitcast (void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event24ConvertableToTraceFormat27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, align 8
@_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE = internal global %"class.base::LazyInstance.101" zeroinitializer, align 8
@_ZTVN3gin12_GLOBAL__N_124EnabledStateObserverImplE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gin::(anonymous namespace)::EnabledStateObserverImpl"*)* @_ZN3gin12_GLOBAL__N_124EnabledStateObserverImplD2Ev to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::EnabledStateObserverImpl"*)* @_ZN3gin12_GLOBAL__N_124EnabledStateObserverImplD0Ev to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::EnabledStateObserverImpl"*)* @_ZN3gin12_GLOBAL__N_124EnabledStateObserverImpl17OnTraceLogEnabledEv to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::EnabledStateObserverImpl"*)* @_ZN3gin12_GLOBAL__N_124EnabledStateObserverImpl18OnTraceLogDisabledEv to i8*)] }, align 8
@_ZTVN3gin12_GLOBAL__N_113PageAllocatorE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::PageAllocator"*)* @_ZN2v813PageAllocatorD2Ev to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::PageAllocator"*)* @_ZN3gin12_GLOBAL__N_113PageAllocatorD0Ev to i8*), i8* bitcast (i64 (%"class.gin::(anonymous namespace)::PageAllocator"*)* @_ZN3gin12_GLOBAL__N_113PageAllocator16AllocatePageSizeEv to i8*), i8* bitcast (i64 (%"class.gin::(anonymous namespace)::PageAllocator"*)* @_ZN3gin12_GLOBAL__N_113PageAllocator14CommitPageSizeEv to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::PageAllocator"*, i64)* @_ZN3gin12_GLOBAL__N_113PageAllocator17SetRandomMmapSeedEl to i8*), i8* bitcast (i8* (%"class.gin::(anonymous namespace)::PageAllocator"*)* @_ZN3gin12_GLOBAL__N_113PageAllocator17GetRandomMmapAddrEv to i8*), i8* bitcast (i8* (%"class.gin::(anonymous namespace)::PageAllocator"*, i8*, i64, i64, i32)* @_ZN3gin12_GLOBAL__N_113PageAllocator13AllocatePagesEPvmmN2v813PageAllocator10PermissionE to i8*), i8* bitcast (i1 (%"class.gin::(anonymous namespace)::PageAllocator"*, i8*, i64)* @_ZN3gin12_GLOBAL__N_113PageAllocator9FreePagesEPvm to i8*), i8* bitcast (i1 (%"class.gin::(anonymous namespace)::PageAllocator"*, i8*, i64, i64)* @_ZN3gin12_GLOBAL__N_113PageAllocator12ReleasePagesEPvmm to i8*), i8* bitcast (i1 (%"class.gin::(anonymous namespace)::PageAllocator"*, i8*, i64, i32)* @_ZN3gin12_GLOBAL__N_113PageAllocator14SetPermissionsEPvmN2v813PageAllocator10PermissionE to i8*), i8* bitcast (i1 (%"class.gin::(anonymous namespace)::PageAllocator"*, i8*, i64)* @_ZN3gin12_GLOBAL__N_113PageAllocator18DiscardSystemPagesEPvm to i8*), i8* bitcast (i1 (%"class.v8::PageAllocator"*, i8*, i64)* @_ZN2v813PageAllocator29ReserveForSharedMemoryMappingEPvm to i8*), i8* bitcast (%"class.v8::PageAllocator::SharedMemory"* (%"class.v8::PageAllocator"*, i64, i8*)* @_ZN2v813PageAllocator19AllocateSharedPagesEmPKv to i8*), i8* bitcast (i1 (%"class.v8::PageAllocator"*)* @_ZN2v813PageAllocator22CanAllocateSharedPagesEv to i8*)] }, align 8
@_ZTVN3gin12_GLOBAL__N_115JobDelegateImplE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.gin::(anonymous namespace)::JobDelegateImpl"*)* @_ZN3gin12_GLOBAL__N_115JobDelegateImpl11ShouldYieldEv to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::JobDelegateImpl"*)* @_ZN3gin12_GLOBAL__N_115JobDelegateImpl25NotifyConcurrencyIncreaseEv to i8*), i8* bitcast (i8 (%"class.gin::(anonymous namespace)::JobDelegateImpl"*)* @_ZN3gin12_GLOBAL__N_115JobDelegateImpl9GetTaskIdEv to i8*), i8* bitcast (i1 (%"class.gin::(anonymous namespace)::JobDelegateImpl"*)* @_ZNK3gin12_GLOBAL__N_115JobDelegateImpl15IsJoiningThreadEv to i8*)] }, align 8
@_ZTVN3gin12_GLOBAL__N_113JobHandleImplE = internal unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gin::(anonymous namespace)::JobHandleImpl"*)* @_ZN3gin12_GLOBAL__N_113JobHandleImplD2Ev to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::JobHandleImpl"*)* @_ZN3gin12_GLOBAL__N_113JobHandleImplD0Ev to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::JobHandleImpl"*)* @_ZN3gin12_GLOBAL__N_113JobHandleImpl25NotifyConcurrencyIncreaseEv to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::JobHandleImpl"*)* @_ZN3gin12_GLOBAL__N_113JobHandleImpl4JoinEv to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::JobHandleImpl"*)* @_ZN3gin12_GLOBAL__N_113JobHandleImpl6CancelEv to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::JobHandleImpl"*)* @_ZN3gin12_GLOBAL__N_113JobHandleImpl15CancelAndDetachEv to i8*), i8* bitcast (i1 (%"class.gin::(anonymous namespace)::JobHandleImpl"*)* @_ZN3gin12_GLOBAL__N_113JobHandleImpl8IsActiveEv to i8*), i8* bitcast (i1 (%"class.gin::(anonymous namespace)::JobHandleImpl"*)* @_ZN3gin12_GLOBAL__N_113JobHandleImpl7IsValidEv to i8*), i8* bitcast (i1 (%"class.gin::(anonymous namespace)::JobHandleImpl"*)* @_ZNK3gin12_GLOBAL__N_113JobHandleImpl21UpdatePriorityEnabledEv to i8*), i8* bitcast (void (%"class.gin::(anonymous namespace)::JobHandleImpl"*, i8)* @_ZN3gin12_GLOBAL__N_113JobHandleImpl14UpdatePriorityEN2v812TaskPriorityE to i8*)] }, align 8
@switch.table._ZN3gin12_GLOBAL__N_113PageAllocator13AllocatePagesEPvmmN2v813PageAllocator10PermissionE = private unnamed_addr constant [4 x i32] [i32 1, i32 2, i32 6, i32 5], align 4

@_ZN3gin10V8PlatformC1Ev = hidden unnamed_addr alias void (%"class.gin::V8Platform"*), void (%"class.gin::V8Platform"*)* @_ZN3gin10V8PlatformC2Ev
@_ZN3gin10V8PlatformD1Ev = hidden unnamed_addr alias void (%"class.gin::V8Platform"*), void (%"class.gin::V8Platform"*)* @_ZN3gin10V8PlatformD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gin::V8Platform"* @_ZN3gin10V8Platform3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gin12_GLOBAL__N_113g_v8_platformE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %11, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gin12_GLOBAL__N_113g_v8_platformE, i64 0, i32 0)) #11
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN3gin10V8PlatformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gin12_GLOBAL__N_113g_v8_platformE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  %6 = tail call i8* @_Znwm(i64 8) #12
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gin10V8Platform21TracingControllerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = ptrtoint i8* %6 to i64
  store i64 %8, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gin12_GLOBAL__N_113g_v8_platformE, i64 0, i32 1, i64 8) to i64*), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gin12_GLOBAL__N_113g_v8_platformE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gin12_GLOBAL__N_113g_v8_platformE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN3gin12_GLOBAL__N_113g_v8_platformE to i8*)) #11
  br label %11

9:                                                ; preds = %3
  %10 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gin12_GLOBAL__N_113g_v8_platformE, i64 0, i32 0) acquire, align 8
  br label %11

11:                                               ; preds = %0, %5, %9
  %12 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gin12_GLOBAL__N_113g_v8_platformE, i64 0, i32 1, i64 0) to i64), %5 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.gin::V8Platform"*
  ret %"class.gin::V8Platform"* %13
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3gin10V8PlatformC2Ev(%"class.gin::V8Platform"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gin::V8Platform", %"class.gin::V8Platform"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN3gin10V8PlatformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gin::V8Platform", %"class.gin::V8Platform"* %0, i64 0, i32 1
  %4 = tail call i8* @_Znwm(i64 8) #12
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gin10V8Platform21TracingControllerImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = ptrtoint i8* %4 to i64
  %7 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %6, i64* %7, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin10V8PlatformD2Ev(%"class.gin::V8Platform"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::V8Platform", %"class.gin::V8Platform"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN3gin10V8PlatformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gin::V8Platform", %"class.gin::V8Platform"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gin::V8Platform::TracingControllerImpl"*, %"class.gin::V8Platform::TracingControllerImpl"** %3, align 8
  store %"class.gin::V8Platform::TracingControllerImpl"* null, %"class.gin::V8Platform::TracingControllerImpl"** %3, align 8
  %5 = icmp eq %"class.gin::V8Platform::TracingControllerImpl"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gin::V8Platform::TracingControllerImpl"* %4 to void (%"class.gin::V8Platform::TracingControllerImpl"*)***
  %8 = load void (%"class.gin::V8Platform::TracingControllerImpl"*)**, void (%"class.gin::V8Platform::TracingControllerImpl"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gin::V8Platform::TracingControllerImpl"*)*, void (%"class.gin::V8Platform::TracingControllerImpl"*)** %8, i64 1
  %10 = load void (%"class.gin::V8Platform::TracingControllerImpl"*)*, void (%"class.gin::V8Platform::TracingControllerImpl"*)** %9, align 8
  tail call void %10(%"class.gin::V8Platform::TracingControllerImpl"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin10V8PlatformD0Ev(%"class.gin::V8Platform"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::V8Platform", %"class.gin::V8Platform"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN3gin10V8PlatformE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gin::V8Platform", %"class.gin::V8Platform"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gin::V8Platform::TracingControllerImpl"*, %"class.gin::V8Platform::TracingControllerImpl"** %3, align 8
  store %"class.gin::V8Platform::TracingControllerImpl"* null, %"class.gin::V8Platform::TracingControllerImpl"** %3, align 8
  %5 = icmp eq %"class.gin::V8Platform::TracingControllerImpl"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gin::V8Platform::TracingControllerImpl"* %4 to void (%"class.gin::V8Platform::TracingControllerImpl"*)***
  %8 = load void (%"class.gin::V8Platform::TracingControllerImpl"*)**, void (%"class.gin::V8Platform::TracingControllerImpl"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gin::V8Platform::TracingControllerImpl"*)*, void (%"class.gin::V8Platform::TracingControllerImpl"*)** %8, i64 1
  %10 = load void (%"class.gin::V8Platform::TracingControllerImpl"*)*, void (%"class.gin::V8Platform::TracingControllerImpl"*)** %9, align 8
  tail call void %10(%"class.gin::V8Platform::TracingControllerImpl"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.gin::V8Platform"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::PageAllocator"* @_ZN3gin10V8Platform16GetPageAllocatorEv(%"class.gin::V8Platform"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN3gin12_GLOBAL__N_116g_page_allocatorE, i64 0, i32 0) acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN3gin12_GLOBAL__N_116g_page_allocatorE, i64 0, i32 0)) #11
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN3gin12_GLOBAL__N_113PageAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN3gin12_GLOBAL__N_116g_page_allocatorE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN3gin12_GLOBAL__N_116g_page_allocatorE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN3gin12_GLOBAL__N_116g_page_allocatorE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.1"* @_ZN3gin12_GLOBAL__N_116g_page_allocatorE to i8*)) #11
  br label %9

7:                                                ; preds = %4
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN3gin12_GLOBAL__N_116g_page_allocatorE, i64 0, i32 0) acquire, align 8
  br label %9

9:                                                ; preds = %1, %6, %7
  %10 = phi i64 [ %2, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN3gin12_GLOBAL__N_116g_page_allocatorE, i64 0, i32 1, i64 0) to i64), %6 ], [ %8, %7 ]
  %11 = inttoptr i64 %10 to %"class.gin::(anonymous namespace)::PageAllocator"*
  %12 = getelementptr inbounds %"class.gin::(anonymous namespace)::PageAllocator", %"class.gin::(anonymous namespace)::PageAllocator"* %11, i64 0, i32 0
  ret %"class.v8::PageAllocator"* %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gin10V8Platform24OnCriticalMemoryPressureEv(%"class.gin::V8Platform"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } @_ZN3gin10V8Platform23GetForegroundTaskRunnerEPN2v87IsolateE(%"class.gin::V8Platform"* nocapture readnone, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.gin::PerIsolateData"* @_ZN3gin14PerIsolateData4FromEPN2v87IsolateE(%"class.v8::Isolate"* %1) #11
  %4 = getelementptr inbounds %"class.gin::PerIsolateData", %"class.gin::PerIsolateData"* %3, i64 0, i32 6
  %5 = bitcast %"class.std::__1::shared_ptr.37"* %4 to %"class.v8::TaskRunner"**
  %6 = load %"class.v8::TaskRunner"*, %"class.v8::TaskRunner"** %5, align 8
  %7 = getelementptr inbounds %"class.gin::PerIsolateData", %"class.gin::PerIsolateData"* %3, i64 0, i32 6, i32 1
  %8 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %7, align 8
  %9 = icmp eq %"class.std::__1::__shared_weak_count"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %8, i64 0, i32 0, i32 1
  %12 = atomicrmw add i64* %11, i64 1 monotonic
  br label %13

13:                                               ; preds = %2, %10
  %14 = insertvalue { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.v8::TaskRunner"* %6, 0
  %15 = insertvalue { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } %14, %"class.std::__1::__shared_weak_count"* %8, 1
  ret { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* } %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare %"class.gin::PerIsolateData"* @_ZN3gin14PerIsolateData4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gin10V8Platform21NumberOfWorkerThreadsEv(%"class.gin::V8Platform"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %"class.base::ThreadPoolInstance"* @_ZN4base18ThreadPoolInstance3GetEv() #11
  %3 = bitcast %"class.base::ThreadPoolInstance"* %2 to i32 (%"class.base::ThreadPoolInstance"*, %"class.base::TaskTraits"*)***
  %4 = load i32 (%"class.base::ThreadPoolInstance"*, %"class.base::TaskTraits"*)**, i32 (%"class.base::ThreadPoolInstance"*, %"class.base::TaskTraits"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.base::ThreadPoolInstance"*, %"class.base::TaskTraits"*)*, i32 (%"class.base::ThreadPoolInstance"*, %"class.base::TaskTraits"*)** %4, i64 7
  %6 = load i32 (%"class.base::ThreadPoolInstance"*, %"class.base::TaskTraits"*)*, i32 (%"class.base::ThreadPoolInstance"*, %"class.base::TaskTraits"*)** %5, align 8
  %7 = tail call i32 %6(%"class.base::ThreadPoolInstance"* %2, %"class.base::TaskTraits"* nonnull dereferenceable(15) @_ZN3gin12_GLOBAL__N_118kDefaultTaskTraitsE) #11
  %8 = icmp sgt i32 %7, 1
  %9 = select i1 %8, i32 %7, i32 1
  ret i32 %9
}

declare %"class.base::ThreadPoolInstance"* @_ZN4base18ThreadPoolInstance3GetEv() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin10V8Platform18CallOnWorkerThreadENSt3__110unique_ptrIN2v84TaskENS1_14default_deleteIS4_EEEE(%"class.gin::V8Platform"* nocapture readnone, %"class.v8::Task"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = ptrtoint %"class.v8::Task"* %1 to i64
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i32 498) #11
  %7 = call i8* @_Znwm(i64 56) #12, !noalias !2
  %8 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %8, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !2
  %9 = getelementptr inbounds i8, i8* %7, i64 32
  %10 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64> <i64 17, i64 0>, <2 x i64>* %10, align 8, !noalias !2
  %11 = getelementptr inbounds i8, i8* %7, i64 48
  %12 = bitcast i8* %11 to i64*
  store i64 %5, i64* %12, align 8, !noalias !2
  %13 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %7, i8** %13, align 8, !alias.scope !2
  %14 = call zeroext i1 @_ZN4base10ThreadPool8PostTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::TaskTraits"* nonnull dereferenceable(15) @_ZN3gin12_GLOBAL__N_118kDefaultTaskTraitsE, %"class.base::OnceCallback"* nonnull %4) #11
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare zeroext i1 @_ZN4base10ThreadPool8PostTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEE(%"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::OnceCallback"*) local_unnamed_addr #6

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin10V8Platform30CallBlockingTaskOnWorkerThreadENSt3__110unique_ptrIN2v84TaskENS1_14default_deleteIS4_EEEE(%"class.gin::V8Platform"* nocapture readnone, %"class.v8::Task"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = ptrtoint %"class.v8::Task"* %1 to i64
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i32 504) #11
  %7 = call i8* @_Znwm(i64 56) #12, !noalias !7
  %8 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %8, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !7
  %9 = getelementptr inbounds i8, i8* %7, i64 32
  %10 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64> <i64 17, i64 0>, <2 x i64>* %10, align 8, !noalias !7
  %11 = getelementptr inbounds i8, i8* %7, i64 48
  %12 = bitcast i8* %11 to i64*
  store i64 %5, i64* %12, align 8, !noalias !7
  %13 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %7, i8** %13, align 8, !alias.scope !7
  %14 = call zeroext i1 @_ZN4base10ThreadPool8PostTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::TaskTraits"* nonnull dereferenceable(15) @_ZN3gin12_GLOBAL__N_119kBlockingTaskTraitsE, %"class.base::OnceCallback"* nonnull %4) #11
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin10V8Platform33CallLowPriorityTaskOnWorkerThreadENSt3__110unique_ptrIN2v84TaskENS1_14default_deleteIS4_EEEE(%"class.gin::V8Platform"* nocapture readnone, %"class.v8::Task"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = ptrtoint %"class.v8::Task"* %1 to i64
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i32 510) #11
  %7 = call i8* @_Znwm(i64 56) #12, !noalias !12
  %8 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %8, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !12
  %9 = getelementptr inbounds i8, i8* %7, i64 32
  %10 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64> <i64 17, i64 0>, <2 x i64>* %10, align 8, !noalias !12
  %11 = getelementptr inbounds i8, i8* %7, i64 48
  %12 = bitcast i8* %11 to i64*
  store i64 %5, i64* %12, align 8, !noalias !12
  %13 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %7, i8** %13, align 8, !alias.scope !12
  %14 = call zeroext i1 @_ZN4base10ThreadPool8PostTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::TaskTraits"* nonnull dereferenceable(15) @_ZN3gin12_GLOBAL__N_122kLowPriorityTaskTraitsE, %"class.base::OnceCallback"* nonnull %4) #11
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin10V8Platform25CallDelayedOnWorkerThreadENSt3__110unique_ptrIN2v84TaskENS1_14default_deleteIS4_EEEEd(%"class.gin::V8Platform"* nocapture readnone, %"class.v8::Task"*, double) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = ptrtoint %"class.v8::Task"* %1 to i64
  %7 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i32 517) #11
  %8 = call i8* @_Znwm(i64 56) #12, !noalias !17
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !17
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to <2 x i64>*
  store <2 x i64> <i64 17, i64 0>, <2 x i64>* %11, align 8, !noalias !17
  %12 = getelementptr inbounds i8, i8* %8, i64 48
  %13 = bitcast i8* %12 to i64*
  store i64 %6, i64* %13, align 8, !noalias !17
  %14 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %8, i8** %14, align 8, !alias.scope !17
  %15 = fmul double %2, 1.000000e+06
  %16 = fcmp ult double %15, 0xC3E0000000000000
  %17 = fcmp ugt double %15, 0x43DFFFFFFFFFFFFF
  %18 = fcmp ogt double %15, 0xC3E0000000000000
  %19 = select i1 %18, double %15, double 0xC3E0000000000000
  %20 = fptosi double %19 to i64
  %21 = select i1 %16, i64 0, i64 9223372036854775807
  %22 = select i1 %17, i64 %21, i64 %20
  %23 = call zeroext i1 @_ZN4base10ThreadPool15PostDelayedTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::TaskTraits"* nonnull dereferenceable(15) @_ZN3gin12_GLOBAL__N_118kDefaultTaskTraitsE, %"class.base::OnceCallback"* nonnull %5, i64 %22) #11
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #11
  ret void
}

declare zeroext i1 @_ZN4base10ThreadPool15PostDelayedTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::OnceCallback"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::JobHandle"* @_ZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS1_7JobTaskENS3_14default_deleteIS5_EEEE(%"class.gin::V8Platform"* nocapture readnone, i8 zeroext, %"class.v8::JobTask"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::JobHandle", align 8
  %5 = alloca %"class.base::TaskTraits", align 1
  %6 = alloca %"class.base::JobHandle", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = alloca %"class.base::RepeatingCallback.64", align 8
  %10 = ptrtoint %"class.v8::JobTask"* %2 to i64
  %11 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 1, i32 0, i64 0
  %13 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 2
  %15 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 3
  store i8 0, i8* %11, align 1, !alias.scope !22
  %16 = bitcast i8* %12 to i64*
  store i64 0, i64* %16, align 1, !alias.scope !22
  store i8 2, i8* %13, align 1
  store i8 1, i8* %14, align 1
  %17 = bitcast i8* %15 to i32*
  store i32 0, i32* %17, align 1
  switch i8 %1, label %21 [
    i8 0, label %18
    i8 1, label %19
    i8 2, label %20
  ]

18:                                               ; preds = %3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 getelementptr inbounds (%"class.base::TaskTraits", %"class.base::TaskTraits"* @_ZN3gin12_GLOBAL__N_122kLowPriorityTaskTraitsE, i64 0, i32 0, i32 0), i64 15, i1 false)
  br label %21

19:                                               ; preds = %3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 getelementptr inbounds (%"class.base::TaskTraits", %"class.base::TaskTraits"* @_ZN3gin12_GLOBAL__N_118kDefaultTaskTraitsE, i64 0, i32 0, i32 0), i64 15, i1 false)
  br label %21

20:                                               ; preds = %3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %11, i8* align 1 getelementptr inbounds (%"class.base::TaskTraits", %"class.base::TaskTraits"* @_ZN3gin12_GLOBAL__N_119kBlockingTaskTraitsE, i64 0, i32 0, i32 0), i64 15, i1 false)
  br label %21

21:                                               ; preds = %3, %20, %19, %18
  %22 = bitcast %"class.base::JobHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.base::JobHandle", %"class.base::JobHandle"* %6, i64 0, i32 0, i32 0
  store %"class.base::internal::JobTaskSource"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::JobTaskSource"*), %"class.base::internal::JobTaskSource"** %23, align 8
  %24 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i32 541) #11
  %25 = call i8* @_Znwm(i64 48) #12, !noalias !25
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::JobDelegate"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS5_7JobTaskENS7_14default_deleteIS9_EEEEE3$_0JSC_EEEFvPNS_11JobDelegateEEE3RunEPNS0_13BindStateBaseESG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS4_7JobTaskENS6_14default_deleteIS8_EEEEE3$_0JSB_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !25
  %27 = getelementptr inbounds i8, i8* %25, i64 40
  %28 = bitcast i8* %27 to i64*
  store i64 %10, i64* %28, align 8, !noalias !25
  %29 = bitcast %"class.base::RepeatingCallback"* %8 to i8**
  store i8* %25, i8** %29, align 8, !alias.scope !25
  %30 = call i8* @_Znwm(i64 48) #12, !noalias !30
  %31 = bitcast i8* %30 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %31, void ()* bitcast (i64 (%"class.base::internal::BindStateBase"*, i64)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS5_7JobTaskENS7_14default_deleteIS9_EEEEE3$_1JNS0_17UnretainedWrapperIS9_EEEEEFmmEE3RunEPNS0_13BindStateBaseEm" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS4_7JobTaskENS6_14default_deleteIS8_EEEEE3$_1JNS0_17UnretainedWrapperIS8_EEEE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !30
  %32 = getelementptr inbounds i8, i8* %30, i64 40
  %33 = bitcast i8* %32 to i64*
  store i64 %10, i64* %33, align 8, !noalias !30
  %34 = bitcast %"class.base::RepeatingCallback.64"* %9 to i8**
  store i8* %30, i8** %34, align 8, !alias.scope !30
  call void @_ZN4base7PostJobERKNS_8LocationERKNS_10TaskTraitsENS_17RepeatingCallbackIFvPNS_11JobDelegateEEEENS6_IFmmEEE(%"class.base::JobHandle"* nonnull sret %6, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::TaskTraits"* nonnull dereferenceable(15) %5, %"class.base::RepeatingCallback"* nonnull %8, %"class.base::RepeatingCallback.64"* nonnull %9) #11
  %35 = getelementptr inbounds %"class.base::RepeatingCallback.64", %"class.base::RepeatingCallback.64"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #11
  %36 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  %37 = bitcast %"class.base::JobHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = call i8* @_Znwm(i64 16) #12
  call void @_ZN4base9JobHandleC1EOS0_(%"class.base::JobHandle"* nonnull %4, %"class.base::JobHandle"* nonnull dereferenceable(8) %6) #11
  %39 = bitcast i8* %38 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gin12_GLOBAL__N_113JobHandleImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 8
  %41 = bitcast i8* %40 to %"class.base::JobHandle"*
  call void @_ZN4base9JobHandleC1EOS0_(%"class.base::JobHandle"* %41, %"class.base::JobHandle"* nonnull dereferenceable(8) %4) #11
  call void @_ZN4base9JobHandleD1Ev(%"class.base::JobHandle"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  call void @_ZN4base9JobHandleD1Ev(%"class.base::JobHandle"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %11) #11
  %42 = bitcast i8* %38 to %"class.v8::JobHandle"*
  ret %"class.v8::JobHandle"* %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZN4base7PostJobERKNS_8LocationERKNS_10TaskTraitsENS_17RepeatingCallbackIFvPNS_11JobDelegateEEEENS6_IFmmEEE(%"class.base::JobHandle"* sret, %"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* dereferenceable(15), %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.64"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base9JobHandleD1Ev(%"class.base::JobHandle"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gin10V8Platform16IdleTasksEnabledEPN2v87IsolateE(%"class.gin::V8Platform"* nocapture readnone, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.gin::PerIsolateData"* @_ZN3gin14PerIsolateData4FromEPN2v87IsolateE(%"class.v8::Isolate"* %1) #11
  %4 = getelementptr inbounds %"class.gin::PerIsolateData", %"class.gin::PerIsolateData"* %3, i64 0, i32 6
  %5 = bitcast %"class.std::__1::shared_ptr.37"* %4 to %"class.v8::TaskRunner"**
  %6 = load %"class.v8::TaskRunner"*, %"class.v8::TaskRunner"** %5, align 8
  %7 = getelementptr inbounds %"class.gin::PerIsolateData", %"class.gin::PerIsolateData"* %3, i64 0, i32 6, i32 1
  %8 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %7, align 8
  %9 = icmp eq %"class.std::__1::__shared_weak_count"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %8, i64 0, i32 0, i32 1
  %12 = atomicrmw add i64* %11, i64 1 monotonic
  br label %13

13:                                               ; preds = %2, %10
  %14 = bitcast %"class.v8::TaskRunner"* %6 to i1 (%"class.v8::TaskRunner"*)***
  %15 = load i1 (%"class.v8::TaskRunner"*)**, i1 (%"class.v8::TaskRunner"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.v8::TaskRunner"*)*, i1 (%"class.v8::TaskRunner"*)** %15, i64 5
  %17 = load i1 (%"class.v8::TaskRunner"*)*, i1 (%"class.v8::TaskRunner"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.v8::TaskRunner"* %6) #11
  br i1 %9, label %29, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %8, i64 0, i32 0, i32 1
  %21 = atomicrmw add i64* %20, i64 -1 acq_rel
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %8, i64 0, i32 0
  %25 = bitcast %"class.std::__1::__shared_weak_count"* %8 to void (%"class.std::__1::__shared_count"*)***
  %26 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %26, i64 2
  %28 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, align 8
  tail call void %28(%"class.std::__1::__shared_count"* %24) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %8) #11
  br label %29

29:                                               ; preds = %13, %19, %23
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN3gin10V8Platform27MonotonicallyIncreasingTimeEv(%"class.gin::V8Platform"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %3 = sitofp i64 %2 to double
  %4 = fdiv double %3, 1.000000e+06
  ret double %4
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN3gin10V8Platform22CurrentClockTimeMillisEv(%"class.gin::V8Platform"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Time", align 8
  %3 = bitcast %"class.base::Time"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = tail call i64 @_ZN4base4Time3NowEv() #11
  %5 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  %6 = call double @_ZNK4base4Time8ToJsTimeEv(%"class.base::Time"* nonnull %2) #11
  %7 = fdiv double %6, 1.000000e+03
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  %8 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.74", %"class.base::LazyInstance.74"* @_ZN3gin12_GLOBAL__N_114g_time_clamperE, i64 0, i32 0) acquire, align 8
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.74", %"class.base::LazyInstance.74"* @_ZN3gin12_GLOBAL__N_114g_time_clamperE, i64 0, i32 0)) #11
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = call i64 @_ZN4base10RandUint64Ev() #11
  store i64 %13, i64* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.74", %"class.base::LazyInstance.74"* @_ZN3gin12_GLOBAL__N_114g_time_clamperE, i64 0, i32 1, i64 0) to i64*), align 8
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.74", %"class.base::LazyInstance.74"* @_ZN3gin12_GLOBAL__N_114g_time_clamperE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.74", %"class.base::LazyInstance.74"* @_ZN3gin12_GLOBAL__N_114g_time_clamperE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.74"* @_ZN3gin12_GLOBAL__N_114g_time_clamperE to i8*)) #11
  br label %16

14:                                               ; preds = %10
  %15 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.74", %"class.base::LazyInstance.74"* @_ZN3gin12_GLOBAL__N_114g_time_clamperE, i64 0, i32 0) acquire, align 8
  br label %16

16:                                               ; preds = %1, %12, %14
  %17 = phi i64 [ %8, %1 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.74", %"class.base::LazyInstance.74"* @_ZN3gin12_GLOBAL__N_114g_time_clamperE, i64 0, i32 1, i64 0) to i64), %12 ], [ %15, %14 ]
  %18 = inttoptr i64 %17 to %"class.gin::(anonymous namespace)::TimeClamper"*
  %19 = fcmp olt double %7, 0.000000e+00
  %20 = fsub double -0.000000e+00, %7
  %21 = select i1 %19, double %20, double %7
  %22 = fdiv double %21, 5.000000e-06
  %23 = call double @llvm.floor.f64(double %22) #11
  %24 = fmul double %23, 5.000000e-06
  %25 = bitcast double %24 to i64
  %26 = getelementptr inbounds %"class.gin::(anonymous namespace)::TimeClamper", %"class.gin::(anonymous namespace)::TimeClamper"* %18, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = xor i64 %27, %25
  %29 = lshr i64 %28, 33
  %30 = xor i64 %29, %28
  %31 = mul i64 %30, -49064778989728563
  %32 = lshr i64 %31, 33
  %33 = xor i64 %32, %31
  %34 = mul i64 %33, -4265267296055464877
  %35 = lshr i64 %34, 33
  %36 = and i64 %34, 4503599627370495
  %37 = xor i64 %35, %36
  %38 = or i64 %37, 4607182418800017408
  %39 = bitcast i64 %38 to double
  %40 = fadd double %39, -1.000000e+00
  %41 = fmul double %40, 5.000000e-06
  %42 = fadd double %24, %41
  %43 = fcmp ult double %21, %42
  %44 = fadd double %23, 1.000000e+00
  %45 = fmul double %44, 5.000000e-06
  %46 = select i1 %43, double %24, double %45
  %47 = fsub double -0.000000e+00, %46
  %48 = select i1 %19, double %47, double %46
  %49 = fmul double %48, 1.000000e+03
  ret double %49
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #6

declare double @_ZNK4base4Time8ToJsTimeEv(%"class.base::Time"*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::TracingController"* @_ZN3gin10V8Platform20GetTracingControllerEv(%"class.gin::V8Platform"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gin::V8Platform", %"class.gin::V8Platform"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.gin::V8Platform::TracingControllerImpl"*, %"class.gin::V8Platform::TracingControllerImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.gin::V8Platform::TracingControllerImpl", %"class.gin::V8Platform::TracingControllerImpl"* %3, i64 0, i32 0
  ret %"class.v8::TracingController"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull void ()* @_ZN3gin10V8Platform20GetStackTracePrinterEv(%"class.gin::V8Platform"* nocapture readnone) unnamed_addr #4 align 2 {
  ret void ()* @_ZN3gin12_GLOBAL__N_115PrintStackTraceEv
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_115PrintStackTraceEv() #0 {
  %1 = alloca %"class.base::debug::StackTrace", align 8
  %2 = bitcast %"class.base::debug::StackTrace"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2008, i8* nonnull %2) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 -86, i64 2008, i1 false)
  call void @_ZN4base5debug10StackTraceC1Ev(%"class.base::debug::StackTrace"* nonnull %1) #11
  call void @_ZNK4base5debug10StackTrace5PrintEv(%"class.base::debug::StackTrace"* nonnull %1) #11
  call void @llvm.lifetime.end.p0i8(i64 2008, i8* nonnull %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88Platform24OnCriticalMemoryPressureEm(%"class.v8::Platform"*, i64) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88Platform19DumpWithoutCrashingEv(%"class.v8::Platform"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v817TracingControllerD2Ev(%"class.v8::TracingController"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gin10V8Platform21TracingControllerImplD0Ev(%"class.gin::V8Platform::TracingControllerImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.gin::V8Platform::TracingControllerImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN3gin10V8Platform21TracingControllerImpl23GetCategoryGroupEnabledEPKc(%"class.gin::V8Platform::TracingControllerImpl"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* %1) #11
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3gin10V8Platform21TracingControllerImpl13AddTraceEventEcPKhPKcS5_mmiPS5_S3_PKmPNSt3__110unique_ptrIN2v824ConvertableToTraceFormatENS9_14default_deleteISC_EEEEj(%"class.gin::V8Platform::TracingControllerImpl"*, i8 signext, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.75"*, i32) unnamed_addr #0 comdat align 2 {
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  %16 = load i32, i32* @_ZZN4base11trace_event14TraceArgumentsC1INSt3__110unique_ptrIN2v824ConvertableToTraceFormatENS3_14default_deleteIS6_EEEEEEiPKPKcPKhPKyPT_E8max_args, align 4
  %17 = icmp slt i32 %16, %7
  %18 = select i1 %17, i32 %16, i32 %7
  %19 = trunc i32 %18 to i8
  store i8 %19, i8* %15, align 8
  %20 = and i32 %18, 255
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %53, label %22

22:                                               ; preds = %13
  %23 = zext i32 %20 to i64
  br label %24

24:                                               ; preds = %22, %50
  %25 = phi i64 [ %51, %50 ], [ 0, %22 ]
  %26 = getelementptr inbounds i8, i8* %9, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %25
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds i8*, i8** %8, i64 %25
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 %25
  %33 = bitcast i8** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = icmp eq i8 %27, 8
  br i1 %34, label %35, label %46

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %25
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75"* %11, i64 %25
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr.75"* %37 to i64*
  %40 = load i64, i64* %39, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %38, align 8
  %41 = tail call i8* @_Znwm(i64 16) #12
  %42 = bitcast i8* %41 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gin12_GLOBAL__N_131ConvertableToTraceFormatWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds i8, i8* %41, i64 8
  %44 = bitcast i8* %43 to i64*
  store i64 %40, i64* %44, align 8
  %45 = bitcast %"union.base::trace_event::TraceValue"* %36 to i8**
  store i8* %41, i8** %45, align 8
  br label %50

46:                                               ; preds = %24
  %47 = getelementptr inbounds i64, i64* %10, i64 %25
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %25, i32 0
  store i64 %48, i64* %49, align 8
  br label %50

50:                                               ; preds = %46, %35
  %51 = add nuw nsw i64 %25, 1
  %52 = icmp ult i64 %51, %23
  br i1 %52, label %24, label %53

53:                                               ; preds = %50, %13
  %54 = call i64 @_ZN20trace_event_internal23AddTraceEventWithBindIdEcPKhPKcS3_yyPN4base11trace_event14TraceArgumentsEj(i8 signext %1, i8* %2, i8* %3, i8* %4, i64 %5, i64 %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %12) #11
  %55 = load i8, i8* %15, align 8
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %91, label %57

57:                                               ; preds = %53, %86
  %58 = phi i64 [ %87, %86 ], [ 0, %53 ]
  %59 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 8
  br i1 %61, label %62, label %73

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %58
  %64 = bitcast %"union.base::trace_event::TraceValue"* %63 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %65 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %64, align 8
  %66 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %65, null
  br i1 %66, label %86, label %67

67:                                               ; preds = %62
  %68 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %65 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %69 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %69, i64 1
  %71 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %70, align 8
  call void %71(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %65) #11
  %72 = load i8, i8* %59, align 1
  br label %73

73:                                               ; preds = %67, %57
  %74 = phi i8 [ %60, %57 ], [ %72, %67 ]
  %75 = icmp eq i8 %74, 9
  br i1 %75, label %76, label %86

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %58
  %78 = bitcast %"union.base::trace_event::TraceValue"* %77 to %"class.protozero::HeapBuffered"**
  %79 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %78, align 8
  %80 = icmp eq %"class.protozero::HeapBuffered"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %79, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %82) #11
  %83 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %79, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %83) #11
  %84 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %79, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %84) #11
  %85 = bitcast %"class.protozero::HeapBuffered"* %79 to i8*
  call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %81, %76, %73, %62
  %87 = add nuw nsw i64 %58, 1
  %88 = load i8, i8* %15, align 8
  %89 = zext i8 %88 to i64
  %90 = icmp ult i64 %87, %89
  br i1 %90, label %57, label %91

91:                                               ; preds = %86, %53
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #11
  ret i64 %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3gin10V8Platform21TracingControllerImpl26AddTraceEventWithTimestampEcPKhPKcS5_mmiPS5_S3_PKmPNSt3__110unique_ptrIN2v824ConvertableToTraceFormatENS9_14default_deleteISC_EEEEjl(%"class.gin::V8Platform::TracingControllerImpl"*, i8 signext, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.75"*, i32, i64) unnamed_addr #0 comdat align 2 {
  %15 = alloca %"class.base::trace_event::TraceArguments", align 8
  %16 = alloca %"class.base::TimeTicks", align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 40, i1 false)
  %18 = load i32, i32* @_ZZN4base11trace_event14TraceArgumentsC1INSt3__110unique_ptrIN2v824ConvertableToTraceFormatENS3_14default_deleteIS6_EEEEEEiPKPKcPKhPKyPT_E8max_args, align 4
  %19 = icmp slt i32 %18, %7
  %20 = select i1 %19, i32 %18, i32 %7
  %21 = trunc i32 %20 to i8
  store i8 %21, i8* %17, align 8
  %22 = and i32 %20, 255
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %55, label %24

24:                                               ; preds = %14
  %25 = zext i32 %22 to i64
  br label %26

26:                                               ; preds = %24, %52
  %27 = phi i64 [ %53, %52 ], [ 0, %24 ]
  %28 = getelementptr inbounds i8, i8* %9, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %15, i64 0, i32 1, i64 %27
  store i8 %29, i8* %30, align 1
  %31 = getelementptr inbounds i8*, i8** %8, i64 %27
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %15, i64 0, i32 2, i64 %27
  %35 = bitcast i8** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq i8 %29, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %15, i64 0, i32 3, i64 %27
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75"* %11, i64 %27
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.75"* %39 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %40, align 8
  %43 = tail call i8* @_Znwm(i64 16) #12
  %44 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gin12_GLOBAL__N_131ConvertableToTraceFormatWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 8
  %46 = bitcast i8* %45 to i64*
  store i64 %42, i64* %46, align 8
  %47 = bitcast %"union.base::trace_event::TraceValue"* %38 to i8**
  store i8* %43, i8** %47, align 8
  br label %52

48:                                               ; preds = %26
  %49 = getelementptr inbounds i64, i64* %10, i64 %27
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %15, i64 0, i32 3, i64 %27, i32 0
  store i64 %50, i64* %51, align 8
  br label %52

52:                                               ; preds = %48, %37
  %53 = add nuw nsw i64 %27, 1
  %54 = icmp ult i64 %53, %25
  br i1 %54, label %26, label %55

55:                                               ; preds = %52, %14
  %56 = bitcast %"class.base::TimeTicks"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %16, i64 0, i32 0, i32 0
  store i64 %13, i64* %57, align 8
  %58 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %59 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %1, i8* %2, i8* %3, i8* %4, i64 %5, i64 %6, i32 %58, %"class.base::TimeTicks"* nonnull dereferenceable(8) %16, %"class.base::trace_event::TraceArguments"* nonnull %15, i32 %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  %60 = load i8, i8* %17, align 8
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %96, label %62

62:                                               ; preds = %55, %91
  %63 = phi i64 [ %92, %91 ], [ 0, %55 ]
  %64 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %15, i64 0, i32 1, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 8
  br i1 %66, label %67, label %78

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %15, i64 0, i32 3, i64 %63
  %69 = bitcast %"union.base::trace_event::TraceValue"* %68 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %70 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %69, align 8
  %71 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %70, null
  br i1 %71, label %91, label %72

72:                                               ; preds = %67
  %73 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %70 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %74 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %74, i64 1
  %76 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %75, align 8
  call void %76(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %70) #11
  %77 = load i8, i8* %64, align 1
  br label %78

78:                                               ; preds = %72, %62
  %79 = phi i8 [ %65, %62 ], [ %77, %72 ]
  %80 = icmp eq i8 %79, 9
  br i1 %80, label %81, label %91

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %15, i64 0, i32 3, i64 %63
  %83 = bitcast %"union.base::trace_event::TraceValue"* %82 to %"class.protozero::HeapBuffered"**
  %84 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %83, align 8
  %85 = icmp eq %"class.protozero::HeapBuffered"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %84, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %87) #11
  %88 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %84, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %88) #11
  %89 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %84, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %89) #11
  %90 = bitcast %"class.protozero::HeapBuffered"* %84 to i8*
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %86, %81, %78, %67
  %92 = add nuw nsw i64 %63, 1
  %93 = load i8, i8* %17, align 8
  %94 = zext i8 %93 to i64
  %95 = icmp ult i64 %92, %94
  br i1 %95, label %62, label %96

96:                                               ; preds = %91, %55
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #11
  ret i64 %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gin10V8Platform21TracingControllerImpl24UpdateTraceEventDurationEPKhPKcm(%"class.gin::V8Platform::TracingControllerImpl"*, i8*, i8*, i64) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* %1, i8* %2, i64 %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gin10V8Platform21TracingControllerImpl21AddTraceStateObserverEPN2v817TracingController18TraceStateObserverE(%"class.gin::V8Platform::TracingControllerImpl"*, %"class.v8::TracingController::TraceStateObserver"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TracingController::TraceStateObserver"*, align 8
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 0)) #11
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gin12_GLOBAL__N_124EnabledStateObserverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 8) to %"class.base::internal::LockImpl"*)) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 48), i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 80) to i32*), align 8
  %9 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #11
  tail call void @_ZN4base11trace_event8TraceLog23AddEnabledStateObserverEPNS1_20EnabledStateObserverE(%"class.base::trace_event::TraceLog"* %9, %"class.base::trace_event::TraceLog::EnabledStateObserver"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 0) to %"class.base::trace_event::TraceLog::EnabledStateObserver"*)) #11
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE to i8*)) #11
  br label %12

10:                                               ; preds = %6
  %11 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 0) acquire, align 8
  br label %12

12:                                               ; preds = %2, %8, %10
  %13 = phi i64 [ %4, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 0) to i64), %8 ], [ %11, %10 ]
  %14 = inttoptr i64 %13 to %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"*
  %15 = bitcast %"class.v8::TracingController::TraceStateObserver"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  store %"class.v8::TracingController::TraceStateObserver"* %1, %"class.v8::TracingController::TraceStateObserver"** %3, align 8
  %16 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %14, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %16, i64 0, i32 0, i32 0
  %18 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %17) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20, !prof !35

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %16, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %21) #11
  br label %22

22:                                               ; preds = %20, %12
  %23 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %14, i64 0, i32 2, i32 0
  %24 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %23, %"class.v8::TracingController::TraceStateObserver"** nonnull dereferenceable(8) %3, %"class.v8::TracingController::TraceStateObserver"** nonnull dereferenceable(8) %3) #11
  %25 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %17) #11
  %26 = call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #11
  %27 = getelementptr inbounds %"class.base::trace_event::TraceLog", %"class.base::trace_event::TraceLog"* %26, i64 0, i32 1
  %28 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %27, i64 0, i32 0, i32 0
  %29 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %28) #11
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31, !prof !35

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %27, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %32) #11
  br label %33

33:                                               ; preds = %31, %22
  %34 = getelementptr inbounds %"class.base::trace_event::TraceLog", %"class.base::trace_event::TraceLog"* %26, i64 0, i32 3
  %35 = load i8, i8* %34, align 8
  %36 = and i8 %35, 1
  %37 = icmp eq i8 %36, 0
  %38 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %28) #11
  br i1 %37, label %45, label %39

39:                                               ; preds = %33
  %40 = load %"class.v8::TracingController::TraceStateObserver"*, %"class.v8::TracingController::TraceStateObserver"** %3, align 8
  %41 = bitcast %"class.v8::TracingController::TraceStateObserver"* %40 to void (%"class.v8::TracingController::TraceStateObserver"*)***
  %42 = load void (%"class.v8::TracingController::TraceStateObserver"*)**, void (%"class.v8::TracingController::TraceStateObserver"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.v8::TracingController::TraceStateObserver"*)*, void (%"class.v8::TracingController::TraceStateObserver"*)** %42, i64 2
  %44 = load void (%"class.v8::TracingController::TraceStateObserver"*)*, void (%"class.v8::TracingController::TraceStateObserver"*)** %43, align 8
  call void %44(%"class.v8::TracingController::TraceStateObserver"* %40) #11
  br label %45

45:                                               ; preds = %33, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gin10V8Platform21TracingControllerImpl24RemoveTraceStateObserverEPN2v817TracingController18TraceStateObserverE(%"class.gin::V8Platform::TracingControllerImpl"*, %"class.v8::TracingController::TraceStateObserver"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.428", align 8
  %4 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 0) acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 0)) #11
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gin12_GLOBAL__N_124EnabledStateObserverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 8) to %"class.base::internal::LockImpl"*)) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 48), i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 80) to i32*), align 8
  %9 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #11
  tail call void @_ZN4base11trace_event8TraceLog23AddEnabledStateObserverEPNS1_20EnabledStateObserverE(%"class.base::trace_event::TraceLog"* %9, %"class.base::trace_event::TraceLog::EnabledStateObserver"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 0) to %"class.base::trace_event::TraceLog::EnabledStateObserver"*)) #11
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE to i8*)) #11
  br label %12

10:                                               ; preds = %6
  %11 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 0) acquire, align 8
  br label %12

12:                                               ; preds = %2, %8, %10
  %13 = phi i64 [ %4, %2 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.101", %"class.base::LazyInstance.101"* @_ZN3gin12_GLOBAL__N_124g_trace_state_dispatcherE, i64 0, i32 1, i64 0) to i64), %8 ], [ %11, %10 ]
  %14 = inttoptr i64 %13 to %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"*
  %15 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %14, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %15, i64 0, i32 0, i32 0
  %17 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %16) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19, !prof !35

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %15, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %20) #11
  br label %21

21:                                               ; preds = %19, %12
  %22 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %14, i64 0, i32 2, i32 0
  %23 = ptrtoint %"class.v8::TracingController::TraceStateObserver"* %1 to i64
  %24 = lshr i64 %23, 32
  %25 = shl i64 %23, 3
  %26 = and i64 %25, 4294967288
  %27 = add nuw nsw i64 %26, 8
  %28 = xor i64 %27, %24
  %29 = mul i64 %28, -7070675565921424023
  %30 = lshr i64 %29, 47
  %31 = xor i64 %29, %24
  %32 = xor i64 %31, %30
  %33 = mul i64 %32, -7070675565921424023
  %34 = lshr i64 %33, 47
  %35 = xor i64 %34, %33
  %36 = mul i64 %35, -7070675565921424023
  %37 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %96, label %40

40:                                               ; preds = %21
  %41 = tail call i64 @llvm.ctpop.i64(i64 %38) #11, !range !36
  %42 = icmp ugt i64 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = add i64 %38, -1
  %45 = and i64 %44, %36
  br label %50

46:                                               ; preds = %40
  %47 = icmp ult i64 %36, %38
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = urem i64 %36, %38
  br label %50

50:                                               ; preds = %48, %46, %43
  %51 = phi i64 [ %45, %43 ], [ %49, %48 ], [ %36, %46 ]
  %52 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, i64 %51
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %96, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %58, align 8
  %60 = icmp eq %"struct.std::__1::__hash_node_base"* %59, null
  br i1 %60, label %96, label %61

61:                                               ; preds = %57
  %62 = add i64 %38, -1
  br label %63

63:                                               ; preds = %84, %61
  %64 = phi %"struct.std::__1::__hash_node_base"* [ %59, %61 ], [ %86, %84 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %64, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, %36
  br i1 %68, label %79, label %69

69:                                               ; preds = %63
  br i1 %42, label %72, label %70

70:                                               ; preds = %69
  %71 = and i64 %67, %62
  br label %76

72:                                               ; preds = %69
  %73 = icmp ult i64 %67, %38
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = urem i64 %67, %38
  br label %76

76:                                               ; preds = %74, %72, %70
  %77 = phi i64 [ %71, %70 ], [ %75, %74 ], [ %67, %72 ]
  %78 = icmp eq i64 %77, %51
  br i1 %78, label %84, label %96

79:                                               ; preds = %63
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %64, i64 2
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %80 to %"class.v8::TracingController::TraceStateObserver"**
  %82 = load %"class.v8::TracingController::TraceStateObserver"*, %"class.v8::TracingController::TraceStateObserver"** %81, align 8
  %83 = icmp eq %"class.v8::TracingController::TraceStateObserver"* %82, %1
  br i1 %83, label %88, label %84

84:                                               ; preds = %79, %76
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %64, i64 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base"* %86, null
  br i1 %87, label %96, label %63

88:                                               ; preds = %79
  %89 = bitcast %"class.std::__1::unique_ptr.428"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #11
  call void @_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::unique_ptr.428"* nonnull sret %3, %"class.std::__1::__hash_table"* %22, %"struct.std::__1::__hash_node_base"* nonnull %64) #11
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.428"* %3, i64 0, i32 0, i32 0, i32 0
  %91 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %90, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %88
  %94 = bitcast %"struct.std::__1::__hash_node"* %91 to i8*
  call void @_ZdlPv(i8* %94) #12
  br label %95

95:                                               ; preds = %93, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #11
  br label %96

96:                                               ; preds = %76, %84, %21, %50, %57, %95
  %97 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %16) #11
  ret void
}

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare i64 @_ZN20trace_event_internal23AddTraceEventWithBindIdEcPKhPKcS3_yyPN4base11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_131ConvertableToTraceFormatWrapperD2Ev(%"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper", %"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gin12_GLOBAL__N_131ConvertableToTraceFormatWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper", %"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %3, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %3, align 8
  %5 = icmp eq %"class.v8::ConvertableToTraceFormat"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::ConvertableToTraceFormat"* %4 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %8 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %8, i64 1
  %10 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %9, align 8
  tail call void %10(%"class.v8::ConvertableToTraceFormat"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_131ConvertableToTraceFormatWrapperD0Ev(%"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper", %"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gin12_GLOBAL__N_131ConvertableToTraceFormatWrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper", %"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %3, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %3, align 8
  %5 = icmp eq %"class.v8::ConvertableToTraceFormat"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::ConvertableToTraceFormat"* %4 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %8 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %8, i64 1
  %10 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %9, align 8
  tail call void %10(%"class.v8::ConvertableToTraceFormat"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK3gin12_GLOBAL__N_131ConvertableToTraceFormatWrapper19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"* nocapture readonly, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper", %"class.gin::(anonymous namespace)::ConvertableToTraceFormatWrapper"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %3, align 8
  %5 = bitcast %"class.v8::ConvertableToTraceFormat"* %4 to void (%"class.v8::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)***
  %6 = load void (%"class.v8::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)**, void (%"class.v8::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)*, void (%"class.v8::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)** %6, i64 2
  %8 = load void (%"class.v8::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)*, void (%"class.v8::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)** %7, align 8
  tail call void %8(%"class.v8::ConvertableToTraceFormat"* %4, %"class.std::__1::basic_string"* %1) #11
  ret void
}

declare zeroext i1 @_ZN4base11trace_event24ConvertableToTraceFormat13AppendToProtoEPNS1_13ProtoAppenderE(%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*) unnamed_addr #6

declare void @_ZN4base11trace_event24ConvertableToTraceFormat27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #7

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #6

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #6

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #6

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #6

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #6

declare %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() local_unnamed_addr #6

declare void @_ZN4base11trace_event8TraceLog23AddEnabledStateObserverEPNS1_20EnabledStateObserverE(%"class.base::trace_event::TraceLog"*, %"class.base::trace_event::TraceLog::EnabledStateObserver"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_124EnabledStateObserverImplD2Ev(%"class.gin::(anonymous namespace)::EnabledStateObserverImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gin12_GLOBAL__N_124EnabledStateObserverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #11
  %4 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event8TraceLog26RemoveEnabledStateObserverEPNS1_20EnabledStateObserverE(%"class.base::trace_event::TraceLog"* %3, %"class.base::trace_event::TraceLog::EnabledStateObserver"* %4) #11
  %5 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1, %8
  %9 = phi %"struct.std::__1::__hash_node_base"* [ %11, %8 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %10, align 8
  %12 = bitcast %"struct.std::__1::__hash_node_base"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  %13 = icmp eq %"struct.std::__1::__hash_node_base"* %11, null
  br i1 %13, label %14, label %8

14:                                               ; preds = %8, %1
  %15 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %15, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base"** %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.std::__1::__hash_node_base"** %16 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %21) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_124EnabledStateObserverImplD0Ev(%"class.gin::(anonymous namespace)::EnabledStateObserverImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gin12_GLOBAL__N_124EnabledStateObserverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call %"class.base::trace_event::TraceLog"* @_ZN4base11trace_event8TraceLog11GetInstanceEv() #11
  %4 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event8TraceLog26RemoveEnabledStateObserverEPNS1_20EnabledStateObserverE(%"class.base::trace_event::TraceLog"* %3, %"class.base::trace_event::TraceLog::EnabledStateObserver"* %4) #11
  %5 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1, %8
  %9 = phi %"struct.std::__1::__hash_node_base"* [ %11, %8 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %10, align 8
  %12 = bitcast %"struct.std::__1::__hash_node_base"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  %13 = icmp eq %"struct.std::__1::__hash_node_base"* %11, null
  br i1 %13, label %14, label %8

14:                                               ; preds = %8, %1
  %15 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %15, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base"** %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.std::__1::__hash_node_base"** %16 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %21) #11
  %22 = bitcast %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_124EnabledStateObserverImpl17OnTraceLogEnabledEv(%"class.gin::(anonymous namespace)::EnabledStateObserverImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !35

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"struct.std::__1::__hash_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %15, %8
  %14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #11
  ret void

15:                                               ; preds = %8, %15
  %16 = phi i64 [ %25, %15 ], [ %11, %8 ]
  %17 = inttoptr i64 %16 to %"struct.std::__1::__hash_node"*
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2
  %19 = load %"class.v8::TracingController::TraceStateObserver"*, %"class.v8::TracingController::TraceStateObserver"** %18, align 8
  %20 = bitcast %"class.v8::TracingController::TraceStateObserver"* %19 to void (%"class.v8::TracingController::TraceStateObserver"*)***
  %21 = load void (%"class.v8::TracingController::TraceStateObserver"*)**, void (%"class.v8::TracingController::TraceStateObserver"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.v8::TracingController::TraceStateObserver"*)*, void (%"class.v8::TracingController::TraceStateObserver"*)** %21, i64 2
  %23 = load void (%"class.v8::TracingController::TraceStateObserver"*)*, void (%"class.v8::TracingController::TraceStateObserver"*)** %22, align 8
  tail call void %23(%"class.v8::TracingController::TraceStateObserver"* %19) #11
  %24 = inttoptr i64 %16 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %13, label %15
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_124EnabledStateObserverImpl18OnTraceLogDisabledEv(%"class.gin::(anonymous namespace)::EnabledStateObserverImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !35

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.gin::(anonymous namespace)::EnabledStateObserverImpl", %"class.gin::(anonymous namespace)::EnabledStateObserverImpl"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"struct.std::__1::__hash_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %15, %8
  %14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #11
  ret void

15:                                               ; preds = %8, %15
  %16 = phi i64 [ %25, %15 ], [ %11, %8 ]
  %17 = inttoptr i64 %16 to %"struct.std::__1::__hash_node"*
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %17, i64 0, i32 2
  %19 = load %"class.v8::TracingController::TraceStateObserver"*, %"class.v8::TracingController::TraceStateObserver"** %18, align 8
  %20 = bitcast %"class.v8::TracingController::TraceStateObserver"* %19 to void (%"class.v8::TracingController::TraceStateObserver"*)***
  %21 = load void (%"class.v8::TracingController::TraceStateObserver"*)**, void (%"class.v8::TracingController::TraceStateObserver"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.v8::TracingController::TraceStateObserver"*)*, void (%"class.v8::TracingController::TraceStateObserver"*)** %21, i64 3
  %23 = load void (%"class.v8::TracingController::TraceStateObserver"*)*, void (%"class.v8::TracingController::TraceStateObserver"*)** %22, align 8
  tail call void %23(%"class.v8::TracingController::TraceStateObserver"* %19) #11
  %24 = inttoptr i64 %16 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %13, label %15
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #6

declare void @_ZN4base11trace_event8TraceLog26RemoveEnabledStateObserverEPNS1_20EnabledStateObserverE(%"class.base::trace_event::TraceLog"*, %"class.base::trace_event::TraceLog::EnabledStateObserver"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #7

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.v8::TracingController::TraceStateObserver"** dereferenceable(8), %"class.v8::TracingController::TraceStateObserver"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.v8::TracingController::TraceStateObserver"*, %"class.v8::TracingController::TraceStateObserver"** %1, align 8
  %5 = ptrtoint %"class.v8::TracingController::TraceStateObserver"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !36
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"class.v8::TracingController::TraceStateObserver"**
  %64 = load %"class.v8::TracingController::TraceStateObserver"*, %"class.v8::TracingController::TraceStateObserver"** %63, align 8
  %65 = icmp eq %"class.v8::TracingController::TraceStateObserver"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #12, !noalias !37
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.v8::TracingController::TraceStateObserver"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !37
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !37
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !37
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %75, align 8, !noalias !37
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !36
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !36
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base"* %118, %"struct.std::__1::__hash_node_base"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !36
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !36
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !36
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !36
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !40

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !36
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"class.v8::TracingController::TraceStateObserver"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to %"class.v8::TracingController::TraceStateObserver"**
  %112 = load %"class.v8::TracingController::TraceStateObserver"*, %"class.v8::TracingController::TraceStateObserver"** %102, align 8
  %113 = load %"class.v8::TracingController::TraceStateObserver"*, %"class.v8::TracingController::TraceStateObserver"** %111, align 8
  %114 = icmp eq %"class.v8::TracingController::TraceStateObserver"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::unique_ptr.428"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !36
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.110"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.428"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.428"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.113"** %98 to %"class.std::__1::__compressed_pair.110"**
  store %"class.std::__1::__compressed_pair.110"* %30, %"class.std::__1::__compressed_pair.110"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.428"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #10

declare void @_ZN4base5debug10StackTraceC1Ev(%"class.base::debug::StackTrace"*) unnamed_addr #6

declare void @_ZNK4base5debug10StackTrace5PrintEv(%"class.base::debug::StackTrace"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v813PageAllocatorD2Ev(%"class.v8::PageAllocator"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_113PageAllocatorD0Ev(%"class.gin::(anonymous namespace)::PageAllocator"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gin::(anonymous namespace)::PageAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZN3gin12_GLOBAL__N_113PageAllocator16AllocatePageSizeEv(%"class.gin::(anonymous namespace)::PageAllocator"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i64 4096
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZN3gin12_GLOBAL__N_113PageAllocator14CommitPageSizeEv(%"class.gin::(anonymous namespace)::PageAllocator"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i64 4096
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_113PageAllocator17SetRandomMmapSeedEl(%"class.gin::(anonymous namespace)::PageAllocator"* nocapture readnone, i64) unnamed_addr #0 align 2 {
  tail call void @_ZN4base21SetMmapSeedForTestingEm(i64 %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZN3gin12_GLOBAL__N_113PageAllocator17GetRandomMmapAddrEv(%"class.gin::(anonymous namespace)::PageAllocator"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN4base17GetRandomPageBaseEv() #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZN3gin12_GLOBAL__N_113PageAllocator13AllocatePagesEPvmmN2v813PageAllocator10PermissionE(%"class.gin::(anonymous namespace)::PageAllocator"* nocapture readnone, i8*, i64, i64, i32) unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %4, 5
  %7 = add i32 %4, -1
  %8 = select i1 %6, i32 -1, i32 %7
  %9 = icmp ult i32 %8, 4
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN3gin12_GLOBAL__N_113PageAllocator13AllocatePagesEPvmmN2v813PageAllocator10PermissionE, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %5, %10
  %15 = phi i32 [ %13, %10 ], [ 0, %5 ]
  %16 = tail call i8* @_ZN4base10AllocPagesEPvmmNS_30PageAccessibilityConfigurationENS_7PageTagE(i8* %1, i64 %2, i64 %3, i32 %15, i32 255) #11
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3gin12_GLOBAL__N_113PageAllocator9FreePagesEPvm(%"class.gin::(anonymous namespace)::PageAllocator"* nocapture readnone, i8*, i64) unnamed_addr #0 align 2 {
  tail call void @_ZN4base9FreePagesEPvm(i8* %1, i64 %2) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3gin12_GLOBAL__N_113PageAllocator12ReleasePagesEPvmm(%"class.gin::(anonymous namespace)::PageAllocator"* nocapture readnone, i8*, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds i8, i8* %1, i64 %3
  %6 = sub i64 %2, %3
  tail call void @_ZN4base9FreePagesEPvm(i8* %5, i64 %6) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3gin12_GLOBAL__N_113PageAllocator14SetPermissionsEPvmN2v813PageAllocator10PermissionE(%"class.gin::(anonymous namespace)::PageAllocator"* nocapture readnone, i8*, i64, i32) unnamed_addr #0 align 2 {
  switch i32 %3, label %9 [
    i32 0, label %5
    i32 1, label %10
    i32 2, label %6
    i32 3, label %7
    i32 4, label %8
  ]

5:                                                ; preds = %4
  tail call void @_ZN4base19DecommitSystemPagesEPvmNS_28PageAccessibilityDispositionE(i8* %1, i64 %2, i32 1) #11
  br label %13

6:                                                ; preds = %4
  br label %10

7:                                                ; preds = %4
  br label %10

8:                                                ; preds = %4
  br label %10

9:                                                ; preds = %4
  br label %10

10:                                               ; preds = %4, %6, %7, %8, %9
  %11 = phi i32 [ 0, %9 ], [ 5, %8 ], [ 6, %7 ], [ 2, %6 ], [ %3, %4 ]
  %12 = tail call zeroext i1 @_ZN4base23TrySetSystemPagesAccessEPvmNS_30PageAccessibilityConfigurationE(i8* %1, i64 %2, i32 %11) #11
  br label %13

13:                                               ; preds = %10, %5
  %14 = phi i1 [ true, %5 ], [ %12, %10 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3gin12_GLOBAL__N_113PageAllocator18DiscardSystemPagesEPvm(%"class.gin::(anonymous namespace)::PageAllocator"* nocapture readnone, i8*, i64) unnamed_addr #0 align 2 {
  tail call void @_ZN4base18DiscardSystemPagesEPvm(i8* %1, i64 %2) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v813PageAllocator29ReserveForSharedMemoryMappingEPvm(%"class.v8::PageAllocator"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::PageAllocator::SharedMemory"* @_ZN2v813PageAllocator19AllocateSharedPagesEmPKv(%"class.v8::PageAllocator"*, i64, i8*) unnamed_addr #0 comdat align 2 {
  ret %"class.v8::PageAllocator::SharedMemory"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v813PageAllocator22CanAllocateSharedPagesEv(%"class.v8::PageAllocator"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN4base21SetMmapSeedForTestingEm(i64) local_unnamed_addr #6

declare i8* @_ZN4base17GetRandomPageBaseEv() local_unnamed_addr #6

declare i8* @_ZN4base10AllocPagesEPvmmNS_30PageAccessibilityConfigurationENS_7PageTagE(i8*, i64, i64, i32, i32) local_unnamed_addr #6

declare void @_ZN4base9FreePagesEPvm(i8*, i64) local_unnamed_addr #6

declare void @_ZN4base19DecommitSystemPagesEPvmNS_28PageAccessibilityDispositionE(i8*, i64, i32) local_unnamed_addr #6

declare zeroext i1 @_ZN4base23TrySetSystemPagesAccessEPvmNS_30PageAccessibilityConfigurationE(i8*, i64, i32) local_unnamed_addr #6

declare void @_ZN4base18DiscardSystemPagesEPvm(i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.v8::Task"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.v8::Task"*)**
  %21 = load void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.v8::Task"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.v8::Task"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.v8::Task"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN2v84TaskEFvvEJNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.v8::Task"**
  %6 = load %"class.v8::Task"*, %"class.v8::Task"** %5, align 8
  store %"class.v8::Task"* null, %"class.v8::Task"** %5, align 8
  %7 = icmp eq %"class.v8::Task"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.v8::Task"* %6 to void (%"class.v8::Task"*)***
  %10 = load void (%"class.v8::Task"*)**, void (%"class.v8::Task"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %10, i64 1
  %12 = load void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %11, align 8
  tail call void %12(%"class.v8::Task"* nonnull %6) #11
  br label %13

13:                                               ; preds = %3, %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %13, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS5_7JobTaskENS7_14default_deleteIS9_EEEEE3$_0JSC_EEEFvPNS_11JobDelegateEEE3RunEPNS0_13BindStateBaseESG_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.base::JobDelegate"*) #0 align 2 {
  %3 = alloca %"class.gin::(anonymous namespace)::JobDelegateImpl", align 8
  %4 = ptrtoint %"class.base::JobDelegate"* %1 to i64
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %"class.gin::(anonymous namespace)::JobDelegateImpl"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobDelegateImpl", %"class.gin::(anonymous namespace)::JobDelegateImpl"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobDelegateImpl", %"class.gin::(anonymous namespace)::JobDelegateImpl"* %3, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gin12_GLOBAL__N_115JobDelegateImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = bitcast %"class.base::JobDelegate"** %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = bitcast void ()** %5 to %"class.v8::JobTask"**
  %11 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %10, align 8
  %12 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobDelegateImpl", %"class.gin::(anonymous namespace)::JobDelegateImpl"* %3, i64 0, i32 0
  %13 = bitcast %"class.v8::JobTask"* %11 to void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)***
  %14 = load void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)**, void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)*, void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)** %14, i64 2
  %16 = load void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)*, void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)** %15, align 8
  call void %16(%"class.v8::JobTask"* %11, %"class.v8::JobDelegate"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3gin12_GLOBAL__N_115JobDelegateImpl11ShouldYieldEv(%"class.gin::(anonymous namespace)::JobDelegateImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobDelegateImpl", %"class.gin::(anonymous namespace)::JobDelegateImpl"* %0, i64 0, i32 1
  %3 = load %"class.base::JobDelegate"*, %"class.base::JobDelegate"** %2, align 8
  %4 = tail call zeroext i1 @_ZN4base11JobDelegate11ShouldYieldEv(%"class.base::JobDelegate"* %3) #11
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_115JobDelegateImpl25NotifyConcurrencyIncreaseEv(%"class.gin::(anonymous namespace)::JobDelegateImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobDelegateImpl", %"class.gin::(anonymous namespace)::JobDelegateImpl"* %0, i64 0, i32 1
  %3 = load %"class.base::JobDelegate"*, %"class.base::JobDelegate"** %2, align 8
  tail call void @_ZN4base11JobDelegate25NotifyConcurrencyIncreaseEv(%"class.base::JobDelegate"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i8 @_ZN3gin12_GLOBAL__N_115JobDelegateImpl9GetTaskIdEv(%"class.gin::(anonymous namespace)::JobDelegateImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobDelegateImpl", %"class.gin::(anonymous namespace)::JobDelegateImpl"* %0, i64 0, i32 1
  %3 = load %"class.base::JobDelegate"*, %"class.base::JobDelegate"** %2, align 8
  %4 = tail call zeroext i8 @_ZN4base11JobDelegate9GetTaskIdEv(%"class.base::JobDelegate"* %3) #11
  ret i8 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK3gin12_GLOBAL__N_115JobDelegateImpl15IsJoiningThreadEv(%"class.gin::(anonymous namespace)::JobDelegateImpl"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobDelegateImpl", %"class.gin::(anonymous namespace)::JobDelegateImpl"* %0, i64 0, i32 1
  %3 = load %"class.base::JobDelegate"*, %"class.base::JobDelegate"** %2, align 8
  %4 = getelementptr inbounds %"class.base::JobDelegate", %"class.base::JobDelegate"* %3, i64 0, i32 1
  %5 = load %"class.base::internal::PooledTaskRunnerDelegate"*, %"class.base::internal::PooledTaskRunnerDelegate"** %4, align 8
  %6 = icmp eq %"class.base::internal::PooledTaskRunnerDelegate"* %5, null
  ret i1 %6
}

declare zeroext i1 @_ZN4base11JobDelegate11ShouldYieldEv(%"class.base::JobDelegate"*) local_unnamed_addr #6

declare void @_ZN4base11JobDelegate25NotifyConcurrencyIncreaseEv(%"class.base::JobDelegate"*) local_unnamed_addr #6

declare zeroext i8 @_ZN4base11JobDelegate9GetTaskIdEv(%"class.base::JobDelegate"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS4_7JobTaskENS6_14default_deleteIS8_EEEEE3$_0JSB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.v8::JobTask"**
  %6 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %5, align 8
  store %"class.v8::JobTask"* null, %"class.v8::JobTask"** %5, align 8
  %7 = icmp eq %"class.v8::JobTask"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.v8::JobTask"* %6 to void (%"class.v8::JobTask"*)***
  %10 = load void (%"class.v8::JobTask"*)**, void (%"class.v8::JobTask"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8::JobTask"*)*, void (%"class.v8::JobTask"*)** %10, i64 1
  %12 = load void (%"class.v8::JobTask"*)*, void (%"class.v8::JobTask"*)** %11, align 8
  tail call void %12(%"class.v8::JobTask"* nonnull %6) #11
  br label %13

13:                                               ; preds = %3, %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %13, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @"_ZN4base8internal7InvokerINS0_9BindStateIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS5_7JobTaskENS7_14default_deleteIS9_EEEEE3$_1JNS0_17UnretainedWrapperIS9_EEEEEFmmEE3RunEPNS0_13BindStateBaseEm"(%"class.base::internal::BindStateBase"* nocapture readonly, i64) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.v8::JobTask"**
  %5 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %4, align 8
  %6 = bitcast %"class.v8::JobTask"* %5 to i64 (%"class.v8::JobTask"*, i64)***
  %7 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %7, i64 3
  %9 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %8, align 8
  %10 = tail call i64 %9(%"class.v8::JobTask"* %5, i64 %1) #11
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS4_7JobTaskENS6_14default_deleteIS8_EEEEE3$_1JNS0_17UnretainedWrapperIS8_EEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base9JobHandleC1EOS0_(%"class.base::JobHandle"*, %"class.base::JobHandle"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_113JobHandleImplD2Ev(%"class.gin::(anonymous namespace)::JobHandleImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobHandleImpl", %"class.gin::(anonymous namespace)::JobHandleImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gin12_GLOBAL__N_113JobHandleImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobHandleImpl", %"class.gin::(anonymous namespace)::JobHandleImpl"* %0, i64 0, i32 1
  tail call void @_ZN4base9JobHandleD1Ev(%"class.base::JobHandle"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_113JobHandleImplD0Ev(%"class.gin::(anonymous namespace)::JobHandleImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobHandleImpl", %"class.gin::(anonymous namespace)::JobHandleImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gin12_GLOBAL__N_113JobHandleImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobHandleImpl", %"class.gin::(anonymous namespace)::JobHandleImpl"* %0, i64 0, i32 1
  tail call void @_ZN4base9JobHandleD1Ev(%"class.base::JobHandle"* %3) #11
  %4 = bitcast %"class.gin::(anonymous namespace)::JobHandleImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_113JobHandleImpl25NotifyConcurrencyIncreaseEv(%"class.gin::(anonymous namespace)::JobHandleImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobHandleImpl", %"class.gin::(anonymous namespace)::JobHandleImpl"* %0, i64 0, i32 1
  tail call void @_ZN4base9JobHandle25NotifyConcurrencyIncreaseEv(%"class.base::JobHandle"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_113JobHandleImpl4JoinEv(%"class.gin::(anonymous namespace)::JobHandleImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobHandleImpl", %"class.gin::(anonymous namespace)::JobHandleImpl"* %0, i64 0, i32 1
  tail call void @_ZN4base9JobHandle4JoinEv(%"class.base::JobHandle"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_113JobHandleImpl6CancelEv(%"class.gin::(anonymous namespace)::JobHandleImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobHandleImpl", %"class.gin::(anonymous namespace)::JobHandleImpl"* %0, i64 0, i32 1
  tail call void @_ZN4base9JobHandle6CancelEv(%"class.base::JobHandle"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_113JobHandleImpl15CancelAndDetachEv(%"class.gin::(anonymous namespace)::JobHandleImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobHandleImpl", %"class.gin::(anonymous namespace)::JobHandleImpl"* %0, i64 0, i32 1
  tail call void @_ZN4base9JobHandle15CancelAndDetachEv(%"class.base::JobHandle"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN3gin12_GLOBAL__N_113JobHandleImpl8IsActiveEv(%"class.gin::(anonymous namespace)::JobHandleImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobHandleImpl", %"class.gin::(anonymous namespace)::JobHandleImpl"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK4base9JobHandle8IsActiveEv(%"class.base::JobHandle"* %2) #11
  ret i1 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN3gin12_GLOBAL__N_113JobHandleImpl7IsValidEv(%"class.gin::(anonymous namespace)::JobHandleImpl"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobHandleImpl", %"class.gin::(anonymous namespace)::JobHandleImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.base::internal::JobTaskSource"*, %"class.base::internal::JobTaskSource"** %2, align 8
  %4 = icmp ne %"class.base::internal::JobTaskSource"* %3, null
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK3gin12_GLOBAL__N_113JobHandleImpl21UpdatePriorityEnabledEv(%"class.gin::(anonymous namespace)::JobHandleImpl"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gin12_GLOBAL__N_113JobHandleImpl14UpdatePriorityEN2v812TaskPriorityE(%"class.gin::(anonymous namespace)::JobHandleImpl"*, i8 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gin::(anonymous namespace)::JobHandleImpl", %"class.gin::(anonymous namespace)::JobHandleImpl"* %0, i64 0, i32 1
  tail call void @_ZN4base9JobHandle14UpdatePriorityENS_12TaskPriorityE(%"class.base::JobHandle"* %3, i8 zeroext %1) #11
  ret void
}

declare void @_ZN4base9JobHandle25NotifyConcurrencyIncreaseEv(%"class.base::JobHandle"*) local_unnamed_addr #6

declare void @_ZN4base9JobHandle4JoinEv(%"class.base::JobHandle"*) local_unnamed_addr #6

declare void @_ZN4base9JobHandle6CancelEv(%"class.base::JobHandle"*) local_unnamed_addr #6

declare void @_ZN4base9JobHandle15CancelAndDetachEv(%"class.base::JobHandle"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK4base9JobHandle8IsActiveEv(%"class.base::JobHandle"*) local_unnamed_addr #6

declare void @_ZN4base9JobHandle14UpdatePriorityENS_12TaskPriorityE(%"class.base::JobHandle"*, i8 zeroext) local_unnamed_addr #6

declare i64 @_ZN4base10RandUint64Ev() local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN2v84TaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN2v84TaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIMN2v84TaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIMN2v84TaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIMN2v84TaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIMN2v84TaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN2v84TaskEFvvEJNSt3__110unique_ptrIS4_NS7_14default_deleteIS4_EEEEEEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIMN2v84TaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIMN2v84TaskEFvvEJNSt3__110unique_ptrIS2_NS5_14default_deleteIS2_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!24 = distinct !{!24, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS5_7JobTaskENS7_14default_deleteIS9_EEEEE3$_0JSC_EEEDcOT0_DpOT1_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS5_7JobTaskENS7_14default_deleteIS9_EEEEE3$_0JSC_EEEDcOT0_DpOT1_"}
!28 = distinct !{!28, !29, !"_ZN4base13BindRepeatingIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS3_7JobTaskENS5_14default_deleteIS7_EEEEE3$_0JSA_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!29 = distinct !{!29, !"_ZN4base13BindRepeatingIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS3_7JobTaskENS5_14default_deleteIS7_EEEEE3$_0JSA_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS5_7JobTaskENS7_14default_deleteIS9_EEEEE3$_1JNS0_17UnretainedWrapperIS9_EEEEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS5_7JobTaskENS7_14default_deleteIS9_EEEEE3$_1JNS0_17UnretainedWrapperIS9_EEEEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base13BindRepeatingIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS3_7JobTaskENS5_14default_deleteIS7_EEEEE3$_1JNS_8internal17UnretainedWrapperIS7_EEEEENS_17RepeatingCallbackINSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!34 = distinct !{!34, !"_ZN4base13BindRepeatingIZN3gin10V8Platform7PostJobEN2v812TaskPriorityENSt3__110unique_ptrINS3_7JobTaskENS5_14default_deleteIS7_EEEEE3$_1JNS_8internal17UnretainedWrapperIS7_EEEEENS_17RepeatingCallbackINSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!35 = !{!"branch_weights", i32 2000, i32 1}
!36 = !{i64 0, i64 65}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!39 = distinct !{!39, !"_ZNSt3__112__hash_tableIPN2v817TracingController18TraceStateObserverENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!40 = distinct !{!40, !41}
!41 = !{!"llvm.loop.unroll.disable"}
