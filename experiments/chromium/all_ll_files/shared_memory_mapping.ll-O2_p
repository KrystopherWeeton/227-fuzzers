; ModuleID = '../../base/memory/shared_memory_mapping.cc'
source_filename = "../../base/memory/shared_memory_mapping.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::ReadOnlySharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryTracker" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::Lock", %"class.std::__1::map" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }

$_ZN4base27ReadOnlySharedMemoryMappingD0Ev = comdat any

$_ZN4base27WritableSharedMemoryMappingD0Ev = comdat any

$_ZTVN4base27ReadOnlySharedMemoryMappingE = comdat any

$_ZTVN4base27WritableSharedMemoryMappingE = comdat any

@_ZTVN4base19SharedMemoryMappingE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SharedMemoryMapping"*)* @_ZN4base19SharedMemoryMappingD2Ev to i8*), i8* bitcast (void (%"class.base::SharedMemoryMapping"*)* @_ZN4base19SharedMemoryMappingD0Ev to i8*)] }, align 8
@_ZTVN4base27ReadOnlySharedMemoryMappingE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SharedMemoryMapping"*)* @_ZN4base19SharedMemoryMappingD2Ev to i8*), i8* bitcast (void (%"class.base::ReadOnlySharedMemoryMapping"*)* @_ZN4base27ReadOnlySharedMemoryMappingD0Ev to i8*)] }, comdat, align 8
@_ZTVN4base27WritableSharedMemoryMappingE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SharedMemoryMapping"*)* @_ZN4base19SharedMemoryMappingD2Ev to i8*), i8* bitcast (void (%"class.base::WritableSharedMemoryMapping"*)* @_ZN4base27WritableSharedMemoryMappingD0Ev to i8*)] }, comdat, align 8

@_ZN4base19SharedMemoryMappingC1Ev = hidden unnamed_addr alias void (%"class.base::SharedMemoryMapping"*), void (%"class.base::SharedMemoryMapping"*)* @_ZN4base19SharedMemoryMappingC2Ev
@_ZN4base19SharedMemoryMappingC1EOS0_ = hidden unnamed_addr alias void (%"class.base::SharedMemoryMapping"*, %"class.base::SharedMemoryMapping"*), void (%"class.base::SharedMemoryMapping"*, %"class.base::SharedMemoryMapping"*)* @_ZN4base19SharedMemoryMappingC2EOS0_
@_ZN4base19SharedMemoryMappingD1Ev = hidden unnamed_addr alias void (%"class.base::SharedMemoryMapping"*), void (%"class.base::SharedMemoryMapping"*)* @_ZN4base19SharedMemoryMappingD2Ev
@_ZN4base19SharedMemoryMappingC1EPvmmRKNS_16UnguessableTokenE = hidden unnamed_addr alias void (%"class.base::SharedMemoryMapping"*, i8*, i64, i64, %"class.base::UnguessableToken"*), void (%"class.base::SharedMemoryMapping"*, i8*, i64, i64, %"class.base::UnguessableToken"*)* @_ZN4base19SharedMemoryMappingC2EPvmmRKNS_16UnguessableTokenE
@_ZN4base27ReadOnlySharedMemoryMappingC1Ev = hidden unnamed_addr alias void (%"class.base::ReadOnlySharedMemoryMapping"*), void (%"class.base::ReadOnlySharedMemoryMapping"*)* @_ZN4base27ReadOnlySharedMemoryMappingC2Ev
@_ZN4base27ReadOnlySharedMemoryMappingC1EOS0_ = hidden unnamed_addr alias void (%"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"*), void (%"class.base::ReadOnlySharedMemoryMapping"*, %"class.base::ReadOnlySharedMemoryMapping"*)* @_ZN4base27ReadOnlySharedMemoryMappingC2EOS0_
@_ZN4base27ReadOnlySharedMemoryMappingC1EPvmmRKNS_16UnguessableTokenE = hidden unnamed_addr alias void (%"class.base::ReadOnlySharedMemoryMapping"*, i8*, i64, i64, %"class.base::UnguessableToken"*), void (%"class.base::ReadOnlySharedMemoryMapping"*, i8*, i64, i64, %"class.base::UnguessableToken"*)* @_ZN4base27ReadOnlySharedMemoryMappingC2EPvmmRKNS_16UnguessableTokenE
@_ZN4base27WritableSharedMemoryMappingC1Ev = hidden unnamed_addr alias void (%"class.base::WritableSharedMemoryMapping"*), void (%"class.base::WritableSharedMemoryMapping"*)* @_ZN4base27WritableSharedMemoryMappingC2Ev
@_ZN4base27WritableSharedMemoryMappingC1EOS0_ = hidden unnamed_addr alias void (%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"*), void (%"class.base::WritableSharedMemoryMapping"*, %"class.base::WritableSharedMemoryMapping"*)* @_ZN4base27WritableSharedMemoryMappingC2EOS0_
@_ZN4base27WritableSharedMemoryMappingC1EPvmmRKNS_16UnguessableTokenE = hidden unnamed_addr alias void (%"class.base::WritableSharedMemoryMapping"*, i8*, i64, i64, %"class.base::UnguessableToken"*), void (%"class.base::WritableSharedMemoryMapping"*, i8*, i64, i64, %"class.base::UnguessableToken"*)* @_ZN4base27WritableSharedMemoryMappingC2EPvmmRKNS_16UnguessableTokenE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19SharedMemoryMappingC2Ev(%"class.base::SharedMemoryMapping"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19SharedMemoryMappingC2EOS0_(%"class.base::SharedMemoryMapping"* nocapture, %"class.base::SharedMemoryMapping"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  store i8* null, i8** %5, align 8
  %8 = bitcast i8** %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %1, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %1, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %1, i64 0, i32 4
  %17 = bitcast %"class.base::UnguessableToken"* %15 to i8*
  %18 = bitcast %"class.base::UnguessableToken"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.base::SharedMemoryMapping"* @_ZN4base19SharedMemoryMappingaSEOS0_(%"class.base::SharedMemoryMapping"* returned, %"class.base::SharedMemoryMapping"* nocapture dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN4base26SharedMemorySecurityPolicy28ReleaseReservationForMappingEm(i64 %8) #6
  %9 = tail call %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() #6
  tail call void @_ZN4base19SharedMemoryTracker20DecrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"* %9, %"class.base::SharedMemoryMapping"* dereferenceable(48) %0) #6
  %10 = load i8*, i8** %3, align 8
  %11 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = tail call i32 @munmap(i8* %10, i64 %12) #6
  br label %14

14:                                               ; preds = %2, %6
  %15 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %1, i64 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  store i8* null, i8** %15, align 8
  %18 = bitcast i8** %3 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %1, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 2
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %1, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 3
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %1, i64 0, i32 4
  %26 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 4
  %27 = bitcast %"class.base::UnguessableToken"* %26 to i8*
  %28 = bitcast %"class.base::UnguessableToken"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false)
  ret %"class.base::SharedMemoryMapping"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19SharedMemoryMapping5UnmapEv(%"class.base::SharedMemoryMapping"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  tail call void @_ZN4base26SharedMemorySecurityPolicy28ReleaseReservationForMappingEm(i64 %7) #6
  %8 = tail call %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() #6
  tail call void @_ZN4base19SharedMemoryTracker20DecrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"* %8, %"class.base::SharedMemoryMapping"* dereferenceable(48) %0) #6
  %9 = load i8*, i8** %2, align 8
  %10 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = tail call i32 @munmap(i8* %9, i64 %11) #6
  ret void

13:                                               ; preds = %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19SharedMemoryMappingD0Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN4base26SharedMemorySecurityPolicy28ReleaseReservationForMappingEm(i64 %8) #6
  %9 = tail call %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() #6
  tail call void @_ZN4base19SharedMemoryTracker20DecrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"* %9, %"class.base::SharedMemoryMapping"* dereferenceable(48) %0) #6
  %10 = load i8*, i8** %3, align 8
  %11 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = tail call i32 @munmap(i8* %10, i64 %12) #6
  br label %14

14:                                               ; preds = %1, %6
  %15 = bitcast %"class.base::SharedMemoryMapping"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19SharedMemoryMappingC2EPvmmRKNS_16UnguessableTokenE(%"class.base::SharedMemoryMapping"*, i8*, i64, i64, %"class.base::UnguessableToken"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 1
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 2
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 3
  store i64 %3, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 4
  %11 = bitcast %"class.base::UnguessableToken"* %10 to i8*
  %12 = bitcast %"class.base::UnguessableToken"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  %13 = tail call %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() #6
  tail call void @_ZN4base19SharedMemoryTracker20IncrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"* %13, %"class.base::SharedMemoryMapping"* dereferenceable(48) %0) #6
  ret void
}

declare %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() local_unnamed_addr #3

declare void @_ZN4base19SharedMemoryTracker20IncrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"*, %"class.base::SharedMemoryMapping"* dereferenceable(48)) local_unnamed_addr #3

declare void @_ZN4base26SharedMemorySecurityPolicy28ReleaseReservationForMappingEm(i64) local_unnamed_addr #3

declare void @_ZN4base19SharedMemoryTracker20DecrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"*, %"class.base::SharedMemoryMapping"* dereferenceable(48)) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @munmap(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27ReadOnlySharedMemoryMappingC2Ev(%"class.base::ReadOnlySharedMemoryMapping"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base27ReadOnlySharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27ReadOnlySharedMemoryMappingC2EOS0_(%"class.base::ReadOnlySharedMemoryMapping"* nocapture, %"class.base::ReadOnlySharedMemoryMapping"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %1, i64 0, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  store i8* null, i8** %5, align 8
  %8 = bitcast i8** %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %1, i64 0, i32 0, i32 2
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 3
  %13 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %1, i64 0, i32 0, i32 3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 4
  %16 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %1, i64 0, i32 0, i32 4
  %17 = bitcast %"class.base::UnguessableToken"* %15 to i8*
  %18 = bitcast %"class.base::UnguessableToken"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base27ReadOnlySharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.base::ReadOnlySharedMemoryMapping"* @_ZN4base27ReadOnlySharedMemoryMappingaSEOS0_(%"class.base::ReadOnlySharedMemoryMapping"* returned, %"class.base::ReadOnlySharedMemoryMapping"* nocapture dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  tail call void @_ZN4base26SharedMemorySecurityPolicy28ReleaseReservationForMappingEm(i64 %9) #6
  %10 = tail call %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() #6
  tail call void @_ZN4base19SharedMemoryTracker20DecrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"* %10, %"class.base::SharedMemoryMapping"* dereferenceable(48) %7) #6
  %11 = load i8*, i8** %3, align 8
  %12 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = tail call i32 @munmap(i8* %11, i64 %13) #6
  br label %15

15:                                               ; preds = %2, %6
  %16 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %1, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  store i8* null, i8** %16, align 8
  %19 = bitcast i8** %3 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %1, i64 0, i32 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %1, i64 0, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 3
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %1, i64 0, i32 0, i32 4
  %27 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 4
  %28 = bitcast %"class.base::UnguessableToken"* %27 to i8*
  %29 = bitcast %"class.base::UnguessableToken"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #6
  ret %"class.base::ReadOnlySharedMemoryMapping"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27ReadOnlySharedMemoryMappingC2EPvmmRKNS_16UnguessableTokenE(%"class.base::ReadOnlySharedMemoryMapping"*, i8*, i64, i64, %"class.base::UnguessableToken"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 3
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 4
  %12 = bitcast %"class.base::UnguessableToken"* %11 to i8*
  %13 = bitcast %"class.base::UnguessableToken"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #6
  %14 = tail call %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() #6
  tail call void @_ZN4base19SharedMemoryTracker20IncrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"* %14, %"class.base::SharedMemoryMapping"* dereferenceable(48) %6) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base27ReadOnlySharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27WritableSharedMemoryMappingC2Ev(%"class.base::WritableSharedMemoryMapping"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  %4 = bitcast i8** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 40, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base27WritableSharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27WritableSharedMemoryMappingC2EOS0_(%"class.base::WritableSharedMemoryMapping"* nocapture, %"class.base::WritableSharedMemoryMapping"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %1, i64 0, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  store i8* null, i8** %5, align 8
  %8 = bitcast i8** %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %1, i64 0, i32 0, i32 2
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 3
  %13 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %1, i64 0, i32 0, i32 3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 4
  %16 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %1, i64 0, i32 0, i32 4
  %17 = bitcast %"class.base::UnguessableToken"* %15 to i8*
  %18 = bitcast %"class.base::UnguessableToken"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base27WritableSharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.base::WritableSharedMemoryMapping"* @_ZN4base27WritableSharedMemoryMappingaSEOS0_(%"class.base::WritableSharedMemoryMapping"* returned, %"class.base::WritableSharedMemoryMapping"* nocapture dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  tail call void @_ZN4base26SharedMemorySecurityPolicy28ReleaseReservationForMappingEm(i64 %9) #6
  %10 = tail call %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() #6
  tail call void @_ZN4base19SharedMemoryTracker20DecrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"* %10, %"class.base::SharedMemoryMapping"* dereferenceable(48) %7) #6
  %11 = load i8*, i8** %3, align 8
  %12 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = tail call i32 @munmap(i8* %11, i64 %13) #6
  br label %15

15:                                               ; preds = %2, %6
  %16 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %1, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  store i8* null, i8** %16, align 8
  %19 = bitcast i8** %3 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %1, i64 0, i32 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %1, i64 0, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 3
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %1, i64 0, i32 0, i32 4
  %27 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 4
  %28 = bitcast %"class.base::UnguessableToken"* %27 to i8*
  %29 = bitcast %"class.base::UnguessableToken"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #6
  ret %"class.base::WritableSharedMemoryMapping"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base27WritableSharedMemoryMappingC2EPvmmRKNS_16UnguessableTokenE(%"class.base::WritableSharedMemoryMapping"*, i8*, i64, i64, %"class.base::UnguessableToken"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 3
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 4
  %12 = bitcast %"class.base::UnguessableToken"* %11 to i8*
  %13 = bitcast %"class.base::UnguessableToken"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #6
  %14 = tail call %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() #6
  tail call void @_ZN4base19SharedMemoryTracker20IncrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"* %14, %"class.base::SharedMemoryMapping"* dereferenceable(48) %6) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base27WritableSharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base19SharedMemoryMappingD2Ev(%"class.base::SharedMemoryMapping"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN4base26SharedMemorySecurityPolicy28ReleaseReservationForMappingEm(i64 %8) #6
  %9 = tail call %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() #6
  tail call void @_ZN4base19SharedMemoryTracker20DecrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"* %9, %"class.base::SharedMemoryMapping"* dereferenceable(48) %0) #6
  %10 = load i8*, i8** %3, align 8
  %11 = getelementptr inbounds %"class.base::SharedMemoryMapping", %"class.base::SharedMemoryMapping"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = tail call i32 @munmap(i8* %10, i64 %12) #6
  br label %14

14:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base27ReadOnlySharedMemoryMappingD0Ev(%"class.base::ReadOnlySharedMemoryMapping"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  tail call void @_ZN4base26SharedMemorySecurityPolicy28ReleaseReservationForMappingEm(i64 %9) #6
  %10 = tail call %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() #6
  tail call void @_ZN4base19SharedMemoryTracker20DecrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"* %10, %"class.base::SharedMemoryMapping"* dereferenceable(48) %7) #6
  %11 = load i8*, i8** %3, align 8
  %12 = getelementptr inbounds %"class.base::ReadOnlySharedMemoryMapping", %"class.base::ReadOnlySharedMemoryMapping"* %0, i64 0, i32 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = tail call i32 @munmap(i8* %11, i64 %13) #6
  br label %15

15:                                               ; preds = %1, %6
  %16 = bitcast %"class.base::ReadOnlySharedMemoryMapping"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base27WritableSharedMemoryMappingD0Ev(%"class.base::WritableSharedMemoryMapping"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base19SharedMemoryMappingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  tail call void @_ZN4base26SharedMemorySecurityPolicy28ReleaseReservationForMappingEm(i64 %9) #6
  %10 = tail call %"class.base::SharedMemoryTracker"* @_ZN4base19SharedMemoryTracker11GetInstanceEv() #6
  tail call void @_ZN4base19SharedMemoryTracker20DecrementMemoryUsageERKNS_19SharedMemoryMappingE(%"class.base::SharedMemoryTracker"* %10, %"class.base::SharedMemoryMapping"* dereferenceable(48) %7) #6
  %11 = load i8*, i8** %3, align 8
  %12 = getelementptr inbounds %"class.base::WritableSharedMemoryMapping", %"class.base::WritableSharedMemoryMapping"* %0, i64 0, i32 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = tail call i32 @munmap(i8* %11, i64 %13) #6
  br label %15

15:                                               ; preds = %1, %6
  %16 = bitcast %"class.base::WritableSharedMemoryMapping"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
