; ModuleID = '../../third_party/blink/renderer/core/animation/svg_interpolation_types_map.cc'
source_filename = "../../third_party/blink/renderer/core/animation/svg_interpolation_types_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<blink::PropertyHandle, std::__1::unique_ptr<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>, std::__1::default_delete<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator> > >, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<std::__1::unique_ptr<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>, std::__1::default_delete<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator> > > >, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<blink::PropertyHandle, std::__1::unique_ptr<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>, std::__1::default_delete<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator> > >, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<std::__1::unique_ptr<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>, std::__1::default_delete<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator> > > >, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::InterpolationType"* }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::SVGInterpolationTypesMap" = type { %"class.blink::InterpolationTypesMap" }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.WTF::Vector"* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::SVGAngleInterpolationType"* }
%"class.blink::SVGAngleInterpolationType" = type { %"class.blink::SVGInterpolationType" }
%"class.blink::SVGInterpolationType" = type { %"class.blink::InterpolationType" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::SVGIntegerInterpolationType"* }
%"class.blink::SVGIntegerInterpolationType" = type { %"class.blink::SVGInterpolationType" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::SVGIntegerOptionalIntegerInterpolationType"* }
%"class.blink::SVGIntegerOptionalIntegerInterpolationType" = type { %"class.blink::SVGInterpolationType" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::SVGLengthInterpolationType"* }
%"class.blink::SVGLengthInterpolationType" = type <{ %"class.blink::SVGInterpolationType", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::SVGNumberInterpolationType"* }
%"class.blink::SVGNumberInterpolationType" = type <{ %"class.blink::SVGInterpolationType", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::SVGLengthListInterpolationType"* }
%"class.blink::SVGLengthListInterpolationType" = type <{ %"class.blink::SVGInterpolationType", i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::SVGNumberListInterpolationType"* }
%"class.blink::SVGNumberListInterpolationType" = type { %"class.blink::SVGInterpolationType" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::SVGNumberOptionalNumberInterpolationType"* }
%"class.blink::SVGNumberOptionalNumberInterpolationType" = type { %"class.blink::SVGInterpolationType" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::SVGPathInterpolationType"* }
%"class.blink::SVGPathInterpolationType" = type { %"class.blink::SVGInterpolationType" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::SVGPointListInterpolationType"* }
%"class.blink::SVGPointListInterpolationType" = type { %"class.blink::SVGInterpolationType" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::SVGRectInterpolationType"* }
%"class.blink::SVGRectInterpolationType" = type { %"class.blink::SVGInterpolationType" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::SVGTransformListInterpolationType"* }
%"class.blink::SVGTransformListInterpolationType" = type { %"class.blink::SVGInterpolationType" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::SVGValueInterpolationType"* }
%"class.blink::SVGValueInterpolationType" = type { %"class.blink::SVGInterpolationType" }
%"struct.WTF::KeyValuePair" = type { %"class.blink::PropertyHandle", %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.WTF::Vector"* }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.115 }
%union.anon.115 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK5blink21InterpolationTypesMap7VersionEv = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6LookupINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EEPKSH_RKT0_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25SVGAngleInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_27SVGIntegerInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_42SVGIntegerOptionalIntegerInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26SVGLengthInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26SVGNumberInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30SVGLengthListInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30SVGNumberListInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_40SVGNumberOptionalNumberInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24SVGPathInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29SVGPointListInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24SVGRectInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_33SVGTransformListInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25SVGValueInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6insertINS_17HashMapTranslatorISQ_SL_SC_EERKS2_NS5_ISD_NS9_ISD_EEEEEENS_18HashTableAddResultISR_SH_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6ExpandEPSH_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink14PropertyHandleEEENS2_INSt3__110unique_ptrIKNS_6VectorINS7_IKNS3_17InterpolationTypeENS6_14default_deleteISA_EEEELj0ENS_18PartitionAllocatorEEENSB_ISG_EEEEEEEENS_11DefaultHashIS4_E4HashESE_E9TranslateINS_12KeyValuePairIS4_SI_EERKS4_NS7_ISF_NSB_ISF_EEEEEEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E8RehashToEPSH_jSS_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIN5blink14PropertyHandleENSt3__110unique_ptrIKNS_6VectorINS5_IKNS2_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEESC_NS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSJ_ISG_EEEELb0EE4MoveEOSH_RSH_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E16LookupForWritingINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EENS4_4pairIPSH_bEERKT0_ = comdat any

@_ZZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleEE22s_applicable_types_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleEE22s_applicable_types_map = internal global i64 0, align 8
@_ZN5blink9svg_names11kOrientAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kNumOctavesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kTargetXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kTargetYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kOrderAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kCxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kCyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kFxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kFyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kMarkerHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kMarkerWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kRAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kRefXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kRefYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kRxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kRyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kStartOffsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kTextLengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kX1AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kX2AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kY1AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kY2AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kDxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kDyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kAmplitudeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kAzimuthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kBiasAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names20kDiffuseConstantAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kDivisorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kElevationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names13kExponentAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kInterceptAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kK1AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kK2AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kK3AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kK4AttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names22kLimitingConeAngleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kOffsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names15kPathLengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kPointsAtXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kPointsAtYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kPointsAtZAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kScaleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kSeedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kSlopeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kSpecularConstantAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kSpecularExponentAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kSurfaceScaleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kZAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kKernelMatrixAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kRotateAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names16kTableValuesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kValuesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kBaseFrequencyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kKernelUnitLengthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kRadiusAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names17kStdDeviationAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kDAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kPointsAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names12kViewBoxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names22kGradientTransformAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names21kPatternTransformAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names14kTransformAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink24SVGInterpolationTypesMapE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (%"class.WTF::Vector"* (%"class.blink::SVGInterpolationTypesMap"*, %"class.blink::PropertyHandle"*)* @_ZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleE to i8*), i8* bitcast (i64 (%"class.blink::InterpolationTypesMap"*)* @_ZNK5blink21InterpolationTypesMap7VersionEv to i8*)] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [200 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>]\00", align 1
@_ZTVN5blink25SVGAngleInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [159 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >]\00", align 1
@_ZTVN5blink27SVGIntegerInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink42SVGIntegerOptionalIntegerInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink26SVGLengthInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink26SVGNumberInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink30SVGLengthListInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink30SVGNumberListInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink40SVGNumberOptionalNumberInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink24SVGPathInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink29SVGPointListInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink24SVGRectInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink33SVGTransformListInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN5blink25SVGValueInterpolationTypeE = external unnamed_addr constant { [13 x i8*] }, align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink14PropertyHandleENSt3__110unique_ptrIKNS_6VectorINS5_IKNS2_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEEEEPKcv = private unnamed_addr constant [459 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::PropertyHandle, std::__1::unique_ptr<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>, std::__1::default_delete<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator> > > >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector"* @_ZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleE(%"class.blink::SVGInterpolationTypesMap"* nocapture readnone, %"class.blink::PropertyHandle"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.13", align 8
  %4 = alloca %"class.std::__1::unique_ptr.19", align 8
  %5 = alloca %"class.std::__1::unique_ptr.25", align 8
  %6 = alloca %"class.std::__1::unique_ptr.31", align 8
  %7 = alloca %"class.std::__1::unique_ptr.37", align 8
  %8 = alloca %"class.std::__1::unique_ptr.43", align 8
  %9 = alloca %"class.std::__1::unique_ptr.49", align 8
  %10 = alloca %"class.std::__1::unique_ptr.37", align 8
  %11 = alloca %"class.std::__1::unique_ptr.49", align 8
  %12 = alloca %"class.std::__1::unique_ptr.43", align 8
  %13 = alloca %"class.std::__1::unique_ptr.55", align 8
  %14 = alloca %"class.std::__1::unique_ptr.61", align 8
  %15 = alloca %"class.std::__1::unique_ptr.67", align 8
  %16 = alloca %"class.std::__1::unique_ptr.73", align 8
  %17 = alloca %"class.std::__1::unique_ptr.79", align 8
  %18 = alloca %"class.std::__1::unique_ptr.85", align 8
  %19 = alloca %"class.std::__1::unique_ptr.91", align 8
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleEE22s_applicable_types_map to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26, !prof !2

22:                                               ; preds = %2
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleEE22s_applicable_types_map) #10
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleEE22s_applicable_types_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleEE22s_applicable_types_map) #10
  br label %26

26:                                               ; preds = %22, %25, %2
  %27 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6LookupINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EEPKSH_RKT0_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleEE22s_applicable_types_map to %"class.WTF::HashTable"*), %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  %28 = icmp eq %"struct.WTF::KeyValuePair"* %27, null
  %29 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleEE22s_applicable_types_map to %"struct.WTF::KeyValuePair"**), align 8
  %30 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleEE22s_applicable_types_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %29, i64 %31
  %33 = select i1 %28, %"struct.WTF::KeyValuePair"* %32, %"struct.WTF::KeyValuePair"* %27
  %34 = icmp eq %"struct.WTF::KeyValuePair"* %33, %32
  br i1 %34, label %38, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %36, align 8
  br label %1052

38:                                               ; preds = %26
  %39 = bitcast %"class.std::__1::unique_ptr.13"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %3, i64 0, i32 0, i32 0, i32 0
  %41 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %42 = bitcast i8* %41 to %"class.WTF::Vector"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #10
  %43 = bitcast %"class.std::__1::unique_ptr.13"* %3 to i8**
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 1
  %45 = bitcast %union.anon* %44 to %"class.blink::QualifiedName"**
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %45, align 8
  %47 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kOrientAttrE, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %46, i64 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %47, i64 0, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %51
  br i1 %52, label %53, label %90

53:                                               ; preds = %38
  %54 = bitcast %"class.std::__1::unique_ptr.19"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = tail call noalias i8* @malloc(i64 32) #10
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = bitcast i8* %56 to i32*
  store i32 5, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %55, i64 16
  %59 = bitcast i8* %58 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %59, align 8
  %60 = getelementptr inbounds i8, i8* %55, i64 24
  %61 = bitcast i8* %60 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  %62 = bitcast i8* %55 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink25SVGAngleInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %4, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr.19"* %4 to i8**
  store i8* %55, i8** %64, align 8
  %65 = getelementptr inbounds i8, i8* %41, i64 12
  %66 = bitcast i8* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds i8, i8* %41, i64 8
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %67, %70
  br i1 %71, label %81, label %72, !prof !3

72:                                               ; preds = %53
  %73 = ptrtoint i8* %55 to i64
  %74 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %75 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %74, align 8
  %76 = zext i32 %67 to i64
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 %76
  store %"class.blink::SVGAngleInterpolationType"* null, %"class.blink::SVGAngleInterpolationType"** %63, align 8
  %78 = bitcast %"class.std::__1::unique_ptr"* %77 to i64*
  store i64 %73, i64* %78, align 8
  %79 = load i32, i32* %66, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %66, align 4
  br label %82

81:                                               ; preds = %53
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25SVGAngleInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.19"* nonnull dereferenceable(8) %4) #10
  br label %82

82:                                               ; preds = %72, %81
  %83 = load %"class.blink::SVGAngleInterpolationType"*, %"class.blink::SVGAngleInterpolationType"** %63, align 8
  store %"class.blink::SVGAngleInterpolationType"* null, %"class.blink::SVGAngleInterpolationType"** %63, align 8
  %84 = icmp eq %"class.blink::SVGAngleInterpolationType"* %83, null
  br i1 %84, label %974, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.blink::SVGAngleInterpolationType"* %83 to void (%"class.blink::SVGAngleInterpolationType"*)***
  %87 = load void (%"class.blink::SVGAngleInterpolationType"*)**, void (%"class.blink::SVGAngleInterpolationType"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.blink::SVGAngleInterpolationType"*)*, void (%"class.blink::SVGAngleInterpolationType"*)** %87, i64 1
  %89 = load void (%"class.blink::SVGAngleInterpolationType"*)*, void (%"class.blink::SVGAngleInterpolationType"*)** %88, align 8
  call void %89(%"class.blink::SVGAngleInterpolationType"* nonnull %83) #10
  br label %974

90:                                               ; preds = %38
  %91 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names15kNumOctavesAttrE, align 8
  %92 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %91, i64 0, i32 0, i32 0
  %93 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %92, align 8
  %94 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %93
  br i1 %94, label %105, label %95

95:                                               ; preds = %90
  %96 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names12kTargetXAttrE, align 8
  %97 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %97, align 8
  %99 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %98
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names12kTargetYAttrE, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %102, align 8
  %104 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %103
  br i1 %104, label %105, label %142

105:                                              ; preds = %100, %95, %90
  %106 = bitcast %"class.std::__1::unique_ptr.25"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #10
  %107 = tail call noalias i8* @malloc(i64 32) #10
  %108 = getelementptr inbounds i8, i8* %107, i64 8
  %109 = bitcast i8* %108 to i32*
  store i32 5, i32* %109, align 8
  %110 = getelementptr inbounds i8, i8* %107, i64 16
  %111 = bitcast i8* %110 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %111, align 8
  %112 = getelementptr inbounds i8, i8* %107, i64 24
  %113 = bitcast i8* %112 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  %114 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink27SVGIntegerInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %5, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr.25"* %5 to i8**
  store i8* %107, i8** %116, align 8
  %117 = getelementptr inbounds i8, i8* %41, i64 12
  %118 = bitcast i8* %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds i8, i8* %41, i64 8
  %121 = bitcast i8* %120 to i32*
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %119, %122
  br i1 %123, label %133, label %124, !prof !3

124:                                              ; preds = %105
  %125 = ptrtoint i8* %107 to i64
  %126 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %127 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %126, align 8
  %128 = zext i32 %119 to i64
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %127, i64 %128
  store %"class.blink::SVGIntegerInterpolationType"* null, %"class.blink::SVGIntegerInterpolationType"** %115, align 8
  %130 = bitcast %"class.std::__1::unique_ptr"* %129 to i64*
  store i64 %125, i64* %130, align 8
  %131 = load i32, i32* %118, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %118, align 4
  br label %134

133:                                              ; preds = %105
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_27SVGIntegerInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.25"* nonnull dereferenceable(8) %5) #10
  br label %134

134:                                              ; preds = %124, %133
  %135 = load %"class.blink::SVGIntegerInterpolationType"*, %"class.blink::SVGIntegerInterpolationType"** %115, align 8
  store %"class.blink::SVGIntegerInterpolationType"* null, %"class.blink::SVGIntegerInterpolationType"** %115, align 8
  %136 = icmp eq %"class.blink::SVGIntegerInterpolationType"* %135, null
  br i1 %136, label %974, label %137

137:                                              ; preds = %134
  %138 = bitcast %"class.blink::SVGIntegerInterpolationType"* %135 to void (%"class.blink::SVGIntegerInterpolationType"*)***
  %139 = load void (%"class.blink::SVGIntegerInterpolationType"*)**, void (%"class.blink::SVGIntegerInterpolationType"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.blink::SVGIntegerInterpolationType"*)*, void (%"class.blink::SVGIntegerInterpolationType"*)** %139, i64 1
  %141 = load void (%"class.blink::SVGIntegerInterpolationType"*)*, void (%"class.blink::SVGIntegerInterpolationType"*)** %140, align 8
  call void %141(%"class.blink::SVGIntegerInterpolationType"* nonnull %135) #10
  br label %974

142:                                              ; preds = %100
  %143 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kOrderAttrE, align 8
  %144 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %144, align 8
  %146 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %145
  br i1 %146, label %147, label %184

147:                                              ; preds = %142
  %148 = bitcast %"class.std::__1::unique_ptr.31"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #10
  %149 = tail call noalias i8* @malloc(i64 32) #10
  %150 = getelementptr inbounds i8, i8* %149, i64 8
  %151 = bitcast i8* %150 to i32*
  store i32 5, i32* %151, align 8
  %152 = getelementptr inbounds i8, i8* %149, i64 16
  %153 = bitcast i8* %152 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %153, align 8
  %154 = getelementptr inbounds i8, i8* %149, i64 24
  %155 = bitcast i8* %154 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %155, align 8
  %156 = bitcast i8* %149 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink42SVGIntegerOptionalIntegerInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %6, i64 0, i32 0, i32 0, i32 0
  %158 = bitcast %"class.std::__1::unique_ptr.31"* %6 to i8**
  store i8* %149, i8** %158, align 8
  %159 = getelementptr inbounds i8, i8* %41, i64 12
  %160 = bitcast i8* %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds i8, i8* %41, i64 8
  %163 = bitcast i8* %162 to i32*
  %164 = load i32, i32* %163, align 8
  %165 = icmp eq i32 %161, %164
  br i1 %165, label %175, label %166, !prof !3

166:                                              ; preds = %147
  %167 = ptrtoint i8* %149 to i64
  %168 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %169 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %168, align 8
  %170 = zext i32 %161 to i64
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 %170
  store %"class.blink::SVGIntegerOptionalIntegerInterpolationType"* null, %"class.blink::SVGIntegerOptionalIntegerInterpolationType"** %157, align 8
  %172 = bitcast %"class.std::__1::unique_ptr"* %171 to i64*
  store i64 %167, i64* %172, align 8
  %173 = load i32, i32* %160, align 4
  %174 = add i32 %173, 1
  store i32 %174, i32* %160, align 4
  br label %176

175:                                              ; preds = %147
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_42SVGIntegerOptionalIntegerInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.31"* nonnull dereferenceable(8) %6) #10
  br label %176

176:                                              ; preds = %166, %175
  %177 = load %"class.blink::SVGIntegerOptionalIntegerInterpolationType"*, %"class.blink::SVGIntegerOptionalIntegerInterpolationType"** %157, align 8
  store %"class.blink::SVGIntegerOptionalIntegerInterpolationType"* null, %"class.blink::SVGIntegerOptionalIntegerInterpolationType"** %157, align 8
  %178 = icmp eq %"class.blink::SVGIntegerOptionalIntegerInterpolationType"* %177, null
  br i1 %178, label %974, label %179

179:                                              ; preds = %176
  %180 = bitcast %"class.blink::SVGIntegerOptionalIntegerInterpolationType"* %177 to void (%"class.blink::SVGIntegerOptionalIntegerInterpolationType"*)***
  %181 = load void (%"class.blink::SVGIntegerOptionalIntegerInterpolationType"*)**, void (%"class.blink::SVGIntegerOptionalIntegerInterpolationType"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.blink::SVGIntegerOptionalIntegerInterpolationType"*)*, void (%"class.blink::SVGIntegerOptionalIntegerInterpolationType"*)** %181, i64 1
  %183 = load void (%"class.blink::SVGIntegerOptionalIntegerInterpolationType"*)*, void (%"class.blink::SVGIntegerOptionalIntegerInterpolationType"*)** %182, align 8
  call void %183(%"class.blink::SVGIntegerOptionalIntegerInterpolationType"* nonnull %177) #10
  br label %974

184:                                              ; preds = %142
  %185 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kCxAttrE, align 8
  %186 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %185, i64 0, i32 0, i32 0
  %187 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %186, align 8
  %188 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %187
  br i1 %188, label %279, label %189

189:                                              ; preds = %184
  %190 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kCyAttrE, align 8
  %191 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %190, i64 0, i32 0, i32 0
  %192 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %191, align 8
  %193 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %192
  br i1 %193, label %279, label %194

194:                                              ; preds = %189
  %195 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kFxAttrE, align 8
  %196 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %195, i64 0, i32 0, i32 0
  %197 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %196, align 8
  %198 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %197
  br i1 %198, label %279, label %199

199:                                              ; preds = %194
  %200 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kFyAttrE, align 8
  %201 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %200, i64 0, i32 0, i32 0
  %202 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %201, align 8
  %203 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %202
  br i1 %203, label %279, label %204

204:                                              ; preds = %199
  %205 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kHeightAttrE, align 8
  %206 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %205, i64 0, i32 0, i32 0
  %207 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %206, align 8
  %208 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %207
  br i1 %208, label %279, label %209

209:                                              ; preds = %204
  %210 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names17kMarkerHeightAttrE, align 8
  %211 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %210, i64 0, i32 0, i32 0
  %212 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %211, align 8
  %213 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %212
  br i1 %213, label %279, label %214

214:                                              ; preds = %209
  %215 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names16kMarkerWidthAttrE, align 8
  %216 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %215, i64 0, i32 0, i32 0
  %217 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %216, align 8
  %218 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %217
  br i1 %218, label %279, label %219

219:                                              ; preds = %214
  %220 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kRAttrE, align 8
  %221 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %220, i64 0, i32 0, i32 0
  %222 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %221, align 8
  %223 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %222
  br i1 %223, label %279, label %224

224:                                              ; preds = %219
  %225 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kRefXAttrE, align 8
  %226 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %225, i64 0, i32 0, i32 0
  %227 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %226, align 8
  %228 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %227
  br i1 %228, label %279, label %229

229:                                              ; preds = %224
  %230 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kRefYAttrE, align 8
  %231 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %230, i64 0, i32 0, i32 0
  %232 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %231, align 8
  %233 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %232
  br i1 %233, label %279, label %234

234:                                              ; preds = %229
  %235 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kRxAttrE, align 8
  %236 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %235, i64 0, i32 0, i32 0
  %237 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %236, align 8
  %238 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %237
  br i1 %238, label %279, label %239

239:                                              ; preds = %234
  %240 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kRyAttrE, align 8
  %241 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %240, i64 0, i32 0, i32 0
  %242 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %241, align 8
  %243 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %242
  br i1 %243, label %279, label %244

244:                                              ; preds = %239
  %245 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names16kStartOffsetAttrE, align 8
  %246 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %245, i64 0, i32 0, i32 0
  %247 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %246, align 8
  %248 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %247
  br i1 %248, label %279, label %249

249:                                              ; preds = %244
  %250 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names15kTextLengthAttrE, align 8
  %251 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %250, i64 0, i32 0, i32 0
  %252 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %251, align 8
  %253 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %252
  br i1 %253, label %279, label %254

254:                                              ; preds = %249
  %255 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kWidthAttrE, align 8
  %256 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %255, i64 0, i32 0, i32 0
  %257 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %256, align 8
  %258 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %257
  br i1 %258, label %279, label %259

259:                                              ; preds = %254
  %260 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kX1AttrE, align 8
  %261 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %260, i64 0, i32 0, i32 0
  %262 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %261, align 8
  %263 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %262
  br i1 %263, label %279, label %264

264:                                              ; preds = %259
  %265 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kX2AttrE, align 8
  %266 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %265, i64 0, i32 0, i32 0
  %267 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %266, align 8
  %268 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %267
  br i1 %268, label %279, label %269

269:                                              ; preds = %264
  %270 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kY1AttrE, align 8
  %271 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %270, i64 0, i32 0, i32 0
  %272 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %271, align 8
  %273 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %272
  br i1 %273, label %279, label %274

274:                                              ; preds = %269
  %275 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kY2AttrE, align 8
  %276 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %275, i64 0, i32 0, i32 0
  %277 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %276, align 8
  %278 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %277
  br i1 %278, label %279, label %322

279:                                              ; preds = %274, %269, %264, %259, %254, %249, %244, %239, %234, %229, %224, %219, %214, %209, %204, %199, %194, %189, %184
  %280 = bitcast %"class.std::__1::unique_ptr.37"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %280) #10
  %281 = tail call noalias i8* @malloc(i64 40) #10
  %282 = getelementptr inbounds i8, i8* %281, i64 8
  %283 = bitcast i8* %282 to i32*
  store i32 5, i32* %283, align 8
  %284 = getelementptr inbounds i8, i8* %281, i64 16
  %285 = bitcast i8* %284 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %285, align 8
  %286 = getelementptr inbounds i8, i8* %281, i64 24
  %287 = bitcast i8* %286 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %287, align 8
  %288 = bitcast i8* %281 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink26SVGLengthInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %288, align 8
  %289 = getelementptr inbounds i8, i8* %281, i64 32
  %290 = bitcast i8* %289 to i32*
  %291 = tail call i32 @_ZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %46) #10
  store i32 %291, i32* %290, align 8
  %292 = getelementptr inbounds i8, i8* %281, i64 36
  %293 = tail call zeroext i1 @_ZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %46) #10
  %294 = zext i1 %293 to i8
  store i8 %294, i8* %292, align 4
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %7, i64 0, i32 0, i32 0, i32 0
  %296 = bitcast %"class.std::__1::unique_ptr.37"* %7 to i8**
  store i8* %281, i8** %296, align 8
  %297 = getelementptr inbounds i8, i8* %41, i64 12
  %298 = bitcast i8* %297 to i32*
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds i8, i8* %41, i64 8
  %301 = bitcast i8* %300 to i32*
  %302 = load i32, i32* %301, align 8
  %303 = icmp eq i32 %299, %302
  br i1 %303, label %313, label %304, !prof !3

304:                                              ; preds = %279
  %305 = ptrtoint i8* %281 to i64
  %306 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %307 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %306, align 8
  %308 = zext i32 %299 to i64
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %307, i64 %308
  store %"class.blink::SVGLengthInterpolationType"* null, %"class.blink::SVGLengthInterpolationType"** %295, align 8
  %310 = bitcast %"class.std::__1::unique_ptr"* %309 to i64*
  store i64 %305, i64* %310, align 8
  %311 = load i32, i32* %298, align 4
  %312 = add i32 %311, 1
  store i32 %312, i32* %298, align 4
  br label %314

313:                                              ; preds = %279
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26SVGLengthInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.37"* nonnull dereferenceable(8) %7) #10
  br label %314

314:                                              ; preds = %304, %313
  %315 = load %"class.blink::SVGLengthInterpolationType"*, %"class.blink::SVGLengthInterpolationType"** %295, align 8
  store %"class.blink::SVGLengthInterpolationType"* null, %"class.blink::SVGLengthInterpolationType"** %295, align 8
  %316 = icmp eq %"class.blink::SVGLengthInterpolationType"* %315, null
  br i1 %316, label %974, label %317

317:                                              ; preds = %314
  %318 = bitcast %"class.blink::SVGLengthInterpolationType"* %315 to void (%"class.blink::SVGLengthInterpolationType"*)***
  %319 = load void (%"class.blink::SVGLengthInterpolationType"*)**, void (%"class.blink::SVGLengthInterpolationType"*)*** %318, align 8
  %320 = getelementptr inbounds void (%"class.blink::SVGLengthInterpolationType"*)*, void (%"class.blink::SVGLengthInterpolationType"*)** %319, i64 1
  %321 = load void (%"class.blink::SVGLengthInterpolationType"*)*, void (%"class.blink::SVGLengthInterpolationType"*)** %320, align 8
  call void %321(%"class.blink::SVGLengthInterpolationType"* nonnull %315) #10
  br label %974

322:                                              ; preds = %274
  %323 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kDxAttrE, align 8
  %324 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %323, i64 0, i32 0, i32 0
  %325 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %324, align 8
  %326 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %325
  br i1 %326, label %332, label %327

327:                                              ; preds = %322
  %328 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kDyAttrE, align 8
  %329 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %328, i64 0, i32 0, i32 0
  %330 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %329, align 8
  %331 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %330
  br i1 %331, label %332, label %418

332:                                              ; preds = %327, %322
  %333 = bitcast %"class.std::__1::unique_ptr.43"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %333) #10
  %334 = tail call noalias i8* @malloc(i64 40) #10
  %335 = getelementptr inbounds i8, i8* %334, i64 8
  %336 = bitcast i8* %335 to i32*
  store i32 5, i32* %336, align 8
  %337 = getelementptr inbounds i8, i8* %334, i64 16
  %338 = bitcast i8* %337 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %338, align 8
  %339 = getelementptr inbounds i8, i8* %334, i64 24
  %340 = bitcast i8* %339 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %340, align 8
  %341 = bitcast i8* %334 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink26SVGNumberInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %341, align 8
  %342 = getelementptr inbounds i8, i8* %334, i64 32
  %343 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names15kPathLengthAttrE, align 8
  %344 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %345 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %343, i64 0, i32 0, i32 0
  %346 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %345, align 8
  %347 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %344, %346
  %348 = zext i1 %347 to i8
  store i8 %348, i8* %342, align 8
  %349 = getelementptr inbounds %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43"* %8, i64 0, i32 0, i32 0, i32 0
  %350 = bitcast %"class.std::__1::unique_ptr.43"* %8 to i8**
  store i8* %334, i8** %350, align 8
  %351 = getelementptr inbounds i8, i8* %41, i64 12
  %352 = bitcast i8* %351 to i32*
  %353 = load i32, i32* %352, align 4
  %354 = getelementptr inbounds i8, i8* %41, i64 8
  %355 = bitcast i8* %354 to i32*
  %356 = load i32, i32* %355, align 8
  %357 = icmp eq i32 %353, %356
  br i1 %357, label %367, label %358, !prof !3

358:                                              ; preds = %332
  %359 = ptrtoint i8* %334 to i64
  %360 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %361 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %360, align 8
  %362 = zext i32 %353 to i64
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %361, i64 %362
  store %"class.blink::SVGNumberInterpolationType"* null, %"class.blink::SVGNumberInterpolationType"** %349, align 8
  %364 = bitcast %"class.std::__1::unique_ptr"* %363 to i64*
  store i64 %359, i64* %364, align 8
  %365 = load i32, i32* %352, align 4
  %366 = add i32 %365, 1
  store i32 %366, i32* %352, align 4
  br label %368

367:                                              ; preds = %332
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26SVGNumberInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.43"* nonnull dereferenceable(8) %8) #10
  br label %368

368:                                              ; preds = %358, %367
  %369 = load %"class.blink::SVGNumberInterpolationType"*, %"class.blink::SVGNumberInterpolationType"** %349, align 8
  store %"class.blink::SVGNumberInterpolationType"* null, %"class.blink::SVGNumberInterpolationType"** %349, align 8
  %370 = icmp eq %"class.blink::SVGNumberInterpolationType"* %369, null
  br i1 %370, label %376, label %371

371:                                              ; preds = %368
  %372 = bitcast %"class.blink::SVGNumberInterpolationType"* %369 to void (%"class.blink::SVGNumberInterpolationType"*)***
  %373 = load void (%"class.blink::SVGNumberInterpolationType"*)**, void (%"class.blink::SVGNumberInterpolationType"*)*** %372, align 8
  %374 = getelementptr inbounds void (%"class.blink::SVGNumberInterpolationType"*)*, void (%"class.blink::SVGNumberInterpolationType"*)** %373, i64 1
  %375 = load void (%"class.blink::SVGNumberInterpolationType"*)*, void (%"class.blink::SVGNumberInterpolationType"*)** %374, align 8
  call void %375(%"class.blink::SVGNumberInterpolationType"* nonnull %369) #10
  br label %376

376:                                              ; preds = %368, %371
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %333) #10
  %377 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %40, align 8
  %378 = bitcast %"class.std::__1::unique_ptr.49"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378) #10
  %379 = call noalias i8* @malloc(i64 40) #10
  %380 = getelementptr inbounds i8, i8* %379, i64 8
  %381 = bitcast i8* %380 to i32*
  store i32 5, i32* %381, align 8
  %382 = getelementptr inbounds i8, i8* %379, i64 16
  %383 = bitcast i8* %382 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %383, align 8
  %384 = getelementptr inbounds i8, i8* %379, i64 24
  %385 = bitcast i8* %384 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %385, align 8
  %386 = bitcast i8* %379 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink30SVGLengthListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %386, align 8
  %387 = getelementptr inbounds i8, i8* %379, i64 32
  %388 = bitcast i8* %387 to i32*
  %389 = call i32 @_ZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %46) #10
  store i32 %389, i32* %388, align 8
  %390 = getelementptr inbounds i8, i8* %379, i64 36
  %391 = call zeroext i1 @_ZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %46) #10
  %392 = zext i1 %391 to i8
  store i8 %392, i8* %390, align 4
  %393 = getelementptr inbounds %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49"* %9, i64 0, i32 0, i32 0, i32 0
  %394 = bitcast %"class.std::__1::unique_ptr.49"* %9 to i8**
  store i8* %379, i8** %394, align 8
  %395 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %377, i64 0, i32 0, i32 0, i32 2
  %396 = load i32, i32* %395, align 4
  %397 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %377, i64 0, i32 0, i32 0, i32 1
  %398 = load i32, i32* %397, align 8
  %399 = icmp eq i32 %396, %398
  br i1 %399, label %409, label %400, !prof !3

400:                                              ; preds = %376
  %401 = ptrtoint i8* %379 to i64
  %402 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %377, i64 0, i32 0, i32 0, i32 0
  %403 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %402, align 8
  %404 = zext i32 %396 to i64
  %405 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 %404
  store %"class.blink::SVGLengthListInterpolationType"* null, %"class.blink::SVGLengthListInterpolationType"** %393, align 8
  %406 = bitcast %"class.std::__1::unique_ptr"* %405 to i64*
  store i64 %401, i64* %406, align 8
  %407 = load i32, i32* %395, align 4
  %408 = add i32 %407, 1
  store i32 %408, i32* %395, align 4
  br label %410

409:                                              ; preds = %376
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30SVGLengthListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %377, %"class.std::__1::unique_ptr.49"* nonnull dereferenceable(8) %9) #10
  br label %410

410:                                              ; preds = %400, %409
  %411 = load %"class.blink::SVGLengthListInterpolationType"*, %"class.blink::SVGLengthListInterpolationType"** %393, align 8
  store %"class.blink::SVGLengthListInterpolationType"* null, %"class.blink::SVGLengthListInterpolationType"** %393, align 8
  %412 = icmp eq %"class.blink::SVGLengthListInterpolationType"* %411, null
  br i1 %412, label %974, label %413

413:                                              ; preds = %410
  %414 = bitcast %"class.blink::SVGLengthListInterpolationType"* %411 to void (%"class.blink::SVGLengthListInterpolationType"*)***
  %415 = load void (%"class.blink::SVGLengthListInterpolationType"*)**, void (%"class.blink::SVGLengthListInterpolationType"*)*** %414, align 8
  %416 = getelementptr inbounds void (%"class.blink::SVGLengthListInterpolationType"*)*, void (%"class.blink::SVGLengthListInterpolationType"*)** %415, i64 1
  %417 = load void (%"class.blink::SVGLengthListInterpolationType"*)*, void (%"class.blink::SVGLengthListInterpolationType"*)** %416, align 8
  call void %417(%"class.blink::SVGLengthListInterpolationType"* nonnull %411) #10
  br label %974

418:                                              ; preds = %327
  %419 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kXAttrE, align 8
  %420 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %419, i64 0, i32 0, i32 0
  %421 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %420, align 8
  %422 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %421
  br i1 %422, label %428, label %423

423:                                              ; preds = %418
  %424 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kYAttrE, align 8
  %425 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %424, i64 0, i32 0, i32 0
  %426 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %425, align 8
  %427 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %426
  br i1 %427, label %428, label %513

428:                                              ; preds = %423, %418
  %429 = bitcast %"class.std::__1::unique_ptr.37"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %429) #10
  %430 = tail call noalias i8* @malloc(i64 40) #10
  %431 = getelementptr inbounds i8, i8* %430, i64 8
  %432 = bitcast i8* %431 to i32*
  store i32 5, i32* %432, align 8
  %433 = getelementptr inbounds i8, i8* %430, i64 16
  %434 = bitcast i8* %433 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %434, align 8
  %435 = getelementptr inbounds i8, i8* %430, i64 24
  %436 = bitcast i8* %435 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %436, align 8
  %437 = bitcast i8* %430 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink26SVGLengthInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %437, align 8
  %438 = getelementptr inbounds i8, i8* %430, i64 32
  %439 = bitcast i8* %438 to i32*
  %440 = tail call i32 @_ZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %46) #10
  store i32 %440, i32* %439, align 8
  %441 = getelementptr inbounds i8, i8* %430, i64 36
  %442 = tail call zeroext i1 @_ZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %46) #10
  %443 = zext i1 %442 to i8
  store i8 %443, i8* %441, align 4
  %444 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %10, i64 0, i32 0, i32 0, i32 0
  %445 = bitcast %"class.std::__1::unique_ptr.37"* %10 to i8**
  store i8* %430, i8** %445, align 8
  %446 = getelementptr inbounds i8, i8* %41, i64 12
  %447 = bitcast i8* %446 to i32*
  %448 = load i32, i32* %447, align 4
  %449 = getelementptr inbounds i8, i8* %41, i64 8
  %450 = bitcast i8* %449 to i32*
  %451 = load i32, i32* %450, align 8
  %452 = icmp eq i32 %448, %451
  br i1 %452, label %462, label %453, !prof !3

453:                                              ; preds = %428
  %454 = ptrtoint i8* %430 to i64
  %455 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %456 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %455, align 8
  %457 = zext i32 %448 to i64
  %458 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %456, i64 %457
  store %"class.blink::SVGLengthInterpolationType"* null, %"class.blink::SVGLengthInterpolationType"** %444, align 8
  %459 = bitcast %"class.std::__1::unique_ptr"* %458 to i64*
  store i64 %454, i64* %459, align 8
  %460 = load i32, i32* %447, align 4
  %461 = add i32 %460, 1
  store i32 %461, i32* %447, align 4
  br label %463

462:                                              ; preds = %428
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26SVGLengthInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.37"* nonnull dereferenceable(8) %10) #10
  br label %463

463:                                              ; preds = %453, %462
  %464 = load %"class.blink::SVGLengthInterpolationType"*, %"class.blink::SVGLengthInterpolationType"** %444, align 8
  store %"class.blink::SVGLengthInterpolationType"* null, %"class.blink::SVGLengthInterpolationType"** %444, align 8
  %465 = icmp eq %"class.blink::SVGLengthInterpolationType"* %464, null
  br i1 %465, label %471, label %466

466:                                              ; preds = %463
  %467 = bitcast %"class.blink::SVGLengthInterpolationType"* %464 to void (%"class.blink::SVGLengthInterpolationType"*)***
  %468 = load void (%"class.blink::SVGLengthInterpolationType"*)**, void (%"class.blink::SVGLengthInterpolationType"*)*** %467, align 8
  %469 = getelementptr inbounds void (%"class.blink::SVGLengthInterpolationType"*)*, void (%"class.blink::SVGLengthInterpolationType"*)** %468, i64 1
  %470 = load void (%"class.blink::SVGLengthInterpolationType"*)*, void (%"class.blink::SVGLengthInterpolationType"*)** %469, align 8
  call void %470(%"class.blink::SVGLengthInterpolationType"* nonnull %464) #10
  br label %471

471:                                              ; preds = %463, %466
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %429) #10
  %472 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %40, align 8
  %473 = bitcast %"class.std::__1::unique_ptr.49"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %473) #10
  %474 = call noalias i8* @malloc(i64 40) #10
  %475 = getelementptr inbounds i8, i8* %474, i64 8
  %476 = bitcast i8* %475 to i32*
  store i32 5, i32* %476, align 8
  %477 = getelementptr inbounds i8, i8* %474, i64 16
  %478 = bitcast i8* %477 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %478, align 8
  %479 = getelementptr inbounds i8, i8* %474, i64 24
  %480 = bitcast i8* %479 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %480, align 8
  %481 = bitcast i8* %474 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink30SVGLengthListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %481, align 8
  %482 = getelementptr inbounds i8, i8* %474, i64 32
  %483 = bitcast i8* %482 to i32*
  %484 = call i32 @_ZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %46) #10
  store i32 %484, i32* %483, align 8
  %485 = getelementptr inbounds i8, i8* %474, i64 36
  %486 = call zeroext i1 @_ZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %46) #10
  %487 = zext i1 %486 to i8
  store i8 %487, i8* %485, align 4
  %488 = getelementptr inbounds %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49"* %11, i64 0, i32 0, i32 0, i32 0
  %489 = bitcast %"class.std::__1::unique_ptr.49"* %11 to i8**
  store i8* %474, i8** %489, align 8
  %490 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %472, i64 0, i32 0, i32 0, i32 2
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %472, i64 0, i32 0, i32 0, i32 1
  %493 = load i32, i32* %492, align 8
  %494 = icmp eq i32 %491, %493
  br i1 %494, label %504, label %495, !prof !3

495:                                              ; preds = %471
  %496 = ptrtoint i8* %474 to i64
  %497 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %472, i64 0, i32 0, i32 0, i32 0
  %498 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %497, align 8
  %499 = zext i32 %491 to i64
  %500 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %498, i64 %499
  store %"class.blink::SVGLengthListInterpolationType"* null, %"class.blink::SVGLengthListInterpolationType"** %488, align 8
  %501 = bitcast %"class.std::__1::unique_ptr"* %500 to i64*
  store i64 %496, i64* %501, align 8
  %502 = load i32, i32* %490, align 4
  %503 = add i32 %502, 1
  store i32 %503, i32* %490, align 4
  br label %505

504:                                              ; preds = %471
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30SVGLengthListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %472, %"class.std::__1::unique_ptr.49"* nonnull dereferenceable(8) %11) #10
  br label %505

505:                                              ; preds = %495, %504
  %506 = load %"class.blink::SVGLengthListInterpolationType"*, %"class.blink::SVGLengthListInterpolationType"** %488, align 8
  store %"class.blink::SVGLengthListInterpolationType"* null, %"class.blink::SVGLengthListInterpolationType"** %488, align 8
  %507 = icmp eq %"class.blink::SVGLengthListInterpolationType"* %506, null
  br i1 %507, label %974, label %508

508:                                              ; preds = %505
  %509 = bitcast %"class.blink::SVGLengthListInterpolationType"* %506 to void (%"class.blink::SVGLengthListInterpolationType"*)***
  %510 = load void (%"class.blink::SVGLengthListInterpolationType"*)**, void (%"class.blink::SVGLengthListInterpolationType"*)*** %509, align 8
  %511 = getelementptr inbounds void (%"class.blink::SVGLengthListInterpolationType"*)*, void (%"class.blink::SVGLengthListInterpolationType"*)** %510, i64 1
  %512 = load void (%"class.blink::SVGLengthListInterpolationType"*)*, void (%"class.blink::SVGLengthListInterpolationType"*)** %511, align 8
  call void %512(%"class.blink::SVGLengthListInterpolationType"* nonnull %506) #10
  br label %974

513:                                              ; preds = %423
  %514 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names14kAmplitudeAttrE, align 8
  %515 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %514, i64 0, i32 0, i32 0
  %516 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %515, align 8
  %517 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %516
  br i1 %517, label %638, label %518

518:                                              ; preds = %513
  %519 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names12kAzimuthAttrE, align 8
  %520 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %519, i64 0, i32 0, i32 0
  %521 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %520, align 8
  %522 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %521
  br i1 %522, label %638, label %523

523:                                              ; preds = %518
  %524 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kBiasAttrE, align 8
  %525 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %524, i64 0, i32 0, i32 0
  %526 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %525, align 8
  %527 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %526
  br i1 %527, label %638, label %528

528:                                              ; preds = %523
  %529 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names20kDiffuseConstantAttrE, align 8
  %530 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %529, i64 0, i32 0, i32 0
  %531 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %530, align 8
  %532 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %531
  br i1 %532, label %638, label %533

533:                                              ; preds = %528
  %534 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names12kDivisorAttrE, align 8
  %535 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %534, i64 0, i32 0, i32 0
  %536 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %535, align 8
  %537 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %536
  br i1 %537, label %638, label %538

538:                                              ; preds = %533
  %539 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names14kElevationAttrE, align 8
  %540 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %539, i64 0, i32 0, i32 0
  %541 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %540, align 8
  %542 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %541
  br i1 %542, label %638, label %543

543:                                              ; preds = %538
  %544 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names13kExponentAttrE, align 8
  %545 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %544, i64 0, i32 0, i32 0
  %546 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %545, align 8
  %547 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %546
  br i1 %547, label %638, label %548

548:                                              ; preds = %543
  %549 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names14kInterceptAttrE, align 8
  %550 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %549, i64 0, i32 0, i32 0
  %551 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %550, align 8
  %552 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %551
  br i1 %552, label %638, label %553

553:                                              ; preds = %548
  %554 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kK1AttrE, align 8
  %555 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %554, i64 0, i32 0, i32 0
  %556 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %555, align 8
  %557 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %556
  br i1 %557, label %638, label %558

558:                                              ; preds = %553
  %559 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kK2AttrE, align 8
  %560 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %559, i64 0, i32 0, i32 0
  %561 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %560, align 8
  %562 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %561
  br i1 %562, label %638, label %563

563:                                              ; preds = %558
  %564 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kK3AttrE, align 8
  %565 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %564, i64 0, i32 0, i32 0
  %566 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %565, align 8
  %567 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %566
  br i1 %567, label %638, label %568

568:                                              ; preds = %563
  %569 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kK4AttrE, align 8
  %570 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %569, i64 0, i32 0, i32 0
  %571 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %570, align 8
  %572 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %571
  br i1 %572, label %638, label %573

573:                                              ; preds = %568
  %574 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names22kLimitingConeAngleAttrE, align 8
  %575 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %574, i64 0, i32 0, i32 0
  %576 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %575, align 8
  %577 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %576
  br i1 %577, label %638, label %578

578:                                              ; preds = %573
  %579 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kOffsetAttrE, align 8
  %580 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %579, i64 0, i32 0, i32 0
  %581 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %580, align 8
  %582 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %581
  br i1 %582, label %638, label %583

583:                                              ; preds = %578
  %584 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names15kPathLengthAttrE, align 8
  %585 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %584, i64 0, i32 0, i32 0
  %586 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %585, align 8
  %587 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %586
  br i1 %587, label %638, label %588

588:                                              ; preds = %583
  %589 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names14kPointsAtXAttrE, align 8
  %590 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %589, i64 0, i32 0, i32 0
  %591 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %590, align 8
  %592 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %591
  br i1 %592, label %638, label %593

593:                                              ; preds = %588
  %594 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names14kPointsAtYAttrE, align 8
  %595 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %594, i64 0, i32 0, i32 0
  %596 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %595, align 8
  %597 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %596
  br i1 %597, label %638, label %598

598:                                              ; preds = %593
  %599 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names14kPointsAtZAttrE, align 8
  %600 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %599, i64 0, i32 0, i32 0
  %601 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %600, align 8
  %602 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %601
  br i1 %602, label %638, label %603

603:                                              ; preds = %598
  %604 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kScaleAttrE, align 8
  %605 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %604, i64 0, i32 0, i32 0
  %606 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %605, align 8
  %607 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %606
  br i1 %607, label %638, label %608

608:                                              ; preds = %603
  %609 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kSeedAttrE, align 8
  %610 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %609, i64 0, i32 0, i32 0
  %611 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %610, align 8
  %612 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %611
  br i1 %612, label %638, label %613

613:                                              ; preds = %608
  %614 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kSlopeAttrE, align 8
  %615 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %614, i64 0, i32 0, i32 0
  %616 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %615, align 8
  %617 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %616
  br i1 %617, label %638, label %618

618:                                              ; preds = %613
  %619 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names21kSpecularConstantAttrE, align 8
  %620 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %619, i64 0, i32 0, i32 0
  %621 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %620, align 8
  %622 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %621
  br i1 %622, label %638, label %623

623:                                              ; preds = %618
  %624 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names21kSpecularExponentAttrE, align 8
  %625 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %624, i64 0, i32 0, i32 0
  %626 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %625, align 8
  %627 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %626
  br i1 %627, label %638, label %628

628:                                              ; preds = %623
  %629 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names17kSurfaceScaleAttrE, align 8
  %630 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %629, i64 0, i32 0, i32 0
  %631 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %630, align 8
  %632 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %631
  br i1 %632, label %638, label %633

633:                                              ; preds = %628
  %634 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kZAttrE, align 8
  %635 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %634, i64 0, i32 0, i32 0
  %636 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %635, align 8
  %637 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %636
  br i1 %637, label %638, label %682

638:                                              ; preds = %633, %628, %623, %618, %613, %608, %603, %598, %593, %588, %583, %578, %573, %568, %563, %558, %553, %548, %543, %538, %533, %528, %523, %518, %513
  %639 = bitcast %"class.std::__1::unique_ptr.43"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %639) #10
  %640 = tail call noalias i8* @malloc(i64 40) #10
  %641 = getelementptr inbounds i8, i8* %640, i64 8
  %642 = bitcast i8* %641 to i32*
  store i32 5, i32* %642, align 8
  %643 = getelementptr inbounds i8, i8* %640, i64 16
  %644 = bitcast i8* %643 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %644, align 8
  %645 = getelementptr inbounds i8, i8* %640, i64 24
  %646 = bitcast i8* %645 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %646, align 8
  %647 = bitcast i8* %640 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink26SVGNumberInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %647, align 8
  %648 = getelementptr inbounds i8, i8* %640, i64 32
  %649 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names15kPathLengthAttrE, align 8
  %650 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %651 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %649, i64 0, i32 0, i32 0
  %652 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %651, align 8
  %653 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %650, %652
  %654 = zext i1 %653 to i8
  store i8 %654, i8* %648, align 8
  %655 = getelementptr inbounds %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43"* %12, i64 0, i32 0, i32 0, i32 0
  %656 = bitcast %"class.std::__1::unique_ptr.43"* %12 to i8**
  store i8* %640, i8** %656, align 8
  %657 = getelementptr inbounds i8, i8* %41, i64 12
  %658 = bitcast i8* %657 to i32*
  %659 = load i32, i32* %658, align 4
  %660 = getelementptr inbounds i8, i8* %41, i64 8
  %661 = bitcast i8* %660 to i32*
  %662 = load i32, i32* %661, align 8
  %663 = icmp eq i32 %659, %662
  br i1 %663, label %673, label %664, !prof !3

664:                                              ; preds = %638
  %665 = ptrtoint i8* %640 to i64
  %666 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %667 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %666, align 8
  %668 = zext i32 %659 to i64
  %669 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %667, i64 %668
  store %"class.blink::SVGNumberInterpolationType"* null, %"class.blink::SVGNumberInterpolationType"** %655, align 8
  %670 = bitcast %"class.std::__1::unique_ptr"* %669 to i64*
  store i64 %665, i64* %670, align 8
  %671 = load i32, i32* %658, align 4
  %672 = add i32 %671, 1
  store i32 %672, i32* %658, align 4
  br label %674

673:                                              ; preds = %638
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26SVGNumberInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.43"* nonnull dereferenceable(8) %12) #10
  br label %674

674:                                              ; preds = %664, %673
  %675 = load %"class.blink::SVGNumberInterpolationType"*, %"class.blink::SVGNumberInterpolationType"** %655, align 8
  store %"class.blink::SVGNumberInterpolationType"* null, %"class.blink::SVGNumberInterpolationType"** %655, align 8
  %676 = icmp eq %"class.blink::SVGNumberInterpolationType"* %675, null
  br i1 %676, label %974, label %677

677:                                              ; preds = %674
  %678 = bitcast %"class.blink::SVGNumberInterpolationType"* %675 to void (%"class.blink::SVGNumberInterpolationType"*)***
  %679 = load void (%"class.blink::SVGNumberInterpolationType"*)**, void (%"class.blink::SVGNumberInterpolationType"*)*** %678, align 8
  %680 = getelementptr inbounds void (%"class.blink::SVGNumberInterpolationType"*)*, void (%"class.blink::SVGNumberInterpolationType"*)** %679, i64 1
  %681 = load void (%"class.blink::SVGNumberInterpolationType"*)*, void (%"class.blink::SVGNumberInterpolationType"*)** %680, align 8
  call void %681(%"class.blink::SVGNumberInterpolationType"* nonnull %675) #10
  br label %974

682:                                              ; preds = %633
  %683 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names17kKernelMatrixAttrE, align 8
  %684 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %683, i64 0, i32 0, i32 0
  %685 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %684, align 8
  %686 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %685
  br i1 %686, label %702, label %687

687:                                              ; preds = %682
  %688 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kRotateAttrE, align 8
  %689 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %688, i64 0, i32 0, i32 0
  %690 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %689, align 8
  %691 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %690
  br i1 %691, label %702, label %692

692:                                              ; preds = %687
  %693 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names16kTableValuesAttrE, align 8
  %694 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %693, i64 0, i32 0, i32 0
  %695 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %694, align 8
  %696 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %695
  br i1 %696, label %702, label %697

697:                                              ; preds = %692
  %698 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kValuesAttrE, align 8
  %699 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %698, i64 0, i32 0, i32 0
  %700 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %699, align 8
  %701 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %700
  br i1 %701, label %702, label %739

702:                                              ; preds = %697, %692, %687, %682
  %703 = bitcast %"class.std::__1::unique_ptr.55"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %703) #10
  %704 = tail call noalias i8* @malloc(i64 32) #10
  %705 = getelementptr inbounds i8, i8* %704, i64 8
  %706 = bitcast i8* %705 to i32*
  store i32 5, i32* %706, align 8
  %707 = getelementptr inbounds i8, i8* %704, i64 16
  %708 = bitcast i8* %707 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %708, align 8
  %709 = getelementptr inbounds i8, i8* %704, i64 24
  %710 = bitcast i8* %709 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %710, align 8
  %711 = bitcast i8* %704 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink30SVGNumberListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %711, align 8
  %712 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %13, i64 0, i32 0, i32 0, i32 0
  %713 = bitcast %"class.std::__1::unique_ptr.55"* %13 to i8**
  store i8* %704, i8** %713, align 8
  %714 = getelementptr inbounds i8, i8* %41, i64 12
  %715 = bitcast i8* %714 to i32*
  %716 = load i32, i32* %715, align 4
  %717 = getelementptr inbounds i8, i8* %41, i64 8
  %718 = bitcast i8* %717 to i32*
  %719 = load i32, i32* %718, align 8
  %720 = icmp eq i32 %716, %719
  br i1 %720, label %730, label %721, !prof !3

721:                                              ; preds = %702
  %722 = ptrtoint i8* %704 to i64
  %723 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %724 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %723, align 8
  %725 = zext i32 %716 to i64
  %726 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %724, i64 %725
  store %"class.blink::SVGNumberListInterpolationType"* null, %"class.blink::SVGNumberListInterpolationType"** %712, align 8
  %727 = bitcast %"class.std::__1::unique_ptr"* %726 to i64*
  store i64 %722, i64* %727, align 8
  %728 = load i32, i32* %715, align 4
  %729 = add i32 %728, 1
  store i32 %729, i32* %715, align 4
  br label %731

730:                                              ; preds = %702
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30SVGNumberListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.55"* nonnull dereferenceable(8) %13) #10
  br label %731

731:                                              ; preds = %721, %730
  %732 = load %"class.blink::SVGNumberListInterpolationType"*, %"class.blink::SVGNumberListInterpolationType"** %712, align 8
  store %"class.blink::SVGNumberListInterpolationType"* null, %"class.blink::SVGNumberListInterpolationType"** %712, align 8
  %733 = icmp eq %"class.blink::SVGNumberListInterpolationType"* %732, null
  br i1 %733, label %974, label %734

734:                                              ; preds = %731
  %735 = bitcast %"class.blink::SVGNumberListInterpolationType"* %732 to void (%"class.blink::SVGNumberListInterpolationType"*)***
  %736 = load void (%"class.blink::SVGNumberListInterpolationType"*)**, void (%"class.blink::SVGNumberListInterpolationType"*)*** %735, align 8
  %737 = getelementptr inbounds void (%"class.blink::SVGNumberListInterpolationType"*)*, void (%"class.blink::SVGNumberListInterpolationType"*)** %736, i64 1
  %738 = load void (%"class.blink::SVGNumberListInterpolationType"*)*, void (%"class.blink::SVGNumberListInterpolationType"*)** %737, align 8
  call void %738(%"class.blink::SVGNumberListInterpolationType"* nonnull %732) #10
  br label %974

739:                                              ; preds = %697
  %740 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names18kBaseFrequencyAttrE, align 8
  %741 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %740, i64 0, i32 0, i32 0
  %742 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %741, align 8
  %743 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %742
  br i1 %743, label %759, label %744

744:                                              ; preds = %739
  %745 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names21kKernelUnitLengthAttrE, align 8
  %746 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %745, i64 0, i32 0, i32 0
  %747 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %746, align 8
  %748 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %747
  br i1 %748, label %759, label %749

749:                                              ; preds = %744
  %750 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kRadiusAttrE, align 8
  %751 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %750, i64 0, i32 0, i32 0
  %752 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %751, align 8
  %753 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %752
  br i1 %753, label %759, label %754

754:                                              ; preds = %749
  %755 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names17kStdDeviationAttrE, align 8
  %756 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %755, i64 0, i32 0, i32 0
  %757 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %756, align 8
  %758 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %757
  br i1 %758, label %759, label %796

759:                                              ; preds = %754, %749, %744, %739
  %760 = bitcast %"class.std::__1::unique_ptr.61"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %760) #10
  %761 = tail call noalias i8* @malloc(i64 32) #10
  %762 = getelementptr inbounds i8, i8* %761, i64 8
  %763 = bitcast i8* %762 to i32*
  store i32 5, i32* %763, align 8
  %764 = getelementptr inbounds i8, i8* %761, i64 16
  %765 = bitcast i8* %764 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %765, align 8
  %766 = getelementptr inbounds i8, i8* %761, i64 24
  %767 = bitcast i8* %766 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %767, align 8
  %768 = bitcast i8* %761 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink40SVGNumberOptionalNumberInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %768, align 8
  %769 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %14, i64 0, i32 0, i32 0, i32 0
  %770 = bitcast %"class.std::__1::unique_ptr.61"* %14 to i8**
  store i8* %761, i8** %770, align 8
  %771 = getelementptr inbounds i8, i8* %41, i64 12
  %772 = bitcast i8* %771 to i32*
  %773 = load i32, i32* %772, align 4
  %774 = getelementptr inbounds i8, i8* %41, i64 8
  %775 = bitcast i8* %774 to i32*
  %776 = load i32, i32* %775, align 8
  %777 = icmp eq i32 %773, %776
  br i1 %777, label %787, label %778, !prof !3

778:                                              ; preds = %759
  %779 = ptrtoint i8* %761 to i64
  %780 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %781 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %780, align 8
  %782 = zext i32 %773 to i64
  %783 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %781, i64 %782
  store %"class.blink::SVGNumberOptionalNumberInterpolationType"* null, %"class.blink::SVGNumberOptionalNumberInterpolationType"** %769, align 8
  %784 = bitcast %"class.std::__1::unique_ptr"* %783 to i64*
  store i64 %779, i64* %784, align 8
  %785 = load i32, i32* %772, align 4
  %786 = add i32 %785, 1
  store i32 %786, i32* %772, align 4
  br label %788

787:                                              ; preds = %759
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_40SVGNumberOptionalNumberInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.61"* nonnull dereferenceable(8) %14) #10
  br label %788

788:                                              ; preds = %778, %787
  %789 = load %"class.blink::SVGNumberOptionalNumberInterpolationType"*, %"class.blink::SVGNumberOptionalNumberInterpolationType"** %769, align 8
  store %"class.blink::SVGNumberOptionalNumberInterpolationType"* null, %"class.blink::SVGNumberOptionalNumberInterpolationType"** %769, align 8
  %790 = icmp eq %"class.blink::SVGNumberOptionalNumberInterpolationType"* %789, null
  br i1 %790, label %974, label %791

791:                                              ; preds = %788
  %792 = bitcast %"class.blink::SVGNumberOptionalNumberInterpolationType"* %789 to void (%"class.blink::SVGNumberOptionalNumberInterpolationType"*)***
  %793 = load void (%"class.blink::SVGNumberOptionalNumberInterpolationType"*)**, void (%"class.blink::SVGNumberOptionalNumberInterpolationType"*)*** %792, align 8
  %794 = getelementptr inbounds void (%"class.blink::SVGNumberOptionalNumberInterpolationType"*)*, void (%"class.blink::SVGNumberOptionalNumberInterpolationType"*)** %793, i64 1
  %795 = load void (%"class.blink::SVGNumberOptionalNumberInterpolationType"*)*, void (%"class.blink::SVGNumberOptionalNumberInterpolationType"*)** %794, align 8
  call void %795(%"class.blink::SVGNumberOptionalNumberInterpolationType"* nonnull %789) #10
  br label %974

796:                                              ; preds = %754
  %797 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kDAttrE, align 8
  %798 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %797, i64 0, i32 0, i32 0
  %799 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %798, align 8
  %800 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %799
  br i1 %800, label %801, label %838

801:                                              ; preds = %796
  %802 = bitcast %"class.std::__1::unique_ptr.67"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %802) #10
  %803 = tail call noalias i8* @malloc(i64 32) #10
  %804 = getelementptr inbounds i8, i8* %803, i64 8
  %805 = bitcast i8* %804 to i32*
  store i32 5, i32* %805, align 8
  %806 = getelementptr inbounds i8, i8* %803, i64 16
  %807 = bitcast i8* %806 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %807, align 8
  %808 = getelementptr inbounds i8, i8* %803, i64 24
  %809 = bitcast i8* %808 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %809, align 8
  %810 = bitcast i8* %803 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink24SVGPathInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %810, align 8
  %811 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %15, i64 0, i32 0, i32 0, i32 0
  %812 = bitcast %"class.std::__1::unique_ptr.67"* %15 to i8**
  store i8* %803, i8** %812, align 8
  %813 = getelementptr inbounds i8, i8* %41, i64 12
  %814 = bitcast i8* %813 to i32*
  %815 = load i32, i32* %814, align 4
  %816 = getelementptr inbounds i8, i8* %41, i64 8
  %817 = bitcast i8* %816 to i32*
  %818 = load i32, i32* %817, align 8
  %819 = icmp eq i32 %815, %818
  br i1 %819, label %829, label %820, !prof !3

820:                                              ; preds = %801
  %821 = ptrtoint i8* %803 to i64
  %822 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %823 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %822, align 8
  %824 = zext i32 %815 to i64
  %825 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %823, i64 %824
  store %"class.blink::SVGPathInterpolationType"* null, %"class.blink::SVGPathInterpolationType"** %811, align 8
  %826 = bitcast %"class.std::__1::unique_ptr"* %825 to i64*
  store i64 %821, i64* %826, align 8
  %827 = load i32, i32* %814, align 4
  %828 = add i32 %827, 1
  store i32 %828, i32* %814, align 4
  br label %830

829:                                              ; preds = %801
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24SVGPathInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.67"* nonnull dereferenceable(8) %15) #10
  br label %830

830:                                              ; preds = %820, %829
  %831 = load %"class.blink::SVGPathInterpolationType"*, %"class.blink::SVGPathInterpolationType"** %811, align 8
  store %"class.blink::SVGPathInterpolationType"* null, %"class.blink::SVGPathInterpolationType"** %811, align 8
  %832 = icmp eq %"class.blink::SVGPathInterpolationType"* %831, null
  br i1 %832, label %974, label %833

833:                                              ; preds = %830
  %834 = bitcast %"class.blink::SVGPathInterpolationType"* %831 to void (%"class.blink::SVGPathInterpolationType"*)***
  %835 = load void (%"class.blink::SVGPathInterpolationType"*)**, void (%"class.blink::SVGPathInterpolationType"*)*** %834, align 8
  %836 = getelementptr inbounds void (%"class.blink::SVGPathInterpolationType"*)*, void (%"class.blink::SVGPathInterpolationType"*)** %835, i64 1
  %837 = load void (%"class.blink::SVGPathInterpolationType"*)*, void (%"class.blink::SVGPathInterpolationType"*)** %836, align 8
  call void %837(%"class.blink::SVGPathInterpolationType"* nonnull %831) #10
  br label %974

838:                                              ; preds = %796
  %839 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kPointsAttrE, align 8
  %840 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %839, i64 0, i32 0, i32 0
  %841 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %840, align 8
  %842 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %841
  br i1 %842, label %843, label %880

843:                                              ; preds = %838
  %844 = bitcast %"class.std::__1::unique_ptr.73"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %844) #10
  %845 = tail call noalias i8* @malloc(i64 32) #10
  %846 = getelementptr inbounds i8, i8* %845, i64 8
  %847 = bitcast i8* %846 to i32*
  store i32 5, i32* %847, align 8
  %848 = getelementptr inbounds i8, i8* %845, i64 16
  %849 = bitcast i8* %848 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %849, align 8
  %850 = getelementptr inbounds i8, i8* %845, i64 24
  %851 = bitcast i8* %850 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %851, align 8
  %852 = bitcast i8* %845 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink29SVGPointListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %852, align 8
  %853 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %16, i64 0, i32 0, i32 0, i32 0
  %854 = bitcast %"class.std::__1::unique_ptr.73"* %16 to i8**
  store i8* %845, i8** %854, align 8
  %855 = getelementptr inbounds i8, i8* %41, i64 12
  %856 = bitcast i8* %855 to i32*
  %857 = load i32, i32* %856, align 4
  %858 = getelementptr inbounds i8, i8* %41, i64 8
  %859 = bitcast i8* %858 to i32*
  %860 = load i32, i32* %859, align 8
  %861 = icmp eq i32 %857, %860
  br i1 %861, label %871, label %862, !prof !3

862:                                              ; preds = %843
  %863 = ptrtoint i8* %845 to i64
  %864 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %865 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %864, align 8
  %866 = zext i32 %857 to i64
  %867 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %865, i64 %866
  store %"class.blink::SVGPointListInterpolationType"* null, %"class.blink::SVGPointListInterpolationType"** %853, align 8
  %868 = bitcast %"class.std::__1::unique_ptr"* %867 to i64*
  store i64 %863, i64* %868, align 8
  %869 = load i32, i32* %856, align 4
  %870 = add i32 %869, 1
  store i32 %870, i32* %856, align 4
  br label %872

871:                                              ; preds = %843
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29SVGPointListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.73"* nonnull dereferenceable(8) %16) #10
  br label %872

872:                                              ; preds = %862, %871
  %873 = load %"class.blink::SVGPointListInterpolationType"*, %"class.blink::SVGPointListInterpolationType"** %853, align 8
  store %"class.blink::SVGPointListInterpolationType"* null, %"class.blink::SVGPointListInterpolationType"** %853, align 8
  %874 = icmp eq %"class.blink::SVGPointListInterpolationType"* %873, null
  br i1 %874, label %974, label %875

875:                                              ; preds = %872
  %876 = bitcast %"class.blink::SVGPointListInterpolationType"* %873 to void (%"class.blink::SVGPointListInterpolationType"*)***
  %877 = load void (%"class.blink::SVGPointListInterpolationType"*)**, void (%"class.blink::SVGPointListInterpolationType"*)*** %876, align 8
  %878 = getelementptr inbounds void (%"class.blink::SVGPointListInterpolationType"*)*, void (%"class.blink::SVGPointListInterpolationType"*)** %877, i64 1
  %879 = load void (%"class.blink::SVGPointListInterpolationType"*)*, void (%"class.blink::SVGPointListInterpolationType"*)** %878, align 8
  call void %879(%"class.blink::SVGPointListInterpolationType"* nonnull %873) #10
  br label %974

880:                                              ; preds = %838
  %881 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names12kViewBoxAttrE, align 8
  %882 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %881, i64 0, i32 0, i32 0
  %883 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %882, align 8
  %884 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %883
  br i1 %884, label %885, label %922

885:                                              ; preds = %880
  %886 = bitcast %"class.std::__1::unique_ptr.79"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %886) #10
  %887 = tail call noalias i8* @malloc(i64 32) #10
  %888 = getelementptr inbounds i8, i8* %887, i64 8
  %889 = bitcast i8* %888 to i32*
  store i32 5, i32* %889, align 8
  %890 = getelementptr inbounds i8, i8* %887, i64 16
  %891 = bitcast i8* %890 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %891, align 8
  %892 = getelementptr inbounds i8, i8* %887, i64 24
  %893 = bitcast i8* %892 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %893, align 8
  %894 = bitcast i8* %887 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink24SVGRectInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %894, align 8
  %895 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %17, i64 0, i32 0, i32 0, i32 0
  %896 = bitcast %"class.std::__1::unique_ptr.79"* %17 to i8**
  store i8* %887, i8** %896, align 8
  %897 = getelementptr inbounds i8, i8* %41, i64 12
  %898 = bitcast i8* %897 to i32*
  %899 = load i32, i32* %898, align 4
  %900 = getelementptr inbounds i8, i8* %41, i64 8
  %901 = bitcast i8* %900 to i32*
  %902 = load i32, i32* %901, align 8
  %903 = icmp eq i32 %899, %902
  br i1 %903, label %913, label %904, !prof !3

904:                                              ; preds = %885
  %905 = ptrtoint i8* %887 to i64
  %906 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %907 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %906, align 8
  %908 = zext i32 %899 to i64
  %909 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %907, i64 %908
  store %"class.blink::SVGRectInterpolationType"* null, %"class.blink::SVGRectInterpolationType"** %895, align 8
  %910 = bitcast %"class.std::__1::unique_ptr"* %909 to i64*
  store i64 %905, i64* %910, align 8
  %911 = load i32, i32* %898, align 4
  %912 = add i32 %911, 1
  store i32 %912, i32* %898, align 4
  br label %914

913:                                              ; preds = %885
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24SVGRectInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.79"* nonnull dereferenceable(8) %17) #10
  br label %914

914:                                              ; preds = %904, %913
  %915 = load %"class.blink::SVGRectInterpolationType"*, %"class.blink::SVGRectInterpolationType"** %895, align 8
  store %"class.blink::SVGRectInterpolationType"* null, %"class.blink::SVGRectInterpolationType"** %895, align 8
  %916 = icmp eq %"class.blink::SVGRectInterpolationType"* %915, null
  br i1 %916, label %974, label %917

917:                                              ; preds = %914
  %918 = bitcast %"class.blink::SVGRectInterpolationType"* %915 to void (%"class.blink::SVGRectInterpolationType"*)***
  %919 = load void (%"class.blink::SVGRectInterpolationType"*)**, void (%"class.blink::SVGRectInterpolationType"*)*** %918, align 8
  %920 = getelementptr inbounds void (%"class.blink::SVGRectInterpolationType"*)*, void (%"class.blink::SVGRectInterpolationType"*)** %919, i64 1
  %921 = load void (%"class.blink::SVGRectInterpolationType"*)*, void (%"class.blink::SVGRectInterpolationType"*)** %920, align 8
  call void %921(%"class.blink::SVGRectInterpolationType"* nonnull %915) #10
  br label %974

922:                                              ; preds = %880
  %923 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names22kGradientTransformAttrE, align 8
  %924 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %923, i64 0, i32 0, i32 0
  %925 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %924, align 8
  %926 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %925
  br i1 %926, label %937, label %927

927:                                              ; preds = %922
  %928 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names21kPatternTransformAttrE, align 8
  %929 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %928, i64 0, i32 0, i32 0
  %930 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %929, align 8
  %931 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %930
  br i1 %931, label %937, label %932

932:                                              ; preds = %927
  %933 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names14kTransformAttrE, align 8
  %934 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %933, i64 0, i32 0, i32 0
  %935 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %934, align 8
  %936 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %49, %935
  br i1 %936, label %937, label %976

937:                                              ; preds = %932, %927, %922
  %938 = bitcast %"class.std::__1::unique_ptr.85"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %938) #10
  %939 = tail call noalias i8* @malloc(i64 32) #10
  %940 = getelementptr inbounds i8, i8* %939, i64 8
  %941 = bitcast i8* %940 to i32*
  store i32 5, i32* %941, align 8
  %942 = getelementptr inbounds i8, i8* %939, i64 16
  %943 = bitcast i8* %942 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %943, align 8
  %944 = getelementptr inbounds i8, i8* %939, i64 24
  %945 = bitcast i8* %944 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %945, align 8
  %946 = bitcast i8* %939 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink33SVGTransformListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %946, align 8
  %947 = getelementptr inbounds %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85"* %18, i64 0, i32 0, i32 0, i32 0
  %948 = bitcast %"class.std::__1::unique_ptr.85"* %18 to i8**
  store i8* %939, i8** %948, align 8
  %949 = getelementptr inbounds i8, i8* %41, i64 12
  %950 = bitcast i8* %949 to i32*
  %951 = load i32, i32* %950, align 4
  %952 = getelementptr inbounds i8, i8* %41, i64 8
  %953 = bitcast i8* %952 to i32*
  %954 = load i32, i32* %953, align 8
  %955 = icmp eq i32 %951, %954
  br i1 %955, label %965, label %956, !prof !3

956:                                              ; preds = %937
  %957 = ptrtoint i8* %939 to i64
  %958 = bitcast i8* %41 to %"class.std::__1::unique_ptr"**
  %959 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %958, align 8
  %960 = zext i32 %951 to i64
  %961 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %959, i64 %960
  store %"class.blink::SVGTransformListInterpolationType"* null, %"class.blink::SVGTransformListInterpolationType"** %947, align 8
  %962 = bitcast %"class.std::__1::unique_ptr"* %961 to i64*
  store i64 %957, i64* %962, align 8
  %963 = load i32, i32* %950, align 4
  %964 = add i32 %963, 1
  store i32 %964, i32* %950, align 4
  br label %966

965:                                              ; preds = %937
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_33SVGTransformListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %42, %"class.std::__1::unique_ptr.85"* nonnull dereferenceable(8) %18) #10
  br label %966

966:                                              ; preds = %956, %965
  %967 = load %"class.blink::SVGTransformListInterpolationType"*, %"class.blink::SVGTransformListInterpolationType"** %947, align 8
  store %"class.blink::SVGTransformListInterpolationType"* null, %"class.blink::SVGTransformListInterpolationType"** %947, align 8
  %968 = icmp eq %"class.blink::SVGTransformListInterpolationType"* %967, null
  br i1 %968, label %974, label %969

969:                                              ; preds = %966
  %970 = bitcast %"class.blink::SVGTransformListInterpolationType"* %967 to void (%"class.blink::SVGTransformListInterpolationType"*)***
  %971 = load void (%"class.blink::SVGTransformListInterpolationType"*)**, void (%"class.blink::SVGTransformListInterpolationType"*)*** %970, align 8
  %972 = getelementptr inbounds void (%"class.blink::SVGTransformListInterpolationType"*)*, void (%"class.blink::SVGTransformListInterpolationType"*)** %971, i64 1
  %973 = load void (%"class.blink::SVGTransformListInterpolationType"*)*, void (%"class.blink::SVGTransformListInterpolationType"*)** %972, align 8
  call void %973(%"class.blink::SVGTransformListInterpolationType"* nonnull %967) #10
  br label %974

974:                                              ; preds = %969, %966, %917, %914, %875, %872, %833, %830, %791, %788, %734, %731, %677, %674, %508, %505, %413, %410, %317, %314, %179, %176, %137, %134, %85, %82
  %975 = phi i8* [ %54, %82 ], [ %54, %85 ], [ %106, %134 ], [ %106, %137 ], [ %148, %176 ], [ %148, %179 ], [ %280, %314 ], [ %280, %317 ], [ %378, %410 ], [ %378, %413 ], [ %473, %505 ], [ %473, %508 ], [ %639, %674 ], [ %639, %677 ], [ %703, %731 ], [ %703, %734 ], [ %760, %788 ], [ %760, %791 ], [ %802, %830 ], [ %802, %833 ], [ %844, %872 ], [ %844, %875 ], [ %886, %914 ], [ %886, %917 ], [ %938, %966 ], [ %938, %969 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %975) #10
  br label %976

976:                                              ; preds = %974, %932
  %977 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %40, align 8
  %978 = bitcast %"class.std::__1::unique_ptr.91"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %978) #10
  %979 = call noalias i8* @malloc(i64 32) #10
  %980 = getelementptr inbounds i8, i8* %979, i64 8
  %981 = bitcast i8* %980 to i32*
  store i32 5, i32* %981, align 8
  %982 = getelementptr inbounds i8, i8* %979, i64 16
  %983 = bitcast i8* %982 to %"class.blink::QualifiedName"**
  store %"class.blink::QualifiedName"* %46, %"class.blink::QualifiedName"** %983, align 8
  %984 = getelementptr inbounds i8, i8* %979, i64 24
  %985 = bitcast i8* %984 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %985, align 8
  %986 = bitcast i8* %979 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink25SVGValueInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %986, align 8
  %987 = getelementptr inbounds %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91"* %19, i64 0, i32 0, i32 0, i32 0
  %988 = bitcast %"class.std::__1::unique_ptr.91"* %19 to i8**
  store i8* %979, i8** %988, align 8
  %989 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %977, i64 0, i32 0, i32 0, i32 2
  %990 = load i32, i32* %989, align 4
  %991 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %977, i64 0, i32 0, i32 0, i32 1
  %992 = load i32, i32* %991, align 8
  %993 = icmp eq i32 %990, %992
  br i1 %993, label %1003, label %994, !prof !3

994:                                              ; preds = %976
  %995 = ptrtoint i8* %979 to i64
  %996 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %977, i64 0, i32 0, i32 0, i32 0
  %997 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %996, align 8
  %998 = zext i32 %990 to i64
  %999 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %997, i64 %998
  store %"class.blink::SVGValueInterpolationType"* null, %"class.blink::SVGValueInterpolationType"** %987, align 8
  %1000 = bitcast %"class.std::__1::unique_ptr"* %999 to i64*
  store i64 %995, i64* %1000, align 8
  %1001 = load i32, i32* %989, align 4
  %1002 = add i32 %1001, 1
  store i32 %1002, i32* %989, align 4
  br label %1004

1003:                                             ; preds = %976
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25SVGValueInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"* %977, %"class.std::__1::unique_ptr.91"* nonnull dereferenceable(8) %19) #10
  br label %1004

1004:                                             ; preds = %994, %1003
  %1005 = load %"class.blink::SVGValueInterpolationType"*, %"class.blink::SVGValueInterpolationType"** %987, align 8
  store %"class.blink::SVGValueInterpolationType"* null, %"class.blink::SVGValueInterpolationType"** %987, align 8
  %1006 = icmp eq %"class.blink::SVGValueInterpolationType"* %1005, null
  br i1 %1006, label %1012, label %1007

1007:                                             ; preds = %1004
  %1008 = bitcast %"class.blink::SVGValueInterpolationType"* %1005 to void (%"class.blink::SVGValueInterpolationType"*)***
  %1009 = load void (%"class.blink::SVGValueInterpolationType"*)**, void (%"class.blink::SVGValueInterpolationType"*)*** %1008, align 8
  %1010 = getelementptr inbounds void (%"class.blink::SVGValueInterpolationType"*)*, void (%"class.blink::SVGValueInterpolationType"*)** %1009, i64 1
  %1011 = load void (%"class.blink::SVGValueInterpolationType"*)*, void (%"class.blink::SVGValueInterpolationType"*)** %1010, align 8
  call void %1011(%"class.blink::SVGValueInterpolationType"* nonnull %1005) #10
  br label %1012

1012:                                             ; preds = %1004, %1007
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %978) #10
  %1013 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6insertINS_17HashMapTranslatorISQ_SL_SC_EERKS2_NS5_ISD_NS9_ISD_EEEEEENS_18HashTableAddResultISR_SH_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink24SVGInterpolationTypesMap3GetERKNS_14PropertyHandleEE22s_applicable_types_map to %"class.WTF::HashTable"*), %"class.blink::PropertyHandle"* dereferenceable(24) %1, %"class.std::__1::unique_ptr.13"* nonnull dereferenceable(8) %3) #10
  %1014 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %1013, 0
  %1015 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1014, i64 0, i32 1, i32 0, i32 0, i32 0
  %1016 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %1015, align 8
  %1017 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %40, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %40, align 8
  %1018 = icmp eq %"class.WTF::Vector"* %1017, null
  br i1 %1018, label %1051, label %1019

1019:                                             ; preds = %1012
  %1020 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1017, i64 0, i32 0, i32 0, i32 0
  %1021 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %1020, align 8
  %1022 = icmp eq %"class.std::__1::unique_ptr"* %1021, null
  br i1 %1022, label %1049, label %1023, !prof !4

1023:                                             ; preds = %1019
  %1024 = bitcast %"class.std::__1::unique_ptr"* %1021 to i8*
  %1025 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1017, i64 0, i32 0, i32 0, i32 2
  %1026 = load i32, i32* %1025, align 4
  %1027 = icmp eq i32 %1026, 0
  br i1 %1027, label %1047, label %1028, !prof !3

1028:                                             ; preds = %1023
  %1029 = zext i32 %1026 to i64
  %1030 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1021, i64 %1029
  br label %1031

1031:                                             ; preds = %1041, %1028
  %1032 = phi %"class.std::__1::unique_ptr"* [ %1042, %1041 ], [ %1021, %1028 ]
  %1033 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1032, i64 0, i32 0, i32 0, i32 0
  %1034 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %1033, align 8
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %1033, align 8
  %1035 = icmp eq %"class.blink::InterpolationType"* %1034, null
  br i1 %1035, label %1041, label %1036

1036:                                             ; preds = %1031
  %1037 = bitcast %"class.blink::InterpolationType"* %1034 to void (%"class.blink::InterpolationType"*)***
  %1038 = load void (%"class.blink::InterpolationType"*)**, void (%"class.blink::InterpolationType"*)*** %1037, align 8
  %1039 = getelementptr inbounds void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %1038, i64 1
  %1040 = load void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %1039, align 8
  call void %1040(%"class.blink::InterpolationType"* nonnull %1034) #10
  br label %1041

1041:                                             ; preds = %1036, %1031
  %1042 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1032, i64 1
  %1043 = icmp eq %"class.std::__1::unique_ptr"* %1042, %1030
  br i1 %1043, label %1044, label %1031

1044:                                             ; preds = %1041
  store i32 0, i32* %1025, align 4
  %1045 = bitcast %"class.WTF::Vector"* %1017 to i8**
  %1046 = load i8*, i8** %1045, align 8
  br label %1047

1047:                                             ; preds = %1044, %1023
  %1048 = phi i8* [ %1046, %1044 ], [ %1024, %1023 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1048) #10
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %1020, align 8
  br label %1049

1049:                                             ; preds = %1047, %1019
  %1050 = bitcast %"class.WTF::Vector"* %1017 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %1050) #10
  br label %1051

1051:                                             ; preds = %1012, %1049
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  br label %1052

1052:                                             ; preds = %1051, %35
  %1053 = phi %"class.WTF::Vector"* [ %37, %35 ], [ %1016, %1051 ]
  ret %"class.WTF::Vector"* %1053
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink21InterpolationTypesMap7VersionEv(%"class.blink::InterpolationTypesMap"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6LookupINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EEPKSH_RKT0_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %16, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %17, label %66, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = xor i32 %12, -1
  %25 = lshr i32 %12, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %58
  %38 = phi %"class.blink::PropertyHandle"* [ %16, %18 ], [ %64, %58 ]
  %39 = phi i64 [ %14, %18 ], [ %62, %58 ]
  %40 = phi i64 [ 0, %18 ], [ %60, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #10
  store i32 0, i32* %20, align 8, !alias.scope !5
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10, !alias.scope !5
  %41 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %38, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #10
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #10
  br i1 %41, label %66, label %58

58:                                               ; preds = %57
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %36, i64 %40
  %61 = add i64 %60, %39
  %62 = and i64 %61, %11
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %64, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %65, label %66, label %37

66:                                               ; preds = %58, %57, %7, %2
  %67 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %15, %7 ], [ %63, %58 ], [ null, %57 ]
  ret %"struct.WTF::KeyValuePair"* %67
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25SVGAngleInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.19"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.19"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGAngleInterpolationType"* null, %"class.blink::SVGAngleInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_27SVGIntegerInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.25"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.25"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGIntegerInterpolationType"* null, %"class.blink::SVGIntegerInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_42SVGIntegerOptionalIntegerInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.31"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.31"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGIntegerOptionalIntegerInterpolationType"* null, %"class.blink::SVGIntegerOptionalIntegerInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare i32 @_ZN5blink9SVGLength36LengthModeForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink9SVGLength49NegativeValuesForbiddenForAnimatedLengthAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26SVGLengthInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.37"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.37"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGLengthInterpolationType"* null, %"class.blink::SVGLengthInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26SVGNumberInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.43"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.43"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGNumberInterpolationType"* null, %"class.blink::SVGNumberInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30SVGLengthListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.49"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.49"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGLengthListInterpolationType"* null, %"class.blink::SVGLengthListInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30SVGNumberListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.55"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.55"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGNumberListInterpolationType"* null, %"class.blink::SVGNumberListInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_40SVGNumberOptionalNumberInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.61"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.61"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGNumberOptionalNumberInterpolationType"* null, %"class.blink::SVGNumberOptionalNumberInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24SVGPathInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.67"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.67"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGPathInterpolationType"* null, %"class.blink::SVGPathInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29SVGPointListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.73"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.73"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGPointListInterpolationType"* null, %"class.blink::SVGPointListInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24SVGRectInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.79"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.79"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGRectInterpolationType"* null, %"class.blink::SVGRectInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_33SVGTransformListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.85"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.85"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGTransformListInterpolationType"* null, %"class.blink::SVGTransformListInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25SVGValueInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr.91"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.91"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::SVGValueInterpolationType"* null, %"class.blink::SVGValueInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6insertINS_17HashMapTranslatorISQ_SL_SC_EERKS2_NS5_ISD_NS9_ISD_EEEEEENS_18HashTableAddResultISR_SH_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.std::__1::unique_ptr.13"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6ExpandEPSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %63, %11
  %39 = phi i64 [ 0, %11 ], [ %69, %63 ]
  %40 = phi i64 [ %19, %11 ], [ %71, %63 ]
  %41 = phi %"struct.WTF::KeyValuePair"* [ null, %11 ], [ %67, %63 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %40
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #10
  store i32 0, i32* %21, align 8, !alias.scope !10
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #10, !alias.scope !10
  %44 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #10
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #10
  br label %60

60:                                               ; preds = %38, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #10
  br i1 %44, label %72, label %61

61:                                               ; preds = %60
  %62 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %62, label %95, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %42, %"struct.WTF::KeyValuePair"* %41
  %68 = icmp eq i64 %39, 0
  %69 = select i1 %68, i64 %37, i64 %39
  %70 = add i64 %69, %40
  %71 = and i64 %70, %16
  br label %38

72:                                               ; preds = %60
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %41, null
  br i1 %73, label %82, label %74

74:                                               ; preds = %72
  %75 = bitcast %"struct.WTF::KeyValuePair"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 32, i1 false) #10
  %76 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 2147483647
  %79 = and i32 %78, 2147483647
  %80 = and i32 %77, -2147483648
  %81 = or i32 %79, %80
  store i32 %81, i32* %76, align 8
  br label %82

82:                                               ; preds = %72, %74
  %83 = phi %"struct.WTF::KeyValuePair"* [ %41, %74 ], [ %42, %72 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink14PropertyHandleEEENS2_INSt3__110unique_ptrIKNS_6VectorINS7_IKNS3_17InterpolationTypeENS6_14default_deleteISA_EEEELj0ENS_18PartitionAllocatorEEENSB_ISG_EEEEEEEENS_11DefaultHashIS4_E4HashESE_E9TranslateINS_12KeyValuePairIS4_SI_EERKS4_NS7_ISF_NSB_ISF_EEEEEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(32) %83, %"class.blink::PropertyHandle"* dereferenceable(24) %1, %"class.std::__1::unique_ptr.13"* dereferenceable(8) %2)
  %84 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %84, align 4
  %87 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, %86
  %90 = shl i32 %89, 1
  %91 = load i32, i32* %13, align 8
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %95, label %93

93:                                               ; preds = %82
  %94 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6ExpandEPSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %83)
  br label %95

95:                                               ; preds = %61, %82, %93
  %96 = phi i8 [ 1, %82 ], [ 1, %93 ], [ 0, %61 ]
  %97 = phi %"struct.WTF::KeyValuePair"* [ %83, %82 ], [ %94, %93 ], [ %42, %61 ]
  %98 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %97, 0
  %99 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %98, i8 %96, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6ExpandEPSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 5
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([459 x i8], [459 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink14PropertyHandleENSt3__110unique_ptrIKNS_6VectorINS5_IKNS2_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E8RehashToEPSH_jSS_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #10
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink14PropertyHandleEEENS2_INSt3__110unique_ptrIKNS_6VectorINS7_IKNS3_17InterpolationTypeENS6_14default_deleteISA_EEEELj0ENS_18PartitionAllocatorEEENSB_ISG_EEEEEEEENS_11DefaultHashIS4_E4HashESE_E9TranslateINS_12KeyValuePairIS4_SI_EERKS4_NS7_ISF_NSB_ISF_EEEEEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(32), %"class.blink::PropertyHandle"* dereferenceable(24), %"class.std::__1::unique_ptr.13"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  %5 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false) #10
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #10
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #10
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %3
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %27, %42, %45
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %2, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.13"* %2 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %47, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.7"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.WTF::Vector"* %52, null
  br i1 %54, label %87, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %52, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %56, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr"* %57, null
  br i1 %58, label %85, label %59, !prof !4

59:                                               ; preds = %55
  %60 = bitcast %"class.std::__1::unique_ptr"* %57 to i8*
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %52, i64 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %83, label %64, !prof !3

64:                                               ; preds = %59
  %65 = zext i32 %62 to i64
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 %65
  br label %67

67:                                               ; preds = %77, %64
  %68 = phi %"class.std::__1::unique_ptr"* [ %78, %77 ], [ %57, %64 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %69, align 8
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %69, align 8
  %71 = icmp eq %"class.blink::InterpolationType"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %67
  %73 = bitcast %"class.blink::InterpolationType"* %70 to void (%"class.blink::InterpolationType"*)***
  %74 = load void (%"class.blink::InterpolationType"*)**, void (%"class.blink::InterpolationType"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %74, i64 1
  %76 = load void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %75, align 8
  tail call void %76(%"class.blink::InterpolationType"* nonnull %70) #10
  br label %77

77:                                               ; preds = %72, %67
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 1
  %79 = icmp eq %"class.std::__1::unique_ptr"* %78, %66
  br i1 %79, label %80, label %67

80:                                               ; preds = %77
  store i32 0, i32* %61, align 4
  %81 = bitcast %"class.WTF::Vector"* %52 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %59
  %84 = phi i8* [ %82, %80 ], [ %60, %59 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #10
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %56, align 8
  br label %85

85:                                               ; preds = %83, %55
  %86 = bitcast %"class.WTF::Vector"* %52 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %86) #10
  br label %87

87:                                               ; preds = %85, %46
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E8RehashToEPSH_jSS_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::HashTable", align 8
  %7 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %4
  %18 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable"* %6 to i64*
  br label %29

20:                                               ; preds = %4
  %21 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %24 = bitcast %union.anon* %23 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %109

26:                                               ; preds = %147
  %27 = bitcast %"class.WTF::HashTable"* %6 to i64*
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %17, %26
  %30 = phi i64* [ %19, %17 ], [ %27, %26 ]
  %31 = phi i64 [ %18, %17 ], [ %28, %26 ]
  %32 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %148, %26 ]
  %33 = phi i32 [ 0, %17 ], [ %149, %26 ]
  %34 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  store atomic i64 %31, i64* %34 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %35, i64* %30, align 8
  store i32 %33, i32* %9, align 8
  %36 = inttoptr i64 %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %105, label %38

38:                                               ; preds = %29
  %39 = icmp eq i32 %33, 0
  br i1 %39, label %103, label %40

40:                                               ; preds = %38
  %41 = zext i32 %33 to i64
  br label %42

42:                                               ; preds = %100, %40
  %43 = phi i64 [ 0, %40 ], [ %101, %100 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %100, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %43, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %48, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %48, align 8
  %50 = icmp eq %"class.WTF::Vector"* %49, null
  br i1 %50, label %83, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %49, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %52, align 8
  %54 = icmp eq %"class.std::__1::unique_ptr"* %53, null
  br i1 %54, label %81, label %55, !prof !4

55:                                               ; preds = %51
  %56 = bitcast %"class.std::__1::unique_ptr"* %53 to i8*
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %49, i64 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %79, label %60, !prof !3

60:                                               ; preds = %55
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %53, i64 %61
  br label %63

63:                                               ; preds = %73, %60
  %64 = phi %"class.std::__1::unique_ptr"* [ %74, %73 ], [ %53, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %65, align 8
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %65, align 8
  %67 = icmp eq %"class.blink::InterpolationType"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.blink::InterpolationType"* %66 to void (%"class.blink::InterpolationType"*)***
  %70 = load void (%"class.blink::InterpolationType"*)**, void (%"class.blink::InterpolationType"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %70, i64 1
  %72 = load void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %71, align 8
  call void %72(%"class.blink::InterpolationType"* nonnull %66) #10
  br label %73

73:                                               ; preds = %68, %63
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 1
  %75 = icmp eq %"class.std::__1::unique_ptr"* %74, %62
  br i1 %75, label %76, label %63

76:                                               ; preds = %73
  store i32 0, i32* %57, align 4
  %77 = bitcast %"class.WTF::Vector"* %49 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %55
  %80 = phi i8* [ %78, %76 ], [ %56, %55 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #10
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %52, align 8
  br label %81

81:                                               ; preds = %79, %51
  %82 = bitcast %"class.WTF::Vector"* %49 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %82) #10
  br label %83

83:                                               ; preds = %81, %47
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %43, i32 0, i32 2, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #10
  br label %100

100:                                              ; preds = %99, %96, %83, %42
  %101 = add nuw nsw i64 %43, 1
  %102 = icmp eq i64 %101, %41
  br i1 %102, label %103, label %42

103:                                              ; preds = %100, %38
  %104 = inttoptr i64 %35 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %104) #10
  store atomic i64 0, i64* %30 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %105

105:                                              ; preds = %29, %103
  %106 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, -2147483648
  store i32 %108, i32* %106, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret %"struct.WTF::KeyValuePair"* %32

109:                                              ; preds = %20, %147
  %110 = phi %"struct.WTF::KeyValuePair"* [ null, %20 ], [ %148, %147 ]
  %111 = phi i32 [ 0, %20 ], [ %149, %147 ]
  %112 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %113 = zext i32 %111 to i64
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 %113
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  store i32 0, i32* %22, align 8, !alias.scope !15
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #10, !alias.scope !15
  %116 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %115, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #10
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #10
  br label %132

132:                                              ; preds = %109, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 1
  %136 = or i1 %116, %135
  br i1 %136, label %147, label %137

137:                                              ; preds = %132
  %138 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %138, i64 %113
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %139, i64 0, i32 0
  %141 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E16LookupForWritingINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EENS4_4pairIPSH_bEERKT0_(%"class.WTF::HashTable"* nonnull %6, %"class.blink::PropertyHandle"* dereferenceable(24) %140) #10
  %142 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %141, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink14PropertyHandleENSt3__110unique_ptrIKNS_6VectorINS5_IKNS2_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEESC_NS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSJ_ISG_EEEELb0EE4MoveEOSH_RSH_(%"struct.WTF::KeyValuePair"* dereferenceable(32) %139, %"struct.WTF::KeyValuePair"* dereferenceable(32) %142) #10
  %143 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %143, i64 %113
  %145 = icmp eq %"struct.WTF::KeyValuePair"* %144, %3
  %146 = select i1 %145, %"struct.WTF::KeyValuePair"* %142, %"struct.WTF::KeyValuePair"* %110
  br label %147

147:                                              ; preds = %132, %137
  %148 = phi %"struct.WTF::KeyValuePair"* [ %110, %132 ], [ %146, %137 ]
  %149 = add i32 %111, 1
  %150 = load i32, i32* %13, align 8
  %151 = icmp eq i32 %149, %150
  br i1 %151, label %26, label %109
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink14PropertyHandleENSt3__110unique_ptrIKNS_6VectorINS5_IKNS2_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEESC_NS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSJ_ISG_EEEELb0EE4MoveEOSH_RSH_(%"struct.WTF::KeyValuePair"* dereferenceable(32), %"struct.WTF::KeyValuePair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %3, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %3, align 8
  %5 = icmp eq %"class.WTF::Vector"* %4, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %8, null
  br i1 %9, label %36, label %10, !prof !4

10:                                               ; preds = %6
  %11 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15, !prof !3

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 %16
  br label %18

18:                                               ; preds = %28, %15
  %19 = phi %"class.std::__1::unique_ptr"* [ %29, %28 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %20, align 8
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %20, align 8
  %22 = icmp eq %"class.blink::InterpolationType"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::InterpolationType"* %21 to void (%"class.blink::InterpolationType"*)***
  %25 = load void (%"class.blink::InterpolationType"*)**, void (%"class.blink::InterpolationType"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %25, i64 1
  %27 = load void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %26, align 8
  tail call void %27(%"class.blink::InterpolationType"* nonnull %21) #10
  br label %28

28:                                               ; preds = %23, %18
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 1
  %30 = icmp eq %"class.std::__1::unique_ptr"* %29, %17
  br i1 %30, label %31, label %18

31:                                               ; preds = %28
  store i32 0, i32* %12, align 4
  %32 = bitcast %"class.WTF::Vector"* %4 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %10
  %35 = phi i8* [ %33, %31 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %35) #10
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %7, align 8
  br label %36

36:                                               ; preds = %34, %6
  %37 = bitcast %"class.WTF::Vector"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %37) #10
  br label %38

38:                                               ; preds = %36, %2
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #10
  br label %55

55:                                               ; preds = %38, %51, %54
  %56 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #10
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 2
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::AtomicString"* %59 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.WTF::AtomicString"* %58 to i64*
  store i64 %62, i64* %63, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %60, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr.7"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %66, align 8
  %69 = bitcast %"class.std::__1::unique_ptr.7"* %64 to i64*
  store i64 %68, i64* %69, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E16LookupForWritingINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EENS4_4pairIPSH_bEERKT0_(%"class.WTF::HashTable"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #10
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %16 = bitcast %union.anon* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = xor i32 %10, -1
  %19 = lshr i32 %10, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %61, %2
  %32 = phi i64 [ 0, %2 ], [ %65, %61 ]
  %33 = phi i64 [ 0, %2 ], [ %67, %61 ]
  %34 = phi i64 [ %12, %2 ], [ %69, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %34
  %36 = ptrtoint %"struct.WTF::KeyValuePair"* %35 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  store i32 0, i32* %14, align 8, !alias.scope !20
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #10, !alias.scope !20
  %38 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #10
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #10
  br label %54

54:                                               ; preds = %31, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  br i1 %38, label %55, label %59

55:                                               ; preds = %54
  %56 = ptrtoint %"struct.WTF::KeyValuePair"* %35 to i64
  %57 = icmp eq i64 %32, 0
  %58 = select i1 %57, i64 %56, i64 %32
  br label %72

59:                                               ; preds = %54
  %60 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #10
  br i1 %60, label %70, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 1
  %65 = select i1 %64, i64 %36, i64 %32
  %66 = icmp eq i64 %33, 0
  %67 = select i1 %66, i64 %30, i64 %33
  %68 = add i64 %67, %34
  %69 = and i64 %68, %9
  br label %31

70:                                               ; preds = %59
  %71 = ptrtoint %"struct.WTF::KeyValuePair"* %35 to i64
  br label %72

72:                                               ; preds = %70, %55
  %73 = phi i64 [ %58, %55 ], [ %71, %70 ]
  %74 = phi i8 [ 0, %55 ], [ 1, %70 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!8 = distinct !{!8, !9, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!12 = distinct !{!12, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!13 = distinct !{!13, !14, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!17 = distinct !{!17, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!18 = distinct !{!18, !19, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!19 = distinct !{!19, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!22 = distinct !{!22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!23 = distinct !{!23, !24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
