; ModuleID = '../../components/password_manager/core/browser/password_store_consumer.cc'
source_filename = "../../components/password_manager/core/browser/password_store_consumer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.password_manager::PasswordStoreConsumer" = type { i32 (...)**, %"class.base::CancelableTaskTracker", %"class.base::WeakPtrFactory.12" }
%"class.base::CancelableTaskTracker" = type { %"class.base::small_map", i64, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtr", %"class.base::WeakPtrFactory" }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon = type { [4 x %"struct.std::__1::pair"] }
%"struct.std::__1::pair" = type { i64, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.12" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.password_manager::PasswordStore" = type { %"class.password_manager::PasswordStoreSync", %class.RefcountedKeyedService, %class.scoped_refptr.14, %class.scoped_refptr.14, %class.scoped_refptr.16, %class.scoped_refptr.17, %"class.std::__1::unique_ptr", %"class.base::RepeatingCallback", %"class.std::__1::unique_ptr.24", %class.PrefService*, %"class.password_manager::PasswordReuseDetector"*, %"class.std::__1::unique_ptr.68", %"class.password_manager::HashPasswordManager", %"class.std::__1::unique_ptr.79", %"class.std::__1::vector.85", %"class.base::internal::CancelableCallbackImpl", i8, i32, %"class.base::TimeDelta" }
%"class.password_manager::PasswordStoreSync" = type { i32 (...)** }
%class.RefcountedKeyedService = type { i32 (...)**, %"class.base::RefCountedThreadSafe.13", %class.scoped_refptr.14 }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.14 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.16 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%class.scoped_refptr.17 = type { %"class.base::ObserverListThreadSafe.18"* }
%"class.base::ObserverListThreadSafe.18" = type { %"class.base::internal::ObserverListThreadSafeBase.base", i32, %"class.base::Lock", i64, %"class.std::__1::unordered_map" }
%"class.base::internal::ObserverListThreadSafeBase.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.127" }>
%"class.base::RefCountedThreadSafe.127" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.128", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.143", [4 x i8] }>
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.password_manager::PasswordSyncBridge"* }
%"class.password_manager::PasswordSyncBridge" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.23", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.password_manager::AffiliatedMatchHelper"* }
%"class.password_manager::AffiliatedMatchHelper" = type opaque
%class.PrefService = type opaque
%"class.password_manager::PasswordReuseDetector" = type { %"class.password_manager::PasswordStoreConsumer", %"class.std::__1::map.30", i32, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.51" }
%"class.std::__1::map.30" = type { %"class.std::__1::__tree.31" }
%"class.std::__1::__tree.31" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.password_manager::PasswordHashData"*, %"struct.password_manager::PasswordHashData"*, %"class.std::__1::__compressed_pair.46" }
%"struct.password_manager::PasswordHashData" = type <{ %"class.std::__1::basic_string", i64, %"class.std::__1::basic_string", i64, i8, i8, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.42 }
%union.anon.42 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.password_manager::PasswordHashData"* }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"class.std::__1::vector.56" }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.64" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.58" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %class.GURL* }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.password_manager::PasswordStoreSigninNotifier"* }
%"class.password_manager::PasswordStoreSigninNotifier" = type opaque
%"class.password_manager::HashPasswordManager" = type { i32 (...)**, %class.PrefService*, %"class.base::RepeatingCallbackList" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.78" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.74" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.78" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.password_manager::PasswordStore::UnsyncedCredentialsDeletionNotifier"* }
%"class.password_manager::PasswordStore::UnsyncedCredentialsDeletionNotifier" = type { i32 (...)** }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.87" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.base::OnceCallback"* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.92", %"class.base::WeakPtrFactory.93" }
%"class.base::OnceCallback.92" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.93" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.std::__1::unique_ptr.96"*, %"class.std::__1::unique_ptr.96"*, %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.password_manager::PasswordForm"* }
%"struct.password_manager::PasswordForm" = type { i32, %"class.std::__1::basic_string", %class.GURL, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::basic_string.104", %"class.std::__1::basic_string.104", %"class.autofill::FieldRendererId", i8, i8, %"class.std::__1::basic_string.104", %"class.std::__1::vector.151", %"class.std::__1::vector.151", i8, %"class.std::__1::basic_string.104", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.104", %"class.std::__1::basic_string", %"class.std::__1::basic_string.104", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.104", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string.104", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i32, i32, [4 x i8], %"struct.autofill::FormData", i32, %"class.std::__1::basic_string.104", %class.GURL, %"class.url::Origin", i8, i8, i8, i8, i32, i8, i8, i32, %"class.std::__1::vector.214" }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"struct.std::__1::pair.153"*, %"struct.std::__1::pair.153"*, %"class.std::__1::__compressed_pair.154" }
%"struct.std::__1::pair.153" = type opaque
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"struct.std::__1::pair.153"* }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType.149" }
%"class.util::IdType.149" = type { %"class.base::StrongAlias.150" }
%"class.base::StrongAlias.150" = type { i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.autofill::FormData" = type <{ %"class.std::__1::basic_string.104", %"class.std::__1::basic_string.104", %"class.std::__1::basic_string.104", %"class.std::__1::vector.159", %class.GURL, %class.GURL, %class.GURL, i8, [7 x i8], %"class.url::Origin", i8, [7 x i8], %"class.autofill::internal::TokenType", %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::vector.175", %"class.std::__1::vector.186", i32, [4 x i8], %"class.std::__1::vector.193", %"class.std::__1::vector.207", i8, [7 x i8] }>
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { %"struct.std::__1::pair.161"*, %"struct.std::__1::pair.161"*, %"class.std::__1::__compressed_pair.162" }
%"struct.std::__1::pair.161" = type <{ %"class.std::__1::basic_string.104", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::pair.161"* }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias.172" }
%"class.base::StrongAlias.172" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::FormRendererId" = type { %"class.util::IdType.173" }
%"class.util::IdType.173" = type { %"class.base::StrongAlias.174" }
%"class.base::StrongAlias.174" = type { i32 }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"class.absl::variant"*, %"class.absl::variant"*, %"class.std::__1::__compressed_pair.181" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { %"class.autofill::internal::TokenType.177" }
%"class.autofill::internal::TokenType.177" = type { %"class.base::StrongAlias.178" }
%"class.base::StrongAlias.178" = type { %"class.base::UnguessableToken" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.absl::variant"* }
%"class.std::__1::vector.186" = type { %"class.std::__1::__vector_base.187" }
%"class.std::__1::__vector_base.187" = type { i32*, i32*, %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { i32* }
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { %"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"*, %"class.std::__1::__compressed_pair.202" }
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string.104", %"class.std::__1::basic_string.104", %"class.std::__1::basic_string.104", %"class.std::__1::basic_string.104", %"class.std::__1::basic_string.104", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.104", %"class.std::__1::basic_string.104", %"class.std::__1::basic_string.104", %"class.std::__1::basic_string.104", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string.104", %"class.std::__1::vector.195", %"class.std::__1::vector.195", i32, %"class.gfx::RectF", %"class.std::__1::vector.195", %"class.std::__1::vector.195" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"class.std::__1::basic_string.104"*, %"class.std::__1::basic_string.104"*, %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.std::__1::basic_string.104"* }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.autofill::FormFieldData"* }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"*, %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.autofill::FieldRendererId"* }
%"class.std::__1::basic_string.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.107 }
%union.anon.107 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.167" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.167" = type { %"class.absl::optional_internal::optional_data.168" }
%"class.absl::optional_internal::optional_data.168" = type { %"class.absl::optional_internal::optional_data_base.169" }
%"class.absl::optional_internal::optional_data_base.169" = type { %"class.absl::optional_internal::optional_data_dtor_base.170" }
%"class.absl::optional_internal::optional_data_dtor_base.170" = type { i8, %union.anon.171 }
%union.anon.171 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"class.autofill::GaiaIdHash"*, %"class.autofill::GaiaIdHash"*, %"class.std::__1::__compressed_pair.216" }
%"class.autofill::GaiaIdHash" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.autofill::GaiaIdHash"* }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::unique_ptr.96"* }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.password_manager::InteractionsStats"*, %"struct.password_manager::InteractionsStats"*, %"class.std::__1::__compressed_pair.113" }
%"struct.password_manager::InteractionsStats" = type { %class.GURL, %"class.std::__1::basic_string.104", i32, %"class.base::Time" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.password_manager::InteractionsStats"* }
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %"struct.password_manager::FieldInfo"*, %"struct.password_manager::FieldInfo"*, %"class.std::__1::__compressed_pair.122" }
%"struct.password_manager::FieldInfo" = type { %"class.autofill::FormSignature", %"class.autofill::FieldSignature", i32, %"class.base::Time" }
%"class.autofill::FormSignature" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.autofill::FieldSignature" = type { %"class.util::IdType.120" }
%"class.util::IdType.120" = type { %"class.base::StrongAlias.121" }
%"class.base::StrongAlias.121" = type { i32 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.password_manager::FieldInfo"* }

@_ZTVN16password_manager21PasswordStoreConsumerE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.password_manager::PasswordStoreConsumer"*, %"class.password_manager::PasswordStore"*, %"class.std::__1::vector.94"*)* @_ZN16password_manager21PasswordStoreConsumer29OnGetPasswordStoreResultsFromEPNS_13PasswordStoreENSt3__16vectorINS3_10unique_ptrINS_12PasswordFormENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEE to i8*), i8* bitcast (void (%"class.password_manager::PasswordStoreConsumer"*, %"class.std::__1::vector.102"*)* @_ZN16password_manager21PasswordStoreConsumer19OnGetSiteStatisticsENSt3__16vectorINS_17InteractionsStatsENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.password_manager::PasswordStoreConsumer"*, %"class.std::__1::vector.118"*)* @_ZN16password_manager21PasswordStoreConsumer17OnGetAllFieldInfoENSt3__16vectorINS_9FieldInfoENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.password_manager::PasswordStoreConsumer"*)* @_ZN16password_manager21PasswordStoreConsumerD2Ev to i8*), i8* bitcast (void (%"class.password_manager::PasswordStoreConsumer"*)* @_ZN16password_manager21PasswordStoreConsumerD0Ev to i8*)] }, align 8

@_ZN16password_manager21PasswordStoreConsumerD1Ev = hidden unnamed_addr alias void (%"class.password_manager::PasswordStoreConsumer"*), void (%"class.password_manager::PasswordStoreConsumer"*)* @_ZN16password_manager21PasswordStoreConsumerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager21PasswordStoreConsumerC2Ev(%"class.password_manager::PasswordStoreConsumer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.password_manager::PasswordStoreConsumer", %"class.password_manager::PasswordStoreConsumer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN16password_manager21PasswordStoreConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.password_manager::PasswordStoreConsumer", %"class.password_manager::PasswordStoreConsumer"* %0, i64 0, i32 1
  tail call void @_ZN4base21CancelableTaskTrackerC1Ev(%"class.base::CancelableTaskTracker"* %3) #8
  %4 = getelementptr inbounds %"class.password_manager::PasswordStoreConsumer", %"class.password_manager::PasswordStoreConsumer"* %0, i64 0, i32 2, i32 0
  %5 = ptrtoint %"class.password_manager::PasswordStoreConsumer"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %4, i64 %5) #8
  ret void
}

declare void @_ZN4base21CancelableTaskTrackerC1Ev(%"class.base::CancelableTaskTracker"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager21PasswordStoreConsumerD2Ev(%"class.password_manager::PasswordStoreConsumer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.password_manager::PasswordStoreConsumer", %"class.password_manager::PasswordStoreConsumer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN16password_manager21PasswordStoreConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.password_manager::PasswordStoreConsumer", %"class.password_manager::PasswordStoreConsumer"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #8
  %4 = getelementptr inbounds %"class.password_manager::PasswordStoreConsumer", %"class.password_manager::PasswordStoreConsumer"* %0, i64 0, i32 1
  tail call void @_ZN4base21CancelableTaskTrackerD1Ev(%"class.base::CancelableTaskTracker"* %4) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base21CancelableTaskTrackerD1Ev(%"class.base::CancelableTaskTracker"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN16password_manager21PasswordStoreConsumerD0Ev(%"class.password_manager::PasswordStoreConsumer"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager21PasswordStoreConsumer29OnGetPasswordStoreResultsFromEPNS_13PasswordStoreENSt3__16vectorINS3_10unique_ptrINS_12PasswordFormENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEE(%"class.password_manager::PasswordStoreConsumer"*, %"class.password_manager::PasswordStore"* nocapture readnone, %"class.std::__1::vector.94"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.94", align 16
  %5 = bitcast %"class.std::__1::vector.94"* %2 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %4, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::vector.94"* %4 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %8, align 16
  %9 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.std::__1::unique_ptr.96"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.96"** %12 to i64*
  store i64 %11, i64* %13, align 16
  %14 = bitcast %"class.std::__1::vector.94"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #8
  %15 = bitcast %"class.password_manager::PasswordStoreConsumer"* %0 to void (%"class.password_manager::PasswordStoreConsumer"*, %"class.std::__1::vector.94"*)***
  %16 = load void (%"class.password_manager::PasswordStoreConsumer"*, %"class.std::__1::vector.94"*)**, void (%"class.password_manager::PasswordStoreConsumer"*, %"class.std::__1::vector.94"*)*** %15, align 8
  %17 = load void (%"class.password_manager::PasswordStoreConsumer"*, %"class.std::__1::vector.94"*)*, void (%"class.password_manager::PasswordStoreConsumer"*, %"class.std::__1::vector.94"*)** %16, align 8
  call void %17(%"class.password_manager::PasswordStoreConsumer"* %0, %"class.std::__1::vector.94"* nonnull %4) #8
  %18 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %4, i64 0, i32 0, i32 0
  %19 = load %"class.std::__1::unique_ptr.96"*, %"class.std::__1::unique_ptr.96"** %18, align 16
  %20 = icmp eq %"class.std::__1::unique_ptr.96"* %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::unique_ptr.96"* %19 to i8*
  %23 = load %"class.std::__1::unique_ptr.96"*, %"class.std::__1::unique_ptr.96"** %7, align 8
  %24 = icmp eq %"class.std::__1::unique_ptr.96"* %23, %19
  br i1 %24, label %38, label %25

25:                                               ; preds = %21, %33
  %26 = phi %"class.std::__1::unique_ptr.96"* [ %27, %33 ], [ %23, %21 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.96"* %26, i64 -1
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.96"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"struct.password_manager::PasswordForm"*, %"struct.password_manager::PasswordForm"** %28, align 8
  store %"struct.password_manager::PasswordForm"* null, %"struct.password_manager::PasswordForm"** %28, align 8
  %30 = icmp eq %"struct.password_manager::PasswordForm"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  call void @_ZN16password_manager12PasswordFormD1Ev(%"struct.password_manager::PasswordForm"* nonnull %29) #8
  %32 = bitcast %"struct.password_manager::PasswordForm"* %29 to i8*
  call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %31, %25
  %34 = icmp eq %"class.std::__1::unique_ptr.96"* %27, %19
  br i1 %34, label %35, label %25

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::vector.94"* %4 to i8**
  %37 = load i8*, i8** %36, align 16
  br label %38

38:                                               ; preds = %35, %21
  %39 = phi i8* [ %37, %35 ], [ %22, %21 ]
  store %"class.std::__1::unique_ptr.96"* %19, %"class.std::__1::unique_ptr.96"** %7, align 8
  call void @_ZdlPv(i8* %39) #10
  br label %40

40:                                               ; preds = %3, %38
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN16password_manager21PasswordStoreConsumer19OnGetSiteStatisticsENSt3__16vectorINS_17InteractionsStatsENS1_9allocatorIS3_EEEE(%"class.password_manager::PasswordStoreConsumer"* nocapture, %"class.std::__1::vector.102"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN16password_manager21PasswordStoreConsumer17OnGetAllFieldInfoENSt3__16vectorINS_9FieldInfoENS1_9allocatorIS3_EEEE(%"class.password_manager::PasswordStoreConsumer"* nocapture, %"class.std::__1::vector.118"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager21PasswordStoreConsumer17CancelAllRequestsEv(%"class.password_manager::PasswordStoreConsumer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.password_manager::PasswordStoreConsumer", %"class.password_manager::PasswordStoreConsumer"* %0, i64 0, i32 1
  tail call void @_ZN4base21CancelableTaskTracker12TryCancelAllEv(%"class.base::CancelableTaskTracker"* %2) #8
  %3 = getelementptr inbounds %"class.password_manager::PasswordStoreConsumer", %"class.password_manager::PasswordStoreConsumer"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %3) #8
  ret void
}

declare void @_ZN4base21CancelableTaskTracker12TryCancelAllEv(%"class.base::CancelableTaskTracker"*) local_unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16password_manager12PasswordFormD1Ev(%"struct.password_manager::PasswordForm"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
