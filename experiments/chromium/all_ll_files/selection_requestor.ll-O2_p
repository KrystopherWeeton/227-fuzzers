; ModuleID = '../../ui/base/x/selection_requestor.cc'
source_filename = "../../ui/base/x/selection_requestor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::SelectionRequestor" = type { i32, i32, %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::SelectionRequestor::Request"**, %"struct.ui::SelectionRequestor::Request"**, %"class.std::__1::__compressed_pair.4" }
%"struct.ui::SelectionRequestor::Request" = type <{ i32, i32, i8, [7 x i8], %"class.std::__1::vector.0", i32, i8, [3 x i8], %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair" }
%class.scoped_refptr = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.scoped_refptr* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.ui::SelectionRequestor::Request"** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { i8*, i8*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i8* }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.14"* }
%"struct.x11::ConvertSelectionRequest" = type { i32, i32, i32, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.209", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.226", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.267", %"class.base::circular_deque", %"class.base::ObserverList.273", %"class.x11::Event"*, %"class.base::circular_deque.277", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.288" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.219" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.212", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.214" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.219" = type <{ %"class.std::__1::vector.212", %"class.base::LinkedList.220", i64, i32, [4 x i8] }>
%"class.base::LinkedList.220" = type { %"class.base::LinkNode.221" }
%"class.base::LinkNode.221" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.232", %"class.std::__1::vector.239" }
%"class.std::__1::vector.232" = type { %"class.std::__1::__vector_base.233" }
%"class.std::__1::__vector_base.233" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.234" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.239" = type { %"class.std::__1::__vector_base.240" }
%"class.std::__1::__vector_base.240" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.241" }
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.243" }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.260" }
%"class.std::__1::vector.260" = type { %"class.std::__1::__vector_base.261" }
%"class.std::__1::__vector_base.261" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.262" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.273" = type <{ %"class.std::__1::vector.212", %"class.base::LinkedList.274", i64, i32, [4 x i8] }>
%"class.base::LinkedList.274" = type { %"class.base::LinkNode.275" }
%"class.base::LinkNode.275" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.277" = type { %"class.base::internal::VectorBuffer.278", i64, i64 }
%"class.base::internal::VectorBuffer.278" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr, %"class.std::__1::unique_ptr.281" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.279 }
%class.scoped_refptr.279 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.280", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.280" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.287 }
%union.anon.287 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.288" = type { %"class.base::internal::CallbackBase" }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.x11::SelectionNotifyEvent" = type { i8, i16, i32, i32, i32, i32, i32 }
%"struct.x11::PropertyNotifyEvent" = type { i8, i16, i32, i32, i32, i32 }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { i32*, i32*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i32* }
%"struct.x11::ChangePropertyRequest" = type { i32, i32, i32, i32, i8, i32, %class.scoped_refptr }
%"class.base::RefCountedBytes" = type { %"class.base::RefCountedMemory.base", %"class.std::__1::vector.14" }
%"class.base::RefCountedMemory.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.ui::SelectionData" = type { i32, %class.scoped_refptr }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3x1116SetArrayPropertyINS_4AtomEEENS_6FutureIvEENS_6WindowES1_S1_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE = comdat any

$_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh = comdat any

$_ZNSt3__16vectorI13scoped_refptrIN4base16RefCountedMemoryEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_ = comdat any

$_ZNK4base8internal12VectorBufferIN3x115EventEEixEm = comdat any

@_ZN2ui12_GLOBAL__N_116kChromeSelectionE = internal unnamed_addr constant [17 x i8] c"CHROME_SELECTION\00", align 16
@.str = private unnamed_addr constant [39 x i8] c"../../ui/base/x/selection_requestor.cc\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"request_it != requests_.end()\00", align 1
@_ZN2ui5kIncrE = external constant [0 x i8], align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1

@_ZN2ui18SelectionRequestorC1EN3x116WindowE = hidden unnamed_addr alias void (%"class.ui::SelectionRequestor"*, i32), void (%"class.ui::SelectionRequestor"*, i32)* @_ZN2ui18SelectionRequestorC2EN3x116WindowE
@_ZN2ui18SelectionRequestorD1Ev = hidden unnamed_addr alias void (%"class.ui::SelectionRequestor"*), void (%"class.ui::SelectionRequestor"*)* @_ZN2ui18SelectionRequestorD2Ev
@_ZN2ui18SelectionRequestor7RequestC1EN3x114AtomES3_N4base9TimeTicksE = hidden unnamed_addr alias void (%"struct.ui::SelectionRequestor::Request"*, i32, i32, i64), void (%"struct.ui::SelectionRequestor::Request"*, i32, i32, i64)* @_ZN2ui18SelectionRequestor7RequestC2EN3x114AtomES3_N4base9TimeTicksE
@_ZN2ui18SelectionRequestor7RequestD1Ev = hidden unnamed_addr alias void (%"struct.ui::SelectionRequestor::Request"*), void (%"struct.ui::SelectionRequestor::Request"*)* @_ZN2ui18SelectionRequestor7RequestD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestorC2EN3x116WindowE(%"class.ui::SelectionRequestor"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 16, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 16 getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN2ui12_GLOBAL__N_116kChromeSelectionE, i64 0, i64 0), i64 16, i1 false) #12
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = bitcast i64* %9 to i8*
  store i8 0, i8* %10, align 8
  %11 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %12 = load i8, i8* %8, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %2, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  store i32 %11, i32* %5, align 4
  %18 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2
  %19 = bitcast %"class.std::__1::vector"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false)
  ret void
}

declare i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestorD2Ev(%"class.ui::SelectionRequestor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.ui::SelectionRequestor::Request"**, %"struct.ui::SelectionRequestor::Request"*** %2, align 8
  %4 = icmp eq %"struct.ui::SelectionRequestor::Request"** %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %3 to i64
  %7 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"struct.ui::SelectionRequestor::Request"*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.ui::SelectionRequestor::Request"** %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui18SelectionRequestor31PerformBlockingConvertSelectionEN3x114AtomES2_PNSt3__16vectorIhNS3_9allocatorIhEEEEPS2_(%"class.ui::SelectionRequestor"*, i32, i32, %"class.std::__1::vector.14"*, i32*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"struct.x11::ConvertSelectionRequest", align 4
  %8 = alloca %"struct.ui::SelectionRequestor::Request", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.std::__1::vector.14", align 16
  %11 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  %12 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %11, i64 1000000) #12
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 9223372036854775807, i64 %14, !prof !2
  %16 = bitcast %"struct.ui::SelectionRequestor::Request"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 64, i1 false)
  %17 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %8, i64 0, i32 0
  store i32 %1, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %8, i64 0, i32 1
  store i32 %2, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %8, i64 0, i32 2
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %8, i64 0, i32 4
  %21 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %8, i64 0, i32 8, i32 0, i32 0
  %22 = bitcast %"class.std::__1::vector.0"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 29, i1 false) #12
  store i64 %15, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %8, i64 0, i32 9
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2
  %25 = ptrtoint %"struct.ui::SelectionRequestor::Request"* %8 to i64
  %26 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2, i32 0, i32 1
  %27 = load %"struct.ui::SelectionRequestor::Request"**, %"struct.ui::SelectionRequestor::Request"*** %26, align 8
  %28 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %29 = load %"struct.ui::SelectionRequestor::Request"**, %"struct.ui::SelectionRequestor::Request"*** %28, align 8
  %30 = icmp ult %"struct.ui::SelectionRequestor::Request"** %27, %29
  %31 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %29 to i64
  br i1 %30, label %32, label %38

32:                                               ; preds = %5
  %33 = bitcast %"struct.ui::SelectionRequestor::Request"** %27 to i64*
  store i64 %25, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %27, i64 1
  %35 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %34 to i64
  %36 = bitcast %"struct.ui::SelectionRequestor::Request"*** %26 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %"class.std::__1::vector"* %24 to i64*
  br label %96

38:                                               ; preds = %5
  %39 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %27 to i64
  %40 = bitcast %"struct.ui::SelectionRequestor::Request"*** %26 to i64*
  %41 = bitcast %"class.std::__1::vector"* %24 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %39, %42
  %44 = ashr exact i64 %43, 3
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 2305843009213693951
  br i1 %46, label %47, label %49

47:                                               ; preds = %38
  %48 = bitcast %"class.std::__1::vector"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #14
  unreachable

49:                                               ; preds = %38
  %50 = bitcast %"struct.ui::SelectionRequestor::Request"*** %28 to i64*
  %51 = sub i64 %31, %42
  %52 = ashr exact i64 %51, 3
  %53 = icmp ult i64 %52, 1152921504606846975
  br i1 %53, label %54, label %62

54:                                               ; preds = %49
  %55 = ashr exact i64 %51, 2
  %56 = icmp ult i64 %55, %45
  %57 = select i1 %56, i64 %45, i64 %55
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %54
  %60 = icmp ugt i64 %57, 2305843009213693951
  br i1 %60, label %61, label %62

61:                                               ; preds = %59
  call void @abort() #14
  unreachable

62:                                               ; preds = %59, %49
  %63 = phi i64 [ %57, %59 ], [ 2305843009213693951, %49 ]
  %64 = shl i64 %63, 3
  %65 = call i8* @_Znwm(i64 %64) #13
  %66 = bitcast i8* %65 to %"struct.ui::SelectionRequestor::Request"**
  br label %67

67:                                               ; preds = %62, %54
  %68 = phi i64 [ %63, %62 ], [ 0, %54 ]
  %69 = phi %"struct.ui::SelectionRequestor::Request"** [ %66, %62 ], [ null, %54 ]
  %70 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %69, i64 %44
  %71 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %69, i64 %68
  %72 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %71 to i64
  %73 = bitcast %"struct.ui::SelectionRequestor::Request"** %70 to i64*
  store i64 %25, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %70, i64 1
  %75 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %74 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 0
  %77 = load %"struct.ui::SelectionRequestor::Request"**, %"struct.ui::SelectionRequestor::Request"*** %76, align 8
  %78 = load i64, i64* %40, align 8
  %79 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %77 to i64
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 3
  %82 = sub nsw i64 0, %81
  %83 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %70, i64 %82
  %84 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %83 to i64
  %85 = icmp sgt i64 %80, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %67
  %87 = bitcast %"struct.ui::SelectionRequestor::Request"** %83 to i8*
  %88 = bitcast %"struct.ui::SelectionRequestor::Request"** %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 %80, i1 false) #12
  %89 = load %"struct.ui::SelectionRequestor::Request"**, %"struct.ui::SelectionRequestor::Request"*** %76, align 8
  br label %90

90:                                               ; preds = %86, %67
  %91 = phi %"struct.ui::SelectionRequestor::Request"** [ %77, %67 ], [ %89, %86 ]
  store i64 %84, i64* %41, align 8
  store i64 %75, i64* %40, align 8
  store i64 %72, i64* %50, align 8
  %92 = icmp eq %"struct.ui::SelectionRequestor::Request"** %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = bitcast %"struct.ui::SelectionRequestor::Request"** %91 to i8*
  call void @_ZdlPv(i8* %94) #13
  %95 = load i64, i64* %40, align 8
  br label %96

96:                                               ; preds = %32, %90, %93
  %97 = phi i64* [ %37, %32 ], [ %41, %90 ], [ %41, %93 ]
  %98 = phi i64* [ %36, %32 ], [ %40, %90 ], [ %40, %93 ]
  %99 = phi i64 [ %35, %32 ], [ %75, %90 ], [ %95, %93 ]
  %100 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 3
  %101 = load i64, i64* %100, align 8
  %102 = load i64, i64* %97, align 8
  %103 = sub i64 %99, %102
  %104 = ashr exact i64 %103, 3
  %105 = add nsw i64 %104, -1
  %106 = icmp ne i64 %101, %105
  %107 = icmp eq i64 %101, %104
  %108 = or i1 %106, %107
  br i1 %108, label %136, label %109

109:                                              ; preds = %96
  %110 = inttoptr i64 %102 to %"struct.ui::SelectionRequestor::Request"**
  %111 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %110, i64 %101
  %112 = load %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %111, align 8
  %113 = icmp eq %"struct.ui::SelectionRequestor::Request"* %112, null
  br i1 %113, label %136, label %114

114:                                              ; preds = %109
  %115 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #12
  %116 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %115, i64 0, i32 0
  %117 = bitcast %"struct.x11::ConvertSelectionRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %117) #12
  %118 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %7, i64 0, i32 0
  %119 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 0
  %120 = load i32, i32* %119, align 8
  store i32 %120, i32* %118, align 4
  %121 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %7, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %112, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %7, i64 0, i32 2
  %125 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %112, i64 0, i32 1
  %126 = load i32, i32* %125, align 4
  store i32 %126, i32* %124, align 4
  %127 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %7, i64 0, i32 3
  %128 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  store i32 %129, i32* %127, align 4
  %130 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %7, i64 0, i32 4
  store i32 0, i32* %130, align 4
  %131 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto16ConvertSelectionERKNS_23ConvertSelectionRequestE(%"class.x11::XProto"* %116, %"struct.x11::ConvertSelectionRequest"* nonnull dereferenceable(20) %7) #12
  %132 = icmp eq %"class.x11::Connection::FutureImpl"* %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %114
  %134 = bitcast %"class.x11::Connection::FutureImpl"* %131 to i8*
  call void @_ZdlPv(i8* %134) #13
  br label %135

135:                                              ; preds = %133, %114
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %117) #12
  br label %136

136:                                              ; preds = %96, %135, %109
  call void @_ZN2ui18SelectionRequestor34BlockTillSelectionNotifyForRequestEPNS0_7RequestE(%"class.ui::SelectionRequestor"* %0, %"struct.ui::SelectionRequestor::Request"* nonnull %8)
  %137 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 0
  %138 = load %"struct.ui::SelectionRequestor::Request"**, %"struct.ui::SelectionRequestor::Request"*** %137, align 8
  %139 = load %"struct.ui::SelectionRequestor::Request"**, %"struct.ui::SelectionRequestor::Request"*** %26, align 8
  %140 = icmp eq %"struct.ui::SelectionRequestor::Request"** %138, %139
  %141 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %138 to i64
  br i1 %140, label %153, label %142

142:                                              ; preds = %136, %146
  %143 = phi %"struct.ui::SelectionRequestor::Request"** [ %147, %146 ], [ %138, %136 ]
  %144 = load %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %143, align 8
  %145 = icmp eq %"struct.ui::SelectionRequestor::Request"* %144, %8
  br i1 %145, label %151, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %143, i64 1
  %148 = icmp eq %"struct.ui::SelectionRequestor::Request"** %147, %139
  br i1 %148, label %149, label %142

149:                                              ; preds = %146
  %150 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %139 to i64
  br label %157

151:                                              ; preds = %142
  %152 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %143 to i64
  br label %153

153:                                              ; preds = %151, %136
  %154 = phi i64 [ %152, %151 ], [ %141, %136 ]
  %155 = phi %"struct.ui::SelectionRequestor::Request"** [ %143, %151 ], [ %138, %136 ]
  %156 = icmp eq %"struct.ui::SelectionRequestor::Request"** %155, %139
  br i1 %156, label %157, label %162

157:                                              ; preds = %153, %149
  %158 = phi i64 [ %150, %149 ], [ %154, %153 ]
  %159 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)) #12
  %160 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #12
  %161 = load i64, i64* %97, align 8
  br label %162

162:                                              ; preds = %153, %157
  %163 = phi i64 [ %141, %153 ], [ %161, %157 ]
  %164 = phi i64 [ %154, %153 ], [ %158, %157 ]
  %165 = phi %"struct.ui::SelectionRequestor::Request"** [ %155, %153 ], [ %139, %157 ]
  %166 = load i64, i64* %100, align 8
  %167 = shl i64 %166, 32
  %168 = ashr exact i64 %167, 32
  %169 = sub i64 %164, %163
  %170 = ashr exact i64 %169, 3
  %171 = icmp sgt i64 %168, %170
  br i1 %171, label %172, label %174

172:                                              ; preds = %162
  %173 = add i64 %166, -1
  store i64 %173, i64* %100, align 8
  br label %174

174:                                              ; preds = %172, %162
  %175 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %165, i64 1
  %176 = load i64, i64* %98, align 8
  %177 = ptrtoint %"struct.ui::SelectionRequestor::Request"** %175 to i64
  %178 = sub i64 %176, %177
  %179 = ashr exact i64 %178, 3
  %180 = icmp eq i64 %178, 0
  br i1 %180, label %184, label %181

181:                                              ; preds = %174
  %182 = bitcast %"struct.ui::SelectionRequestor::Request"** %165 to i8*
  %183 = bitcast %"struct.ui::SelectionRequestor::Request"** %175 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 %178, i1 false) #12
  br label %184

184:                                              ; preds = %174, %181
  %185 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %165, i64 %179
  store %"struct.ui::SelectionRequestor::Request"** %185, %"struct.ui::SelectionRequestor::Request"*** %26, align 8
  %186 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %8, i64 0, i32 6
  %187 = load i8, i8* %186, align 4, !range !3
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %283, label %189

189:                                              ; preds = %184
  %190 = icmp eq %"class.std::__1::vector.14"* %3, null
  br i1 %190, label %278, label %191

191:                                              ; preds = %189
  %192 = bitcast %"class.std::__1::vector.14"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #12
  %193 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %20, i64 0, i32 0, i32 0
  %194 = load %class.scoped_refptr*, %class.scoped_refptr** %193, align 8, !noalias !4
  %195 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %8, i64 0, i32 4, i32 0, i32 1
  %196 = load %class.scoped_refptr*, %class.scoped_refptr** %195, align 8, !noalias !4
  %197 = icmp eq %class.scoped_refptr* %194, %196
  br i1 %197, label %198, label %218

198:                                              ; preds = %191
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %192, i8 0, i64 24, i1 false) #12, !alias.scope !4
  br label %211

199:                                              ; preds = %218
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %192, i8 0, i64 24, i1 false) #12, !alias.scope !4
  %200 = icmp eq i64 %228, 0
  br i1 %200, label %211, label %201

201:                                              ; preds = %199
  %202 = bitcast %"class.std::__1::vector.14"* %10 to i64*
  %203 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %204 = bitcast i8** %203 to i64*
  %205 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %10, i64 0, i32 0, i32 1
  %206 = bitcast i8** %205 to i64*
  %207 = call i8* @_Znwm(i64 %228) #13
  %208 = ptrtoint i8* %207 to i64
  %209 = getelementptr inbounds i8, i8* %207, i64 %228
  %210 = ptrtoint i8* %209 to i64
  store i64 %208, i64* %202, align 16, !alias.scope !4
  store i64 %208, i64* %206, align 8, !alias.scope !4
  store i64 %210, i64* %204, align 16, !alias.scope !4
  br label %211

211:                                              ; preds = %201, %199, %198
  %212 = load %class.scoped_refptr*, %class.scoped_refptr** %193, align 8, !noalias !4
  %213 = load %class.scoped_refptr*, %class.scoped_refptr** %195, align 8, !noalias !4
  %214 = icmp eq %class.scoped_refptr* %212, %213
  br i1 %214, label %260, label %215

215:                                              ; preds = %211
  %216 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  %217 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  br label %231

218:                                              ; preds = %191, %218
  %219 = phi i64 [ %228, %218 ], [ 0, %191 ]
  %220 = phi %class.scoped_refptr* [ %229, %218 ], [ %194, %191 ]
  %221 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %220, i64 0, i32 0
  %222 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %221, align 8
  %223 = bitcast %"class.base::RefCountedMemory"* %222 to i64 (%"class.base::RefCountedMemory"*)***
  %224 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %223, align 8
  %225 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %224, i64 1
  %226 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %225, align 8
  %227 = call i64 %226(%"class.base::RefCountedMemory"* %222) #12
  %228 = add i64 %227, %219
  %229 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %220, i64 1
  %230 = icmp eq %class.scoped_refptr* %229, %196
  br i1 %230, label %199, label %218

231:                                              ; preds = %257, %215
  %232 = phi %class.scoped_refptr* [ %212, %215 ], [ %258, %257 ]
  %233 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %232, i64 0, i32 0
  %234 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %233, align 8
  %235 = bitcast %"class.base::RefCountedMemory"* %234 to i8* (%"class.base::RefCountedMemory"*)***
  %236 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %235, align 8
  %237 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %236, align 8
  %238 = call i8* %237(%"class.base::RefCountedMemory"* %234) #12
  %239 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %233, align 8
  %240 = bitcast %"class.base::RefCountedMemory"* %239 to i8* (%"class.base::RefCountedMemory"*)***
  %241 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %240, align 8
  %242 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %241, align 8
  %243 = call i8* %242(%"class.base::RefCountedMemory"* %239) #12
  %244 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %233, align 8
  %245 = bitcast %"class.base::RefCountedMemory"* %244 to i64 (%"class.base::RefCountedMemory"*)***
  %246 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %245, align 8
  %247 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %246, i64 1
  %248 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %247, align 8
  %249 = call i64 %248(%"class.base::RefCountedMemory"* %244) #12
  %250 = getelementptr inbounds i8, i8* %243, i64 %249
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216) #12, !noalias !4
  store %"class.std::__1::vector.14"* %10, %"class.std::__1::vector.14"** %217, align 8, !noalias !4
  %251 = icmp eq i8* %238, %250
  br i1 %251, label %257, label %252

252:                                              ; preds = %231, %252
  %253 = phi i8* [ %255, %252 ], [ %238, %231 ]
  %254 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %253) #12
  %255 = getelementptr inbounds i8, i8* %253, i64 1
  %256 = icmp eq i8* %255, %250
  br i1 %256, label %257, label %252

257:                                              ; preds = %252, %231
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216) #12, !noalias !4
  %258 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %232, i64 1
  %259 = icmp eq %class.scoped_refptr* %258, %213
  br i1 %259, label %260, label %231

260:                                              ; preds = %257, %211
  %261 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %262 = load i8*, i8** %261, align 8
  %263 = icmp eq i8* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %260
  %265 = ptrtoint i8* %262 to i64
  %266 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  %267 = bitcast i8** %266 to i64*
  store i64 %265, i64* %267, align 8
  call void @_ZdlPv(i8* nonnull %262) #13
  %268 = bitcast %"class.std::__1::vector.14"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %268, i8 0, i64 24, i1 false) #12
  br label %269

269:                                              ; preds = %264, %260
  %270 = bitcast %"class.std::__1::vector.14"* %10 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 16
  %272 = bitcast %"class.std::__1::vector.14"* %3 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %272, align 8
  %273 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %274 = bitcast i8** %273 to i64*
  %275 = load i64, i64* %274, align 16
  %276 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %277 = bitcast i8** %276 to i64*
  store i64 %275, i64* %277, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #12
  br label %278

278:                                              ; preds = %189, %269
  %279 = icmp eq i32* %4, null
  br i1 %279, label %283, label %280

280:                                              ; preds = %278
  %281 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %8, i64 0, i32 5
  %282 = load i32, i32* %281, align 8
  store i32 %282, i32* %4, align 4
  br label %283

283:                                              ; preds = %278, %184, %280
  %284 = load i8, i8* %186, align 4, !range !3
  %285 = icmp ne i8 %284, 0
  %286 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %20, i64 0, i32 0, i32 0
  %287 = load %class.scoped_refptr*, %class.scoped_refptr** %286, align 8
  %288 = icmp eq %class.scoped_refptr* %287, null
  br i1 %288, label %319, label %289

289:                                              ; preds = %283
  %290 = bitcast %class.scoped_refptr* %287 to i8*
  %291 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %8, i64 0, i32 4, i32 0, i32 1
  %292 = load %class.scoped_refptr*, %class.scoped_refptr** %291, align 8
  %293 = icmp eq %class.scoped_refptr* %292, %287
  br i1 %293, label %317, label %294

294:                                              ; preds = %289, %312
  %295 = phi %class.scoped_refptr* [ %296, %312 ], [ %292, %289 ]
  %296 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %295, i64 -1
  %297 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %296, i64 0, i32 0
  %298 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %297, align 8
  %299 = icmp eq %"class.base::RefCountedMemory"* %298, null
  br i1 %299, label %312, label %300

300:                                              ; preds = %294
  %301 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %298, i64 0, i32 1
  %302 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = atomicrmw sub i32* %302, i32 1 acq_rel
  %304 = icmp eq i32 %303, 1
  br i1 %304, label %305, label %312

305:                                              ; preds = %300
  %306 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %301, i64 -2
  %307 = bitcast %"class.base::RefCountedThreadSafe"* %306 to %"class.base::RefCountedMemory"*
  %308 = bitcast %"class.base::RefCountedThreadSafe"* %306 to void (%"class.base::RefCountedMemory"*)***
  %309 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %308, align 8
  %310 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %309, i64 3
  %311 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %310, align 8
  call void %311(%"class.base::RefCountedMemory"* nonnull %307) #12
  br label %312

312:                                              ; preds = %305, %300, %294
  %313 = icmp eq %class.scoped_refptr* %296, %287
  br i1 %313, label %314, label %294

314:                                              ; preds = %312
  %315 = bitcast %"class.std::__1::vector.0"* %20 to i8**
  %316 = load i8*, i8** %315, align 8
  br label %317

317:                                              ; preds = %314, %289
  %318 = phi i8* [ %316, %314 ], [ %290, %289 ]
  store %class.scoped_refptr* %287, %class.scoped_refptr** %291, align 8
  call void @_ZdlPv(i8* %318) #13
  br label %319

319:                                              ; preds = %283, %317
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %16) #12
  ret i1 %285
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestor33ConvertSelectionForCurrentRequestEv(%"class.ui::SelectionRequestor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.x11::ConvertSelectionRequest", align 4
  %3 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast %"struct.ui::SelectionRequestor::Request"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp eq i64 %4, %12
  br i1 %13, label %41, label %14

14:                                               ; preds = %1
  %15 = inttoptr i64 %10 to %"struct.ui::SelectionRequestor::Request"**
  %16 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %15, i64 %4
  %17 = load %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %16, align 8
  %18 = icmp eq %"struct.ui::SelectionRequestor::Request"* %17, null
  br i1 %18, label %41, label %19

19:                                               ; preds = %14
  %20 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #12
  %21 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %20, i64 0, i32 0
  %22 = bitcast %"struct.x11::ConvertSelectionRequest"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %2, i64 0, i32 0
  %24 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %23, align 4
  %26 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %2, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %17, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %2, i64 0, i32 2
  %30 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %17, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %29, align 4
  %32 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %2, i64 0, i32 3
  %33 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %32, align 4
  %35 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %2, i64 0, i32 4
  store i32 0, i32* %35, align 4
  %36 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto16ConvertSelectionERKNS_23ConvertSelectionRequestE(%"class.x11::XProto"* %21, %"struct.x11::ConvertSelectionRequest"* nonnull dereferenceable(20) %2) #12
  %37 = icmp eq %"class.x11::Connection::FutureImpl"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %19
  %39 = bitcast %"class.x11::Connection::FutureImpl"* %36 to i8*
  call void @_ZdlPv(i8* %39) #13
  br label %40

40:                                               ; preds = %19, %38
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %22) #12
  br label %41

41:                                               ; preds = %1, %14, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestor34BlockTillSelectionNotifyForRequestEPNS0_7RequestE(%"class.ui::SelectionRequestor"* nocapture, %"struct.ui::SelectionRequestor::Request"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.x11::Event", align 8
  %4 = alloca %"class.x11::Event", align 8
  %5 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #12
  %6 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %1, i64 0, i32 9
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %95

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %1, i64 0, i32 8, i32 0, i32 0
  %11 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %5, i64 0, i32 16, i32 1
  %12 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %5, i64 0, i32 16, i32 2
  %13 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %5, i64 0, i32 16, i32 0, i32 1
  %14 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %5, i64 0, i32 16, i32 0
  %15 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 1
  %17 = bitcast %"class.x11::Event"* %4 to i8*
  %18 = bitcast %"class.x11::Event"* %3 to i8*
  br label %23

19:                                               ; preds = %89, %38
  %20 = phi i64 [ %24, %38 ], [ %39, %89 ]
  %21 = load i8, i8* %6, align 8, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %95

23:                                               ; preds = %9, %19
  %24 = phi i64 [ 0, %9 ], [ %20, %19 ]
  %25 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %26 = load i64, i64* %10, align 8
  %27 = icmp sgt i64 %26, %25
  br i1 %27, label %28, label %95

28:                                               ; preds = %23
  call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %5) #12
  call void @_ZN3x1110Connection13ReadResponsesEv(%"class.x11::Connection"* %5) #12
  %29 = load i64, i64* %11, align 8
  %30 = load i64, i64* %12, align 8
  %31 = icmp ult i64 %30, %29
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = sub i64 %30, %29
  br label %38

34:                                               ; preds = %28
  %35 = load i64, i64* %13, align 8
  %36 = sub i64 %30, %29
  %37 = add i64 %36, %35
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64 [ %33, %32 ], [ %37, %34 ]
  %40 = icmp ult i64 %24, %39
  br i1 %40, label %41, label %19

41:                                               ; preds = %38, %92
  %42 = phi i64 [ %94, %92 ], [ %30, %38 ]
  %43 = phi i64 [ %93, %92 ], [ %29, %38 ]
  %44 = phi i64 [ %90, %92 ], [ %24, %38 ]
  %45 = load i64, i64* %13, align 8
  %46 = sub i64 %45, %43
  %47 = icmp ule i64 %43, %42
  %48 = icmp ult i64 %44, %46
  %49 = or i1 %47, %48
  %50 = sub i64 0, %46
  %51 = select i1 %49, i64 %43, i64 %50
  %52 = add i64 %44, %51
  %53 = call dereferenceable(32) %"class.x11::Event"* @_ZNK4base8internal12VectorBufferIN3x115EventEEixEm(%"class.base::internal::VectorBuffer"* %14, i64 %52) #12
  %54 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %53, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  switch i32 %55, label %89 [
    i32 76, label %56
    i32 73, label %68
  ]

56:                                               ; preds = %41
  %57 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %53, i64 0, i32 3
  %58 = bitcast i8** %57 to %"struct.x11::SelectionNotifyEvent"**
  %59 = load %"struct.x11::SelectionNotifyEvent"*, %"struct.x11::SelectionNotifyEvent"** %58, align 8
  %60 = icmp eq %"struct.x11::SelectionNotifyEvent"* %59, null
  br i1 %60, label %89, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.x11::SelectionNotifyEvent", %"struct.x11::SelectionNotifyEvent"* %59, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = load i32, i32* %15, align 8
  %65 = icmp eq i32 %63, %64
  br i1 %65, label %66, label %89

66:                                               ; preds = %61
  call void @_ZN2ui18SelectionRequestor17OnSelectionNotifyERKN3x1120SelectionNotifyEventE(%"class.ui::SelectionRequestor"* %0, %"struct.x11::SelectionNotifyEvent"* nonnull dereferenceable(24) %59)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #12
  call void @_ZN3x115EventC1Ev(%"class.x11::Event"* nonnull %3) #12
  %67 = call dereferenceable(32) %"class.x11::Event"* @_ZN3x115EventaSEOS0_(%"class.x11::Event"* %53, %"class.x11::Event"* nonnull dereferenceable(32) %3) #12
  call void @_ZN3x115EventD1Ev(%"class.x11::Event"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #12
  br label %89

68:                                               ; preds = %41
  %69 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %53, i64 0, i32 3
  %70 = bitcast i8** %69 to %"struct.x11::PropertyNotifyEvent"**
  %71 = load %"struct.x11::PropertyNotifyEvent"*, %"struct.x11::PropertyNotifyEvent"** %70, align 8
  %72 = icmp eq %"struct.x11::PropertyNotifyEvent"* %71, null
  br i1 %72, label %89, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %71, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = load i32, i32* %15, align 8
  %77 = icmp eq i32 %75, %76
  br i1 %77, label %78, label %89

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %71, i64 0, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = load i32, i32* %16, align 4
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %83, label %89

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %71, i64 0, i32 5
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  call void @_ZN2ui18SelectionRequestor15OnPropertyEventERKN3x1119PropertyNotifyEventE(%"class.ui::SelectionRequestor"* %0, %"struct.x11::PropertyNotifyEvent"* dereferenceable(20) undef)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #12
  call void @_ZN3x115EventC1Ev(%"class.x11::Event"* nonnull %4) #12
  %88 = call dereferenceable(32) %"class.x11::Event"* @_ZN3x115EventaSEOS0_(%"class.x11::Event"* %53, %"class.x11::Event"* nonnull dereferenceable(32) %4) #12
  call void @_ZN3x115EventD1Ev(%"class.x11::Event"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #12
  br label %89

89:                                               ; preds = %41, %73, %78, %56, %87, %83, %68, %61, %66
  %90 = add i64 %44, 1
  %91 = icmp eq i64 %90, %39
  br i1 %91, label %19, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %11, align 8
  %94 = load i64, i64* %12, align 8
  br label %41

95:                                               ; preds = %23, %19, %2
  %96 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %97 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2
  %100 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2, i32 0, i32 1
  %101 = bitcast %"struct.ui::SelectionRequestor::Request"*** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.std::__1::vector"* %99 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 %102, %104
  %106 = ashr exact i64 %105, 3
  %107 = icmp ult i64 %98, %106
  br i1 %107, label %108, label %128

108:                                              ; preds = %95, %121
  %109 = phi i64 [ %122, %121 ], [ %104, %95 ]
  %110 = phi i64 [ %123, %121 ], [ %102, %95 ]
  %111 = phi i64 [ %124, %121 ], [ %98, %95 ]
  %112 = inttoptr i64 %109 to %"struct.ui::SelectionRequestor::Request"**
  %113 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %112, i64 %111
  %114 = load %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %113, align 8
  %115 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %114, i64 0, i32 8, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp sgt i64 %116, %96
  br i1 %117, label %121, label %118

118:                                              ; preds = %108
  call void @_ZN2ui18SelectionRequestor15CompleteRequestEmb(%"class.ui::SelectionRequestor"* %0, i64 %111, i1 zeroext false) #12
  %119 = load i64, i64* %101, align 8
  %120 = load i64, i64* %103, align 8
  br label %121

121:                                              ; preds = %118, %108
  %122 = phi i64 [ %109, %108 ], [ %120, %118 ]
  %123 = phi i64 [ %110, %108 ], [ %119, %118 ]
  %124 = add nuw i64 %111, 1
  %125 = sub i64 %123, %122
  %126 = ashr exact i64 %125, 3
  %127 = icmp ult i64 %124, %126
  br i1 %127, label %108, label %128

128:                                              ; preds = %121, %95
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestor44PerformBlockingConvertSelectionWithParameterEN3x114AtomES2_RKNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE(%"class.ui::SelectionRequestor"*, i32, i32, %"class.std::__1::vector.22"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 16, i8* %10, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 16 getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN2ui12_GLOBAL__N_116kChromeSelectionE, i64 0, i64 0), i64 16, i1 false) #12
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast i64* %11 to i8*
  store i8 0, i8* %12, align 8
  %13 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  %14 = call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #12
  %15 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyINS_4AtomEEENS_6FutureIvEENS_6WindowES1_S1_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32 %7, i32 %13, i32 4, %"class.std::__1::vector.22"* dereferenceable(24) %3, %"class.x11::Connection"* %14)
  %16 = icmp eq %"class.x11::Connection::FutureImpl"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %4
  %18 = bitcast %"class.x11::Connection::FutureImpl"* %15 to i8*
  call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %4, %17
  %20 = load i8, i8* %10, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #13
  br label %25

25:                                               ; preds = %19, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  %26 = call zeroext i1 @_ZN2ui18SelectionRequestor31PerformBlockingConvertSelectionEN3x114AtomES2_PNSt3__16vectorIhNS3_9allocatorIhEEEEPS2_(%"class.ui::SelectionRequestor"* %0, i32 %1, i32 %2, %"class.std::__1::vector.14"* null, i32* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.x11::Connection::FutureImpl"* @_ZN3x1116SetArrayPropertyINS_4AtomEEENS_6FutureIvEENS_6WindowES1_S1_RKNSt3__16vectorIT_NS5_9allocatorIS7_EEEEPNS_10ConnectionE(i32, i32, i32, %"class.std::__1::vector.22"* dereferenceable(24), %"class.x11::Connection"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector.14", align 8
  %7 = alloca %"struct.x11::ChangePropertyRequest", align 8
  %8 = bitcast %"class.std::__1::vector.14"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %6, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %3, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.22"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #12
  %18 = icmp eq i64 %17, 0
  %19 = inttoptr i64 %16 to i8*
  br i1 %18, label %33, label %20

20:                                               ; preds = %5
  %21 = icmp slt i64 %17, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.14"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #14
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %17) #13
  store i8* %25, i8** %9, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %17
  store i8* %26, i8** %11, align 8
  %27 = bitcast i8** %10 to i64*
  %28 = ptrtoint i8* %25 to i64
  %29 = sub i64 %17, %28
  %30 = getelementptr i8, i8* %25, i64 %29
  %31 = ptrtoint i8* %30 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %25, i8 0, i64 %31, i1 false) #12
  %32 = ptrtoint i8* %26 to i64
  store i64 %32, i64* %27, align 8
  br label %33

33:                                               ; preds = %5, %24
  %34 = phi i8* [ null, %5 ], [ %25, %24 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 4 %19, i64 %17, i1 false)
  %35 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %4, i64 0, i32 0
  %36 = bitcast %"struct.x11::ChangePropertyRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #12
  %37 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 0
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 1
  store i32 %0, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 2
  store i32 %1, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 3
  store i32 %2, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 4
  store i8 32, i8* %41, align 8
  %42 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 5
  %43 = load i64, i64* %13, align 8
  %44 = load i64, i64* %15, align 8
  %45 = sub i64 %43, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %42, align 4
  %48 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6
  %49 = call %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.14"* nonnull %6) #12
  %50 = ptrtoint %"class.base::RefCountedBytes"* %49 to i64
  %51 = bitcast %class.scoped_refptr* %48 to i64*
  store i64 %50, i64* %51, align 8
  %52 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto14ChangePropertyERKNS_21ChangePropertyRequestE(%"class.x11::XProto"* %35, %"struct.x11::ChangePropertyRequest"* nonnull dereferenceable(32) %7) #12
  %53 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %7, i64 0, i32 6, i32 0
  %54 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %53, align 8
  %55 = icmp eq %"class.base::RefCountedMemory"* %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %33
  %57 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %54, i64 0, i32 1
  %58 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw sub i32* %58, i32 1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %68

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %57, i64 -2
  %63 = bitcast %"class.base::RefCountedThreadSafe"* %62 to %"class.base::RefCountedMemory"*
  %64 = bitcast %"class.base::RefCountedThreadSafe"* %62 to void (%"class.base::RefCountedMemory"*)***
  %65 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %65, i64 3
  %67 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %66, align 8
  call void %67(%"class.base::RefCountedMemory"* nonnull %63) #12
  br label %68

68:                                               ; preds = %61, %56, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #12
  %69 = load i8*, i8** %9, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = ptrtoint i8* %69 to i64
  %73 = bitcast i8** %10 to i64*
  store i64 %72, i64* %73, align 8
  call void @_ZdlPv(i8* nonnull %69) #13
  br label %74

74:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret %"class.x11::Connection::FutureImpl"* %52
}

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestor22RequestAndWaitForTypesEN3x114AtomERKNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE(%"class.ui::SelectionData"* noalias sret, %"class.ui::SelectionRequestor"*, i32, %"class.std::__1::vector.22"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.14", align 8
  %6 = alloca i32, align 4
  %7 = alloca %class.scoped_refptr, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %3, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %3, i64 0, i32 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %9, %11
  br i1 %12, label %59, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.std::__1::vector.14"* %5 to i8*
  %15 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %5, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %5, i64 0, i32 0, i32 1
  %17 = bitcast i32* %6 to i8*
  %18 = bitcast %class.scoped_refptr* %7 to i8*
  %19 = bitcast %class.scoped_refptr* %7 to i64*
  %20 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %21 = bitcast i8** %16 to i64*
  br label %24

22:                                               ; preds = %56
  %23 = icmp eq i32* %58, %11
  br i1 %23, label %59, label %24

24:                                               ; preds = %13, %22
  %25 = phi i32* [ %9, %13 ], [ %58, %22 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #12
  store i32 0, i32* %6, align 4
  %26 = load i32, i32* %25, align 4
  %27 = call zeroext i1 @_ZN2ui18SelectionRequestor31PerformBlockingConvertSelectionEN3x114AtomES2_PNSt3__16vectorIhNS3_9allocatorIhEEEEPS2_(%"class.ui::SelectionRequestor"* %1, i32 %2, i32 %26, %"class.std::__1::vector.14"* nonnull %5, i32* nonnull %6)
  br i1 %27, label %28, label %50

28:                                               ; preds = %24
  %29 = load i32, i32* %6, align 4
  %30 = load i32, i32* %25, align 4
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %32, label %50

32:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %33 = call %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.14"* nonnull %5) #12
  %34 = ptrtoint %"class.base::RefCountedBytes"* %33 to i64
  store i64 %34, i64* %19, align 8
  call void @_ZN2ui13SelectionDataC1EN3x114AtomERK13scoped_refptrIN4base16RefCountedMemoryEE(%"class.ui::SelectionData"* %0, i32 %29, %class.scoped_refptr* nonnull dereferenceable(8) %7) #12
  %35 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %20, align 8
  %36 = icmp eq %"class.base::RefCountedMemory"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %35, i64 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe"* %43 to %"class.base::RefCountedMemory"*
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %43 to void (%"class.base::RefCountedMemory"*)***
  %46 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %46, i64 3
  %48 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %47, align 8
  call void %48(%"class.base::RefCountedMemory"* nonnull %44) #12
  br label %49

49:                                               ; preds = %42, %37, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %50

50:                                               ; preds = %24, %28, %49
  %51 = phi i32 [ 1, %49 ], [ 0, %28 ], [ 0, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #12
  %52 = load i8*, i8** %15, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = ptrtoint i8* %52 to i64
  store i64 %55, i64* %21, align 8
  call void @_ZdlPv(i8* nonnull %52) #13
  br label %56

56:                                               ; preds = %50, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  %57 = icmp eq i32 %51, 0
  %58 = getelementptr inbounds i32, i32* %25, i64 1
  br i1 %57, label %22, label %60

59:                                               ; preds = %22, %4
  call void @_ZN2ui13SelectionDataC1Ev(%"class.ui::SelectionData"* %0) #12
  br label %60

60:                                               ; preds = %56, %59
  ret void
}

declare %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.14"*) local_unnamed_addr #1

declare void @_ZN2ui13SelectionDataC1EN3x114AtomERK13scoped_refptrIN4base16RefCountedMemoryEE(%"class.ui::SelectionData"*, i32, %class.scoped_refptr* dereferenceable(8)) unnamed_addr #1

declare void @_ZN2ui13SelectionDataC1Ev(%"class.ui::SelectionData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestor17OnSelectionNotifyERKN3x1120SelectionNotifyEventE(%"class.ui::SelectionRequestor"* nocapture, %"struct.x11::SelectionNotifyEvent"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.ui::SelectionRequestor::Request"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %6, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.x11::SelectionNotifyEvent", %"struct.x11::SelectionNotifyEvent"* %1, i64 0, i32 6
  %18 = load i32, i32* %17, align 4
  br label %42

19:                                               ; preds = %2
  %20 = inttoptr i64 %12 to %"struct.ui::SelectionRequestor::Request"**
  %21 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %20, i64 %6
  %22 = load %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %21, align 8
  %23 = getelementptr inbounds %"struct.x11::SelectionNotifyEvent", %"struct.x11::SelectionNotifyEvent"* %1, i64 0, i32 6
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq %"struct.ui::SelectionRequestor::Request"* %22, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 9
  %28 = load i8, i8* %27, align 8, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"struct.x11::SelectionNotifyEvent", %"struct.x11::SelectionNotifyEvent"* %1, i64 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.x11::SelectionNotifyEvent", %"struct.x11::SelectionNotifyEvent"* %1, i64 0, i32 5
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %48, label %42

42:                                               ; preds = %16, %36, %30, %26, %19
  %43 = phi i32 [ %18, %16 ], [ %24, %36 ], [ %24, %30 ], [ %24, %26 ], [ %24, %19 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %200, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  tail call void @_ZN3x1114DeletePropertyENS_6WindowENS_4AtomE(i32 %47, i32 %43) #12
  br label %200

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %24, %50
  br i1 %51, label %52, label %118

52:                                               ; preds = %48
  %53 = bitcast %class.scoped_refptr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #12
  %54 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %54, align 8
  %55 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 5
  %58 = call zeroext i1 @_ZN2ui21GetRawBytesOfPropertyEN3x116WindowENS0_4AtomEP13scoped_refptrIN4base16RefCountedMemoryEEPS2_(i32 %56, i32 %24, %class.scoped_refptr* nonnull %3, i32* %57) #12
  br i1 %58, label %59, label %102

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 4
  %61 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %60, i64 0, i32 0, i32 0
  %62 = load %class.scoped_refptr*, %class.scoped_refptr** %61, align 8
  %63 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 4, i32 0, i32 1
  %64 = load %class.scoped_refptr*, %class.scoped_refptr** %63, align 8
  %65 = icmp eq %class.scoped_refptr* %64, %62
  br i1 %65, label %86, label %66

66:                                               ; preds = %59, %84
  %67 = phi %class.scoped_refptr* [ %68, %84 ], [ %64, %59 ]
  %68 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %67, i64 -1
  %69 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %68, i64 0, i32 0
  %70 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %69, align 8
  %71 = icmp eq %"class.base::RefCountedMemory"* %70, null
  br i1 %71, label %84, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %70, i64 0, i32 1
  %74 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw sub i32* %74, i32 1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %84

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %73, i64 -2
  %79 = bitcast %"class.base::RefCountedThreadSafe"* %78 to %"class.base::RefCountedMemory"*
  %80 = bitcast %"class.base::RefCountedThreadSafe"* %78 to void (%"class.base::RefCountedMemory"*)***
  %81 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %81, i64 3
  %83 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %82, align 8
  call void %83(%"class.base::RefCountedMemory"* nonnull %79) #12
  br label %84

84:                                               ; preds = %77, %72, %66
  %85 = icmp eq %class.scoped_refptr* %68, %62
  br i1 %85, label %86, label %66

86:                                               ; preds = %84, %59
  store %class.scoped_refptr* %62, %class.scoped_refptr** %63, align 8
  %87 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %88 = load %class.scoped_refptr*, %class.scoped_refptr** %87, align 8
  %89 = icmp eq %class.scoped_refptr* %62, %88
  br i1 %89, label %101, label %90

90:                                               ; preds = %86
  %91 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %54, align 8
  %92 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %62, i64 0, i32 0
  store %"class.base::RefCountedMemory"* %91, %"class.base::RefCountedMemory"** %92, align 8
  %93 = icmp eq %"class.base::RefCountedMemory"* %91, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %91, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 1 monotonic
  br label %97

97:                                               ; preds = %94, %90
  %98 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %62, i64 1
  %99 = ptrtoint %class.scoped_refptr* %98 to i64
  %100 = bitcast %class.scoped_refptr** %63 to i64*
  store i64 %99, i64* %100, align 8
  br label %102

101:                                              ; preds = %86
  call void @_ZNSt3__16vectorI13scoped_refptrIN4base16RefCountedMemoryEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.0"* %60, %class.scoped_refptr* nonnull dereferenceable(8) %3) #12
  br label %102

102:                                              ; preds = %101, %97, %52
  %103 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %54, align 8
  %104 = icmp eq %"class.base::RefCountedMemory"* %103, null
  br i1 %104, label %117, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %103, i64 0, i32 1
  %107 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw sub i32* %107, i32 1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %117

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %106, i64 -2
  %112 = bitcast %"class.base::RefCountedThreadSafe"* %111 to %"class.base::RefCountedMemory"*
  %113 = bitcast %"class.base::RefCountedThreadSafe"* %111 to void (%"class.base::RefCountedMemory"*)***
  %114 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %114, i64 3
  %116 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %115, align 8
  call void %116(%"class.base::RefCountedMemory"* nonnull %112) #12
  br label %117

117:                                              ; preds = %102, %105, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #12
  br label %118

118:                                              ; preds = %117, %48
  %119 = phi i1 [ %58, %117 ], [ false, %48 ]
  %120 = icmp eq i32 %24, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  call void @_ZN3x1114DeletePropertyENS_6WindowENS_4AtomE(i32 %123, i32 %24) #12
  br label %124

124:                                              ; preds = %118, %121
  %125 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 5
  %126 = load i32, i32* %125, align 8
  %127 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #12
  %128 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2ui5kIncrE, i64 0, i64 0)) #12
  %129 = icmp ugt i64 %128, -17
  br i1 %129, label %130, label %132

130:                                              ; preds = %124
  %131 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %131) #14
  unreachable

132:                                              ; preds = %124
  %133 = icmp ult i64 %128, 23
  br i1 %133, label %143, label %134

134:                                              ; preds = %132
  %135 = add nuw i64 %128, 16
  %136 = and i64 %135, -16
  %137 = call i8* @_Znwm(i64 %136) #13
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %137, i8** %138, align 8
  %139 = or i64 %136, -9223372036854775808
  %140 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %128, i64* %141, align 8
  %142 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %148

143:                                              ; preds = %132
  %144 = trunc i64 %128 to i8
  %145 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  store i8 %144, i8* %146, align 1
  %147 = icmp eq i64 %128, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %143, %134
  %149 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %145, %143 ], [ %142, %134 ]
  %150 = phi i8* [ %127, %143 ], [ %137, %134 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %150, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2ui5kIncrE, i64 0, i64 0), i64 %128, i1 false) #12
  br label %151

151:                                              ; preds = %143, %148
  %152 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %145, %143 ], [ %149, %148 ]
  %153 = phi i8* [ %127, %143 ], [ %150, %148 ]
  %154 = getelementptr inbounds i8, i8* %153, i64 %128
  store i8 0, i8* %154, align 1
  %155 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %156 = icmp eq i32 %126, %155
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %151
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %151, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #12
  br i1 %156, label %164, label %198

164:                                              ; preds = %163
  %165 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 2
  store i8 1, i8* %165, align 8
  %166 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 4, i32 0, i32 0
  %167 = load %class.scoped_refptr*, %class.scoped_refptr** %166, align 8
  %168 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 4, i32 0, i32 1
  %169 = load %class.scoped_refptr*, %class.scoped_refptr** %168, align 8
  %170 = icmp eq %class.scoped_refptr* %169, %167
  br i1 %170, label %191, label %171

171:                                              ; preds = %164, %189
  %172 = phi %class.scoped_refptr* [ %173, %189 ], [ %169, %164 ]
  %173 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %172, i64 -1
  %174 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %173, i64 0, i32 0
  %175 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %174, align 8
  %176 = icmp eq %"class.base::RefCountedMemory"* %175, null
  br i1 %176, label %189, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %175, i64 0, i32 1
  %179 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw sub i32* %179, i32 1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %189

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %178, i64 -2
  %184 = bitcast %"class.base::RefCountedThreadSafe"* %183 to %"class.base::RefCountedMemory"*
  %185 = bitcast %"class.base::RefCountedThreadSafe"* %183 to void (%"class.base::RefCountedMemory"*)***
  %186 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %186, i64 3
  %188 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %187, align 8
  call void %188(%"class.base::RefCountedMemory"* nonnull %184) #12
  br label %189

189:                                              ; preds = %182, %177, %171
  %190 = icmp eq %class.scoped_refptr* %173, %167
  br i1 %190, label %191, label %171

191:                                              ; preds = %189, %164
  store %class.scoped_refptr* %167, %class.scoped_refptr** %168, align 8
  store i32 0, i32* %125, align 8
  %192 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %193 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %192, i64 1000000) #12
  %194 = extractvalue { i64, i1 } %193, 1
  %195 = extractvalue { i64, i1 } %193, 0
  %196 = select i1 %194, i64 9223372036854775807, i64 %195, !prof !2
  %197 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %22, i64 0, i32 8, i32 0, i32 0
  store i64 %196, i64* %197, align 8
  br label %200

198:                                              ; preds = %163
  %199 = load i64, i64* %5, align 8
  call void @_ZN2ui18SelectionRequestor15CompleteRequestEmb(%"class.ui::SelectionRequestor"* %0, i64 %199, i1 zeroext %119)
  br label %200

200:                                              ; preds = %191, %198, %45, %42
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.ui::SelectionRequestor::Request"* @_ZN2ui18SelectionRequestor17GetCurrentRequestEv(%"class.ui::SelectionRequestor"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast %"struct.ui::SelectionRequestor::Request"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp eq i64 %3, %11
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = inttoptr i64 %9 to %"struct.ui::SelectionRequestor::Request"**
  %15 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %14, i64 %3
  %16 = load %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %15, align 8
  br label %17

17:                                               ; preds = %1, %13
  %18 = phi %"struct.ui::SelectionRequestor::Request"* [ %16, %13 ], [ null, %1 ]
  ret %"struct.ui::SelectionRequestor::Request"* %18
}

declare void @_ZN3x1114DeletePropertyENS_6WindowENS_4AtomE(i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN2ui21GetRawBytesOfPropertyEN3x116WindowENS0_4AtomEP13scoped_refptrIN4base16RefCountedMemoryEEPS2_(i32, i32, %class.scoped_refptr*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestor15CompleteRequestEmb(%"class.ui::SelectionRequestor"* nocapture, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::ConvertSelectionRequest", align 4
  %5 = zext i1 %2 to i8
  %6 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast %"struct.ui::SelectionRequestor::Request"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ugt i64 %13, %1
  br i1 %14, label %15, label %69

15:                                               ; preds = %3
  %16 = inttoptr i64 %11 to %"struct.ui::SelectionRequestor::Request"**
  %17 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %16, i64 %1
  %18 = load %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %17, align 8
  %19 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %18, i64 0, i32 9
  %20 = load i8, i8* %19, align 8, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %69

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %18, i64 0, i32 6
  store i8 %5, i8* %23, align 4
  store i8 1, i8* %19, align 8
  %24 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, %1
  br i1 %26, label %27, label %69

27:                                               ; preds = %22
  %28 = load i64, i64* %8, align 8
  %29 = load i64, i64* %10, align 8
  %30 = sub i64 %28, %29
  %31 = ashr exact i64 %30, 3
  %32 = icmp eq i64 %31, %1
  br i1 %32, label %69, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %29 to %"struct.ui::SelectionRequestor::Request"**
  br label %35

35:                                               ; preds = %33, %44
  %36 = phi i64 [ %45, %44 ], [ %1, %33 ]
  %37 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %34, i64 %36
  %38 = load %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %37, align 8
  %39 = icmp eq %"struct.ui::SelectionRequestor::Request"* %38, null
  br i1 %39, label %69, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %38, i64 0, i32 9
  %42 = load i8, i8* %41, align 8, !range !3
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = add i64 %36, 1
  store i64 %45, i64* %24, align 8
  %46 = icmp eq i64 %45, %31
  br i1 %46, label %69, label %35

47:                                               ; preds = %40
  %48 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #12
  %49 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %48, i64 0, i32 0
  %50 = bitcast %"struct.x11::ConvertSelectionRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %50) #12
  %51 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %4, i64 0, i32 0
  %52 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  store i32 %53, i32* %51, align 4
  %54 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %4, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %38, i64 0, i32 0
  %56 = load i32, i32* %55, align 8
  store i32 %56, i32* %54, align 4
  %57 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %4, i64 0, i32 2
  %58 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %38, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %57, align 4
  %60 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %4, i64 0, i32 3
  %61 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %60, align 4
  %63 = getelementptr inbounds %"struct.x11::ConvertSelectionRequest", %"struct.x11::ConvertSelectionRequest"* %4, i64 0, i32 4
  store i32 0, i32* %63, align 4
  %64 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto16ConvertSelectionERKNS_23ConvertSelectionRequestE(%"class.x11::XProto"* %49, %"struct.x11::ConvertSelectionRequest"* nonnull dereferenceable(20) %4) #12
  %65 = icmp eq %"class.x11::Connection::FutureImpl"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %47
  %67 = bitcast %"class.x11::Connection::FutureImpl"* %64 to i8*
  call void @_ZdlPv(i8* %67) #13
  br label %68

68:                                               ; preds = %66, %47
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %50) #12
  br label %69

69:                                               ; preds = %35, %44, %27, %68, %15, %22, %3
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2ui18SelectionRequestor24CanDispatchPropertyEventERKN3x1119PropertyNotifyEventE(%"class.ui::SelectionRequestor"* nocapture readonly, %"struct.x11::PropertyNotifyEvent"* nocapture readonly dereferenceable(20)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %18

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %1, i64 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br label %18

18:                                               ; preds = %14, %8, %2
  %19 = phi i1 [ false, %8 ], [ false, %2 ], [ %17, %14 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestor15OnPropertyEventERKN3x1119PropertyNotifyEventE(%"class.ui::SelectionRequestor"* nocapture, %"struct.x11::PropertyNotifyEvent"* nocapture readnone dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.ui::SelectionRequestor::Request"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp eq i64 %6, %14
  br i1 %15, label %97, label %16

16:                                               ; preds = %2
  %17 = inttoptr i64 %12 to %"struct.ui::SelectionRequestor::Request"**
  %18 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %17, i64 %6
  %19 = load %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %18, align 8
  %20 = icmp eq %"struct.ui::SelectionRequestor::Request"* %19, null
  br i1 %20, label %97, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %19, i64 0, i32 2
  %23 = load i8, i8* %22, align 8, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %97, label %25

25:                                               ; preds = %21
  %26 = bitcast %class.scoped_refptr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %27, align 8
  %28 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #12
  store i32 0, i32* %4, align 4
  %29 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = call zeroext i1 @_ZN2ui21GetRawBytesOfPropertyEN3x116WindowENS0_4AtomEP13scoped_refptrIN4base16RefCountedMemoryEEPS2_(i32 %30, i32 %32, %class.scoped_refptr* nonnull %3, i32* nonnull %4) #12
  br i1 %33, label %34, label %78

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %19, i64 0, i32 5
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  %38 = load i32, i32* %4, align 4
  %39 = icmp eq i32 %36, %38
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %78

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %19, i64 0, i32 4, i32 0, i32 1
  %43 = load %class.scoped_refptr*, %class.scoped_refptr** %42, align 8
  %44 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %19, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %45 = load %class.scoped_refptr*, %class.scoped_refptr** %44, align 8
  %46 = icmp eq %class.scoped_refptr* %43, %45
  br i1 %46, label %58, label %47

47:                                               ; preds = %41
  %48 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %49 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %43, i64 0, i32 0
  store %"class.base::RefCountedMemory"* %48, %"class.base::RefCountedMemory"** %49, align 8
  %50 = icmp eq %"class.base::RefCountedMemory"* %48, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %48, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic
  br label %54

54:                                               ; preds = %51, %47
  %55 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %43, i64 1
  %56 = ptrtoint %class.scoped_refptr* %55 to i64
  %57 = bitcast %class.scoped_refptr** %42 to i64*
  store i64 %56, i64* %57, align 8
  br label %61

58:                                               ; preds = %41
  %59 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %19, i64 0, i32 4
  call void @_ZNSt3__16vectorI13scoped_refptrIN4base16RefCountedMemoryEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.0"* %59, %class.scoped_refptr* nonnull dereferenceable(8) %3) #12
  %60 = load i32, i32* %4, align 4
  br label %61

61:                                               ; preds = %54, %58
  %62 = phi i32 [ %38, %54 ], [ %60, %58 ]
  store i32 %62, i32* %35, align 8
  %63 = load i32, i32* %29, align 8
  %64 = load i32, i32* %31, align 4
  call void @_ZN3x1114DeletePropertyENS_6WindowENS_4AtomE(i32 %63, i32 %64) #12
  %65 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %66 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %65, i64 1000000) #12
  %67 = extractvalue { i64, i1 } %66, 1
  %68 = extractvalue { i64, i1 } %66, 0
  %69 = select i1 %67, i64 9223372036854775807, i64 %68, !prof !2
  %70 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %19, i64 0, i32 8, i32 0, i32 0
  store i64 %69, i64* %70, align 8
  %71 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %72 = bitcast %"class.base::RefCountedMemory"* %71 to i64 (%"class.base::RefCountedMemory"*)***
  %73 = load i64 (%"class.base::RefCountedMemory"*)**, i64 (%"class.base::RefCountedMemory"*)*** %72, align 8
  %74 = getelementptr inbounds i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %73, i64 1
  %75 = load i64 (%"class.base::RefCountedMemory"*)*, i64 (%"class.base::RefCountedMemory"*)** %74, align 8
  %76 = call i64 %75(%"class.base::RefCountedMemory"* %71) #12
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %61, %34, %25
  %79 = phi i1 [ false, %25 ], [ false, %34 ], [ true, %61 ]
  %80 = load i64, i64* %5, align 8
  call void @_ZN2ui18SelectionRequestor15CompleteRequestEmb(%"class.ui::SelectionRequestor"* %0, i64 %80, i1 zeroext %79)
  br label %81

81:                                               ; preds = %78, %61
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #12
  %82 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %27, align 8
  %83 = icmp eq %"class.base::RefCountedMemory"* %82, null
  br i1 %83, label %96, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %82, i64 0, i32 1
  %86 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw sub i32* %86, i32 1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %96

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %85, i64 -2
  %91 = bitcast %"class.base::RefCountedThreadSafe"* %90 to %"class.base::RefCountedMemory"*
  %92 = bitcast %"class.base::RefCountedThreadSafe"* %90 to void (%"class.base::RefCountedMemory"*)***
  %93 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %93, i64 3
  %95 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %94, align 8
  call void %95(%"class.base::RefCountedMemory"* nonnull %91) #12
  br label %96

96:                                               ; preds = %81, %84, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  br label %97

97:                                               ; preds = %2, %16, %21, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestor18AbortStaleRequestsEv(%"class.ui::SelectionRequestor"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  %3 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.ui::SelectionRequestor", %"class.ui::SelectionRequestor"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast %"struct.ui::SelectionRequestor::Request"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %4, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %28, %1
  ret void

15:                                               ; preds = %1, %28
  %16 = phi i64 [ %29, %28 ], [ %10, %1 ]
  %17 = phi i64 [ %30, %28 ], [ %8, %1 ]
  %18 = phi i64 [ %31, %28 ], [ %4, %1 ]
  %19 = inttoptr i64 %16 to %"struct.ui::SelectionRequestor::Request"**
  %20 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %19, i64 %18
  %21 = load %"struct.ui::SelectionRequestor::Request"*, %"struct.ui::SelectionRequestor::Request"** %20, align 8
  %22 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %21, i64 0, i32 8, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp sgt i64 %23, %2
  br i1 %24, label %28, label %25

25:                                               ; preds = %15
  tail call void @_ZN2ui18SelectionRequestor15CompleteRequestEmb(%"class.ui::SelectionRequestor"* %0, i64 %18, i1 zeroext false)
  %26 = load i64, i64* %7, align 8
  %27 = load i64, i64* %9, align 8
  br label %28

28:                                               ; preds = %15, %25
  %29 = phi i64 [ %16, %15 ], [ %27, %25 ]
  %30 = phi i64 [ %17, %15 ], [ %26, %25 ]
  %31 = add nuw i64 %18, 1
  %32 = sub i64 %30, %29
  %33 = ashr exact i64 %32, 3
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %15, label %14
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto16ConvertSelectionERKNS_23ConvertSelectionRequestE(%"class.x11::XProto"*, %"struct.x11::ConvertSelectionRequest"* dereferenceable(20)) local_unnamed_addr #1

declare void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN3x1110Connection13ReadResponsesEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN3x115EventC1Ev(%"class.x11::Event"*) unnamed_addr #1

declare dereferenceable(32) %"class.x11::Event"* @_ZN3x115EventaSEOS0_(%"class.x11::Event"*, %"class.x11::Event"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x115EventD1Ev(%"class.x11::Event"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestor7RequestC2EN3x114AtomES3_N4base9TimeTicksE(%"struct.ui::SelectionRequestor::Request"* nocapture, i32, i32, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %0, i64 0, i32 8, i32 0, i32 0
  %10 = bitcast %"class.std::__1::vector.0"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 29, i1 false)
  store i64 %3, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %0, i64 0, i32 9
  store i8 0, i8* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui18SelectionRequestor7RequestD2Ev(%"struct.ui::SelectionRequestor::Request"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %2, i64 0, i32 0, i32 0
  %4 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  %5 = icmp eq %class.scoped_refptr* %4, null
  br i1 %5, label %36, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr* %4 to i8*
  %8 = getelementptr inbounds %"struct.ui::SelectionRequestor::Request", %"struct.ui::SelectionRequestor::Request"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %class.scoped_refptr*, %class.scoped_refptr** %8, align 8
  %10 = icmp eq %class.scoped_refptr* %9, %4
  br i1 %10, label %34, label %11

11:                                               ; preds = %6, %29
  %12 = phi %class.scoped_refptr* [ %13, %29 ], [ %9, %6 ]
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 -1
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %13, i64 0, i32 0
  %15 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %14, align 8
  %16 = icmp eq %"class.base::RefCountedMemory"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %15, i64 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe"* %23 to %"class.base::RefCountedMemory"*
  %25 = bitcast %"class.base::RefCountedThreadSafe"* %23 to void (%"class.base::RefCountedMemory"*)***
  %26 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %26, i64 3
  %28 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %27, align 8
  tail call void %28(%"class.base::RefCountedMemory"* nonnull %24) #12
  br label %29

29:                                               ; preds = %22, %17, %11
  %30 = icmp eq %class.scoped_refptr* %13, %4
  br i1 %30, label %31, label %11

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector.0"* %2 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %6
  %35 = phi i8* [ %33, %31 ], [ %7, %6 ]
  store %class.scoped_refptr* %4, %class.scoped_refptr** %8, align 8
  tail call void @_ZdlPv(i8* %35) #13
  br label %36

36:                                               ; preds = %1, %34
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.14"*, %"class.std::__1::vector.14"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %4, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %6, %8
  %10 = ptrtoint i8* %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = load i8, i8* %1, align 1
  store i8 %12, i8* %6, align 1
  %13 = getelementptr inbounds i8, i8* %6, i64 1
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast i8** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %62

16:                                               ; preds = %2
  %17 = ptrtoint i8* %6 to i64
  %18 = bitcast i8** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.14"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = add i64 %21, 1
  %23 = icmp slt i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = bitcast %"class.std::__1::vector.14"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #14
  unreachable

26:                                               ; preds = %16
  %27 = bitcast i8** %7 to i64*
  %28 = sub i64 %10, %20
  %29 = icmp ult i64 %28, 4611686018427387903
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = shl i64 %28, 1
  %32 = icmp ult i64 %31, %22
  %33 = select i1 %32, i64 %22, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30, %26
  %36 = phi i64 [ %33, %30 ], [ 9223372036854775807, %26 ]
  %37 = tail call i8* @_Znwm(i64 %36) #13
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi i64 [ %36, %35 ], [ 0, %30 ]
  %40 = phi i8* [ %37, %35 ], [ null, %30 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %21
  %42 = getelementptr inbounds i8, i8* %40, i64 %39
  %43 = ptrtoint i8* %42 to i64
  %44 = load i8, i8* %1, align 1
  store i8 %44, i8* %41, align 1
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %4, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %18, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %41, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %38
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %48, i64 %51, i1 false) #12
  %57 = load i8*, i8** %47, align 8
  br label %58

58:                                               ; preds = %56, %38
  %59 = phi i8* [ %48, %38 ], [ %57, %56 ]
  store i64 %54, i64* %19, align 8
  store i64 %46, i64* %18, align 8
  store i64 %43, i64* %27, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  tail call void @_ZdlPv(i8* nonnull %59) #13
  br label %62

62:                                               ; preds = %11, %58, %61
  ret %"class.std::__1::back_insert_iterator"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto14ChangePropertyERKNS_21ChangePropertyRequestE(%"class.x11::XProto"*, %"struct.x11::ChangePropertyRequest"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13scoped_refptrIN4base16RefCountedMemoryEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_(%"class.std::__1::vector.0"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.scoped_refptr** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.0"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.0"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.scoped_refptr** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %class.scoped_refptr*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.scoped_refptr* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %9
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 %35
  %39 = ptrtoint %class.scoped_refptr* %38 to i64
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %41 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %40, align 8
  %42 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 0, i32 0
  store %"class.base::RefCountedMemory"* %41, %"class.base::RefCountedMemory"** %42, align 8
  %43 = icmp eq %"class.base::RefCountedMemory"* %41, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 1 monotonic
  br label %47

47:                                               ; preds = %34, %44
  %48 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 1
  %49 = ptrtoint %class.scoped_refptr* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 0
  %51 = load %class.scoped_refptr*, %class.scoped_refptr** %50, align 8
  %52 = ptrtoint %class.scoped_refptr* %51 to i64
  %53 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  %54 = icmp eq %class.scoped_refptr* %53, %51
  br i1 %54, label %136, label %55

55:                                               ; preds = %47
  %56 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %53, i64 -1, i32 0
  %57 = ptrtoint %"class.base::RefCountedMemory"** %56 to i64
  %58 = sub i64 %57, %52
  %59 = lshr i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 7
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %75, label %63

63:                                               ; preds = %55, %63
  %64 = phi %class.scoped_refptr* [ %67, %63 ], [ %37, %55 ]
  %65 = phi %class.scoped_refptr* [ %68, %63 ], [ %53, %55 ]
  %66 = phi i64 [ %73, %63 ], [ %61, %55 ]
  %67 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 -1
  %68 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %65, i64 -1
  %69 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %68, i64 0, i32 0
  %70 = bitcast %class.scoped_refptr* %68 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %class.scoped_refptr* %67 to i64*
  store i64 %71, i64* %72, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %69, align 8
  %73 = add i64 %66, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %63, !llvm.loop !7

75:                                               ; preds = %63, %55
  %76 = phi %class.scoped_refptr* [ undef, %55 ], [ %67, %63 ]
  %77 = phi %class.scoped_refptr* [ %37, %55 ], [ %67, %63 ]
  %78 = phi %class.scoped_refptr* [ %53, %55 ], [ %68, %63 ]
  %79 = icmp ult i64 %58, 56
  br i1 %79, label %132, label %80

80:                                               ; preds = %75, %80
  %81 = phi %class.scoped_refptr* [ %125, %80 ], [ %77, %75 ]
  %82 = phi %class.scoped_refptr* [ %126, %80 ], [ %78, %75 ]
  %83 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -1
  %84 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -1
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %84, i64 0, i32 0
  %86 = bitcast %class.scoped_refptr* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %class.scoped_refptr* %83 to i64*
  store i64 %87, i64* %88, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %85, align 8
  %89 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -2
  %90 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -2
  %91 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %90, i64 0, i32 0
  %92 = bitcast %class.scoped_refptr* %90 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %class.scoped_refptr* %89 to i64*
  store i64 %93, i64* %94, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %91, align 8
  %95 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -3
  %96 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -3
  %97 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %96, i64 0, i32 0
  %98 = bitcast %class.scoped_refptr* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %class.scoped_refptr* %95 to i64*
  store i64 %99, i64* %100, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %97, align 8
  %101 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -4
  %102 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -4
  %103 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 0, i32 0
  %104 = bitcast %class.scoped_refptr* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %class.scoped_refptr* %101 to i64*
  store i64 %105, i64* %106, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %103, align 8
  %107 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -5
  %108 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -5
  %109 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %108, i64 0, i32 0
  %110 = bitcast %class.scoped_refptr* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %class.scoped_refptr* %107 to i64*
  store i64 %111, i64* %112, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %109, align 8
  %113 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -6
  %114 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -6
  %115 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %114, i64 0, i32 0
  %116 = bitcast %class.scoped_refptr* %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %class.scoped_refptr* %113 to i64*
  store i64 %117, i64* %118, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %115, align 8
  %119 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -7
  %120 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -7
  %121 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %120, i64 0, i32 0
  %122 = bitcast %class.scoped_refptr* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %class.scoped_refptr* %119 to i64*
  store i64 %123, i64* %124, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %121, align 8
  %125 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 -8
  %126 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %82, i64 -8
  %127 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %126, i64 0, i32 0
  %128 = bitcast %class.scoped_refptr* %126 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %class.scoped_refptr* %125 to i64*
  store i64 %129, i64* %130, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %127, align 8
  %131 = icmp eq %class.scoped_refptr* %126, %51
  br i1 %131, label %132, label %80

132:                                              ; preds = %80, %75
  %133 = phi %class.scoped_refptr* [ %76, %75 ], [ %125, %80 ]
  %134 = load i64, i64* %6, align 8
  %135 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  br label %136

136:                                              ; preds = %47, %132
  %137 = phi %class.scoped_refptr* [ %135, %132 ], [ %51, %47 ]
  %138 = phi %class.scoped_refptr* [ %133, %132 ], [ %37, %47 ]
  %139 = phi i64 [ %134, %132 ], [ %52, %47 ]
  %140 = ptrtoint %class.scoped_refptr* %138 to i64
  store i64 %140, i64* %6, align 8
  store i64 %49, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %141 = inttoptr i64 %139 to %class.scoped_refptr*
  %142 = icmp eq %class.scoped_refptr* %137, %141
  br i1 %142, label %163, label %143

143:                                              ; preds = %136, %161
  %144 = phi %class.scoped_refptr* [ %145, %161 ], [ %137, %136 ]
  %145 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %144, i64 -1
  %146 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %145, i64 0, i32 0
  %147 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %146, align 8
  %148 = icmp eq %"class.base::RefCountedMemory"* %147, null
  br i1 %148, label %161, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %147, i64 0, i32 1
  %151 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = atomicrmw sub i32* %151, i32 1 acq_rel
  %153 = icmp eq i32 %152, 1
  br i1 %153, label %154, label %161

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %150, i64 -2
  %156 = bitcast %"class.base::RefCountedThreadSafe"* %155 to %"class.base::RefCountedMemory"*
  %157 = bitcast %"class.base::RefCountedThreadSafe"* %155 to void (%"class.base::RefCountedMemory"*)***
  %158 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %158, i64 3
  %160 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %159, align 8
  tail call void %160(%"class.base::RefCountedMemory"* nonnull %156) #12
  br label %161

161:                                              ; preds = %154, %149, %143
  %162 = icmp eq %class.scoped_refptr* %145, %141
  br i1 %162, label %163, label %143

163:                                              ; preds = %161, %136
  %164 = icmp eq i64 %139, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = inttoptr i64 %139 to i8*
  tail call void @_ZdlPv(i8* %166) #13
  br label %167

167:                                              ; preds = %163, %165
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.x11::Event"* @_ZNK4base8internal12VectorBufferIN3x115EventEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.x11::Event"*, %"class.x11::Event"** %23, align 8
  %25 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %24, i64 %1
  ret %"class.x11::Event"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN2ui12_GLOBAL__N_111CombineDataERKNSt3__16vectorI13scoped_refptrIN4base16RefCountedMemoryEENS1_9allocatorIS6_EEEE: argument 0"}
!6 = distinct !{!6, !"_ZN2ui12_GLOBAL__N_111CombineDataERKNSt3__16vectorI13scoped_refptrIN4base16RefCountedMemoryEENS1_9allocatorIS6_EEEE"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
