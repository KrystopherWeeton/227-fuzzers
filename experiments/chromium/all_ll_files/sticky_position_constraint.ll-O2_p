; ModuleID = '../../cc/trees/sticky_position_constraint.cc'
source_filename = "../../cc/trees/sticky_position_constraint.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }

@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8

@_ZN2cc24StickyPositionConstraintC1Ev = hidden unnamed_addr alias void (%"struct.cc::StickyPositionConstraint"*), void (%"struct.cc::StickyPositionConstraint"*)* @_ZN2cc24StickyPositionConstraintC2Ev
@_ZN2cc24StickyPositionConstraintC1ERKS0_ = hidden unnamed_addr alias void (%"struct.cc::StickyPositionConstraint"*, %"struct.cc::StickyPositionConstraint"*), void (%"struct.cc::StickyPositionConstraint"*, %"struct.cc::StickyPositionConstraint"*)* @_ZN2cc24StickyPositionConstraintC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24StickyPositionConstraintC2Ev(%"struct.cc::StickyPositionConstraint"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, -16
  store i8 %4, i8* %2, align 8
  %5 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 8, i32 0
  %7 = bitcast float* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 64, i1 false)
  %8 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 9, i32 0
  store i64 %8, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc24StickyPositionConstraintC2ERKS0_(%"struct.cc::StickyPositionConstraint"* nocapture, %"struct.cc::StickyPositionConstraint"* nocapture readonly dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 88, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc24StickyPositionConstrainteqERKS0_(%"struct.cc::StickyPositionConstraint"* nocapture readonly, %"struct.cc::StickyPositionConstraint"* nocapture readonly dereferenceable(88)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = xor i8 %6, %4
  %8 = and i8 %7, 15
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %118

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fcmp oeq float %12, %14
  br i1 %15, label %16, label %118

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 2
  %18 = load float, float* %17, align 8
  %19 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 2
  %20 = load float, float* %19, align 8
  %21 = fcmp oeq float %18, %20
  br i1 %21, label %22, label %118

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 3
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 3
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %24, %26
  br i1 %27, label %28, label %118

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 4
  %30 = load float, float* %29, align 8
  %31 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 4
  %32 = load float, float* %31, align 8
  %33 = fcmp oeq float %30, %32
  br i1 %33, label %34, label %118

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 5, i32 0, i32 0
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 5, i32 0, i32 0
  %38 = load float, float* %37, align 4
  %39 = fcmp oeq float %36, %38
  br i1 %39, label %40, label %118

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 5, i32 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 5, i32 0, i32 1
  %44 = load float, float* %43, align 4
  %45 = fcmp oeq float %42, %44
  br i1 %45, label %46, label %118

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 5, i32 1, i32 0
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 5, i32 1, i32 0
  %50 = load float, float* %49, align 4
  %51 = fcmp oeq float %48, %50
  br i1 %51, label %52, label %118

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 5, i32 1, i32 1
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 5, i32 1, i32 1
  %56 = load float, float* %55, align 4
  %57 = fcmp oeq float %54, %56
  br i1 %57, label %58, label %118

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 6, i32 0, i32 0
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 6, i32 0, i32 0
  %62 = load float, float* %61, align 4
  %63 = fcmp oeq float %60, %62
  br i1 %63, label %64, label %118

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 6, i32 0, i32 1
  %66 = load float, float* %65, align 4
  %67 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 6, i32 0, i32 1
  %68 = load float, float* %67, align 4
  %69 = fcmp oeq float %66, %68
  br i1 %69, label %70, label %118

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 6, i32 1, i32 0
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 6, i32 1, i32 0
  %74 = load float, float* %73, align 4
  %75 = fcmp oeq float %72, %74
  br i1 %75, label %76, label %118

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 6, i32 1, i32 1
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 6, i32 1, i32 1
  %80 = load float, float* %79, align 4
  %81 = fcmp oeq float %78, %80
  br i1 %81, label %82, label %118

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 7, i32 0, i32 0
  %84 = load float, float* %83, align 4
  %85 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 7, i32 0, i32 0
  %86 = load float, float* %85, align 4
  %87 = fcmp oeq float %84, %86
  br i1 %87, label %88, label %118

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 7, i32 0, i32 1
  %90 = load float, float* %89, align 4
  %91 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 7, i32 0, i32 1
  %92 = load float, float* %91, align 4
  %93 = fcmp oeq float %90, %92
  br i1 %93, label %94, label %118

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 7, i32 1, i32 0
  %96 = load float, float* %95, align 4
  %97 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 7, i32 1, i32 0
  %98 = load float, float* %97, align 4
  %99 = fcmp oeq float %96, %98
  br i1 %99, label %100, label %118

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 7, i32 1, i32 1
  %102 = load float, float* %101, align 4
  %103 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 7, i32 1, i32 1
  %104 = load float, float* %103, align 4
  %105 = fcmp oeq float %102, %104
  br i1 %105, label %106, label %118

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 8, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 8, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %108, %110
  br i1 %111, label %112, label %118

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %0, i64 0, i32 9, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"struct.cc::StickyPositionConstraint", %"struct.cc::StickyPositionConstraint"* %1, i64 0, i32 9, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %114, %116
  br label %118

118:                                              ; preds = %82, %94, %88, %58, %70, %64, %34, %46, %40, %112, %106, %100, %76, %52, %28, %22, %16, %10, %2
  %119 = phi i1 [ false, %106 ], [ false, %100 ], [ false, %76 ], [ false, %52 ], [ false, %28 ], [ false, %22 ], [ false, %16 ], [ false, %10 ], [ false, %2 ], [ %117, %112 ], [ false, %40 ], [ false, %46 ], [ false, %34 ], [ false, %64 ], [ false, %70 ], [ false, %58 ], [ false, %88 ], [ false, %94 ], [ false, %82 ]
  ret i1 %119
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc24StickyPositionConstraintneERKS0_(%"struct.cc::StickyPositionConstraint"* nocapture readonly, %"struct.cc::StickyPositionConstraint"* nocapture readonly dereferenceable(88)) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZNK2cc24StickyPositionConstrainteqERKS0_(%"struct.cc::StickyPositionConstraint"* %0, %"struct.cc::StickyPositionConstraint"* dereferenceable(88) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
