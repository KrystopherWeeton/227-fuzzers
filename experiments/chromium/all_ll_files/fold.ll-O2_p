; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/fold.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/fold.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.797", %"class.std::__1::unique_ptr.857" }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.760", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.763", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.763" = type { %"class.std::__1::__hash_table.764" }
%"class.std::__1::__hash_table.764" = type <{ %"class.std::__1::unique_ptr.765", %"class.std::__1::__compressed_pair.775", %"class.std::__1::__compressed_pair.780", %"class.std::__1::__compressed_pair.783", [4 x i8] }>
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767", %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.std::__1::__hash_node_base.768"** }
%"struct.std::__1::__hash_node_base.768" = type { %"struct.std::__1::__hash_node_base.768"* }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.std::__1::__bucket_list_deallocator.770" }
%"class.std::__1::__bucket_list_deallocator.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"struct.std::__1::__hash_node_base.768" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.787" }
%"class.std::__1::vector.787" = type { %"class.std::__1::__vector_base.788" }
%"class.std::__1::__vector_base.788" = type { i64*, i64*, %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { i64* }
%"class.std::__1::unique_ptr.797" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.800", %"class.std::__1::map.824", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.835" }
%"class.std::__1::unordered_map.800" = type { %"class.std::__1::__hash_table.801" }
%"class.std::__1::__hash_table.801" = type <{ %"class.std::__1::unique_ptr.802", %"class.std::__1::__compressed_pair.812", %"class.std::__1::__compressed_pair.817", %"class.std::__1::__compressed_pair.820", [4 x i8] }>
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804", %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.std::__1::__hash_node_base.805"** }
%"struct.std::__1::__hash_node_base.805" = type { %"struct.std::__1::__hash_node_base.805"* }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.std::__1::__bucket_list_deallocator.807" }
%"class.std::__1::__bucket_list_deallocator.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"struct.std::__1::__hash_node_base.805" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.824" = type { %"class.std::__1::__tree.825" }
%"class.std::__1::__tree.825" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.826", %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.835" = type { %"class.std::__1::__vector_base.836" }
%"class.std::__1::__vector_base.836" = type { %"class.std::__1::function.837"*, %"class.std::__1::function.837"*, %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::function.837" = type { %"class.std::__1::__function::__policy_func.840" }
%"class.std::__1::__function::__policy_func.840" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.841", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.841" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.842"*)* }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.std::__1::function.837"* }
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.860", %"class.std::__1::map.884", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.895" }
%"class.std::__1::unordered_map.860" = type { %"class.std::__1::__hash_table.861" }
%"class.std::__1::__hash_table.861" = type <{ %"class.std::__1::unique_ptr.862", %"class.std::__1::__compressed_pair.872", %"class.std::__1::__compressed_pair.877", %"class.std::__1::__compressed_pair.880", [4 x i8] }>
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864", %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.std::__1::__hash_node_base.865"** }
%"struct.std::__1::__hash_node_base.865" = type { %"struct.std::__1::__hash_node_base.865"* }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.std::__1::__bucket_list_deallocator.867" }
%"class.std::__1::__bucket_list_deallocator.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"struct.std::__1::__hash_node_base.865" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.884" = type { %"class.std::__1::__tree.885" }
%"class.std::__1::__tree.885" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.886", %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.895" = type { %"class.std::__1::__vector_base.896" }
%"class.std::__1::__vector_base.896" = type { %"class.std::__1::function.897"*, %"class.std::__1::function.897"*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::function.897" = type { %"class.std::__1::__function::__policy_func.900" }
%"class.std::__1::__function::__policy_func.900" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.901", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.901" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.842"*)* }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"class.std::__1::function.897"* }
%"class.std::__1::function.910" = type { %"class.std::__1::__function::__policy_func.914" }
%"class.std::__1::__function::__policy_func.914" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.915", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.915" = type { i32 (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::function.940" = type { %"class.std::__1::__function::__policy_func.944" }
%"class.std::__1::__function::__policy_func.944" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.945", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.945" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.918" = type { %"class.std::__1::__function::__policy_func.922" }
%"class.std::__1::__function::__policy_func.922" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.923", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.923" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__tree_node.936" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.937" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.937" = type { %"struct.std::__1::pair.933" }
%"struct.std::__1::pair.933" = type { %"struct.spvtools::opt::FoldingRules::Key", %"class.std::__1::vector.895" }
%"struct.spvtools::opt::FoldingRules::Key" = type { i32, i32 }
%"class.spvtools::opt::analysis::ScalarConstant" = type { %"class.spvtools::opt::analysis::Constant", %"class.std::__1::vector.3" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::opt::analysis::NullConstant" = type { %"class.spvtools::opt::analysis::Constant" }
%"class.spvtools::opt::analysis::IntConstant" = type { %"class.spvtools::opt::analysis::ScalarConstant" }
%"class.spvtools::opt::analysis::BoolConstant" = type <{ %"class.spvtools::opt::analysis::ScalarConstant", i8, [7 x i8] }>
%"class.spvtools::opt::analysis::VectorConstant" = type { %"class.spvtools::opt::analysis::CompositeConstant", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::CompositeConstant" = type { %"class.spvtools::opt::analysis::Constant", %"class.std::__1::vector.842" }
%"class.std::__1::__tree_node.956" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.957" }
%"struct.std::__1::__value_type.957" = type { %"struct.std::__1::pair.953" }
%"struct.std::__1::pair.953" = type { %"struct.spvtools::opt::ConstantFoldingRules::Key", %"struct.spvtools::opt::ConstantFoldingRules::Value" }
%"struct.spvtools::opt::ConstantFoldingRules::Key" = type { i32, i32 }
%"struct.spvtools::opt::ConstantFoldingRules::Value" = type { %"class.std::__1::vector.835" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.std::__1::__function::__default_alloc_func.975" = type { %class.anon.924 }
%class.anon.924 = type { %"class.std::__1::vector.842"*, i8*, %"class.spvtools::opt::analysis::ConstantManager"*, %"class.std::__1::function.910"* }

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZNK8spvtools3opt12FoldingRules22GetRulesForInstructionEPNS0_11InstructionE = comdat any

$_ZNK8spvtools3opt20ConstantFoldingRules22GetRulesForInstructionEPKNS0_11InstructionE = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder23FoldInstructionInternalEPNS5_11InstructionEE3$_0FjjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS5_11InstructionENS_8functionIFjjEEEE3$_1FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS5_11InstructionENS_8functionIFjjEEEE3$_1FvPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS5_11InstructionENS_8functionIFjjEEEE3$_1FvPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK8spvtools3opt17InstructionFolder12UnaryOperateE6SpvOp_j(%"class.spvtools::opt::InstructionFolder"* nocapture readnone, i32, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %13 [
    i32 126, label %4
    i32 200, label %8
    i32 168, label %10
    i32 113, label %14
    i32 114, label %14
  ]

4:                                                ; preds = %3
  %5 = icmp eq i32 %2, -2147483648
  %6 = sub nsw i32 0, %2
  %7 = select i1 %5, i32 -2147483648, i32 %6
  br label %14

8:                                                ; preds = %3
  %9 = xor i32 %2, -1
  br label %14

10:                                               ; preds = %3
  %11 = icmp eq i32 %2, 0
  %12 = zext i1 %11 to i32
  br label %14

13:                                               ; preds = %3
  br label %14

14:                                               ; preds = %3, %3, %4, %13, %10, %8
  %15 = phi i32 [ 0, %13 ], [ %12, %10 ], [ %9, %8 ], [ %7, %4 ], [ %2, %3 ], [ %2, %3 ]
  ret i32 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK8spvtools3opt17InstructionFolder13BinaryOperateE6SpvOp_jj(%"class.spvtools::opt::InstructionFolder"* nocapture readnone, i32, i32, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %104 [
    i32 128, label %5
    i32 130, label %7
    i32 132, label %9
    i32 134, label %11
    i32 135, label %15
    i32 138, label %19
    i32 139, label %23
    i32 137, label %29
    i32 194, label %33
    i32 195, label %37
    i32 196, label %45
    i32 197, label %49
    i32 199, label %51
    i32 198, label %53
    i32 164, label %55
    i32 165, label %60
    i32 166, label %65
    i32 167, label %69
    i32 170, label %74
    i32 171, label %77
    i32 176, label %80
    i32 177, label %83
    i32 172, label %86
    i32 173, label %89
    i32 178, label %92
    i32 179, label %95
    i32 174, label %98
    i32 175, label %101
  ]

5:                                                ; preds = %4
  %6 = add i32 %3, %2
  br label %104

7:                                                ; preds = %4
  %8 = sub i32 %2, %3
  br label %104

9:                                                ; preds = %4
  %10 = mul i32 %3, %2
  br label %104

11:                                               ; preds = %4
  %12 = icmp eq i32 %3, 0
  br i1 %12, label %104, label %13

13:                                               ; preds = %11
  %14 = udiv i32 %2, %3
  br label %104

15:                                               ; preds = %4
  %16 = icmp eq i32 %3, 0
  br i1 %16, label %104, label %17

17:                                               ; preds = %15
  %18 = sdiv i32 %2, %3
  br label %104

19:                                               ; preds = %4
  %20 = icmp eq i32 %3, 0
  br i1 %20, label %104, label %21

21:                                               ; preds = %19
  %22 = srem i32 %2, %3
  br label %104

23:                                               ; preds = %4
  %24 = icmp eq i32 %3, 0
  br i1 %24, label %104, label %25

25:                                               ; preds = %23
  %26 = srem i32 %2, %3
  %27 = add nsw i32 %26, %3
  %28 = srem i32 %27, %3
  br label %104

29:                                               ; preds = %4
  %30 = icmp eq i32 %3, 0
  br i1 %30, label %104, label %31

31:                                               ; preds = %29
  %32 = urem i32 %2, %3
  br label %104

33:                                               ; preds = %4
  %34 = icmp ugt i32 %3, 31
  %35 = lshr i32 %2, %3
  %36 = select i1 %34, i32 0, i32 %35
  ret i32 %36

37:                                               ; preds = %4
  %38 = icmp ugt i32 %3, 32
  br i1 %38, label %104, label %39

39:                                               ; preds = %37
  %40 = icmp eq i32 %3, 32
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = ashr i32 %2, 31
  br label %104

43:                                               ; preds = %39
  %44 = ashr i32 %2, %3
  br label %104

45:                                               ; preds = %4
  %46 = icmp ugt i32 %3, 31
  %47 = shl i32 %2, %3
  %48 = select i1 %46, i32 0, i32 %47
  br label %104

49:                                               ; preds = %4
  %50 = or i32 %3, %2
  br label %104

51:                                               ; preds = %4
  %52 = and i32 %3, %2
  br label %104

53:                                               ; preds = %4
  %54 = xor i32 %3, %2
  br label %104

55:                                               ; preds = %4
  %56 = icmp eq i32 %2, 0
  %57 = icmp ne i32 %3, 0
  %58 = xor i1 %56, %57
  %59 = zext i1 %58 to i32
  br label %104

60:                                               ; preds = %4
  %61 = icmp ne i32 %2, 0
  %62 = icmp ne i32 %3, 0
  %63 = xor i1 %61, %62
  %64 = zext i1 %63 to i32
  br label %104

65:                                               ; preds = %4
  %66 = or i32 %3, %2
  %67 = icmp ne i32 %66, 0
  %68 = zext i1 %67 to i32
  br label %104

69:                                               ; preds = %4
  %70 = icmp ne i32 %2, 0
  %71 = icmp ne i32 %3, 0
  %72 = and i1 %70, %71
  %73 = zext i1 %72 to i32
  br label %104

74:                                               ; preds = %4
  %75 = icmp eq i32 %2, %3
  %76 = zext i1 %75 to i32
  br label %104

77:                                               ; preds = %4
  %78 = icmp ne i32 %2, %3
  %79 = zext i1 %78 to i32
  br label %104

80:                                               ; preds = %4
  %81 = icmp ult i32 %2, %3
  %82 = zext i1 %81 to i32
  br label %104

83:                                               ; preds = %4
  %84 = icmp slt i32 %2, %3
  %85 = zext i1 %84 to i32
  br label %104

86:                                               ; preds = %4
  %87 = icmp ugt i32 %2, %3
  %88 = zext i1 %87 to i32
  br label %104

89:                                               ; preds = %4
  %90 = icmp sgt i32 %2, %3
  %91 = zext i1 %90 to i32
  br label %104

92:                                               ; preds = %4
  %93 = icmp ule i32 %2, %3
  %94 = zext i1 %93 to i32
  br label %104

95:                                               ; preds = %4
  %96 = icmp sle i32 %2, %3
  %97 = zext i1 %96 to i32
  br label %104

98:                                               ; preds = %4
  %99 = icmp uge i32 %2, %3
  %100 = zext i1 %99 to i32
  br label %104

101:                                              ; preds = %4
  %102 = icmp sge i32 %2, %3
  %103 = zext i1 %102 to i32
  br label %104

104:                                              ; preds = %45, %4, %41, %37, %29, %23, %19, %15, %11, %101, %98, %95, %92, %89, %86, %83, %80, %77, %74, %69, %65, %60, %55, %53, %51, %49, %43, %31, %25, %21, %17, %13, %9, %7, %5
  %105 = phi i32 [ %103, %101 ], [ %100, %98 ], [ %97, %95 ], [ %94, %92 ], [ %91, %89 ], [ %88, %86 ], [ %85, %83 ], [ %82, %80 ], [ %79, %77 ], [ %76, %74 ], [ %73, %69 ], [ %68, %65 ], [ %64, %60 ], [ %59, %55 ], [ %54, %53 ], [ %52, %51 ], [ %50, %49 ], [ %44, %43 ], [ %32, %31 ], [ %28, %25 ], [ %22, %21 ], [ %18, %17 ], [ %14, %13 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ 0, %11 ], [ 0, %15 ], [ 0, %19 ], [ 0, %23 ], [ 0, %29 ], [ 0, %37 ], [ %42, %41 ], [ 0, %4 ], [ %48, %45 ]
  ret i32 %105
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK8spvtools3opt17InstructionFolder14TernaryOperateE6SpvOp_jjj(%"class.spvtools::opt::InstructionFolder"* nocapture readnone, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %1, 169
  %7 = icmp eq i32 %2, 0
  %8 = select i1 %7, i32 %4, i32 %3
  %9 = select i1 %6, i32 %8, i32 0
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8spvtools3opt17InstructionFolder12OperateWordsE6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEE(%"class.spvtools::opt::InstructionFolder"* nocapture readnone, i32, %"class.std::__1::vector.3"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.3"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = inttoptr i64 %8 to i32*
  switch i64 %10, label %40 [
    i64 1, label %12
    i64 2, label %24
    i64 3, label %30
  ]

12:                                               ; preds = %3
  %13 = load i32, i32* %11, align 4
  switch i32 %1, label %23 [
    i32 126, label %14
    i32 200, label %18
    i32 168, label %20
    i32 113, label %40
    i32 114, label %40
  ]

14:                                               ; preds = %12
  %15 = icmp eq i32 %13, -2147483648
  %16 = sub nsw i32 0, %13
  %17 = select i1 %15, i32 -2147483648, i32 %16
  br label %40

18:                                               ; preds = %12
  %19 = xor i32 %13, -1
  br label %40

20:                                               ; preds = %12
  %21 = icmp eq i32 %13, 0
  %22 = zext i1 %21 to i32
  br label %40

23:                                               ; preds = %12
  br label %40

24:                                               ; preds = %3
  %25 = inttoptr i64 %6 to i32*
  %26 = load i32, i32* %11, align 4
  %27 = getelementptr inbounds i32, i32* %25, i64 -1
  %28 = load i32, i32* %27, align 4
  %29 = tail call i32 @_ZNK8spvtools3opt17InstructionFolder13BinaryOperateE6SpvOp_jj(%"class.spvtools::opt::InstructionFolder"* %0, i32 %1, i32 %26, i32 %28)
  br label %40

30:                                               ; preds = %3
  %31 = load i32, i32* %11, align 4
  %32 = getelementptr inbounds i32, i32* %11, i64 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds i32, i32* %11, i64 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %1, 169
  %37 = icmp eq i32 %31, 0
  %38 = select i1 %37, i32 %35, i32 %33
  %39 = select i1 %36, i32 %38, i32 0
  br label %40

40:                                               ; preds = %23, %20, %18, %14, %12, %12, %3, %30, %24
  %41 = phi i32 [ %39, %30 ], [ %29, %24 ], [ 0, %3 ], [ 0, %23 ], [ %22, %20 ], [ %19, %18 ], [ %17, %14 ], [ %13, %12 ], [ %13, %12 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt17InstructionFolder23FoldInstructionInternalEPNS0_11InstructionE(%"class.spvtools::opt::InstructionFolder"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::function.910", align 8
  %4 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = alloca %"class.std::__1::vector.842", align 8
  %7 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %3, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %3, i64 0, i32 0, i32 2
  store i32 (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFjjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder23FoldInstructionInternalEPNS7_11InstructionEE3$_0S2_EEEEjPKNS0_16__policy_storageEj", i32 (%"union.std::__1::__function::__policy_storage"*, i32)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder23FoldInstructionInternalEPNS5_11InstructionEE3$_0FjjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %8, align 8
  %9 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS0_11InstructionENSt3__18functionIFjjEEE(%"class.spvtools::opt::InstructionFolder"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.910"* nonnull %3)
  %10 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %10, i64 0, i32 1
  %12 = load void (i8*)*, void (i8*)** %11, align 8
  %13 = icmp eq void (i8*)* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void %12(i8* %16) #11
  br label %17

17:                                               ; preds = %2, %14
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %9, null
  br i1 %18, label %159, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  store i32 83, i32* %20, align 8
  %21 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #11
  %22 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = zext i8 %28 to i32
  %30 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %9, i32 %29) #11
  br label %31

31:                                               ; preds = %19, %26
  %32 = phi i32 [ %30, %26 ], [ 0, %19 ]
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %37 = bitcast i32** %35 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %36, %"struct.std::__1::aligned_storage<4, 4>::type"** %37, align 8
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %39 = bitcast %"class.std::__1::unique_ptr.0"* %38 to i64*
  store i64 0, i64* %39, align 8
  %40 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %36 to i32*
  store i64 1, i64* %34, align 8
  store i32 %32, i32* %40, align 8
  %41 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 0
  store i32 1, i32* %41, align 8
  %42 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %42, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 2
  %46 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 3, i64 0
  %47 = bitcast i32** %45 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %46, %"struct.std::__1::aligned_storage<4, 4>::type"** %47, align 8
  %48 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 4
  %49 = bitcast %"class.std::__1::unique_ptr.0"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %42, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #11
  %51 = call i8* @_Znwm(i64 48) #12
  %52 = bitcast i8* %51 to %"struct.spvtools::opt::Operand"*
  %53 = bitcast i8* %51 to i32*
  %54 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  store i32 %55, i32* %53, align 8
  %56 = getelementptr inbounds i8, i8* %51, i64 8
  %57 = bitcast i8* %56 to %"class.spvtools::utils::SmallVector"*
  %58 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1
  %59 = bitcast i8* %56 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds i8, i8* %51, i64 16
  %61 = bitcast i8* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %51, i64 24
  %63 = getelementptr inbounds i8, i8* %51, i64 32
  %64 = bitcast i8* %62 to i8**
  store i8* %63, i8** %64, align 8
  %65 = getelementptr inbounds i8, i8* %51, i64 40
  %66 = bitcast i8* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %57, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %58) #11
  %68 = getelementptr inbounds i8, i8* %51, i64 48
  %69 = bitcast i8* %68 to %"struct.spvtools::opt::Operand"*
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %71 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %70, i64 0, i32 0, i32 0
  %72 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %71, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %74 = load i8, i8* %73, align 4, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %77 = load i8, i8* %76, align 1, !range !2
  %78 = icmp eq i8 %77, 0
  %79 = select i1 %78, i64 1, i64 2
  %80 = xor i1 %78, true
  %81 = zext i1 %80 to i64
  %82 = select i1 %75, i64 %81, i64 %79
  %83 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 %82
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %85 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %84, align 8
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %83, %85
  br i1 %86, label %108, label %87

87:                                               ; preds = %31, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %85, %31 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %83
  br i1 %106, label %107, label %87

107:                                              ; preds = %105
  store %"struct.spvtools::opt::Operand"* %83, %"struct.spvtools::opt::Operand"** %84, align 8
  br label %108

108:                                              ; preds = %31, %107
  %109 = call %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"* %70, %"struct.spvtools::opt::Operand"* %83, %"struct.spvtools::opt::Operand"* nonnull %52, %"struct.spvtools::opt::Operand"* %69) #11
  %110 = getelementptr inbounds i8, i8* %51, i64 8
  %111 = bitcast i8* %110 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = getelementptr inbounds i8, i8* %51, i64 40
  %113 = bitcast i8* %112 to %"class.std::__1::vector.3"**
  %114 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %113, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %113, align 8
  %115 = icmp eq %"class.std::__1::vector.3"* %114, null
  br i1 %115, label %127, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %114, i64 0, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = icmp eq i32* %118, null
  br i1 %119, label %125, label %120

120:                                              ; preds = %116
  %121 = ptrtoint i32* %118 to i64
  %122 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %114, i64 0, i32 0, i32 1
  %123 = bitcast i32** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = bitcast i32* %118 to i8*
  call void @_ZdlPv(i8* %124) #12
  br label %125

125:                                              ; preds = %120, %116
  %126 = bitcast %"class.std::__1::vector.3"* %114 to i8*
  call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %125, %108
  call void @_ZdlPv(i8* nonnull %51) #12
  %128 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %128, align 8
  %129 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %4, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %130 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %129, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %129, align 8
  %131 = icmp eq %"class.std::__1::vector.3"* %130, null
  br i1 %131, label %143, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %130, i64 0, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = icmp eq i32* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %132
  %137 = ptrtoint i32* %134 to i64
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %130, i64 0, i32 0, i32 1
  %139 = bitcast i32** %138 to i64*
  store i64 %137, i64* %139, align 8
  %140 = bitcast i32* %134 to i8*
  call void @_ZdlPv(i8* %140) #12
  br label %141

141:                                              ; preds = %136, %132
  %142 = bitcast %"class.std::__1::vector.3"* %130 to i8*
  call void @_ZdlPv(i8* %142) #12
  br label %143

143:                                              ; preds = %127, %141
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %144 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %145 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %144, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %144, align 8
  %146 = icmp eq %"class.std::__1::vector.3"* %145, null
  br i1 %146, label %158, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %145, i64 0, i32 0, i32 0
  %149 = load i32*, i32** %148, align 8
  %150 = icmp eq i32* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %147
  %152 = ptrtoint i32* %149 to i64
  %153 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %145, i64 0, i32 0, i32 1
  %154 = bitcast i32** %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = bitcast i32* %149 to i8*
  call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %151, %147
  %157 = bitcast %"class.std::__1::vector.3"* %145 to i8*
  call void @_ZdlPv(i8* %157) #12
  br label %158

158:                                              ; preds = %143, %156
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #11
  br label %214

159:                                              ; preds = %17
  %160 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %0, i64 0, i32 0
  %161 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %160, align 8
  %162 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %161, i64 0, i32 11
  %163 = load i32, i32* %162, align 8
  %164 = and i32 %163, 16384
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %180

166:                                              ; preds = %159
  %167 = call i8* @_Znwm(i64 136) #12
  %168 = bitcast i8* %167 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %168, %"class.spvtools::opt::IRContext"* %161) #11
  %169 = ptrtoint i8* %167 to i64
  %170 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %161, i64 0, i32 19
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %171, align 8
  %173 = bitcast %"class.std::__1::unique_ptr.400"* %170 to i64*
  store i64 %169, i64* %173, align 8
  %174 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %172, null
  br i1 %174, label %177, label %175

175:                                              ; preds = %166
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %172) #11
  %176 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %172 to i8*
  call void @_ZdlPv(i8* %176) #12
  br label %177

177:                                              ; preds = %175, %166
  %178 = load i32, i32* %162, align 8
  %179 = or i32 %178, 16384
  store i32 %179, i32* %162, align 8
  br label %180

180:                                              ; preds = %159, %177
  %181 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %161, i64 0, i32 19, i32 0, i32 0, i32 0
  %182 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %181, align 8
  %183 = bitcast %"class.std::__1::vector.842"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #11
  %184 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %6, i64 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %6, i64 0, i32 0, i32 1
  %186 = bitcast %"class.std::__1::vector.842"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %186, i8 -86, i64 24, i1 false)
  call void @_ZNK8spvtools3opt8analysis15ConstantManager19GetOperandConstantsEPKNS0_11InstructionE(%"class.std::__1::vector.842"* nonnull sret %6, %"class.spvtools::opt::analysis::ConstantManager"* %182, %"class.spvtools::opt::Instruction"* %1) #11
  %187 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::FoldingRules"*, %"class.spvtools::opt::FoldingRules"** %187, align 8
  %189 = call dereferenceable(24) %"class.std::__1::vector.895"* @_ZNK8spvtools3opt12FoldingRules22GetRulesForInstructionEPNS0_11InstructionE(%"class.spvtools::opt::FoldingRules"* %188, %"class.spvtools::opt::Instruction"* %1)
  %190 = getelementptr inbounds %"class.std::__1::vector.895", %"class.std::__1::vector.895"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.std::__1::function.897"*, %"class.std::__1::function.897"** %190, align 8
  %192 = getelementptr inbounds %"class.std::__1::vector.895", %"class.std::__1::vector.895"* %189, i64 0, i32 0, i32 1
  %193 = load %"class.std::__1::function.897"*, %"class.std::__1::function.897"** %192, align 8
  %194 = icmp eq %"class.std::__1::function.897"* %191, %193
  br i1 %194, label %205, label %197

195:                                              ; preds = %197
  %196 = icmp eq %"class.std::__1::function.897"* %204, %193
  br i1 %196, label %205, label %197

197:                                              ; preds = %180, %195
  %198 = phi %"class.std::__1::function.897"* [ %204, %195 ], [ %191, %180 ]
  %199 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %160, align 8
  %200 = getelementptr inbounds %"class.std::__1::function.897", %"class.std::__1::function.897"* %198, i64 0, i32 0, i32 1, i32 0
  %201 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.842"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.842"*)** %200, align 8
  %202 = getelementptr inbounds %"class.std::__1::function.897", %"class.std::__1::function.897"* %198, i64 0, i32 0, i32 0
  %203 = call zeroext i1 %201(%"union.std::__1::__function::__policy_storage"* %202, %"class.spvtools::opt::IRContext"* %199, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector.842"* nonnull dereferenceable(24) %6) #11
  %204 = getelementptr inbounds %"class.std::__1::function.897", %"class.std::__1::function.897"* %198, i64 1
  br i1 %203, label %205, label %195

205:                                              ; preds = %195, %197, %180
  %206 = phi i1 [ false, %180 ], [ true, %197 ], [ false, %195 ]
  %207 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %184, align 8
  %208 = icmp eq %"class.spvtools::opt::analysis::Constant"** %207, null
  br i1 %208, label %213, label %209

209:                                              ; preds = %205
  %210 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %207 to i64
  %211 = bitcast %"class.spvtools::opt::analysis::Constant"*** %185 to i64*
  store i64 %210, i64* %211, align 8
  %212 = bitcast %"class.spvtools::opt::analysis::Constant"** %207 to i8*
  call void @_ZdlPv(i8* %212) #12
  br label %213

213:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #11
  br label %214

214:                                              ; preds = %213, %158
  %215 = phi i1 [ true, %158 ], [ %206, %213 ]
  ret i1 %215
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS0_11InstructionENSt3__18functionIFjjEEE(%"class.spvtools::opt::InstructionFolder"* nocapture readonly, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.910"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::function.940", align 8
  %5 = alloca %"class.std::__1::vector.842", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::function.918", align 8
  %8 = alloca %"class.std::__1::function.837", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::vector.3", align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 16384
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %3
  %18 = tail call i8* @_Znwm(i64 136) #12
  %19 = bitcast i8* %18 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %19, %"class.spvtools::opt::IRContext"* %12) #11
  %20 = ptrtoint i8* %18 to i64
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 19
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.400"* %21 to i64*
  store i64 %20, i64* %24, align 8
  %25 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %17
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %23) #11
  %27 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %23 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %26, %17
  %29 = load i32, i32* %13, align 8
  %30 = or i32 %29, 16384
  store i32 %30, i32* %13, align 8
  br label %31

31:                                               ; preds = %3, %28
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 19, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %32, align 8
  %34 = tail call zeroext i1 @_ZNK8spvtools3opt11Instruction22IsFoldableByFoldScalarEv(%"class.spvtools::opt::Instruction"* %1) #11
  br i1 %34, label %44, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::ConstantFoldingRules"*, %"class.spvtools::opt::ConstantFoldingRules"** %36, align 8
  %38 = tail call dereferenceable(24) %"class.std::__1::vector.835"* @_ZNK8spvtools3opt20ConstantFoldingRules22GetRulesForInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ConstantFoldingRules"* %37, %"class.spvtools::opt::Instruction"* %1) #11
  %39 = getelementptr inbounds %"class.std::__1::vector.835", %"class.std::__1::vector.835"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::function.837"*, %"class.std::__1::function.837"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.835", %"class.std::__1::vector.835"* %38, i64 0, i32 0, i32 1
  %42 = load %"class.std::__1::function.837"*, %"class.std::__1::function.837"** %41, align 8
  %43 = icmp eq %"class.std::__1::function.837"* %40, %42
  br i1 %43, label %259, label %44

44:                                               ; preds = %35, %31
  %45 = bitcast %"class.std::__1::vector.842"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %5, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  %48 = bitcast %"class.std::__1::function.918"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #11
  %49 = getelementptr inbounds %"class.std::__1::function.918", %"class.std::__1::function.918"* %7, i64 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.std::__1::function.918", %"class.std::__1::function.918"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS8_11InstructionENS_8functionIFjjEEEE3$_1S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %49, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS5_11InstructionENS_8functionIFjjEEEE3$_1FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %50, align 8
  %51 = tail call i8* @_Znwm(i64 32) #12, !noalias !3
  %52 = bitcast i8* %51 to %"class.std::__1::vector.842"**
  store %"class.std::__1::vector.842"* %5, %"class.std::__1::vector.842"** %52, align 8
  %53 = getelementptr inbounds i8, i8* %51, i64 8
  %54 = bitcast i8* %53 to i8**
  store i8* %6, i8** %54, align 8
  %55 = getelementptr inbounds i8, i8* %51, i64 16
  %56 = bitcast i8* %55 to %"class.spvtools::opt::analysis::ConstantManager"**
  store %"class.spvtools::opt::analysis::ConstantManager"* %33, %"class.spvtools::opt::analysis::ConstantManager"** %56, align 8
  %57 = getelementptr inbounds i8, i8* %51, i64 24
  %58 = bitcast i8* %57 to %"class.std::__1::function.910"**
  store %"class.std::__1::function.910"* %2, %"class.std::__1::function.910"** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::function.918", %"class.std::__1::function.918"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %51, i8** %59, align 8
  %60 = bitcast %"class.std::__1::function.940"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #11
  %61 = ptrtoint %"class.std::__1::function.918"* %7 to i64
  %62 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %62, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %63, align 8
  %64 = bitcast %"class.std::__1::function.940"* %4 to i64*
  store i64 %61, i64* %64, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %66 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %68 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %67, align 8
  %69 = icmp eq %"struct.spvtools::opt::Operand"* %66, %68
  br i1 %69, label %92, label %70

70:                                               ; preds = %44
  %71 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 0
  br label %72

72:                                               ; preds = %87, %70
  %73 = phi %"struct.spvtools::opt::Operand"* [ %66, %70 ], [ %88, %87 ]
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %75) #11
  br i1 %76, label %77, label %87

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %79 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %78, align 8
  %80 = icmp eq %"class.std::__1::vector.3"* %79, null
  %81 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %79, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 0, i32 1, i32 2
  %83 = select i1 %80, i32** %82, i32** %81
  %84 = load i32*, i32** %83, align 8
  %85 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %62, align 8
  %86 = call zeroext i1 %85(%"union.std::__1::__function::__policy_storage"* nonnull %71, i32* %84) #11
  br i1 %86, label %87, label %90

87:                                               ; preds = %77, %72
  %88 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 1
  %89 = icmp eq %"struct.spvtools::opt::Operand"* %88, %68
  br i1 %89, label %90, label %72

90:                                               ; preds = %87, %77
  %91 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %63, align 8
  br label %92

92:                                               ; preds = %90, %44
  %93 = phi %"struct.std::__1::__function::__policy"* [ %91, %90 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %44 ]
  %94 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %93, i64 0, i32 1
  %95 = load void (i8*)*, void (i8*)** %94, align 8
  %96 = icmp eq void (i8*)* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.std::__1::function.940", %"class.std::__1::function.940"* %4, i64 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void %95(i8* %99) #11
  br label %100

100:                                              ; preds = %92, %97
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #11
  %101 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %50, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %101, i64 0, i32 1
  %103 = load void (i8*)*, void (i8*)** %102, align 8
  %104 = icmp eq void (i8*)* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = load i8*, i8** %59, align 8
  call void %103(i8* %106) #11
  br label %107

107:                                              ; preds = %100, %105
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #11
  %108 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::ConstantFoldingRules"*, %"class.spvtools::opt::ConstantFoldingRules"** %108, align 8
  %110 = call dereferenceable(24) %"class.std::__1::vector.835"* @_ZNK8spvtools3opt20ConstantFoldingRules22GetRulesForInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ConstantFoldingRules"* %109, %"class.spvtools::opt::Instruction"* %1)
  %111 = getelementptr inbounds %"class.std::__1::vector.835", %"class.std::__1::vector.835"* %110, i64 0, i32 0, i32 0
  %112 = load %"class.std::__1::function.837"*, %"class.std::__1::function.837"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::vector.835", %"class.std::__1::vector.835"* %110, i64 0, i32 0, i32 1
  %114 = load %"class.std::__1::function.837"*, %"class.std::__1::function.837"** %113, align 8
  %115 = icmp eq %"class.std::__1::function.837"* %112, %114
  br i1 %115, label %182, label %116

116:                                              ; preds = %107
  %117 = bitcast %"class.std::__1::function.837"* %8 to i8*
  %118 = getelementptr inbounds %"class.std::__1::function.837", %"class.std::__1::function.837"* %8, i64 0, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.std::__1::function.837", %"class.std::__1::function.837"* %8, i64 0, i32 0, i32 1, i32 0
  %120 = getelementptr inbounds %"class.std::__1::function.837", %"class.std::__1::function.837"* %8, i64 0, i32 0, i32 2
  %121 = getelementptr inbounds %"class.std::__1::function.837", %"class.std::__1::function.837"* %8, i64 0, i32 0, i32 1
  %122 = bitcast %"struct.std::__1::__function::__policy_invoker.841"* %121 to i64*
  %123 = getelementptr inbounds %"class.std::__1::function.837", %"class.std::__1::function.837"* %8, i64 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %125 = getelementptr inbounds %"class.std::__1::function.837", %"class.std::__1::function.837"* %8, i64 0, i32 0, i32 1
  %126 = bitcast %"struct.std::__1::__function::__policy_invoker.841"* %125 to i8*
  br label %129

127:                                              ; preds = %179
  %128 = icmp eq %"class.std::__1::function.837"* %181, %114
  br i1 %128, label %182, label %129

129:                                              ; preds = %116, %127
  %130 = phi %"class.spvtools::opt::Instruction"* [ undef, %116 ], [ %172, %127 ]
  %131 = phi %"class.std::__1::function.837"* [ %112, %116 ], [ %181, %127 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #11
  %132 = bitcast %"class.std::__1::function.837"* %131 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 -86, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* align 8 %132, i64 16, i1 false) #11
  %133 = getelementptr inbounds %"class.std::__1::function.837", %"class.std::__1::function.837"* %131, i64 0, i32 0, i32 1
  %134 = bitcast %"struct.std::__1::__function::__policy_invoker.841"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  store i64 %135, i64* %122, align 8
  %136 = getelementptr inbounds %"class.std::__1::function.837", %"class.std::__1::function.837"* %131, i64 0, i32 0, i32 2
  %137 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %136, align 8
  store %"struct.std::__1::__function::__policy"* %137, %"struct.std::__1::__function::__policy"** %120, align 8
  %138 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %137, i64 0, i32 0
  %139 = load i8* (i8*)*, i8* (i8*)** %138, align 8
  %140 = icmp eq i8* (i8*)* %139, null
  %141 = inttoptr i64 %135 to %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.842"*)*
  br i1 %140, label %147, label %142

142:                                              ; preds = %129
  %143 = getelementptr inbounds %"class.std::__1::function.837", %"class.std::__1::function.837"* %131, i64 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = call i8* %139(i8* %144) #11
  store i8* %145, i8** %118, align 8
  %146 = load %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.842"*)*, %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.842"*)** %119, align 8
  br label %147

147:                                              ; preds = %129, %142
  %148 = phi %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.842"*)* [ %141, %129 ], [ %146, %142 ]
  %149 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %150 = call %"class.spvtools::opt::analysis::Constant"* %148(%"union.std::__1::__function::__policy_storage"* nonnull %123, %"class.spvtools::opt::IRContext"* %149, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector.842"* nonnull dereferenceable(24) %5) #11
  %151 = icmp eq %"class.spvtools::opt::analysis::Constant"* %150, null
  br i1 %151, label %170, label %152

152:                                              ; preds = %147
  %153 = load i8, i8* %124, align 4, !range !2
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %152
  %156 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %157

157:                                              ; preds = %152, %155
  %158 = phi i32 [ %156, %155 ], [ 0, %152 ]
  %159 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %33, %"class.spvtools::opt::analysis::Constant"* nonnull %150, i32 %158, %"class.spvtools::opt::InstructionList::iterator"* null) #11
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %159, null
  br i1 %160, label %170, label %161

161:                                              ; preds = %157
  %162 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %163 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %162, i64 0, i32 11
  %164 = load i32, i32* %163, align 8
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %170, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %162, i64 0, i32 6, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %168, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %169, %"class.spvtools::opt::Instruction"* nonnull %159) #11
  br label %170

170:                                              ; preds = %167, %161, %147, %157
  %171 = phi i32 [ 1, %157 ], [ 0, %147 ], [ 1, %161 ], [ 1, %167 ]
  %172 = phi %"class.spvtools::opt::Instruction"* [ null, %157 ], [ %130, %147 ], [ %159, %161 ], [ %159, %167 ]
  %173 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %120, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %173, i64 0, i32 1
  %175 = load void (i8*)*, void (i8*)** %174, align 8
  %176 = icmp eq void (i8*)* %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %170
  %178 = load i8*, i8** %118, align 8
  call void %175(i8* %178) #11
  br label %179

179:                                              ; preds = %170, %177
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #11
  %180 = icmp eq i32 %171, 0
  %181 = getelementptr inbounds %"class.std::__1::function.837", %"class.std::__1::function.837"* %131, i64 1
  br i1 %180, label %127, label %250

182:                                              ; preds = %127, %107
  %183 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %183) #11
  store i32 0, i32* %9, align 4
  %184 = load i8, i8* %6, align 1, !range !2
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %192

186:                                              ; preds = %182
  %187 = call zeroext i1 @_ZNK8spvtools3opt11Instruction22IsFoldableByFoldScalarEv(%"class.spvtools::opt::Instruction"* %1) #11
  br i1 %187, label %188, label %192

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %190 = load i32, i32* %189, align 8
  %191 = call i32 @_ZNK8spvtools3opt17InstructionFolder11FoldScalarsE6SpvOp_RKNSt3__16vectorIPKNS0_8analysis8ConstantENS3_9allocatorIS8_EEEE(%"class.spvtools::opt::InstructionFolder"* %0, i32 %190, %"class.std::__1::vector.842"* nonnull dereferenceable(24) %5)
  store i32 %191, i32* %9, align 4
  br label %219

192:                                              ; preds = %182, %186
  %193 = call zeroext i1 @_ZNK8spvtools3opt11Instruction22IsFoldableByFoldScalarEv(%"class.spvtools::opt::Instruction"* %1) #11
  br i1 %193, label %194, label %248

194:                                              ; preds = %192
  %195 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %196 = bitcast %"struct.spvtools::opt::Operand"** %67 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.std::__1::vector"* %195 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = sub i64 %197, %199
  %201 = sdiv exact i64 %200, 48
  %202 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %203 = load i8, i8* %202, align 4, !range !2
  %204 = icmp eq i8 %203, 0
  %205 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %206 = load i8, i8* %205, align 1, !range !2
  %207 = icmp eq i8 %206, 0
  %208 = select i1 %207, i32 1, i32 2
  %209 = xor i1 %207, true
  %210 = zext i1 %209 to i32
  %211 = select i1 %204, i32 %210, i32 %208
  %212 = trunc i64 %201 to i32
  %213 = sub i32 %212, %211
  %214 = icmp eq i32 %213, 2
  br i1 %214, label %215, label %248

215:                                              ; preds = %194
  %216 = call zeroext i1 @_ZNK8spvtools3opt17InstructionFolder29FoldBinaryIntegerOpToConstantEPNS0_11InstructionERKNSt3__18functionIFjjEEEPj(%"class.spvtools::opt::InstructionFolder"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.910"* dereferenceable(32) %2, i32* nonnull %9) #11
  br i1 %216, label %219, label %217

217:                                              ; preds = %215
  %218 = call zeroext i1 @_ZNK8spvtools3opt17InstructionFolder29FoldBinaryBooleanOpToConstantEPNS0_11InstructionERKNSt3__18functionIFjjEEEPj(%"class.spvtools::opt::InstructionFolder"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.910"* dereferenceable(32) %2, i32* nonnull %9) #11
  br i1 %218, label %219, label %248

219:                                              ; preds = %217, %215, %188
  %220 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis15ConstantManager7GetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"* %33, %"class.spvtools::opt::Instruction"* %1) #11
  %221 = bitcast %"class.std::__1::vector.3"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #11
  %222 = load i32, i32* %9, align 4
  %223 = call i8* @_Znwm(i64 4) #12
  %224 = bitcast i8* %223 to i32*
  %225 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 1
  %226 = bitcast %"class.std::__1::vector.3"* %10 to i8**
  store i8* %223, i8** %226, align 8
  %227 = getelementptr inbounds i8, i8* %223, i64 4
  %228 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %229 = bitcast i32** %228 to i8**
  store i8* %227, i8** %229, align 8
  %230 = bitcast i32** %225 to i64*
  store i32 %222, i32* %224, align 4
  %231 = ptrtoint i8* %227 to i64
  store i64 %231, i64* %230, align 8
  %232 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %33, %"class.spvtools::opt::analysis::Type"* %220, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %10) #11
  %233 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 0
  %234 = load i32*, i32** %233, align 8
  %235 = icmp eq i32* %234, null
  br i1 %235, label %239, label %236

236:                                              ; preds = %219
  %237 = ptrtoint i32* %234 to i64
  store i64 %237, i64* %230, align 8
  %238 = bitcast i32* %234 to i8*
  call void @_ZdlPv(i8* %238) #12
  br label %239

239:                                              ; preds = %219, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #11
  %240 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %241 = load i8, i8* %240, align 4, !range !2
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %245, label %243

243:                                              ; preds = %239
  %244 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %245

245:                                              ; preds = %239, %243
  %246 = phi i32 [ %244, %243 ], [ 0, %239 ]
  %247 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %33, %"class.spvtools::opt::analysis::Constant"* %232, i32 %246, %"class.spvtools::opt::InstructionList::iterator"* null) #11
  br label %248

248:                                              ; preds = %217, %194, %192, %245
  %249 = phi %"class.spvtools::opt::Instruction"* [ %247, %245 ], [ null, %217 ], [ null, %192 ], [ null, %194 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %183) #11
  br label %250

250:                                              ; preds = %179, %248
  %251 = phi %"class.spvtools::opt::Instruction"* [ %249, %248 ], [ %172, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  %252 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %46, align 8
  %253 = icmp eq %"class.spvtools::opt::analysis::Constant"** %252, null
  br i1 %253, label %258, label %254

254:                                              ; preds = %250
  %255 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %252 to i64
  %256 = bitcast %"class.spvtools::opt::analysis::Constant"*** %47 to i64*
  store i64 %255, i64* %256, align 8
  %257 = bitcast %"class.spvtools::opt::analysis::Constant"** %252 to i8*
  call void @_ZdlPv(i8* %257) #12
  br label %258

258:                                              ; preds = %250, %254
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  br label %259

259:                                              ; preds = %35, %258
  %260 = phi %"class.spvtools::opt::Instruction"* [ %251, %258 ], [ null, %35 ]
  ret %"class.spvtools::opt::Instruction"* %260
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

declare void @_ZNK8spvtools3opt8analysis15ConstantManager19GetOperandConstantsEPKNS0_11InstructionE(%"class.std::__1::vector.842"* sret, %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.895"* @_ZNK8spvtools3opt12FoldingRules22GetRulesForInstructionEPNS0_11InstructionE(%"class.spvtools::opt::FoldingRules"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 12
  br i1 %5, label %62, label %6

6:                                                ; preds = %2
  %7 = zext i32 %4 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::FoldingRules", %"class.spvtools::opt::FoldingRules"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %130, label %11

11:                                               ; preds = %6
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.spvtools::opt::FoldingRules", %"class.spvtools::opt::FoldingRules"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.865"**, %"struct.std::__1::__hash_node_base.865"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.865"* %26, null
  br i1 %27, label %130, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.865", %"struct.std::__1::__hash_node_base.865"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.865"* %30, null
  br i1 %31, label %130, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi %"struct.std::__1::__hash_node_base.865"* [ %30, %32 ], [ %57, %55 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.865", %"struct.std::__1::__hash_node_base.865"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.865"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %55, label %130

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.865", %"struct.std::__1::__hash_node_base.865"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.865"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %4
  br i1 %54, label %59, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.865", %"struct.std::__1::__hash_node_base.865"* %35, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.865"* %57, null
  br i1 %58, label %130, label %34

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.865", %"struct.std::__1::__hash_node_base.865"* %35, i64 3
  %61 = bitcast %"struct.std::__1::__hash_node_base.865"* %60 to %"class.std::__1::vector.895"*
  br label %132

62:                                               ; preds = %2
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %64 = load i8, i8* %63, align 4, !range !2
  %65 = icmp eq i8 %64, 0
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  %69 = select i1 %68, i32 1, i32 2
  %70 = xor i1 %68, true
  %71 = zext i1 %70 to i32
  %72 = select i1 %65, i32 %71, i32 %69
  %73 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %72) #11
  %74 = load i8, i8* %63, align 4, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = load i8, i8* %66, align 1, !range !2
  %77 = icmp eq i8 %76, 0
  %78 = select i1 %77, i32 1, i32 2
  %79 = xor i1 %77, true
  %80 = zext i1 %79 to i32
  %81 = select i1 %75, i32 %80, i32 %78
  %82 = add nuw nsw i32 %81, 1
  %83 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %82) #11
  %84 = getelementptr inbounds %"class.spvtools::opt::FoldingRules", %"class.spvtools::opt::FoldingRules"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %85 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node.936"**
  %86 = load %"class.std::__1::__tree_node.936"*, %"class.std::__1::__tree_node.936"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node.936"* %86, null
  br i1 %87, label %130, label %88

88:                                               ; preds = %62, %108
  %89 = phi %"class.std::__1::__tree_end_node"* [ %110, %108 ], [ %84, %62 ]
  %90 = phi %"class.std::__1::__tree_node.936"* [ %111, %108 ], [ %86, %62 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node.936", %"class.std::__1::__tree_node.936"* %90, i64 0, i32 1, i32 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp ult i32 %92, %73
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.936", %"class.std::__1::__tree_node.936"* %90, i64 0, i32 0, i32 1
  %96 = bitcast %"class.std::__1::__tree_node_base"** %95 to %"class.std::__1::__tree_node.936"**
  br label %108

97:                                               ; preds = %88
  %98 = icmp ugt i32 %92, %73
  br i1 %98, label %105, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"class.std::__1::__tree_node.936", %"class.std::__1::__tree_node.936"* %90, i64 0, i32 1, i32 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = icmp ult i32 %101, %83
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.936", %"class.std::__1::__tree_node.936"* %90, i64 0, i32 0, i32 1
  %104 = bitcast %"class.std::__1::__tree_node_base"** %103 to %"class.std::__1::__tree_node.936"**
  br i1 %102, label %108, label %105

105:                                              ; preds = %99, %97
  %106 = bitcast %"class.std::__1::__tree_node.936"* %90 to %"class.std::__1::__tree_node.936"**
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.936", %"class.std::__1::__tree_node.936"* %90, i64 0, i32 0, i32 0
  br label %108

108:                                              ; preds = %105, %99, %94
  %109 = phi %"class.std::__1::__tree_node.936"** [ %106, %105 ], [ %96, %94 ], [ %104, %99 ]
  %110 = phi %"class.std::__1::__tree_end_node"* [ %107, %105 ], [ %89, %94 ], [ %89, %99 ]
  %111 = load %"class.std::__1::__tree_node.936"*, %"class.std::__1::__tree_node.936"** %109, align 8
  %112 = icmp eq %"class.std::__1::__tree_node.936"* %111, null
  br i1 %112, label %113, label %88

113:                                              ; preds = %108
  %114 = icmp eq %"class.std::__1::__tree_end_node"* %110, %84
  br i1 %114, label %130, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 4
  %117 = bitcast %"class.std::__1::__tree_end_node"* %116 to %"struct.std::__1::__value_type.937"*
  %118 = bitcast %"class.std::__1::__tree_end_node"* %116 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = icmp ult i32 %73, %119
  br i1 %120, label %130, label %121

121:                                              ; preds = %115
  %122 = icmp ugt i32 %73, %119
  br i1 %122, label %127, label %123

123:                                              ; preds = %121
  %124 = getelementptr inbounds %"struct.std::__1::__value_type.937", %"struct.std::__1::__value_type.937"* %117, i64 0, i32 0, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = icmp ult i32 %83, %125
  br i1 %126, label %130, label %127

127:                                              ; preds = %121, %123
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 5
  %129 = bitcast %"class.std::__1::__tree_end_node"* %128 to %"class.std::__1::vector.895"*
  br label %132

130:                                              ; preds = %47, %55, %123, %115, %113, %62, %21, %6, %28
  %131 = getelementptr inbounds %"class.spvtools::opt::FoldingRules", %"class.spvtools::opt::FoldingRules"* %0, i64 0, i32 4
  br label %132

132:                                              ; preds = %127, %59, %130
  %133 = phi %"class.std::__1::vector.895"* [ %131, %130 ], [ %61, %59 ], [ %129, %127 ]
  ret %"class.std::__1::vector.895"* %133
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8spvtools3opt17InstructionFolder11FoldScalarsE6SpvOp_RKNSt3__16vectorIPKNS0_8analysis8ConstantENS3_9allocatorIS8_EEEE(%"class.spvtools::opt::InstructionFolder"* nocapture readnone, i32, %"class.std::__1::vector.842"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #11
  %8 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %2, i64 0, i32 0, i32 1
  %11 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %10, align 8
  %12 = icmp eq %"class.spvtools::opt::analysis::Constant"** %9, %11
  %13 = bitcast i32** %6 to i64*
  br i1 %12, label %20, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %16 = bitcast i32** %7 to i64*
  br label %63

17:                                               ; preds = %197
  %18 = load i64, i64* %15, align 8
  %19 = inttoptr i64 %18 to i32*
  br label %20

20:                                               ; preds = %3, %17
  %21 = phi i32* [ %19, %17 ], [ null, %3 ]
  %22 = phi i64 [ %18, %17 ], [ 0, %3 ]
  %23 = phi i64 [ %199, %17 ], [ 0, %3 ]
  %24 = sub i64 %23, %22
  %25 = ashr exact i64 %24, 2
  %26 = inttoptr i64 %22 to i32*
  switch i64 %25, label %55 [
    i64 1, label %27
    i64 2, label %39
    i64 3, label %45
  ]

27:                                               ; preds = %20
  %28 = load i32, i32* %26, align 4
  switch i32 %1, label %38 [
    i32 126, label %29
    i32 200, label %33
    i32 168, label %35
    i32 113, label %55
    i32 114, label %55
  ]

29:                                               ; preds = %27
  %30 = icmp eq i32 %28, -2147483648
  %31 = sub nsw i32 0, %28
  %32 = select i1 %30, i32 -2147483648, i32 %31
  br label %55

33:                                               ; preds = %27
  %34 = xor i32 %28, -1
  br label %55

35:                                               ; preds = %27
  %36 = icmp eq i32 %28, 0
  %37 = zext i1 %36 to i32
  br label %55

38:                                               ; preds = %27
  br label %55

39:                                               ; preds = %20
  %40 = inttoptr i64 %23 to i32*
  %41 = load i32, i32* %26, align 4
  %42 = getelementptr inbounds i32, i32* %40, i64 -1
  %43 = load i32, i32* %42, align 4
  %44 = tail call i32 @_ZNK8spvtools3opt17InstructionFolder13BinaryOperateE6SpvOp_jj(%"class.spvtools::opt::InstructionFolder"* %0, i32 %1, i32 %41, i32 %43) #11
  br label %55

45:                                               ; preds = %20
  %46 = load i32, i32* %26, align 4
  %47 = getelementptr inbounds i32, i32* %26, i64 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds i32, i32* %26, i64 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %1, 169
  %52 = icmp eq i32 %46, 0
  %53 = select i1 %52, i32 %50, i32 %48
  %54 = select i1 %51, i32 %53, i32 0
  br label %55

55:                                               ; preds = %27, %27, %29, %33, %35, %38, %39, %45, %20
  %56 = phi i32* [ %26, %20 ], [ %21, %45 ], [ %21, %39 ], [ %21, %38 ], [ %21, %35 ], [ %21, %33 ], [ %21, %29 ], [ %21, %27 ], [ %21, %27 ]
  %57 = phi i32 [ 0, %20 ], [ %54, %45 ], [ %44, %39 ], [ 0, %38 ], [ %37, %35 ], [ %34, %33 ], [ %32, %29 ], [ %28, %27 ], [ %28, %27 ]
  %58 = icmp eq i32* %56, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = ptrtoint i32* %56 to i64
  store i64 %60, i64* %13, align 8
  %61 = bitcast i32* %56 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %55, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i32 %57

63:                                               ; preds = %14, %197
  %64 = phi i32* [ null, %14 ], [ %198, %197 ]
  %65 = phi i64 [ 0, %14 ], [ %199, %197 ]
  %66 = phi i32* [ null, %14 ], [ %200, %197 ]
  %67 = phi %"class.spvtools::opt::analysis::Constant"** [ %9, %14 ], [ %201, %197 ]
  %68 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %67, align 8
  %69 = bitcast %"class.spvtools::opt::analysis::Constant"* %68 to %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %70 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %69, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %70, i64 13
  %72 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %71, align 8
  %73 = tail call %"class.spvtools::opt::analysis::ScalarConstant"* %72(%"class.spvtools::opt::analysis::Constant"* %68) #11
  %74 = icmp eq %"class.spvtools::opt::analysis::ScalarConstant"* %73, null
  br i1 %74, label %135, label %75

75:                                               ; preds = %63
  %76 = bitcast %"class.spvtools::opt::analysis::ScalarConstant"* %73 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %77 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %77, i64 24
  %79 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %78, align 8
  %80 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %79(%"class.spvtools::opt::analysis::ScalarConstant"* nonnull %73) #11
  %81 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %80, i64 0, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = load i32*, i32** %7, align 8
  %84 = icmp eq i32* %66, %83
  br i1 %84, label %89, label %85

85:                                               ; preds = %75
  %86 = load i32, i32* %82, align 4
  store i32 %86, i32* %66, align 4
  %87 = getelementptr inbounds i32, i32* %66, i64 1
  %88 = ptrtoint i32* %87 to i64
  store i64 %88, i64* %13, align 8
  br label %197

89:                                               ; preds = %75
  %90 = ptrtoint i32* %83 to i64
  %91 = load i64, i64* %15, align 8
  %92 = sub i64 %90, %91
  %93 = ashr exact i64 %92, 2
  %94 = add nsw i64 %93, 1
  %95 = icmp ugt i64 %94, 4611686018427387903
  br i1 %95, label %96, label %98

96:                                               ; preds = %89
  %97 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %97) #13
  unreachable

98:                                               ; preds = %89
  %99 = icmp ult i64 %93, 2305843009213693951
  br i1 %99, label %100, label %108

100:                                              ; preds = %98
  %101 = ashr exact i64 %92, 1
  %102 = icmp ult i64 %101, %94
  %103 = select i1 %102, i64 %94, i64 %101
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %113, label %105

105:                                              ; preds = %100
  %106 = icmp ugt i64 %103, 4611686018427387903
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  tail call void @abort() #13
  unreachable

108:                                              ; preds = %105, %98
  %109 = phi i64 [ %103, %105 ], [ 4611686018427387903, %98 ]
  %110 = shl i64 %109, 2
  %111 = tail call i8* @_Znwm(i64 %110) #12
  %112 = bitcast i8* %111 to i32*
  br label %113

113:                                              ; preds = %108, %100
  %114 = phi i64 [ %109, %108 ], [ 0, %100 ]
  %115 = phi i32* [ %112, %108 ], [ null, %100 ]
  %116 = getelementptr inbounds i32, i32* %115, i64 %93
  %117 = getelementptr inbounds i32, i32* %115, i64 %114
  %118 = ptrtoint i32* %117 to i64
  %119 = load i32, i32* %82, align 4
  store i32 %119, i32* %116, align 4
  %120 = getelementptr inbounds i32, i32* %116, i64 1
  %121 = ptrtoint i32* %120 to i64
  %122 = sub i64 %65, %91
  %123 = ashr exact i64 %122, 2
  %124 = sub nsw i64 0, %123
  %125 = getelementptr inbounds i32, i32* %116, i64 %124
  %126 = ptrtoint i32* %125 to i64
  %127 = icmp sgt i64 %122, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %113
  %129 = bitcast i32* %125 to i8*
  %130 = inttoptr i64 %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %129, i8* align 4 %130, i64 %122, i1 false) #11
  br label %131

131:                                              ; preds = %128, %113
  store i64 %126, i64* %15, align 8
  store i64 %121, i64* %13, align 8
  store i64 %118, i64* %16, align 8
  %132 = icmp eq i64 %91, 0
  br i1 %132, label %197, label %133

133:                                              ; preds = %131
  %134 = inttoptr i64 %91 to i8*
  tail call void @_ZdlPv(i8* %134) #12
  br label %197

135:                                              ; preds = %63
  %136 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %67, align 8
  %137 = bitcast %"class.spvtools::opt::analysis::Constant"* %136 to %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %138 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %137, align 8
  %139 = getelementptr inbounds %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %138, i64 22
  %140 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %139, align 8
  %141 = tail call %"class.spvtools::opt::analysis::NullConstant"* %140(%"class.spvtools::opt::analysis::Constant"* %136) #11
  %142 = icmp eq %"class.spvtools::opt::analysis::NullConstant"* %141, null
  br i1 %142, label %197, label %143

143:                                              ; preds = %135
  %144 = load i32*, i32** %7, align 8
  %145 = icmp ult i32* %64, %144
  %146 = ptrtoint i32* %144 to i64
  br i1 %145, label %147, label %150

147:                                              ; preds = %143
  store i32 0, i32* %64, align 4
  %148 = getelementptr inbounds i32, i32* %64, i64 1
  %149 = ptrtoint i32* %148 to i64
  store i64 %149, i64* %13, align 8
  br label %197

150:                                              ; preds = %143
  %151 = ptrtoint i32* %64 to i64
  %152 = load i64, i64* %15, align 8
  %153 = sub i64 %151, %152
  %154 = ashr exact i64 %153, 2
  %155 = add nsw i64 %154, 1
  %156 = icmp ugt i64 %155, 4611686018427387903
  br i1 %156, label %157, label %159

157:                                              ; preds = %150
  %158 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %158) #13
  unreachable

159:                                              ; preds = %150
  %160 = sub i64 %146, %152
  %161 = ashr exact i64 %160, 2
  %162 = icmp ult i64 %161, 2305843009213693951
  br i1 %162, label %163, label %171

163:                                              ; preds = %159
  %164 = ashr exact i64 %160, 1
  %165 = icmp ult i64 %164, %155
  %166 = select i1 %165, i64 %155, i64 %164
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %176, label %168

168:                                              ; preds = %163
  %169 = icmp ugt i64 %166, 4611686018427387903
  br i1 %169, label %170, label %171

170:                                              ; preds = %168
  tail call void @abort() #13
  unreachable

171:                                              ; preds = %168, %159
  %172 = phi i64 [ %166, %168 ], [ 4611686018427387903, %159 ]
  %173 = shl i64 %172, 2
  %174 = tail call i8* @_Znwm(i64 %173) #12
  %175 = bitcast i8* %174 to i32*
  br label %176

176:                                              ; preds = %171, %163
  %177 = phi i64 [ %172, %171 ], [ 0, %163 ]
  %178 = phi i32* [ %175, %171 ], [ null, %163 ]
  %179 = getelementptr inbounds i32, i32* %178, i64 %154
  %180 = getelementptr inbounds i32, i32* %178, i64 %177
  %181 = ptrtoint i32* %180 to i64
  store i32 0, i32* %179, align 4
  %182 = getelementptr inbounds i32, i32* %179, i64 1
  %183 = ptrtoint i32* %182 to i64
  %184 = sub i64 %65, %152
  %185 = ashr exact i64 %184, 2
  %186 = sub nsw i64 0, %185
  %187 = getelementptr inbounds i32, i32* %179, i64 %186
  %188 = ptrtoint i32* %187 to i64
  %189 = icmp sgt i64 %184, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %176
  %191 = bitcast i32* %187 to i8*
  %192 = inttoptr i64 %152 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %191, i8* align 4 %192, i64 %184, i1 false) #11
  br label %193

193:                                              ; preds = %190, %176
  store i64 %188, i64* %15, align 8
  store i64 %183, i64* %13, align 8
  store i64 %181, i64* %16, align 8
  %194 = icmp eq i64 %152, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %193
  %196 = inttoptr i64 %152 to i8*
  tail call void @_ZdlPv(i8* %196) #12
  br label %197

197:                                              ; preds = %195, %193, %147, %133, %131, %85, %135
  %198 = phi i32* [ %182, %195 ], [ %182, %193 ], [ %148, %147 ], [ %120, %133 ], [ %120, %131 ], [ %87, %85 ], [ %64, %135 ]
  %199 = phi i64 [ %183, %195 ], [ %183, %193 ], [ %149, %147 ], [ %121, %133 ], [ %121, %131 ], [ %88, %85 ], [ %65, %135 ]
  %200 = phi i32* [ %182, %195 ], [ %182, %193 ], [ %148, %147 ], [ %120, %133 ], [ %120, %131 ], [ %87, %85 ], [ %66, %135 ]
  %201 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %67, i64 1
  %202 = icmp eq %"class.spvtools::opt::analysis::Constant"** %201, %11
  br i1 %202, label %17, label %63
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt17InstructionFolder29FoldBinaryIntegerOpToConstantEPNS0_11InstructionERKNSt3__18functionIFjjEEEPj(%"class.spvtools::opt::InstructionFolder"* nocapture readonly, %"class.spvtools::opt::Instruction"* nocapture readonly, %"class.std::__1::function.910"* dereferenceable(32), i32*) local_unnamed_addr #3 align 2 {
  %5 = alloca [2 x %"class.spvtools::opt::analysis::IntConstant"*], align 16
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %0, i64 0, i32 0
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 16384
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %28

14:                                               ; preds = %4
  %15 = tail call i8* @_Znwm(i64 136) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %16, %"class.spvtools::opt::IRContext"* %9) #11
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 19
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.400"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %14
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %20) #11
  %24 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %14
  %26 = load i32, i32* %10, align 8
  %27 = or i32 %26, 16384
  store i32 %27, i32* %10, align 8
  br label %28

28:                                               ; preds = %4, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 19, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %29, align 8
  %31 = bitcast [2 x %"class.spvtools::opt::analysis::IntConstant"*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = getelementptr inbounds [2 x %"class.spvtools::opt::analysis::IntConstant"*], [2 x %"class.spvtools::opt::analysis::IntConstant"*]* %5, i64 0, i64 0
  %33 = getelementptr inbounds [2 x %"class.spvtools::opt::analysis::IntConstant"*], [2 x %"class.spvtools::opt::analysis::IntConstant"*]* %5, i64 0, i64 1
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %2, i64 0, i32 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %2, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %30, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %30, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast [2 x %"class.spvtools::opt::analysis::IntConstant"*]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %41, i8 -86, i64 16, i1 false)
  br label %42

42:                                               ; preds = %130, %28
  %43 = phi i64 [ 0, %28 ], [ %133, %130 ]
  %44 = load i8, i8* %34, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  %46 = load i8, i8* %35, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %47, i64 1, i64 2
  %49 = xor i1 %47, true
  %50 = zext i1 %49 to i64
  %51 = select i1 %45, i64 %50, i64 %48
  %52 = add nuw i64 %51, %43
  %53 = and i64 %52, 4294967295
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %36, align 8
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %54, i64 %53, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %443

58:                                               ; preds = %42
  %59 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %54, i64 %53, i32 1, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %59, align 8
  %61 = icmp eq %"class.std::__1::vector.3"* %60, null
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %60, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %54, i64 %53, i32 1, i32 2
  %64 = select i1 %61, i32** %63, i32** %62
  %65 = load i32*, i32** %64, align 8
  %66 = load i32, i32* %65, align 4
  %67 = load i32 (%"union.std::__1::__function::__policy_storage"*, i32)*, i32 (%"union.std::__1::__function::__policy_storage"*, i32)** %37, align 8
  %68 = tail call i32 %67(%"union.std::__1::__function::__policy_storage"* %38, i32 %66) #11
  %69 = zext i32 %68 to i64
  %70 = load i64, i64* %39, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %130, label %72

72:                                               ; preds = %58
  %73 = tail call i64 @llvm.ctpop.i64(i64 %70) #11, !range !8
  %74 = icmp ugt i64 %73, 1
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = add i64 %70, 4294967295
  %77 = and i64 %76, %69
  br label %82

78:                                               ; preds = %72
  %79 = icmp ugt i64 %70, %69
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %69, %70
  br label %82

82:                                               ; preds = %80, %78, %75
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %69, %78 ]
  %84 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %40, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %84, i64 %83
  %86 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.408"* %86, null
  br i1 %87, label %130, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %86, i64 0, i32 0
  %90 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.408"* %90, null
  br i1 %91, label %130, label %92

92:                                               ; preds = %88
  %93 = add i64 %70, -1
  br label %94

94:                                               ; preds = %115, %92
  %95 = phi %"struct.std::__1::__hash_node_base.408"* [ %90, %92 ], [ %117, %115 ]
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %95, i64 1
  %97 = bitcast %"struct.std::__1::__hash_node_base.408"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, %69
  br i1 %99, label %110, label %100

100:                                              ; preds = %94
  br i1 %74, label %103, label %101

101:                                              ; preds = %100
  %102 = and i64 %98, %93
  br label %107

103:                                              ; preds = %100
  %104 = icmp ult i64 %98, %70
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = urem i64 %98, %70
  br label %107

107:                                              ; preds = %105, %103, %101
  %108 = phi i64 [ %102, %101 ], [ %106, %105 ], [ %98, %103 ]
  %109 = icmp eq i64 %108, %83
  br i1 %109, label %115, label %130

110:                                              ; preds = %94
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %95, i64 2
  %112 = bitcast %"struct.std::__1::__hash_node_base.408"* %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, %68
  br i1 %114, label %119, label %115

115:                                              ; preds = %110, %107
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %95, i64 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base.408"* %117, null
  br i1 %118, label %130, label %94

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %95, i64 3
  %121 = bitcast %"struct.std::__1::__hash_node_base.408"* %120 to %"class.spvtools::opt::analysis::Constant"**
  %122 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %121, align 8
  %123 = icmp eq %"class.spvtools::opt::analysis::Constant"* %122, null
  br i1 %123, label %130, label %124

124:                                              ; preds = %119
  %125 = bitcast %"class.spvtools::opt::analysis::Constant"* %122 to %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %126 = load %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %126, i64 14
  %128 = load %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %127, align 8
  %129 = tail call %"class.spvtools::opt::analysis::IntConstant"* %128(%"class.spvtools::opt::analysis::Constant"* nonnull %122) #11
  br label %130

130:                                              ; preds = %115, %107, %88, %58, %82, %124, %119
  %131 = phi %"class.spvtools::opt::analysis::IntConstant"* [ %129, %124 ], [ null, %119 ], [ null, %82 ], [ null, %58 ], [ null, %88 ], [ null, %107 ], [ null, %115 ]
  %132 = getelementptr inbounds [2 x %"class.spvtools::opt::analysis::IntConstant"*], [2 x %"class.spvtools::opt::analysis::IntConstant"*]* %5, i64 0, i64 %43
  store %"class.spvtools::opt::analysis::IntConstant"* %131, %"class.spvtools::opt::analysis::IntConstant"** %132, align 8
  %133 = add nuw nsw i64 %43, 1
  %134 = icmp eq i64 %133, 2
  br i1 %134, label %135, label %42

135:                                              ; preds = %130
  switch i32 %7, label %443 [
    i32 132, label %142
    i32 134, label %156
    i32 135, label %156
    i32 138, label %156
    i32 139, label %156
    i32 137, label %156
    i32 194, label %170
    i32 196, label %170
    i32 197, label %139
    i32 199, label %136
    i32 176, label %211
    i32 177, label %241
    i32 172, label %271
    i32 173, label %297
    i32 178, label %327
    i32 179, label %353
    i32 174, label %383
    i32 175, label %413
  ]

136:                                              ; preds = %135
  %137 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %138 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %137, null
  br i1 %138, label %207, label %200

139:                                              ; preds = %135
  %140 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %141 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %140, null
  br i1 %141, label %196, label %185

142:                                              ; preds = %135
  %143 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %144 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %143, null
  br i1 %144, label %152, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %143, i64 0, i32 0
  %147 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %143 to i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %148 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)**, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %147, align 8
  %149 = getelementptr inbounds i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %148, i64 23
  %150 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %149, align 8
  %151 = tail call zeroext i1 %150(%"class.spvtools::opt::analysis::ScalarConstant"* %146) #11
  br i1 %151, label %155, label %152

152:                                              ; preds = %142, %145
  %153 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %154 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %153, null
  br i1 %154, label %443, label %445

155:                                              ; preds = %445, %145
  store i32 0, i32* %3, align 4
  br label %443

156:                                              ; preds = %135, %135, %135, %135, %135
  %157 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %158 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %157, null
  br i1 %158, label %166, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %157, i64 0, i32 0
  %161 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %157 to i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %162 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)**, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %161, align 8
  %163 = getelementptr inbounds i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %162, i64 23
  %164 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %163, align 8
  %165 = tail call zeroext i1 %164(%"class.spvtools::opt::analysis::ScalarConstant"* %160) #11
  br i1 %165, label %169, label %166

166:                                              ; preds = %156, %159
  %167 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %168 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %167, null
  br i1 %168, label %443, label %452

169:                                              ; preds = %452, %159
  store i32 0, i32* %3, align 4
  br label %443

170:                                              ; preds = %135, %135
  %171 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %172 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %171, null
  br i1 %172, label %443, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %171, i64 0, i32 0
  %175 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %171 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %176 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %175, align 8
  %177 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %176, i64 24
  %178 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %177, align 8
  %179 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %178(%"class.spvtools::opt::analysis::ScalarConstant"* %174) #11
  %180 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %179, i64 0, i32 0, i32 0
  %181 = load i32*, i32** %180, align 8
  %182 = load i32, i32* %181, align 4
  %183 = icmp ugt i32 %182, 31
  br i1 %183, label %184, label %443

184:                                              ; preds = %173
  store i32 0, i32* %3, align 4
  br label %443

185:                                              ; preds = %139
  %186 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %140, i64 0, i32 0
  %187 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %140 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %188 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %187, align 8
  %189 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %188, i64 24
  %190 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %189, align 8
  %191 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %190(%"class.spvtools::opt::analysis::ScalarConstant"* %186) #11
  %192 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 0
  %193 = load i32*, i32** %192, align 8
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, -1
  br i1 %195, label %199, label %196

196:                                              ; preds = %185, %139
  %197 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %198 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %197, null
  br i1 %198, label %443, label %459

199:                                              ; preds = %459, %185
  store i32 -1, i32* %3, align 4
  br label %443

200:                                              ; preds = %136
  %201 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %137, i64 0, i32 0
  %202 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %137 to i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %203 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)**, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %202, align 8
  %204 = getelementptr inbounds i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %203, i64 23
  %205 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %204, align 8
  %206 = tail call zeroext i1 %205(%"class.spvtools::opt::analysis::ScalarConstant"* %201) #11
  br i1 %206, label %210, label %207

207:                                              ; preds = %136, %200
  %208 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %209 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %208, null
  br i1 %209, label %443, label %470

210:                                              ; preds = %470, %200
  store i32 0, i32* %3, align 4
  br label %443

211:                                              ; preds = %135
  %212 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %213 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %212, null
  br i1 %213, label %226, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %212, i64 0, i32 0
  %216 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %212 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %217 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %216, align 8
  %218 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %217, i64 24
  %219 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %218, align 8
  %220 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %219(%"class.spvtools::opt::analysis::ScalarConstant"* %215) #11
  %221 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %220, i64 0, i32 0, i32 0
  %222 = load i32*, i32** %221, align 8
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, -1
  br i1 %224, label %225, label %226

225:                                              ; preds = %214
  store i32 0, i32* %3, align 4
  br label %443

226:                                              ; preds = %211, %214
  %227 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %228 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %227, null
  br i1 %228, label %443, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %227, i64 0, i32 0
  %231 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %227 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %232 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %232, i64 24
  %234 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %233, align 8
  %235 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %234(%"class.spvtools::opt::analysis::ScalarConstant"* %230) #11
  %236 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %235, i64 0, i32 0, i32 0
  %237 = load i32*, i32** %236, align 8
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %443

240:                                              ; preds = %229
  store i32 0, i32* %3, align 4
  br label %443

241:                                              ; preds = %135
  %242 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %243 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %242, null
  br i1 %243, label %256, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %242, i64 0, i32 0
  %246 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %242 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %247 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %246, align 8
  %248 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %247, i64 24
  %249 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %248, align 8
  %250 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %249(%"class.spvtools::opt::analysis::ScalarConstant"* %245) #11
  %251 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %250, i64 0, i32 0, i32 0
  %252 = load i32*, i32** %251, align 8
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 2147483647
  br i1 %254, label %255, label %256

255:                                              ; preds = %244
  store i32 0, i32* %3, align 4
  br label %443

256:                                              ; preds = %241, %244
  %257 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %258 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %257, null
  br i1 %258, label %443, label %259

259:                                              ; preds = %256
  %260 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %257, i64 0, i32 0
  %261 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %257 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %262 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %261, align 8
  %263 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %262, i64 24
  %264 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %263, align 8
  %265 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %264(%"class.spvtools::opt::analysis::ScalarConstant"* %260) #11
  %266 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %265, i64 0, i32 0, i32 0
  %267 = load i32*, i32** %266, align 8
  %268 = load i32, i32* %267, align 4
  %269 = icmp eq i32 %268, -2147483648
  br i1 %269, label %270, label %443

270:                                              ; preds = %259
  store i32 0, i32* %3, align 4
  br label %443

271:                                              ; preds = %135
  %272 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %273 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %272, null
  br i1 %273, label %282, label %274

274:                                              ; preds = %271
  %275 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %272, i64 0, i32 0
  %276 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %272 to i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %277 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)**, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %276, align 8
  %278 = getelementptr inbounds i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %277, i64 23
  %279 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %278, align 8
  %280 = tail call zeroext i1 %279(%"class.spvtools::opt::analysis::ScalarConstant"* %275) #11
  br i1 %280, label %281, label %282

281:                                              ; preds = %274
  store i32 0, i32* %3, align 4
  br label %443

282:                                              ; preds = %271, %274
  %283 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %284 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %283, null
  br i1 %284, label %443, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %283, i64 0, i32 0
  %287 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %283 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %288 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %287, align 8
  %289 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %288, i64 24
  %290 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %289, align 8
  %291 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %290(%"class.spvtools::opt::analysis::ScalarConstant"* %286) #11
  %292 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %291, i64 0, i32 0, i32 0
  %293 = load i32*, i32** %292, align 8
  %294 = load i32, i32* %293, align 4
  %295 = icmp eq i32 %294, -1
  br i1 %295, label %296, label %443

296:                                              ; preds = %285
  store i32 0, i32* %3, align 4
  br label %443

297:                                              ; preds = %135
  %298 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %299 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %298, null
  br i1 %299, label %312, label %300

300:                                              ; preds = %297
  %301 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %298, i64 0, i32 0
  %302 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %298 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %303 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %302, align 8
  %304 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %303, i64 24
  %305 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %304, align 8
  %306 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %305(%"class.spvtools::opt::analysis::ScalarConstant"* %301) #11
  %307 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %306, i64 0, i32 0, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = load i32, i32* %308, align 4
  %310 = icmp eq i32 %309, -2147483648
  br i1 %310, label %311, label %312

311:                                              ; preds = %300
  store i32 0, i32* %3, align 4
  br label %443

312:                                              ; preds = %297, %300
  %313 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %314 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %313, null
  br i1 %314, label %443, label %315

315:                                              ; preds = %312
  %316 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %313, i64 0, i32 0
  %317 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %313 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %318 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %317, align 8
  %319 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %318, i64 24
  %320 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %319, align 8
  %321 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %320(%"class.spvtools::opt::analysis::ScalarConstant"* %316) #11
  %322 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %321, i64 0, i32 0, i32 0
  %323 = load i32*, i32** %322, align 8
  %324 = load i32, i32* %323, align 4
  %325 = icmp eq i32 %324, 2147483647
  br i1 %325, label %326, label %443

326:                                              ; preds = %315
  store i32 0, i32* %3, align 4
  br label %443

327:                                              ; preds = %135
  %328 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %329 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %328, null
  br i1 %329, label %338, label %330

330:                                              ; preds = %327
  %331 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %328, i64 0, i32 0
  %332 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %328 to i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %333 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)**, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %332, align 8
  %334 = getelementptr inbounds i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %333, i64 23
  %335 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %334, align 8
  %336 = tail call zeroext i1 %335(%"class.spvtools::opt::analysis::ScalarConstant"* %331) #11
  br i1 %336, label %337, label %338

337:                                              ; preds = %330
  store i32 1, i32* %3, align 4
  br label %443

338:                                              ; preds = %327, %330
  %339 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %340 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %339, null
  br i1 %340, label %443, label %341

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %339, i64 0, i32 0
  %343 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %339 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %344 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %343, align 8
  %345 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %344, i64 24
  %346 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %345, align 8
  %347 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %346(%"class.spvtools::opt::analysis::ScalarConstant"* %342) #11
  %348 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %347, i64 0, i32 0, i32 0
  %349 = load i32*, i32** %348, align 8
  %350 = load i32, i32* %349, align 4
  %351 = icmp eq i32 %350, -1
  br i1 %351, label %352, label %443

352:                                              ; preds = %341
  store i32 1, i32* %3, align 4
  br label %443

353:                                              ; preds = %135
  %354 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %355 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %354, null
  br i1 %355, label %368, label %356

356:                                              ; preds = %353
  %357 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %354, i64 0, i32 0
  %358 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %354 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %359 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %358, align 8
  %360 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %359, i64 24
  %361 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %360, align 8
  %362 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %361(%"class.spvtools::opt::analysis::ScalarConstant"* %357) #11
  %363 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %362, i64 0, i32 0, i32 0
  %364 = load i32*, i32** %363, align 8
  %365 = load i32, i32* %364, align 4
  %366 = icmp eq i32 %365, -2147483648
  br i1 %366, label %367, label %368

367:                                              ; preds = %356
  store i32 1, i32* %3, align 4
  br label %443

368:                                              ; preds = %353, %356
  %369 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %370 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %369, null
  br i1 %370, label %443, label %371

371:                                              ; preds = %368
  %372 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %369, i64 0, i32 0
  %373 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %369 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %374 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %373, align 8
  %375 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %374, i64 24
  %376 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %375, align 8
  %377 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %376(%"class.spvtools::opt::analysis::ScalarConstant"* %372) #11
  %378 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %377, i64 0, i32 0, i32 0
  %379 = load i32*, i32** %378, align 8
  %380 = load i32, i32* %379, align 4
  %381 = icmp eq i32 %380, 2147483647
  br i1 %381, label %382, label %443

382:                                              ; preds = %371
  store i32 1, i32* %3, align 4
  br label %443

383:                                              ; preds = %135
  %384 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %385 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %384, null
  br i1 %385, label %398, label %386

386:                                              ; preds = %383
  %387 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %384, i64 0, i32 0
  %388 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %384 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %389 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %388, align 8
  %390 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %389, i64 24
  %391 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %390, align 8
  %392 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %391(%"class.spvtools::opt::analysis::ScalarConstant"* %387) #11
  %393 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %392, i64 0, i32 0, i32 0
  %394 = load i32*, i32** %393, align 8
  %395 = load i32, i32* %394, align 4
  %396 = icmp eq i32 %395, -1
  br i1 %396, label %397, label %398

397:                                              ; preds = %386
  store i32 1, i32* %3, align 4
  br label %443

398:                                              ; preds = %383, %386
  %399 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %400 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %399, null
  br i1 %400, label %443, label %401

401:                                              ; preds = %398
  %402 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %399, i64 0, i32 0
  %403 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %399 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %404 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %403, align 8
  %405 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %404, i64 24
  %406 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %405, align 8
  %407 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %406(%"class.spvtools::opt::analysis::ScalarConstant"* %402) #11
  %408 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %407, i64 0, i32 0, i32 0
  %409 = load i32*, i32** %408, align 8
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %443

412:                                              ; preds = %401
  store i32 1, i32* %3, align 4
  br label %443

413:                                              ; preds = %135
  %414 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %32, align 16
  %415 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %414, null
  br i1 %415, label %428, label %416

416:                                              ; preds = %413
  %417 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %414, i64 0, i32 0
  %418 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %414 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %419 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %418, align 8
  %420 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %419, i64 24
  %421 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %420, align 8
  %422 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %421(%"class.spvtools::opt::analysis::ScalarConstant"* %417) #11
  %423 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %422, i64 0, i32 0, i32 0
  %424 = load i32*, i32** %423, align 8
  %425 = load i32, i32* %424, align 4
  %426 = icmp eq i32 %425, 2147483647
  br i1 %426, label %427, label %428

427:                                              ; preds = %416
  store i32 1, i32* %3, align 4
  br label %443

428:                                              ; preds = %413, %416
  %429 = load %"class.spvtools::opt::analysis::IntConstant"*, %"class.spvtools::opt::analysis::IntConstant"** %33, align 8
  %430 = icmp eq %"class.spvtools::opt::analysis::IntConstant"* %429, null
  br i1 %430, label %443, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %429, i64 0, i32 0
  %433 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %429 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %434 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %433, align 8
  %435 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %434, i64 24
  %436 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %435, align 8
  %437 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %436(%"class.spvtools::opt::analysis::ScalarConstant"* %432) #11
  %438 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %437, i64 0, i32 0, i32 0
  %439 = load i32*, i32** %438, align 8
  %440 = load i32, i32* %439, align 4
  %441 = icmp eq i32 %440, -2147483648
  br i1 %441, label %442, label %443

442:                                              ; preds = %431
  store i32 1, i32* %3, align 4
  br label %443

443:                                              ; preds = %42, %207, %470, %196, %459, %166, %452, %152, %445, %173, %229, %259, %285, %315, %341, %371, %401, %431, %135, %428, %398, %368, %338, %312, %282, %256, %226, %170, %210, %199, %184, %169, %155, %442, %427, %412, %397, %382, %367, %352, %337, %326, %311, %296, %281, %270, %255, %240, %225
  %444 = phi i1 [ true, %427 ], [ true, %442 ], [ true, %397 ], [ true, %412 ], [ true, %367 ], [ true, %382 ], [ true, %337 ], [ true, %352 ], [ true, %311 ], [ true, %326 ], [ true, %281 ], [ true, %296 ], [ true, %255 ], [ true, %270 ], [ true, %225 ], [ true, %240 ], [ true, %210 ], [ true, %199 ], [ true, %184 ], [ true, %169 ], [ true, %155 ], [ false, %170 ], [ false, %226 ], [ false, %256 ], [ false, %282 ], [ false, %312 ], [ false, %338 ], [ false, %368 ], [ false, %398 ], [ false, %428 ], [ false, %135 ], [ false, %431 ], [ false, %401 ], [ false, %371 ], [ false, %341 ], [ false, %315 ], [ false, %285 ], [ false, %259 ], [ false, %229 ], [ false, %173 ], [ false, %445 ], [ false, %152 ], [ false, %452 ], [ false, %166 ], [ false, %459 ], [ false, %196 ], [ false, %470 ], [ false, %207 ], [ false, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  ret i1 %444

445:                                              ; preds = %152
  %446 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %153, i64 0, i32 0
  %447 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %153 to i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %448 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)**, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %447, align 8
  %449 = getelementptr inbounds i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %448, i64 23
  %450 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %449, align 8
  %451 = tail call zeroext i1 %450(%"class.spvtools::opt::analysis::ScalarConstant"* %446) #11
  br i1 %451, label %155, label %443

452:                                              ; preds = %166
  %453 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %167, i64 0, i32 0
  %454 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %167 to i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %455 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)**, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %454, align 8
  %456 = getelementptr inbounds i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %455, i64 23
  %457 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %456, align 8
  %458 = tail call zeroext i1 %457(%"class.spvtools::opt::analysis::ScalarConstant"* %453) #11
  br i1 %458, label %169, label %443

459:                                              ; preds = %196
  %460 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %197, i64 0, i32 0
  %461 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %197 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %462 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %461, align 8
  %463 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %462, i64 24
  %464 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %463, align 8
  %465 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %464(%"class.spvtools::opt::analysis::ScalarConstant"* %460) #11
  %466 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %465, i64 0, i32 0, i32 0
  %467 = load i32*, i32** %466, align 8
  %468 = load i32, i32* %467, align 4
  %469 = icmp eq i32 %468, -1
  br i1 %469, label %199, label %443

470:                                              ; preds = %207
  %471 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %208, i64 0, i32 0
  %472 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %208 to i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %473 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)**, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %472, align 8
  %474 = getelementptr inbounds i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %473, i64 23
  %475 = load i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)*, i1 (%"class.spvtools::opt::analysis::ScalarConstant"*)** %474, align 8
  %476 = tail call zeroext i1 %475(%"class.spvtools::opt::analysis::ScalarConstant"* %471) #11
  br i1 %476, label %210, label %443
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt17InstructionFolder29FoldBinaryBooleanOpToConstantEPNS0_11InstructionERKNSt3__18functionIFjjEEEPj(%"class.spvtools::opt::InstructionFolder"* nocapture readonly, %"class.spvtools::opt::Instruction"* nocapture readonly, %"class.std::__1::function.910"* dereferenceable(32), i32* nocapture) local_unnamed_addr #3 align 2 {
  %5 = alloca [2 x %"class.spvtools::opt::analysis::BoolConstant"*], align 16
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %0, i64 0, i32 0
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 16384
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %28

14:                                               ; preds = %4
  %15 = tail call i8* @_Znwm(i64 136) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %16, %"class.spvtools::opt::IRContext"* %9) #11
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 19
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.400"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %14
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %20) #11
  %24 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %14
  %26 = load i32, i32* %10, align 8
  %27 = or i32 %26, 16384
  store i32 %27, i32* %10, align 8
  br label %28

28:                                               ; preds = %4, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 19, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %29, align 8
  %31 = bitcast [2 x %"class.spvtools::opt::analysis::BoolConstant"*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = getelementptr inbounds [2 x %"class.spvtools::opt::analysis::BoolConstant"*], [2 x %"class.spvtools::opt::analysis::BoolConstant"*]* %5, i64 0, i64 0
  %33 = getelementptr inbounds [2 x %"class.spvtools::opt::analysis::BoolConstant"*], [2 x %"class.spvtools::opt::analysis::BoolConstant"*]* %5, i64 0, i64 1
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %2, i64 0, i32 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %2, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %30, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %30, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast [2 x %"class.spvtools::opt::analysis::BoolConstant"*]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %41, i8 -86, i64 16, i1 false)
  br label %42

42:                                               ; preds = %130, %28
  %43 = phi i64 [ 0, %28 ], [ %133, %130 ]
  %44 = load i8, i8* %34, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  %46 = load i8, i8* %35, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %47, i64 1, i64 2
  %49 = xor i1 %47, true
  %50 = zext i1 %49 to i64
  %51 = select i1 %45, i64 %50, i64 %48
  %52 = add nuw i64 %51, %43
  %53 = and i64 %52, 4294967295
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %36, align 8
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %54, i64 %53, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %158

58:                                               ; preds = %42
  %59 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %54, i64 %53, i32 1, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %59, align 8
  %61 = icmp eq %"class.std::__1::vector.3"* %60, null
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %60, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %54, i64 %53, i32 1, i32 2
  %64 = select i1 %61, i32** %63, i32** %62
  %65 = load i32*, i32** %64, align 8
  %66 = load i32, i32* %65, align 4
  %67 = load i32 (%"union.std::__1::__function::__policy_storage"*, i32)*, i32 (%"union.std::__1::__function::__policy_storage"*, i32)** %37, align 8
  %68 = tail call i32 %67(%"union.std::__1::__function::__policy_storage"* %38, i32 %66) #11
  %69 = zext i32 %68 to i64
  %70 = load i64, i64* %39, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %130, label %72

72:                                               ; preds = %58
  %73 = tail call i64 @llvm.ctpop.i64(i64 %70) #11, !range !8
  %74 = icmp ugt i64 %73, 1
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = add i64 %70, 4294967295
  %77 = and i64 %76, %69
  br label %82

78:                                               ; preds = %72
  %79 = icmp ugt i64 %70, %69
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %69, %70
  br label %82

82:                                               ; preds = %80, %78, %75
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %69, %78 ]
  %84 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %40, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %84, i64 %83
  %86 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.408"* %86, null
  br i1 %87, label %130, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %86, i64 0, i32 0
  %90 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.408"* %90, null
  br i1 %91, label %130, label %92

92:                                               ; preds = %88
  %93 = add i64 %70, -1
  br label %94

94:                                               ; preds = %115, %92
  %95 = phi %"struct.std::__1::__hash_node_base.408"* [ %90, %92 ], [ %117, %115 ]
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %95, i64 1
  %97 = bitcast %"struct.std::__1::__hash_node_base.408"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, %69
  br i1 %99, label %110, label %100

100:                                              ; preds = %94
  br i1 %74, label %103, label %101

101:                                              ; preds = %100
  %102 = and i64 %98, %93
  br label %107

103:                                              ; preds = %100
  %104 = icmp ult i64 %98, %70
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = urem i64 %98, %70
  br label %107

107:                                              ; preds = %105, %103, %101
  %108 = phi i64 [ %102, %101 ], [ %106, %105 ], [ %98, %103 ]
  %109 = icmp eq i64 %108, %83
  br i1 %109, label %115, label %130

110:                                              ; preds = %94
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %95, i64 2
  %112 = bitcast %"struct.std::__1::__hash_node_base.408"* %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, %68
  br i1 %114, label %119, label %115

115:                                              ; preds = %110, %107
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %95, i64 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base.408"* %117, null
  br i1 %118, label %130, label %94

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %95, i64 3
  %121 = bitcast %"struct.std::__1::__hash_node_base.408"* %120 to %"class.spvtools::opt::analysis::Constant"**
  %122 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %121, align 8
  %123 = icmp eq %"class.spvtools::opt::analysis::Constant"* %122, null
  br i1 %123, label %130, label %124

124:                                              ; preds = %119
  %125 = bitcast %"class.spvtools::opt::analysis::Constant"* %122 to %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %126 = load %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %125, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %126, i64 16
  %128 = load %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::BoolConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %127, align 8
  %129 = tail call %"class.spvtools::opt::analysis::BoolConstant"* %128(%"class.spvtools::opt::analysis::Constant"* nonnull %122) #11
  br label %130

130:                                              ; preds = %115, %107, %88, %58, %82, %124, %119
  %131 = phi %"class.spvtools::opt::analysis::BoolConstant"* [ %129, %124 ], [ null, %119 ], [ null, %82 ], [ null, %58 ], [ null, %88 ], [ null, %107 ], [ null, %115 ]
  %132 = getelementptr inbounds [2 x %"class.spvtools::opt::analysis::BoolConstant"*], [2 x %"class.spvtools::opt::analysis::BoolConstant"*]* %5, i64 0, i64 %43
  store %"class.spvtools::opt::analysis::BoolConstant"* %131, %"class.spvtools::opt::analysis::BoolConstant"** %132, align 8
  %133 = add nuw nsw i64 %43, 1
  %134 = icmp eq i64 %133, 2
  br i1 %134, label %135, label %42

135:                                              ; preds = %130
  switch i32 %7, label %158 [
    i32 166, label %139
    i32 167, label %136
  ]

136:                                              ; preds = %135
  %137 = load %"class.spvtools::opt::analysis::BoolConstant"*, %"class.spvtools::opt::analysis::BoolConstant"** %32, align 16
  %138 = icmp eq %"class.spvtools::opt::analysis::BoolConstant"* %137, null
  br i1 %138, label %154, label %150

139:                                              ; preds = %135
  %140 = load %"class.spvtools::opt::analysis::BoolConstant"*, %"class.spvtools::opt::analysis::BoolConstant"** %32, align 16
  %141 = icmp eq %"class.spvtools::opt::analysis::BoolConstant"* %140, null
  br i1 %141, label %146, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.spvtools::opt::analysis::BoolConstant", %"class.spvtools::opt::analysis::BoolConstant"* %140, i64 0, i32 1
  %144 = load i8, i8* %143, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %142, %139
  %147 = load %"class.spvtools::opt::analysis::BoolConstant"*, %"class.spvtools::opt::analysis::BoolConstant"** %33, align 8
  %148 = icmp eq %"class.spvtools::opt::analysis::BoolConstant"* %147, null
  br i1 %148, label %158, label %160

149:                                              ; preds = %160, %142
  store i32 1, i32* %3, align 4
  br label %158

150:                                              ; preds = %136
  %151 = getelementptr inbounds %"class.spvtools::opt::analysis::BoolConstant", %"class.spvtools::opt::analysis::BoolConstant"* %137, i64 0, i32 1
  %152 = load i8, i8* %151, align 8, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %150, %136
  %155 = load %"class.spvtools::opt::analysis::BoolConstant"*, %"class.spvtools::opt::analysis::BoolConstant"** %33, align 8
  %156 = icmp eq %"class.spvtools::opt::analysis::BoolConstant"* %155, null
  br i1 %156, label %158, label %164

157:                                              ; preds = %164, %150
  store i32 0, i32* %3, align 4
  br label %158

158:                                              ; preds = %42, %154, %164, %146, %160, %135, %157, %149
  %159 = phi i1 [ true, %157 ], [ true, %149 ], [ false, %135 ], [ false, %160 ], [ false, %146 ], [ false, %164 ], [ false, %154 ], [ false, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  ret i1 %159

160:                                              ; preds = %146
  %161 = getelementptr inbounds %"class.spvtools::opt::analysis::BoolConstant", %"class.spvtools::opt::analysis::BoolConstant"* %147, i64 0, i32 1
  %162 = load i8, i8* %161, align 8, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %158, label %149

164:                                              ; preds = %154
  %165 = getelementptr inbounds %"class.spvtools::opt::analysis::BoolConstant", %"class.spvtools::opt::analysis::BoolConstant"* %155, i64 0, i32 1
  %166 = load i8, i8* %165, align 8, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %157, label %158
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt17InstructionFolder23FoldIntegerOpToConstantEPNS0_11InstructionERKNSt3__18functionIFjjEEEPj(%"class.spvtools::opt::InstructionFolder"* nocapture readonly, %"class.spvtools::opt::Instruction"* nocapture readonly, %"class.std::__1::function.910"* dereferenceable(32), i32*) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %7 = bitcast %"struct.spvtools::opt::Operand"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 48
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, i32 1, i32 2
  %20 = xor i1 %18, true
  %21 = zext i1 %20 to i32
  %22 = select i1 %15, i32 %21, i32 %19
  %23 = trunc i64 %12 to i32
  %24 = sub i32 %23, %22
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %26, label %30

26:                                               ; preds = %4
  %27 = tail call zeroext i1 @_ZNK8spvtools3opt17InstructionFolder29FoldBinaryIntegerOpToConstantEPNS0_11InstructionERKNSt3__18functionIFjjEEEPj(%"class.spvtools::opt::InstructionFolder"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.910"* dereferenceable(32) %2, i32* %3)
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = tail call zeroext i1 @_ZNK8spvtools3opt17InstructionFolder29FoldBinaryBooleanOpToConstantEPNS0_11InstructionERKNSt3__18functionIFjjEEEPj(%"class.spvtools::opt::InstructionFolder"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.910"* dereferenceable(32) %2, i32* %3)
  br label %30

30:                                               ; preds = %4, %26, %28
  %31 = phi i1 [ true, %26 ], [ %29, %28 ], [ false, %4 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools3opt17InstructionFolder11FoldVectorsE6SpvOp_jRKNSt3__16vectorIPKNS0_8analysis8ConstantENS3_9allocatorIS8_EEEE(%"class.std::__1::vector.3"* noalias sret, %"class.spvtools::opt::InstructionFolder"* nocapture, i32, i32, %"class.std::__1::vector.842"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %6 = alloca %"class.std::__1::vector.3", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = icmp eq i32 %3, 0
  br i1 %10, label %361, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.std::__1::vector.3"* %6 to i8*
  %13 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %4, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %4, i64 0, i32 0, i32 1
  %18 = bitcast i32** %14 to i64*
  %19 = bitcast %"class.std::__1::vector.3"* %6 to i64*
  %20 = bitcast i32** %15 to i64*
  %21 = icmp eq i32 %2, 169
  %22 = bitcast i32** %7 to i64*
  %23 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %24 = bitcast i32** %8 to i64*
  %25 = zext i32 %3 to i64
  br label %26

26:                                               ; preds = %127, %11
  %27 = phi i64 [ 0, %11 ], [ %128, %127 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #11
  %28 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %16, align 8
  %29 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %17, align 8
  %30 = icmp eq %"class.spvtools::opt::analysis::Constant"** %28, %29
  br i1 %30, label %34, label %130

31:                                               ; preds = %354
  %32 = load i64, i64* %19, align 8
  %33 = inttoptr i64 %32 to i32*
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi i32* [ %33, %31 ], [ null, %26 ]
  %36 = phi i64 [ %32, %31 ], [ 0, %26 ]
  %37 = phi i64 [ %357, %31 ], [ 0, %26 ]
  %38 = sub i64 %37, %36
  %39 = ashr exact i64 %38, 2
  %40 = inttoptr i64 %36 to i32*
  switch i64 %39, label %68 [
    i64 1, label %41
    i64 2, label %53
    i64 3, label %59
  ]

41:                                               ; preds = %34
  %42 = load i32, i32* %40, align 4
  switch i32 %2, label %52 [
    i32 126, label %43
    i32 200, label %47
    i32 168, label %49
    i32 113, label %68
    i32 114, label %68
  ]

43:                                               ; preds = %41
  %44 = icmp eq i32 %42, -2147483648
  %45 = sub nsw i32 0, %42
  %46 = select i1 %44, i32 -2147483648, i32 %45
  br label %68

47:                                               ; preds = %41
  %48 = xor i32 %42, -1
  br label %68

49:                                               ; preds = %41
  %50 = icmp eq i32 %42, 0
  %51 = zext i1 %50 to i32
  br label %68

52:                                               ; preds = %41
  br label %68

53:                                               ; preds = %34
  %54 = inttoptr i64 %37 to i32*
  %55 = load i32, i32* %40, align 4
  %56 = getelementptr inbounds i32, i32* %54, i64 -1
  %57 = load i32, i32* %56, align 4
  %58 = tail call i32 @_ZNK8spvtools3opt17InstructionFolder13BinaryOperateE6SpvOp_jj(%"class.spvtools::opt::InstructionFolder"* %1, i32 %2, i32 %55, i32 %57) #11
  br label %68

59:                                               ; preds = %34
  %60 = load i32, i32* %40, align 4
  %61 = getelementptr inbounds i32, i32* %40, i64 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds i32, i32* %40, i64 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %60, 0
  %66 = select i1 %65, i32 %64, i32 %62
  %67 = select i1 %21, i32 %66, i32 0
  br label %68

68:                                               ; preds = %34, %41, %41, %43, %47, %49, %52, %53, %59
  %69 = phi i32 [ %67, %59 ], [ %58, %53 ], [ 0, %34 ], [ 0, %52 ], [ %51, %49 ], [ %48, %47 ], [ %46, %43 ], [ %42, %41 ], [ %42, %41 ]
  %70 = load i32*, i32** %7, align 8
  %71 = load i32*, i32** %8, align 8
  %72 = icmp ult i32* %70, %71
  %73 = ptrtoint i32* %71 to i64
  br i1 %72, label %74, label %78

74:                                               ; preds = %68
  store i32 %69, i32* %70, align 4
  %75 = getelementptr inbounds i32, i32* %70, i64 1
  %76 = ptrtoint i32* %75 to i64
  store i64 %76, i64* %22, align 8
  %77 = load i32*, i32** %13, align 8
  br label %121

78:                                               ; preds = %68
  %79 = ptrtoint i32* %70 to i64
  %80 = load i64, i64* %23, align 8
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 2
  %83 = add nsw i64 %82, 1
  %84 = icmp ugt i64 %83, 4611686018427387903
  br i1 %84, label %85, label %87

85:                                               ; preds = %78
  %86 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %86) #13
  unreachable

87:                                               ; preds = %78
  %88 = sub i64 %73, %80
  %89 = ashr exact i64 %88, 2
  %90 = icmp ult i64 %89, 2305843009213693951
  br i1 %90, label %91, label %99

91:                                               ; preds = %87
  %92 = ashr exact i64 %88, 1
  %93 = icmp ult i64 %92, %83
  %94 = select i1 %93, i64 %83, i64 %92
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %91
  %97 = icmp ugt i64 %94, 4611686018427387903
  br i1 %97, label %98, label %99

98:                                               ; preds = %96
  tail call void @abort() #13
  unreachable

99:                                               ; preds = %96, %87
  %100 = phi i64 [ %94, %96 ], [ 4611686018427387903, %87 ]
  %101 = shl i64 %100, 2
  %102 = tail call i8* @_Znwm(i64 %101) #12
  %103 = bitcast i8* %102 to i32*
  br label %104

104:                                              ; preds = %99, %91
  %105 = phi i64 [ %100, %99 ], [ 0, %91 ]
  %106 = phi i8* [ %102, %99 ], [ null, %91 ]
  %107 = phi i32* [ %103, %99 ], [ null, %91 ]
  %108 = getelementptr inbounds i32, i32* %107, i64 %82
  %109 = getelementptr inbounds i32, i32* %107, i64 %105
  %110 = ptrtoint i32* %109 to i64
  store i32 %69, i32* %108, align 4
  %111 = getelementptr inbounds i32, i32* %108, i64 1
  %112 = ptrtoint i32* %111 to i64
  %113 = ptrtoint i32* %107 to i64
  %114 = icmp sgt i64 %81, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %104
  %116 = inttoptr i64 %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* align 4 %116, i64 %81, i1 false) #11
  br label %117

117:                                              ; preds = %115, %104
  store i64 %113, i64* %23, align 8
  store i64 %112, i64* %22, align 8
  store i64 %110, i64* %24, align 8
  %118 = icmp eq i64 %80, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = inttoptr i64 %80 to i8*
  tail call void @_ZdlPv(i8* %120) #12
  br label %121

121:                                              ; preds = %74, %117, %119
  %122 = phi i32* [ %77, %74 ], [ %35, %117 ], [ %35, %119 ]
  %123 = icmp eq i32* %122, null
  br i1 %123, label %127, label %124

124:                                              ; preds = %121
  %125 = ptrtoint i32* %122 to i64
  store i64 %125, i64* %18, align 8
  %126 = bitcast i32* %122 to i8*
  tail call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %121, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  %128 = add nuw nsw i64 %27, 1
  %129 = icmp eq i64 %128, %25
  br i1 %129, label %361, label %26

130:                                              ; preds = %26, %354
  %131 = phi i32* [ %355, %354 ], [ null, %26 ]
  %132 = phi i32* [ %356, %354 ], [ null, %26 ]
  %133 = phi i64 [ %357, %354 ], [ 0, %26 ]
  %134 = phi i32* [ %358, %354 ], [ null, %26 ]
  %135 = phi %"class.spvtools::opt::analysis::Constant"** [ %359, %354 ], [ %28, %26 ]
  %136 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %135, align 8
  %137 = bitcast %"class.spvtools::opt::analysis::Constant"* %136 to %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %138 = load %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %137, align 8
  %139 = getelementptr inbounds %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %138, i64 19
  %140 = load %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::VectorConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %139, align 8
  %141 = tail call %"class.spvtools::opt::analysis::VectorConstant"* %140(%"class.spvtools::opt::analysis::Constant"* %136) #11
  %142 = icmp eq %"class.spvtools::opt::analysis::VectorConstant"* %141, null
  br i1 %142, label %292, label %143

143:                                              ; preds = %130
  %144 = getelementptr inbounds %"class.spvtools::opt::analysis::VectorConstant", %"class.spvtools::opt::analysis::VectorConstant"* %141, i64 0, i32 0
  %145 = bitcast %"class.spvtools::opt::analysis::VectorConstant"* %141 to %"class.std::__1::vector.842"* (%"class.spvtools::opt::analysis::CompositeConstant"*)***
  %146 = load %"class.std::__1::vector.842"* (%"class.spvtools::opt::analysis::CompositeConstant"*)**, %"class.std::__1::vector.842"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::vector.842"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.842"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %146, i64 24
  %148 = load %"class.std::__1::vector.842"* (%"class.spvtools::opt::analysis::CompositeConstant"*)*, %"class.std::__1::vector.842"* (%"class.spvtools::opt::analysis::CompositeConstant"*)** %147, align 8
  %149 = tail call dereferenceable(24) %"class.std::__1::vector.842"* %148(%"class.spvtools::opt::analysis::CompositeConstant"* %144) #11
  %150 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %149, i64 0, i32 0, i32 1
  %151 = bitcast %"class.spvtools::opt::analysis::Constant"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.std::__1::vector.842"* %149 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = sub i64 %152, %154
  %156 = ashr exact i64 %155, 3
  %157 = icmp ugt i64 %156, %27
  br i1 %157, label %160, label %158

158:                                              ; preds = %143
  %159 = bitcast %"class.std::__1::vector.842"* %149 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %159) #13
  unreachable

160:                                              ; preds = %143
  %161 = inttoptr i64 %154 to %"class.spvtools::opt::analysis::Constant"**
  %162 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %161, i64 %27
  %163 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %162, align 8
  %164 = bitcast %"class.spvtools::opt::analysis::Constant"* %163 to %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %165 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %164, align 8
  %166 = getelementptr inbounds %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %165, i64 13
  %167 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %166, align 8
  %168 = tail call %"class.spvtools::opt::analysis::ScalarConstant"* %167(%"class.spvtools::opt::analysis::Constant"* %163) #11
  %169 = icmp eq %"class.spvtools::opt::analysis::ScalarConstant"* %168, null
  br i1 %169, label %230, label %170

170:                                              ; preds = %160
  %171 = bitcast %"class.spvtools::opt::analysis::ScalarConstant"* %168 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %172 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %171, align 8
  %173 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %172, i64 24
  %174 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %173, align 8
  %175 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %174(%"class.spvtools::opt::analysis::ScalarConstant"* nonnull %168) #11
  %176 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %175, i64 0, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = load i32*, i32** %15, align 8
  %179 = icmp eq i32* %134, %178
  br i1 %179, label %184, label %180

180:                                              ; preds = %170
  %181 = load i32, i32* %177, align 4
  store i32 %181, i32* %134, align 4
  %182 = getelementptr inbounds i32, i32* %134, i64 1
  %183 = ptrtoint i32* %182 to i64
  store i64 %183, i64* %18, align 8
  br label %354

184:                                              ; preds = %170
  %185 = ptrtoint i32* %178 to i64
  %186 = load i64, i64* %19, align 8
  %187 = sub i64 %185, %186
  %188 = ashr exact i64 %187, 2
  %189 = add nsw i64 %188, 1
  %190 = icmp ugt i64 %189, 4611686018427387903
  br i1 %190, label %191, label %193

191:                                              ; preds = %184
  %192 = bitcast %"class.std::__1::vector.3"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %192) #13
  unreachable

193:                                              ; preds = %184
  %194 = icmp ult i64 %188, 2305843009213693951
  br i1 %194, label %195, label %203

195:                                              ; preds = %193
  %196 = ashr exact i64 %187, 1
  %197 = icmp ult i64 %196, %189
  %198 = select i1 %197, i64 %189, i64 %196
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %208, label %200

200:                                              ; preds = %195
  %201 = icmp ugt i64 %198, 4611686018427387903
  br i1 %201, label %202, label %203

202:                                              ; preds = %200
  tail call void @abort() #13
  unreachable

203:                                              ; preds = %200, %193
  %204 = phi i64 [ %198, %200 ], [ 4611686018427387903, %193 ]
  %205 = shl i64 %204, 2
  %206 = tail call i8* @_Znwm(i64 %205) #12
  %207 = bitcast i8* %206 to i32*
  br label %208

208:                                              ; preds = %203, %195
  %209 = phi i64 [ %204, %203 ], [ 0, %195 ]
  %210 = phi i32* [ %207, %203 ], [ null, %195 ]
  %211 = getelementptr inbounds i32, i32* %210, i64 %188
  %212 = getelementptr inbounds i32, i32* %210, i64 %209
  %213 = ptrtoint i32* %212 to i64
  %214 = load i32, i32* %177, align 4
  store i32 %214, i32* %211, align 4
  %215 = getelementptr inbounds i32, i32* %211, i64 1
  %216 = ptrtoint i32* %215 to i64
  %217 = sub i64 %133, %186
  %218 = ashr exact i64 %217, 2
  %219 = sub nsw i64 0, %218
  %220 = getelementptr inbounds i32, i32* %211, i64 %219
  %221 = ptrtoint i32* %220 to i64
  %222 = icmp sgt i64 %217, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %208
  %224 = bitcast i32* %220 to i8*
  %225 = inttoptr i64 %186 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %224, i8* align 4 %225, i64 %217, i1 false) #11
  br label %226

226:                                              ; preds = %223, %208
  store i64 %221, i64* %19, align 8
  store i64 %216, i64* %18, align 8
  store i64 %213, i64* %20, align 8
  %227 = icmp eq i64 %186, 0
  br i1 %227, label %354, label %228

228:                                              ; preds = %226
  %229 = inttoptr i64 %186 to i8*
  tail call void @_ZdlPv(i8* %229) #12
  br label %354

230:                                              ; preds = %160
  %231 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %135, align 8
  %232 = bitcast %"class.spvtools::opt::analysis::Constant"* %231 to %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %233 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %232, align 8
  %234 = getelementptr inbounds %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %233, i64 22
  %235 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %234, align 8
  %236 = tail call %"class.spvtools::opt::analysis::NullConstant"* %235(%"class.spvtools::opt::analysis::Constant"* %231) #11
  %237 = icmp eq %"class.spvtools::opt::analysis::NullConstant"* %236, null
  br i1 %237, label %354, label %238

238:                                              ; preds = %230
  %239 = load i32*, i32** %15, align 8
  %240 = icmp ult i32* %132, %239
  %241 = ptrtoint i32* %239 to i64
  br i1 %240, label %242, label %245

242:                                              ; preds = %238
  store i32 0, i32* %132, align 4
  %243 = getelementptr inbounds i32, i32* %132, i64 1
  %244 = ptrtoint i32* %243 to i64
  store i64 %244, i64* %18, align 8
  br label %354

245:                                              ; preds = %238
  %246 = ptrtoint i32* %132 to i64
  %247 = load i64, i64* %19, align 8
  %248 = sub i64 %246, %247
  %249 = ashr exact i64 %248, 2
  %250 = add nsw i64 %249, 1
  %251 = icmp ugt i64 %250, 4611686018427387903
  br i1 %251, label %252, label %254

252:                                              ; preds = %245
  %253 = bitcast %"class.std::__1::vector.3"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %253) #13
  unreachable

254:                                              ; preds = %245
  %255 = sub i64 %241, %247
  %256 = ashr exact i64 %255, 2
  %257 = icmp ult i64 %256, 2305843009213693951
  br i1 %257, label %258, label %266

258:                                              ; preds = %254
  %259 = ashr exact i64 %255, 1
  %260 = icmp ult i64 %259, %250
  %261 = select i1 %260, i64 %250, i64 %259
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %271, label %263

263:                                              ; preds = %258
  %264 = icmp ugt i64 %261, 4611686018427387903
  br i1 %264, label %265, label %266

265:                                              ; preds = %263
  tail call void @abort() #13
  unreachable

266:                                              ; preds = %263, %254
  %267 = phi i64 [ %261, %263 ], [ 4611686018427387903, %254 ]
  %268 = shl i64 %267, 2
  %269 = tail call i8* @_Znwm(i64 %268) #12
  %270 = bitcast i8* %269 to i32*
  br label %271

271:                                              ; preds = %266, %258
  %272 = phi i64 [ %267, %266 ], [ 0, %258 ]
  %273 = phi i32* [ %270, %266 ], [ null, %258 ]
  %274 = getelementptr inbounds i32, i32* %273, i64 %249
  %275 = getelementptr inbounds i32, i32* %273, i64 %272
  %276 = ptrtoint i32* %275 to i64
  store i32 0, i32* %274, align 4
  %277 = getelementptr inbounds i32, i32* %274, i64 1
  %278 = ptrtoint i32* %277 to i64
  %279 = sub i64 %133, %247
  %280 = ashr exact i64 %279, 2
  %281 = sub nsw i64 0, %280
  %282 = getelementptr inbounds i32, i32* %274, i64 %281
  %283 = ptrtoint i32* %282 to i64
  %284 = icmp sgt i64 %279, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %271
  %286 = bitcast i32* %282 to i8*
  %287 = inttoptr i64 %247 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %286, i8* align 4 %287, i64 %279, i1 false) #11
  br label %288

288:                                              ; preds = %285, %271
  store i64 %283, i64* %19, align 8
  store i64 %278, i64* %18, align 8
  store i64 %276, i64* %20, align 8
  %289 = icmp eq i64 %247, 0
  br i1 %289, label %354, label %290

290:                                              ; preds = %288
  %291 = inttoptr i64 %247 to i8*
  tail call void @_ZdlPv(i8* %291) #12
  br label %354

292:                                              ; preds = %130
  %293 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %135, align 8
  %294 = bitcast %"class.spvtools::opt::analysis::Constant"* %293 to %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %295 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %294, align 8
  %296 = getelementptr inbounds %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %295, i64 22
  %297 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %296, align 8
  %298 = tail call %"class.spvtools::opt::analysis::NullConstant"* %297(%"class.spvtools::opt::analysis::Constant"* %293) #11
  %299 = icmp eq %"class.spvtools::opt::analysis::NullConstant"* %298, null
  br i1 %299, label %354, label %300

300:                                              ; preds = %292
  %301 = load i32*, i32** %15, align 8
  %302 = icmp ult i32* %131, %301
  %303 = ptrtoint i32* %301 to i64
  br i1 %302, label %304, label %307

304:                                              ; preds = %300
  store i32 0, i32* %131, align 4
  %305 = getelementptr inbounds i32, i32* %131, i64 1
  %306 = ptrtoint i32* %305 to i64
  store i64 %306, i64* %18, align 8
  br label %354

307:                                              ; preds = %300
  %308 = ptrtoint i32* %131 to i64
  %309 = load i64, i64* %19, align 8
  %310 = sub i64 %308, %309
  %311 = ashr exact i64 %310, 2
  %312 = add nsw i64 %311, 1
  %313 = icmp ugt i64 %312, 4611686018427387903
  br i1 %313, label %314, label %316

314:                                              ; preds = %307
  %315 = bitcast %"class.std::__1::vector.3"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %315) #13
  unreachable

316:                                              ; preds = %307
  %317 = sub i64 %303, %309
  %318 = ashr exact i64 %317, 2
  %319 = icmp ult i64 %318, 2305843009213693951
  br i1 %319, label %320, label %328

320:                                              ; preds = %316
  %321 = ashr exact i64 %317, 1
  %322 = icmp ult i64 %321, %312
  %323 = select i1 %322, i64 %312, i64 %321
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %333, label %325

325:                                              ; preds = %320
  %326 = icmp ugt i64 %323, 4611686018427387903
  br i1 %326, label %327, label %328

327:                                              ; preds = %325
  tail call void @abort() #13
  unreachable

328:                                              ; preds = %325, %316
  %329 = phi i64 [ %323, %325 ], [ 4611686018427387903, %316 ]
  %330 = shl i64 %329, 2
  %331 = tail call i8* @_Znwm(i64 %330) #12
  %332 = bitcast i8* %331 to i32*
  br label %333

333:                                              ; preds = %328, %320
  %334 = phi i64 [ %329, %328 ], [ 0, %320 ]
  %335 = phi i32* [ %332, %328 ], [ null, %320 ]
  %336 = getelementptr inbounds i32, i32* %335, i64 %311
  %337 = getelementptr inbounds i32, i32* %335, i64 %334
  %338 = ptrtoint i32* %337 to i64
  store i32 0, i32* %336, align 4
  %339 = getelementptr inbounds i32, i32* %336, i64 1
  %340 = ptrtoint i32* %339 to i64
  %341 = sub i64 %133, %309
  %342 = ashr exact i64 %341, 2
  %343 = sub nsw i64 0, %342
  %344 = getelementptr inbounds i32, i32* %336, i64 %343
  %345 = ptrtoint i32* %344 to i64
  %346 = icmp sgt i64 %341, 0
  br i1 %346, label %347, label %350

347:                                              ; preds = %333
  %348 = bitcast i32* %344 to i8*
  %349 = inttoptr i64 %309 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %348, i8* align 4 %349, i64 %341, i1 false) #11
  br label %350

350:                                              ; preds = %347, %333
  store i64 %345, i64* %19, align 8
  store i64 %340, i64* %18, align 8
  store i64 %338, i64* %20, align 8
  %351 = icmp eq i64 %309, 0
  br i1 %351, label %354, label %352

352:                                              ; preds = %350
  %353 = inttoptr i64 %309 to i8*
  tail call void @_ZdlPv(i8* %353) #12
  br label %354

354:                                              ; preds = %352, %350, %304, %290, %288, %242, %228, %226, %180, %230, %292
  %355 = phi i32* [ %339, %352 ], [ %339, %350 ], [ %305, %304 ], [ %277, %290 ], [ %277, %288 ], [ %243, %242 ], [ %215, %228 ], [ %215, %226 ], [ %182, %180 ], [ %131, %230 ], [ %131, %292 ]
  %356 = phi i32* [ %339, %352 ], [ %339, %350 ], [ %305, %304 ], [ %277, %290 ], [ %277, %288 ], [ %243, %242 ], [ %215, %228 ], [ %215, %226 ], [ %182, %180 ], [ %132, %230 ], [ %132, %292 ]
  %357 = phi i64 [ %340, %352 ], [ %340, %350 ], [ %306, %304 ], [ %278, %290 ], [ %278, %288 ], [ %244, %242 ], [ %216, %228 ], [ %216, %226 ], [ %183, %180 ], [ %133, %230 ], [ %133, %292 ]
  %358 = phi i32* [ %339, %352 ], [ %339, %350 ], [ %305, %304 ], [ %277, %290 ], [ %277, %288 ], [ %243, %242 ], [ %215, %228 ], [ %215, %226 ], [ %182, %180 ], [ %134, %230 ], [ %134, %292 ]
  %359 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %135, i64 1
  %360 = icmp eq %"class.spvtools::opt::analysis::Constant"** %359, %29
  br i1 %360, label %31, label %130

361:                                              ; preds = %127, %5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt17InstructionFolder16IsFoldableOpcodeE6SpvOp_(%"class.spvtools::opt::InstructionFolder"* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %3 [
    i32 199, label %4
    i32 197, label %4
    i32 198, label %4
    i32 128, label %4
    i32 170, label %4
    i32 132, label %4
    i32 171, label %4
    i32 130, label %4
    i32 167, label %4
    i32 164, label %4
    i32 168, label %4
    i32 165, label %4
    i32 166, label %4
    i32 200, label %4
    i32 135, label %4
    i32 169, label %4
    i32 173, label %4
    i32 175, label %4
    i32 196, label %4
    i32 195, label %4
    i32 194, label %4
    i32 177, label %4
    i32 179, label %4
    i32 139, label %4
    i32 126, label %4
    i32 138, label %4
    i32 114, label %4
    i32 113, label %4
    i32 134, label %4
    i32 172, label %4
    i32 174, label %4
    i32 176, label %4
    i32 178, label %4
    i32 137, label %4
  ]

3:                                                ; preds = %2
  br label %4

4:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %3
  %5 = phi i1 [ false, %3 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ]
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt17InstructionFolder18IsFoldableConstantEPKNS0_8analysis8ConstantE(%"class.spvtools::opt::InstructionFolder"* nocapture readnone, %"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"class.spvtools::opt::analysis::Constant"* %1 to %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %4 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %4, i64 13
  %6 = load %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::ScalarConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %5, align 8
  %7 = tail call %"class.spvtools::opt::analysis::ScalarConstant"* %6(%"class.spvtools::opt::analysis::Constant"* %1) #11
  %8 = icmp eq %"class.spvtools::opt::analysis::ScalarConstant"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.spvtools::opt::analysis::ScalarConstant"* %7 to %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %11 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %11, i64 24
  %13 = load %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.3"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %12, align 8
  %14 = tail call dereferenceable(24) %"class.std::__1::vector.3"* %13(%"class.spvtools::opt::analysis::ScalarConstant"* nonnull %7) #11
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.3"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = icmp eq i64 %20, 4
  br label %29

22:                                               ; preds = %2
  %23 = bitcast %"class.spvtools::opt::analysis::Constant"* %1 to %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %24 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %24, i64 22
  %26 = load %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::NullConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %25, align 8
  %27 = tail call %"class.spvtools::opt::analysis::NullConstant"* %26(%"class.spvtools::opt::analysis::Constant"* %1) #11
  %28 = icmp ne %"class.spvtools::opt::analysis::NullConstant"* %27, null
  br label %29

29:                                               ; preds = %22, %9
  %30 = phi i1 [ %21, %9 ], [ %28, %22 ]
  ret i1 %30
}

declare zeroext i1 @_ZNK8spvtools3opt11Instruction22IsFoldableByFoldScalarEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.835"* @_ZNK8spvtools3opt20ConstantFoldingRules22GetRulesForInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::ConstantFoldingRules"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 12
  br i1 %5, label %62, label %6

6:                                                ; preds = %2
  %7 = zext i32 %4 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::ConstantFoldingRules", %"class.spvtools::opt::ConstantFoldingRules"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %130, label %11

11:                                               ; preds = %6
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.spvtools::opt::ConstantFoldingRules", %"class.spvtools::opt::ConstantFoldingRules"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.805"**, %"struct.std::__1::__hash_node_base.805"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.805"*, %"struct.std::__1::__hash_node_base.805"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.805"*, %"struct.std::__1::__hash_node_base.805"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.805"* %26, null
  br i1 %27, label %130, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.805", %"struct.std::__1::__hash_node_base.805"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.805"*, %"struct.std::__1::__hash_node_base.805"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.805"* %30, null
  br i1 %31, label %130, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %55, %32
  %35 = phi %"struct.std::__1::__hash_node_base.805"* [ %30, %32 ], [ %57, %55 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.805", %"struct.std::__1::__hash_node_base.805"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.805"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %55, label %130

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.805", %"struct.std::__1::__hash_node_base.805"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.805"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %4
  br i1 %54, label %59, label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.805", %"struct.std::__1::__hash_node_base.805"* %35, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.805"*, %"struct.std::__1::__hash_node_base.805"** %56, align 8
  %58 = icmp eq %"struct.std::__1::__hash_node_base.805"* %57, null
  br i1 %58, label %130, label %34

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.805", %"struct.std::__1::__hash_node_base.805"* %35, i64 3
  %61 = bitcast %"struct.std::__1::__hash_node_base.805"* %60 to %"class.std::__1::vector.835"*
  br label %132

62:                                               ; preds = %2
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %64 = load i8, i8* %63, align 4, !range !2
  %65 = icmp eq i8 %64, 0
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  %69 = select i1 %68, i32 1, i32 2
  %70 = xor i1 %68, true
  %71 = zext i1 %70 to i32
  %72 = select i1 %65, i32 %71, i32 %69
  %73 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %72) #11
  %74 = load i8, i8* %63, align 4, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = load i8, i8* %66, align 1, !range !2
  %77 = icmp eq i8 %76, 0
  %78 = select i1 %77, i32 1, i32 2
  %79 = xor i1 %77, true
  %80 = zext i1 %79 to i32
  %81 = select i1 %75, i32 %80, i32 %78
  %82 = add nuw nsw i32 %81, 1
  %83 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %82) #11
  %84 = getelementptr inbounds %"class.spvtools::opt::ConstantFoldingRules", %"class.spvtools::opt::ConstantFoldingRules"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %85 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node.956"**
  %86 = load %"class.std::__1::__tree_node.956"*, %"class.std::__1::__tree_node.956"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node.956"* %86, null
  br i1 %87, label %130, label %88

88:                                               ; preds = %62, %108
  %89 = phi %"class.std::__1::__tree_end_node"* [ %110, %108 ], [ %84, %62 ]
  %90 = phi %"class.std::__1::__tree_node.956"* [ %111, %108 ], [ %86, %62 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node.956", %"class.std::__1::__tree_node.956"* %90, i64 0, i32 1, i32 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp ult i32 %92, %73
  br i1 %93, label %94, label %97

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.956", %"class.std::__1::__tree_node.956"* %90, i64 0, i32 0, i32 1
  %96 = bitcast %"class.std::__1::__tree_node_base"** %95 to %"class.std::__1::__tree_node.956"**
  br label %108

97:                                               ; preds = %88
  %98 = icmp ugt i32 %92, %73
  br i1 %98, label %105, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"class.std::__1::__tree_node.956", %"class.std::__1::__tree_node.956"* %90, i64 0, i32 1, i32 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = icmp ult i32 %101, %83
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.956", %"class.std::__1::__tree_node.956"* %90, i64 0, i32 0, i32 1
  %104 = bitcast %"class.std::__1::__tree_node_base"** %103 to %"class.std::__1::__tree_node.956"**
  br i1 %102, label %108, label %105

105:                                              ; preds = %99, %97
  %106 = bitcast %"class.std::__1::__tree_node.956"* %90 to %"class.std::__1::__tree_node.956"**
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.956", %"class.std::__1::__tree_node.956"* %90, i64 0, i32 0, i32 0
  br label %108

108:                                              ; preds = %105, %99, %94
  %109 = phi %"class.std::__1::__tree_node.956"** [ %106, %105 ], [ %96, %94 ], [ %104, %99 ]
  %110 = phi %"class.std::__1::__tree_end_node"* [ %107, %105 ], [ %89, %94 ], [ %89, %99 ]
  %111 = load %"class.std::__1::__tree_node.956"*, %"class.std::__1::__tree_node.956"** %109, align 8
  %112 = icmp eq %"class.std::__1::__tree_node.956"* %111, null
  br i1 %112, label %113, label %88

113:                                              ; preds = %108
  %114 = icmp eq %"class.std::__1::__tree_end_node"* %110, %84
  br i1 %114, label %130, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 4
  %117 = bitcast %"class.std::__1::__tree_end_node"* %116 to %"struct.std::__1::__value_type.957"*
  %118 = bitcast %"class.std::__1::__tree_end_node"* %116 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = icmp ult i32 %73, %119
  br i1 %120, label %130, label %121

121:                                              ; preds = %115
  %122 = icmp ugt i32 %73, %119
  br i1 %122, label %127, label %123

123:                                              ; preds = %121
  %124 = getelementptr inbounds %"struct.std::__1::__value_type.957", %"struct.std::__1::__value_type.957"* %117, i64 0, i32 0, i32 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = icmp ult i32 %83, %125
  br i1 %126, label %130, label %127

127:                                              ; preds = %121, %123
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 5
  %129 = bitcast %"class.std::__1::__tree_end_node"* %128 to %"class.std::__1::vector.835"*
  br label %132

130:                                              ; preds = %47, %55, %123, %115, %113, %62, %21, %6, %28
  %131 = getelementptr inbounds %"class.spvtools::opt::ConstantFoldingRules", %"class.spvtools::opt::ConstantFoldingRules"* %0, i64 0, i32 4
  br label %132

132:                                              ; preds = %127, %59, %130
  %133 = phi %"class.std::__1::vector.835"* [ %131, %130 ], [ %61, %59 ], [ %129, %127 ]
  ret %"class.std::__1::vector.835"* %133
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #4

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #4

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis15ConstantManager7GetTypeEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt17InstructionFolder14IsFoldableTypeEPNS0_11InstructionE(%"class.spvtools::opt::InstructionFolder"* nocapture readnone, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 21
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i32 1, i32 2
  %14 = xor i1 %12, true
  %15 = zext i1 %14 to i32
  %16 = select i1 %9, i32 %15, i32 %13
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %16) #11
  %18 = icmp eq i32 %17, 32
  br label %21

19:                                               ; preds = %2
  %20 = icmp eq i32 %4, 20
  br label %21

21:                                               ; preds = %19, %6
  %22 = phi i1 [ %18, %6 ], [ %20, %19 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt17InstructionFolder15FoldInstructionEPNS0_11InstructionE(%"class.spvtools::opt::InstructionFolder"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 83
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK8spvtools3opt17InstructionFolder23FoldInstructionInternalEPNS0_11InstructionE(%"class.spvtools::opt::InstructionFolder"* %0, %"class.spvtools::opt::Instruction"* %1)
  br i1 %7, label %8, label %13

8:                                                ; preds = %6, %11
  %9 = load i32, i32* %3, align 8
  %10 = icmp eq i32 %9, 83
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @_ZNK8spvtools3opt17InstructionFolder23FoldInstructionInternalEPNS0_11InstructionE(%"class.spvtools::opt::InstructionFolder"* %0, %"class.spvtools::opt::Instruction"* %1)
  br i1 %12, label %8, label %13

13:                                               ; preds = %8, %11, %6, %2
  %14 = phi i1 [ false, %2 ], [ false, %6 ], [ true, %11 ], [ true, %8 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*) local_unnamed_addr #3 comdat align 2 {
  %5 = ptrtoint %"struct.spvtools::opt::Operand"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.spvtools::opt::Operand"* %2 to i64
  %8 = ptrtoint %"struct.spvtools::opt::Operand"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 48
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %250

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %18 = ptrtoint %"struct.spvtools::opt::Operand"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 48
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.spvtools::opt::Operand"** %16 to i64*
  br i1 %21, label %116, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 48
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %2, i64 %25
  %29 = icmp eq %"struct.spvtools::opt::Operand"* %28, %3
  br i1 %29, label %51, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"struct.spvtools::opt::Operand"* [ %47, %30 ], [ %17, %27 ]
  %32 = phi %"struct.spvtools::opt::Operand"* [ %46, %30 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 1
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 2
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 3, i64 0
  %42 = bitcast i32** %40 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %41, %"struct.std::__1::aligned_storage<4, 4>::type"** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 4
  %44 = bitcast %"class.std::__1::unique_ptr.0"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %36, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %37) #11
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 1
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 1
  %48 = icmp eq %"struct.spvtools::opt::Operand"* %46, %3
  br i1 %48, label %49, label %30

49:                                               ; preds = %30
  %50 = ptrtoint %"struct.spvtools::opt::Operand"* %47 to i64
  br label %51

51:                                               ; preds = %49, %27
  %52 = phi i64 [ %18, %27 ], [ %50, %49 ]
  store i64 %52, i64* %22, align 8
  %53 = icmp sgt i64 %24, 0
  br i1 %53, label %54, label %250

54:                                               ; preds = %51
  %55 = inttoptr i64 %52 to %"struct.spvtools::opt::Operand"*
  br label %56

56:                                               ; preds = %54, %23
  %57 = phi i64 [ %52, %54 ], [ %18, %23 ]
  %58 = phi %"struct.spvtools::opt::Operand"* [ %55, %54 ], [ %17, %23 ]
  %59 = phi %"struct.spvtools::opt::Operand"* [ %28, %54 ], [ %3, %23 ]
  %60 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %10
  %61 = ptrtoint %"struct.spvtools::opt::Operand"* %60 to i64
  %62 = sub i64 %57, %61
  %63 = sdiv exact i64 %62, 48
  %64 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %63
  %65 = icmp ult %"struct.spvtools::opt::Operand"* %64, %17
  br i1 %65, label %83, label %68

66:                                               ; preds = %83
  %67 = ptrtoint %"struct.spvtools::opt::Operand"* %100 to i64
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i64 [ %67, %66 ], [ %57, %56 ]
  store i64 %69, i64* %22, align 8
  %70 = icmp eq i64 %62, 0
  br i1 %70, label %102, label %71

71:                                               ; preds = %68, %71
  %72 = phi %"struct.spvtools::opt::Operand"* [ %75, %71 ], [ %58, %68 ]
  %73 = phi %"struct.spvtools::opt::Operand"* [ %74, %71 ], [ %64, %68 ]
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %74, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %75, i64 0, i32 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1, i32 1
  %80 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1, i32 1
  %81 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %79, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %80) #11
  %82 = icmp eq %"struct.spvtools::opt::Operand"* %74, %1
  br i1 %82, label %102, label %71

83:                                               ; preds = %56, %83
  %84 = phi %"struct.spvtools::opt::Operand"* [ %100, %83 ], [ %58, %56 ]
  %85 = phi %"struct.spvtools::opt::Operand"* [ %99, %83 ], [ %64, %56 ]
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1
  %91 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %89, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 1
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 2
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 3, i64 0
  %95 = bitcast i32** %93 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %94, %"struct.std::__1::aligned_storage<4, 4>::type"** %95, align 8
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 4
  %97 = bitcast %"class.std::__1::unique_ptr.0"* %96 to i64*
  store i64 0, i64* %97, align 8
  %98 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %89, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %90) #11
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 1
  %100 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 1
  %101 = icmp ult %"struct.spvtools::opt::Operand"* %99, %17
  br i1 %101, label %83, label %66

102:                                              ; preds = %71, %68
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %59, %2
  br i1 %103, label %250, label %104

104:                                              ; preds = %102, %104
  %105 = phi %"struct.spvtools::opt::Operand"* [ %114, %104 ], [ %1, %102 ]
  %106 = phi %"struct.spvtools::opt::Operand"* [ %113, %104 ], [ %2, %102 ]
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 0
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 1
  %111 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 1
  %112 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %111) #11
  %113 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 1
  %114 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 1
  %115 = icmp eq %"struct.spvtools::opt::Operand"* %113, %59
  br i1 %115, label %250, label %104

116:                                              ; preds = %12
  %117 = bitcast %"class.std::__1::vector"* %0 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %18, %118
  %120 = sdiv exact i64 %119, 48
  %121 = add nsw i64 %120, %10
  %122 = icmp ugt i64 %121, 384307168202282325
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #13
  unreachable

125:                                              ; preds = %116
  %126 = sub i64 %15, %118
  %127 = sdiv exact i64 %126, 48
  %128 = icmp ult i64 %127, 192153584101141162
  br i1 %128, label %132, label %129

129:                                              ; preds = %125
  %130 = sub i64 %5, %118
  %131 = sdiv exact i64 %130, 48
  br label %139

132:                                              ; preds = %125
  %133 = shl nsw i64 %127, 1
  %134 = icmp ult i64 %133, %121
  %135 = select i1 %134, i64 %121, i64 %133
  %136 = sub i64 %5, %118
  %137 = sdiv exact i64 %136, 48
  %138 = icmp eq i64 %135, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %132, %129
  %140 = phi i64 [ %131, %129 ], [ %137, %132 ]
  %141 = phi i64 [ 384307168202282325, %129 ], [ %135, %132 ]
  %142 = mul i64 %141, 48
  %143 = tail call i8* @_Znwm(i64 %142) #12
  %144 = bitcast i8* %143 to %"struct.spvtools::opt::Operand"*
  br label %145

145:                                              ; preds = %139, %132
  %146 = phi i64 [ %140, %139 ], [ %137, %132 ]
  %147 = phi i64 [ %141, %139 ], [ 0, %132 ]
  %148 = phi %"struct.spvtools::opt::Operand"* [ %144, %139 ], [ null, %132 ]
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %146
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %147
  %151 = ptrtoint %"struct.spvtools::opt::Operand"* %150 to i64
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 %10
  br label %153

153:                                              ; preds = %145, %153
  %154 = phi %"struct.spvtools::opt::Operand"* [ %169, %153 ], [ %149, %145 ]
  %155 = phi %"struct.spvtools::opt::Operand"* [ %170, %153 ], [ %2, %145 ]
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 0
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 0
  %158 = load i32, i32* %157, align 8
  store i32 %158, i32* %156, align 8
  %159 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 1
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %159, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 1
  store i64 0, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 2
  %164 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 3, i64 0
  %165 = bitcast i32** %163 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %164, %"struct.std::__1::aligned_storage<4, 4>::type"** %165, align 8
  %166 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 4
  %167 = bitcast %"class.std::__1::unique_ptr.0"* %166 to i64*
  store i64 0, i64* %167, align 8
  %168 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %159, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %160) #11
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 1
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 1
  %171 = icmp eq %"struct.spvtools::opt::Operand"* %152, %169
  br i1 %171, label %172, label %153

172:                                              ; preds = %153
  %173 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  %174 = icmp eq %"struct.spvtools::opt::Operand"* %173, %1
  br i1 %174, label %194, label %175

175:                                              ; preds = %172, %175
  %176 = phi %"struct.spvtools::opt::Operand"* [ %192, %175 ], [ %149, %172 ]
  %177 = phi %"struct.spvtools::opt::Operand"* [ %178, %175 ], [ %1, %172 ]
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 0
  %180 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 0
  %181 = load i32, i32* %180, align 8
  store i32 %181, i32* %179, align 8
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1, i32 1
  %184 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %182, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %184, align 8
  %185 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 1
  store i64 0, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 2
  %187 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 3, i64 0
  %188 = bitcast i32** %186 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %187, %"struct.std::__1::aligned_storage<4, 4>::type"** %188, align 8
  %189 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 4
  %190 = bitcast %"class.std::__1::unique_ptr.0"* %189 to i64*
  store i64 0, i64* %190, align 8
  %191 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %182, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %183) #11
  %192 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1
  %193 = icmp eq %"struct.spvtools::opt::Operand"* %178, %173
  br i1 %193, label %194, label %175

194:                                              ; preds = %175, %172
  %195 = phi %"struct.spvtools::opt::Operand"* [ %149, %172 ], [ %192, %175 ]
  %196 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %197 = icmp eq %"struct.spvtools::opt::Operand"* %196, %1
  br i1 %197, label %219, label %198

198:                                              ; preds = %194, %198
  %199 = phi %"struct.spvtools::opt::Operand"* [ %215, %198 ], [ %152, %194 ]
  %200 = phi %"struct.spvtools::opt::Operand"* [ %214, %198 ], [ %1, %194 ]
  %201 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 0
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 0
  %203 = load i32, i32* %202, align 8
  store i32 %203, i32* %201, align 8
  %204 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 1
  %206 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %204, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %206, align 8
  %207 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 1
  store i64 0, i64* %207, align 8
  %208 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 2
  %209 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 3, i64 0
  %210 = bitcast i32** %208 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %209, %"struct.std::__1::aligned_storage<4, 4>::type"** %210, align 8
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 4
  %212 = bitcast %"class.std::__1::unique_ptr.0"* %211 to i64*
  store i64 0, i64* %212, align 8
  %213 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %204, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %205) #11
  %214 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 1
  %215 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 1
  %216 = icmp eq %"struct.spvtools::opt::Operand"* %214, %196
  br i1 %216, label %217, label %198

217:                                              ; preds = %198
  %218 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  br label %219

219:                                              ; preds = %194, %217
  %220 = phi %"struct.spvtools::opt::Operand"* [ %218, %217 ], [ %1, %194 ]
  %221 = phi %"struct.spvtools::opt::Operand"* [ %215, %217 ], [ %152, %194 ]
  %222 = ptrtoint %"struct.spvtools::opt::Operand"* %195 to i64
  %223 = ptrtoint %"struct.spvtools::opt::Operand"* %221 to i64
  %224 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  store i64 %222, i64* %117, align 8
  store i64 %223, i64* %22, align 8
  store i64 %151, i64* %14, align 8
  %225 = icmp eq %"struct.spvtools::opt::Operand"* %220, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %219, %244
  %227 = phi %"struct.spvtools::opt::Operand"* [ %228, %244 ], [ %220, %219 ]
  %228 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1
  %229 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %229, align 8
  %230 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %231 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %230, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %230, align 8
  %232 = icmp eq %"class.std::__1::vector.3"* %231, null
  br i1 %232, label %244, label %233

233:                                              ; preds = %226
  %234 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 0
  %235 = load i32*, i32** %234, align 8
  %236 = icmp eq i32* %235, null
  br i1 %236, label %242, label %237

237:                                              ; preds = %233
  %238 = ptrtoint i32* %235 to i64
  %239 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 1
  %240 = bitcast i32** %239 to i64*
  store i64 %238, i64* %240, align 8
  %241 = bitcast i32* %235 to i8*
  tail call void @_ZdlPv(i8* %241) #12
  br label %242

242:                                              ; preds = %237, %233
  %243 = bitcast %"class.std::__1::vector.3"* %231 to i8*
  tail call void @_ZdlPv(i8* %243) #12
  br label %244

244:                                              ; preds = %242, %226
  %245 = icmp eq %"struct.spvtools::opt::Operand"* %228, %224
  br i1 %245, label %246, label %226

246:                                              ; preds = %244, %219
  %247 = icmp eq %"struct.spvtools::opt::Operand"* %224, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = bitcast %"struct.spvtools::opt::Operand"* %224 to i8*
  tail call void @_ZdlPv(i8* %249) #12
  br label %250

250:                                              ; preds = %104, %248, %246, %51, %102, %4
  %251 = phi %"struct.spvtools::opt::Operand"* [ %1, %4 ], [ %1, %102 ], [ %1, %51 ], [ %149, %246 ], [ %149, %248 ], [ %1, %104 ]
  ret %"struct.spvtools::opt::Operand"* %251
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #11
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #13
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #12
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #11
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #3 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node"**
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node"* %49) #11
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #3 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.918"**
  %4 = load %"class.std::__1::function.918"*, %"class.std::__1::function.918"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.918", %"class.std::__1::function.918"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.918", %"class.std::__1::function.918"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #11
  ret i1 true
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @"_ZNSt3__110__function16__policy_invokerIFjjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder23FoldInstructionInternalEPNS7_11InstructionEE3$_0S2_EEEEjPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, i32) #0 align 2 {
  ret i32 %1
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS8_11InstructionENS_8functionIFjjEEEE3$_1S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #3 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.975"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.975"*, %"class.std::__1::__function::__default_alloc_func.975"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.975", %"class.std::__1::__function::__default_alloc_func.975"* %4, i64 0, i32 0, i32 3
  %6 = load %"class.std::__1::function.910"*, %"class.std::__1::function.910"** %5, align 8
  %7 = load i32, i32* %1, align 4
  %8 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %6, i64 0, i32 0, i32 1, i32 0
  %9 = load i32 (%"union.std::__1::__function::__policy_storage"*, i32)*, i32 (%"union.std::__1::__function::__policy_storage"*, i32)** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::function.910", %"class.std::__1::function.910"* %6, i64 0, i32 0, i32 0
  %11 = tail call i32 %9(%"union.std::__1::__function::__policy_storage"* %10, i32 %7) #11
  %12 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.975", %"class.std::__1::__function::__default_alloc_func.975"* %4, i64 0, i32 0, i32 2
  %13 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %12, align 8
  %14 = zext i32 %11 to i64
  %15 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %66, label %18

18:                                               ; preds = %2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %16) #11, !range !8
  %20 = icmp ugt i64 %19, 1
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = add i64 %16, 4294967295
  %23 = and i64 %22, %14
  br label %28

24:                                               ; preds = %18
  %25 = icmp ugt i64 %16, %14
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = urem i64 %14, %16
  br label %28

28:                                               ; preds = %26, %24, %21
  %29 = phi i64 [ %23, %21 ], [ %27, %26 ], [ %14, %24 ]
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %31, i64 %29
  %33 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.408"* %33, null
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %33, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.408"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %35
  %40 = add i64 %16, -1
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi %"struct.std::__1::__hash_node_base.408"* [ %37, %39 ], [ %64, %62 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %42, i64 1
  %44 = bitcast %"struct.std::__1::__hash_node_base.408"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, %14
  br i1 %46, label %57, label %47

47:                                               ; preds = %41
  br i1 %20, label %50, label %48

48:                                               ; preds = %47
  %49 = and i64 %45, %40
  br label %54

50:                                               ; preds = %47
  %51 = icmp ult i64 %45, %16
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = urem i64 %45, %16
  br label %54

54:                                               ; preds = %52, %50, %48
  %55 = phi i64 [ %49, %48 ], [ %53, %52 ], [ %45, %50 ]
  %56 = icmp eq i64 %55, %29
  br i1 %56, label %62, label %66

57:                                               ; preds = %41
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %42, i64 2
  %59 = bitcast %"struct.std::__1::__hash_node_base.408"* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, %11
  br i1 %61, label %69, label %62

62:                                               ; preds = %57, %54
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %42, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.408"* %64, null
  br i1 %65, label %66, label %41

66:                                               ; preds = %62, %54, %35, %28, %2
  %67 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.975", %"class.std::__1::__function::__default_alloc_func.975"* %4, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::vector.842"*, %"class.std::__1::vector.842"** %67, align 8
  br label %77

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %42, i64 3
  %71 = bitcast %"struct.std::__1::__hash_node_base.408"* %70 to %"class.spvtools::opt::analysis::Constant"**
  %72 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %71, align 8
  %73 = ptrtoint %"class.spvtools::opt::analysis::Constant"* %72 to i64
  %74 = icmp eq %"class.spvtools::opt::analysis::Constant"* %72, null
  %75 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.975", %"class.std::__1::__function::__default_alloc_func.975"* %4, i64 0, i32 0, i32 0
  %76 = load %"class.std::__1::vector.842"*, %"class.std::__1::vector.842"** %75, align 8
  br i1 %74, label %77, label %150

77:                                               ; preds = %69, %66
  %78 = phi %"class.std::__1::vector.842"* [ %68, %66 ], [ %76, %69 ]
  %79 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %78, i64 0, i32 0, i32 1
  %80 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %78, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %81, align 8
  %83 = icmp ult %"class.spvtools::opt::analysis::Constant"** %80, %82
  %84 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %82 to i64
  br i1 %83, label %85, label %90

85:                                               ; preds = %77
  %86 = bitcast %"class.spvtools::opt::analysis::Constant"** %80 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %80, i64 1
  %88 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %87 to i64
  %89 = bitcast %"class.spvtools::opt::analysis::Constant"*** %79 to i64*
  store i64 %88, i64* %89, align 8
  br label %147

90:                                               ; preds = %77
  %91 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %80 to i64
  %92 = bitcast %"class.spvtools::opt::analysis::Constant"*** %79 to i64*
  %93 = bitcast %"class.std::__1::vector.842"* %78 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %91, %94
  %96 = ashr exact i64 %95, 3
  %97 = add nsw i64 %96, 1
  %98 = icmp ugt i64 %97, 2305843009213693951
  br i1 %98, label %99, label %101

99:                                               ; preds = %90
  %100 = bitcast %"class.std::__1::vector.842"* %78 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %100) #13
  unreachable

101:                                              ; preds = %90
  %102 = bitcast %"class.spvtools::opt::analysis::Constant"*** %81 to i64*
  %103 = sub i64 %84, %94
  %104 = ashr exact i64 %103, 3
  %105 = icmp ult i64 %104, 1152921504606846975
  br i1 %105, label %106, label %114

106:                                              ; preds = %101
  %107 = ashr exact i64 %103, 2
  %108 = icmp ult i64 %107, %97
  %109 = select i1 %108, i64 %97, i64 %107
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %106
  %112 = icmp ugt i64 %109, 2305843009213693951
  br i1 %112, label %113, label %114

113:                                              ; preds = %111
  tail call void @abort() #13
  unreachable

114:                                              ; preds = %111, %101
  %115 = phi i64 [ %109, %111 ], [ 2305843009213693951, %101 ]
  %116 = shl i64 %115, 3
  %117 = tail call i8* @_Znwm(i64 %116) #12
  %118 = bitcast i8* %117 to %"class.spvtools::opt::analysis::Constant"**
  br label %119

119:                                              ; preds = %114, %106
  %120 = phi i64 [ %115, %114 ], [ 0, %106 ]
  %121 = phi %"class.spvtools::opt::analysis::Constant"** [ %118, %114 ], [ null, %106 ]
  %122 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %121, i64 %96
  %123 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %121, i64 %120
  %124 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %123 to i64
  %125 = bitcast %"class.spvtools::opt::analysis::Constant"** %122 to i64*
  store i64 0, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %122, i64 1
  %127 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %126 to i64
  %128 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %78, i64 0, i32 0, i32 0
  %129 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %128, align 8
  %130 = load i64, i64* %92, align 8
  %131 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %129 to i64
  %132 = sub i64 %130, %131
  %133 = ashr exact i64 %132, 3
  %134 = sub nsw i64 0, %133
  %135 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %122, i64 %134
  %136 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %135 to i64
  %137 = icmp sgt i64 %132, 0
  br i1 %137, label %138, label %142

138:                                              ; preds = %119
  %139 = bitcast %"class.spvtools::opt::analysis::Constant"** %135 to i8*
  %140 = bitcast %"class.spvtools::opt::analysis::Constant"** %129 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 %132, i1 false) #11
  %141 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %128, align 8
  br label %142

142:                                              ; preds = %138, %119
  %143 = phi %"class.spvtools::opt::analysis::Constant"** [ %129, %119 ], [ %141, %138 ]
  store i64 %136, i64* %93, align 8
  store i64 %127, i64* %92, align 8
  store i64 %124, i64* %102, align 8
  %144 = icmp eq %"class.spvtools::opt::analysis::Constant"** %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %142
  %146 = bitcast %"class.spvtools::opt::analysis::Constant"** %143 to i8*
  tail call void @_ZdlPv(i8* %146) #12
  br label %147

147:                                              ; preds = %145, %142, %85
  %148 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.975", %"class.std::__1::__function::__default_alloc_func.975"* %4, i64 0, i32 0, i32 1
  %149 = load i8*, i8** %148, align 8
  store i8 1, i8* %149, align 1
  br label %219

150:                                              ; preds = %69
  %151 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %76, i64 0, i32 0, i32 1
  %152 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %151, align 8
  %153 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %76, i64 0, i32 0, i32 2, i32 0, i32 0
  %154 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %153, align 8
  %155 = icmp eq %"class.spvtools::opt::analysis::Constant"** %152, %154
  %156 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %154 to i64
  br i1 %155, label %162, label %157

157:                                              ; preds = %150
  %158 = bitcast %"class.spvtools::opt::analysis::Constant"** %152 to i64*
  store i64 %73, i64* %158, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %152, i64 1
  %160 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %159 to i64
  %161 = bitcast %"class.spvtools::opt::analysis::Constant"*** %151 to i64*
  store i64 %160, i64* %161, align 8
  br label %219

162:                                              ; preds = %150
  %163 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %152 to i64
  %164 = bitcast %"class.spvtools::opt::analysis::Constant"*** %151 to i64*
  %165 = bitcast %"class.std::__1::vector.842"* %76 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %163, %166
  %168 = ashr exact i64 %167, 3
  %169 = add nsw i64 %168, 1
  %170 = icmp ugt i64 %169, 2305843009213693951
  br i1 %170, label %171, label %173

171:                                              ; preds = %162
  %172 = bitcast %"class.std::__1::vector.842"* %76 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %172) #13
  unreachable

173:                                              ; preds = %162
  %174 = bitcast %"class.spvtools::opt::analysis::Constant"*** %153 to i64*
  %175 = sub i64 %156, %166
  %176 = ashr exact i64 %175, 3
  %177 = icmp ult i64 %176, 1152921504606846975
  br i1 %177, label %178, label %186

178:                                              ; preds = %173
  %179 = ashr exact i64 %175, 2
  %180 = icmp ult i64 %179, %169
  %181 = select i1 %180, i64 %169, i64 %179
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %191, label %183

183:                                              ; preds = %178
  %184 = icmp ugt i64 %181, 2305843009213693951
  br i1 %184, label %185, label %186

185:                                              ; preds = %183
  tail call void @abort() #13
  unreachable

186:                                              ; preds = %183, %173
  %187 = phi i64 [ %181, %183 ], [ 2305843009213693951, %173 ]
  %188 = shl i64 %187, 3
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to %"class.spvtools::opt::analysis::Constant"**
  br label %191

191:                                              ; preds = %186, %178
  %192 = phi i64 [ %187, %186 ], [ 0, %178 ]
  %193 = phi %"class.spvtools::opt::analysis::Constant"** [ %190, %186 ], [ null, %178 ]
  %194 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %193, i64 %168
  %195 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %193, i64 %192
  %196 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %195 to i64
  %197 = bitcast %"class.spvtools::opt::analysis::Constant"** %194 to i64*
  store i64 %73, i64* %197, align 8
  %198 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %194, i64 1
  %199 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %198 to i64
  %200 = getelementptr inbounds %"class.std::__1::vector.842", %"class.std::__1::vector.842"* %76, i64 0, i32 0, i32 0
  %201 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %200, align 8
  %202 = load i64, i64* %164, align 8
  %203 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %201 to i64
  %204 = sub i64 %202, %203
  %205 = ashr exact i64 %204, 3
  %206 = sub nsw i64 0, %205
  %207 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %194, i64 %206
  %208 = ptrtoint %"class.spvtools::opt::analysis::Constant"** %207 to i64
  %209 = icmp sgt i64 %204, 0
  br i1 %209, label %210, label %214

210:                                              ; preds = %191
  %211 = bitcast %"class.spvtools::opt::analysis::Constant"** %207 to i8*
  %212 = bitcast %"class.spvtools::opt::analysis::Constant"** %201 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 %204, i1 false) #11
  %213 = load %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"*** %200, align 8
  br label %214

214:                                              ; preds = %210, %191
  %215 = phi %"class.spvtools::opt::analysis::Constant"** [ %201, %191 ], [ %213, %210 ]
  store i64 %208, i64* %165, align 8
  store i64 %199, i64* %164, align 8
  store i64 %196, i64* %174, align 8
  %216 = icmp eq %"class.spvtools::opt::analysis::Constant"** %215, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %214
  %218 = bitcast %"class.spvtools::opt::analysis::Constant"** %215 to i8*
  tail call void @_ZdlPv(i8* %218) #12
  br label %219

219:                                              ; preds = %147, %157, %214, %217
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS5_11InstructionENS_8functionIFjjEEEE3$_1FvPjEEEEEPvPKv"(i8* nocapture readonly) #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #12, !noalias !9
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS5_11InstructionENS_8functionIFjjEEEE3$_1FvPjEEEEEvPv"(i8*) #3 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #10

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!6 = distinct !{!6, !7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS5_11InstructionENS_8functionIFjjEEEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS5_11InstructionENS_8functionIFjjEEEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!8 = !{i64 0, i64 65}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!12 = distinct !{!12, !13, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS5_11InstructionENS_8functionIFjjEEEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK8spvtools3opt17InstructionFolder25FoldInstructionToConstantEPNS5_11InstructionENS_8functionIFjjEEEE3$_1FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
