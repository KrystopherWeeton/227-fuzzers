; ModuleID = '../../gpu/ipc/command_buffer_task_executor.cc'
source_filename = "../../gpu/ipc/command_buffer_task_executor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.gpu::CommandBufferTaskExecutor" = type { i32 (...)**, %"struct.gpu::GpuPreferences", %"struct.gpu::GpuFeatureInfo", %"class.gpu::SyncPointManager"*, %"class.gpu::MailboxManager"*, %"class.std::__1::unique_ptr", %"class.gl::GLSurfaceFormat", %"class.std::__1::unique_ptr.37", %"class.gpu::gles2::ProgramCache"*, %"class.gpu::gles2::ImageManager", %"class.gpu::ServiceDiscardableManager", %"class.gpu::PassthroughDiscardableManager", %"class.gpu::gles2::ShaderTranslatorCache", %"class.gpu::gles2::FramebufferCompletenessCache", %"class.gpu::SharedImageManager"*, %"class.gpu::GpuProcessActivityFlags" }
%"struct.gpu::GpuPreferences" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector", i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.1", %"class.std::__1::vector.1", i8, i8, [2 x i8], i32, i8, i8, [6 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gfx::BufferUsageAndFormat"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"struct.gpu::GpuFeatureInfo" = type { [10 x i32], %"class.std::__1::vector.13", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.20", %"class.std::__1::vector.20", %"class.std::__1::vector.27" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i32*, i32*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i32* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { i32*, i32*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i32* }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { i32*, i32*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i32* }
%"class.gpu::SyncPointManager" = type opaque
%"class.gpu::MailboxManager" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.gpu::gles2::Outputter"* }
%"class.gpu::gles2::Outputter" = type { i32 (...)** }
%"class.gl::GLSurfaceFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.gpu::gles2::ProgramCache"* }
%"class.gpu::gles2::ProgramCache" = type { i32 (...)**, %"class.base::RepeatingCallback", i64, %"class.std::__1::unordered_map", %"class.std::__1::unordered_set" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.41", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.57", [4 x i8] }>
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64 }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { float }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.60" }
%"class.std::__1::__hash_table.60" = type <{ %"class.std::__1::unique_ptr.61", %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.78", [4 x i8] }>
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63", %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base.64"** }
%"struct.std::__1::__hash_node_base.64" = type { %"struct.std::__1::__hash_node_base.64"* }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.std::__1::__bucket_list_deallocator.66" }
%"class.std::__1::__bucket_list_deallocator.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::__hash_node_base.64" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.gpu::gles2::ImageManager" = type { %"class.std::__1::unordered_map.84" }
%"class.std::__1::unordered_map.84" = type { %"class.std::__1::__hash_table.85" }
%"class.std::__1::__hash_table.85" = type <{ %"class.std::__1::unique_ptr.86", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.106", [4 x i8] }>
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88", %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::__hash_node_base.89"** }
%"struct.std::__1::__hash_node_base.89" = type { %"struct.std::__1::__hash_node_base.89"* }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::__bucket_list_deallocator.91" }
%"class.std::__1::__bucket_list_deallocator.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base.89" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.gpu::ServiceDiscardableManager" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.base::MRUCache", i64, i64 }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.112" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.gpu::PassthroughDiscardableManager" = type { %"class.base::MRUCache.123", i64, i64 }
%"class.base::MRUCache.123" = type { %"class.base::MRUCacheBase.124" }
%"class.base::MRUCacheBase.124" = type { i32 (...)**, %"class.std::__1::list.125", %"class.std::__1::map.132", i64 }
%"class.std::__1::list.125" = type { %"class.std::__1::__list_imp.126" }
%"class.std::__1::__list_imp.126" = type { %"struct.std::__1::__list_node_base.127", %"class.std::__1::__compressed_pair.128" }
%"struct.std::__1::__list_node_base.127" = type { %"struct.std::__1::__list_node_base.127"*, %"struct.std::__1::__list_node_base.127"* }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::map.132" = type { %"class.std::__1::__tree.133" }
%"class.std::__1::__tree.133" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.gpu::gles2::ShaderTranslatorCache" = type { %"class.gpu::gles2::ShaderTranslator::DestructionObserver", %"struct.gpu::GpuPreferences", %"class.std::__1::map.142" }
%"class.gpu::gles2::ShaderTranslator::DestructionObserver" = type { i32 (...)** }
%"class.std::__1::map.142" = type { %"class.std::__1::__tree.143" }
%"class.std::__1::__tree.143" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.gpu::gles2::FramebufferCompletenessCache" = type { %"class.std::__1::unordered_set" }
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional", %"class.base::internal::flat_tree", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.153 }
%union.anon.153 = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.154" }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"class.std::__1::unique_ptr.156"*, %"class.std::__1::unique_ptr.156"*, %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::unique_ptr.156" = type opaque
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::unique_ptr.156"* }
%"class.gpu::GpuProcessActivityFlags" = type { %"class.gpu::ActivityFlagsBase" }
%"class.gpu::ActivityFlagsBase" = type { %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.162" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i8* }
%"class.gpu::gles2::TraceOutputter" = type { %"class.gpu::gles2::Outputter", %"class.base::Thread", i32, i64, i64, [3 x %"class.std::__1::stack"] }
%"class.base::Thread" = type <{ %"class.base::PlatformThread::Delegate", i8, i8, i8, [5 x i8], %"class.base::Lock", %"class.base::PlatformThreadHandle", %"class.base::Lock", i32, [4 x i8], %"class.base::WaitableEvent", %"class.std::__1::unique_ptr.178", %"class.base::RunLoop"*, i32, [4 x i8], %"class.std::__1::basic_string", %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.base::Thread::Delegate"* }
%"class.base::Thread::Delegate" = type { i32 (...)** }
%"class.base::RunLoop" = type opaque
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.169, i8, [7 x i8] }>
%class.scoped_refptr.169 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.170", %"class.base::Lock", i8, i8, %"class.std::__1::list.171" }
%"class.base::RefCountedThreadSafe.170" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list.171" = type { %"class.std::__1::__list_imp.172" }
%"class.std::__1::__list_imp.172" = type { %"struct.std::__1::__list_node_base.173", %"class.std::__1::__compressed_pair.174" }
%"struct.std::__1::__list_node_base.173" = type { %"struct.std::__1::__list_node_base.173"*, %"struct.std::__1::__list_node_base.173"* }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { i64*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gpu::gles2::MemoryProgramCache" = type { %"class.gpu::gles2::ProgramCache", i8, i8, i8, i64, %"class.base::MRUCache.190", %"class.gpu::GpuProcessActivityFlags"* }
%"class.base::MRUCache.190" = type { %"class.base::MRUCacheBase.191" }
%"class.base::MRUCacheBase.191" = type { i32 (...)**, %"class.std::__1::list.192", %"class.std::__1::map.199", i64 }
%"class.std::__1::list.192" = type { %"class.std::__1::__list_imp.193" }
%"class.std::__1::__list_imp.193" = type { %"struct.std::__1::__list_node_base.194", %"class.std::__1::__compressed_pair.195" }
%"struct.std::__1::__list_node_base.194" = type { %"struct.std::__1::__list_node_base.194"*, %"struct.std::__1::__list_node_base.194"* }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::map.199" = type { %"class.std::__1::__tree.200" }
%"class.std::__1::__tree.200" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.46" }

@_ZTVN3gpu25CommandBufferTaskExecutorE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::CommandBufferTaskExecutor"*)* @_ZN3gpu25CommandBufferTaskExecutorD2Ev to i8*), i8* bitcast (void (%"class.gpu::CommandBufferTaskExecutor"*)* @_ZN3gpu25CommandBufferTaskExecutorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"InProcessCommandBuffer Trace\00", align 1
@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8

@_ZN3gpu25CommandBufferTaskExecutorD1Ev = hidden unnamed_addr alias void (%"class.gpu::CommandBufferTaskExecutor"*), void (%"class.gpu::CommandBufferTaskExecutor"*)* @_ZN3gpu25CommandBufferTaskExecutorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu25CommandBufferTaskExecutorC2ERKNS_14GpuPreferencesERKNS_14GpuFeatureInfoEPNS_16SyncPointManagerEPNS_14MailboxManagerEN2gl15GLSurfaceFormatEPNS_18SharedImageManagerEPNS_5gles212ProgramCacheE(%"class.gpu::CommandBufferTaskExecutor"*, %"struct.gpu::GpuPreferences"* dereferenceable(184), %"struct.gpu::GpuFeatureInfo"* dereferenceable(184), %"class.gpu::SyncPointManager"*, %"class.gpu::MailboxManager"*, %"class.gl::GLSurfaceFormat"*, %"class.gpu::SharedImageManager"*, %"class.gpu::gles2::ProgramCache"*) unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu25CommandBufferTaskExecutorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 1
  tail call void @_ZN3gpu14GpuPreferencesC1ERKS0_(%"struct.gpu::GpuPreferences"* %10, %"struct.gpu::GpuPreferences"* dereferenceable(184) %1) #8
  %11 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 2
  tail call void @_ZN3gpu14GpuFeatureInfoC1ERKS0_(%"struct.gpu::GpuFeatureInfo"* %11, %"struct.gpu::GpuFeatureInfo"* dereferenceable(184) %2) #8
  %12 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 3
  store %"class.gpu::SyncPointManager"* %3, %"class.gpu::SyncPointManager"** %12, align 8
  %13 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 4
  store %"class.gpu::MailboxManager"* %4, %"class.gpu::MailboxManager"** %13, align 8
  %14 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 5
  %15 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 6
  tail call void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"* %16, %"class.gl::GLSurfaceFormat"* dereferenceable(32) %5) #8
  %17 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 7
  %18 = bitcast %"class.std::__1::unique_ptr.37"* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 8
  store %"class.gpu::gles2::ProgramCache"* %7, %"class.gpu::gles2::ProgramCache"** %19, align 8
  %20 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 9
  tail call void @_ZN3gpu5gles212ImageManagerC1Ev(%"class.gpu::gles2::ImageManager"* %20) #8
  %21 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 10
  tail call void @_ZN3gpu25ServiceDiscardableManagerC1ERKNS_14GpuPreferencesE(%"class.gpu::ServiceDiscardableManager"* %21, %"struct.gpu::GpuPreferences"* dereferenceable(184) %10) #8
  %22 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 11
  tail call void @_ZN3gpu29PassthroughDiscardableManagerC1ERKNS_14GpuPreferencesE(%"class.gpu::PassthroughDiscardableManager"* %22, %"struct.gpu::GpuPreferences"* dereferenceable(184) %10) #8
  %23 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 12
  tail call void @_ZN3gpu5gles221ShaderTranslatorCacheC1ERKNS_14GpuPreferencesE(%"class.gpu::gles2::ShaderTranslatorCache"* %23, %"struct.gpu::GpuPreferences"* dereferenceable(184) %10) #8
  %24 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 13
  tail call void @_ZN3gpu5gles228FramebufferCompletenessCacheC1Ev(%"class.gpu::gles2::FramebufferCompletenessCache"* %24) #8
  %25 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 14
  store %"class.gpu::SharedImageManager"* %6, %"class.gpu::SharedImageManager"** %25, align 8
  %26 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 15
  tail call void @_ZN3gpu23GpuProcessActivityFlagsC1Ev(%"class.gpu::GpuProcessActivityFlags"* %26) #8
  ret void
}

declare void @_ZN3gpu14GpuPreferencesC1ERKS0_(%"struct.gpu::GpuPreferences"*, %"struct.gpu::GpuPreferences"* dereferenceable(184)) unnamed_addr #1

declare void @_ZN3gpu14GpuFeatureInfoC1ERKS0_(%"struct.gpu::GpuFeatureInfo"*, %"struct.gpu::GpuFeatureInfo"* dereferenceable(184)) unnamed_addr #1

declare void @_ZN2gl15GLSurfaceFormatC1ERKS0_(%"class.gl::GLSurfaceFormat"*, %"class.gl::GLSurfaceFormat"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN3gpu5gles212ImageManagerC1Ev(%"class.gpu::gles2::ImageManager"*) unnamed_addr #1

declare void @_ZN3gpu25ServiceDiscardableManagerC1ERKNS_14GpuPreferencesE(%"class.gpu::ServiceDiscardableManager"*, %"struct.gpu::GpuPreferences"* dereferenceable(184)) unnamed_addr #1

declare void @_ZN3gpu29PassthroughDiscardableManagerC1ERKNS_14GpuPreferencesE(%"class.gpu::PassthroughDiscardableManager"*, %"struct.gpu::GpuPreferences"* dereferenceable(184)) unnamed_addr #1

declare void @_ZN3gpu5gles221ShaderTranslatorCacheC1ERKNS_14GpuPreferencesE(%"class.gpu::gles2::ShaderTranslatorCache"*, %"struct.gpu::GpuPreferences"* dereferenceable(184)) unnamed_addr #1

declare void @_ZN3gpu5gles228FramebufferCompletenessCacheC1Ev(%"class.gpu::gles2::FramebufferCompletenessCache"*) unnamed_addr #1

declare void @_ZN3gpu23GpuProcessActivityFlagsC1Ev(%"class.gpu::GpuProcessActivityFlags"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu25CommandBufferTaskExecutorD2Ev(%"class.gpu::CommandBufferTaskExecutor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu25CommandBufferTaskExecutorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 15, i32 0
  tail call void @_ZN3gpu17ActivityFlagsBaseD2Ev(%"class.gpu::ActivityFlagsBase"* %3) #8
  %4 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 13
  tail call void @_ZN3gpu5gles228FramebufferCompletenessCacheD1Ev(%"class.gpu::gles2::FramebufferCompletenessCache"* %4) #8
  %5 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 12
  tail call void @_ZN3gpu5gles221ShaderTranslatorCacheD1Ev(%"class.gpu::gles2::ShaderTranslatorCache"* %5) #8
  %6 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 11
  tail call void @_ZN3gpu29PassthroughDiscardableManagerD1Ev(%"class.gpu::PassthroughDiscardableManager"* %6) #8
  %7 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 10
  tail call void @_ZN3gpu25ServiceDiscardableManagerD1Ev(%"class.gpu::ServiceDiscardableManager"* %7) #8
  %8 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 9
  tail call void @_ZN3gpu5gles212ImageManagerD1Ev(%"class.gpu::gles2::ImageManager"* %8) #8
  %9 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %"class.gpu::gles2::ProgramCache"*, %"class.gpu::gles2::ProgramCache"** %9, align 8
  store %"class.gpu::gles2::ProgramCache"* null, %"class.gpu::gles2::ProgramCache"** %9, align 8
  %11 = icmp eq %"class.gpu::gles2::ProgramCache"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.gpu::gles2::ProgramCache"* %10 to void (%"class.gpu::gles2::ProgramCache"*)***
  %14 = load void (%"class.gpu::gles2::ProgramCache"*)**, void (%"class.gpu::gles2::ProgramCache"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gpu::gles2::ProgramCache"*)*, void (%"class.gpu::gles2::ProgramCache"*)** %14, i64 1
  %16 = load void (%"class.gpu::gles2::ProgramCache"*)*, void (%"class.gpu::gles2::ProgramCache"*)** %15, align 8
  tail call void %16(%"class.gpu::gles2::ProgramCache"* nonnull %10) #8
  br label %17

17:                                               ; preds = %1, %12
  %18 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 6
  tail call void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"* %18) #8
  %19 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %"class.gpu::gles2::Outputter"*, %"class.gpu::gles2::Outputter"** %19, align 8
  store %"class.gpu::gles2::Outputter"* null, %"class.gpu::gles2::Outputter"** %19, align 8
  %21 = icmp eq %"class.gpu::gles2::Outputter"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.gpu::gles2::Outputter"* %20 to void (%"class.gpu::gles2::Outputter"*)***
  %24 = load void (%"class.gpu::gles2::Outputter"*)**, void (%"class.gpu::gles2::Outputter"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.gpu::gles2::Outputter"*)*, void (%"class.gpu::gles2::Outputter"*)** %24, i64 1
  %26 = load void (%"class.gpu::gles2::Outputter"*)*, void (%"class.gpu::gles2::Outputter"*)** %25, align 8
  tail call void %26(%"class.gpu::gles2::Outputter"* nonnull %20) #8
  br label %27

27:                                               ; preds = %17, %22
  %28 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 2
  tail call void @_ZN3gpu14GpuFeatureInfoD1Ev(%"struct.gpu::GpuFeatureInfo"* %28) #8
  %29 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 1
  tail call void @_ZN3gpu14GpuPreferencesD1Ev(%"struct.gpu::GpuPreferences"* %29) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gpu17ActivityFlagsBaseD2Ev(%"class.gpu::ActivityFlagsBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu5gles228FramebufferCompletenessCacheD1Ev(%"class.gpu::gles2::FramebufferCompletenessCache"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu5gles221ShaderTranslatorCacheD1Ev(%"class.gpu::gles2::ShaderTranslatorCache"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu29PassthroughDiscardableManagerD1Ev(%"class.gpu::PassthroughDiscardableManager"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu25ServiceDiscardableManagerD1Ev(%"class.gpu::ServiceDiscardableManager"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu5gles212ImageManagerD1Ev(%"class.gpu::gles2::ImageManager"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl15GLSurfaceFormatD1Ev(%"class.gl::GLSurfaceFormat"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu14GpuFeatureInfoD1Ev(%"struct.gpu::GpuFeatureInfo"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu14GpuPreferencesD1Ev(%"struct.gpu::GpuPreferences"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3gpu25CommandBufferTaskExecutorD0Ev(%"class.gpu::CommandBufferTaskExecutor"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::gles2::Outputter"* @_ZN3gpu25CommandBufferTaskExecutor9outputterEv(%"class.gpu::CommandBufferTaskExecutor"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::gles2::Outputter"*, %"class.gpu::gles2::Outputter"** %3, align 8
  %5 = icmp eq %"class.gpu::gles2::Outputter"* %4, null
  br i1 %5, label %6, label %32

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 328) #10
  %8 = bitcast i8* %7 to %"class.gpu::gles2::TraceOutputter"*
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8
  %10 = tail call i8* @_Znwm(i64 32) #10
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %13, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i64 28, i1 false) #8
  %15 = getelementptr inbounds i8, i8* %10, i64 28
  store i8 0, i8* %15, align 1
  call void @_ZN3gpu5gles214TraceOutputterC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.gpu::gles2::TraceOutputter"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #8
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %6
  %20 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %6, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8
  %22 = load %"class.gpu::gles2::Outputter"*, %"class.gpu::gles2::Outputter"** %3, align 8
  %23 = bitcast %"class.gpu::gles2::Outputter"** %3 to i8**
  store i8* %7, i8** %23, align 8
  %24 = icmp eq %"class.gpu::gles2::Outputter"* %22, null
  %25 = bitcast i8* %7 to %"class.gpu::gles2::Outputter"*
  br i1 %24, label %32, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.gpu::gles2::Outputter"* %22 to void (%"class.gpu::gles2::Outputter"*)***
  %28 = load void (%"class.gpu::gles2::Outputter"*)**, void (%"class.gpu::gles2::Outputter"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gpu::gles2::Outputter"*)*, void (%"class.gpu::gles2::Outputter"*)** %28, i64 1
  %30 = load void (%"class.gpu::gles2::Outputter"*)*, void (%"class.gpu::gles2::Outputter"*)** %29, align 8
  call void %30(%"class.gpu::gles2::Outputter"* nonnull %22) #8
  %31 = load %"class.gpu::gles2::Outputter"*, %"class.gpu::gles2::Outputter"** %3, align 8
  br label %32

32:                                               ; preds = %1, %21, %26
  %33 = phi %"class.gpu::gles2::Outputter"* [ %4, %1 ], [ %25, %21 ], [ %31, %26 ]
  ret %"class.gpu::gles2::Outputter"* %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::gles2::ProgramCache"* @_ZN3gpu25CommandBufferTaskExecutor13program_cacheEv(%"class.gpu::CommandBufferTaskExecutor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 8
  %3 = load %"class.gpu::gles2::ProgramCache"*, %"class.gpu::gles2::ProgramCache"** %2, align 8
  %4 = icmp eq %"class.gpu::gles2::ProgramCache"* %3, null
  br i1 %4, label %5, label %62

5:                                                ; preds = %1
  %6 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %7 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %6, i64 0, i32 0
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to %"struct.gl::DriverGL"**
  %11 = load %"struct.gl::DriverGL"*, %"struct.gl::DriverGL"** %10, align 8
  %12 = getelementptr inbounds %"struct.gl::DriverGL", %"struct.gl::DriverGL"* %11, i64 0, i32 1, i32 26
  %13 = load i8, i8* %12, align 2, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %25

15:                                               ; preds = %5
  %16 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %17 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %16, i64 0, i32 0
  %18 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %17) #8
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = bitcast i8* %19 to %"struct.gl::DriverGL"**
  %21 = load %"struct.gl::DriverGL"*, %"struct.gl::DriverGL"** %20, align 8
  %22 = getelementptr inbounds %"struct.gl::DriverGL", %"struct.gl::DriverGL"* %21, i64 0, i32 1, i32 95
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %62, label %25

25:                                               ; preds = %15, %5
  %26 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 1, i32 19
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %62

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 1, i32 26
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 2
  %35 = tail call zeroext i1 @_ZNK3gpu14GpuFeatureInfo19IsWorkaroundEnabledEi(%"struct.gpu::GpuFeatureInfo"* %34, i32 51) #8
  br label %36

36:                                               ; preds = %29, %33
  %37 = phi i1 [ true, %29 ], [ %35, %33 ]
  %38 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 1, i32 25
  %39 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 2
  %40 = tail call zeroext i1 @_ZNK3gpu14GpuFeatureInfo19IsWorkaroundEnabledEi(%"struct.gpu::GpuFeatureInfo"* %39, i32 50) #8
  %41 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 15
  %42 = tail call i8* @_Znwm(i64 192) #10
  %43 = bitcast i8* %42 to %"class.gpu::gles2::MemoryProgramCache"*
  %44 = load i32, i32* %38, align 4
  %45 = zext i32 %44 to i64
  tail call void @_ZN3gpu5gles218MemoryProgramCacheC1EmbbPNS_23GpuProcessActivityFlagsE(%"class.gpu::gles2::MemoryProgramCache"* nonnull %43, i64 %45, i1 zeroext %37, i1 zeroext %40, %"class.gpu::GpuProcessActivityFlags"* %41) #8
  %46 = getelementptr inbounds %"class.gpu::CommandBufferTaskExecutor", %"class.gpu::CommandBufferTaskExecutor"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %47 = load %"class.gpu::gles2::ProgramCache"*, %"class.gpu::gles2::ProgramCache"** %46, align 8
  %48 = bitcast %"class.gpu::gles2::ProgramCache"** %46 to i8**
  store i8* %42, i8** %48, align 8
  %49 = icmp eq %"class.gpu::gles2::ProgramCache"* %47, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %36
  %51 = ptrtoint i8* %42 to i64
  br label %59

52:                                               ; preds = %36
  %53 = bitcast %"class.gpu::gles2::ProgramCache"* %47 to void (%"class.gpu::gles2::ProgramCache"*)***
  %54 = load void (%"class.gpu::gles2::ProgramCache"*)**, void (%"class.gpu::gles2::ProgramCache"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.gpu::gles2::ProgramCache"*)*, void (%"class.gpu::gles2::ProgramCache"*)** %54, i64 1
  %56 = load void (%"class.gpu::gles2::ProgramCache"*)*, void (%"class.gpu::gles2::ProgramCache"*)** %55, align 8
  tail call void %56(%"class.gpu::gles2::ProgramCache"* nonnull %47) #8
  %57 = bitcast %"class.gpu::gles2::ProgramCache"** %46 to i64*
  %58 = load i64, i64* %57, align 8
  br label %59

59:                                               ; preds = %50, %52
  %60 = phi i64 [ %58, %52 ], [ %51, %50 ]
  %61 = bitcast %"class.gpu::gles2::ProgramCache"** %2 to i64*
  store i64 %60, i64* %61, align 8
  br label %62

62:                                               ; preds = %25, %15, %1, %59
  %63 = load %"class.gpu::gles2::ProgramCache"*, %"class.gpu::gles2::ProgramCache"** %2, align 8
  ret %"class.gpu::gles2::ProgramCache"* %63
}

declare zeroext i1 @_ZNK3gpu14GpuFeatureInfo19IsWorkaroundEnabledEi(%"struct.gpu::GpuFeatureInfo"*, i32) local_unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN3gpu5gles214TraceOutputterC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.gpu::gles2::TraceOutputter"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN3gpu5gles218MemoryProgramCacheC1EmbbPNS_23GpuProcessActivityFlagsE(%"class.gpu::gles2::MemoryProgramCache"*, i64, i1 zeroext, i1 zeroext, %"class.gpu::GpuProcessActivityFlags"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
