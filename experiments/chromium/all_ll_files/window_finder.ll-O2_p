; ModuleID = '../../chrome/browser/ui/views/tabs/window_finder.cc'
source_filename = "../../chrome/browser/ui/views/tabs/window_finder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.aura::Window" = type opaque
%class.WindowFinder = type { i32 (...)** }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::set" = type opaque
%"class.display::Screen" = type { i32 (...)**, i64, i64 }

$_ZN12WindowFinderD2Ev = comdat any

$_ZN12WindowFinderD0Ev = comdat any

@_ZTV12WindowFinder = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.WindowFinder*)* @_ZN12WindowFinderD2Ev to i8*), i8* bitcast (void (%class.WindowFinder*)* @_ZN12WindowFinderD0Ev to i8*), i8* bitcast (%"class.aura::Window"* (%class.WindowFinder*, %"class.gfx::Point"*, %"class.std::__1::set"*)* @_ZN12WindowFinder28GetLocalProcessWindowAtPointERKN3gfx5PointERKNSt3__13setIPN4aura6WindowENS4_4lessIS8_EENS4_9allocatorIS8_EEEE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN12WindowFinder28GetLocalProcessWindowAtPointERKN3gfx5PointERKNSt3__13setIPN4aura6WindowENS4_4lessIS8_EENS4_9allocatorIS8_EEEE(%class.WindowFinder* nocapture readnone, %"class.gfx::Point"* dereferenceable(8), %"class.std::__1::set"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #3
  %5 = bitcast %"class.display::Screen"* %4 to %"class.aura::Window"* (%"class.display::Screen"*, %"class.gfx::Point"*, %"class.std::__1::set"*)***
  %6 = load %"class.aura::Window"* (%"class.display::Screen"*, %"class.gfx::Point"*, %"class.std::__1::set"*)**, %"class.aura::Window"* (%"class.display::Screen"*, %"class.gfx::Point"*, %"class.std::__1::set"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.aura::Window"* (%"class.display::Screen"*, %"class.gfx::Point"*, %"class.std::__1::set"*)*, %"class.aura::Window"* (%"class.display::Screen"*, %"class.gfx::Point"*, %"class.std::__1::set"*)** %6, i64 5
  %8 = load %"class.aura::Window"* (%"class.display::Screen"*, %"class.gfx::Point"*, %"class.std::__1::set"*)*, %"class.aura::Window"* (%"class.display::Screen"*, %"class.gfx::Point"*, %"class.std::__1::set"*)** %7, align 8
  %9 = tail call %"class.aura::Window"* %8(%"class.display::Screen"* %4, %"class.gfx::Point"* dereferenceable(8) %1, %"class.std::__1::set"* %2) #3
  ret %"class.aura::Window"* %9
}

declare %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12WindowFinderD2Ev(%class.WindowFinder*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12WindowFinderD0Ev(%class.WindowFinder*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.WindowFinder* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
