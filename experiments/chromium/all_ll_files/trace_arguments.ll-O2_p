; ModuleID = '../../base/trace_event/trace_arguments.cc'
source_filename = "../../base/trace_event/trace_arguments.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::StringStorage" = type { %"struct.base::trace_event::StringStorage::Data"* }
%"struct.base::trace_event::StringStorage::Data" = type <{ i64, [1 x i8], [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { i8*, i8*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN9protozero12HeapBufferedIN8perfetto6protos6pbzero15DebugAnnotationEE17SerializeAsStringEv = comdat any

@.str = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"\220x%lx\22\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"0x%lx\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"TraceArguments(\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c".0\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"\22NaN\22\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"NaN\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"\22-Infinity\22\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"-Infinity\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"\22Infinity\22\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"Infinity\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"NULL_NAME\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"pointer\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.30 = private unnamed_addr constant [12 x i8] c"copy_string\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"convertable\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"UNKNOWN_TYPE\00", align 1
@switch.table._ZN4base11trace_event14TraceArguments17AppendDebugStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE = private unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0)], align 8

@_ZN4base11trace_event14TraceArgumentsC1EiPKPKcPKhPKy = hidden unnamed_addr alias void (%"class.base::trace_event::TraceArguments"*, i32, i8**, i8*, i64*), void (%"class.base::trace_event::TraceArguments"*, i32, i8**, i8*, i64*)* @_ZN4base11trace_event14TraceArgumentsC2EiPKPKcPKhPKy

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event13StringStorage5ResetEm(%"class.base::trace_event::StringStorage"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  %4 = getelementptr inbounds %"class.base::trace_event::StringStorage", %"class.base::trace_event::StringStorage"* %0, i64 0, i32 0
  %5 = load %"struct.base::trace_event::StringStorage::Data"*, %"struct.base::trace_event::StringStorage::Data"** %4, align 8
  %6 = icmp ne %"struct.base::trace_event::StringStorage::Data"* %5, null
  %7 = bitcast %"struct.base::trace_event::StringStorage::Data"* %5 to i8*
  br i1 %3, label %8, label %11

8:                                                ; preds = %2
  br i1 %6, label %9, label %10

9:                                                ; preds = %8
  tail call void @free(i8* %7) #12
  br label %10

10:                                               ; preds = %9, %8
  store %"struct.base::trace_event::StringStorage::Data"* null, %"struct.base::trace_event::StringStorage::Data"** %4, align 8
  br label %21

11:                                               ; preds = %2
  br i1 %6, label %12, label %16

12:                                               ; preds = %11
  %13 = getelementptr inbounds %"struct.base::trace_event::StringStorage::Data", %"struct.base::trace_event::StringStorage::Data"* %5, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, %1
  br i1 %15, label %21, label %16

16:                                               ; preds = %12, %11
  %17 = bitcast %"class.base::trace_event::StringStorage"* %0 to i8**
  %18 = add i64 %1, 8
  %19 = tail call i8* @realloc(i8* %7, i64 %18) #12
  store i8* %19, i8** %17, align 8
  %20 = bitcast i8* %19 to i64*
  store i64 %1, i64* %20, align 8
  br label %21

21:                                               ; preds = %12, %16, %10
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base11trace_event13StringStorage8ContainsERKNS0_14TraceArgumentsE(%"class.base::trace_event::StringStorage"* nocapture readonly, %"class.base::trace_event::TraceArguments"* nocapture readonly dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %34, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::trace_event::StringStorage", %"class.base::trace_event::StringStorage"* %0, i64 0, i32 0
  %8 = zext i8 %4 to i64
  br label %9

9:                                                ; preds = %6, %31
  %10 = phi i64 [ 0, %6 ], [ %32, %31 ]
  %11 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %1, i64 0, i32 1, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 7
  br i1 %13, label %14, label %31

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %1, i64 0, i32 3, i64 %10
  %16 = bitcast %"union.base::trace_event::TraceValue"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = load %"struct.base::trace_event::StringStorage::Data"*, %"struct.base::trace_event::StringStorage::Data"** %7, align 8
  %19 = icmp eq %"struct.base::trace_event::StringStorage::Data"* %18, null
  %20 = getelementptr inbounds %"struct.base::trace_event::StringStorage::Data", %"struct.base::trace_event::StringStorage::Data"* %18, i64 0, i32 1, i64 0
  %21 = select i1 %19, i8* null, i8* %20
  %22 = icmp ugt i8* %21, %17
  br i1 %22, label %34, label %23

23:                                               ; preds = %14
  br i1 %19, label %27, label %24

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"struct.base::trace_event::StringStorage::Data", %"struct.base::trace_event::StringStorage::Data"* %18, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %23, %24
  %28 = phi i64 [ %26, %24 ], [ 0, %23 ]
  %29 = getelementptr inbounds i8, i8* %21, i64 %28
  %30 = icmp ugt i8* %29, %17
  br i1 %30, label %31, label %34

31:                                               ; preds = %9, %27
  %32 = add nuw nsw i64 %10, 1
  %33 = icmp ult i64 %32, %8
  br i1 %33, label %9, label %34

34:                                               ; preds = %31, %27, %14, %2
  %35 = phi i1 [ true, %2 ], [ false, %14 ], [ false, %27 ], [ true, %31 ]
  ret i1 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base11trace_event10TraceValue12AppendAsJSONEhPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"union.base::trace_event::TraceValue"* nocapture readonly, i8 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK4base11trace_event10TraceValue6AppendEhbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"union.base::trace_event::TraceValue"* %0, i8 zeroext %1, i1 zeroext true, %"class.std::__1::basic_string"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base11trace_event10TraceValue6AppendEhbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"union.base::trace_event::TraceValue"* nocapture readonly, i8 zeroext, i1 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  switch i8 %1, label %186 [
    i8 1, label %9
    i8 2, label %15
    i8 3, label %18
    i8 4, label %21
    i8 5, label %122
    i8 6, label %126
    i8 7, label %126
    i8 8, label %136
    i8 9, label %143
  ]

9:                                                ; preds = %4
  %10 = bitcast %"union.base::trace_event::TraceValue"* %0 to i8*
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %3, i8* %13) #12
  br label %186

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"union.base::trace_event::TraceValue", %"union.base::trace_event::TraceValue"* %0, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 %17) #12
  br label %186

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"union.base::trace_event::TraceValue", %"union.base::trace_event::TraceValue"* %0, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 %20) #12
  br label %186

21:                                               ; preds = %4
  %22 = bitcast %"union.base::trace_event::TraceValue"* %0 to double*
  %23 = load double, double* %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #12
  %27 = tail call double @llvm.fabs.f64(double %23) #8
  %28 = fcmp ueq double %27, 0x7FF0000000000000
  br i1 %28, label %70, label %29

29:                                               ; preds = %21
  %30 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  call void @_ZN4base14NumberToStringEd(%"class.std::__1::basic_string"* nonnull sret %6, double %23) #12
  %31 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %35, %29
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 8 %30, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  %38 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* nonnull %5, i8 signext 46, i64 0) #12
  %39 = icmp eq i64 %38, -1
  br i1 %39, label %40, label %48

40:                                               ; preds = %37
  %41 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* nonnull %5, i8 signext 101, i64 0) #12
  %42 = icmp eq i64 %41, -1
  br i1 %42, label %43, label %48

43:                                               ; preds = %40
  %44 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* nonnull %5, i8 signext 69, i64 0) #12
  %45 = icmp eq i64 %44, -1
  br i1 %45, label %46, label %48

46:                                               ; preds = %43
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #12
  br label %48

48:                                               ; preds = %46, %43, %40, %37
  %49 = load i8, i8* %32, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i8*, i8** %25, align 8
  %52 = select i1 %50, i8* %51, i8* %24
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 46
  br i1 %54, label %55, label %57

55:                                               ; preds = %48
  %56 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %5, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #12
  br label %110

57:                                               ; preds = %48
  %58 = load i64, i64* %26, align 8
  %59 = zext i8 %49 to i64
  %60 = select i1 %50, i64 %58, i64 %59
  %61 = icmp ugt i64 %60, 1
  %62 = icmp eq i8 %53, 45
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %110

64:                                               ; preds = %57
  %65 = getelementptr inbounds i8, i8* %52, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 46
  br i1 %67, label %68, label %110

68:                                               ; preds = %64
  %69 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %5, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #12
  br label %110

70:                                               ; preds = %21
  %71 = fcmp uno double %23, 0.000000e+00
  br i1 %71, label %72, label %84

72:                                               ; preds = %70
  %73 = select i1 %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0)
  %74 = load i8, i8* %73, align 1
  %75 = tail call i1 @llvm.is.constant.i8(i8 %74) #12
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = select i1 %2, i64 5, i64 3
  %78 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = trunc i64 %77 to i8
  store i8 %80, i8* %79, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 1 %73, i64 %77, i1 false) #12
  %81 = getelementptr inbounds i8, i8* %24, i64 %77
  store i8 0, i8* %81, align 1
  br label %110

82:                                               ; preds = %72
  %83 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* %73) #12
  br label %110

84:                                               ; preds = %70
  %85 = fcmp olt double %23, 0.000000e+00
  br i1 %85, label %86, label %98

86:                                               ; preds = %84
  %87 = select i1 %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0)
  %88 = load i8, i8* %87, align 1
  %89 = tail call i1 @llvm.is.constant.i8(i8 %88) #12
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = select i1 %2, i64 11, i64 9
  %92 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = trunc i64 %91 to i8
  store i8 %94, i8* %93, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 1 %87, i64 %91, i1 false) #12
  %95 = getelementptr inbounds i8, i8* %24, i64 %91
  store i8 0, i8* %95, align 1
  br label %110

96:                                               ; preds = %86
  %97 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* %87) #12
  br label %110

98:                                               ; preds = %84
  %99 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)
  %100 = load i8, i8* %99, align 1
  %101 = tail call i1 @llvm.is.constant.i8(i8 %100) #12
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = select i1 %2, i64 10, i64 8
  %104 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = trunc i64 %103 to i8
  store i8 %106, i8* %105, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 1 %99, i64 %103, i1 false) #12
  %107 = getelementptr inbounds i8, i8* %24, i64 %103
  store i8 0, i8* %107, align 2
  br label %110

108:                                              ; preds = %98
  %109 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* %99) #12
  br label %110

110:                                              ; preds = %108, %102, %96, %90, %82, %76, %68, %64, %57, %55
  %111 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  %115 = load i8*, i8** %25, align 8
  %116 = select i1 %114, i8* %115, i8* %24
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i8* %116) #12
  %117 = load i8, i8* %112, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %110
  %120 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %110, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  br label %186

122:                                              ; preds = %4
  %123 = select i1 %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)
  %124 = getelementptr inbounds %"union.base::trace_event::TraceValue", %"union.base::trace_event::TraceValue"* %0, i64 0, i32 0
  %125 = load i64, i64* %124, align 8
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"* %3, i8* %123, i64 %125) #12
  br label %186

126:                                              ; preds = %4, %4
  %127 = bitcast %"union.base::trace_event::TraceValue"* %0 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = icmp eq i8* %128, null
  %130 = select i1 %129, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* %128
  br i1 %2, label %131, label %134

131:                                              ; preds = %126
  %132 = tail call i64 @strlen(i8* nonnull %130) #12
  %133 = tail call zeroext i1 @_ZN4base16EscapeJSONStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %130, i64 %132, i1 zeroext true, %"class.std::__1::basic_string"* %3) #12
  br label %186

134:                                              ; preds = %126
  %135 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %3, i8* %130) #12
  br label %186

136:                                              ; preds = %4
  %137 = bitcast %"union.base::trace_event::TraceValue"* %0 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %138 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %137, align 8
  %139 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %138 to void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)***
  %140 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)** %140, i64 2
  %142 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.std::__1::basic_string"*)** %141, align 8
  tail call void %142(%"class.base::trace_event::ConvertableToTraceFormat"* %138, %"class.std::__1::basic_string"* %3) #12
  br label %186

143:                                              ; preds = %4
  br i1 %2, label %144, label %165

144:                                              ; preds = %143
  %145 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #12
  %146 = bitcast %"union.base::trace_event::TraceValue"* %0 to %"class.protozero::HeapBuffered"**
  %147 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %146, align 8
  call void @_ZN9protozero12HeapBufferedIN8perfetto6protos6pbzero15DebugAnnotationEE17SerializeAsStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.protozero::HeapBuffered"* %147)
  %148 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  %152 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = select i1 %151, i8* %153, i8* %145
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = zext i8 %150 to i64
  %158 = select i1 %151, i64 %156, i64 %157
  %159 = call zeroext i1 @_ZN4base16EscapeJSONStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %154, i64 %158, i1 zeroext true, %"class.std::__1::basic_string"* %3) #12
  %160 = load i8, i8* %149, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %144
  %163 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %163) #13
  br label %164

164:                                              ; preds = %144, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #12
  br label %186

165:                                              ; preds = %143
  %166 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #12
  %167 = bitcast %"union.base::trace_event::TraceValue"* %0 to %"class.protozero::HeapBuffered"**
  %168 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %167, align 8
  call void @_ZN9protozero12HeapBufferedIN8perfetto6protos6pbzero15DebugAnnotationEE17SerializeAsStringEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.protozero::HeapBuffered"* %168)
  %169 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  %173 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %176 = load i64, i64* %175, align 8
  %177 = zext i8 %171 to i64
  %178 = select i1 %172, i8* %174, i8* %166
  %179 = select i1 %172, i64 %176, i64 %177
  %180 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %3, i8* %178, i64 %179) #12
  %181 = load i8, i8* %170, align 1
  %182 = icmp slt i8 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %165
  %184 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %165, %183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #12
  br label %186

186:                                              ; preds = %4, %164, %185, %131, %134, %136, %122, %121, %18, %15, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base11trace_event10TraceValue14AppendAsStringEhPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"union.base::trace_event::TraceValue"* nocapture readonly, i8 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK4base11trace_event10TraceValue6AppendEhbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"union.base::trace_event::TraceValue"* %0, i8 zeroext %1, i1 zeroext false, %"class.std::__1::basic_string"* %2)
  ret void
}

declare void @_ZN4base13StringAppendFEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPKcz(%"class.std::__1::basic_string"*, i8*, ...) local_unnamed_addr #4

declare zeroext i1 @_ZN4base16EscapeJSONStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i1 zeroext, %"class.std::__1::basic_string"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9protozero12HeapBufferedIN8perfetto6protos6pbzero15DebugAnnotationEE17SerializeAsStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.protozero::HeapBuffered"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.14", align 8
  %4 = bitcast %"class.std::__1::vector.14"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %1, i64 0, i32 2
  %8 = bitcast %"class.protozero::RootMessage"* %7 to %"class.protozero::Message"*
  %9 = bitcast %"class.std::__1::vector.14"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = tail call i32 @_ZN9protozero7Message8FinalizeEv(%"class.protozero::Message"* %8) #12, !noalias !3
  %11 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %1, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBuffer12StitchSlicesEv(%"class.std::__1::vector.14"* nonnull sret %3, %"class.protozero::ScatteredHeapBuffer"* %11) #12
  %12 = load i8*, i8** %5, align 8
  %13 = bitcast i8** %6 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = ptrtoint i8* %12 to i64
  %16 = sub i64 %14, %15
  %17 = icmp ugt i64 %16, -17
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %19) #14
  unreachable

20:                                               ; preds = %2
  %21 = icmp ult i64 %16, 23
  br i1 %21, label %30, label %22

22:                                               ; preds = %20
  %23 = add nuw i64 %16, 16
  %24 = and i64 %23, -16
  %25 = call i8* @_Znwm(i64 %24) #13
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = or i64 %24, -9223372036854775808
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %29, align 8
  br label %36

30:                                               ; preds = %20
  %31 = trunc i64 %16 to i8
  %32 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 %31, i8* %33, align 1
  %34 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %35 = icmp eq i64 %16, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %30, %22
  %37 = phi i8* [ %25, %22 ], [ %34, %30 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 1 %12, i64 %16, i1 false) #12
  br label %38

38:                                               ; preds = %30, %36
  %39 = phi i8* [ %34, %30 ], [ %37, %36 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %16
  store i8 0, i8* %40, align 1
  %41 = icmp eq i8* %12, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %38
  store i64 %15, i64* %13, align 8
  call void @_ZdlPv(i8* nonnull %12) #13
  br label %43

43:                                               ; preds = %38, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.base::trace_event::TraceArguments"* @_ZN4base11trace_event14TraceArgumentsaSEOS1_(%"class.base::trace_event::TraceArguments"* returned, %"class.base::trace_event::TraceArguments"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.base::trace_event::TraceArguments"* %0, %1
  br i1 %3, label %44, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %42, label %8

8:                                                ; preds = %4, %37
  %9 = phi i64 [ %38, %37 ], [ 0, %4 ]
  %10 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 1, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 8
  br i1 %12, label %13, label %24

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 3, i64 %9
  %15 = bitcast %"union.base::trace_event::TraceValue"* %14 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %16 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %15, align 8
  %17 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %16 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %20 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %20, i64 1
  %22 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %21, align 8
  tail call void %22(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %16) #12
  %23 = load i8, i8* %10, align 1
  br label %24

24:                                               ; preds = %18, %8
  %25 = phi i8 [ %11, %8 ], [ %23, %18 ]
  %26 = icmp eq i8 %25, 9
  br i1 %26, label %27, label %37

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 3, i64 %9
  %29 = bitcast %"union.base::trace_event::TraceValue"* %28 to %"class.protozero::HeapBuffered"**
  %30 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %29, align 8
  %31 = icmp eq %"class.protozero::HeapBuffered"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %30, i64 0, i32 2, i32 1
  tail call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %33) #12
  %34 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %30, i64 0, i32 1
  tail call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %34) #12
  %35 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %30, i64 0, i32 0
  tail call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %35) #12
  %36 = bitcast %"class.protozero::HeapBuffered"* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %32, %27, %24, %13
  %38 = add nuw nsw i64 %9, 1
  %39 = load i8, i8* %5, align 8
  %40 = zext i8 %39 to i64
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %8, label %42

42:                                               ; preds = %37, %4
  %43 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %43, i64 40, i1 false) #12
  store i8 0, i8* %43, align 8
  br label %44

44:                                               ; preds = %2, %42
  ret %"class.base::trace_event::TraceArguments"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base11trace_event14TraceArgumentsC2EiPKPKcPKhPKy(%"class.base::trace_event::TraceArguments"* nocapture, i32, i8** nocapture readonly, i8* nocapture readonly, i64* nocapture readonly) unnamed_addr #5 align 2 {
  %6 = icmp slt i32 %1, 2
  %7 = select i1 %6, i32 %1, i32 2
  %8 = trunc i32 %7 to i8
  %9 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 0
  store i8 %8, i8* %9, align 8
  %10 = and i32 %7, 255
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %5
  %13 = and i32 %7, 255
  %14 = zext i32 %13 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i32 %13, 1
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = sub nsw i64 %14, %15
  br label %35

19:                                               ; preds = %35, %12
  %20 = phi i64 [ 0, %12 ], [ %61, %35 ]
  %21 = icmp eq i64 %15, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds i8, i8* %3, i64 %20
  %24 = load i8, i8* %23, align 1
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 1, i64 %20
  store i8 %24, i8* %25, align 1
  %26 = getelementptr inbounds i8*, i8** %2, i64 %20
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 2, i64 %20
  %30 = bitcast i8** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds i64, i64* %4, i64 %20
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 3, i64 %20, i32 0
  store i64 %32, i64* %33, align 8
  br label %34

34:                                               ; preds = %22, %19, %5
  ret void

35:                                               ; preds = %35, %17
  %36 = phi i64 [ 0, %17 ], [ %61, %35 ]
  %37 = phi i64 [ %18, %17 ], [ %62, %35 ]
  %38 = getelementptr inbounds i8, i8* %3, i64 %36
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 1, i64 %36
  store i8 %39, i8* %40, align 1
  %41 = getelementptr inbounds i8*, i8** %2, i64 %36
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 2, i64 %36
  %45 = bitcast i8** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds i64, i64* %4, i64 %36
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 3, i64 %36, i32 0
  store i64 %47, i64* %48, align 8
  %49 = or i64 %36, 1
  %50 = getelementptr inbounds i8, i8* %3, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 1, i64 %49
  store i8 %51, i8* %52, align 1
  %53 = getelementptr inbounds i8*, i8** %2, i64 %49
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 2, i64 %49
  %57 = bitcast i8** %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = getelementptr inbounds i64, i64* %4, i64 %49
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 3, i64 %49, i32 0
  store i64 %59, i64* %60, align 8
  %61 = add nuw nsw i64 %36, 2
  %62 = add i64 %37, -2
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %19, label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event14TraceArguments5ResetEv(%"class.base::trace_event::TraceArguments"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %23, %1
  store i8 0, i8* %2, align 8
  ret void

6:                                                ; preds = %1, %23
  %7 = phi i8 [ %24, %23 ], [ %3, %1 ]
  %8 = phi i64 [ %25, %23 ], [ 0, %1 ]
  %9 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 1, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 8
  br i1 %11, label %12, label %23

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 3, i64 %8
  %14 = bitcast %"union.base::trace_event::TraceValue"* %13 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %15 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %14, align 8
  %16 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %15 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %19 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %19, i64 1
  %21 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %20, align 8
  tail call void %21(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %15) #12
  %22 = load i8, i8* %2, align 8
  br label %23

23:                                               ; preds = %6, %17, %12
  %24 = phi i8 [ %7, %6 ], [ %22, %17 ], [ %7, %12 ]
  %25 = add nuw nsw i64 %8, 1
  %26 = zext i8 %24 to i64
  %27 = icmp ult i64 %25, %26
  br i1 %27, label %6, label %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event14TraceArguments13CopyStringsToEPNS0_13StringStorageEbPPKcS6_(%"class.base::trace_event::TraceArguments"* nocapture, %"class.base::trace_event::StringStorage"* nocapture, i1 zeroext, i8** nocapture, i8** nocapture) local_unnamed_addr #0 align 2 {
  br i1 %2, label %9, label %6

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 0
  %8 = load i8, i8* %7, align 8
  br label %46

9:                                                ; preds = %5
  %10 = load i8*, i8** %3, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = tail call i64 @strlen(i8* nonnull %10) #15
  %14 = add i64 %13, 1
  br label %15

15:                                               ; preds = %9, %12
  %16 = phi i64 [ %14, %12 ], [ 0, %9 ]
  %17 = load i8*, i8** %4, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = tail call i64 @strlen(i8* nonnull %17) #15
  %21 = add i64 %20, 1
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i64 [ %21, %19 ], [ 0, %15 ]
  %24 = add i64 %23, %16
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 0
  br label %53

30:                                               ; preds = %22
  %31 = zext i8 %26 to i64
  br label %32

32:                                               ; preds = %30, %41
  %33 = phi i64 [ 0, %30 ], [ %44, %41 ]
  %34 = phi i64 [ %24, %30 ], [ %43, %41 ]
  %35 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 2, i64 %33
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = tail call i64 @strlen(i8* nonnull %36) #15
  %40 = add i64 %39, 1
  br label %41

41:                                               ; preds = %32, %38
  %42 = phi i64 [ %40, %38 ], [ 0, %32 ]
  %43 = add i64 %42, %34
  %44 = add nuw nsw i64 %33, 1
  %45 = icmp ult i64 %44, %31
  br i1 %45, label %32, label %46

46:                                               ; preds = %41, %6
  %47 = phi i8 [ %8, %6 ], [ %26, %41 ]
  %48 = phi i64 [ 0, %6 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 0
  %50 = icmp eq i8 %47, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  %52 = zext i8 %47 to i64
  br label %61

53:                                               ; preds = %82, %28, %46
  %54 = phi i8* [ %49, %46 ], [ %29, %28 ], [ %49, %82 ]
  %55 = phi i64 [ %48, %46 ], [ %24, %28 ], [ %83, %82 ]
  %56 = icmp eq i64 %55, 0
  %57 = getelementptr inbounds %"class.base::trace_event::StringStorage", %"class.base::trace_event::StringStorage"* %1, i64 0, i32 0
  %58 = load %"struct.base::trace_event::StringStorage::Data"*, %"struct.base::trace_event::StringStorage::Data"** %57, align 8
  %59 = icmp ne %"struct.base::trace_event::StringStorage::Data"* %58, null
  %60 = bitcast %"struct.base::trace_event::StringStorage::Data"* %58 to i8*
  br i1 %56, label %189, label %86

61:                                               ; preds = %51, %82
  %62 = phi i64 [ %84, %82 ], [ 0, %51 ]
  %63 = phi i64 [ %83, %82 ], [ %48, %51 ]
  %64 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 1, i64 %62
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 6
  %67 = and i1 %66, %2
  br i1 %67, label %68, label %69

68:                                               ; preds = %61
  store i8 7, i8* %64, align 1
  br label %71

69:                                               ; preds = %61
  %70 = icmp eq i8 %65, 7
  br i1 %70, label %71, label %82

71:                                               ; preds = %68, %69
  %72 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 3, i64 %62
  %73 = bitcast %"union.base::trace_event::TraceValue"* %72 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %71
  %77 = tail call i64 @strlen(i8* nonnull %74) #15
  %78 = add i64 %77, 1
  br label %79

79:                                               ; preds = %71, %76
  %80 = phi i64 [ %78, %76 ], [ 0, %71 ]
  %81 = add i64 %80, %63
  br label %82

82:                                               ; preds = %69, %79
  %83 = phi i64 [ %81, %79 ], [ %63, %69 ]
  %84 = add nuw nsw i64 %62, 1
  %85 = icmp ult i64 %84, %52
  br i1 %85, label %61, label %53

86:                                               ; preds = %53
  br i1 %59, label %87, label %91

87:                                               ; preds = %86
  %88 = getelementptr inbounds %"struct.base::trace_event::StringStorage::Data", %"struct.base::trace_event::StringStorage::Data"* %58, i64 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, %55
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %86
  %92 = bitcast %"class.base::trace_event::StringStorage"* %1 to i8**
  %93 = add i64 %55, 8
  %94 = tail call i8* @realloc(i8* %60, i64 %93) #12
  store i8* %94, i8** %92, align 8
  %95 = bitcast i8* %94 to i64*
  store i64 %55, i64* %95, align 8
  %96 = bitcast i8* %94 to %"struct.base::trace_event::StringStorage::Data"*
  br label %97

97:                                               ; preds = %87, %91
  %98 = phi %"struct.base::trace_event::StringStorage::Data"* [ %58, %87 ], [ %96, %91 ]
  %99 = icmp eq %"struct.base::trace_event::StringStorage::Data"* %98, null
  %100 = getelementptr inbounds %"struct.base::trace_event::StringStorage::Data", %"struct.base::trace_event::StringStorage::Data"* %98, i64 0, i32 1, i64 0
  %101 = select i1 %99, i8* null, i8* %100
  %102 = ptrtoint i8* %101 to i64
  %103 = getelementptr inbounds i8, i8* %101, i64 %55
  br i1 %2, label %106, label %104

104:                                              ; preds = %97
  %105 = load i8, i8* %54, align 8
  br label %156

106:                                              ; preds = %97
  %107 = load i8*, i8** %3, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %106
  %110 = tail call i64 @_ZN4base7strlcpyEPcPKcm(i8* %101, i8* nonnull %107, i64 %55) #12
  %111 = add i64 %110, 1
  %112 = bitcast i8** %3 to i64*
  store i64 %102, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %101, i64 %111
  %114 = ptrtoint i8* %113 to i64
  br label %115

115:                                              ; preds = %106, %109
  %116 = phi i64 [ %102, %106 ], [ %114, %109 ]
  %117 = load i8*, i8** %4, align 8
  %118 = icmp eq i8* %117, null
  br i1 %118, label %128, label %119

119:                                              ; preds = %115
  %120 = inttoptr i64 %116 to i8*
  %121 = ptrtoint i8* %103 to i64
  %122 = sub i64 %121, %116
  %123 = tail call i64 @_ZN4base7strlcpyEPcPKcm(i8* %120, i8* nonnull %117, i64 %122) #12
  %124 = add i64 %123, 1
  %125 = bitcast i8** %4 to i64*
  store i64 %116, i64* %125, align 8
  %126 = getelementptr inbounds i8, i8* %120, i64 %124
  %127 = ptrtoint i8* %126 to i64
  br label %128

128:                                              ; preds = %115, %119
  %129 = phi i64 [ %116, %115 ], [ %127, %119 ]
  %130 = load i8, i8* %54, align 8
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %192, label %132

132:                                              ; preds = %128
  %133 = ptrtoint i8* %103 to i64
  br label %134

134:                                              ; preds = %132, %150
  %135 = phi i8 [ %130, %132 ], [ %151, %150 ]
  %136 = phi i64 [ 0, %132 ], [ %153, %150 ]
  %137 = phi i64 [ %129, %132 ], [ %152, %150 ]
  %138 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 2, i64 %136
  %139 = load i8*, i8** %138, align 8
  %140 = icmp eq i8* %139, null
  br i1 %140, label %150, label %141

141:                                              ; preds = %134
  %142 = inttoptr i64 %137 to i8*
  %143 = sub i64 %133, %137
  %144 = tail call i64 @_ZN4base7strlcpyEPcPKcm(i8* %142, i8* nonnull %139, i64 %143) #12
  %145 = add i64 %144, 1
  %146 = bitcast i8** %138 to i64*
  store i64 %137, i64* %146, align 8
  %147 = getelementptr inbounds i8, i8* %142, i64 %145
  %148 = ptrtoint i8* %147 to i64
  %149 = load i8, i8* %54, align 8
  br label %150

150:                                              ; preds = %134, %141
  %151 = phi i8 [ %135, %134 ], [ %149, %141 ]
  %152 = phi i64 [ %137, %134 ], [ %148, %141 ]
  %153 = add nuw nsw i64 %136, 1
  %154 = zext i8 %151 to i64
  %155 = icmp ult i64 %153, %154
  br i1 %155, label %134, label %156

156:                                              ; preds = %150, %104
  %157 = phi i8 [ %105, %104 ], [ %151, %150 ]
  %158 = phi i64 [ %102, %104 ], [ %152, %150 ]
  %159 = icmp eq i8 %157, 0
  br i1 %159, label %192, label %160

160:                                              ; preds = %156
  %161 = ptrtoint i8* %103 to i64
  br label %162

162:                                              ; preds = %160, %183
  %163 = phi i8 [ %157, %160 ], [ %184, %183 ]
  %164 = phi i64 [ 0, %160 ], [ %186, %183 ]
  %165 = phi i64 [ %158, %160 ], [ %185, %183 ]
  %166 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 1, i64 %164
  %167 = load i8, i8* %166, align 1
  %168 = icmp eq i8 %167, 7
  br i1 %168, label %169, label %183

169:                                              ; preds = %162
  %170 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 3, i64 %164
  %171 = bitcast %"union.base::trace_event::TraceValue"* %170 to i8**
  %172 = load i8*, i8** %171, align 8
  %173 = icmp eq i8* %172, null
  br i1 %173, label %183, label %174

174:                                              ; preds = %169
  %175 = inttoptr i64 %165 to i8*
  %176 = sub i64 %161, %165
  %177 = tail call i64 @_ZN4base7strlcpyEPcPKcm(i8* %175, i8* nonnull %172, i64 %176) #12
  %178 = add i64 %177, 1
  %179 = getelementptr inbounds %"union.base::trace_event::TraceValue", %"union.base::trace_event::TraceValue"* %170, i64 0, i32 0
  store i64 %165, i64* %179, align 8
  %180 = getelementptr inbounds i8, i8* %175, i64 %178
  %181 = ptrtoint i8* %180 to i64
  %182 = load i8, i8* %54, align 8
  br label %183

183:                                              ; preds = %174, %169, %162
  %184 = phi i8 [ %163, %162 ], [ %163, %169 ], [ %182, %174 ]
  %185 = phi i64 [ %165, %162 ], [ %165, %169 ], [ %181, %174 ]
  %186 = add nuw nsw i64 %164, 1
  %187 = zext i8 %184 to i64
  %188 = icmp ult i64 %186, %187
  br i1 %188, label %162, label %192

189:                                              ; preds = %53
  br i1 %59, label %190, label %191

190:                                              ; preds = %189
  tail call void @free(i8* %60) #12
  br label %191

191:                                              ; preds = %189, %190
  store %"struct.base::trace_event::StringStorage::Data"* null, %"struct.base::trace_event::StringStorage::Data"** %57, align 8
  br label %192

192:                                              ; preds = %183, %128, %156, %191
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event14TraceArguments17AppendDebugStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::TraceArguments"* nocapture readonly, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)) #12
  %4 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %30, %2
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #12
  ret void

9:                                                ; preds = %2, %30
  %10 = phi i64 [ %37, %30 ], [ 0, %2 ]
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  %13 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %14

14:                                               ; preds = %9, %12
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 2, i64 %10
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  %18 = select i1 %17, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i8* %16
  %19 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* nonnull %18) #12
  %20 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #12
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 1, i64 %10
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = add nsw i32 %23, -1
  %25 = icmp ult i32 %24, 8
  br i1 %25, label %26, label %30

26:                                               ; preds = %14
  %27 = sext i32 %24 to i64
  %28 = getelementptr inbounds [8 x i8*], [8 x i8*]* @switch.table._ZN4base11trace_event14TraceArguments17AppendDebugStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, i64 0, i64 %27
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %14, %26
  %31 = phi i8* [ %29, %26 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0), %14 ]
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* nonnull %31) #12
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #12
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %0, i64 0, i32 3, i64 %10
  %35 = load i8, i8* %21, align 1
  tail call void @_ZNK4base11trace_event10TraceValue6AppendEhbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"union.base::trace_event::TraceValue"* %34, i8 zeroext %35, i1 zeroext true, %"class.std::__1::basic_string"* %1) #12
  %36 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #12
  %37 = add nuw nsw i64 %10, 1
  %38 = load i8, i8* %4, align 8
  %39 = zext i8 %38 to i64
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %9, label %7
}

declare void @_ZN4base14NumberToStringEd(%"class.std::__1::basic_string"* sret, double) local_unnamed_addr #4

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare i64 @_ZN4base7strlcpyEPcPKcm(i8*, i8*, i64) local_unnamed_addr #4

declare i32 @_ZN9protozero7Message8FinalizeEv(%"class.protozero::Message"*) local_unnamed_addr #4

declare void @_ZN9protozero19ScatteredHeapBuffer12StitchSlicesEv(%"class.std::__1::vector.14"* sret, %"class.protozero::ScatteredHeapBuffer"*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN9protozero12HeapBufferedIN8perfetto6protos6pbzero15DebugAnnotationEE16SerializeAsArrayEv: argument 0"}
!5 = distinct !{!5, !"_ZN9protozero12HeapBufferedIN8perfetto6protos6pbzero15DebugAnnotationEE16SerializeAsArrayEv"}
