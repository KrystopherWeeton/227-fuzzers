; ModuleID = '../../base/third_party/xdg_mime/xdgmimeglob.c'
source_filename = "../../base/third_party/xdg_mime/xdgmimeglob.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.XdgGlobHash = type { %struct.XdgGlobList*, %struct.XdgGlobHashNode*, %struct.XdgGlobList* }
%struct.XdgGlobHashNode = type { i32, i8*, i32, i32, %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode* }
%struct.XdgGlobList = type { i8*, i8*, i32, i32, %struct.XdgGlobList* }
%struct.MimeWeight = type { i8*, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@_xdg_utf8_skip = external local_unnamed_addr constant i8*, align 8
@.str.2 = private unnamed_addr constant [16 x i8] c"    %s - %s %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"cs\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c" - %s %d\0A\00", align 1
@str = private unnamed_addr constant [16 x i8] c"LITERAL STRINGS\00", align 1
@str.12 = private unnamed_addr constant [14 x i8] c"\0ASIMPLE GLOBS\00", align 1
@str.14 = private unnamed_addr constant [12 x i8] c"\0AFULL GLOBS\00", align 1
@str.15 = private unnamed_addr constant [9 x i8] c"    None\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_xdg_glob_hash_lookup_file_name(%struct.XdgGlobHash* nocapture readonly, i8*, i8** nocapture, i32) local_unnamed_addr #0 {
  %5 = alloca [10 x %struct.MimeWeight], align 16
  %6 = bitcast [10 x %struct.MimeWeight]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 160, i1 false)
  %7 = tail call noalias i8* @strdup(i8* %1) #11
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %4, %10
  %11 = phi i8 [ %18, %10 ], [ %8, %4 ]
  %12 = phi i8* [ %17, %10 ], [ %7, %4 ]
  %13 = add i8 %11, -65
  %14 = icmp ult i8 %13, 26
  %15 = add i8 %11, 32
  %16 = select i1 %14, i8 %15, i8 %11
  %17 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %16, i8* %12, align 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %10

20:                                               ; preds = %10, %4
  %21 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 0
  %22 = load %struct.XdgGlobList*, %struct.XdgGlobList** %21, align 8
  %23 = icmp eq %struct.XdgGlobList* %22, null
  br i1 %23, label %59, label %25

24:                                               ; preds = %36
  br i1 %23, label %59, label %40

25:                                               ; preds = %20, %36
  %26 = phi %struct.XdgGlobList* [ %38, %36 ], [ %22, %20 ]
  %27 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %26, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i32 @strcmp(i8* %28, i8* %1) #12
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %26, i64 0, i32 1
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast i8** %2 to i64*
  store i64 %34, i64* %35, align 8
  tail call void @free(i8* %7) #11
  br label %158

36:                                               ; preds = %25
  %37 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %26, i64 0, i32 4
  %38 = load %struct.XdgGlobList*, %struct.XdgGlobList** %37, align 8
  %39 = icmp eq %struct.XdgGlobList* %38, null
  br i1 %39, label %24, label %25

40:                                               ; preds = %24, %55
  %41 = phi %struct.XdgGlobList* [ %57, %55 ], [ %22, %24 ]
  %42 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %41, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %55

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %41, i64 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = tail call i32 @strcmp(i8* %47, i8* %7) #12
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %41, i64 0, i32 1
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast i8** %2 to i64*
  store i64 %53, i64* %54, align 8
  tail call void @free(i8* %7) #11
  br label %158

55:                                               ; preds = %40, %45
  %56 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %41, i64 0, i32 4
  %57 = load %struct.XdgGlobList*, %struct.XdgGlobList** %56, align 8
  %58 = icmp eq %struct.XdgGlobList* %57, null
  br i1 %58, label %59, label %40

59:                                               ; preds = %55, %20, %24
  %60 = tail call i64 @strlen(i8* %1) #12
  %61 = trunc i64 %60 to i32
  %62 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 1
  %63 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %62, align 8
  %64 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %5, i64 0, i64 0
  %65 = call fastcc i32 @_xdg_glob_hash_node_lookup_file_name(%struct.XdgGlobHashNode* %63, i8* %7, i32 %61, i32 0, %struct.MimeWeight* nonnull %64)
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %102

67:                                               ; preds = %59
  %68 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %62, align 8
  %69 = call fastcc i32 @_xdg_glob_hash_node_lookup_file_name(%struct.XdgGlobHashNode* %68, i8* %1, i32 %61, i32 1, %struct.MimeWeight* nonnull %64)
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %102

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 2
  %73 = load %struct.XdgGlobList*, %struct.XdgGlobList** %72, align 8
  %74 = icmp ne %struct.XdgGlobList* %73, null
  %75 = icmp sgt i32 %3, 0
  %76 = and i1 %75, %74
  br i1 %76, label %77, label %102

77:                                               ; preds = %71, %95
  %78 = phi %struct.XdgGlobList* [ %98, %95 ], [ %73, %71 ]
  %79 = phi i32 [ %96, %95 ], [ 0, %71 ]
  %80 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %78, i64 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = tail call i32 @fnmatch(i8* %81, i8* %1, i32 0) #11
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %95

84:                                               ; preds = %77
  %85 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %78, i64 0, i32 1
  %86 = bitcast i8** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sext i32 %79 to i64
  %89 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %5, i64 0, i64 %88
  %90 = bitcast %struct.MimeWeight* %89 to i64*
  store i64 %87, i64* %90, align 16
  %91 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %78, i64 0, i32 2
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %5, i64 0, i64 %88, i32 1
  store i32 %92, i32* %93, align 8
  %94 = add nsw i32 %79, 1
  br label %95

95:                                               ; preds = %77, %84
  %96 = phi i32 [ %94, %84 ], [ %79, %77 ]
  %97 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %78, i64 0, i32 4
  %98 = load %struct.XdgGlobList*, %struct.XdgGlobList** %97, align 8
  %99 = icmp ne %struct.XdgGlobList* %98, null
  %100 = icmp slt i32 %96, %3
  %101 = and i1 %100, %99
  br i1 %101, label %77, label %102

102:                                              ; preds = %95, %71, %59, %67
  %103 = phi i32 [ %69, %67 ], [ %65, %59 ], [ 0, %71 ], [ %96, %95 ]
  tail call void @free(i8* %7) #11
  %104 = sext i32 %103 to i64
  call void @qsort(i8* nonnull %6, i64 %104, i64 16, i32 (i8*, i8*)* nonnull @compare_mime_weight) #11
  %105 = icmp sgt i32 %103, %3
  %106 = select i1 %105, i32 %3, i32 %103
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %158

108:                                              ; preds = %102
  %109 = sext i32 %106 to i64
  %110 = add nsw i64 %109, -1
  %111 = and i64 %109, 3
  %112 = icmp ult i64 %110, 3
  br i1 %112, label %144, label %113

113:                                              ; preds = %108
  %114 = sub nsw i64 %109, %111
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i64 [ 0, %113 ], [ %141, %115 ]
  %117 = phi i64 [ %114, %113 ], [ %142, %115 ]
  %118 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %5, i64 0, i64 %116, i32 0
  %119 = bitcast i8** %118 to i64*
  %120 = load i64, i64* %119, align 16
  %121 = getelementptr inbounds i8*, i8** %2, i64 %116
  %122 = bitcast i8** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = or i64 %116, 1
  %124 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %5, i64 0, i64 %123, i32 0
  %125 = bitcast i8** %124 to i64*
  %126 = load i64, i64* %125, align 16
  %127 = getelementptr inbounds i8*, i8** %2, i64 %123
  %128 = bitcast i8** %127 to i64*
  store i64 %126, i64* %128, align 8
  %129 = or i64 %116, 2
  %130 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %5, i64 0, i64 %129, i32 0
  %131 = bitcast i8** %130 to i64*
  %132 = load i64, i64* %131, align 16
  %133 = getelementptr inbounds i8*, i8** %2, i64 %129
  %134 = bitcast i8** %133 to i64*
  store i64 %132, i64* %134, align 8
  %135 = or i64 %116, 3
  %136 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %5, i64 0, i64 %135, i32 0
  %137 = bitcast i8** %136 to i64*
  %138 = load i64, i64* %137, align 16
  %139 = getelementptr inbounds i8*, i8** %2, i64 %135
  %140 = bitcast i8** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = add nuw nsw i64 %116, 4
  %142 = add i64 %117, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %115

144:                                              ; preds = %115, %108
  %145 = phi i64 [ 0, %108 ], [ %141, %115 ]
  %146 = icmp eq i64 %111, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %155, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %156, %147 ], [ %111, %144 ]
  %150 = getelementptr inbounds [10 x %struct.MimeWeight], [10 x %struct.MimeWeight]* %5, i64 0, i64 %148, i32 0
  %151 = bitcast i8** %150 to i64*
  %152 = load i64, i64* %151, align 16
  %153 = getelementptr inbounds i8*, i8** %2, i64 %148
  %154 = bitcast i8** %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = add nuw nsw i64 %148, 1
  %156 = add i64 %149, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %147, !llvm.loop !2

158:                                              ; preds = %144, %147, %102, %50, %31
  %159 = phi i32 [ 1, %31 ], [ 1, %50 ], [ %106, %102 ], [ %106, %147 ], [ %106, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #11
  ret i32 %159
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc i32 @_xdg_glob_hash_node_lookup_file_name(%struct.XdgGlobHashNode* readonly, i8* nocapture readonly, i32, i32, %struct.MimeWeight* nocapture) unnamed_addr #5 {
  %6 = icmp eq %struct.XdgGlobHashNode* %0, null
  br i1 %6, label %85, label %7

7:                                                ; preds = %5
  %8 = add nsw i32 %2, -1
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %1, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  br label %13

13:                                               ; preds = %7, %81
  %14 = phi %struct.XdgGlobHashNode* [ %0, %7 ], [ %83, %81 ]
  %15 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp ugt i32 %16, %12
  br i1 %17, label %85, label %18

18:                                               ; preds = %13
  %19 = icmp eq i32 %16, %12
  br i1 %19, label %20, label %81

20:                                               ; preds = %18
  %21 = icmp sgt i32 %8, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %14, i64 0, i32 5
  %24 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %23, align 8
  %25 = tail call fastcc i32 @_xdg_glob_hash_node_lookup_file_name(%struct.XdgGlobHashNode* %24, i8* %1, i32 %8, i32 %3, %struct.MimeWeight* %4)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %85

27:                                               ; preds = %20, %22
  %28 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %14, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  %31 = ptrtoint i8* %29 to i64
  br i1 %30, label %43, label %32

32:                                               ; preds = %27
  %33 = icmp eq i32 %3, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %14, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %34, %32
  %39 = bitcast %struct.MimeWeight* %4 to i64*
  store i64 %31, i64* %39, align 8
  %40 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %14, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %struct.MimeWeight, %struct.MimeWeight* %4, i64 0, i32 1
  store i32 %41, i32* %42, align 8
  br label %43

43:                                               ; preds = %34, %27, %38
  %44 = phi i32 [ 1, %38 ], [ 0, %34 ], [ 0, %27 ]
  %45 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %14, i64 0, i32 5
  %46 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %45, align 8
  %47 = icmp eq %struct.XdgGlobHashNode* %46, null
  br i1 %47, label %85, label %48

48:                                               ; preds = %43
  %49 = icmp eq i32 %3, 0
  br label %50

50:                                               ; preds = %48, %74
  %51 = phi %struct.XdgGlobHashNode* [ %46, %48 ], [ %77, %74 ]
  %52 = phi i32 [ %44, %48 ], [ %75, %74 ]
  %53 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %51, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %85

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %51, i64 0, i32 1
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  %60 = ptrtoint i8* %58 to i64
  br i1 %59, label %74, label %61

61:                                               ; preds = %56
  br i1 %49, label %62, label %66

62:                                               ; preds = %61
  %63 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %51, i64 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %74

66:                                               ; preds = %62, %61
  %67 = sext i32 %52 to i64
  %68 = getelementptr inbounds %struct.MimeWeight, %struct.MimeWeight* %4, i64 %67
  %69 = bitcast %struct.MimeWeight* %68 to i64*
  store i64 %60, i64* %69, align 8
  %70 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %51, i64 0, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %struct.MimeWeight, %struct.MimeWeight* %4, i64 %67, i32 1
  store i32 %71, i32* %72, align 8
  %73 = add nsw i32 %52, 1
  br label %74

74:                                               ; preds = %62, %56, %66
  %75 = phi i32 [ %73, %66 ], [ %52, %62 ], [ %52, %56 ]
  %76 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %51, i64 0, i32 4
  %77 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %76, align 8
  %78 = icmp slt i32 %75, 10
  %79 = icmp ne %struct.XdgGlobHashNode* %77, null
  %80 = and i1 %78, %79
  br i1 %80, label %50, label %85

81:                                               ; preds = %18
  %82 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %14, i64 0, i32 4
  %83 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %82, align 8
  %84 = icmp eq %struct.XdgGlobHashNode* %83, null
  br i1 %84, label %85, label %13

85:                                               ; preds = %13, %81, %50, %74, %43, %22, %5
  %86 = phi i32 [ 0, %5 ], [ %25, %22 ], [ %44, %43 ], [ %52, %50 ], [ %75, %74 ], [ 0, %81 ], [ 0, %13 ]
  ret i32 %86
}

declare i32 @fnmatch(i8*, i8*, i32) local_unnamed_addr #6

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @compare_mime_weight(i8* nocapture readonly, i8* nocapture readonly) #8 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = sub nsw i32 %5, %8
  ret i32 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct.XdgGlobHash* @_xdg_glob_hash_new() local_unnamed_addr #5 {
  %1 = tail call noalias i8* @calloc(i64 1, i64 24) #11
  %2 = bitcast i8* %1 to %struct.XdgGlobHash*
  ret %struct.XdgGlobHash* %2
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_xdg_glob_hash_free(%struct.XdgGlobHash* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 0
  %3 = load %struct.XdgGlobList*, %struct.XdgGlobList** %2, align 8
  %4 = icmp eq %struct.XdgGlobList* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1, %18
  %6 = phi %struct.XdgGlobList* [ %8, %18 ], [ %3, %1 ]
  %7 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %6, i64 0, i32 4
  %8 = load %struct.XdgGlobList*, %struct.XdgGlobList** %7, align 8
  %9 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %6, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %5
  tail call void @free(i8* nonnull %10) #11
  br label %13

13:                                               ; preds = %12, %5
  %14 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %6, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @free(i8* nonnull %15) #11
  br label %18

18:                                               ; preds = %17, %13
  %19 = bitcast %struct.XdgGlobList* %6 to i8*
  tail call void @free(i8* %19) #11
  %20 = icmp eq %struct.XdgGlobList* %8, null
  br i1 %20, label %21, label %5

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 2
  %23 = load %struct.XdgGlobList*, %struct.XdgGlobList** %22, align 8
  %24 = icmp eq %struct.XdgGlobList* %23, null
  br i1 %24, label %41, label %25

25:                                               ; preds = %21, %38
  %26 = phi %struct.XdgGlobList* [ %28, %38 ], [ %23, %21 ]
  %27 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %26, i64 0, i32 4
  %28 = load %struct.XdgGlobList*, %struct.XdgGlobList** %27, align 8
  %29 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %26, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %25
  tail call void @free(i8* nonnull %30) #11
  br label %33

33:                                               ; preds = %32, %25
  %34 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %26, i64 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @free(i8* nonnull %35) #11
  br label %38

38:                                               ; preds = %37, %33
  %39 = bitcast %struct.XdgGlobList* %26 to i8*
  tail call void @free(i8* %39) #11
  %40 = icmp eq %struct.XdgGlobList* %28, null
  br i1 %40, label %41, label %25

41:                                               ; preds = %38, %21
  %42 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 1
  %43 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %42, align 8
  tail call fastcc void @_xdg_glob_hash_free_nodes(%struct.XdgGlobHashNode* %43)
  %44 = bitcast %struct.XdgGlobHash* %0 to i8*
  tail call void @free(i8* %44) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_xdg_glob_hash_free_nodes(%struct.XdgGlobHashNode*) unnamed_addr #0 {
  %2 = icmp eq %struct.XdgGlobHashNode* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %0, i64 0, i32 5
  %5 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %4, align 8
  %6 = icmp eq %struct.XdgGlobHashNode* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call fastcc void @_xdg_glob_hash_free_nodes(%struct.XdgGlobHashNode* nonnull %5)
  br label %8

8:                                                ; preds = %3, %7
  %9 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %0, i64 0, i32 4
  %10 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %9, align 8
  %11 = icmp eq %struct.XdgGlobHashNode* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call fastcc void @_xdg_glob_hash_free_nodes(%struct.XdgGlobHashNode* nonnull %10)
  br label %13

13:                                               ; preds = %8, %12
  %14 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %0, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @free(i8* nonnull %15) #11
  br label %18

18:                                               ; preds = %13, %17
  %19 = bitcast %struct.XdgGlobHashNode* %0 to i8*
  tail call void @free(i8* %19) #11
  br label %20

20:                                               ; preds = %1, %18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_xdg_glob_determine_type(i8* nocapture readonly) local_unnamed_addr #8 {
  %2 = load i8, i8* %0, align 1
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %24, label %4

4:                                                ; preds = %1
  %5 = load i8*, i8** @_xdg_utf8_skip, align 8
  br label %6

6:                                                ; preds = %4, %15
  %7 = phi i8 [ %2, %4 ], [ %22, %15 ]
  %8 = phi i1 [ true, %4 ], [ false, %15 ]
  %9 = phi i32 [ 0, %4 ], [ %16, %15 ]
  %10 = phi i8* [ %0, %4 ], [ %21, %15 ]
  %11 = icmp eq i8 %7, 42
  %12 = and i1 %8, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %6
  switch i8 %7, label %14 [
    i8 92, label %28
    i8 91, label %28
    i8 63, label %28
  ]

14:                                               ; preds = %13
  br i1 %11, label %28, label %15

15:                                               ; preds = %6, %14
  %16 = phi i32 [ %9, %14 ], [ 1, %6 ]
  %17 = zext i8 %7 to i64
  %18 = getelementptr inbounds i8, i8* %5, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i64
  %21 = getelementptr inbounds i8, i8* %10, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %6

24:                                               ; preds = %15, %1
  %25 = phi i32 [ 0, %1 ], [ %16, %15 ]
  %26 = icmp ne i32 %25, 0
  %27 = zext i1 %26 to i32
  br label %28

28:                                               ; preds = %14, %13, %13, %13, %24
  %29 = phi i32 [ %27, %24 ], [ 2, %13 ], [ 2, %13 ], [ 2, %13 ], [ 2, %14 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_xdg_glob_hash_append_glob(%struct.XdgGlobHash* nocapture, i8*, i8* nocapture, i32, i32) local_unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = load i8, i8* %1, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = load i8*, i8** @_xdg_utf8_skip, align 8
  br label %11

11:                                               ; preds = %20, %9
  %12 = phi i8 [ %7, %9 ], [ %27, %20 ]
  %13 = phi i1 [ true, %9 ], [ false, %20 ]
  %14 = phi i32 [ 0, %9 ], [ %21, %20 ]
  %15 = phi i8* [ %1, %9 ], [ %26, %20 ]
  %16 = icmp eq i8 %12, 42
  %17 = and i1 %13, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  switch i8 %12, label %19 [
    i8 92, label %81
    i8 91, label %81
    i8 63, label %81
  ]

19:                                               ; preds = %18
  br i1 %16, label %81, label %20

20:                                               ; preds = %19, %11
  %21 = phi i32 [ %14, %19 ], [ 1, %11 ]
  %22 = zext i8 %12 to i64
  %23 = getelementptr inbounds i8, i8* %10, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i64
  %26 = getelementptr inbounds i8, i8* %15, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %11

29:                                               ; preds = %20
  %30 = icmp eq i32 %21, 0
  br i1 %30, label %31, label %72

31:                                               ; preds = %29, %5
  %32 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 0
  %33 = load %struct.XdgGlobList*, %struct.XdgGlobList** %32, align 8
  %34 = tail call noalias i8* @strdup(i8* %1) #11
  %35 = tail call noalias i8* @strdup(i8* %2) #11
  %36 = icmp eq %struct.XdgGlobList* %33, null
  br i1 %36, label %52, label %37

37:                                               ; preds = %31, %48
  %38 = phi %struct.XdgGlobList* [ %50, %48 ], [ %33, %31 ]
  %39 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %38, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = tail call i32 @strcmp(i8* %40, i8* %34) #12
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %38, i64 0, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = tail call i32 @strcmp(i8* %45, i8* %35) #12
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %70, label %48

48:                                               ; preds = %43, %37
  %49 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %38, i64 0, i32 4
  %50 = load %struct.XdgGlobList*, %struct.XdgGlobList** %49, align 8
  %51 = icmp eq %struct.XdgGlobList* %50, null
  br i1 %51, label %52, label %37

52:                                               ; preds = %48, %31
  %53 = tail call noalias i8* @calloc(i64 1, i64 32) #11
  %54 = bitcast i8* %53 to %struct.XdgGlobList*
  %55 = bitcast i8* %53 to i8**
  store i8* %34, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %53, i64 8
  %57 = bitcast i8* %56 to i8**
  store i8* %35, i8** %57, align 8
  %58 = getelementptr inbounds i8, i8* %53, i64 16
  %59 = bitcast i8* %58 to i32*
  store i32 %3, i32* %59, align 8
  %60 = getelementptr inbounds i8, i8* %53, i64 20
  %61 = bitcast i8* %60 to i32*
  store i32 %4, i32* %61, align 4
  br i1 %36, label %70, label %62

62:                                               ; preds = %52, %62
  %63 = phi %struct.XdgGlobList* [ %65, %62 ], [ %33, %52 ]
  %64 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %63, i64 0, i32 4
  %65 = load %struct.XdgGlobList*, %struct.XdgGlobList** %64, align 8
  %66 = icmp eq %struct.XdgGlobList* %65, null
  br i1 %66, label %67, label %62

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %63, i64 0, i32 4
  %69 = bitcast %struct.XdgGlobList** %68 to i8**
  store i8* %53, i8** %69, align 8
  br label %70

70:                                               ; preds = %43, %52, %67
  %71 = phi %struct.XdgGlobList* [ %33, %67 ], [ %54, %52 ], [ %33, %43 ]
  store %struct.XdgGlobList* %71, %struct.XdgGlobList** %32, align 8
  br label %122

72:                                               ; preds = %29
  %73 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 1
  %74 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %73, align 8
  %75 = getelementptr inbounds i8, i8* %1, i64 1
  %76 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #11
  store i32 -1431655766, i32* %6, align 4
  %77 = call i32* @_xdg_convert_to_ucs4(i8* %75, i32* nonnull %6) #11
  %78 = load i32, i32* %6, align 4
  call void @_xdg_reverse_ucs4(i32* %77, i32 %78) #11
  %79 = call fastcc %struct.XdgGlobHashNode* @_xdg_glob_hash_insert_ucs4(%struct.XdgGlobHashNode* %74, i32* %77, i8* %2, i32 %3, i32 %4) #11
  %80 = bitcast i32* %77 to i8*
  call void @free(i8* %80) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #11
  store %struct.XdgGlobHashNode* %79, %struct.XdgGlobHashNode** %73, align 8
  br label %122

81:                                               ; preds = %19, %18, %18, %18
  %82 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 2
  %83 = load %struct.XdgGlobList*, %struct.XdgGlobList** %82, align 8
  %84 = tail call noalias i8* @strdup(i8* %1) #11
  %85 = tail call noalias i8* @strdup(i8* %2) #11
  %86 = icmp eq %struct.XdgGlobList* %83, null
  br i1 %86, label %102, label %87

87:                                               ; preds = %81, %98
  %88 = phi %struct.XdgGlobList* [ %100, %98 ], [ %83, %81 ]
  %89 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %88, i64 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = tail call i32 @strcmp(i8* %90, i8* %84) #12
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %98

93:                                               ; preds = %87
  %94 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %88, i64 0, i32 1
  %95 = load i8*, i8** %94, align 8
  %96 = tail call i32 @strcmp(i8* %95, i8* %85) #12
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %120, label %98

98:                                               ; preds = %93, %87
  %99 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %88, i64 0, i32 4
  %100 = load %struct.XdgGlobList*, %struct.XdgGlobList** %99, align 8
  %101 = icmp eq %struct.XdgGlobList* %100, null
  br i1 %101, label %102, label %87

102:                                              ; preds = %98, %81
  %103 = tail call noalias i8* @calloc(i64 1, i64 32) #11
  %104 = bitcast i8* %103 to %struct.XdgGlobList*
  %105 = bitcast i8* %103 to i8**
  store i8* %84, i8** %105, align 8
  %106 = getelementptr inbounds i8, i8* %103, i64 8
  %107 = bitcast i8* %106 to i8**
  store i8* %85, i8** %107, align 8
  %108 = getelementptr inbounds i8, i8* %103, i64 16
  %109 = bitcast i8* %108 to i32*
  store i32 %3, i32* %109, align 8
  %110 = getelementptr inbounds i8, i8* %103, i64 20
  %111 = bitcast i8* %110 to i32*
  store i32 %4, i32* %111, align 4
  br i1 %86, label %120, label %112

112:                                              ; preds = %102, %112
  %113 = phi %struct.XdgGlobList* [ %115, %112 ], [ %83, %102 ]
  %114 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %113, i64 0, i32 4
  %115 = load %struct.XdgGlobList*, %struct.XdgGlobList** %114, align 8
  %116 = icmp eq %struct.XdgGlobList* %115, null
  br i1 %116, label %117, label %112

117:                                              ; preds = %112
  %118 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %113, i64 0, i32 4
  %119 = bitcast %struct.XdgGlobList** %118 to i8**
  store i8* %103, i8** %119, align 8
  br label %120

120:                                              ; preds = %93, %102, %117
  %121 = phi %struct.XdgGlobList* [ %83, %117 ], [ %104, %102 ], [ %83, %93 ]
  store %struct.XdgGlobList* %121, %struct.XdgGlobList** %82, align 8
  br label %122

122:                                              ; preds = %120, %72, %70
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_xdg_glob_hash_dump(%struct.XdgGlobHash* readonly) local_unnamed_addr #5 {
  %2 = tail call i32 @puts(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str, i64 0, i64 0))
  %3 = icmp ne %struct.XdgGlobHash* %0, null
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 0
  %6 = load %struct.XdgGlobList*, %struct.XdgGlobList** %5, align 8
  %7 = icmp eq %struct.XdgGlobList* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %4, %1
  %9 = tail call i32 @puts(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.15, i64 0, i64 0))
  br label %22

10:                                               ; preds = %4, %10
  %11 = phi %struct.XdgGlobList* [ %20, %10 ], [ %6, %4 ]
  %12 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %11, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %11, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* %13, i8* %15, i32 %17)
  %19 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %11, i64 0, i32 4
  %20 = load %struct.XdgGlobList*, %struct.XdgGlobList** %19, align 8
  %21 = icmp eq %struct.XdgGlobList* %20, null
  br i1 %21, label %22, label %10

22:                                               ; preds = %10, %8
  %23 = tail call i32 @puts(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @str.12, i64 0, i64 0))
  br i1 %3, label %24, label %36

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 1
  %26 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %25, align 8
  %27 = icmp eq %struct.XdgGlobHashNode* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call fastcc void @_xdg_glob_hash_node_dump(%struct.XdgGlobHashNode* nonnull %26, i32 4)
  br label %31

29:                                               ; preds = %24
  %30 = tail call i32 @puts(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.15, i64 0, i64 0))
  br label %31

31:                                               ; preds = %29, %28
  %32 = tail call i32 @puts(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.14, i64 0, i64 0))
  %33 = getelementptr inbounds %struct.XdgGlobHash, %struct.XdgGlobHash* %0, i64 0, i32 2
  %34 = load %struct.XdgGlobList*, %struct.XdgGlobList** %33, align 8
  %35 = icmp eq %struct.XdgGlobList* %34, null
  br i1 %35, label %39, label %41

36:                                               ; preds = %22
  %37 = tail call i32 @puts(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.15, i64 0, i64 0))
  %38 = tail call i32 @puts(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.14, i64 0, i64 0))
  br label %39

39:                                               ; preds = %36, %31
  %40 = tail call i32 @puts(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.15, i64 0, i64 0))
  br label %53

41:                                               ; preds = %31, %41
  %42 = phi %struct.XdgGlobList* [ %51, %41 ], [ %34, %31 ]
  %43 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %42, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %42, i64 0, i32 1
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %42, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* %44, i8* %46, i32 %48)
  %50 = getelementptr inbounds %struct.XdgGlobList, %struct.XdgGlobList* %42, i64 0, i32 4
  %51 = load %struct.XdgGlobList*, %struct.XdgGlobList** %50, align 8
  %52 = icmp eq %struct.XdgGlobList* %51, null
  br i1 %52, label %53, label %41

53:                                               ; preds = %41, %39
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #9

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @_xdg_glob_hash_node_dump(%struct.XdgGlobHashNode* nocapture readonly, i32) unnamed_addr #5 {
  %3 = icmp sgt i32 %1, 0
  %4 = add nsw i32 %1, 1
  br label %5

5:                                                ; preds = %32, %2
  %6 = phi %struct.XdgGlobHashNode* [ %0, %2 ], [ %34, %32 ]
  br i1 %3, label %7, label %12

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %10, %7 ], [ 0, %5 ]
  %9 = tail call i32 @putchar(i32 32)
  %10 = add nuw nsw i32 %8, 1
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %12, label %7

12:                                               ; preds = %7, %5
  %13 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = shl i32 %14, 24
  %16 = ashr exact i32 %15, 24
  %17 = tail call i32 @putchar(i32 %16)
  %18 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %6, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %6, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* nonnull %19, i32 %23)
  br label %27

25:                                               ; preds = %12
  %26 = tail call i32 @putchar(i32 10)
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %6, i64 0, i32 5
  %29 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %28, align 8
  %30 = icmp eq %struct.XdgGlobHashNode* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call fastcc void @_xdg_glob_hash_node_dump(%struct.XdgGlobHashNode* nonnull %29, i32 %4)
  br label %32

32:                                               ; preds = %27, %31
  %33 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %6, i64 0, i32 4
  %34 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %33, align 8
  %35 = icmp eq %struct.XdgGlobHashNode* %34, null
  br i1 %35, label %36, label %5

36:                                               ; preds = %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_xdg_mime_glob_read_from_file(%struct.XdgGlobHash* nocapture, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = alloca [255 x i8], align 16
  %5 = getelementptr inbounds [255 x i8], [255 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 255, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 255, i1 false)
  %6 = tail call %struct._IO_FILE* @fopen64(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  %7 = icmp eq %struct._IO_FILE* %6, null
  br i1 %7, label %65, label %8

8:                                                ; preds = %3
  %9 = call i8* @fgets(i8* nonnull %5, i32 255, %struct._IO_FILE* nonnull %6)
  %10 = icmp eq i8* %9, null
  br i1 %10, label %63, label %11

11:                                               ; preds = %8
  %12 = icmp ne i32 %2, 0
  br label %13

13:                                               ; preds = %11, %60
  %14 = load i8, i8* %5, align 16
  switch i8 %14, label %15 [
    i8 35, label %60
    i8 0, label %60
  ]

15:                                               ; preds = %13
  %16 = call i64 @strlen(i8* nonnull %5) #12
  %17 = getelementptr inbounds [255 x i8], [255 x i8]* %4, i64 0, i64 %16
  %18 = getelementptr inbounds i8, i8* %17, i64 -1
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 10
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i8 0, i8* %18, align 1
  br label %22

22:                                               ; preds = %21, %15
  br i1 %12, label %23, label %30

23:                                               ; preds = %22
  %24 = call i8* @strchr(i8* nonnull %5, i32 58) #12
  %25 = icmp eq i8* %24, null
  br i1 %25, label %60, label %26

26:                                               ; preds = %23
  store i8 0, i8* %24, align 1
  %27 = call i64 @strtol(i8* nocapture nonnull %5, i8** null, i32 10) #11
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds i8, i8* %24, i64 1
  br label %30

30:                                               ; preds = %22, %26
  %31 = phi i8* [ %29, %26 ], [ %5, %22 ]
  %32 = phi i32 [ %28, %26 ], [ 50, %22 ]
  %33 = call i8* @strchr(i8* %31, i32 58) #12
  %34 = icmp eq i8* %33, null
  br i1 %34, label %60, label %35

35:                                               ; preds = %30
  store i8 0, i8* %33, align 1
  %36 = getelementptr inbounds i8, i8* %33, i64 1
  %37 = call i8* @strchr(i8* %36, i32 58) #12
  %38 = icmp ne i8* %37, null
  %39 = and i1 %12, %38
  br i1 %39, label %40, label %58

40:                                               ; preds = %35
  store i8 0, i8* %37, align 1
  %41 = getelementptr inbounds i8, i8* %37, i64 1
  %42 = call i8* @strchr(i8* %41, i32 58) #12
  %43 = icmp eq i8* %42, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  store i8 0, i8* %42, align 1
  br label %45

45:                                               ; preds = %40, %44
  %46 = call i8* @strstr(i8* %41, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)) #12
  %47 = icmp eq i8* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = icmp eq i8* %46, %41
  br i1 %49, label %54, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds i8, i8* %46, i64 -1
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 44
  br i1 %53, label %54, label %58

54:                                               ; preds = %50, %48
  %55 = getelementptr inbounds i8, i8* %46, i64 2
  %56 = load i8, i8* %55, align 1
  switch i8 %56, label %58 [
    i8 0, label %57
    i8 44, label %57
  ]

57:                                               ; preds = %54, %54
  br label %58

58:                                               ; preds = %50, %57, %45, %54, %35
  %59 = phi i32 [ 0, %35 ], [ 1, %57 ], [ 0, %50 ], [ 0, %45 ], [ 0, %54 ]
  call void @_xdg_glob_hash_append_glob(%struct.XdgGlobHash* %0, i8* %36, i8* %31, i32 %32, i32 %59)
  br label %60

60:                                               ; preds = %30, %23, %13, %13, %58
  %61 = call i8* @fgets(i8* nonnull %5, i32 255, %struct._IO_FILE* nonnull %6)
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %13

63:                                               ; preds = %60, %8
  %64 = call i32 @fclose(%struct._IO_FILE* nonnull %6)
  br label %65

65:                                               ; preds = %3, %63
  call void @llvm.lifetime.end.p0i8(i64 255, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i8* @fgets(i8*, i32, %struct._IO_FILE* nocapture) local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #9

declare i32* @_xdg_convert_to_ucs4(i8*, i32*) local_unnamed_addr #6

declare void @_xdg_reverse_ucs4(i32*, i32) local_unnamed_addr #6

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc %struct.XdgGlobHashNode* @_xdg_glob_hash_insert_ucs4(%struct.XdgGlobHashNode*, i32* nocapture, i8* nocapture, i32, i32) unnamed_addr #5 {
  %6 = load i32, i32* %1, align 4
  %7 = icmp eq %struct.XdgGlobHashNode* %0, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %6, %10
  br i1 %11, label %12, label %18

12:                                               ; preds = %8, %5
  %13 = tail call noalias i8* @calloc(i64 1, i64 40) #11
  %14 = bitcast i8* %13 to %struct.XdgGlobHashNode*
  %15 = bitcast i8* %13 to i32*
  store i32 %6, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 24
  %17 = bitcast i8* %16 to %struct.XdgGlobHashNode**
  store %struct.XdgGlobHashNode* %0, %struct.XdgGlobHashNode** %17, align 8
  br label %51

18:                                               ; preds = %8
  %19 = icmp eq i32 %6, %10
  br i1 %19, label %51, label %20

20:                                               ; preds = %18, %39
  %21 = phi %struct.XdgGlobHashNode* [ %23, %39 ], [ %0, %18 ]
  %22 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %21, i64 0, i32 4
  %23 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %22, align 8
  %24 = icmp eq %struct.XdgGlobHashNode* %23, null
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %23, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp ult i32 %6, %27
  br i1 %28, label %29, label %39

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %21, i64 0, i32 4
  %31 = tail call noalias i8* @calloc(i64 1, i64 40) #11
  %32 = bitcast i8* %31 to %struct.XdgGlobHashNode*
  %33 = bitcast i8* %31 to i32*
  store i32 %6, i32* %33, align 8
  %34 = bitcast %struct.XdgGlobHashNode** %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i8, i8* %31, i64 24
  %37 = bitcast i8* %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %struct.XdgGlobHashNode** %30 to i8**
  store i8* %31, i8** %38, align 8
  br label %51

39:                                               ; preds = %25
  %40 = icmp eq i32 %6, %27
  br i1 %40, label %51, label %20

41:                                               ; preds = %20
  %42 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %21, i64 0, i32 4
  %43 = tail call noalias i8* @calloc(i64 1, i64 40) #11
  %44 = bitcast i8* %43 to %struct.XdgGlobHashNode*
  %45 = bitcast i8* %43 to i32*
  store i32 %6, i32* %45, align 8
  %46 = bitcast %struct.XdgGlobHashNode** %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* %43, i64 24
  %49 = bitcast i8* %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = bitcast %struct.XdgGlobHashNode** %42 to i8**
  store i8* %43, i8** %50, align 8
  br label %51

51:                                               ; preds = %39, %29, %41, %18, %12
  %52 = phi %struct.XdgGlobHashNode* [ %14, %12 ], [ %0, %18 ], [ %0, %41 ], [ %0, %29 ], [ %0, %39 ]
  %53 = phi %struct.XdgGlobHashNode* [ %14, %12 ], [ %0, %18 ], [ %44, %41 ], [ %32, %29 ], [ %23, %39 ]
  %54 = getelementptr inbounds i32, i32* %1, i64 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %102

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %53, i64 0, i32 1
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %98, label %61

61:                                               ; preds = %57
  %62 = tail call i32 @strcmp(i8* nonnull %59, i8* %2) #12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %106, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %53, i64 0, i32 5
  %66 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %65, align 8
  %67 = icmp eq %struct.XdgGlobHashNode* %66, null
  br i1 %67, label %82, label %72

68:                                               ; preds = %77
  %69 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %73, i64 0, i32 4
  %70 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %69, align 8
  %71 = icmp eq %struct.XdgGlobHashNode* %70, null
  br i1 %71, label %82, label %72

72:                                               ; preds = %64, %68
  %73 = phi %struct.XdgGlobHashNode* [ %70, %68 ], [ %66, %64 ]
  %74 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %73, i64 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = tail call i32 @strcmp(i8* %79, i8* %2) #12
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %106, label %68

82:                                               ; preds = %72, %68, %64
  %83 = tail call noalias i8* @calloc(i64 1, i64 40) #11
  %84 = tail call noalias i8* @strdup(i8* %2) #11
  %85 = getelementptr inbounds i8, i8* %83, i64 8
  %86 = bitcast i8* %85 to i8**
  store i8* %84, i8** %86, align 8
  %87 = getelementptr inbounds i8, i8* %83, i64 16
  %88 = bitcast i8* %87 to i32*
  store i32 %3, i32* %88, align 8
  %89 = getelementptr inbounds i8, i8* %83, i64 20
  %90 = bitcast i8* %89 to i32*
  store i32 %4, i32* %90, align 4
  %91 = getelementptr inbounds i8, i8* %83, i64 32
  %92 = bitcast i8* %91 to %struct.XdgGlobHashNode**
  store %struct.XdgGlobHashNode* null, %struct.XdgGlobHashNode** %92, align 8
  %93 = bitcast %struct.XdgGlobHashNode** %65 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds i8, i8* %83, i64 24
  %96 = bitcast i8* %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast %struct.XdgGlobHashNode** %65 to i8**
  store i8* %83, i8** %97, align 8
  br label %106

98:                                               ; preds = %57
  %99 = tail call noalias i8* @strdup(i8* %2) #11
  store i8* %99, i8** %58, align 8
  %100 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %53, i64 0, i32 2
  store i32 %3, i32* %100, align 8
  %101 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %53, i64 0, i32 3
  store i32 %4, i32* %101, align 4
  br label %106

102:                                              ; preds = %51
  %103 = getelementptr inbounds %struct.XdgGlobHashNode, %struct.XdgGlobHashNode* %53, i64 0, i32 5
  %104 = load %struct.XdgGlobHashNode*, %struct.XdgGlobHashNode** %103, align 8
  %105 = tail call fastcc %struct.XdgGlobHashNode* @_xdg_glob_hash_insert_ucs4(%struct.XdgGlobHashNode* %104, i32* %54, i8* %2, i32 %3, i32 %4)
  store %struct.XdgGlobHashNode* %105, %struct.XdgGlobHashNode** %103, align 8
  ret %struct.XdgGlobHashNode* %52

106:                                              ; preds = %77, %82, %61, %98
  ret %struct.XdgGlobHashNode* %52
}

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare i32 @putchar(i32) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
