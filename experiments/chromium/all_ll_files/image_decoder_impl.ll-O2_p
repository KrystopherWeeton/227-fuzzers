; ModuleID = '../../services/data_decoder/image_decoder_impl.cc'
source_filename = "../../services/data_decoder/image_decoder_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.data_decoder::ImageDecoderImpl" = type { %"class.data_decoder::mojom::ImageDecoder" }
%"class.data_decoder::mojom::ImageDecoder" = type { i32 (...)** }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr", i64, %"class.absl::optional" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.1" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.12 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.6, i32, i32 }
%class.sk_sp.6 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.7" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.12 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.blink::WebData" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.base::OnceCallback.13" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.20" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.data_decoder::mojom::AnimationFrame"* }
%"class.data_decoder::mojom::AnimationFrame" = type { %class.SkBitmap, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.mojo::StructPtr"* }
%"class.blink::WebVector" = type { %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"*, %"class.std::__1::__compressed_pair.25" }
%"struct.blink::WebImage::AnimationFrame" = type { %class.SkBitmap, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.blink::WebImage::AnimationFrame"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4mojo9StructPtrIN12data_decoder5mojom14AnimationFrameEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZTVN12data_decoder16ImageDecoderImplE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.data_decoder::ImageDecoderImpl"*)* @_ZN12data_decoder16ImageDecoderImplD2Ev to i8*), i8* bitcast (void (%"class.data_decoder::ImageDecoderImpl"*)* @_ZN12data_decoder16ImageDecoderImplD0Ev to i8*), i8* bitcast (void (%"class.data_decoder::ImageDecoderImpl"*, %"class.mojo_base::BigBuffer"*, i32, i1, i64, %"class.gfx::Size"*, %"class.base::OnceCallback"*)* @_ZN12data_decoder16ImageDecoderImpl11DecodeImageEN9mojo_base9BigBufferENS_5mojom10ImageCodecEblRKN3gfx4SizeEN4base12OnceCallbackIFvRK8SkBitmapEEE to i8*), i8* bitcast (void (%"class.data_decoder::ImageDecoderImpl"*, %"class.mojo_base::BigBuffer"*, i1, i64, %"class.base::OnceCallback.13"*)* @_ZN12data_decoder16ImageDecoderImpl15DecodeAnimationEN9mojo_base9BigBufferEblN4base12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrINS_5mojom14AnimationFrameEEENS5_9allocatorISB_EEEEEEE to i8*)] }, align 8

@_ZN12data_decoder16ImageDecoderImplC1Ev = hidden unnamed_addr alias void (%"class.data_decoder::ImageDecoderImpl"*), void (%"class.data_decoder::ImageDecoderImpl"*)* @_ZN12data_decoder16ImageDecoderImplC2Ev
@_ZN12data_decoder16ImageDecoderImplD1Ev = hidden unnamed_addr alias void (%"class.data_decoder::ImageDecoderImpl"*), void (%"class.data_decoder::ImageDecoderImpl"*)* @_ZN12data_decoder16ImageDecoderImplD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12data_decoder16ImageDecoderImplC2Ev(%"class.data_decoder::ImageDecoderImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.data_decoder::ImageDecoderImpl", %"class.data_decoder::ImageDecoderImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12data_decoder16ImageDecoderImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12data_decoder16ImageDecoderImplD2Ev(%"class.data_decoder::ImageDecoderImpl"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12data_decoder16ImageDecoderImplD0Ev(%"class.data_decoder::ImageDecoderImpl"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.data_decoder::ImageDecoderImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12data_decoder16ImageDecoderImpl11DecodeImageEN9mojo_base9BigBufferENS_5mojom10ImageCodecEblRKN3gfx4SizeEN4base12OnceCallbackIFvRK8SkBitmapEEE(%"class.data_decoder::ImageDecoderImpl"* nocapture readnone, %"class.mojo_base::BigBuffer"*, i32, i1 zeroext, i64, %"class.gfx::Size"* dereferenceable(8), %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %class.SkBitmap, align 8
  %11 = alloca %class.SkBitmap, align 8
  %12 = alloca %class.SkBitmap, align 8
  %13 = alloca %"class.blink::WebData", align 8
  %14 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %1) #12
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %7
  %17 = bitcast %class.SkBitmap* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #12
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %10) #12
  %18 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  %24 = inttoptr i64 %21 to %"class.base::internal::BindStateBase"*
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %24, i64 0, i32 1
  %26 = bitcast void ()** %25 to void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)**
  %27 = load void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)*, void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)** %26, align 8
  call void %27(%"class.base::internal::BindStateBase"* %24, %class.SkBitmap* nonnull dereferenceable(56) %10) #12
  br label %54

28:                                               ; preds = %7
  %29 = bitcast %class.SkBitmap* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %29) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %11) #12
  %30 = icmp eq i32 %2, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %28
  %32 = bitcast %class.SkBitmap* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %32) #12
  %33 = bitcast %"class.blink::WebData"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = call i8* @_ZN9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %1) #12
  %35 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %1) #12
  %36 = getelementptr inbounds %"class.blink::WebData", %"class.blink::WebData"* %13, i64 0, i32 0, i32 0
  store i8* null, i8** %36, align 8
  call void @_ZN5blink7WebData6AssignEPKcm(%"class.blink::WebData"* nonnull %13, i8* %34, i64 %35) #12
  call void @_ZN5blink8WebImage8FromDataERKNS_7WebDataERKN3gfx4SizeE(%class.SkBitmap* nonnull sret %12, %"class.blink::WebData"* nonnull dereferenceable(8) %13, %"class.gfx::Size"* dereferenceable(8) %5) #12
  %37 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* nonnull %11, %class.SkBitmap* nonnull dereferenceable(56) %12) #12
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %12) #12
  call void @_ZN5blink7WebData5ResetEv(%"class.blink::WebData"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %32) #12
  br label %38

38:                                               ; preds = %31, %28
  %39 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %11, i64 0, i32 0, i32 0
  %40 = load %class.SkPixelRef*, %class.SkPixelRef** %39, align 8
  %41 = icmp eq %class.SkPixelRef* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %38
  call fastcc void @_ZN12data_decoder12_GLOBAL__N_111ResizeImageEP8SkBitmapbl(%class.SkBitmap* nonnull %11, i1 zeroext %3, i64 %4)
  br label %43

43:                                               ; preds = %42, %38
  %44 = bitcast %"class.base::OnceCallback"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #12
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %47, i64* %48, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %45, align 8
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  %50 = inttoptr i64 %47 to %"class.base::internal::BindStateBase"*
  %51 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %50, i64 0, i32 1
  %52 = bitcast void ()** %51 to void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)**
  %53 = load void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)*, void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*)** %52, align 8
  call void %53(%"class.base::internal::BindStateBase"* %50, %class.SkBitmap* nonnull dereferenceable(56) %11) #12
  br label %54

54:                                               ; preds = %43, %16
  %55 = phi %"class.base::internal::CallbackBase"* [ %49, %43 ], [ %23, %16 ]
  %56 = phi i8* [ %44, %43 ], [ %18, %16 ]
  %57 = phi %class.SkBitmap* [ %11, %43 ], [ %10, %16 ]
  %58 = phi i8* [ %29, %43 ], [ %17, %16 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %57) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %58) #12
  ret void
}

declare i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN5blink8WebImage8FromDataERKNS_7WebDataERKN3gfx4SizeE(%class.SkBitmap* sret, %"class.blink::WebData"* dereferenceable(8), %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #4

declare i8* @_ZN9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #4

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12data_decoder12_GLOBAL__N_111ResizeImageEP8SkBitmapbl(%class.SkBitmap*, i1 zeroext, i64) unnamed_addr #2 {
  %4 = alloca %class.SkBitmap, align 8
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2
  %6 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %5, i64 %7) #12
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi i64 [ %15, %9 ], [ 0, %3 ]
  %11 = shl nuw nsw i64 %10, 1
  %12 = ashr i64 %8, %11
  %13 = add nsw i64 %12, 96
  %14 = icmp sgt i64 %13, %2
  %15 = add nuw i64 %10, 1
  br i1 %14, label %9, label %16

16:                                               ; preds = %9
  %17 = trunc i64 %10 to i32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %16
  br i1 %1, label %20, label %29

20:                                               ; preds = %19
  %21 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %21) #12
  %22 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = ashr i32 %23, %17
  %25 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, %17
  call void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* nonnull sret %4, %class.SkBitmap* dereferenceable(56) %0, i32 5, i32 %24, i32 %27, %"class.SkBitmap::Allocator"* null) #12
  %28 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %0, %class.SkBitmap* nonnull dereferenceable(56) %4) #12
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %21) #12
  br label %30

29:                                               ; preds = %19
  tail call void @_ZN8SkBitmap5resetEv(%class.SkBitmap* %0) #12
  br label %30

30:                                               ; preds = %16, %20, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12data_decoder16ImageDecoderImpl15DecodeAnimationEN9mojo_base9BigBufferEblN4base12OnceCallbackIFvNSt3__16vectorIN4mojo9StructPtrINS_5mojom14AnimationFrameEEENS5_9allocatorISB_EEEEEEE(%"class.data_decoder::ImageDecoderImpl"* nocapture readnone, %"class.mojo_base::BigBuffer"*, i1 zeroext, i64, %"class.base::OnceCallback.13"* nocapture) unnamed_addr #2 align 2 {
  %6 = alloca %"class.base::OnceCallback.13", align 8
  %7 = alloca %"class.base::OnceCallback.13", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.blink::WebVector", align 8
  %10 = alloca %"class.blink::WebData", align 8
  %11 = alloca %"class.std::__1::vector", align 16
  %12 = alloca %"class.mojo::StructPtr", align 8
  %13 = alloca %"class.std::__1::vector", align 16
  %14 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %1) #12
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %51

16:                                               ; preds = %5
  %17 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #12
  %18 = bitcast %"class.base::OnceCallback.13"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %4, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback.13"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback.13"* %7 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %23 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %7, i64 0, i32 0
  %24 = inttoptr i64 %21 to %"class.base::internal::BindStateBase"*
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %24, i64 0, i32 1
  %26 = bitcast void ()** %25 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)**
  %27 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)** %26, align 8
  call void %27(%"class.base::internal::BindStateBase"* %24, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %29 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %28, align 8
  %30 = icmp eq %"class.mojo::StructPtr"* %29, null
  br i1 %30, label %218, label %31

31:                                               ; preds = %16
  %32 = bitcast %"class.mojo::StructPtr"* %29 to i8*
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %34 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %33, align 8
  %35 = icmp eq %"class.mojo::StructPtr"* %34, %29
  br i1 %35, label %49, label %36

36:                                               ; preds = %31, %44
  %37 = phi %"class.mojo::StructPtr"* [ %38, %44 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 -1
  %39 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.data_decoder::mojom::AnimationFrame"*, %"class.data_decoder::mojom::AnimationFrame"** %39, align 8
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %39, align 8
  %41 = icmp eq %"class.data_decoder::mojom::AnimationFrame"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  call void @_ZN12data_decoder5mojom14AnimationFrameD1Ev(%"class.data_decoder::mojom::AnimationFrame"* nonnull %40) #12
  %43 = bitcast %"class.data_decoder::mojom::AnimationFrame"* %40 to i8*
  call void @_ZdlPv(i8* %43) #11
  br label %44

44:                                               ; preds = %42, %36
  %45 = icmp eq %"class.mojo::StructPtr"* %38, %29
  br i1 %45, label %46, label %36

46:                                               ; preds = %44
  %47 = bitcast %"class.std::__1::vector"* %8 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %31
  %50 = phi i8* [ %48, %46 ], [ %32, %31 ]
  store %"class.mojo::StructPtr"* %29, %"class.mojo::StructPtr"** %33, align 8
  call void @_ZdlPv(i8* %50) #11
  br label %218

51:                                               ; preds = %5
  %52 = bitcast %"class.blink::WebVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #12
  %53 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %9, i64 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %9, i64 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.blink::WebData"* %10 to i8*
  %56 = bitcast %"class.blink::WebVector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  %57 = tail call i8* @_ZN9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %1) #12
  %58 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %1) #12
  %59 = getelementptr inbounds %"class.blink::WebData", %"class.blink::WebData"* %10, i64 0, i32 0, i32 0
  store i8* null, i8** %59, align 8
  call void @_ZN5blink7WebData6AssignEPKcm(%"class.blink::WebData"* nonnull %10, i8* %57, i64 %58) #12
  call void @_ZN5blink8WebImage17AnimationFromDataERKNS_7WebDataE(%"class.blink::WebVector"* nonnull sret %9, %"class.blink::WebData"* nonnull dereferenceable(8) %10) #12
  call void @_ZN5blink7WebData5ResetEv(%"class.blink::WebData"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  %60 = bitcast %"struct.blink::WebImage::AnimationFrame"** %54 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.blink::WebVector"* %9 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = ashr exact i64 %64, 6
  %66 = udiv i64 %3, %65
  %67 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #12
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 0, i64 24, i1 false) #12
  %71 = inttoptr i64 %63 to %"struct.blink::WebImage::AnimationFrame"*
  %72 = inttoptr i64 %61 to %"struct.blink::WebImage::AnimationFrame"*
  %73 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %71, %72
  br i1 %73, label %139, label %74

74:                                               ; preds = %51
  %75 = bitcast %"class.mojo::StructPtr"* %12 to i8*
  %76 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.mojo::StructPtr"* %12 to i64*
  %78 = bitcast %"class.mojo::StructPtr"** %69 to i64*
  br label %79

79:                                               ; preds = %128, %74
  %80 = phi %"struct.blink::WebImage::AnimationFrame"* [ %71, %74 ], [ %131, %128 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #12
  %81 = call i8* @_Znwm(i64 64) #11, !noalias !2
  %82 = bitcast i8* %81 to %"class.data_decoder::mojom::AnimationFrame"*
  call void @_ZN12data_decoder5mojom14AnimationFrameC1Ev(%"class.data_decoder::mojom::AnimationFrame"* nonnull %82) #12, !noalias !2
  %83 = ptrtoint i8* %81 to i64
  store i64 %83, i64* %77, align 8, !alias.scope !2
  %84 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %80, i64 0, i32 0
  %85 = bitcast i8* %81 to %class.SkBitmap*
  %86 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* nonnull %85, %class.SkBitmap* dereferenceable(56) %84) #12
  %87 = load %"class.data_decoder::mojom::AnimationFrame"*, %"class.data_decoder::mojom::AnimationFrame"** %76, align 8
  %88 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %80, i64 0, i32 1, i32 0
  %89 = getelementptr inbounds %"class.data_decoder::mojom::AnimationFrame", %"class.data_decoder::mojom::AnimationFrame"* %87, i64 0, i32 1, i32 0
  %90 = load i64, i64* %88, align 8
  store i64 %90, i64* %89, align 8
  %91 = getelementptr inbounds %"class.data_decoder::mojom::AnimationFrame", %"class.data_decoder::mojom::AnimationFrame"* %87, i64 0, i32 0
  call fastcc void @_ZN12data_decoder12_GLOBAL__N_111ResizeImageEP8SkBitmapbl(%class.SkBitmap* %91, i1 zeroext %2, i64 %66)
  %92 = load %"class.data_decoder::mojom::AnimationFrame"*, %"class.data_decoder::mojom::AnimationFrame"** %76, align 8
  %93 = getelementptr inbounds %"class.data_decoder::mojom::AnimationFrame", %"class.data_decoder::mojom::AnimationFrame"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = load %class.SkPixelRef*, %class.SkPixelRef** %93, align 8
  %95 = icmp eq %class.SkPixelRef* %94, null
  br i1 %95, label %96, label %111

96:                                               ; preds = %79
  %97 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %68, align 16
  %98 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %69, align 8
  %99 = icmp eq %"class.mojo::StructPtr"* %98, %97
  br i1 %99, label %110, label %100

100:                                              ; preds = %96, %108
  %101 = phi %"class.mojo::StructPtr"* [ %102, %108 ], [ %98, %96 ]
  %102 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %101, i64 -1
  %103 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"class.data_decoder::mojom::AnimationFrame"*, %"class.data_decoder::mojom::AnimationFrame"** %103, align 8
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %103, align 8
  %105 = icmp eq %"class.data_decoder::mojom::AnimationFrame"* %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %100
  call void @_ZN12data_decoder5mojom14AnimationFrameD1Ev(%"class.data_decoder::mojom::AnimationFrame"* nonnull %104) #12
  %107 = bitcast %"class.data_decoder::mojom::AnimationFrame"* %104 to i8*
  call void @_ZdlPv(i8* %107) #11
  br label %108

108:                                              ; preds = %106, %100
  %109 = icmp eq %"class.mojo::StructPtr"* %102, %97
  br i1 %109, label %110, label %100

110:                                              ; preds = %108, %96
  store %"class.mojo::StructPtr"* %97, %"class.mojo::StructPtr"** %69, align 8
  br label %122

111:                                              ; preds = %79
  %112 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %69, align 8
  %113 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %70, align 16
  %114 = icmp ult %"class.mojo::StructPtr"* %112, %113
  br i1 %114, label %115, label %121

115:                                              ; preds = %111
  %116 = bitcast %"class.mojo::StructPtr"* %112 to i64*
  %117 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %112, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %117, align 8
  %118 = load i64, i64* %77, align 8
  store i64 %118, i64* %116, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %112, i64 1
  %120 = ptrtoint %"class.mojo::StructPtr"* %119 to i64
  store i64 %120, i64* %78, align 8
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %76, align 8
  br label %128

121:                                              ; preds = %111
  call void @_ZNSt3__16vectorIN4mojo9StructPtrIN12data_decoder5mojom14AnimationFrameEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* nonnull %11, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %12) #12
  br label %122

122:                                              ; preds = %121, %110
  %123 = phi i32 [ 0, %121 ], [ 2, %110 ]
  %124 = load %"class.data_decoder::mojom::AnimationFrame"*, %"class.data_decoder::mojom::AnimationFrame"** %76, align 8
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %76, align 8
  %125 = icmp eq %"class.data_decoder::mojom::AnimationFrame"* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.data_decoder::mojom::AnimationFrame"* %124 to i8*
  call void @_ZN12data_decoder5mojom14AnimationFrameD1Ev(%"class.data_decoder::mojom::AnimationFrame"* nonnull %124) #12
  call void @_ZdlPv(i8* %127) #11
  br label %128

128:                                              ; preds = %115, %122, %126
  %129 = phi i32 [ 0, %115 ], [ %123, %122 ], [ %123, %126 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #12
  %130 = icmp ne i32 %129, 0
  %131 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %80, i64 1
  %132 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %131, %72
  %133 = or i1 %130, %132
  br i1 %133, label %134, label %79

134:                                              ; preds = %128
  %135 = bitcast %"class.std::__1::vector"* %11 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 16
  %137 = bitcast %"class.mojo::StructPtr"** %70 to i64*
  %138 = load i64, i64* %137, align 16
  br label %139

139:                                              ; preds = %51, %134
  %140 = phi i64 [ %138, %134 ], [ 0, %51 ]
  %141 = phi <2 x i64> [ %136, %134 ], [ zeroinitializer, %51 ]
  %142 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %143 = bitcast %"class.std::__1::vector"* %13 to <2 x i64>*
  store <2 x i64> %141, <2 x i64>* %143, align 16
  %144 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %145 = bitcast %"class.mojo::StructPtr"** %144 to i64*
  store i64 %140, i64* %145, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 0, i64 24, i1 false) #12
  %146 = bitcast %"class.base::OnceCallback.13"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #12
  %147 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %4, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.base::OnceCallback.13"* %4 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.base::OnceCallback.13"* %6 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %147, align 8
  %151 = getelementptr inbounds %"class.base::OnceCallback.13", %"class.base::OnceCallback.13"* %6, i64 0, i32 0
  %152 = inttoptr i64 %149 to %"class.base::internal::BindStateBase"*
  %153 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %152, i64 0, i32 1
  %154 = bitcast void ()** %153 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)**
  %155 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::vector"*)** %154, align 8
  call void %155(%"class.base::internal::BindStateBase"* %152, %"class.std::__1::vector"* nonnull dereferenceable(24) %13) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %151) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #12
  %156 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %157 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %156, align 16
  %158 = icmp eq %"class.mojo::StructPtr"* %157, null
  br i1 %158, label %178, label %159

159:                                              ; preds = %139
  %160 = bitcast %"class.mojo::StructPtr"* %157 to i8*
  %161 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %142, align 8
  %162 = icmp eq %"class.mojo::StructPtr"* %161, %157
  br i1 %162, label %176, label %163

163:                                              ; preds = %159, %171
  %164 = phi %"class.mojo::StructPtr"* [ %165, %171 ], [ %161, %159 ]
  %165 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %164, i64 -1
  %166 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %165, i64 0, i32 0, i32 0, i32 0, i32 0
  %167 = load %"class.data_decoder::mojom::AnimationFrame"*, %"class.data_decoder::mojom::AnimationFrame"** %166, align 8
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %166, align 8
  %168 = icmp eq %"class.data_decoder::mojom::AnimationFrame"* %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %163
  call void @_ZN12data_decoder5mojom14AnimationFrameD1Ev(%"class.data_decoder::mojom::AnimationFrame"* nonnull %167) #12
  %170 = bitcast %"class.data_decoder::mojom::AnimationFrame"* %167 to i8*
  call void @_ZdlPv(i8* %170) #11
  br label %171

171:                                              ; preds = %169, %163
  %172 = icmp eq %"class.mojo::StructPtr"* %165, %157
  br i1 %172, label %173, label %163

173:                                              ; preds = %171
  %174 = bitcast %"class.std::__1::vector"* %13 to i8**
  %175 = load i8*, i8** %174, align 16
  br label %176

176:                                              ; preds = %173, %159
  %177 = phi i8* [ %175, %173 ], [ %160, %159 ]
  store %"class.mojo::StructPtr"* %157, %"class.mojo::StructPtr"** %142, align 8
  call void @_ZdlPv(i8* %177) #11
  br label %178

178:                                              ; preds = %139, %176
  %179 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %68, align 16
  %180 = icmp eq %"class.mojo::StructPtr"* %179, null
  br i1 %180, label %200, label %181

181:                                              ; preds = %178
  %182 = bitcast %"class.mojo::StructPtr"* %179 to i8*
  %183 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %69, align 8
  %184 = icmp eq %"class.mojo::StructPtr"* %183, %179
  br i1 %184, label %198, label %185

185:                                              ; preds = %181, %193
  %186 = phi %"class.mojo::StructPtr"* [ %187, %193 ], [ %183, %181 ]
  %187 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %186, i64 -1
  %188 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %187, i64 0, i32 0, i32 0, i32 0, i32 0
  %189 = load %"class.data_decoder::mojom::AnimationFrame"*, %"class.data_decoder::mojom::AnimationFrame"** %188, align 8
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %188, align 8
  %190 = icmp eq %"class.data_decoder::mojom::AnimationFrame"* %189, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %185
  call void @_ZN12data_decoder5mojom14AnimationFrameD1Ev(%"class.data_decoder::mojom::AnimationFrame"* nonnull %189) #12
  %192 = bitcast %"class.data_decoder::mojom::AnimationFrame"* %189 to i8*
  call void @_ZdlPv(i8* %192) #11
  br label %193

193:                                              ; preds = %191, %185
  %194 = icmp eq %"class.mojo::StructPtr"* %187, %179
  br i1 %194, label %195, label %185

195:                                              ; preds = %193
  %196 = bitcast %"class.std::__1::vector"* %11 to i8**
  %197 = load i8*, i8** %196, align 16
  br label %198

198:                                              ; preds = %195, %181
  %199 = phi i8* [ %197, %195 ], [ %182, %181 ]
  store %"class.mojo::StructPtr"* %179, %"class.mojo::StructPtr"** %69, align 8
  call void @_ZdlPv(i8* %199) #11
  br label %200

200:                                              ; preds = %178, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #12
  %201 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %53, align 8
  %202 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %201, null
  br i1 %202, label %217, label %203

203:                                              ; preds = %200
  %204 = bitcast %"struct.blink::WebImage::AnimationFrame"* %201 to i8*
  %205 = load %"struct.blink::WebImage::AnimationFrame"*, %"struct.blink::WebImage::AnimationFrame"** %54, align 8
  %206 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %205, %201
  br i1 %206, label %215, label %207

207:                                              ; preds = %203, %207
  %208 = phi %"struct.blink::WebImage::AnimationFrame"* [ %209, %207 ], [ %205, %203 ]
  %209 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %208, i64 -1
  %210 = getelementptr inbounds %"struct.blink::WebImage::AnimationFrame", %"struct.blink::WebImage::AnimationFrame"* %209, i64 0, i32 0
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %210) #12
  %211 = icmp eq %"struct.blink::WebImage::AnimationFrame"* %209, %201
  br i1 %211, label %212, label %207

212:                                              ; preds = %207
  %213 = bitcast %"class.blink::WebVector"* %9 to i8**
  %214 = load i8*, i8** %213, align 8
  br label %215

215:                                              ; preds = %212, %203
  %216 = phi i8* [ %214, %212 ], [ %204, %203 ]
  store %"struct.blink::WebImage::AnimationFrame"* %201, %"struct.blink::WebImage::AnimationFrame"** %54, align 8
  call void @_ZdlPv(i8* %216) #11
  br label %217

217:                                              ; preds = %200, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #12
  br label %218

218:                                              ; preds = %49, %16, %217
  ret void
}

declare void @_ZN5blink8WebImage17AnimationFromDataERKNS_7WebDataE(%"class.blink::WebVector"* sret, %"class.blink::WebData"* dereferenceable(8)) local_unnamed_addr #4

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #4

declare void @_ZN5blink7WebData6AssignEPKcm(%"class.blink::WebData"*, i8*, i64) local_unnamed_addr #4

declare void @_ZN5blink7WebData5ResetEv(%"class.blink::WebData"*) local_unnamed_addr #4

declare void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* sret, %class.SkBitmap* dereferenceable(56), i32, i32, i32, %"class.SkBitmap::Allocator"*) local_unnamed_addr #4

declare void @_ZN8SkBitmap5resetEv(%class.SkBitmap*) local_unnamed_addr #4

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN12data_decoder5mojom14AnimationFrameD1Ev(%"class.data_decoder::mojom::AnimationFrame"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN12data_decoder5mojom14AnimationFrameC1Ev(%"class.data_decoder::mojom::AnimationFrame"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo9StructPtrIN12data_decoder5mojom14AnimationFrameEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.mojo::StructPtr"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.mojo::StructPtr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.mojo::StructPtr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.mojo::StructPtr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %36, i64 %35
  %39 = ptrtoint %"class.mojo::StructPtr"* %38 to i64
  %40 = bitcast %"class.mojo::StructPtr"* %37 to i64*
  %41 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %41, align 8
  %42 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 0, i64* %42, align 8
  %44 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 1
  %45 = ptrtoint %"class.mojo::StructPtr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %46, align 8
  %48 = ptrtoint %"class.mojo::StructPtr"* %47 to i64
  %49 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %3, align 8
  %50 = icmp eq %"class.mojo::StructPtr"* %49, %47
  br i1 %50, label %108, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.data_decoder::mojom::AnimationFrame"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.mojo::StructPtr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.mojo::StructPtr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %61, i64 -1
  %65 = bitcast %"class.mojo::StructPtr"* %63 to i64*
  %66 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %66, align 8
  %67 = bitcast %"class.mojo::StructPtr"* %64 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 0, i64* %67, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !5

71:                                               ; preds = %59, %51
  %72 = phi %"class.mojo::StructPtr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.mojo::StructPtr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.mojo::StructPtr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 24
  br i1 %75, label %104, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.mojo::StructPtr"* [ %97, %76 ], [ %73, %71 ]
  %78 = phi %"class.mojo::StructPtr"* [ %98, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -1
  %81 = bitcast %"class.mojo::StructPtr"* %79 to i64*
  %82 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %82, align 8
  %83 = bitcast %"class.mojo::StructPtr"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %81, align 8
  store i64 0, i64* %83, align 8
  %85 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -2
  %87 = bitcast %"class.mojo::StructPtr"* %85 to i64*
  %88 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %88, align 8
  %89 = bitcast %"class.mojo::StructPtr"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  store i64 0, i64* %89, align 8
  %91 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -3
  %93 = bitcast %"class.mojo::StructPtr"* %91 to i64*
  %94 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %94, align 8
  %95 = bitcast %"class.mojo::StructPtr"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %93, align 8
  store i64 0, i64* %95, align 8
  %97 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 -4
  %99 = bitcast %"class.mojo::StructPtr"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  store i64 0, i64* %101, align 8
  %103 = icmp eq %"class.mojo::StructPtr"* %98, %47
  br i1 %103, label %104, label %76

104:                                              ; preds = %76, %71
  %105 = phi %"class.mojo::StructPtr"* [ %72, %71 ], [ %97, %76 ]
  %106 = load i64, i64* %6, align 8
  %107 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %3, align 8
  br label %108

108:                                              ; preds = %34, %104
  %109 = phi %"class.mojo::StructPtr"* [ %107, %104 ], [ %47, %34 ]
  %110 = phi %"class.mojo::StructPtr"* [ %105, %104 ], [ %37, %34 ]
  %111 = phi i64 [ %106, %104 ], [ %48, %34 ]
  %112 = ptrtoint %"class.mojo::StructPtr"* %110 to i64
  store i64 %112, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %113 = inttoptr i64 %111 to %"class.mojo::StructPtr"*
  %114 = icmp eq %"class.mojo::StructPtr"* %109, %113
  br i1 %114, label %125, label %115

115:                                              ; preds = %108, %123
  %116 = phi %"class.mojo::StructPtr"* [ %117, %123 ], [ %109, %108 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %116, i64 -1
  %118 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"class.data_decoder::mojom::AnimationFrame"*, %"class.data_decoder::mojom::AnimationFrame"** %118, align 8
  store %"class.data_decoder::mojom::AnimationFrame"* null, %"class.data_decoder::mojom::AnimationFrame"** %118, align 8
  %120 = icmp eq %"class.data_decoder::mojom::AnimationFrame"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %115
  tail call void @_ZN12data_decoder5mojom14AnimationFrameD1Ev(%"class.data_decoder::mojom::AnimationFrame"* nonnull %119) #12
  %122 = bitcast %"class.data_decoder::mojom::AnimationFrame"* %119 to i8*
  tail call void @_ZdlPv(i8* %122) #11
  br label %123

123:                                              ; preds = %121, %115
  %124 = icmp eq %"class.mojo::StructPtr"* %117, %113
  br i1 %124, label %125, label %115

125:                                              ; preds = %123, %108
  %126 = icmp eq i64 %111, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %111 to i8*
  tail call void @_ZdlPv(i8* %128) #11
  br label %129

129:                                              ; preds = %125, %127
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12data_decoder5mojom14AnimationFrame3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN12data_decoder5mojom14AnimationFrame3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
