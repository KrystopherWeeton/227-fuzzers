; ModuleID = 'gen/third_party/blink/renderer/core/animation/base_property_indexed_keyframe.cc'
source_filename = "gen/third_party/blink/renderer/core/animation/base_property_indexed_keyframe.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::BasePropertyIndexedKeyframe" = type { %"class.blink::IDLDictionaryBase", %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence", %"class.blink::StringOrStringSequence", %"class.blink::DoubleOrDoubleOrNullSequence" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence" = type { i32, %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::StringOrStringSequence" = type { i32, %"class.WTF::String", %"class.WTF::Vector" }
%"class.blink::DoubleOrDoubleOrNullSequence" = type { i32, double, %"class.WTF::Vector.1" }
%"class.WTF::Vector.1" = type { %"class.WTF::VectorBuffer.2" }
%"class.WTF::VectorBuffer.2" = type { %"class.WTF::VectorBufferBase.3" }
%"class.WTF::VectorBufferBase.3" = type { %"class.absl::optional"*, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.137", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.178", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.117", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__cxx_atomic_impl.40" }
%"struct.std::__1::__cxx_atomic_impl.40" = type { %"struct.std::__1::__cxx_atomic_base_impl.41" }
%"struct.std::__1::__cxx_atomic_base_impl.41" = type { i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::Worklist.48"* }
%"class.blink::Worklist.48" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist.55"* }
%"class.blink::Worklist.55" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.37" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.97", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.111", [4 x i8] }>
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99", %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i64 }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { float }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.120", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.129" }
%"class.WTF::Vector.129" = type { %"class.WTF::VectorBuffer.130" }
%"class.WTF::VectorBuffer.130" = type { %"class.WTF::VectorBufferBase.131" }
%"class.WTF::VectorBufferBase.131" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.145" }
%"class.WTF::VectorBuffer.145" = type { %"class.WTF::VectorBufferBase.146" }
%"class.WTF::VectorBufferBase.146" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.159" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.48"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.55"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.182" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__cxx_atomic_impl.180" }
%"struct.std::__1::__cxx_atomic_impl.180" = type { %"struct.std::__1::__cxx_atomic_base_impl.181" }
%"struct.std::__1::__cxx_atomic_base_impl.181" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Value" = type { i8 }
%"class.v8::Object" = type { i8 }

@_ZTVN5blink27BasePropertyIndexedKeyframeE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::BasePropertyIndexedKeyframe"*)* @_ZN5blink27BasePropertyIndexedKeyframeD2Ev to i8*), i8* bitcast (void (%"class.blink::BasePropertyIndexedKeyframe"*)* @_ZN5blink27BasePropertyIndexedKeyframeD0Ev to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::BasePropertyIndexedKeyframe"*, %"class.v8::Object"*, %"class.v8::Isolate"*)* @_ZNK5blink27BasePropertyIndexedKeyframe8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE to i8*), i8* bitcast (void (%"class.blink::BasePropertyIndexedKeyframe"*, %"class.blink::Visitor"*)* @_ZNK5blink27BasePropertyIndexedKeyframe5TraceEPNS_7VisitorE to i8*)] }, align 8

@_ZN5blink27BasePropertyIndexedKeyframeC1Ev = hidden unnamed_addr alias void (%"class.blink::BasePropertyIndexedKeyframe"*), void (%"class.blink::BasePropertyIndexedKeyframe"*)* @_ZN5blink27BasePropertyIndexedKeyframeC2Ev
@_ZN5blink27BasePropertyIndexedKeyframeD1Ev = hidden unnamed_addr alias void (%"class.blink::BasePropertyIndexedKeyframe"*), void (%"class.blink::BasePropertyIndexedKeyframe"*)* @_ZN5blink27BasePropertyIndexedKeyframeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BasePropertyIndexedKeyframeC2Ev(%"class.blink::BasePropertyIndexedKeyframe"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence", align 8
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = alloca %"class.blink::StringOrStringSequence", align 8
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.blink::DoubleOrDoubleOrNullSequence", align 8
  %7 = alloca %"class.WTF::Vector.1", align 8
  %8 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink27BasePropertyIndexedKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 1
  tail call void @_ZN5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequenceC1Ev(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %9) #4
  %10 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 2
  tail call void @_ZN5blink22StringOrStringSequenceC1Ev(%"class.blink::StringOrStringSequence"* %10) #4
  %11 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 3
  tail call void @_ZN5blink28DoubleOrDoubleOrNullSequenceC1Ev(%"class.blink::DoubleOrDoubleOrNullSequence"* %11) #4
  %12 = bitcast %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #4
  %13 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #4
  call void @_ZN5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequence36FromCompositeOperationOrAutoSequenceERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* nonnull sret %2, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #4
  %14 = call dereferenceable(32) %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* @_ZN5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequenceaSERKS0_(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %9, %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* nonnull dereferenceable(32) %2) #4
  call void @_ZN5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequenceD1Ev(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* nonnull %2) #4
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !2

18:                                               ; preds = %1
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !3

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #4
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector"* %3 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #4
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %1, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #4
  %53 = bitcast %"class.blink::StringOrStringSequence"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #4
  %54 = bitcast %"class.WTF::Vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 16, i1 false) #4
  call void @_ZN5blink22StringOrStringSequence18FromStringSequenceERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::StringOrStringSequence"* nonnull sret %4, %"class.WTF::Vector"* nonnull dereferenceable(16) %5) #4
  %55 = call dereferenceable(32) %"class.blink::StringOrStringSequence"* @_ZN5blink22StringOrStringSequenceaSERKS0_(%"class.blink::StringOrStringSequence"* %10, %"class.blink::StringOrStringSequence"* nonnull dereferenceable(32) %4) #4
  call void @_ZN5blink22StringOrStringSequenceD1Ev(%"class.blink::StringOrStringSequence"* nonnull %4) #4
  %56 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::String"*, %"class.WTF::String"** %56, align 8
  %58 = icmp eq %"class.WTF::String"* %57, null
  br i1 %58, label %93, label %59, !prof !2

59:                                               ; preds = %52
  %60 = bitcast %"class.WTF::String"* %57 to i8*
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %91, label %64, !prof !3

64:                                               ; preds = %59
  %65 = zext i32 %62 to i64
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 %65
  br label %67

67:                                               ; preds = %85, %64
  %68 = phi %"class.WTF::String"* [ %86, %85 ], [ %57, %64 ]
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #4
  br label %85

85:                                               ; preds = %84, %81, %67
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 1
  %87 = icmp eq %"class.WTF::String"* %86, %66
  br i1 %87, label %88, label %67

88:                                               ; preds = %85
  store i32 0, i32* %61, align 4
  %89 = bitcast %"class.WTF::Vector"* %5 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %88, %59
  %92 = phi i8* [ %90, %88 ], [ %60, %59 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #4
  store %"class.WTF::String"* null, %"class.WTF::String"** %56, align 8
  br label %93

93:                                               ; preds = %52, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #4
  %94 = bitcast %"class.blink::DoubleOrDoubleOrNullSequence"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #4
  %95 = bitcast %"class.WTF::Vector.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 16, i1 false) #4
  call void @_ZN5blink28DoubleOrDoubleOrNullSequence24FromDoubleOrNullSequenceERKN3WTF6VectorIN4absl8optionalIdEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::DoubleOrDoubleOrNullSequence"* nonnull sret %6, %"class.WTF::Vector.1"* nonnull dereferenceable(16) %7) #4
  %96 = call dereferenceable(32) %"class.blink::DoubleOrDoubleOrNullSequence"* @_ZN5blink28DoubleOrDoubleOrNullSequenceaSERKS0_(%"class.blink::DoubleOrDoubleOrNullSequence"* %11, %"class.blink::DoubleOrDoubleOrNullSequence"* nonnull dereferenceable(32) %6) #4
  call void @_ZN5blink28DoubleOrDoubleOrNullSequenceD1Ev(%"class.blink::DoubleOrDoubleOrNullSequence"* nonnull %6) #4
  %97 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %7, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.absl::optional"*, %"class.absl::optional"** %97, align 8
  %99 = icmp eq %"class.absl::optional"* %98, null
  br i1 %99, label %107, label %100, !prof !2

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.WTF::Vector.1", %"class.WTF::Vector.1"* %7, i64 0, i32 0, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104, !prof !3

104:                                              ; preds = %100
  store i32 0, i32* %101, align 4
  br label %105

105:                                              ; preds = %104, %100
  %106 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %106) #4
  store %"class.absl::optional"* null, %"class.absl::optional"** %97, align 8
  br label %107

107:                                              ; preds = %93, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #4
  ret void
}

declare void @_ZN5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequenceC1Ev(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*) unnamed_addr #1

declare void @_ZN5blink22StringOrStringSequenceC1Ev(%"class.blink::StringOrStringSequence"*) unnamed_addr #1

declare void @_ZN5blink28DoubleOrDoubleOrNullSequenceC1Ev(%"class.blink::DoubleOrDoubleOrNullSequence"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BasePropertyIndexedKeyframe12setCompositeERKNS_58CompositeOperationOrAutoOrCompositeOperationOrAutoSequenceE(%"class.blink::BasePropertyIndexedKeyframe"*, %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 1
  %4 = tail call dereferenceable(32) %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* @_ZN5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequenceaSERKS0_(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %3, %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* dereferenceable(32) %1) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequence36FromCompositeOperationOrAutoSequenceERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* sret, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequenceD1Ev(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BasePropertyIndexedKeyframe9setEasingERKNS_22StringOrStringSequenceE(%"class.blink::BasePropertyIndexedKeyframe"*, %"class.blink::StringOrStringSequence"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 2
  %4 = tail call dereferenceable(32) %"class.blink::StringOrStringSequence"* @_ZN5blink22StringOrStringSequenceaSERKS0_(%"class.blink::StringOrStringSequence"* %3, %"class.blink::StringOrStringSequence"* dereferenceable(32) %1) #4
  ret void
}

declare void @_ZN5blink22StringOrStringSequence18FromStringSequenceERKN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::StringOrStringSequence"* sret, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22StringOrStringSequenceD1Ev(%"class.blink::StringOrStringSequence"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BasePropertyIndexedKeyframe9setOffsetERKNS_28DoubleOrDoubleOrNullSequenceE(%"class.blink::BasePropertyIndexedKeyframe"*, %"class.blink::DoubleOrDoubleOrNullSequence"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 3
  %4 = tail call dereferenceable(32) %"class.blink::DoubleOrDoubleOrNullSequence"* @_ZN5blink28DoubleOrDoubleOrNullSequenceaSERKS0_(%"class.blink::DoubleOrDoubleOrNullSequence"* %3, %"class.blink::DoubleOrDoubleOrNullSequence"* dereferenceable(32) %1) #4
  ret void
}

declare void @_ZN5blink28DoubleOrDoubleOrNullSequence24FromDoubleOrNullSequenceERKN3WTF6VectorIN4absl8optionalIdEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::DoubleOrDoubleOrNullSequence"* sret, %"class.WTF::Vector.1"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink28DoubleOrDoubleOrNullSequenceD1Ev(%"class.blink::DoubleOrDoubleOrNullSequence"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BasePropertyIndexedKeyframeD2Ev(%"class.blink::BasePropertyIndexedKeyframe"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink27BasePropertyIndexedKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 3
  tail call void @_ZN5blink28DoubleOrDoubleOrNullSequenceD1Ev(%"class.blink::DoubleOrDoubleOrNullSequence"* %3) #4
  %4 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 2
  tail call void @_ZN5blink22StringOrStringSequenceD1Ev(%"class.blink::StringOrStringSequence"* %4) #4
  %5 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 1
  tail call void @_ZN5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequenceD1Ev(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %5) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BasePropertyIndexedKeyframeD0Ev(%"class.blink::BasePropertyIndexedKeyframe"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink27BasePropertyIndexedKeyframeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 3
  tail call void @_ZN5blink28DoubleOrDoubleOrNullSequenceD1Ev(%"class.blink::DoubleOrDoubleOrNullSequence"* %3) #4
  %4 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 2
  tail call void @_ZN5blink22StringOrStringSequenceD1Ev(%"class.blink::StringOrStringSequence"* %4) #4
  %5 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 1
  tail call void @_ZN5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequenceD1Ev(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %5) #4
  ret void
}

declare dereferenceable(32) %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* @_ZN5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequenceaSERKS0_(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*, %"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* dereferenceable(32)) local_unnamed_addr #1

declare dereferenceable(32) %"class.blink::StringOrStringSequence"* @_ZN5blink22StringOrStringSequenceaSERKS0_(%"class.blink::StringOrStringSequence"*, %"class.blink::StringOrStringSequence"* dereferenceable(32)) local_unnamed_addr #1

declare dereferenceable(32) %"class.blink::DoubleOrDoubleOrNullSequence"* @_ZN5blink28DoubleOrDoubleOrNullSequenceaSERKS0_(%"class.blink::DoubleOrDoubleOrNullSequence"*, %"class.blink::DoubleOrDoubleOrNullSequence"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink27BasePropertyIndexedKeyframe5TraceEPNS_7VisitorE(%"class.blink::BasePropertyIndexedKeyframe"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 1
  tail call void @_ZNK5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequence5TraceEPNS_7VisitorE(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"* %3, %"class.blink::Visitor"* %1) #4
  %4 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 2
  tail call void @_ZNK5blink22StringOrStringSequence5TraceEPNS_7VisitorE(%"class.blink::StringOrStringSequence"* %4, %"class.blink::Visitor"* %1) #4
  %5 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 3
  tail call void @_ZNK5blink28DoubleOrDoubleOrNullSequence5TraceEPNS_7VisitorE(%"class.blink::DoubleOrDoubleOrNullSequence"* %5, %"class.blink::Visitor"* %1) #4
  %6 = getelementptr inbounds %"class.blink::BasePropertyIndexedKeyframe", %"class.blink::BasePropertyIndexedKeyframe"* %0, i64 0, i32 0
  tail call void @_ZNK5blink17IDLDictionaryBase5TraceEPNS_7VisitorE(%"class.blink::IDLDictionaryBase"* %6, %"class.blink::Visitor"* %1) #4
  ret void
}

declare void @_ZNK5blink17IDLDictionaryBase5TraceEPNS_7VisitorE(%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*) unnamed_addr #1

declare %"class.v8::Value"* @_ZNK5blink27BasePropertyIndexedKeyframe8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::BasePropertyIndexedKeyframe"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZNK5blink58CompositeOperationOrAutoOrCompositeOperationOrAutoSequence5TraceEPNS_7VisitorE(%"class.blink::CompositeOperationOrAutoOrCompositeOperationOrAutoSequence"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink22StringOrStringSequence5TraceEPNS_7VisitorE(%"class.blink::StringOrStringSequence"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink28DoubleOrDoubleOrNullSequence5TraceEPNS_7VisitorE(%"class.blink::DoubleOrDoubleOrNullSequence"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
