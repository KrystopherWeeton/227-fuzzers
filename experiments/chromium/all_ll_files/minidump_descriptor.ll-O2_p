; ModuleID = '../../third_party/breakpad/breakpad/src/client/linux/handler/minidump_descriptor.cc'
source_filename = "../../third_party/breakpad/breakpad/src/client/linux/handler/minidump_descriptor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.google_breakpad::MinidumpDescriptor::MicrodumpOnConsole" = type { i8 }
%"class.google_breakpad::MinidumpDescriptor" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8*, i64, i64, i8, i8, %"struct.google_breakpad::MicrodumpExtraInfo" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.google_breakpad::MicrodumpExtraInfo" = type { i8*, i8*, i8*, i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.MDGUID = type { i32, i16, i16, [8 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

@_ZN15google_breakpad18MinidumpDescriptor19kMicrodumpOnConsoleE = hidden local_unnamed_addr constant %"struct.google_breakpad::MinidumpDescriptor::MicrodumpOnConsole" undef, align 1
@.str = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c".dmp\00", align 1

@_ZN15google_breakpad18MinidumpDescriptorC1ERKS0_ = hidden unnamed_addr alias void (%"class.google_breakpad::MinidumpDescriptor"*, %"class.google_breakpad::MinidumpDescriptor"*), void (%"class.google_breakpad::MinidumpDescriptor"*, %"class.google_breakpad::MinidumpDescriptor"*)* @_ZN15google_breakpad18MinidumpDescriptorC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad18MinidumpDescriptorC2ERKS0_(%"class.google_breakpad::MinidumpDescriptor"*, %"class.google_breakpad::MinidumpDescriptor"* nocapture readonly dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #6
  br label %23

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %9, i8* %20, i64 %22) #6
  br label %23

23:                                               ; preds = %15, %18
  %24 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 3
  %25 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 5
  %26 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 5
  %27 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false)
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %25, align 8
  %29 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 6
  %30 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 6
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 7
  %33 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 7
  %34 = load i8, i8* %33, align 8, !range !2
  store i8 %34, i8* %32, align 8
  %35 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 8
  %36 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 8
  %37 = load i8, i8* %36, align 1, !range !2
  store i8 %37, i8* %35, align 1
  %38 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 9
  %39 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 9
  %40 = bitcast %"struct.google_breakpad::MicrodumpExtraInfo"* %38 to i8*
  %41 = bitcast %"struct.google_breakpad::MicrodumpExtraInfo"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"class.google_breakpad::MinidumpDescriptor"* @_ZN15google_breakpad18MinidumpDescriptoraSERKS0_(%"class.google_breakpad::MinidumpDescriptor"* returned, %"class.google_breakpad::MinidumpDescriptor"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 2
  %11 = icmp eq %"class.google_breakpad::MinidumpDescriptor"* %0, %1
  br i1 %11, label %41, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %16, label %31, label %21

21:                                               ; preds = %12
  br i1 %20, label %25, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #6
  br label %41

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %10, i8* %27, i64 %29) #6
  br label %41

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %37 = zext i8 %19 to i64
  %38 = select i1 %20, i8* %33, i8* %36
  %39 = select i1 %20, i64 %35, i64 %37
  %40 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %10, i8* %38, i64 %39) #6
  br label %41

41:                                               ; preds = %2, %22, %25, %31
  %42 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 3
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %50, align 8
  br label %53

51:                                               ; preds = %41
  %52 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  store i8 0, i8* %52, align 1
  store i8 0, i8* %44, align 1
  br label %53

53:                                               ; preds = %47, %51
  %54 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 4
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  store i8* null, i8** %54, align 8
  tail call void @_ZN15google_breakpad18MinidumpDescriptor10UpdatePathEv(%"class.google_breakpad::MinidumpDescriptor"* %0)
  br label %58

58:                                               ; preds = %53, %57
  %59 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 5
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 5
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 6
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 6
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 7
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 7
  store i8 %66, i8* %67, align 8
  %68 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 8
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 8
  store i8 %69, i8* %70, align 1
  %71 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %1, i64 0, i32 9
  %72 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 9
  %73 = bitcast %"struct.google_breakpad::MicrodumpExtraInfo"* %72 to i8*
  %74 = bitcast %"struct.google_breakpad::MicrodumpExtraInfo"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 32, i1 false)
  ret %"class.google_breakpad::MinidumpDescriptor"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15google_breakpad18MinidumpDescriptor10UpdatePathEv(%"class.google_breakpad::MinidumpDescriptor"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.MDGUID, align 4
  %3 = alloca [37 x i8], align 16
  %4 = alloca [15 x i8], align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %struct.MDGUID* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6
  %8 = getelementptr inbounds [37 x i8], [37 x i8]* %3, i64 0, i64 0
  %9 = bitcast %struct.MDGUID* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 37, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 37, i1 false)
  %10 = call zeroext i1 @_Z10CreateGUIDP6MDGUID(%struct.MDGUID* nonnull %2) #6
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = call zeroext i1 @_Z12GUIDToStringPK6MDGUIDPci(%struct.MDGUID* nonnull %2, i8* nonnull %8, i32 37) #6
  br label %13

13:                                               ; preds = %11, %1
  %14 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 3
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  br label %25

23:                                               ; preds = %13
  %24 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  store i8 0, i8* %24, align 1
  store i8 0, i8* %16, align 1
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %26)
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #6
  %28 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #6
  %29 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #6, !alias.scope !3
  %33 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1, !noalias !3
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %42

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8, !noalias !3
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8, !noalias !3
  br label %45

42:                                               ; preds = %25
  %43 = zext i8 %35 to i64
  %44 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  br label %45

45:                                               ; preds = %42, %37
  %46 = phi i64 [ %39, %37 ], [ %43, %42 ]
  %47 = phi i8* [ %41, %37 ], [ %44, %42 ]
  %48 = add i64 %46, 1
  %49 = icmp ugt i64 %48, -17
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %51) #7
  unreachable

52:                                               ; preds = %45
  %53 = icmp ult i64 %48, 23
  br i1 %53, label %59, label %54

54:                                               ; preds = %52
  %55 = add nuw i64 %46, 17
  %56 = and i64 %55, -16
  %57 = call i8* @_Znwm(i64 %56) #8
  store i8* %57, i8** %30, align 8, !alias.scope !3
  %58 = or i64 %56, -9223372036854775808
  store i64 %58, i64* %32, align 8, !alias.scope !3
  store i64 %46, i64* %31, align 8, !alias.scope !3
  br label %64

59:                                               ; preds = %52
  %60 = trunc i64 %46 to i8
  %61 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  store i8 %60, i8* %62, align 1, !alias.scope !3
  %63 = icmp eq i64 %46, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %54, %59
  %65 = phi i8* [ %57, %54 ], [ %28, %59 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* align 1 %47, i64 %46, i1 false) #6
  br label %66

66:                                               ; preds = %59, %64
  %67 = phi i8* [ %28, %59 ], [ %65, %64 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 %46
  store i8 0, i8* %68, align 1
  %69 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #6
  %70 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* nonnull %8) #6, !noalias !6
  %71 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %71, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #6, !noalias !6
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #6, !noalias !9
  %73 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %74 = bitcast %"class.std::__1::basic_string"* %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = bitcast i64* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %77, i64 15, i1 false)
  %78 = getelementptr inbounds i8, i8* %73, i64 23
  %79 = load i8, i8* %78, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #6, !noalias !9
  %80 = load i8, i8* %16, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %66
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #8
  br label %85

85:                                               ; preds = %82, %66
  %86 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = bitcast i8** %86 to i64*
  store i64 %75, i64* %87, align 8
  %88 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = bitcast i64* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %26, i64 15, i1 false)
  %90 = bitcast %"class.google_breakpad::MinidumpDescriptor"* %0 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 55
  store i8 %79, i8* %91, align 1
  %92 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %85
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #8
  br label %99

99:                                               ; preds = %85, %96
  %100 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %105) #8
  br label %106

106:                                              ; preds = %99, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %26)
  %107 = load i8, i8* %16, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  br label %114

112:                                              ; preds = %106
  %113 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  br label %114

114:                                              ; preds = %109, %112
  %115 = phi i8* [ %111, %109 ], [ %113, %112 ]
  %116 = getelementptr inbounds %"class.google_breakpad::MinidumpDescriptor", %"class.google_breakpad::MinidumpDescriptor"* %0, i64 0, i32 4
  store i8* %115, i8** %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 37, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_Z10CreateGUIDP6MDGUID(%struct.MDGUID*) local_unnamed_addr #2

declare zeroext i1 @_Z12GUIDToStringPK6MDGUIDPci(%struct.MDGUID*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
