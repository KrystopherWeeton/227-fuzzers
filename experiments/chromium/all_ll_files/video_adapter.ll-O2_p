; ModuleID = '../../third_party/webrtc/media/base/video_adapter.cc'
source_filename = "../../third_party/webrtc/media/base/video_adapter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.cricket::VideoAdapter" = type { i32 (...)**, i32, i32, i32, i32, i32, i32, i8, i32, i32, %"class.absl::optional", %"class.absl::optional.0", %"class.absl::optional.5", %"class.absl::optional.0", %"class.absl::optional.5", %"class.absl::optional.5", i32, i32, i32, %"class.webrtc::Mutex" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { i32 }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_mutexattr_t = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.10 }
%union.anon.10 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"struct.cricket::VideoFormat" }
%"struct.cricket::VideoFormat" = type { %"struct.cricket::VideoFormatPod" }
%"struct.cricket::VideoFormatPod" = type { i32, i32, i64, i32 }
%"struct.rtc::VideoSinkWants" = type { i8, i8, i32, %"class.absl::optional.5", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.rtc::VideoSinkWants::FrameSize"*, %"struct.rtc::VideoSinkWants::FrameSize"*, %"class.std::__1::__compressed_pair.17" }
%"struct.rtc::VideoSinkWants::FrameSize" = type { i32, i32 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.rtc::VideoSinkWants::FrameSize"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN6webrtc11field_trial9IsEnabledEPKc = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN7cricket12VideoAdapterE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cricket::VideoAdapter"*)* @_ZN7cricket12VideoAdapterD2Ev to i8*), i8* bitcast (void (%"class.cricket::VideoAdapter"*)* @_ZN7cricket12VideoAdapterD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [38 x i8] c"WebRTC-Video-VariableStartScaleFactor\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"../../third_party/webrtc/media/base/video_adapter.cc\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"VAdapt Drop Frame: scaled \00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c" / out \00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c" / in \00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c" Changes: \00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c" Input: \00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c" timestamp: \00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c" Output fps: \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c" alignment: \00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"Frame size changed: scaled \00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c" Scale: \00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c" Output: \00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c" fps: \00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN7cricket12VideoAdapterC1Ei = hidden unnamed_addr alias void (%"class.cricket::VideoAdapter"*, i32), void (%"class.cricket::VideoAdapter"*, i32)* @_ZN7cricket12VideoAdapterC2Ei
@_ZN7cricket12VideoAdapterC1Ev = hidden unnamed_addr alias void (%"class.cricket::VideoAdapter"*), void (%"class.cricket::VideoAdapter"*)* @_ZN7cricket12VideoAdapterC2Ev
@_ZN7cricket12VideoAdapterD1Ev = hidden unnamed_addr alias void (%"class.cricket::VideoAdapter"*), void (%"class.cricket::VideoAdapter"*)* @_ZN7cricket12VideoAdapterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket12VideoAdapterC2Ei(%"class.cricket::VideoAdapter"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %union.pthread_mutexattr_t, align 4
  %4 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7cricket12VideoAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 7
  %7 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  %8 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0))
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %6, align 8
  %10 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 8
  store i32 %1, i32* %10, align 4
  %11 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 9
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 16
  store i32 2147483647, i32* %18, align 8
  %19 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 17
  store i32 2147483647, i32* %19, align 4
  %20 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 18
  store i32 2147483647, i32* %20, align 8
  %21 = bitcast %union.pthread_mutexattr_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #11
  %22 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %3, i64 0, i32 0
  store i32 -1431655766, i32* %22, align 4
  %23 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %3) #11
  %24 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 19, i32 0, i32 0
  %25 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %24, %union.pthread_mutexattr_t* nonnull %3) #11
  %26 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8*) local_unnamed_addr #1 comdat {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = tail call i64 @strlen(i8* %0) #11
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #12
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #13
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %0, i64 %6, i1 false) #11
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i64 %38, i64 %39
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint i8* %36 to i64
  %44 = icmp slt i64 %40, 7
  br i1 %44, label %63, label %45

45:                                               ; preds = %27, %58
  %46 = phi i64 [ %61, %58 ], [ %40, %27 ]
  %47 = phi i8* [ %59, %58 ], [ %36, %27 ]
  %48 = add nsw i64 %46, -6
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = call i8* @memchr(i8* %47, i32 69, i64 %48) #11
  %52 = icmp eq i8* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = call i32 @bcmp(i8* nonnull %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i64 7) #11
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = ptrtoint i8* %51 to i64
  br label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %51, i64 1
  %60 = ptrtoint i8* %59 to i64
  %61 = sub i64 %42, %60
  %62 = icmp slt i64 %61, 7
  br i1 %62, label %63, label %45

63:                                               ; preds = %58, %50, %45, %56, %27
  %64 = phi i64 [ %42, %27 ], [ %57, %56 ], [ %42, %45 ], [ %42, %50 ], [ %42, %58 ]
  %65 = phi i8* [ %41, %27 ], [ %51, %56 ], [ %41, %45 ], [ %41, %50 ], [ %41, %58 ]
  %66 = icmp ne i8* %65, %41
  %67 = icmp eq i64 %64, %43
  %68 = and i1 %67, %66
  br i1 %33, label %69, label %70

69:                                               ; preds = %63
  call void @_ZdlPv(i8* %35) #13
  br label %70

70:                                               ; preds = %63, %69
  %71 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket12VideoAdapterC2Ev(%"class.cricket::VideoAdapter"*) unnamed_addr #0 align 2 {
  %2 = alloca %union.pthread_mutexattr_t, align 4
  %3 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7cricket12VideoAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 7
  %6 = bitcast i32* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0)) #11
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %5, align 8
  %9 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 8
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 9
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 16
  store i32 2147483647, i32* %17, align 8
  %18 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 17
  store i32 2147483647, i32* %18, align 4
  %19 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 18
  store i32 2147483647, i32* %19, align 8
  %20 = bitcast %union.pthread_mutexattr_t* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #11
  %21 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %2, i64 0, i32 0
  store i32 -1431655766, i32* %21, align 4
  %22 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %2) #11
  %23 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 19, i32 0, i32 0
  %24 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %23, %union.pthread_mutexattr_t* nonnull %2) #11
  %25 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket12VideoAdapterD2Ev(%"class.cricket::VideoAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7cricket12VideoAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 19, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket12VideoAdapterD0Ev(%"class.cricket::VideoAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7cricket12VideoAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 19, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #11
  %5 = bitcast %"class.cricket::VideoAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket12VideoAdapter9KeepFrameEl(%"class.cricket::VideoAdapter"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 18
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, %4
  %12 = select i1 %11, i32 %10, i32 %4
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi i32 [ %12, %8 ], [ %4, %2 ]
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %42, label %16

16:                                               ; preds = %13
  %17 = sext i32 %14 to i64
  %18 = sdiv i64 1000000000, %17
  %19 = icmp slt i64 %18, 1
  br i1 %19, label %42, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = sub nsw i64 %26, %1
  %28 = sub nsw i64 0, %27
  %29 = icmp slt i64 %27, 0
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = shl nsw i64 %18, 1
  %32 = icmp slt i64 %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %24
  %34 = icmp sgt i64 %27, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %33
  %36 = add nsw i64 %26, %18
  store i64 %36, i64* %25, align 8
  br label %42

37:                                               ; preds = %20, %24
  %38 = lshr i64 %18, 1
  %39 = and i64 %38, 2147483647
  %40 = add nsw i64 %39, %1
  store i8 1, i8* %21, align 8
  %41 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %40, i64* %41, align 8
  br label %42

42:                                               ; preds = %33, %35, %37, %16, %13
  %43 = phi i1 [ false, %13 ], [ true, %37 ], [ true, %16 ], [ false, %33 ], [ true, %35 ]
  ret i1 %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7cricket12VideoAdapter20AdaptFrameResolutionEiilPiS1_S1_S1_(%"class.cricket::VideoAdapter"*, i32, i32, i64, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 19, i32 0, i32 0
  %14 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %13) #11
  %15 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 17
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %1, %2
  br i1 %20, label %21, label %40

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast %"struct.std::__1::pair"* %26 to i64*
  %28 = load i64, i64* %27, align 4
  br label %29

29:                                               ; preds = %21, %25
  %30 = phi i8 [ 1, %25 ], [ 0, %21 ]
  %31 = phi i64 [ %28, %25 ], [ -6148914691236517206, %21 ]
  %32 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %59, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, %19
  %39 = select i1 %38, i32 %37, i32 %19
  br label %59

40:                                               ; preds = %8
  %41 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %46 = bitcast %"struct.std::__1::pair"* %45 to i64*
  %47 = load i64, i64* %46, align 4
  br label %48

48:                                               ; preds = %40, %44
  %49 = phi i8 [ 1, %44 ], [ 0, %40 ]
  %50 = phi i64 [ %47, %44 ], [ -6148914691236517206, %40 ]
  %51 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %52 = load i8, i8* %51, align 4, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, %19
  %58 = select i1 %57, i32 %56, i32 %19
  br label %59

59:                                               ; preds = %29, %48, %54, %35
  %60 = phi i8 [ %30, %35 ], [ %30, %29 ], [ %49, %54 ], [ %49, %48 ]
  %61 = phi i64 [ %31, %35 ], [ %31, %29 ], [ %50, %54 ], [ %50, %48 ]
  %62 = phi i32 [ %39, %35 ], [ %19, %29 ], [ %58, %54 ], [ %19, %48 ]
  %63 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 16
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %62, %64
  %66 = select i1 %65, i32 %62, i32 %64
  %67 = icmp slt i32 %62, 1
  br i1 %67, label %108, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 18
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp slt i32 %76, %70
  %78 = select i1 %77, i32 %76, i32 %70
  br label %79

79:                                               ; preds = %74, %68
  %80 = phi i32 [ %78, %74 ], [ %70, %68 ]
  %81 = icmp slt i32 %80, 1
  br i1 %81, label %108, label %82

82:                                               ; preds = %79
  %83 = sext i32 %80 to i64
  %84 = sdiv i64 1000000000, %83
  %85 = icmp slt i64 %84, 1
  br i1 %85, label %155, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %103, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = sub nsw i64 %92, %3
  %94 = sub nsw i64 0, %93
  %95 = icmp slt i64 %93, 0
  %96 = select i1 %95, i64 %94, i64 %93
  %97 = shl nsw i64 %84, 1
  %98 = icmp slt i64 %96, %97
  br i1 %98, label %99, label %103

99:                                               ; preds = %90
  %100 = icmp sgt i64 %93, 0
  br i1 %100, label %108, label %101

101:                                              ; preds = %99
  %102 = add nsw i64 %92, %84
  store i64 %102, i64* %91, align 8
  br label %155

103:                                              ; preds = %90, %86
  %104 = lshr i64 %84, 1
  %105 = and i64 %104, 2147483647
  %106 = add nsw i64 %105, %3
  store i8 1, i8* %87, align 8
  %107 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %106, i64* %107, align 8
  br label %155

108:                                              ; preds = %99, %79, %59
  %109 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = sub nsw i32 %17, %110
  %112 = srem i32 %111, 90
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %363

114:                                              ; preds = %108
  %115 = bitcast %"class.rtc::DiagnosticLogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %115) #11
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %9, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 222, i32 3, i32 0, i32 0) #11
  %116 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %9, i64 0, i32 7
  %117 = bitcast %"class.std::__1::basic_ostringstream"* %116 to %"class.std::__1::basic_ostream"*
  %118 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %117, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i64 26) #11
  %119 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 3
  %120 = load i32, i32* %119, align 8
  %121 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %118, i32 %120) #11
  %122 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %121, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7) #11
  %123 = load i32, i32* %109, align 4
  %124 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %122, i32 %123) #11
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %124, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #11
  %126 = load i32, i32* %15, align 8
  %127 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %125, i32 %126) #11
  %128 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %127, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i64 10) #11
  %129 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 4
  %130 = load i32, i32* %129, align 4
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %128, i32 %130) #11
  %132 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %131, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #11
  %133 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %132, i32 %1) #11
  %134 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %133, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #11
  %135 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %134, i32 %2) #11
  %136 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %135, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i64 12) #11
  %137 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %136, i64 %3) #11
  %138 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %137, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i64 13) #11
  %139 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 18
  %140 = load i32, i32* %139, align 8
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %138, i32 %140) #11
  %142 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %141, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #11
  %143 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143)
  store i32 -1, i32* %10, align 4
  %144 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %145 = load i8, i8* %144, align 4, !range !2
  %146 = icmp eq i8 %145, 0
  %147 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %148 = select i1 %146, i32* %10, i32* %147
  %149 = load i32, i32* %148, align 4
  %150 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %142, i32 %149) #11
  %151 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %150, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i64 12) #11
  %152 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 9
  %153 = load i32, i32* %152, align 8
  %154 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %151, i32 %153) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143)
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %115) #11
  br label %363

155:                                              ; preds = %103, %82, %101
  %156 = icmp eq i8 %60, 0
  br i1 %156, label %164, label %157

157:                                              ; preds = %155
  %158 = trunc i64 %61 to i32
  %159 = icmp slt i32 %158, 1
  br i1 %159, label %164, label %160

160:                                              ; preds = %157
  %161 = lshr i64 %61, 32
  %162 = trunc i64 %161 to i32
  %163 = icmp slt i32 %162, 1
  br i1 %163, label %164, label %165

164:                                              ; preds = %155, %160, %157
  store i32 %1, i32* %4, align 4
  br label %179

165:                                              ; preds = %160
  %166 = sitofp i32 %158 to float
  %167 = sitofp i32 %162 to float
  %168 = fdiv float %166, %167
  %169 = sitofp i32 %2 to float
  %170 = fmul float %168, %169
  %171 = fptosi float %170 to i32
  %172 = icmp slt i32 %171, %1
  %173 = select i1 %172, i32 %171, i32 %1
  store i32 %173, i32* %4, align 4
  %174 = sitofp i32 %1 to float
  %175 = fdiv float %174, %168
  %176 = fptosi float %175 to i32
  %177 = icmp slt i32 %176, %2
  %178 = select i1 %177, i32 %176, i32 %2
  br label %179

179:                                              ; preds = %165, %164
  %180 = phi i32 [ %2, %164 ], [ %178, %165 ]
  store i32 %180, i32* %5, align 4
  %181 = load i32, i32* %4, align 4
  %182 = mul nsw i32 %181, %180
  %183 = icmp sgt i32 %182, %66
  br i1 %183, label %184, label %255

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 7
  %186 = load i8, i8* %185, align 8, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %199, label %188

188:                                              ; preds = %184
  %189 = srem i32 %181, 3
  %190 = srem i32 %180, 3
  %191 = or i32 %189, %190
  %192 = icmp eq i32 %191, 0
  %193 = select i1 %192, i32 6, i32 1
  %194 = srem i32 %181, 9
  %195 = srem i32 %180, 9
  %196 = or i32 %194, %195
  %197 = icmp eq i32 %196, 0
  %198 = select i1 %197, i32 36, i32 %193
  br label %199

199:                                              ; preds = %184, %188
  %200 = phi i32 [ 1, %184 ], [ %198, %188 ]
  %201 = icmp sgt i32 %182, %62
  br i1 %201, label %207, label %202

202:                                              ; preds = %199
  %203 = sub nsw i32 %182, %66
  %204 = icmp slt i32 %203, 0
  %205 = sub nsw i32 0, %203
  %206 = select i1 %204, i32 %205, i32 %203
  br label %207

207:                                              ; preds = %202, %199
  %208 = phi i32 [ %206, %202 ], [ 2147483647, %199 ]
  %209 = mul nsw i32 %200, %200
  %210 = mul i32 %209, %182
  %211 = sdiv i32 %210, %209
  %212 = icmp sgt i32 %211, %66
  br i1 %212, label %213, label %248

213:                                              ; preds = %207, %243
  %214 = phi i32 [ %246, %243 ], [ %208, %207 ]
  %215 = phi i32 [ %245, %243 ], [ 1, %207 ]
  %216 = phi i32 [ %244, %243 ], [ 1, %207 ]
  %217 = phi i32 [ %228, %243 ], [ %200, %207 ]
  %218 = phi i32 [ %227, %243 ], [ %200, %207 ]
  %219 = srem i32 %217, 3
  %220 = sdiv i32 %217, 3
  %221 = and i32 %218, 1
  %222 = or i32 %221, %219
  %223 = icmp eq i32 %222, 0
  %224 = sdiv i32 %218, 2
  %225 = mul nsw i32 %217, 3
  %226 = shl nsw i32 %218, 2
  %227 = select i1 %223, i32 %224, i32 %226
  %228 = select i1 %223, i32 %220, i32 %225
  %229 = mul i32 %228, %182
  %230 = mul i32 %229, %228
  %231 = mul nsw i32 %227, %227
  %232 = sdiv i32 %230, %231
  %233 = icmp sgt i32 %232, %62
  br i1 %233, label %243, label %234

234:                                              ; preds = %213
  %235 = sub nsw i32 %66, %232
  %236 = icmp slt i32 %235, 0
  %237 = sub nsw i32 0, %235
  %238 = select i1 %236, i32 %237, i32 %235
  %239 = icmp slt i32 %238, %214
  %240 = select i1 %239, i32 %227, i32 %216
  %241 = select i1 %239, i32 %228, i32 %215
  %242 = select i1 %239, i32 %238, i32 %214
  br label %243

243:                                              ; preds = %234, %213
  %244 = phi i32 [ %216, %213 ], [ %240, %234 ]
  %245 = phi i32 [ %215, %213 ], [ %241, %234 ]
  %246 = phi i32 [ %214, %213 ], [ %242, %234 ]
  %247 = icmp slt i32 %66, %232
  br i1 %247, label %213, label %248

248:                                              ; preds = %243, %207
  %249 = phi i32 [ 1, %207 ], [ %244, %243 ]
  %250 = phi i32 [ 1, %207 ], [ %245, %243 ]
  %251 = tail call i32 @_ZN7cricket21GreatestCommonDivisorEii(i32 %250, i32 %249) #11
  %252 = sdiv i32 %250, %251
  %253 = sdiv i32 %249, %251
  %254 = load i32, i32* %4, align 4
  br label %255

255:                                              ; preds = %179, %248
  %256 = phi i32 [ %254, %248 ], [ %181, %179 ]
  %257 = phi i32 [ %252, %248 ], [ 1, %179 ]
  %258 = phi i32 [ %253, %248 ], [ 1, %179 ]
  %259 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 9
  %260 = load i32, i32* %259, align 8
  %261 = mul nsw i32 %260, %258
  %262 = add i32 %256, -1
  %263 = add i32 %262, %261
  %264 = srem i32 %263, %261
  %265 = sub i32 %263, %264
  %266 = icmp sgt i32 %265, %1
  br i1 %266, label %267, label %270

267:                                              ; preds = %255
  %268 = srem i32 %1, %261
  %269 = sub i32 %1, %268
  br label %270

270:                                              ; preds = %255, %267
  %271 = phi i32 [ %269, %267 ], [ %265, %255 ]
  store i32 %271, i32* %4, align 4
  %272 = load i32, i32* %5, align 4
  %273 = load i32, i32* %259, align 8
  %274 = mul nsw i32 %273, %258
  %275 = add i32 %272, -1
  %276 = add i32 %275, %274
  %277 = srem i32 %276, %274
  %278 = sub i32 %276, %277
  %279 = icmp sgt i32 %278, %2
  br i1 %279, label %280, label %283

280:                                              ; preds = %270
  %281 = srem i32 %2, %274
  %282 = sub i32 %2, %281
  br label %283

283:                                              ; preds = %270, %280
  %284 = phi i32 [ %282, %280 ], [ %278, %270 ]
  store i32 %284, i32* %5, align 4
  %285 = load i32, i32* %4, align 4
  %286 = sdiv i32 %285, %258
  %287 = mul nsw i32 %286, %257
  store i32 %287, i32* %6, align 4
  %288 = load i32, i32* %5, align 4
  %289 = sdiv i32 %288, %258
  %290 = mul nsw i32 %289, %257
  store i32 %290, i32* %7, align 4
  %291 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 2
  %292 = load i32, i32* %291, align 4
  %293 = add nsw i32 %292, 1
  store i32 %293, i32* %291, align 4
  %294 = icmp eq i32 %257, %258
  br i1 %294, label %299, label %295

295:                                              ; preds = %283
  %296 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 3
  %297 = load i32, i32* %296, align 8
  %298 = add nsw i32 %297, 1
  store i32 %298, i32* %296, align 8
  br label %299

299:                                              ; preds = %283, %295
  %300 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 5
  %301 = load i32, i32* %300, align 8
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %359, label %303

303:                                              ; preds = %299
  %304 = load i32, i32* %6, align 4
  %305 = icmp eq i32 %301, %304
  br i1 %305, label %306, label %311

306:                                              ; preds = %303
  %307 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 6
  %308 = load i32, i32* %307, align 4
  %309 = load i32, i32* %7, align 4
  %310 = icmp eq i32 %308, %309
  br i1 %310, label %359, label %311

311:                                              ; preds = %306, %303
  %312 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 4
  %313 = load i32, i32* %312, align 4
  %314 = add nsw i32 %313, 1
  store i32 %314, i32* %312, align 4
  %315 = bitcast %"class.rtc::DiagnosticLogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %315) #11
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %11, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 275, i32 3, i32 0, i32 0) #11
  %316 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %11, i64 0, i32 7
  %317 = bitcast %"class.std::__1::basic_ostringstream"* %316 to %"class.std::__1::basic_ostream"*
  %318 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %317, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0), i64 27) #11
  %319 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 3
  %320 = load i32, i32* %319, align 8
  %321 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %318, i32 %320) #11
  %322 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %321, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7) #11
  %323 = load i32, i32* %291, align 4
  %324 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %322, i32 %323) #11
  %325 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %324, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #11
  %326 = load i32, i32* %15, align 8
  %327 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %325, i32 %326) #11
  %328 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %327, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i64 10) #11
  %329 = load i32, i32* %312, align 4
  %330 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %328, i32 %329) #11
  %331 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %330, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #11
  %332 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %331, i32 %1) #11
  %333 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %332, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #11
  %334 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %333, i32 %2) #11
  %335 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %334, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i64 8) #11
  %336 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %335, i32 %257) #11
  %337 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %336, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #11
  %338 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %337, i32 %258) #11
  %339 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %338, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9) #11
  %340 = load i32, i32* %6, align 4
  %341 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %339, i32 %340) #11
  %342 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %341, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 1) #11
  %343 = load i32, i32* %7, align 4
  %344 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %342, i32 %343) #11
  %345 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %344, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i64 6) #11
  %346 = load i32, i32* %69, align 8
  %347 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %345, i32 %346) #11
  %348 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %347, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #11
  %349 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %349)
  store i32 -1, i32* %12, align 4
  %350 = load i8, i8* %71, align 4, !range !2
  %351 = icmp eq i8 %350, 0
  %352 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %353 = select i1 %351, i32* %12, i32* %352
  %354 = load i32, i32* %353, align 4
  %355 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %348, i32 %354) #11
  %356 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %355, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i64 12) #11
  %357 = load i32, i32* %259, align 8
  %358 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %356, i32 %357) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %349)
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %315) #11
  br label %359

359:                                              ; preds = %306, %299, %311
  %360 = load i32, i32* %6, align 4
  store i32 %360, i32* %300, align 8
  %361 = load i32, i32* %7, align 4
  %362 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 6
  store i32 %361, i32* %362, align 4
  br label %363

363:                                              ; preds = %108, %114, %359
  %364 = phi i1 [ true, %359 ], [ false, %114 ], [ false, %108 ]
  %365 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #11
  ret i1 %364
}

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket12VideoAdapter21OnOutputFormatRequestERKN4absl8optionalINS_11VideoFormatEEE(%"class.cricket::VideoAdapter"*, %"class.absl::optional.12"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.0", align 4
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.absl::optional.5"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.absl::optional.5"*
  %8 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 12, i1 false)
  store i8 0, i8* %8, align 4
  %9 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store i64 -6148914691236517376, i64* %4, align 8
  %10 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  store i64 -6148914691236517376, i64* %6, align 8
  %11 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %36, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = zext i32 %18 to i64
  %20 = shl nuw i64 %19, 32
  %21 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %union.anon.4* %21 to i64*
  %23 = zext i32 %17 to i64
  %24 = or i64 %20, %23
  store i64 %24, i64* %22, align 4
  store i8 1, i8* %8, align 4
  %25 = mul nsw i32 %18, %17
  %26 = zext i32 %25 to i64
  %27 = shl nuw i64 %26, 32
  %28 = or i64 %27, 1
  store i64 %28, i64* %4, align 8
  %29 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %14
  %33 = udiv i64 1000000000, %30
  store i8 1, i8* %10, align 8
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %34, i32* %35, align 4
  br label %36

36:                                               ; preds = %2, %14, %32
  call void @_ZN7cricket12VideoAdapter21OnOutputFormatRequestERKN4absl8optionalINSt3__14pairIiiEEEERKNS2_IiEESB_(%"class.cricket::VideoAdapter"* %0, %"class.absl::optional.0"* nonnull dereferenceable(12) %3, %"class.absl::optional.5"* nonnull dereferenceable(8) %5, %"class.absl::optional.5"* nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket12VideoAdapter21OnOutputFormatRequestERKN4absl8optionalINSt3__14pairIiiEEEERKNS2_IiEESB_(%"class.cricket::VideoAdapter"*, %"class.absl::optional.0"* nocapture readonly dereferenceable(12), %"class.absl::optional.5"* nocapture readonly dereferenceable(8), %"class.absl::optional.5"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %52, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %52

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %52

16:                                               ; preds = %12
  %17 = icmp slt i32 %10, %14
  %18 = select i1 %17, i32 %14, i32 %10
  %19 = icmp slt i32 %14, %10
  %20 = select i1 %19, i32 %14, i32 %10
  %21 = zext i32 %20 to i64
  %22 = zext i32 %18 to i64
  %23 = shl nuw i64 %22, 32
  %24 = or i64 %23, %21
  %25 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 19, i32 0, i32 0
  %26 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %25) #11
  %27 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %16
  %31 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %18, i32* %31, align 4
  %32 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 %20, i32* %32, align 4
  br label %38

33:                                               ; preds = %16
  %34 = shl nuw i64 %21, 32
  %35 = or i64 %34, %22
  %36 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %union.anon.4* %36 to i64*
  store i64 %35, i64* %37, align 4
  store i8 1, i8* %27, align 4
  br label %38

38:                                               ; preds = %33, %30
  %39 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.absl::optional.5"* %2 to i64*
  %41 = bitcast i8* %39 to i64*
  %42 = load i64, i64* %40, align 4
  store i64 %42, i64* %41, align 4
  %43 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %44 = load i8, i8* %43, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %20, i32* %47, align 4
  %48 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 %18, i32* %48, align 4
  br label %61

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast %union.anon.4* %50 to i64*
  store i64 %24, i64* %51, align 4
  store i8 1, i8* %43, align 4
  br label %61

52:                                               ; preds = %12, %8, %4
  %53 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 19, i32 0, i32 0
  %54 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %53) #11
  %55 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %55, align 4
  %56 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.absl::optional.5"* %2 to i64*
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %57, align 4
  store i64 %59, i64* %58, align 4
  %60 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %60, align 4
  br label %61

61:                                               ; preds = %46, %49, %52
  %62 = phi i64* [ %40, %46 ], [ %40, %49 ], [ %57, %52 ]
  %63 = phi %union.pthread_mutex_t* [ %25, %46 ], [ %25, %49 ], [ %53, %52 ]
  %64 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %62, align 4
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.absl::optional.5"* %3 to i64*
  %69 = bitcast i8* %67 to i64*
  %70 = load i64, i64* %68, align 4
  store i64 %70, i64* %69, align 8
  %71 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %71, align 8
  %72 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %63) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket12VideoAdapter21OnOutputFormatRequestERKN4absl8optionalINSt3__14pairIiiEEEERKNS2_IiEES8_SB_SB_(%"class.cricket::VideoAdapter"*, %"class.absl::optional.0"* nocapture readonly dereferenceable(12), %"class.absl::optional.5"* nocapture readonly dereferenceable(8), %"class.absl::optional.0"* nocapture readonly dereferenceable(12), %"class.absl::optional.5"* nocapture readonly dereferenceable(8), %"class.absl::optional.5"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 19, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %7) #11
  %9 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11
  %10 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %30, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 %23, i32* %24, align 4
  br label %32

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"struct.std::__1::pair"* %14 to i64*
  %28 = bitcast %union.anon.4* %26 to i64*
  %29 = load i64, i64* %27, align 4
  store i64 %29, i64* %28, align 4
  store i8 1, i8* %15, align 4
  br label %32

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %31, align 4
  br label %32

32:                                               ; preds = %18, %25, %30
  %33 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.absl::optional.5"* %2 to i64*
  %35 = bitcast i8* %33 to i64*
  %36 = load i64, i64* %34, align 4
  store i64 %36, i64* %35, align 4
  %37 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13
  %38 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %58, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8, i8* %43, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 %51, i32* %52, align 4
  br label %60

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"struct.std::__1::pair"* %42 to i64*
  %56 = bitcast %union.anon.4* %54 to i64*
  %57 = load i64, i64* %55, align 4
  store i64 %57, i64* %56, align 4
  store i8 1, i8* %43, align 4
  br label %60

58:                                               ; preds = %32
  %59 = getelementptr inbounds %"class.absl::optional.0", %"class.absl::optional.0"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %59, align 4
  br label %60

60:                                               ; preds = %46, %53, %58
  %61 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.absl::optional.5"* %4 to i64*
  %63 = bitcast i8* %61 to i64*
  %64 = load i64, i64* %62, align 4
  store i64 %64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.absl::optional.5"* %5 to i64*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %66, align 4
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %69, align 8
  %70 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket12VideoAdapter11OnSinkWantsERKN3rtc14VideoSinkWantsE(%"class.cricket::VideoAdapter"*, %"struct.rtc::VideoSinkWants"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 19, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #11
  %5 = getelementptr inbounds %"struct.rtc::VideoSinkWants", %"struct.rtc::VideoSinkWants"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 17
  store i32 %6, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.rtc::VideoSinkWants", %"struct.rtc::VideoSinkWants"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"struct.rtc::VideoSinkWants", %"struct.rtc::VideoSinkWants"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = select i1 %10, i32 %6, i32 %12
  %14 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 16
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.rtc::VideoSinkWants", %"struct.rtc::VideoSinkWants"* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 18
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 8
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.rtc::VideoSinkWants", %"struct.rtc::VideoSinkWants"* %1, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = tail call i32 @_ZN7cricket19LeastCommonMultipleEii(i32 %19, i32 %21) #11
  %23 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 9
  store i32 %22, i32* %23, align 8
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #11
  ret void
}

declare i32 @_ZN7cricket19LeastCommonMultipleEii(i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7cricket12VideoAdapter15GetTargetPixelsEv(%"class.cricket::VideoAdapter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 19, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #11
  %4 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8
  %6 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #11
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK7cricket12VideoAdapter15GetMaxFramerateEv(%"class.cricket::VideoAdapter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 19, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #11
  %4 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 18
  %5 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.cricket::VideoAdapter", %"class.cricket::VideoAdapter"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = select i1 %7, i32* %4, i32* %8
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %4, align 4
  %12 = icmp slt i32 %10, %11
  %13 = select i1 %12, i32 %10, i32 %11
  %14 = icmp eq i32 %13, 2147483647
  %15 = sitofp i32 %11 to float
  %16 = select i1 %14, float 0x7FF0000000000000, float %15
  %17 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #11
  ret float %16
}

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #5

declare i32 @_ZN7cricket21GreatestCommonDivisorEii(i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
