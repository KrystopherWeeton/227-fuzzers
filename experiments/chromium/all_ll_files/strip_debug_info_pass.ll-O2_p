; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/strip_debug_info_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/strip_debug_info_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::StripDebugInfoPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8] }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::function.917" = type { %"class.std::__1::__function::__policy_func.921" }
%"class.std::__1::__function::__policy_func.921" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.922", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.922" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::function.924" = type { %"class.std::__1::__function::__policy_func.928" }
%"class.std::__1::__function::__policy_func.928" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.929", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.929" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.931" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::pair.931" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt18StripDebugInfoPassD0Ev = comdat any

$_ZNK8spvtools3opt18StripDebugInfoPass4nameEv = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@.str = private unnamed_addr constant [26 x i8] c"SPV_KHR_non_semantic_info\00", align 1
@_ZTVN8spvtools3opt18StripDebugInfoPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::StripDebugInfoPass"*)* @_ZN8spvtools3opt18StripDebugInfoPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::StripDebugInfoPass"*)* @_ZNK8spvtools3opt18StripDebugInfoPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::StripDebugInfoPass"*)* @_ZN8spvtools3opt18StripDebugInfoPass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [12 x i8] c"strip-debug\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"NonSemantic.\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_0FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt18StripDebugInfoPass7ProcessEv(%"class.spvtools::opt::StripDebugInfoPass"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.910", align 8
  %3 = alloca %"class.std::__1::function.917", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::function.924", align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::StripDebugInfoPass", %"class.spvtools::opt::StripDebugInfoPass"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %9, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %9, i64 0, i32 4, i32 0, i32 1
  %12 = bitcast %"class.spvtools::opt::Instruction"** %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = inttoptr i64 %13 to %"class.spvtools::opt::Instruction"*
  %15 = icmp eq %"class.spvtools::opt::Instruction"* %11, %14
  br i1 %15, label %16, label %45

16:                                               ; preds = %45, %1
  %17 = phi i8 [ 0, %1 ], [ %71, %45 ]
  %18 = bitcast %"class.std::__1::vector.910"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %2, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %2, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #11
  %22 = and i8 %17, 1
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %9, i64 0, i32 9, i32 0, i32 1, i32 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %9, i64 0, i32 9, i32 0, i32 1
  %28 = inttoptr i64 %26 to %"class.spvtools::opt::Instruction"*
  %29 = icmp eq %"class.spvtools::opt::Instruction"* %27, %28
  br i1 %23, label %40, label %30

30:                                               ; preds = %16
  br i1 %29, label %309, label %31

31:                                               ; preds = %30
  %32 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i64*
  %33 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %34 = bitcast %"class.spvtools::opt::Instruction"*** %21 to i64*
  %35 = bitcast %"class.std::__1::function.917"* %3 to i8*
  %36 = getelementptr inbounds %"class.std::__1::function.917", %"class.std::__1::function.917"* %3, i64 0, i32 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::function.917", %"class.std::__1::function.917"* %3, i64 0, i32 0, i32 2
  %38 = bitcast %"class.std::__1::function.917"* %3 to i64*
  %39 = getelementptr inbounds %"class.std::__1::function.917", %"class.std::__1::function.917"* %3, i64 0, i32 0, i32 0, i32 0
  br label %78

40:                                               ; preds = %16
  br i1 %29, label %309, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i64*
  %43 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %44 = bitcast %"class.spvtools::opt::Instruction"*** %21 to i64*
  br label %239

45:                                               ; preds = %1, %45
  %46 = phi %"class.spvtools::opt::Instruction"* [ %76, %45 ], [ %14, %1 ]
  %47 = phi i64 [ %75, %45 ], [ %13, %1 ]
  %48 = phi i8 [ %71, %45 ], [ 0, %1 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 3
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = icmp eq i8 %50, 0
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 4
  %53 = load i8, i8* %52, align 1, !range !2
  %54 = icmp eq i8 %53, 0
  %55 = select i1 %54, i64 1, i64 2
  %56 = xor i1 %54, true
  %57 = zext i1 %56 to i64
  %58 = select i1 %51, i64 %57, i64 %55
  %59 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 6, i32 0, i32 0
  %60 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %59, align 8
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 %58, i32 1, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %61, align 8
  %63 = icmp eq %"class.std::__1::vector.3"* %62, null
  %64 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %62, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 %58, i32 1, i32 2
  %66 = select i1 %63, i32** %65, i32** %64
  %67 = bitcast i32** %66 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = tail call i32 @strcmp(i8* %68, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #12
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i8 1, i8 %48
  %72 = inttoptr i64 %47 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %73 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %72, i64 0, i32 1
  %74 = bitcast %"class.spvtools::opt::Instruction"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %75 to %"class.spvtools::opt::Instruction"*
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %11, %76
  br i1 %77, label %16, label %45

78:                                               ; preds = %31, %232
  %79 = phi %"class.spvtools::opt::Instruction"* [ %28, %31 ], [ %237, %232 ]
  %80 = phi i64 [ %26, %31 ], [ %236, %232 ]
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %79, i64 0, i32 2
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, 7
  br i1 %83, label %84, label %179

84:                                               ; preds = %78
  %85 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %85, i64 0, i32 11
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %114

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %85, i64 0, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %91, align 8
  %93 = call i8* @_Znwm(i64 104) #13
  %94 = bitcast i8* %93 to %"class.spvtools::opt::analysis::DefUseManager"*
  %95 = getelementptr inbounds i8, i8* %93, i64 32
  %96 = bitcast i8* %95 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %96, align 4
  %97 = getelementptr inbounds i8, i8* %93, i64 48
  %98 = getelementptr inbounds i8, i8* %93, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 16, i1 false) #11
  %99 = bitcast i8* %98 to i8**
  store i8* %97, i8** %99, align 8
  %100 = getelementptr inbounds i8, i8* %93, i64 64
  %101 = getelementptr inbounds i8, i8* %93, i64 96
  %102 = bitcast i8* %101 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %102, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %94, %"class.spvtools::opt::Module"* %92) #11
  %103 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %85, i64 0, i32 6
  %104 = ptrtoint i8* %93 to i64
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %103, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %105, align 8
  %107 = bitcast %"class.std::__1::unique_ptr.62"* %103 to i64*
  store i64 %104, i64* %107, align 8
  %108 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %106, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %90
  %110 = bitcast %"class.std::__1::unique_ptr.62"* %103 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %110, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %106) #11
  br label %111

111:                                              ; preds = %109, %90
  %112 = load i32, i32* %86, align 8
  %113 = or i32 %112, 1
  store i32 %113, i32* %86, align 8
  br label %114

114:                                              ; preds = %84, %111
  %115 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %85, i64 0, i32 6, i32 0, i32 0, i32 0
  %116 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %115, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #11
  %117 = ptrtoint %"class.spvtools::opt::analysis::DefUseManager"* %116 to i64
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18StripDebugInfoPass7ProcessEvE3$_0S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %36, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_0FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %37, align 8
  store i64 %117, i64* %38, align 8
  %118 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %116, %"class.spvtools::opt::Instruction"* %79, %"class.std::__1::function.917"* nonnull dereferenceable(32) %3) #11
  %119 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %37, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %119, i64 0, i32 1
  %121 = load void (i8*)*, void (i8*)** %120, align 8
  %122 = icmp eq void (i8*)* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %114
  %124 = load i8*, i8** %39, align 8
  call void %121(i8* %124) #11
  br label %125

125:                                              ; preds = %114, %123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #11
  br i1 %118, label %126, label %232

126:                                              ; preds = %125
  %127 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %20, align 8
  %128 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %21, align 8
  %129 = icmp ult %"class.spvtools::opt::Instruction"** %127, %128
  %130 = ptrtoint %"class.spvtools::opt::Instruction"** %128 to i64
  br i1 %129, label %131, label %135

131:                                              ; preds = %126
  %132 = bitcast %"class.spvtools::opt::Instruction"** %127 to i64*
  store i64 %80, i64* %132, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %127, i64 1
  %134 = ptrtoint %"class.spvtools::opt::Instruction"** %133 to i64
  store i64 %134, i64* %32, align 8
  br label %232

135:                                              ; preds = %126
  %136 = ptrtoint %"class.spvtools::opt::Instruction"** %127 to i64
  %137 = load i64, i64* %33, align 8
  %138 = sub i64 %136, %137
  %139 = ashr exact i64 %138, 3
  %140 = add nsw i64 %139, 1
  %141 = icmp ugt i64 %140, 2305843009213693951
  br i1 %141, label %142, label %144

142:                                              ; preds = %135
  %143 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %143) #14
  unreachable

144:                                              ; preds = %135
  %145 = sub i64 %130, %137
  %146 = ashr exact i64 %145, 3
  %147 = icmp ult i64 %146, 1152921504606846975
  br i1 %147, label %148, label %156

148:                                              ; preds = %144
  %149 = ashr exact i64 %145, 2
  %150 = icmp ult i64 %149, %140
  %151 = select i1 %150, i64 %140, i64 %149
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %148
  %154 = icmp ugt i64 %151, 2305843009213693951
  br i1 %154, label %155, label %156

155:                                              ; preds = %153
  call void @abort() #14
  unreachable

156:                                              ; preds = %153, %144
  %157 = phi i64 [ %151, %153 ], [ 2305843009213693951, %144 ]
  %158 = shl i64 %157, 3
  %159 = call i8* @_Znwm(i64 %158) #13
  %160 = bitcast i8* %159 to %"class.spvtools::opt::Instruction"**
  br label %161

161:                                              ; preds = %156, %148
  %162 = phi i64 [ %157, %156 ], [ 0, %148 ]
  %163 = phi i8* [ %159, %156 ], [ null, %148 ]
  %164 = phi %"class.spvtools::opt::Instruction"** [ %160, %156 ], [ null, %148 ]
  %165 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %164, i64 %139
  %166 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %164, i64 %162
  %167 = ptrtoint %"class.spvtools::opt::Instruction"** %166 to i64
  %168 = bitcast %"class.spvtools::opt::Instruction"** %165 to i64*
  store i64 %80, i64* %168, align 8
  %169 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %165, i64 1
  %170 = ptrtoint %"class.spvtools::opt::Instruction"** %169 to i64
  %171 = ptrtoint %"class.spvtools::opt::Instruction"** %164 to i64
  %172 = icmp sgt i64 %138, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %161
  %174 = inttoptr i64 %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %174, i64 %138, i1 false) #11
  br label %175

175:                                              ; preds = %173, %161
  store i64 %171, i64* %33, align 8
  store i64 %170, i64* %32, align 8
  store i64 %167, i64* %34, align 8
  %176 = icmp eq i64 %137, 0
  br i1 %176, label %232, label %177

177:                                              ; preds = %175
  %178 = inttoptr i64 %137 to i8*
  call void @_ZdlPv(i8* %178) #13
  br label %232

179:                                              ; preds = %78
  %180 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %20, align 8
  %181 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %21, align 8
  %182 = icmp ult %"class.spvtools::opt::Instruction"** %180, %181
  %183 = ptrtoint %"class.spvtools::opt::Instruction"** %181 to i64
  br i1 %182, label %184, label %188

184:                                              ; preds = %179
  %185 = bitcast %"class.spvtools::opt::Instruction"** %180 to i64*
  store i64 %80, i64* %185, align 8
  %186 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %180, i64 1
  %187 = ptrtoint %"class.spvtools::opt::Instruction"** %186 to i64
  store i64 %187, i64* %32, align 8
  br label %232

188:                                              ; preds = %179
  %189 = ptrtoint %"class.spvtools::opt::Instruction"** %180 to i64
  %190 = load i64, i64* %33, align 8
  %191 = sub i64 %189, %190
  %192 = ashr exact i64 %191, 3
  %193 = add nsw i64 %192, 1
  %194 = icmp ugt i64 %193, 2305843009213693951
  br i1 %194, label %195, label %197

195:                                              ; preds = %188
  %196 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %196) #14
  unreachable

197:                                              ; preds = %188
  %198 = sub i64 %183, %190
  %199 = ashr exact i64 %198, 3
  %200 = icmp ult i64 %199, 1152921504606846975
  br i1 %200, label %201, label %209

201:                                              ; preds = %197
  %202 = ashr exact i64 %198, 2
  %203 = icmp ult i64 %202, %193
  %204 = select i1 %203, i64 %193, i64 %202
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %214, label %206

206:                                              ; preds = %201
  %207 = icmp ugt i64 %204, 2305843009213693951
  br i1 %207, label %208, label %209

208:                                              ; preds = %206
  call void @abort() #14
  unreachable

209:                                              ; preds = %206, %197
  %210 = phi i64 [ %204, %206 ], [ 2305843009213693951, %197 ]
  %211 = shl i64 %210, 3
  %212 = call i8* @_Znwm(i64 %211) #13
  %213 = bitcast i8* %212 to %"class.spvtools::opt::Instruction"**
  br label %214

214:                                              ; preds = %209, %201
  %215 = phi i64 [ %210, %209 ], [ 0, %201 ]
  %216 = phi i8* [ %212, %209 ], [ null, %201 ]
  %217 = phi %"class.spvtools::opt::Instruction"** [ %213, %209 ], [ null, %201 ]
  %218 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %217, i64 %192
  %219 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %217, i64 %215
  %220 = ptrtoint %"class.spvtools::opt::Instruction"** %219 to i64
  %221 = bitcast %"class.spvtools::opt::Instruction"** %218 to i64*
  store i64 %80, i64* %221, align 8
  %222 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %218, i64 1
  %223 = ptrtoint %"class.spvtools::opt::Instruction"** %222 to i64
  %224 = ptrtoint %"class.spvtools::opt::Instruction"** %217 to i64
  %225 = icmp sgt i64 %191, 0
  br i1 %225, label %226, label %228

226:                                              ; preds = %214
  %227 = inttoptr i64 %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %216, i8* align 8 %227, i64 %191, i1 false) #11
  br label %228

228:                                              ; preds = %226, %214
  store i64 %224, i64* %33, align 8
  store i64 %223, i64* %32, align 8
  store i64 %220, i64* %34, align 8
  %229 = icmp eq i64 %190, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %228
  %231 = inttoptr i64 %190 to i8*
  call void @_ZdlPv(i8* %231) #13
  br label %232

232:                                              ; preds = %230, %228, %184, %177, %175, %131, %125
  %233 = inttoptr i64 %80 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %234 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %233, i64 0, i32 1
  %235 = bitcast %"class.spvtools::opt::Instruction"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = inttoptr i64 %236 to %"class.spvtools::opt::Instruction"*
  %238 = icmp eq %"class.spvtools::opt::Instruction"* %27, %237
  br i1 %238, label %309, label %78

239:                                              ; preds = %307, %41
  %240 = phi i64 [ 0, %41 ], [ %299, %307 ]
  %241 = phi %"class.spvtools::opt::Instruction"** [ null, %41 ], [ %308, %307 ]
  %242 = phi %"class.spvtools::opt::Instruction"** [ null, %41 ], [ %300, %307 ]
  %243 = phi i64 [ %26, %41 ], [ %304, %307 ]
  %244 = icmp ult %"class.spvtools::opt::Instruction"** %242, %241
  %245 = ptrtoint %"class.spvtools::opt::Instruction"** %241 to i64
  br i1 %244, label %246, label %250

246:                                              ; preds = %239
  %247 = bitcast %"class.spvtools::opt::Instruction"** %242 to i64*
  store i64 %243, i64* %247, align 8
  %248 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %242, i64 1
  %249 = ptrtoint %"class.spvtools::opt::Instruction"** %248 to i64
  store i64 %249, i64* %42, align 8
  br label %298

250:                                              ; preds = %239
  %251 = ptrtoint %"class.spvtools::opt::Instruction"** %242 to i64
  %252 = load i64, i64* %43, align 8
  %253 = sub i64 %251, %252
  %254 = ashr exact i64 %253, 3
  %255 = add nsw i64 %254, 1
  %256 = icmp ugt i64 %255, 2305843009213693951
  br i1 %256, label %257, label %259

257:                                              ; preds = %250
  %258 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %258) #14
  unreachable

259:                                              ; preds = %250
  %260 = sub i64 %245, %252
  %261 = ashr exact i64 %260, 3
  %262 = icmp ult i64 %261, 1152921504606846975
  br i1 %262, label %263, label %271

263:                                              ; preds = %259
  %264 = ashr exact i64 %260, 2
  %265 = icmp ult i64 %264, %255
  %266 = select i1 %265, i64 %255, i64 %264
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %276, label %268

268:                                              ; preds = %263
  %269 = icmp ugt i64 %266, 2305843009213693951
  br i1 %269, label %270, label %271

270:                                              ; preds = %268
  tail call void @abort() #14
  unreachable

271:                                              ; preds = %268, %259
  %272 = phi i64 [ %266, %268 ], [ 2305843009213693951, %259 ]
  %273 = shl i64 %272, 3
  %274 = tail call i8* @_Znwm(i64 %273) #13
  %275 = bitcast i8* %274 to %"class.spvtools::opt::Instruction"**
  br label %276

276:                                              ; preds = %271, %263
  %277 = phi i64 [ %272, %271 ], [ 0, %263 ]
  %278 = phi %"class.spvtools::opt::Instruction"** [ %275, %271 ], [ null, %263 ]
  %279 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %278, i64 %254
  %280 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %278, i64 %277
  %281 = ptrtoint %"class.spvtools::opt::Instruction"** %280 to i64
  %282 = bitcast %"class.spvtools::opt::Instruction"** %279 to i64*
  store i64 %243, i64* %282, align 8
  %283 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %279, i64 1
  %284 = ptrtoint %"class.spvtools::opt::Instruction"** %283 to i64
  %285 = sub i64 %240, %252
  %286 = ashr exact i64 %285, 3
  %287 = sub nsw i64 0, %286
  %288 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %279, i64 %287
  %289 = ptrtoint %"class.spvtools::opt::Instruction"** %288 to i64
  %290 = icmp sgt i64 %285, 0
  br i1 %290, label %291, label %294

291:                                              ; preds = %276
  %292 = bitcast %"class.spvtools::opt::Instruction"** %288 to i8*
  %293 = inttoptr i64 %252 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %292, i8* align 8 %293, i64 %285, i1 false) #11
  br label %294

294:                                              ; preds = %291, %276
  store i64 %289, i64* %43, align 8
  store i64 %284, i64* %42, align 8
  store i64 %281, i64* %44, align 8
  %295 = icmp eq i64 %252, 0
  br i1 %295, label %298, label %296

296:                                              ; preds = %294
  %297 = inttoptr i64 %252 to i8*
  tail call void @_ZdlPv(i8* %297) #13
  br label %298

298:                                              ; preds = %246, %294, %296
  %299 = phi i64 [ %249, %246 ], [ %284, %294 ], [ %284, %296 ]
  %300 = phi %"class.spvtools::opt::Instruction"** [ %248, %246 ], [ %283, %294 ], [ %283, %296 ]
  %301 = inttoptr i64 %243 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %302 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %301, i64 0, i32 1
  %303 = bitcast %"class.spvtools::opt::Instruction"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = inttoptr i64 %304 to %"class.spvtools::opt::Instruction"*
  %306 = icmp eq %"class.spvtools::opt::Instruction"* %27, %305
  br i1 %306, label %309, label %307

307:                                              ; preds = %298
  %308 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %21, align 8
  br label %239

309:                                              ; preds = %232, %298, %30, %40
  %310 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %311 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %310, i64 0, i32 4, i32 0, i32 0, i32 0
  %312 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %311, align 8, !noalias !3
  %313 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %312, i64 0, i32 10, i32 0, i32 1, i32 0, i32 1
  %314 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %312, i64 0, i32 10, i32 0, i32 1
  %315 = bitcast %"class.spvtools::opt::Instruction"** %313 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = inttoptr i64 %316 to %"class.spvtools::opt::Instruction"*
  %318 = icmp eq %"class.spvtools::opt::Instruction"* %314, %317
  br i1 %318, label %327, label %319

319:                                              ; preds = %309
  %320 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i64*
  %321 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %322 = bitcast %"class.spvtools::opt::Instruction"*** %21 to i64*
  br label %339

323:                                              ; preds = %393
  %324 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %325 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %324, i64 0, i32 4, i32 0, i32 0, i32 0
  %326 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %325, align 8, !noalias !6
  br label %327

327:                                              ; preds = %323, %309
  %328 = phi %"class.spvtools::opt::Module"* [ %326, %323 ], [ %312, %309 ]
  %329 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %328, i64 0, i32 11, i32 0, i32 1, i32 0, i32 1
  %330 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %328, i64 0, i32 11, i32 0, i32 1
  %331 = bitcast %"class.spvtools::opt::Instruction"** %329 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = inttoptr i64 %332 to %"class.spvtools::opt::Instruction"*
  %334 = icmp eq %"class.spvtools::opt::Instruction"* %330, %333
  br i1 %334, label %404, label %335

335:                                              ; preds = %327
  %336 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i64*
  %337 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %338 = bitcast %"class.spvtools::opt::Instruction"*** %21 to i64*
  br label %416

339:                                              ; preds = %319, %393
  %340 = phi i64 [ %316, %319 ], [ %397, %393 ]
  %341 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %20, align 8
  %342 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %21, align 8
  %343 = icmp ult %"class.spvtools::opt::Instruction"** %341, %342
  %344 = ptrtoint %"class.spvtools::opt::Instruction"** %342 to i64
  br i1 %343, label %345, label %349

345:                                              ; preds = %339
  %346 = bitcast %"class.spvtools::opt::Instruction"** %341 to i64*
  store i64 %340, i64* %346, align 8
  %347 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %341, i64 1
  %348 = ptrtoint %"class.spvtools::opt::Instruction"** %347 to i64
  store i64 %348, i64* %320, align 8
  br label %393

349:                                              ; preds = %339
  %350 = ptrtoint %"class.spvtools::opt::Instruction"** %341 to i64
  %351 = load i64, i64* %321, align 8
  %352 = sub i64 %350, %351
  %353 = ashr exact i64 %352, 3
  %354 = add nsw i64 %353, 1
  %355 = icmp ugt i64 %354, 2305843009213693951
  br i1 %355, label %356, label %358

356:                                              ; preds = %349
  %357 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %357) #14
  unreachable

358:                                              ; preds = %349
  %359 = sub i64 %344, %351
  %360 = ashr exact i64 %359, 3
  %361 = icmp ult i64 %360, 1152921504606846975
  br i1 %361, label %362, label %370

362:                                              ; preds = %358
  %363 = ashr exact i64 %359, 2
  %364 = icmp ult i64 %363, %354
  %365 = select i1 %364, i64 %354, i64 %363
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %375, label %367

367:                                              ; preds = %362
  %368 = icmp ugt i64 %365, 2305843009213693951
  br i1 %368, label %369, label %370

369:                                              ; preds = %367
  call void @abort() #14
  unreachable

370:                                              ; preds = %367, %358
  %371 = phi i64 [ %365, %367 ], [ 2305843009213693951, %358 ]
  %372 = shl i64 %371, 3
  %373 = call i8* @_Znwm(i64 %372) #13
  %374 = bitcast i8* %373 to %"class.spvtools::opt::Instruction"**
  br label %375

375:                                              ; preds = %370, %362
  %376 = phi i64 [ %371, %370 ], [ 0, %362 ]
  %377 = phi i8* [ %373, %370 ], [ null, %362 ]
  %378 = phi %"class.spvtools::opt::Instruction"** [ %374, %370 ], [ null, %362 ]
  %379 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %378, i64 %353
  %380 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %378, i64 %376
  %381 = ptrtoint %"class.spvtools::opt::Instruction"** %380 to i64
  %382 = bitcast %"class.spvtools::opt::Instruction"** %379 to i64*
  store i64 %340, i64* %382, align 8
  %383 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %379, i64 1
  %384 = ptrtoint %"class.spvtools::opt::Instruction"** %383 to i64
  %385 = ptrtoint %"class.spvtools::opt::Instruction"** %378 to i64
  %386 = icmp sgt i64 %352, 0
  br i1 %386, label %387, label %389

387:                                              ; preds = %375
  %388 = inttoptr i64 %351 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %377, i8* align 8 %388, i64 %352, i1 false) #11
  br label %389

389:                                              ; preds = %387, %375
  store i64 %385, i64* %321, align 8
  store i64 %384, i64* %320, align 8
  store i64 %381, i64* %322, align 8
  %390 = icmp eq i64 %351, 0
  br i1 %390, label %393, label %391

391:                                              ; preds = %389
  %392 = inttoptr i64 %351 to i8*
  call void @_ZdlPv(i8* %392) #13
  br label %393

393:                                              ; preds = %345, %389, %391
  %394 = inttoptr i64 %340 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %395 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %394, i64 0, i32 1
  %396 = bitcast %"class.spvtools::opt::Instruction"** %395 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = inttoptr i64 %397 to %"class.spvtools::opt::Instruction"*
  %399 = icmp eq %"class.spvtools::opt::Instruction"* %314, %398
  br i1 %399, label %323, label %339

400:                                              ; preds = %470
  %401 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %402 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %401, i64 0, i32 4, i32 0, i32 0, i32 0
  %403 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %402, align 8, !noalias !9
  br label %404

404:                                              ; preds = %400, %327
  %405 = phi %"class.spvtools::opt::Module"* [ %403, %400 ], [ %328, %327 ]
  %406 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %405, i64 0, i32 12, i32 0, i32 1, i32 0, i32 1
  %407 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %405, i64 0, i32 12, i32 0, i32 1
  %408 = bitcast %"class.spvtools::opt::Instruction"** %406 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = inttoptr i64 %409 to %"class.spvtools::opt::Instruction"*
  %411 = icmp eq %"class.spvtools::opt::Instruction"* %407, %410
  br i1 %411, label %477, label %412

412:                                              ; preds = %404
  %413 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i64*
  %414 = bitcast %"class.std::__1::vector.910"* %2 to i64*
  %415 = bitcast %"class.spvtools::opt::Instruction"*** %21 to i64*
  br label %485

416:                                              ; preds = %335, %470
  %417 = phi i64 [ %332, %335 ], [ %474, %470 ]
  %418 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %20, align 8
  %419 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %21, align 8
  %420 = icmp ult %"class.spvtools::opt::Instruction"** %418, %419
  %421 = ptrtoint %"class.spvtools::opt::Instruction"** %419 to i64
  br i1 %420, label %422, label %426

422:                                              ; preds = %416
  %423 = bitcast %"class.spvtools::opt::Instruction"** %418 to i64*
  store i64 %417, i64* %423, align 8
  %424 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %418, i64 1
  %425 = ptrtoint %"class.spvtools::opt::Instruction"** %424 to i64
  store i64 %425, i64* %336, align 8
  br label %470

426:                                              ; preds = %416
  %427 = ptrtoint %"class.spvtools::opt::Instruction"** %418 to i64
  %428 = load i64, i64* %337, align 8
  %429 = sub i64 %427, %428
  %430 = ashr exact i64 %429, 3
  %431 = add nsw i64 %430, 1
  %432 = icmp ugt i64 %431, 2305843009213693951
  br i1 %432, label %433, label %435

433:                                              ; preds = %426
  %434 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %434) #14
  unreachable

435:                                              ; preds = %426
  %436 = sub i64 %421, %428
  %437 = ashr exact i64 %436, 3
  %438 = icmp ult i64 %437, 1152921504606846975
  br i1 %438, label %439, label %447

439:                                              ; preds = %435
  %440 = ashr exact i64 %436, 2
  %441 = icmp ult i64 %440, %431
  %442 = select i1 %441, i64 %431, i64 %440
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %452, label %444

444:                                              ; preds = %439
  %445 = icmp ugt i64 %442, 2305843009213693951
  br i1 %445, label %446, label %447

446:                                              ; preds = %444
  call void @abort() #14
  unreachable

447:                                              ; preds = %444, %435
  %448 = phi i64 [ %442, %444 ], [ 2305843009213693951, %435 ]
  %449 = shl i64 %448, 3
  %450 = call i8* @_Znwm(i64 %449) #13
  %451 = bitcast i8* %450 to %"class.spvtools::opt::Instruction"**
  br label %452

452:                                              ; preds = %447, %439
  %453 = phi i64 [ %448, %447 ], [ 0, %439 ]
  %454 = phi i8* [ %450, %447 ], [ null, %439 ]
  %455 = phi %"class.spvtools::opt::Instruction"** [ %451, %447 ], [ null, %439 ]
  %456 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %455, i64 %430
  %457 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %455, i64 %453
  %458 = ptrtoint %"class.spvtools::opt::Instruction"** %457 to i64
  %459 = bitcast %"class.spvtools::opt::Instruction"** %456 to i64*
  store i64 %417, i64* %459, align 8
  %460 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %456, i64 1
  %461 = ptrtoint %"class.spvtools::opt::Instruction"** %460 to i64
  %462 = ptrtoint %"class.spvtools::opt::Instruction"** %455 to i64
  %463 = icmp sgt i64 %429, 0
  br i1 %463, label %464, label %466

464:                                              ; preds = %452
  %465 = inttoptr i64 %428 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %454, i8* align 8 %465, i64 %429, i1 false) #11
  br label %466

466:                                              ; preds = %464, %452
  store i64 %462, i64* %337, align 8
  store i64 %461, i64* %336, align 8
  store i64 %458, i64* %338, align 8
  %467 = icmp eq i64 %428, 0
  br i1 %467, label %470, label %468

468:                                              ; preds = %466
  %469 = inttoptr i64 %428 to i8*
  call void @_ZdlPv(i8* %469) #13
  br label %470

470:                                              ; preds = %422, %466, %468
  %471 = inttoptr i64 %417 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %472 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %471, i64 0, i32 1
  %473 = bitcast %"class.spvtools::opt::Instruction"** %472 to i64*
  %474 = load i64, i64* %473, align 8
  %475 = inttoptr i64 %474 to %"class.spvtools::opt::Instruction"*
  %476 = icmp eq %"class.spvtools::opt::Instruction"* %330, %475
  br i1 %476, label %400, label %416

477:                                              ; preds = %539, %404
  %478 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %19, align 8
  %479 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %20, align 8
  call fastcc void @"_ZNSt3__16__sortIRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEvT0_S9_T_"(%"class.spvtools::opt::Instruction"** %478, %"class.spvtools::opt::Instruction"** %479) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  %480 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %19, align 8
  %481 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %20, align 8
  %482 = icmp ne %"class.spvtools::opt::Instruction"** %480, %481
  %483 = zext i1 %482 to i8
  store i8 %483, i8* %4, align 1
  %484 = icmp eq %"class.spvtools::opt::Instruction"** %480, %481
  br i1 %484, label %546, label %571

485:                                              ; preds = %412, %539
  %486 = phi i64 [ %409, %412 ], [ %543, %539 ]
  %487 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %20, align 8
  %488 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %21, align 8
  %489 = icmp ult %"class.spvtools::opt::Instruction"** %487, %488
  %490 = ptrtoint %"class.spvtools::opt::Instruction"** %488 to i64
  br i1 %489, label %491, label %495

491:                                              ; preds = %485
  %492 = bitcast %"class.spvtools::opt::Instruction"** %487 to i64*
  store i64 %486, i64* %492, align 8
  %493 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %487, i64 1
  %494 = ptrtoint %"class.spvtools::opt::Instruction"** %493 to i64
  store i64 %494, i64* %413, align 8
  br label %539

495:                                              ; preds = %485
  %496 = ptrtoint %"class.spvtools::opt::Instruction"** %487 to i64
  %497 = load i64, i64* %414, align 8
  %498 = sub i64 %496, %497
  %499 = ashr exact i64 %498, 3
  %500 = add nsw i64 %499, 1
  %501 = icmp ugt i64 %500, 2305843009213693951
  br i1 %501, label %502, label %504

502:                                              ; preds = %495
  %503 = bitcast %"class.std::__1::vector.910"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %503) #14
  unreachable

504:                                              ; preds = %495
  %505 = sub i64 %490, %497
  %506 = ashr exact i64 %505, 3
  %507 = icmp ult i64 %506, 1152921504606846975
  br i1 %507, label %508, label %516

508:                                              ; preds = %504
  %509 = ashr exact i64 %505, 2
  %510 = icmp ult i64 %509, %500
  %511 = select i1 %510, i64 %500, i64 %509
  %512 = icmp eq i64 %511, 0
  br i1 %512, label %521, label %513

513:                                              ; preds = %508
  %514 = icmp ugt i64 %511, 2305843009213693951
  br i1 %514, label %515, label %516

515:                                              ; preds = %513
  call void @abort() #14
  unreachable

516:                                              ; preds = %513, %504
  %517 = phi i64 [ %511, %513 ], [ 2305843009213693951, %504 ]
  %518 = shl i64 %517, 3
  %519 = call i8* @_Znwm(i64 %518) #13
  %520 = bitcast i8* %519 to %"class.spvtools::opt::Instruction"**
  br label %521

521:                                              ; preds = %516, %508
  %522 = phi i64 [ %517, %516 ], [ 0, %508 ]
  %523 = phi i8* [ %519, %516 ], [ null, %508 ]
  %524 = phi %"class.spvtools::opt::Instruction"** [ %520, %516 ], [ null, %508 ]
  %525 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %524, i64 %499
  %526 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %524, i64 %522
  %527 = ptrtoint %"class.spvtools::opt::Instruction"** %526 to i64
  %528 = bitcast %"class.spvtools::opt::Instruction"** %525 to i64*
  store i64 %486, i64* %528, align 8
  %529 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %525, i64 1
  %530 = ptrtoint %"class.spvtools::opt::Instruction"** %529 to i64
  %531 = ptrtoint %"class.spvtools::opt::Instruction"** %524 to i64
  %532 = icmp sgt i64 %498, 0
  br i1 %532, label %533, label %535

533:                                              ; preds = %521
  %534 = inttoptr i64 %497 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %523, i8* align 8 %534, i64 %498, i1 false) #11
  br label %535

535:                                              ; preds = %533, %521
  store i64 %531, i64* %414, align 8
  store i64 %530, i64* %413, align 8
  store i64 %527, i64* %415, align 8
  %536 = icmp eq i64 %497, 0
  br i1 %536, label %539, label %537

537:                                              ; preds = %535
  %538 = inttoptr i64 %497 to i8*
  call void @_ZdlPv(i8* %538) #13
  br label %539

539:                                              ; preds = %491, %535, %537
  %540 = inttoptr i64 %486 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %541 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %540, i64 0, i32 1
  %542 = bitcast %"class.spvtools::opt::Instruction"** %541 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = inttoptr i64 %543 to %"class.spvtools::opt::Instruction"*
  %545 = icmp eq %"class.spvtools::opt::Instruction"* %407, %544
  br i1 %545, label %477, label %485

546:                                              ; preds = %571, %477
  %547 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %548 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %547, i64 0, i32 4, i32 0, i32 0, i32 0
  %549 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %548, align 8
  %550 = bitcast %"class.std::__1::function.924"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %550) #11
  %551 = ptrtoint i8* %4 to i64
  %552 = getelementptr inbounds %"class.std::__1::function.924", %"class.std::__1::function.924"* %5, i64 0, i32 0, i32 1, i32 0
  %553 = getelementptr inbounds %"class.std::__1::function.924", %"class.std::__1::function.924"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18StripDebugInfoPass7ProcessEvE3$_2S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %552, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %553, align 8
  %554 = bitcast %"class.std::__1::function.924"* %5 to i64*
  store i64 %551, i64* %554, align 8
  call void @_ZN8spvtools3opt6Module11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Module"* %549, %"class.std::__1::function.924"* nonnull dereferenceable(32) %5, i1 zeroext false) #11
  %555 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %553, align 8
  %556 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %555, i64 0, i32 1
  %557 = load void (i8*)*, void (i8*)** %556, align 8
  %558 = icmp eq void (i8*)* %557, null
  br i1 %558, label %562, label %559

559:                                              ; preds = %546
  %560 = getelementptr inbounds %"class.std::__1::function.924", %"class.std::__1::function.924"* %5, i64 0, i32 0, i32 0, i32 0
  %561 = load i8*, i8** %560, align 8
  call void %557(i8* %561) #11
  br label %562

562:                                              ; preds = %546, %559
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %550) #11
  %563 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %564 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %563, i64 0, i32 4, i32 0, i32 0, i32 0
  %565 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %564, align 8
  %566 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %565, i64 0, i32 16, i32 0, i32 0
  %567 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %566, align 8
  %568 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %565, i64 0, i32 16, i32 0, i32 1
  %569 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %568, align 8
  %570 = icmp eq %"class.spvtools::opt::Instruction"* %567, %569
  br i1 %570, label %587, label %578

571:                                              ; preds = %477, %571
  %572 = phi %"class.spvtools::opt::Instruction"** [ %576, %571 ], [ %480, %477 ]
  %573 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %572, align 8
  %574 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %575 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %574, %"class.spvtools::opt::Instruction"* %573) #11
  %576 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %572, i64 1
  %577 = icmp eq %"class.spvtools::opt::Instruction"** %576, %481
  br i1 %577, label %546, label %571

578:                                              ; preds = %562
  store i8 1, i8* %4, align 1
  br label %579

579:                                              ; preds = %578, %579
  %580 = phi %"class.spvtools::opt::Instruction"* [ %581, %579 ], [ %569, %578 ]
  %581 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %580, i64 -1
  %582 = bitcast %"class.spvtools::opt::Instruction"* %581 to void (%"class.spvtools::opt::Instruction"*)***
  %583 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %582, align 8
  %584 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %583, align 8
  call void %584(%"class.spvtools::opt::Instruction"* %581) #11
  %585 = icmp eq %"class.spvtools::opt::Instruction"* %581, %567
  br i1 %585, label %586, label %579

586:                                              ; preds = %579
  store %"class.spvtools::opt::Instruction"* %567, %"class.spvtools::opt::Instruction"** %568, align 8
  br label %587

587:                                              ; preds = %586, %562
  %588 = load i8, i8* %4, align 1, !range !2
  %589 = icmp eq i8 %588, 0
  %590 = select i1 %589, i32 17, i32 16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  %591 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %19, align 8
  %592 = icmp eq %"class.spvtools::opt::Instruction"** %591, null
  br i1 %592, label %597, label %593

593:                                              ; preds = %587
  %594 = ptrtoint %"class.spvtools::opt::Instruction"** %591 to i64
  %595 = bitcast %"class.spvtools::opt::Instruction"*** %20 to i64*
  store i64 %594, i64* %595, align 8
  %596 = bitcast %"class.spvtools::opt::Instruction"** %591 to i8*
  call void @_ZdlPv(i8* %596) #13
  br label %597

597:                                              ; preds = %587, %593
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  ret i32 %590
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.917"* dereferenceable(32)) local_unnamed_addr #3

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

declare void @_ZN8spvtools3opt6Module11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Module"*, %"class.std::__1::function.924"* dereferenceable(32), i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt18StripDebugInfoPassD0Ev(%"class.spvtools::opt::StripDebugInfoPass"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::StripDebugInfoPass", %"class.spvtools::opt::StripDebugInfoPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::StripDebugInfoPass", %"class.spvtools::opt::StripDebugInfoPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::StripDebugInfoPass", %"class.spvtools::opt::StripDebugInfoPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.spvtools::opt::StripDebugInfoPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt18StripDebugInfoPass4nameEv(%"class.spvtools::opt::StripDebugInfoPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18StripDebugInfoPass7ProcessEvE3$_0S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 12
  br i1 %5, label %6, label %43

6:                                                ; preds = %2
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::analysis::DefUseManager"**
  %8 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i32 1, i32 2
  %16 = xor i1 %14, true
  %17 = zext i1 %16 to i32
  %18 = select i1 %11, i32 %17, i32 %15
  %19 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %18) #11
  %20 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %8, i32 %19) #11
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 3
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 4
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, i64 1, i64 2
  %28 = xor i1 %26, true
  %29 = zext i1 %28 to i64
  %30 = select i1 %23, i64 %29, i64 %27
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 6, i32 0, i32 0
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 %30, i32 1, i32 4, i32 0, i32 0, i32 0
  %34 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %33, align 8
  %35 = icmp eq %"class.std::__1::vector.3"* %34, null
  %36 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %34, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 %30, i32 1, i32 2
  %38 = select i1 %35, i32** %37, i32** %36
  %39 = bitcast i32** %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = tail call i32 @strncmp(i8* %40, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i64 12) #12
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %6, %2
  br label %44

44:                                               ; preds = %6, %43
  %45 = phi i1 [ true, %43 ], [ false, %6 ]
  ret i1 %45
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEvT0_S9_T_"(%"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %514, %2
  %4 = phi %"class.spvtools::opt::Instruction"** [ %1, %2 ], [ %488, %514 ]
  %5 = phi %"class.spvtools::opt::Instruction"** [ %0, %2 ], [ %17, %514 ]
  %6 = ptrtoint %"class.spvtools::opt::Instruction"** %4 to i64
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %8 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %9 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %10 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -2
  %12 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %13 = ptrtoint %"class.spvtools::opt::Instruction"** %4 to i64
  br label %14

14:                                               ; preds = %523, %3
  %15 = phi %"class.spvtools::opt::Instruction"** [ %5, %3 ], [ %524, %523 ]
  br label %16

16:                                               ; preds = %407, %14
  %17 = phi %"class.spvtools::opt::Instruction"** [ %15, %14 ], [ %390, %407 ]
  %18 = ptrtoint %"class.spvtools::opt::Instruction"** %17 to i64
  %19 = sub i64 %6, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %144 [
    i64 0, label %527
    i64 1, label %527
    i64 2, label %21
    i64 3, label %37
    i64 4, label %86
    i64 5, label %91
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %23 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %23, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 5
  %27 = ptrtoint %"class.spvtools::opt::Instruction"* %23 to i64
  br i1 %26, label %28, label %527

28:                                               ; preds = %21
  %29 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 5
  br i1 %32, label %527, label %33

33:                                               ; preds = %28
  %34 = ptrtoint %"class.spvtools::opt::Instruction"* %29 to i64
  %35 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %36 = bitcast %"class.spvtools::opt::Instruction"** %22 to i64*
  store i64 %27, i64* %35, align 8
  store i64 %34, i64* %36, align 8
  br label %527

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %38, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 5
  %44 = ptrtoint %"class.spvtools::opt::Instruction"* %40 to i64
  br i1 %43, label %45, label %51

45:                                               ; preds = %37
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 5
  %50 = ptrtoint %"class.spvtools::opt::Instruction"* %46 to i64
  br i1 %49, label %527, label %73

51:                                               ; preds = %37
  %52 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 5
  br i1 %55, label %56, label %527

56:                                               ; preds = %51
  %57 = ptrtoint %"class.spvtools::opt::Instruction"* %52 to i64
  %58 = bitcast %"class.spvtools::opt::Instruction"** %38 to i64*
  %59 = bitcast %"class.spvtools::opt::Instruction"** %39 to i64*
  store i64 %57, i64* %58, align 8
  store i64 %44, i64* %59, align 8
  %60 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %38, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 5
  %64 = ptrtoint %"class.spvtools::opt::Instruction"* %60 to i64
  br i1 %63, label %65, label %527

65:                                               ; preds = %56
  %66 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %66, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 5
  br i1 %69, label %527, label %70

70:                                               ; preds = %65
  %71 = ptrtoint %"class.spvtools::opt::Instruction"* %66 to i64
  %72 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  store i64 %64, i64* %72, align 8
  store i64 %71, i64* %58, align 8
  br label %527

73:                                               ; preds = %45
  %74 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %75 = bitcast %"class.spvtools::opt::Instruction"** %38 to i64*
  store i64 %44, i64* %74, align 8
  store i64 %50, i64* %75, align 8
  %76 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %76, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 5
  %80 = ptrtoint %"class.spvtools::opt::Instruction"* %76 to i64
  br i1 %79, label %81, label %527

81:                                               ; preds = %73
  %82 = load i32, i32* %47, align 8
  %83 = icmp eq i32 %82, 5
  br i1 %83, label %527, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.spvtools::opt::Instruction"** %39 to i64*
  store i64 %80, i64* %75, align 8
  store i64 %50, i64* %85, align 8
  br label %527

86:                                               ; preds = %16
  %87 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 2
  %89 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %90 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"** %87, %"class.spvtools::opt::Instruction"** %88, %"class.spvtools::opt::Instruction"** %89)
  br label %527

91:                                               ; preds = %16
  %92 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  %93 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 2
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 3
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, i64 -1
  %96 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"** %92, %"class.spvtools::opt::Instruction"** %93, %"class.spvtools::opt::Instruction"** %94) #11
  %97 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %95, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 2
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 5
  %101 = ptrtoint %"class.spvtools::opt::Instruction"* %97 to i64
  br i1 %100, label %102, label %527

102:                                              ; preds = %91
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %94, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 5
  br i1 %106, label %527, label %107

107:                                              ; preds = %102
  %108 = ptrtoint %"class.spvtools::opt::Instruction"* %103 to i64
  %109 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  %110 = bitcast %"class.spvtools::opt::Instruction"** %95 to i64*
  store i64 %101, i64* %109, align 8
  store i64 %108, i64* %110, align 8
  %111 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %94, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %111, i64 0, i32 2
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 5
  %115 = ptrtoint %"class.spvtools::opt::Instruction"* %111 to i64
  br i1 %114, label %116, label %527

116:                                              ; preds = %107
  %117 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %93, align 8
  %118 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %117, i64 0, i32 2
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 5
  br i1 %120, label %527, label %121

121:                                              ; preds = %116
  %122 = ptrtoint %"class.spvtools::opt::Instruction"* %117 to i64
  %123 = bitcast %"class.spvtools::opt::Instruction"** %93 to i64*
  store i64 %115, i64* %123, align 8
  store i64 %122, i64* %109, align 8
  %124 = load i32, i32* %112, align 8
  %125 = icmp eq i32 %124, 5
  br i1 %125, label %126, label %527

126:                                              ; preds = %121
  %127 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %92, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %127, i64 0, i32 2
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 5
  br i1 %130, label %527, label %131

131:                                              ; preds = %126
  %132 = ptrtoint %"class.spvtools::opt::Instruction"* %127 to i64
  %133 = bitcast %"class.spvtools::opt::Instruction"** %92 to i64*
  store i64 %115, i64* %133, align 8
  store i64 %132, i64* %123, align 8
  %134 = load i32, i32* %112, align 8
  %135 = icmp eq i32 %134, 5
  br i1 %135, label %136, label %527

136:                                              ; preds = %131
  %137 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %138 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %137, i64 0, i32 2
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 5
  br i1 %140, label %527, label %141

141:                                              ; preds = %136
  %142 = ptrtoint %"class.spvtools::opt::Instruction"* %137 to i64
  %143 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  store i64 %115, i64* %143, align 8
  store i64 %142, i64* %133, align 8
  br label %527

144:                                              ; preds = %16
  %145 = icmp slt i64 %19, 248
  br i1 %145, label %146, label %230

146:                                              ; preds = %144
  %147 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 2
  %148 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %148, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 2
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 5
  %153 = ptrtoint %"class.spvtools::opt::Instruction"* %149 to i64
  br i1 %152, label %154, label %160

154:                                              ; preds = %146
  %155 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %156 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %155, i64 0, i32 2
  %157 = load i32, i32* %156, align 8
  %158 = icmp eq i32 %157, 5
  %159 = ptrtoint %"class.spvtools::opt::Instruction"* %155 to i64
  br i1 %158, label %192, label %179

160:                                              ; preds = %146
  %161 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %147, align 8
  %162 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %161, i64 0, i32 2
  %163 = load i32, i32* %162, align 8
  %164 = icmp eq i32 %163, 5
  br i1 %164, label %165, label %192

165:                                              ; preds = %160
  %166 = ptrtoint %"class.spvtools::opt::Instruction"* %161 to i64
  %167 = bitcast %"class.spvtools::opt::Instruction"** %148 to i64*
  %168 = bitcast %"class.spvtools::opt::Instruction"** %147 to i64*
  store i64 %166, i64* %167, align 8
  store i64 %153, i64* %168, align 8
  %169 = load i32, i32* %162, align 8
  %170 = icmp eq i32 %169, 5
  br i1 %170, label %171, label %192

171:                                              ; preds = %165
  %172 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 2
  %174 = load i32, i32* %173, align 8
  %175 = icmp eq i32 %174, 5
  br i1 %175, label %192, label %176

176:                                              ; preds = %171
  %177 = ptrtoint %"class.spvtools::opt::Instruction"* %172 to i64
  %178 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  store i64 %166, i64* %178, align 8
  store i64 %177, i64* %167, align 8
  br label %192

179:                                              ; preds = %154
  %180 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %181 = bitcast %"class.spvtools::opt::Instruction"** %148 to i64*
  store i64 %153, i64* %180, align 8
  store i64 %159, i64* %181, align 8
  %182 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %147, align 8
  %183 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %182, i64 0, i32 2
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %184, 5
  %186 = ptrtoint %"class.spvtools::opt::Instruction"* %182 to i64
  br i1 %185, label %187, label %192

187:                                              ; preds = %179
  %188 = load i32, i32* %156, align 8
  %189 = icmp eq i32 %188, 5
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  %191 = bitcast %"class.spvtools::opt::Instruction"** %147 to i64*
  store i64 %186, i64* %181, align 8
  store i64 %159, i64* %191, align 8
  br label %192

192:                                              ; preds = %190, %187, %179, %176, %171, %165, %160, %154
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 3
  %194 = icmp eq %"class.spvtools::opt::Instruction"** %193, %4
  br i1 %194, label %527, label %195

195:                                              ; preds = %192, %227
  %196 = phi %"class.spvtools::opt::Instruction"** [ %228, %227 ], [ %193, %192 ]
  %197 = phi %"class.spvtools::opt::Instruction"** [ %196, %227 ], [ %147, %192 ]
  %198 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %196, align 8
  %199 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %198, i64 0, i32 2
  %200 = load i32, i32* %199, align 8
  %201 = icmp eq i32 %200, 5
  %202 = ptrtoint %"class.spvtools::opt::Instruction"* %198 to i64
  br i1 %201, label %203, label %227

203:                                              ; preds = %195
  %204 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %197, align 8
  %205 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %204, i64 0, i32 2
  %206 = load i32, i32* %205, align 8
  %207 = icmp eq i32 %206, 5
  br i1 %207, label %227, label %208

208:                                              ; preds = %203, %219
  %209 = phi %"class.spvtools::opt::Instruction"** [ %210, %219 ], [ %196, %203 ]
  %210 = phi %"class.spvtools::opt::Instruction"** [ %216, %219 ], [ %197, %203 ]
  %211 = bitcast %"class.spvtools::opt::Instruction"** %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = bitcast %"class.spvtools::opt::Instruction"** %209 to i64*
  store i64 %212, i64* %213, align 8
  %214 = icmp eq %"class.spvtools::opt::Instruction"** %210, %17
  br i1 %214, label %224, label %215

215:                                              ; preds = %208
  %216 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %210, i64 -1
  %217 = load i32, i32* %199, align 8
  %218 = icmp eq i32 %217, 5
  br i1 %218, label %219, label %224

219:                                              ; preds = %215
  %220 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %216, align 8
  %221 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %220, i64 0, i32 2
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %222, 5
  br i1 %223, label %224, label %208

224:                                              ; preds = %208, %219, %215
  %225 = phi %"class.spvtools::opt::Instruction"** [ %210, %215 ], [ %210, %219 ], [ %17, %208 ]
  %226 = bitcast %"class.spvtools::opt::Instruction"** %225 to i64*
  store i64 %202, i64* %226, align 8
  br label %227

227:                                              ; preds = %224, %203, %195
  %228 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %196, i64 1
  %229 = icmp eq %"class.spvtools::opt::Instruction"** %228, %4
  br i1 %229, label %527, label %195

230:                                              ; preds = %144
  %231 = icmp sgt i64 %19, 7992
  %232 = sdiv i64 %20, 2
  %233 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 %232
  br i1 %231, label %234, label %295

234:                                              ; preds = %230
  %235 = sdiv i64 %20, 4
  %236 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 %235
  %237 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, i64 %235
  %238 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"** %236, %"class.spvtools::opt::Instruction"** %233, %"class.spvtools::opt::Instruction"** %237) #11
  %239 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %240 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %239, i64 0, i32 2
  %241 = load i32, i32* %240, align 8
  %242 = icmp eq i32 %241, 5
  %243 = ptrtoint %"class.spvtools::opt::Instruction"* %239 to i64
  br i1 %242, label %244, label %340

244:                                              ; preds = %234
  %245 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %237, align 8
  %246 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %245, i64 0, i32 2
  %247 = load i32, i32* %246, align 8
  %248 = icmp eq i32 %247, 5
  br i1 %248, label %340, label %249

249:                                              ; preds = %244
  %250 = ptrtoint %"class.spvtools::opt::Instruction"* %245 to i64
  %251 = bitcast %"class.spvtools::opt::Instruction"** %237 to i64*
  store i64 %243, i64* %251, align 8
  store i64 %250, i64* %10, align 8
  %252 = add i32 %238, 1
  %253 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %237, align 8
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %253, i64 0, i32 2
  %255 = load i32, i32* %254, align 8
  %256 = icmp eq i32 %255, 5
  %257 = ptrtoint %"class.spvtools::opt::Instruction"* %253 to i64
  br i1 %256, label %258, label %340

258:                                              ; preds = %249
  %259 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, align 8
  %260 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %259, i64 0, i32 2
  %261 = load i32, i32* %260, align 8
  %262 = icmp eq i32 %261, 5
  br i1 %262, label %340, label %263

263:                                              ; preds = %258
  %264 = ptrtoint %"class.spvtools::opt::Instruction"* %259 to i64
  %265 = bitcast %"class.spvtools::opt::Instruction"** %233 to i64*
  store i64 %257, i64* %265, align 8
  store i64 %264, i64* %251, align 8
  %266 = add i32 %238, 2
  %267 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, align 8
  %268 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %267, i64 0, i32 2
  %269 = load i32, i32* %268, align 8
  %270 = icmp eq i32 %269, 5
  %271 = ptrtoint %"class.spvtools::opt::Instruction"* %267 to i64
  br i1 %270, label %272, label %340

272:                                              ; preds = %263
  %273 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %236, align 8
  %274 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %273, i64 0, i32 2
  %275 = load i32, i32* %274, align 8
  %276 = icmp eq i32 %275, 5
  br i1 %276, label %340, label %277

277:                                              ; preds = %272
  %278 = ptrtoint %"class.spvtools::opt::Instruction"* %273 to i64
  %279 = bitcast %"class.spvtools::opt::Instruction"** %236 to i64*
  store i64 %271, i64* %279, align 8
  store i64 %278, i64* %265, align 8
  %280 = add i32 %238, 3
  %281 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %236, align 8
  %282 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %281, i64 0, i32 2
  %283 = load i32, i32* %282, align 8
  %284 = icmp eq i32 %283, 5
  %285 = ptrtoint %"class.spvtools::opt::Instruction"* %281 to i64
  br i1 %284, label %286, label %340

286:                                              ; preds = %277
  %287 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %288 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %287, i64 0, i32 2
  %289 = load i32, i32* %288, align 8
  %290 = icmp eq i32 %289, 5
  br i1 %290, label %340, label %291

291:                                              ; preds = %286
  %292 = ptrtoint %"class.spvtools::opt::Instruction"* %287 to i64
  %293 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  store i64 %285, i64* %293, align 8
  store i64 %292, i64* %279, align 8
  %294 = add i32 %238, 4
  br label %340

295:                                              ; preds = %230
  %296 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %296, i64 0, i32 2
  %298 = load i32, i32* %297, align 8
  %299 = icmp eq i32 %298, 5
  %300 = ptrtoint %"class.spvtools::opt::Instruction"* %296 to i64
  br i1 %299, label %301, label %307

301:                                              ; preds = %295
  %302 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %303 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %302, i64 0, i32 2
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 5
  %306 = ptrtoint %"class.spvtools::opt::Instruction"* %302 to i64
  br i1 %305, label %340, label %328

307:                                              ; preds = %295
  %308 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %309 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %308, i64 0, i32 2
  %310 = load i32, i32* %309, align 8
  %311 = icmp eq i32 %310, 5
  br i1 %311, label %312, label %340

312:                                              ; preds = %307
  %313 = ptrtoint %"class.spvtools::opt::Instruction"* %308 to i64
  %314 = bitcast %"class.spvtools::opt::Instruction"** %233 to i64*
  store i64 %313, i64* %314, align 8
  store i64 %300, i64* %8, align 8
  %315 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, align 8
  %316 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %315, i64 0, i32 2
  %317 = load i32, i32* %316, align 8
  %318 = icmp eq i32 %317, 5
  %319 = ptrtoint %"class.spvtools::opt::Instruction"* %315 to i64
  br i1 %318, label %320, label %340

320:                                              ; preds = %312
  %321 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %322 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %321, i64 0, i32 2
  %323 = load i32, i32* %322, align 8
  %324 = icmp eq i32 %323, 5
  br i1 %324, label %340, label %325

325:                                              ; preds = %320
  %326 = ptrtoint %"class.spvtools::opt::Instruction"* %321 to i64
  %327 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  store i64 %319, i64* %327, align 8
  store i64 %326, i64* %314, align 8
  br label %340

328:                                              ; preds = %301
  %329 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %330 = bitcast %"class.spvtools::opt::Instruction"** %233 to i64*
  store i64 %300, i64* %329, align 8
  store i64 %306, i64* %330, align 8
  %331 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %332 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %331, i64 0, i32 2
  %333 = load i32, i32* %332, align 8
  %334 = icmp eq i32 %333, 5
  %335 = ptrtoint %"class.spvtools::opt::Instruction"* %331 to i64
  br i1 %334, label %336, label %340

336:                                              ; preds = %328
  %337 = load i32, i32* %303, align 8
  %338 = icmp eq i32 %337, 5
  br i1 %338, label %340, label %339

339:                                              ; preds = %336
  store i64 %335, i64* %330, align 8
  store i64 %306, i64* %9, align 8
  br label %340

340:                                              ; preds = %307, %339, %336, %328, %325, %320, %312, %301, %291, %286, %277, %272, %263, %258, %249, %244, %234
  %341 = phi i32 [ %294, %291 ], [ %238, %234 ], [ %238, %244 ], [ %252, %249 ], [ %252, %258 ], [ %266, %263 ], [ %266, %272 ], [ %280, %277 ], [ %280, %286 ], [ 0, %307 ], [ 2, %325 ], [ 2, %339 ], [ 1, %312 ], [ 1, %320 ], [ 1, %328 ], [ 1, %336 ], [ 0, %301 ]
  %342 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %343 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %233, align 8
  %344 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %342, i64 0, i32 2
  %345 = load i32, i32* %344, align 8
  %346 = icmp eq i32 %345, 5
  br i1 %346, label %347, label %351

347:                                              ; preds = %340
  %348 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %343, i64 0, i32 2
  %349 = load i32, i32* %348, align 8
  %350 = icmp eq i32 %349, 5
  br i1 %350, label %351, label %432

351:                                              ; preds = %340, %347
  %352 = icmp eq %"class.spvtools::opt::Instruction"** %17, %11
  br i1 %352, label %355, label %353

353:                                              ; preds = %351
  %354 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %343, i64 0, i32 2
  br label %414

355:                                              ; preds = %423, %351
  %356 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  br i1 %346, label %357, label %362

357:                                              ; preds = %355
  %358 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %359 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %358, i64 0, i32 2
  %360 = load i32, i32* %359, align 8
  %361 = icmp eq i32 %360, 5
  br i1 %361, label %362, label %379

362:                                              ; preds = %355, %357
  %363 = icmp eq %"class.spvtools::opt::Instruction"** %356, %7
  br i1 %363, label %527, label %364

364:                                              ; preds = %362, %376
  %365 = phi %"class.spvtools::opt::Instruction"** [ %377, %376 ], [ %356, %362 ]
  br i1 %346, label %366, label %376

366:                                              ; preds = %364
  %367 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %365, align 8
  %368 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 2
  %369 = load i32, i32* %368, align 8
  %370 = icmp eq i32 %369, 5
  br i1 %370, label %376, label %371

371:                                              ; preds = %366
  %372 = ptrtoint %"class.spvtools::opt::Instruction"* %367 to i64
  %373 = bitcast %"class.spvtools::opt::Instruction"** %365 to i64*
  %374 = load i64, i64* %12, align 8
  store i64 %374, i64* %373, align 8
  store i64 %372, i64* %12, align 8
  %375 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %365, i64 1
  br label %379

376:                                              ; preds = %366, %364
  %377 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %365, i64 1
  %378 = icmp eq %"class.spvtools::opt::Instruction"** %377, %7
  br i1 %378, label %527, label %364

379:                                              ; preds = %357, %371
  %380 = phi %"class.spvtools::opt::Instruction"** [ %375, %371 ], [ %356, %357 ]
  %381 = icmp eq %"class.spvtools::opt::Instruction"** %380, %7
  br i1 %381, label %527, label %382

382:                                              ; preds = %379, %409
  %383 = phi %"class.spvtools::opt::Instruction"** [ %413, %409 ], [ %380, %379 ]
  %384 = phi %"class.spvtools::opt::Instruction"** [ %402, %409 ], [ %7, %379 ]
  %385 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %386 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %385, i64 0, i32 2
  %387 = load i32, i32* %386, align 8
  %388 = icmp eq i32 %387, 5
  br label %389

389:                                              ; preds = %398, %382
  %390 = phi %"class.spvtools::opt::Instruction"** [ %383, %382 ], [ %399, %398 ]
  br i1 %388, label %391, label %398

391:                                              ; preds = %389
  %392 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %390, align 8
  %393 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %392, i64 0, i32 2
  %394 = load i32, i32* %393, align 8
  %395 = icmp eq i32 %394, 5
  br i1 %395, label %398, label %396

396:                                              ; preds = %391
  %397 = ptrtoint %"class.spvtools::opt::Instruction"* %392 to i64
  br label %400

398:                                              ; preds = %389, %391
  %399 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %390, i64 1
  br label %389

400:                                              ; preds = %396, %400
  %401 = phi %"class.spvtools::opt::Instruction"** [ %402, %400 ], [ %384, %396 ]
  %402 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %401, i64 -1
  %403 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %402, align 8
  %404 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %403, i64 0, i32 2
  %405 = load i32, i32* %404, align 8
  %406 = icmp eq i32 %405, 5
  br i1 %406, label %407, label %400

407:                                              ; preds = %400
  %408 = icmp ult %"class.spvtools::opt::Instruction"** %390, %402
  br i1 %408, label %409, label %16

409:                                              ; preds = %407
  %410 = ptrtoint %"class.spvtools::opt::Instruction"* %403 to i64
  %411 = bitcast %"class.spvtools::opt::Instruction"** %390 to i64*
  %412 = bitcast %"class.spvtools::opt::Instruction"** %402 to i64*
  store i64 %410, i64* %411, align 8
  store i64 %397, i64* %412, align 8
  %413 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %390, i64 1
  br label %382

414:                                              ; preds = %353, %423
  %415 = phi %"class.spvtools::opt::Instruction"** [ %11, %353 ], [ %424, %423 ]
  %416 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %415, align 8
  %417 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %416, i64 0, i32 2
  %418 = load i32, i32* %417, align 8
  %419 = icmp eq i32 %418, 5
  br i1 %419, label %420, label %423

420:                                              ; preds = %414
  %421 = load i32, i32* %354, align 8
  %422 = icmp eq i32 %421, 5
  br i1 %422, label %423, label %426

423:                                              ; preds = %414, %420
  %424 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %415, i64 -1
  %425 = icmp eq %"class.spvtools::opt::Instruction"** %17, %424
  br i1 %425, label %355, label %414

426:                                              ; preds = %420
  %427 = ptrtoint %"class.spvtools::opt::Instruction"* %342 to i64
  %428 = ptrtoint %"class.spvtools::opt::Instruction"* %416 to i64
  %429 = bitcast %"class.spvtools::opt::Instruction"** %17 to i64*
  %430 = bitcast %"class.spvtools::opt::Instruction"** %415 to i64*
  store i64 %428, i64* %429, align 8
  store i64 %427, i64* %430, align 8
  %431 = add i32 %341, 1
  br label %432

432:                                              ; preds = %347, %426
  %433 = phi i32 [ %431, %426 ], [ %341, %347 ]
  %434 = phi %"class.spvtools::opt::Instruction"** [ %415, %426 ], [ %7, %347 ]
  %435 = ptrtoint %"class.spvtools::opt::Instruction"** %17 to i64
  %436 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, i64 1
  %437 = icmp ult %"class.spvtools::opt::Instruction"** %436, %434
  br i1 %437, label %438, label %485

438:                                              ; preds = %432, %476
  %439 = phi %"class.spvtools::opt::Instruction"** [ %483, %476 ], [ %233, %432 ]
  %440 = phi i32 [ %481, %476 ], [ %433, %432 ]
  %441 = phi %"class.spvtools::opt::Instruction"** [ %484, %476 ], [ %436, %432 ]
  %442 = phi %"class.spvtools::opt::Instruction"** [ %465, %476 ], [ %434, %432 ]
  %443 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %441, align 8
  %444 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %439, align 8
  %445 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %443, i64 0, i32 2
  %446 = load i32, i32* %445, align 8
  %447 = icmp eq i32 %446, 5
  br i1 %447, label %448, label %454

448:                                              ; preds = %438
  %449 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %444, i64 0, i32 2
  %450 = load i32, i32* %449, align 8
  %451 = icmp eq i32 %450, 5
  br label %452

452:                                              ; preds = %448, %457
  %453 = phi %"class.spvtools::opt::Instruction"** [ %458, %457 ], [ %441, %448 ]
  br i1 %451, label %454, label %457

454:                                              ; preds = %452, %457, %438
  %455 = phi %"class.spvtools::opt::Instruction"** [ %441, %438 ], [ %458, %457 ], [ %453, %452 ]
  %456 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %444, i64 0, i32 2
  br label %463

457:                                              ; preds = %452
  %458 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %453, i64 1
  %459 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %458, align 8
  %460 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %459, i64 0, i32 2
  %461 = load i32, i32* %460, align 8
  %462 = icmp eq i32 %461, 5
  br i1 %462, label %452, label %454

463:                                              ; preds = %470, %454
  %464 = phi %"class.spvtools::opt::Instruction"** [ %442, %454 ], [ %465, %470 ]
  %465 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %464, i64 -1
  %466 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %465, align 8
  %467 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %466, i64 0, i32 2
  %468 = load i32, i32* %467, align 8
  %469 = icmp eq i32 %468, 5
  br i1 %469, label %471, label %470

470:                                              ; preds = %463, %471
  br label %463

471:                                              ; preds = %463
  %472 = load i32, i32* %456, align 8
  %473 = icmp eq i32 %472, 5
  br i1 %473, label %470, label %474

474:                                              ; preds = %471
  %475 = icmp ugt %"class.spvtools::opt::Instruction"** %455, %465
  br i1 %475, label %485, label %476

476:                                              ; preds = %474
  %477 = ptrtoint %"class.spvtools::opt::Instruction"* %466 to i64
  %478 = bitcast %"class.spvtools::opt::Instruction"** %455 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = bitcast %"class.spvtools::opt::Instruction"** %465 to i64*
  store i64 %477, i64* %478, align 8
  store i64 %479, i64* %480, align 8
  %481 = add i32 %440, 1
  %482 = icmp eq %"class.spvtools::opt::Instruction"** %439, %455
  %483 = select i1 %482, %"class.spvtools::opt::Instruction"** %465, %"class.spvtools::opt::Instruction"** %439
  %484 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %455, i64 1
  br label %438

485:                                              ; preds = %474, %432
  %486 = phi %"class.spvtools::opt::Instruction"** [ %233, %432 ], [ %439, %474 ]
  %487 = phi i32 [ %433, %432 ], [ %440, %474 ]
  %488 = phi %"class.spvtools::opt::Instruction"** [ %436, %432 ], [ %455, %474 ]
  %489 = icmp eq %"class.spvtools::opt::Instruction"** %488, %486
  br i1 %489, label %506, label %490

490:                                              ; preds = %485
  %491 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %486, align 8
  %492 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %491, i64 0, i32 2
  %493 = load i32, i32* %492, align 8
  %494 = icmp eq i32 %493, 5
  %495 = ptrtoint %"class.spvtools::opt::Instruction"* %491 to i64
  br i1 %494, label %496, label %506

496:                                              ; preds = %490
  %497 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %488, align 8
  %498 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %497, i64 0, i32 2
  %499 = load i32, i32* %498, align 8
  %500 = icmp eq i32 %499, 5
  br i1 %500, label %506, label %501

501:                                              ; preds = %496
  %502 = ptrtoint %"class.spvtools::opt::Instruction"* %497 to i64
  %503 = bitcast %"class.spvtools::opt::Instruction"** %488 to i64*
  %504 = bitcast %"class.spvtools::opt::Instruction"** %486 to i64*
  store i64 %495, i64* %503, align 8
  store i64 %502, i64* %504, align 8
  %505 = add i32 %487, 1
  br label %506

506:                                              ; preds = %496, %490, %485, %501
  %507 = phi i32 [ %505, %501 ], [ %487, %485 ], [ %487, %490 ], [ %487, %496 ]
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %516

509:                                              ; preds = %506
  %510 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEbT0_S9_T_"(%"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"** %488)
  %511 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %488, i64 1
  %512 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEbT0_S9_T_"(%"class.spvtools::opt::Instruction"** %511, %"class.spvtools::opt::Instruction"** %4)
  br i1 %512, label %513, label %515

513:                                              ; preds = %509
  br i1 %510, label %527, label %514

514:                                              ; preds = %513, %525
  br label %3

515:                                              ; preds = %509
  br i1 %510, label %523, label %516

516:                                              ; preds = %515, %506
  %517 = ptrtoint %"class.spvtools::opt::Instruction"** %488 to i64
  %518 = sub i64 %517, %435
  %519 = sub i64 %13, %517
  %520 = icmp slt i64 %518, %519
  br i1 %520, label %521, label %525

521:                                              ; preds = %516
  tail call fastcc void @"_ZNSt3__16__sortIRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEvT0_S9_T_"(%"class.spvtools::opt::Instruction"** %17, %"class.spvtools::opt::Instruction"** %488)
  %522 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %488, i64 1
  br label %523

523:                                              ; preds = %521, %515
  %524 = phi %"class.spvtools::opt::Instruction"** [ %511, %515 ], [ %522, %521 ]
  br label %14

525:                                              ; preds = %516
  %526 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %488, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEvT0_S9_T_"(%"class.spvtools::opt::Instruction"** %526, %"class.spvtools::opt::Instruction"** %4)
  br label %514

527:                                              ; preds = %513, %379, %16, %16, %362, %376, %227, %51, %192, %141, %136, %131, %126, %121, %116, %107, %102, %91, %84, %81, %73, %70, %65, %56, %45, %28, %21, %33, %86
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture, %"class.spvtools::opt::Instruction"** nocapture) unnamed_addr #10 {
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 5
  %9 = ptrtoint %"class.spvtools::opt::Instruction"* %5 to i64
  br i1 %8, label %10, label %16

10:                                               ; preds = %4
  %11 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 5
  %15 = ptrtoint %"class.spvtools::opt::Instruction"* %11 to i64
  br i1 %14, label %51, label %38

16:                                               ; preds = %4
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 5
  br i1 %20, label %21, label %51

21:                                               ; preds = %16
  %22 = ptrtoint %"class.spvtools::opt::Instruction"* %17 to i64
  %23 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %24 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  store i64 %22, i64* %23, align 8
  store i64 %9, i64* %24, align 8
  %25 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %25, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 5
  %29 = ptrtoint %"class.spvtools::opt::Instruction"* %25 to i64
  br i1 %28, label %30, label %51

30:                                               ; preds = %21
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 5
  br i1 %34, label %51, label %35

35:                                               ; preds = %30
  %36 = ptrtoint %"class.spvtools::opt::Instruction"* %31 to i64
  %37 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %29, i64* %37, align 8
  store i64 %36, i64* %23, align 8
  br label %51

38:                                               ; preds = %10
  %39 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  %40 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  store i64 %9, i64* %39, align 8
  store i64 %15, i64* %40, align 8
  %41 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 5
  %45 = ptrtoint %"class.spvtools::opt::Instruction"* %41 to i64
  br i1 %44, label %46, label %51

46:                                               ; preds = %38
  %47 = load i32, i32* %12, align 8
  %48 = icmp eq i32 %47, 5
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  %50 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  store i64 %45, i64* %40, align 8
  store i64 %15, i64* %50, align 8
  br label %51

51:                                               ; preds = %16, %10, %21, %30, %35, %38, %46, %49
  %52 = phi i32 [ 0, %16 ], [ 2, %35 ], [ 2, %49 ], [ 1, %21 ], [ 1, %30 ], [ 1, %38 ], [ 1, %46 ], [ 0, %10 ]
  %53 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 5
  %57 = ptrtoint %"class.spvtools::opt::Instruction"* %53 to i64
  br i1 %56, label %58, label %96

58:                                               ; preds = %51
  %59 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %59, i64 0, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 5
  br i1 %62, label %96, label %63

63:                                               ; preds = %58
  %64 = ptrtoint %"class.spvtools::opt::Instruction"* %59 to i64
  %65 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  %66 = bitcast %"class.spvtools::opt::Instruction"** %3 to i64*
  store i64 %57, i64* %65, align 8
  store i64 %64, i64* %66, align 8
  %67 = add nuw nsw i32 %52, 1
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %2, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %68, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 5
  %72 = ptrtoint %"class.spvtools::opt::Instruction"* %68 to i64
  br i1 %71, label %73, label %96

73:                                               ; preds = %63
  %74 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %74, i64 0, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 5
  br i1 %77, label %96, label %78

78:                                               ; preds = %73
  %79 = ptrtoint %"class.spvtools::opt::Instruction"* %74 to i64
  %80 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  store i64 %72, i64* %80, align 8
  store i64 %79, i64* %65, align 8
  %81 = add nuw nsw i32 %52, 2
  %82 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %82, i64 0, i32 2
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 5
  %86 = ptrtoint %"class.spvtools::opt::Instruction"* %82 to i64
  br i1 %85, label %87, label %96

87:                                               ; preds = %78
  %88 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %89 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %88, i64 0, i32 2
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 5
  br i1 %91, label %96, label %92

92:                                               ; preds = %87
  %93 = ptrtoint %"class.spvtools::opt::Instruction"* %88 to i64
  %94 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %86, i64* %94, align 8
  store i64 %93, i64* %80, align 8
  %95 = add nuw nsw i32 %52, 3
  br label %96

96:                                               ; preds = %87, %78, %73, %63, %58, %51, %92
  %97 = phi i32 [ %95, %92 ], [ %52, %51 ], [ %52, %58 ], [ %67, %63 ], [ %67, %73 ], [ %81, %78 ], [ %81, %87 ]
  ret i32 %97
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEbT0_S9_T_"(%"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**) unnamed_addr #0 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"** %1 to i64
  %4 = ptrtoint %"class.spvtools::opt::Instruction"** %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %130 [
    i64 0, label %221
    i64 1, label %221
    i64 2, label %7
    i64 3, label %23
    i64 4, label %72
    i64 5, label %77
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 5
  %13 = ptrtoint %"class.spvtools::opt::Instruction"* %9 to i64
  br i1 %12, label %14, label %221

14:                                               ; preds = %7
  %15 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %15, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 5
  br i1 %18, label %221, label %19

19:                                               ; preds = %14
  %20 = ptrtoint %"class.spvtools::opt::Instruction"* %15 to i64
  %21 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  %22 = bitcast %"class.spvtools::opt::Instruction"** %8 to i64*
  store i64 %13, i64* %21, align 8
  store i64 %20, i64* %22, align 8
  br label %221

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 5
  %30 = ptrtoint %"class.spvtools::opt::Instruction"* %26 to i64
  br i1 %29, label %31, label %37

31:                                               ; preds = %23
  %32 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %32, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 5
  %36 = ptrtoint %"class.spvtools::opt::Instruction"* %32 to i64
  br i1 %35, label %221, label %59

37:                                               ; preds = %23
  %38 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 5
  br i1 %41, label %42, label %221

42:                                               ; preds = %37
  %43 = ptrtoint %"class.spvtools::opt::Instruction"* %38 to i64
  %44 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  %45 = bitcast %"class.spvtools::opt::Instruction"** %25 to i64*
  store i64 %43, i64* %44, align 8
  store i64 %30, i64* %45, align 8
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 5
  %50 = ptrtoint %"class.spvtools::opt::Instruction"* %46 to i64
  br i1 %49, label %51, label %221

51:                                               ; preds = %42
  %52 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 5
  br i1 %55, label %221, label %56

56:                                               ; preds = %51
  %57 = ptrtoint %"class.spvtools::opt::Instruction"* %52 to i64
  %58 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %50, i64* %58, align 8
  store i64 %57, i64* %44, align 8
  br label %221

59:                                               ; preds = %31
  %60 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  %61 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %30, i64* %60, align 8
  store i64 %36, i64* %61, align 8
  %62 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %62, i64 0, i32 2
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 5
  %66 = ptrtoint %"class.spvtools::opt::Instruction"* %62 to i64
  br i1 %65, label %67, label %221

67:                                               ; preds = %59
  %68 = load i32, i32* %33, align 8
  %69 = icmp eq i32 %68, 5
  br i1 %69, label %221, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.spvtools::opt::Instruction"** %25 to i64*
  store i64 %66, i64* %61, align 8
  store i64 %36, i64* %71, align 8
  br label %221

72:                                               ; preds = %2
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 2
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %76 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** %0, %"class.spvtools::opt::Instruction"** %73, %"class.spvtools::opt::Instruction"** %74, %"class.spvtools::opt::Instruction"** %75)
  br label %221

77:                                               ; preds = %2
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 2
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 3
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, i64 -1
  %82 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN8spvtools3opt18StripDebugInfoPass7ProcessEvE3$_1PPNS2_11InstructionEEEjT0_S9_S9_S9_T_"(%"class.spvtools::opt::Instruction"** %0, %"class.spvtools::opt::Instruction"** %78, %"class.spvtools::opt::Instruction"** %79, %"class.spvtools::opt::Instruction"** %80) #11
  %83 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %81, align 8
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 5
  %87 = ptrtoint %"class.spvtools::opt::Instruction"* %83 to i64
  br i1 %86, label %88, label %221

88:                                               ; preds = %77
  %89 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, align 8
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %89, i64 0, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 5
  br i1 %92, label %221, label %93

93:                                               ; preds = %88
  %94 = ptrtoint %"class.spvtools::opt::Instruction"* %89 to i64
  %95 = bitcast %"class.spvtools::opt::Instruction"** %80 to i64*
  %96 = bitcast %"class.spvtools::opt::Instruction"** %81 to i64*
  store i64 %87, i64* %95, align 8
  store i64 %94, i64* %96, align 8
  %97 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 2
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 5
  %101 = ptrtoint %"class.spvtools::opt::Instruction"* %97 to i64
  br i1 %100, label %102, label %221

102:                                              ; preds = %93
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %79, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 5
  br i1 %106, label %221, label %107

107:                                              ; preds = %102
  %108 = ptrtoint %"class.spvtools::opt::Instruction"* %103 to i64
  %109 = bitcast %"class.spvtools::opt::Instruction"** %79 to i64*
  store i64 %101, i64* %109, align 8
  store i64 %108, i64* %95, align 8
  %110 = load i32, i32* %98, align 8
  %111 = icmp eq i32 %110, 5
  br i1 %111, label %112, label %221

112:                                              ; preds = %107
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %78, align 8
  %114 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %113, i64 0, i32 2
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %115, 5
  br i1 %116, label %221, label %117

117:                                              ; preds = %112
  %118 = ptrtoint %"class.spvtools::opt::Instruction"* %113 to i64
  %119 = bitcast %"class.spvtools::opt::Instruction"** %78 to i64*
  store i64 %101, i64* %119, align 8
  store i64 %118, i64* %109, align 8
  %120 = load i32, i32* %98, align 8
  %121 = icmp eq i32 %120, 5
  br i1 %121, label %122, label %221

122:                                              ; preds = %117
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 2
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 5
  br i1 %126, label %221, label %127

127:                                              ; preds = %122
  %128 = ptrtoint %"class.spvtools::opt::Instruction"* %123 to i64
  %129 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %101, i64* %129, align 8
  store i64 %128, i64* %119, align 8
  br label %221

130:                                              ; preds = %2
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 2
  %132 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 1
  %133 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %132, align 8
  %134 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %133, i64 0, i32 2
  %135 = load i32, i32* %134, align 8
  %136 = icmp eq i32 %135, 5
  %137 = ptrtoint %"class.spvtools::opt::Instruction"* %133 to i64
  br i1 %136, label %138, label %144

138:                                              ; preds = %130
  %139 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %139, i64 0, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 5
  %143 = ptrtoint %"class.spvtools::opt::Instruction"* %139 to i64
  br i1 %142, label %176, label %163

144:                                              ; preds = %130
  %145 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %131, align 8
  %146 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %145, i64 0, i32 2
  %147 = load i32, i32* %146, align 8
  %148 = icmp eq i32 %147, 5
  br i1 %148, label %149, label %176

149:                                              ; preds = %144
  %150 = ptrtoint %"class.spvtools::opt::Instruction"* %145 to i64
  %151 = bitcast %"class.spvtools::opt::Instruction"** %132 to i64*
  %152 = bitcast %"class.spvtools::opt::Instruction"** %131 to i64*
  store i64 %150, i64* %151, align 8
  store i64 %137, i64* %152, align 8
  %153 = load i32, i32* %146, align 8
  %154 = icmp eq i32 %153, 5
  br i1 %154, label %155, label %176

155:                                              ; preds = %149
  %156 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 2
  %158 = load i32, i32* %157, align 8
  %159 = icmp eq i32 %158, 5
  br i1 %159, label %176, label %160

160:                                              ; preds = %155
  %161 = ptrtoint %"class.spvtools::opt::Instruction"* %156 to i64
  %162 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  store i64 %150, i64* %162, align 8
  store i64 %161, i64* %151, align 8
  br label %176

163:                                              ; preds = %138
  %164 = bitcast %"class.spvtools::opt::Instruction"** %0 to i64*
  %165 = bitcast %"class.spvtools::opt::Instruction"** %132 to i64*
  store i64 %137, i64* %164, align 8
  store i64 %143, i64* %165, align 8
  %166 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %131, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %166, i64 0, i32 2
  %168 = load i32, i32* %167, align 8
  %169 = icmp eq i32 %168, 5
  %170 = ptrtoint %"class.spvtools::opt::Instruction"* %166 to i64
  br i1 %169, label %171, label %176

171:                                              ; preds = %163
  %172 = load i32, i32* %140, align 8
  %173 = icmp eq i32 %172, 5
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = bitcast %"class.spvtools::opt::Instruction"** %131 to i64*
  store i64 %170, i64* %165, align 8
  store i64 %143, i64* %175, align 8
  br label %176

176:                                              ; preds = %144, %138, %149, %155, %160, %163, %171, %174
  %177 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %0, i64 3
  %178 = icmp eq %"class.spvtools::opt::Instruction"** %177, %1
  br i1 %178, label %221, label %179

179:                                              ; preds = %176, %214
  %180 = phi %"class.spvtools::opt::Instruction"** [ %216, %214 ], [ %177, %176 ]
  %181 = phi i32 [ %215, %214 ], [ 0, %176 ]
  %182 = phi %"class.spvtools::opt::Instruction"** [ %180, %214 ], [ %131, %176 ]
  %183 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %180, align 8
  %184 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %183, i64 0, i32 2
  %185 = load i32, i32* %184, align 8
  %186 = icmp eq i32 %185, 5
  %187 = ptrtoint %"class.spvtools::opt::Instruction"* %183 to i64
  br i1 %186, label %188, label %214

188:                                              ; preds = %179
  %189 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %182, align 8
  %190 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %189, i64 0, i32 2
  %191 = load i32, i32* %190, align 8
  %192 = icmp eq i32 %191, 5
  br i1 %192, label %214, label %193

193:                                              ; preds = %188, %204
  %194 = phi %"class.spvtools::opt::Instruction"** [ %195, %204 ], [ %180, %188 ]
  %195 = phi %"class.spvtools::opt::Instruction"** [ %201, %204 ], [ %182, %188 ]
  %196 = bitcast %"class.spvtools::opt::Instruction"** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.spvtools::opt::Instruction"** %194 to i64*
  store i64 %197, i64* %198, align 8
  %199 = icmp eq %"class.spvtools::opt::Instruction"** %195, %0
  br i1 %199, label %209, label %200

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %195, i64 -1
  %202 = load i32, i32* %184, align 8
  %203 = icmp eq i32 %202, 5
  br i1 %203, label %204, label %209

204:                                              ; preds = %200
  %205 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %201, align 8
  %206 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %205, i64 0, i32 2
  %207 = load i32, i32* %206, align 8
  %208 = icmp eq i32 %207, 5
  br i1 %208, label %209, label %193

209:                                              ; preds = %193, %204, %200
  %210 = phi %"class.spvtools::opt::Instruction"** [ %195, %204 ], [ %195, %200 ], [ %0, %193 ]
  %211 = bitcast %"class.spvtools::opt::Instruction"** %210 to i64*
  store i64 %187, i64* %211, align 8
  %212 = add i32 %181, 1
  %213 = icmp eq i32 %212, 8
  br i1 %213, label %218, label %214

214:                                              ; preds = %209, %188, %179
  %215 = phi i32 [ %212, %209 ], [ %181, %179 ], [ %181, %188 ]
  %216 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %180, i64 1
  %217 = icmp eq %"class.spvtools::opt::Instruction"** %216, %1
  br i1 %217, label %221, label %179

218:                                              ; preds = %209
  %219 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %180, i64 1
  %220 = icmp eq %"class.spvtools::opt::Instruction"** %219, %1
  br label %221

221:                                              ; preds = %214, %218, %176, %37, %127, %122, %117, %112, %107, %102, %93, %88, %77, %70, %67, %59, %56, %51, %42, %31, %14, %7, %19, %2, %2, %72
  %222 = phi i1 [ true, %72 ], [ true, %2 ], [ true, %2 ], [ true, %19 ], [ true, %7 ], [ true, %14 ], [ true, %31 ], [ true, %37 ], [ true, %42 ], [ true, %51 ], [ true, %56 ], [ true, %59 ], [ true, %67 ], [ true, %70 ], [ true, %77 ], [ true, %88 ], [ true, %93 ], [ true, %102 ], [ true, %107 ], [ true, %112 ], [ true, %117 ], [ true, %122 ], [ true, %127 ], [ true, %176 ], [ %220, %218 ], [ true, %214 ]
  ret i1 %222
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18StripDebugInfoPass7ProcessEvE3$_2S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 7, i32 0, i32 1
  %6 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %7 = icmp ne %"class.spvtools::opt::Instruction"* %4, %6
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = or i8 %11, %8
  store i8 %12, i8* %10, align 1
  %13 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %14 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"* %14, %13
  br i1 %15, label %23, label %16

16:                                               ; preds = %2, %16
  %17 = phi %"class.spvtools::opt::Instruction"* [ %18, %16 ], [ %14, %2 ]
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 -1
  %19 = bitcast %"class.spvtools::opt::Instruction"* %18 to void (%"class.spvtools::opt::Instruction"*)***
  %20 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %19, align 8
  %21 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::Instruction"* %18) #11
  %22 = icmp eq %"class.spvtools::opt::Instruction"* %18, %13
  br i1 %22, label %23, label %16

23:                                               ; preds = %16, %2
  store %"class.spvtools::opt::Instruction"* %13, %"class.spvtools::opt::Instruction"** %5, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN8spvtools3opt9IRContext7debugs2Ev: argument 0"}
!5 = distinct !{!5, !"_ZN8spvtools3opt9IRContext7debugs2Ev"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN8spvtools3opt9IRContext7debugs3Ev: argument 0"}
!8 = distinct !{!8, !"_ZN8spvtools3opt9IRContext7debugs3Ev"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN8spvtools3opt9IRContext18ext_inst_debuginfoEv: argument 0"}
!11 = distinct !{!11, !"_ZN8spvtools3opt9IRContext18ext_inst_debuginfoEv"}
