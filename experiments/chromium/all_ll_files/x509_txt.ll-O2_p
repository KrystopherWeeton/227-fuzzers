; ModuleID = '../../third_party/boringssl/src/crypto/x509/x509_txt.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x509_txt.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"unable to get issuer certificate\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"unable to get certificate CRL\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"unable to decrypt certificate's signature\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"unable to decrypt CRL's signature\00", align 1
@.str.5 = private unnamed_addr constant [35 x i8] c"unable to decode issuer public key\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"certificate signature failure\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"CRL signature failure\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"certificate is not yet valid\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"CRL is not yet valid\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"certificate has expired\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"CRL has expired\00", align 1
@.str.12 = private unnamed_addr constant [46 x i8] c"format error in certificate's notBefore field\00", align 1
@.str.13 = private unnamed_addr constant [45 x i8] c"format error in certificate's notAfter field\00", align 1
@.str.14 = private unnamed_addr constant [39 x i8] c"format error in CRL's lastUpdate field\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"format error in CRL's nextUpdate field\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"self signed certificate\00", align 1
@.str.18 = private unnamed_addr constant [45 x i8] c"self signed certificate in certificate chain\00", align 1
@.str.19 = private unnamed_addr constant [39 x i8] c"unable to get local issuer certificate\00", align 1
@.str.20 = private unnamed_addr constant [39 x i8] c"unable to verify the first certificate\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"certificate chain too long\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"certificate revoked\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"invalid CA certificate\00", align 1
@.str.24 = private unnamed_addr constant [45 x i8] c"invalid non-CA certificate (has CA markings)\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"path length constraint exceeded\00", align 1
@.str.26 = private unnamed_addr constant [38 x i8] c"proxy path length constraint exceeded\00", align 1
@.str.27 = private unnamed_addr constant [64 x i8] c"proxy certificates not allowed, please set the appropriate flag\00", align 1
@.str.28 = private unnamed_addr constant [32 x i8] c"unsupported certificate purpose\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"certificate not trusted\00", align 1
@.str.30 = private unnamed_addr constant [21 x i8] c"certificate rejected\00", align 1
@.str.31 = private unnamed_addr constant [33 x i8] c"application verification failure\00", align 1
@.str.32 = private unnamed_addr constant [24 x i8] c"subject issuer mismatch\00", align 1
@.str.33 = private unnamed_addr constant [46 x i8] c"authority and subject key identifier mismatch\00", align 1
@.str.34 = private unnamed_addr constant [44 x i8] c"authority and issuer serial number mismatch\00", align 1
@.str.35 = private unnamed_addr constant [47 x i8] c"key usage does not include certificate signing\00", align 1
@.str.36 = private unnamed_addr constant [37 x i8] c"unable to get CRL issuer certificate\00", align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"unhandled critical extension\00", align 1
@.str.38 = private unnamed_addr constant [39 x i8] c"key usage does not include CRL signing\00", align 1
@.str.39 = private unnamed_addr constant [45 x i8] c"key usage does not include digital signature\00", align 1
@.str.40 = private unnamed_addr constant [33 x i8] c"unhandled critical CRL extension\00", align 1
@.str.41 = private unnamed_addr constant [46 x i8] c"invalid or inconsistent certificate extension\00", align 1
@.str.42 = private unnamed_addr constant [53 x i8] c"invalid or inconsistent certificate policy extension\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"no explicit policy\00", align 1
@.str.44 = private unnamed_addr constant [20 x i8] c"Different CRL scope\00", align 1
@.str.45 = private unnamed_addr constant [30 x i8] c"Unsupported extension feature\00", align 1
@.str.46 = private unnamed_addr constant [51 x i8] c"RFC 3779 resource not subset of parent's resources\00", align 1
@.str.47 = private unnamed_addr constant [28 x i8] c"permitted subtree violation\00", align 1
@.str.48 = private unnamed_addr constant [27 x i8] c"excluded subtree violation\00", align 1
@.str.49 = private unnamed_addr constant [51 x i8] c"name constraints minimum and maximum not supported\00", align 1
@.str.50 = private unnamed_addr constant [33 x i8] c"unsupported name constraint type\00", align 1
@.str.51 = private unnamed_addr constant [46 x i8] c"unsupported or invalid name constraint syntax\00", align 1
@.str.52 = private unnamed_addr constant [35 x i8] c"unsupported or invalid name syntax\00", align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"CRL path validation error\00", align 1
@.str.54 = private unnamed_addr constant [37 x i8] c"Suite B: certificate version invalid\00", align 1
@.str.55 = private unnamed_addr constant [38 x i8] c"Suite B: invalid public key algorithm\00", align 1
@.str.56 = private unnamed_addr constant [27 x i8] c"Suite B: invalid ECC curve\00", align 1
@.str.57 = private unnamed_addr constant [37 x i8] c"Suite B: invalid signature algorithm\00", align 1
@.str.58 = private unnamed_addr constant [40 x i8] c"Suite B: curve not allowed for this LOS\00", align 1
@.str.59 = private unnamed_addr constant [38 x i8] c"Suite B: cannot sign P-384 with P-256\00", align 1
@.str.60 = private unnamed_addr constant [18 x i8] c"Hostname mismatch\00", align 1
@.str.61 = private unnamed_addr constant [23 x i8] c"Email address mismatch\00", align 1
@.str.62 = private unnamed_addr constant [20 x i8] c"IP address mismatch\00", align 1
@.str.63 = private unnamed_addr constant [41 x i8] c"Invalid certificate verification context\00", align 1
@.str.64 = private unnamed_addr constant [32 x i8] c"Issuer certificate lookup error\00", align 1
@.str.65 = private unnamed_addr constant [49 x i8] c"Issuer has name constraints but leaf has no SANs\00", align 1
@.str.66 = private unnamed_addr constant [39 x i8] c"unknown certificate verification error\00", align 1
@switch.table.X509_verify_cert_error_string = private unnamed_addr constant [68 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.65, i64 0, i64 0)], align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @X509_verify_cert_error_string(i64) local_unnamed_addr #0 {
  %2 = icmp ult i64 %0, 68
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = getelementptr inbounds [68 x i8*], [68 x i8*]* @switch.table.X509_verify_cert_error_string, i64 0, i64 %0
  %5 = load i8*, i8** %4, align 8
  ret i8* %5

6:                                                ; preds = %1
  ret i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.66, i64 0, i64 0)
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
