; ModuleID = '../../third_party/blink/renderer/core/html/html_view_source_document.cc'
source_filename = "../../third_party/blink/renderer/core/html/html_view_source_document.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.114", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.114" = type { %"class.base::RefCounted.115" }
%"class.base::RefCounted.115" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.118" }
%"class.blink::HeapHashMap.118" = type { %"class.WTF::HashMap.121" }
%"class.WTF::HashMap.121" = type { %"class.WTF::HashTable.122" }
%"class.WTF::HashTable.122" = type <{ %"struct.WTF::KeyValuePair.124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.124" = type { %"class.blink::WeakMember.125", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.127", i32, [4 x i8], %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.263", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.279", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.297", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.304", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.243", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.163" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__cxx_atomic_impl.166" }
%"struct.std::__1::__cxx_atomic_impl.166" = type { %"struct.std::__1::__cxx_atomic_base_impl.167" }
%"struct.std::__1::__cxx_atomic_base_impl.167" = type { i64 }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::Worklist.174"* }
%"class.blink::Worklist.174" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.163" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::Worklist.181"* }
%"class.blink::Worklist.181" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.163" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist.188"* }
%"class.blink::Worklist.188" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.163" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::Worklist.195"* }
%"class.blink::Worklist.195" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.163" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::Worklist.202"* }
%"class.blink::Worklist.202" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.163" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::Worklist.209"* }
%"class.blink::Worklist.209" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.163" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::Worklist.216"* }
%"class.blink::Worklist.216" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.163" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.223", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.237", [4 x i8] }>
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225", %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { i64 }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { float }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.246", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.255" }
%"class.WTF::Vector.255" = type { %"class.WTF::VectorBuffer.256" }
%"class.WTF::VectorBuffer.256" = type { %"class.WTF::VectorBufferBase.257" }
%"class.WTF::VectorBufferBase.257" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.285" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.174"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.181"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.188"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.195"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.202"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.555" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.303 }
%class.scoped_refptr.303 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.304" = type { %"struct.std::__1::__atomic_base.305" }
%"struct.std::__1::__atomic_base.305" = type { %"struct.std::__1::__cxx_atomic_impl.306" }
%"struct.std::__1::__cxx_atomic_impl.306" = type { %"struct.std::__1::__cxx_atomic_base_impl.307" }
%"struct.std::__1::__cxx_atomic_base_impl.307" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.73" }
%"struct.std::__1::atomic.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { i32 }
%"class.blink::HTMLViewSourceDocument" = type <{ %"class.blink::HTMLDocument", %"class.WTF::String", %"class.blink::Member.21", %"class.blink::Member.540", %"class.blink::Member.542", i32, [4 x i8] }>
%"class.blink::HTMLDocument" = type { %"class.blink::Document", %"class.WTF::HashCountedSet" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.69", %"class.WTF::Vector.69", i8, i32, %"class.blink::Member.80", %"class.blink::Member.82", %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.94", %"class.blink::Member.96", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.99", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.105", %"class.blink::Member.107", %"class.blink::Member.59", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.110", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.320", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.329", double, double, i64, i64, %"class.blink::HeapHashSet.331", %"class.blink::HeapHashSet.338", i16, i8, %"class.blink::Member.345", %"class.blink::Member.347", %"class.blink::Member.349", %"class.blink::Member.351", %"class.blink::TextLinkColors", %"class.blink::Member.353", i8, [7 x i8], %"class.blink::HeapHashMap.355", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.362", %"class.blink::Member.367", %"class.blink::Member.369", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.371", %"class.blink::HeapVector.373", %"class.std::__1::unique_ptr.381", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.387", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.400", %"class.WTF::Vector.402", i8, i8, %"class.std::__1::unique_ptr.407", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.413", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.421", i8, i32, %"class.blink::Member.423", %"class.blink::Member.425", %"class.blink::Member.427", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.429", %"class.WTF::HashMap.431", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.444", i8, i32, %"class.blink::Member.451", %"class.blink::Member.453", i32, %"class.blink::Member.455", %"class.blink::Member.457", %"class.blink::Member.459", %"class.std::__1::unique_ptr.461", i64, %"class.std::__1::unique_ptr.467", i32, i32, %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::Member.486", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.488", %"class.WTF::Vector.490", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.495", %"class.blink::Member.502", %"class.std::__1::unique_ptr.504", %"class.blink::Member.510", i8, i8, %"class.WTF::String", %"class.blink::Member.512", i8, [7 x i8], %"class.blink::HeapHashMap.514", %"class.blink::HeapObserverSet", %"class.blink::Member.528", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.530", i32, i8, i8, %"class.blink::WeakMember.532", %"class.blink::Member.533" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.62" }
%"class.blink::HeapHashMap.62" = type { %"class.WTF::HashMap.65" }
%"class.WTF::HashMap.65" = type { %"class.WTF::HashTable.66" }
%"class.WTF::HashTable.66" = type <{ %"struct.WTF::KeyValuePair.68"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.68" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.73" }
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.560", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.604", i32, i8, [3 x i8], %"class.blink::HeapVector.606", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.614", %"class.blink::Member.616", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.625", %"class.blink::Member.631", %"class.blink::Member.633", i8, [7 x i8] }>
%"class.blink::Supplementable.560" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.561" }
%"class.blink::HeapHashMap.561" = type { %"class.WTF::HashMap.564" }
%"class.WTF::HashMap.564" = type { %"class.WTF::HashTable.565" }
%"class.WTF::HashTable.565" = type <{ %"struct.WTF::KeyValuePair.567"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.567" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.576" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.568" }
%"class.blink::HeapObserverSet.568" = type { i32, [4 x i8], %"class.blink::HeapHashSet.569" }
%"class.blink::HeapHashSet.569" = type { %"class.WTF::HashSet.572" }
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"class.blink::WeakMember.575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.575" = type opaque
%"class.blink::Supplementable.576" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.577" }
%"class.blink::HeapHashMap.577" = type { %"class.WTF::HashMap.580" }
%"class.WTF::HashMap.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"struct.WTF::KeyValuePair.583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.583" = type { i8*, %"class.blink::Member.1470" }
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1472" }
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.584, %"class.std::__1::unique_ptr.588", %"class.std::__1::unique_ptr.588", %"class.std::__1::unique_ptr.594", %"class.std::__1::unique_ptr.594", %"class.blink::Member.82", i32, [4 x i8], %"class.WTF::HashSet.600", i32, i32 }
%class.scoped_refptr.584 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.585", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.587 }
%"class.WTF::RefCounted.585" = type { %"class.base::RefCounted.586" }
%"class.base::RefCounted.586" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.587 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.600" = type { %"class.WTF::HashTable.601" }
%"class.WTF::HashTable.601" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.606" = type { %"class.WTF::Vector.609" }
%"class.WTF::Vector.609" = type { %"class.WTF::VectorBuffer.610" }
%"class.WTF::VectorBuffer.610" = type { %"class.WTF::VectorBufferBase.611" }
%"class.WTF::VectorBufferBase.611" = type { %"class.blink::Member.612"*, i32, i32 }
%"class.blink::Member.612" = type opaque
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.618", i32, i32 }
%"class.blink::HeapHashMap.618" = type { %"class.WTF::HashMap.621" }
%"class.WTF::HashMap.621" = type { %"class.WTF::HashTable.622" }
%"class.WTF::HashTable.622" = type <{ %"struct.WTF::KeyValuePair.624"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.624" = type opaque
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member.8", %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.92" }
%"class.WTF::HashTable.92" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.109 }
%class.scoped_refptr.109 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.110" = type { %"class.WTF::VectorBuffer.111" }
%"class.WTF::VectorBuffer.111" = type { %"class.WTF::VectorBufferBase.112" }
%"class.WTF::VectorBufferBase.112" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.113 }
%class.scoped_refptr.113 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.322" }
%"class.blink::HeapHashMap.322" = type { %"class.WTF::HashMap.325" }
%"class.WTF::HashMap.325" = type { %"class.WTF::HashTable.326" }
%"class.WTF::HashTable.326" = type <{ %"struct.WTF::KeyValuePair.328"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.328" = type opaque
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.331" = type { %"class.WTF::HashSet.334" }
%"class.WTF::HashSet.334" = type { %"class.WTF::HashTable.335" }
%"class.WTF::HashTable.335" = type <{ %"class.blink::WeakMember.337"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.337" = type opaque
%"class.blink::HeapHashSet.338" = type { %"class.WTF::HashSet.341" }
%"class.WTF::HashSet.341" = type { %"class.WTF::HashTable.342" }
%"class.WTF::HashTable.342" = type <{ %"class.blink::WeakMember.344"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.344" = type opaque
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.355" = type { %"class.WTF::HashMap.358" }
%"class.WTF::HashMap.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type opaque
%"class.WTF::Vector.362" = type { %"class.WTF::VectorBuffer.363" }
%"class.WTF::VectorBuffer.363" = type { %"class.WTF::VectorBufferBase.364" }
%"class.WTF::VectorBufferBase.364" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.373" = type { %"class.WTF::Vector.376" }
%"class.WTF::Vector.376" = type { %"class.WTF::VectorBuffer.377" }
%"class.WTF::VectorBuffer.377" = type { %"class.WTF::VectorBufferBase.378" }
%"class.WTF::VectorBufferBase.378" = type { %"class.blink::Member.379"*, i32, i32 }
%"class.blink::Member.379" = type opaque
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.387" = type { %"class.WTF::HashSet.390" }
%"class.WTF::HashSet.390" = type { %"class.WTF::HashTable.391" }
%"class.WTF::HashTable.391" = type <{ %"class.blink::WeakMember.393"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.393" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.394", i32, [4 x i8] }>
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"struct.std::__1::pair.397"*, i32, i32 }
%"struct.std::__1::pair.397" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.413" = type { %"class.WTF::Vector.416" }
%"class.WTF::Vector.416" = type { %"class.WTF::VectorBuffer.417" }
%"class.WTF::VectorBuffer.417" = type { %"class.WTF::VectorBufferBase.418" }
%"class.WTF::VectorBufferBase.418" = type { %"class.blink::Member.419"*, i32, i32 }
%"class.blink::Member.419" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.431" = type { %"class.WTF::HashTable.432" }
%"class.WTF::HashTable.432" = type <{ %"struct.WTF::KeyValuePair.435"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.435" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.319", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.310, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.310 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.311" }>
%"class.base::RefCountedThreadSafe.311" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.312 }
%class.scoped_refptr.312 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.313", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.313" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.314" }
%"struct.std::__1::atomic.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__atomic_base.316" }
%"struct.std::__1::__atomic_base.316" = type { %"struct.std::__1::__cxx_atomic_impl.317" }
%"struct.std::__1::__cxx_atomic_impl.317" = type { %"struct.std::__1::__cxx_atomic_base_impl.318" }
%"struct.std::__1::__cxx_atomic_base_impl.318" = type { i8 }
%"class.blink::WeakMember.319" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.444" = type { %"class.WTF::HashSet.447" }
%"class.WTF::HashSet.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"class.blink::Member.450"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.450" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.470", %"class.WTF::HashSet.470", %"class.WTF::HashSet.470", %"class.WTF::HashSet.470", %"class.WTF::HashSet.470", %"class.WTF::HashSet.470", i32, [4 x i8], %"class.WTF::HashMap.474", %"class.WTF::HashMap.474", %"class.WTF::HashMap.474", %"class.WTF::HashMap.474", %"class.WTF::HashMap.474", %"class.WTF::HashMap.474", %"class.WTF::HashMap.474", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.470" = type { %"class.WTF::HashTable.471" }
%"class.WTF::HashTable.471" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.474" = type { %"class.WTF::HashTable.475" }
%"class.WTF::HashTable.475" = type <{ %"struct.WTF::KeyValuePair.478"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.478" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.490" = type { %"class.WTF::VectorBuffer.491" }
%"class.WTF::VectorBuffer.491" = type { %"class.WTF::VectorBufferBase.492" }
%"class.WTF::VectorBufferBase.492" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.495" = type { %"class.WTF::HashMap.498" }
%"class.WTF::HashMap.498" = type { %"class.WTF::HashTable.499" }
%"class.WTF::HashTable.499" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.514" = type { %"class.WTF::HashMap.517" }
%"class.WTF::HashMap.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"struct.WTF::KeyValuePair.520"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.520" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.521" }
%"class.blink::HeapHashSet.521" = type { %"class.WTF::HashSet.524" }
%"class.WTF::HashSet.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"class.blink::WeakMember.527"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.527" = type opaque
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.546", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.553", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.546" = type { %"class.WTF::HashSet.549" }
%"class.WTF::HashSet.549" = type { %"class.WTF::HashTable.550" }
%"class.WTF::HashTable.550" = type <{ %"class.blink::Member.552"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.552" = type opaque
%"class.blink::HeapTaskRunnerTimer.553" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.554", { i64, i64 } }
%"class.blink::WeakMember.554" = type { %"class.blink::MemberBase.531" }
%"class.blink::WeakMember.532" = type { %"class.blink::MemberBase" }
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.535" }
%"class.WTF::HashMap.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"struct.WTF::KeyValuePair.539"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.539" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.33", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::HTMLTableSectionElement"* }
%"class.blink::HTMLTableSectionElement" = type { %"class.blink::HTMLTablePartElement" }
%"class.blink::HTMLTablePartElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::HTMLTableCellElement"* }
%"class.blink::HTMLTableCellElement" = type { %"class.blink::HTMLTablePartElement" }
%"class.blink::DocumentInit" = type <{ i32, i8, i8, [2 x i8], %"class.WTF::String", %"class.blink::LocalDOMWindow"*, %"class.blink::ExecutionContext"*, %"class.blink::KURL", %"class.blink::Document"*, i8, [7 x i8], %"class.blink::KURL", i64, i8, [7 x i8] }>
%"class.blink::HTMLViewSourceParser" = type { %"class.blink::DecodedDataDocumentParser", %"class.blink::HTMLInputStream", %"class.blink::HTMLToken", %"class.std::__1::unique_ptr.664", i8, [7 x i8], %"class.blink::SegmentedString", %"class.blink::SegmentedString", %"class.WTF::String" }
%"class.blink::DecodedDataDocumentParser" = type { %"class.blink::DocumentParser", i8, %"class.std::__1::unique_ptr.635" }
%"class.std::__1::unique_ptr.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type opaque
%"class.blink::HTMLInputStream" = type { %"class.blink::SegmentedString", %"class.blink::SegmentedString"* }
%"class.blink::HTMLToken" = type { i32, %"class.blink::HTMLToken::Attribute::Range", i32, %class.LiteralBuffer, i16, i8, %"class.WTF::Vector.647", %"class.blink::HTMLToken::Attribute"*, %"class.std::__1::unique_ptr.653" }
%"class.blink::HTMLToken::Attribute::Range" = type { i32, i32 }
%class.LiteralBuffer = type { i16*, i16*, i16*, [256 x i16] }
%"class.WTF::Vector.647" = type { %"class.WTF::VectorBuffer.648" }
%"class.WTF::VectorBuffer.648" = type { %"class.WTF::VectorBufferBase.649", [1920 x i8] }
%"class.WTF::VectorBufferBase.649" = type { %"class.blink::HTMLToken::Attribute"*, i32, i32 }
%"class.blink::HTMLToken::Attribute" = type { %class.LiteralBuffer.650, %class.LiteralBuffer.650, %"class.blink::HTMLToken::Attribute::Range", %"class.blink::HTMLToken::Attribute::Range" }
%class.LiteralBuffer.650 = type { i16*, i16*, i16*, [32 x i16] }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.blink::DoctypeData"* }
%"class.blink::DoctypeData" = type <{ i8, i8, [6 x i8], %"class.WTF::Vector.656", %"class.WTF::Vector.656", i8, [7 x i8] }>
%"class.WTF::Vector.656" = type { %"class.WTF::VectorBuffer.657" }
%"class.WTF::VectorBuffer.657" = type { %"class.WTF::VectorBufferBase.658" }
%"class.WTF::VectorBufferBase.658" = type { i16*, i32, i32 }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.blink::HTMLTokenizer"* }
%"class.blink::HTMLTokenizer" = type <{ i32, i8, i8, [2 x i8], %"class.blink::HTMLToken"*, i16, [6 x i8], %"class.blink::InputStreamPreprocessor", %class.LiteralBuffer.650, %class.LiteralBuffer.667, %class.LiteralBuffer.667, %"class.blink::HTMLParserOptions", [6 x i8] }>
%"class.blink::InputStreamPreprocessor" = type <{ %"class.blink::HTMLTokenizer"*, i8, [7 x i8] }>
%class.LiteralBuffer.667 = type { i8*, i8*, i8*, [32 x i8] }
%"class.blink::HTMLParserOptions" = type { i8, i8 }
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque.642", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon.641, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon.641 = type { i8* }
%"class.WTF::Deque.642" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.645" }
%"class.WTF::VectorBuffer.645" = type { %"class.WTF::VectorBufferBase.646" }
%"class.WTF::VectorBufferBase.646" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"class.blink::HTMLHtmlElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLHeadElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLBodyElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLTableElement" = type { %"class.blink::HTMLElement", i8, i8, i8, i32, i16, %"class.blink::Member.30" }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.698", %"class.blink::Member.700", %"class.blink::Member.702", %"class.blink::Member.704", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.696", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.671", %"class.blink::Member.673", %"class.blink::Member.694", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.675", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector.678", %"class.blink::HeapVector.686", i32, i8, i8, i8, i8 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::HeapHashMap.677"* }
%"class.blink::HeapHashMap.677" = type opaque
%"class.blink::HeapVector.678" = type { %"class.WTF::Vector.681" }
%"class.WTF::Vector.681" = type { %"class.WTF::VectorBuffer.682" }
%"class.WTF::VectorBuffer.682" = type { %"class.WTF::VectorBufferBase.683" }
%"class.WTF::VectorBufferBase.683" = type { %"class.blink::Member.684"*, i32, i32 }
%"class.blink::Member.684" = type opaque
%"class.blink::HeapVector.686" = type { %"class.WTF::Vector.689" }
%"class.WTF::Vector.689" = type { %"class.WTF::VectorBuffer.690" }
%"class.WTF::VectorBuffer.690" = type { %"class.WTF::VectorBufferBase.691" }
%"class.WTF::VectorBufferBase.691" = type { %"class.blink::Member.692"*, i32, i32 }
%"class.blink::Member.692" = type opaque
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.708" }
%"class.absl::optional.708" = type { %"class.absl::optional_internal::optional_data.709" }
%"class.absl::optional_internal::optional_data.709" = type { %"class.absl::optional_internal::optional_data_base.710" }
%"class.absl::optional_internal::optional_data_base.710" = type { %"class.absl::optional_internal::optional_data_dtor_base.711" }
%"class.absl::optional_internal::optional_data_dtor_base.711" = type { i8, %union.anon.712 }
%union.anon.712 = type { i64 }
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::HTMLLabelElement" = type <{ %"class.blink::HTMLElement", i8, [7 x i8] }>
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.717 }
%class.scoped_refptr.717 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.718", %"class.WTF::String", %"class.std::__1::unique_ptr.720" }
%"class.WTF::RefCounted.718" = type { %"class.base::RefCounted.719" }
%"class.base::RefCounted.719" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.723", %"class.std::__1::unique_ptr.734", %"class.WTF::Vector.740", i8, i32 }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.WTF::Vector.726"* }
%"class.WTF::Vector.726" = type { %"class.WTF::VectorBuffer.727" }
%"class.WTF::VectorBuffer.727" = type { %"class.WTF::VectorBufferBase.728" }
%"class.WTF::VectorBufferBase.728" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.740" = type { %"class.WTF::VectorBuffer.741" }
%"class.WTF::VectorBuffer.741" = type { %"class.WTF::VectorBufferBase.728", [32 x i8] }
%"class.blink::HTMLSpanElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLBaseElement" = type { %"class.blink::HTMLElement" }
%"class.WTF::Vector.747" = type { %"class.WTF::VectorBuffer.748" }
%"class.WTF::VectorBuffer.748" = type { %"class.WTF::VectorBufferBase.749" }
%"class.WTF::VectorBufferBase.749" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HTMLBRElement" = type { %"class.blink::HTMLElement" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HTMLTableRowElement" = type { %"class.blink::HTMLTablePartElement" }
%"class.blink::HTMLAnchorElement" = type { %"class.blink::HTMLElement", %"class.blink::DOMURLUtils.base", i32, i64, %"class.blink::Member.752" }
%"class.blink::DOMURLUtils.base" = type <{ %"class.blink::DOMURLUtilsReadOnly", i8 }>
%"class.blink::DOMURLUtilsReadOnly" = type { i32 (...)** }
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::RelList"* }
%"class.blink::RelList" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.21", %"class.blink::QualifiedName", i8 }>
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.777" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.765" }
%"class.blink::HeapVector.765" = type { %"class.WTF::Vector.768" }
%"class.WTF::Vector.768" = type { %"class.WTF::VectorBuffer.769" }
%"class.WTF::VectorBuffer.769" = type { %"class.WTF::VectorBufferBase.770", [32 x i8] }
%"class.WTF::VectorBufferBase.770" = type { %"struct.std::__1::pair.771"*, i32, i32 }
%"struct.std::__1::pair.771" = type { %"class.WTF::AtomicString", %"class.blink::Member.772" }
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::HeapVector.774"* }
%"class.blink::HeapVector.774" = type opaque
%"class.std::__1::unique_ptr.777" = type { %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.WTF::Vector.780"* }
%"class.WTF::Vector.780" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.758, %"class.blink::Member.759", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.758 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.759" = type { %"class.blink::MemberBase.760" }
%"class.blink::MemberBase.760" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.761" }
%"class.blink::Persistent.761" = type { %"class.blink::PersistentBase.762" }
%"class.blink::PersistentBase.762" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.784", %"class.blink::Member.786", %"class.blink::Member.788", %"class.blink::Member.790", i8, %"class.WTF::Vector.792" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.972", %"class.blink::Member.974", %"class.blink::Member.976", i8, i32, i8, i32, %"class.blink::Member.978", %"class.blink::Member.786", %"class.blink::FrameLifecycle", %"class.blink::Member.784", %"class.blink::Member.784", %"class.blink::Member.784", %"class.blink::Member.784", %"class.blink::Member.784", %"class.blink::Member.784", %"class.blink::Member.980", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.990", i8, %"class.base::UnguessableToken", %"class.absl::optional.992", %"class.absl::optional.997", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.784", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.784", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.982" }
%"class.std::__1::vector.982" = type { %"class.std::__1::__vector_base.983" }
%"class.std::__1::__vector_base.983" = type { %"struct.std::__1::pair.984"*, %"struct.std::__1::pair.984"*, %"class.std::__1::__compressed_pair.985" }
%"struct.std::__1::pair.984" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"struct.std::__1::pair.984"* }
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.992" = type { %"class.absl::optional_internal::optional_data.993" }
%"class.absl::optional_internal::optional_data.993" = type { %"class.absl::optional_internal::optional_data_base.994" }
%"class.absl::optional_internal::optional_data_base.994" = type { %"class.absl::optional_internal::optional_data_dtor_base.995" }
%"class.absl::optional_internal::optional_data_dtor_base.995" = type { i8, %union.anon.996 }
%union.anon.996 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.802 }
%union.anon.802 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.997" = type { %"class.absl::optional_internal::optional_data.998" }
%"class.absl::optional_internal::optional_data.998" = type { %"class.absl::optional_internal::optional_data_base.999" }
%"class.absl::optional_internal::optional_data_base.999" = type { %"class.absl::optional_internal::optional_data_dtor_base.1000" }
%"class.absl::optional_internal::optional_data_dtor_base.1000" = type { i8, %union.anon.1001 }
%union.anon.1001 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1002" }
%"class.blink::HeapHashSet.1002" = type { %"class.WTF::HashSet.1005" }
%"class.WTF::HashSet.1005" = type { %"class.WTF::HashTable.1006" }
%"class.WTF::HashTable.1006" = type <{ %"class.blink::WeakMember.1008"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1008" = type opaque
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.788" = type { %"class.blink::MemberBase.789" }
%"class.blink::MemberBase.789" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.792" = type { %"class.WTF::VectorBuffer.793" }
%"class.WTF::VectorBuffer.793" = type { %"class.WTF::VectorBufferBase.794" }
%"class.WTF::VectorBufferBase.794" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.795", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.795" = type { %"class.base::StrongAlias.796" }
%"class.base::StrongAlias.796" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.961" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.797, %"class.std::__1::unique_ptr.911", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.799, i32 }>
%class.scoped_refptr.797 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.799, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.877", %"class.absl::optional.882", %"class.absl::optional.838", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.902", i8, [7 x i8], %class.scoped_refptr.799, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.798" }>
%"class.base::RefCountedThreadSafe.798" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.806", %"class.std::__1::unique_ptr.812", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.818" }
%"class.std::__1::unique_ptr.806" = type { %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.812" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.818" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.799, %"class.std::__1::unique_ptr.819", %"class.absl::optional.828", %"struct.std::__1::atomic.304", i8, i8, i8, i8, i32, i32, %"class.absl::optional.838", %"class.std::__1::unique_ptr.843", i8, i64, %class.scoped_refptr.873, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.876" }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.799, i8, %"class.mojo::ScopedHandleBase.822", %class.scoped_refptr.823, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.824" }
%"class.mojo::ScopedHandleBase.822" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.823 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.824" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.828" = type { %"class.absl::optional_internal::optional_data.829" }
%"class.absl::optional_internal::optional_data.829" = type { %"class.absl::optional_internal::optional_data_base.830" }
%"class.absl::optional_internal::optional_data_base.830" = type { %"class.absl::optional_internal::optional_data_dtor_base.831" }
%"class.absl::optional_internal::optional_data_dtor_base.831" = type { i8, %union.anon.832 }
%union.anon.832 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.833", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.833" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.846", i8, i64, %class.scoped_refptr.847, %class.scoped_refptr.869 }
%"class.base::RepeatingCallback.846" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.847 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.848", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.858", i8, [7 x i8] }>
%"class.base::RefCounted.848" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.849 }
%class.scoped_refptr.849 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.850", %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"class.std::__1::map.858" = type { %"class.std::__1::__tree.859" }
%"class.std::__1::__tree.859" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.860", %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%class.scoped_refptr.869 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.873 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.874 }
%class.scoped_refptr.874 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.969", [4 x i8], %"class.base::RepeatingCallback.914", %class.scoped_refptr.799, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.969" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.914" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.875 }
%class.scoped_refptr.875 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.876" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.877" = type { %"class.absl::optional_internal::optional_data.878" }
%"class.absl::optional_internal::optional_data.878" = type { %"class.absl::optional_internal::optional_data_base.879" }
%"class.absl::optional_internal::optional_data_base.879" = type { %"class.absl::optional_internal::optional_data_dtor_base.880" }
%"class.absl::optional_internal::optional_data_dtor_base.880" = type { i8, %union.anon.881 }
%union.anon.881 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.882" = type { %"class.absl::optional_internal::optional_data.883" }
%"class.absl::optional_internal::optional_data.883" = type { %"class.absl::optional_internal::optional_data_base.884" }
%"class.absl::optional_internal::optional_data_base.884" = type { %"class.absl::optional_internal::optional_data_dtor_base.885" }
%"class.absl::optional_internal::optional_data_dtor_base.885" = type { i8, [7 x i8], %union.anon.886 }
%union.anon.886 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.838" = type { %"class.absl::optional_internal::optional_data.839" }
%"class.absl::optional_internal::optional_data.839" = type { %"class.absl::optional_internal::optional_data_base.840" }
%"class.absl::optional_internal::optional_data_base.840" = type { %"class.absl::optional_internal::optional_data_dtor_base.841" }
%"class.absl::optional_internal::optional_data_dtor_base.841" = type { i8, %union.anon.842 }
%union.anon.842 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.887 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.887 = type { %"class.std::__1::map.890" }
%"class.std::__1::map.890" = type { %"class.std::__1::__tree.891" }
%"class.std::__1::__tree.891" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.892", %"class.std::__1::__compressed_pair.896" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.901"*, i64 }
%"class.std::__1::unique_ptr.901" = type opaque
%"class.std::__1::map.902" = type { %"class.std::__1::__tree.903" }
%"class.std::__1::__tree.903" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.904", %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.914", %"class.base::OnceCallback.915", %"class.absl::optional.916", %"class.absl::optional.921", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.928", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.936", %"class.std::__1::map.947", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.956", i8, %class.scoped_refptr.799, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.957" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.915" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.916" = type { %"class.absl::optional_internal::optional_data.917" }
%"class.absl::optional_internal::optional_data.917" = type { %"class.absl::optional_internal::optional_data_base.918" }
%"class.absl::optional_internal::optional_data_base.918" = type { %"class.absl::optional_internal::optional_data_dtor_base.919" }
%"class.absl::optional_internal::optional_data_dtor_base.919" = type { i8, %union.anon.920 }
%union.anon.920 = type { %"class.base::TimeDelta" }
%"class.absl::optional.921" = type { %"class.absl::optional_internal::optional_data.922" }
%"class.absl::optional_internal::optional_data.922" = type { %"class.absl::optional_internal::optional_data_base.923" }
%"class.absl::optional_internal::optional_data_base.923" = type { %"class.absl::optional_internal::optional_data_dtor_base.924" }
%"class.absl::optional_internal::optional_data_dtor_base.924" = type { i8, %union.anon.925 }
%union.anon.925 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.799, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.926" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.926" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.927 }
%class.scoped_refptr.927 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.928" = type { %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.931", %class.scoped_refptr.932 }
%"class.base::RepeatingCallback.931" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.932 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.798", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.936" = type { %"class.std::__1::__tree.937" }
%"class.std::__1::__tree.937" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.938", %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"class.std::__1::map.947" = type { %"class.std::__1::__tree.948" }
%"class.std::__1::__tree.948" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.949", %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"class.base::OnceCallback.956" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.957" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.799 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.961" = type { %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1009", %"class.blink::Member.1009", %"class.blink::Member.1011", %"class.blink::Member.1013", %"class.base::TimeTicks" }
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::Event"* }
%"class.blink::Member.1013" = type { %"class.blink::MemberBase.1014" }
%"class.blink::MemberBase.1014" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1015", i8, [7 x i8] }>
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1017" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1017" = type { %"class.v8::TracedReference.1018" }
%"class.v8::TracedReference.1018" = type { %"class.v8::BasicTracedReference.1019" }
%"class.v8::BasicTracedReference.1019" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1444", %"class.std::__1::unique_ptr.1446" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1084", %"class.blink::DataRef.1165", %"class.blink::DataRef.1169", %"class.blink::DataRef.1364", %"class.blink::DataRef.1427", %"class.blink::DataRef.1431", %"class.blink::DataRef.1435", %"class.blink::DataRef.1439", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.1020 }
%class.scoped_refptr.1020 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.1021", %"class.blink::DataRef.1023", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.1021" = type { %"class.base::RefCounted.1022" }
%"class.base::RefCounted.1022" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1023" = type { %class.scoped_refptr.1024 }
%class.scoped_refptr.1024 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.1025", %"class.blink::Font" }
%"class.WTF::RefCounted.1025" = type { %"class.base::RefCounted.1026" }
%"class.base::RefCounted.1026" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1053 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.1028, %class.scoped_refptr.1036, %class.scoped_refptr.1046, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1052 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1027 }
%class.scoped_refptr.1027 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1461", [4 x i8] }>
%"class.WTF::RefCounted.1461" = type { %"class.base::RefCounted.1462" }
%"class.base::RefCounted.1462" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1028 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.1034", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.1029" }
%"class.WTF::Vector.1029" = type { %"class.WTF::VectorBuffer.1030" }
%"class.WTF::VectorBuffer.1030" = type { %"class.WTF::VectorBufferBase.1031" }
%"class.WTF::VectorBufferBase.1031" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.1034" = type { %"class.base::RefCounted.1035" }
%"class.base::RefCounted.1035" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1036 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.1037", %"class.WTF::RefCounted.1044", [4 x i8] }>
%"class.blink::FontSettings.1037" = type { %"class.WTF::Vector.1038" }
%"class.WTF::Vector.1038" = type { %"class.WTF::VectorBuffer.1039" }
%"class.WTF::VectorBuffer.1039" = type { %"class.WTF::VectorBufferBase.1040" }
%"class.WTF::VectorBufferBase.1040" = type { %"class.blink::FontTagValuePair.1041"*, i32, i32 }
%"class.blink::FontTagValuePair.1041" = type { i32, float }
%"class.WTF::RefCounted.1044" = type { %"class.base::RefCounted.1045" }
%"class.base::RefCounted.1045" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1046 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1047", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1049, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1047" = type { %"class.base::RefCounted.1048" }
%"class.base::RefCounted.1048" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1049 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1050", [4 x i8] }>
%"class.WTF::RefCounted.1050" = type { %"class.base::RefCounted.1051" }
%"class.base::RefCounted.1051" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1052 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1053 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1054", %"class.WTF::Vector.1056", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr.1082" }
%"class.WTF::RefCounted.1054" = type { %"class.base::RefCounted.1055" }
%"class.base::RefCounted.1055" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1056" = type { %"class.WTF::VectorBuffer.1057" }
%"class.WTF::VectorBuffer.1057" = type { %"class.WTF::VectorBufferBase.1058", [8 x i8] }
%"class.WTF::VectorBufferBase.1058" = type { %class.scoped_refptr.1059*, i32, i32 }
%class.scoped_refptr.1059 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1060", [4 x i8] }>
%"class.WTF::RefCounted.1060" = type { %"class.base::RefCounted.1061" }
%"class.base::RefCounted.1061" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1070", %class.scoped_refptr.1077, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1060" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1064", %"class.absl::optional.1064", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1064" = type { %"class.absl::optional_internal::optional_data.1065" }
%"class.absl::optional_internal::optional_data.1065" = type { %"class.absl::optional_internal::optional_data_base.1066" }
%"class.absl::optional_internal::optional_data_base.1066" = type { %"class.absl::optional_internal::optional_data_dtor_base.1067" }
%"class.absl::optional_internal::optional_data_dtor_base.1067" = type { i8, %union.anon.1068 }
%union.anon.1068 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1069, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.73" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.73" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.314" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1069 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1070" = type { %"class.std::__1::__compressed_pair.1071" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1073, %class.scoped_refptr.1073 }
%class.scoped_refptr.1073 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1077 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1078", [4 x i8] }>
%"class.WTF::RefCounted.1078" = type { %"class.base::RefCounted.1079" }
%"class.base::RefCounted.1079" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1080" }
%"class.blink::PersistentBase.1080" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.1081" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.1081" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.1082" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.1083, i8, i8, i8, i8 }>
%union.anon.1083 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1084" = type { %class.scoped_refptr.1085 }
%class.scoped_refptr.1085 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1086", [4 x i8], %"class.blink::DataRef.1088", %"class.blink::DataRef.1130", %"class.WTF::Vector.1134", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1138, %class.scoped_refptr.1147, %"class.blink::Persistent.1155", %"class.blink::Persistent.1157", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1086" = type { %"class.base::RefCounted.1087" }
%"class.base::RefCounted.1087" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1088" = type { %class.scoped_refptr.1089 }
%class.scoped_refptr.1089 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1090", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1092, %class.scoped_refptr.1100, %"class.blink::Persistent.1117", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1090" = type { %"class.base::RefCounted.1091" }
%"class.base::RefCounted.1091" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1092 = type { %"class.base::RefCountedData.1093"* }
%"class.base::RefCountedData.1093" = type { %"class.base::RefCountedThreadSafe.1094", %"class.WTF::Vector.1095" }
%"class.base::RefCountedThreadSafe.1094" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1095" = type { %"class.WTF::VectorBuffer.1096" }
%"class.WTF::VectorBuffer.1096" = type { %"class.WTF::VectorBufferBase.1097" }
%"class.WTF::VectorBufferBase.1097" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1100 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1101", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1101" = type { %"class.base::RefCounted.1102" }
%"class.base::RefCounted.1102" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1103", %"class.blink::Persistent.1108" }
%"class.WTF::HashMap.1103" = type { %"class.WTF::HashTable.1104" }
%"class.WTF::HashTable.1104" = type <{ %"struct.WTF::KeyValuePair.1107"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1107" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1484 }
%class.scoped_refptr.1484 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1485", %"class.WTF::Vector.747", %"class.WTF::Vector.1487", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1485" = type { %"class.base::RefCounted.1486" }
%"class.base::RefCounted.1486" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1487" = type { %"class.WTF::VectorBuffer.1488" }
%"class.WTF::VectorBuffer.1488" = type { %"class.WTF::VectorBufferBase.1489" }
%"class.WTF::VectorBufferBase.1489" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1490 }
%union.anon.1490 = type { double }
%"class.blink::Persistent.1108" = type { %"class.blink::PersistentBase.1109" }
%"class.blink::PersistentBase.1109" = type { %"class.blink::HeapHashMap.1110"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.1110" = type { %"class.WTF::HashMap.1113" }
%"class.WTF::HashMap.1113" = type { %"class.WTF::HashTable.1114" }
%"class.WTF::HashTable.1114" = type <{ %"struct.WTF::KeyValuePair.1116"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1116" = type opaque
%"class.blink::Persistent.1117" = type { %"class.blink::PersistentBase.1118" }
%"class.blink::PersistentBase.1118" = type { %"class.blink::HeapVector.1119"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1119" = type { %"class.WTF::Vector.1122" }
%"class.WTF::Vector.1122" = type { %"class.WTF::VectorBuffer.1123" }
%"class.WTF::VectorBuffer.1123" = type { %"class.WTF::VectorBufferBase.1124" }
%"class.WTF::VectorBufferBase.1124" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1125", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.1130" = type { %class.scoped_refptr.1131 }
%class.scoped_refptr.1131 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1132", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1132" = type { %"class.base::RefCounted.1133" }
%"class.base::RefCounted.1133" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1134" = type { %"class.WTF::VectorBuffer.1135" }
%"class.WTF::VectorBuffer.1135" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.1138 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1139", %"class.WTF::Vector.1141" }
%"class.WTF::RefCounted.1139" = type { %"class.base::RefCounted.1140" }
%"class.base::RefCounted.1140" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1141" = type { %"class.WTF::VectorBuffer.1142" }
%"class.WTF::VectorBuffer.1142" = type { %"class.WTF::VectorBufferBase.1143" }
%"class.WTF::VectorBufferBase.1143" = type { %"struct.std::__1::pair.1144"*, i32, i32 }
%"struct.std::__1::pair.1144" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1147 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1148", [4 x i8], %"class.WTF::Vector.1150" }
%"class.WTF::RefCounted.1148" = type { %"class.base::RefCounted.1149" }
%"class.base::RefCounted.1149" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1150" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1152", [28 x i8] }>
%"class.WTF::VectorBufferBase.1152" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.1155" = type { %"class.blink::PersistentBase.1156" }
%"class.blink::PersistentBase.1156" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.1157" = type { %"class.blink::PersistentBase.1158" }
%"class.blink::PersistentBase.1158" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1161", %"class.blink::Member.1163" }
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1165" = type { %class.scoped_refptr.1166 }
%class.scoped_refptr.1166 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1167", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1167" = type { %"class.base::RefCounted.1168" }
%"class.base::RefCounted.1168" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1169" = type { %class.scoped_refptr.1170 }
%class.scoped_refptr.1170 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1171", [4 x i8], %"class.blink::DataRef.1173", %"class.blink::DataRef.1239", %"class.blink::TransformOperations", %class.scoped_refptr.1147, %"class.blink::Persistent.1358", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1171" = type { %"class.base::RefCounted.1172" }
%"class.base::RefCounted.1172" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1173" = type { %class.scoped_refptr.1174 }
%class.scoped_refptr.1174 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1175", [4 x i8], %"class.blink::DataRef.1177", %"class.blink::Persistent.1215", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1175" = type { %"class.base::RefCounted.1176" }
%"class.base::RefCounted.1176" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1177" = type { %class.scoped_refptr.1178 }
%class.scoped_refptr.1178 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1179", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1197, %class.scoped_refptr.1200, %class.scoped_refptr.1203, %class.scoped_refptr.1206, %class.scoped_refptr.1207, %class.scoped_refptr.1208, %"class.blink::Persistent.1215", %"class.blink::Persistent.1230", %"class.absl::optional.1234", %"class.absl::optional.1234", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1179" = type { %"class.base::RefCounted.1180" }
%"class.base::RefCounted.1180" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1181", %"class.std::__1::unique_ptr.1186" }
%"class.WTF::Vector.1181" = type { %"class.WTF::VectorBuffer.1182" }
%"class.WTF::VectorBuffer.1182" = type { %"class.WTF::VectorBufferBase.1183" }
%"class.WTF::VectorBufferBase.1183" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1186" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1189", %"class.WTF::Vector.1181", i32, i32 }
%"class.WTF::Vector.1189" = type { %"class.WTF::VectorBuffer.1190" }
%"class.WTF::VectorBuffer.1190" = type { %"class.WTF::VectorBufferBase.1191" }
%"class.WTF::VectorBufferBase.1191" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1197 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1198", [4 x i8] }>
%"class.WTF::RefCounted.1198" = type { %"class.base::RefCounted.1199" }
%"class.base::RefCounted.1199" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1200 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1201", [4 x i8] }>
%"class.WTF::RefCounted.1201" = type { %"class.base::RefCounted.1202" }
%"class.base::RefCounted.1202" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1203 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1204" }>
%"class.WTF::RefCounted.1204" = type { %"class.base::RefCounted.1205" }
%"class.base::RefCounted.1205" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1206 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1207 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1208 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1209", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1209" = type { %"class.base::RefCounted.1210" }
%"class.base::RefCounted.1210" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1211" }
%"class.blink::DataRef.1211" = type { %class.scoped_refptr.1212 }
%class.scoped_refptr.1212 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1155", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1213" }
%"class.WTF::RefCounted.1213" = type { %"class.base::RefCounted.1214" }
%"class.base::RefCounted.1214" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1230" = type { %"class.blink::PersistentBase.1231" }
%"class.blink::PersistentBase.1231" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1200, %"class.blink::Member.1125", i32, [4 x i8] }>
%"class.absl::optional.1234" = type { %"class.absl::optional_internal::optional_data.1235" }
%"class.absl::optional_internal::optional_data.1235" = type { %"class.absl::optional_internal::optional_data_base.1236" }
%"class.absl::optional_internal::optional_data_base.1236" = type { %"class.absl::optional_internal::optional_data_dtor_base.1237" }
%"class.absl::optional_internal::optional_data_dtor_base.1237" = type { i8, [3 x i8], %union.anon.1238 }
%union.anon.1238 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1215" = type { %"class.blink::PersistentBase.1216" }
%"class.blink::PersistentBase.1216" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1219" }
%"class.blink::HeapVector.1219" = type { %"class.WTF::Vector.1222" }
%"class.WTF::Vector.1222" = type { %"class.WTF::VectorBuffer.1223" }
%"class.WTF::VectorBuffer.1223" = type { %"class.WTF::VectorBufferBase.1224" }
%"class.WTF::VectorBufferBase.1224" = type { %"class.blink::Member.1225"*, i32, i32 }
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.1226" }
%"class.blink::MemberBase.1226" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1239" = type { %class.scoped_refptr.1240 }
%class.scoped_refptr.1240 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1241", %"class.blink::DataRef.1243", %"class.blink::DataRef.1247", %"class.blink::DataRef.1256", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1275", %"class.std::__1::unique_ptr.1286", %"class.std::__1::unique_ptr.1324", %"class.std::__1::unique_ptr.1335", %"class.std::__1::unique_ptr.1346", %"class.WTF::Vector.747", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1241" = type { %"class.base::RefCounted.1242" }
%"class.base::RefCounted.1242" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1243" = type { %class.scoped_refptr.1244 }
%class.scoped_refptr.1244 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1245", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1245" = type { %"class.base::RefCounted.1246" }
%"class.base::RefCounted.1246" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1247" = type { %class.scoped_refptr.1248 }
%class.scoped_refptr.1248 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1249", [4 x i8], %"class.WTF::Vector.1251", i8, [7 x i8] }>
%"class.WTF::RefCounted.1249" = type { %"class.base::RefCounted.1250" }
%"class.base::RefCounted.1250" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1251" = type { %"class.WTF::VectorBuffer.1252" }
%"class.WTF::VectorBuffer.1252" = type { %"class.WTF::VectorBufferBase.1253" }
%"class.WTF::VectorBufferBase.1253" = type { i32*, i32, i32 }
%"class.blink::DataRef.1256" = type { %class.scoped_refptr.1257 }
%class.scoped_refptr.1257 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1258", [4 x i8], %"class.WTF::HashMap.1260", %"class.WTF::HashMap.1260", %"class.WTF::HashMap.1260", %"class.WTF::HashMap.1260", %"class.WTF::HashMap.1260", %"class.WTF::HashMap.1260", %"class.WTF::HashMap.1265", %"class.WTF::HashMap.1265", %"class.WTF::HashMap.1265", %"class.WTF::HashMap.1265", %"class.WTF::HashMap.1270", %"class.WTF::Vector.1181", %"class.WTF::Vector.1181", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1258" = type { %"class.base::RefCounted.1259" }
%"class.base::RefCounted.1259" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1260" = type { %"class.WTF::HashTable.1261" }
%"class.WTF::HashTable.1261" = type <{ %"struct.WTF::KeyValuePair.1264"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1264" = type { %"class.WTF::String", %"class.WTF::Vector.1474" }
%"class.WTF::Vector.1474" = type { %"class.WTF::VectorBuffer.1475" }
%"class.WTF::VectorBuffer.1475" = type { %"class.WTF::VectorBufferBase.1476" }
%"class.WTF::VectorBufferBase.1476" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1265" = type { %"class.WTF::HashTable.1266" }
%"class.WTF::HashTable.1266" = type <{ %"struct.WTF::KeyValuePair.1269"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1269" = type { i64, %"class.WTF::Vector.747" }
%"class.WTF::HashMap.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"struct.WTF::KeyValuePair.1274"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1274" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1275" = type { %"class.std::__1::__compressed_pair.1276" }
%"class.std::__1::__compressed_pair.1276" = type { %"struct.std::__1::__compressed_pair_elem.1277" }
%"struct.std::__1::__compressed_pair_elem.1277" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1278" }
%"class.WTF::HashMap.1278" = type { %"class.WTF::HashTable.1279" }
%"class.WTF::HashTable.1279" = type <{ %"struct.WTF::KeyValuePair.1282"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1282" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1479", %"class.absl::optional.1479", %"class.absl::optional.1479" }
%"class.absl::optional.1479" = type { %"class.absl::optional_internal::optional_data.1480" }
%"class.absl::optional_internal::optional_data.1480" = type { %"class.absl::optional_internal::optional_data_base.1481" }
%"class.absl::optional_internal::optional_data_base.1481" = type { %"class.absl::optional_internal::optional_data_dtor_base.1482" }
%"class.absl::optional_internal::optional_data_dtor_base.1482" = type { i8, %union.anon.1483 }
%union.anon.1483 = type { i32 }
%"class.std::__1::unique_ptr.1286" = type { %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1134", %"class.WTF::Vector.1301", %"class.WTF::Vector.1289", %"class.WTF::Vector.1306", %"class.WTF::Vector.1311", %"class.WTF::Vector.1316" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1289", %"class.WTF::Vector.1289", %"class.WTF::Vector.1294" }
%"class.WTF::Vector.1294" = type { %"class.WTF::VectorBuffer.1295" }
%"class.WTF::VectorBuffer.1295" = type { %"class.WTF::VectorBufferBase.1296" }
%"class.WTF::VectorBufferBase.1296" = type { %class.scoped_refptr.1297*, i32, i32 }
%class.scoped_refptr.1297 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1298" }
%"class.base::RefCountedThreadSafe.1298" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1301" = type { %"class.WTF::VectorBuffer.1302" }
%"class.WTF::VectorBuffer.1302" = type { %"class.WTF::VectorBufferBase.1303" }
%"class.WTF::VectorBufferBase.1303" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1289" = type { %"class.WTF::VectorBuffer.1290" }
%"class.WTF::VectorBuffer.1290" = type { %"class.WTF::VectorBufferBase.1291" }
%"class.WTF::VectorBufferBase.1291" = type { double*, i32, i32 }
%"class.WTF::Vector.1306" = type { %"class.WTF::VectorBuffer.1307" }
%"class.WTF::VectorBuffer.1307" = type { %"class.WTF::VectorBufferBase.1308" }
%"class.WTF::VectorBufferBase.1308" = type { i32*, i32, i32 }
%"class.WTF::Vector.1311" = type { %"class.WTF::VectorBuffer.1312" }
%"class.WTF::VectorBuffer.1312" = type { %"class.WTF::VectorBufferBase.1313" }
%"class.WTF::VectorBufferBase.1313" = type { i32*, i32, i32 }
%"class.WTF::Vector.1316" = type { %"class.WTF::VectorBuffer.1317" }
%"class.WTF::VectorBuffer.1317" = type { %"class.WTF::VectorBufferBase.1318" }
%"class.WTF::VectorBufferBase.1318" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1324" = type { %"class.std::__1::__compressed_pair.1325" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1327" }
%"class.WTF::Vector.1327" = type { %"class.WTF::VectorBuffer.1328" }
%"class.WTF::VectorBuffer.1328" = type { %"class.WTF::VectorBufferBase.1329" }
%"class.WTF::VectorBufferBase.1329" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1338" }
%"class.WTF::Vector.1338" = type { %"class.WTF::VectorBuffer.1339" }
%"class.WTF::VectorBuffer.1339" = type { %"class.WTF::VectorBufferBase.1340" }
%"class.WTF::VectorBufferBase.1340" = type { %"class.blink::Persistent.1155"*, i32, i32 }
%"class.std::__1::unique_ptr.1346" = type { %"class.std::__1::__compressed_pair.1347" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.1348" }
%"struct.std::__1::__compressed_pair_elem.1348" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1155", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1352" }
%"class.WTF::Vector.1352" = type { %"class.WTF::VectorBuffer.1353" }
%"class.WTF::VectorBuffer.1353" = type { %"class.WTF::VectorBufferBase.1354" }
%"class.WTF::VectorBufferBase.1354" = type { %class.scoped_refptr.1355*, i32, i32 }
%class.scoped_refptr.1355 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1204", [4 x i8] }>
%"class.blink::Persistent.1358" = type { %"class.blink::PersistentBase.1359" }
%"class.blink::PersistentBase.1359" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1362" }
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1364" = type { %class.scoped_refptr.1365 }
%class.scoped_refptr.1365 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1366", [4 x i8], %"class.blink::DataRef.1368", %"class.blink::DataRef.1372", %"class.blink::DataRef.1389", %"class.blink::DataRef.1407", %"class.blink::DataRef.1419", %"class.blink::DataRef.1423", %class.scoped_refptr.1393, i32, [4 x i8] }>
%"class.WTF::RefCounted.1366" = type { %"class.base::RefCounted.1367" }
%"class.base::RefCounted.1367" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1368" = type { %class.scoped_refptr.1369 }
%class.scoped_refptr.1369 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1370", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1370" = type { %"class.base::RefCounted.1371" }
%"class.base::RefCounted.1371" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1372" = type { %class.scoped_refptr.1373 }
%class.scoped_refptr.1373 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1374", %class.scoped_refptr.1376, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1374" = type { %"class.base::RefCounted.1375" }
%"class.base::RefCounted.1375" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1376 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1377", %"class.std::__1::unique_ptr.1383", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1201" }>
%"class.std::__1::unique_ptr.1377" = type { %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1383" = type { %"class.std::__1::__compressed_pair.1384" }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.1385" }
%"struct.std::__1::__compressed_pair_elem.1385" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.1389" = type { %class.scoped_refptr.1390 }
%class.scoped_refptr.1390 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1391", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1391" = type { %"class.base::RefCounted.1392" }
%"class.base::RefCounted.1392" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1393, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1407" = type { %class.scoped_refptr.1408 }
%class.scoped_refptr.1408 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1409", [4 x i8], %class.scoped_refptr.1411, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1409" = type { %"class.base::RefCounted.1410" }
%"class.base::RefCounted.1410" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1411 = type { %"class.base::RefCountedData.1412"* }
%"class.base::RefCountedData.1412" = type { %"class.base::RefCountedThreadSafe.1413", %"class.WTF::Vector.1414" }
%"class.base::RefCountedThreadSafe.1413" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1414" = type { %"class.WTF::VectorBuffer.1415" }
%"class.WTF::VectorBuffer.1415" = type { %"class.WTF::VectorBufferBase.1416" }
%"class.WTF::VectorBufferBase.1416" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1419" = type { %class.scoped_refptr.1420 }
%class.scoped_refptr.1420 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1421", %class.scoped_refptr.1393, %class.scoped_refptr.1393, %class.scoped_refptr.1393 }
%"class.WTF::RefCounted.1421" = type { %"class.base::RefCounted.1422" }
%"class.base::RefCounted.1422" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1423" = type { %class.scoped_refptr.1424 }
%class.scoped_refptr.1424 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1425", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1425" = type { %"class.base::RefCounted.1426" }
%"class.base::RefCounted.1426" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1393 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1394", %"class.blink::Persistent.1396", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1394" = type { %"class.base::RefCounted.1395" }
%"class.base::RefCounted.1395" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1396" = type { %"class.blink::PersistentBase.1397" }
%"class.blink::PersistentBase.1397" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.21", %"class.blink::HeapHashMap.1400" }
%"class.blink::HeapHashMap.1400" = type { %"class.WTF::HashMap.1403" }
%"class.WTF::HashMap.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"struct.WTF::KeyValuePair.1406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1406" = type opaque
%"class.blink::DataRef.1427" = type { %class.scoped_refptr.1428 }
%class.scoped_refptr.1428 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1429", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1429" = type { %"class.base::RefCounted.1430" }
%"class.base::RefCounted.1430" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1431" = type { %class.scoped_refptr.1432 }
%class.scoped_refptr.1432 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1433", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1433" = type { %"class.base::RefCounted.1434" }
%"class.base::RefCounted.1434" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1435" = type { %class.scoped_refptr.1436 }
%class.scoped_refptr.1436 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1437", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1437" = type { %"class.base::RefCounted.1438" }
%"class.base::RefCounted.1438" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1439" = type { %class.scoped_refptr.1440 }
%class.scoped_refptr.1440 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1441", %class.scoped_refptr.1443 }
%"class.WTF::RefCounted.1441" = type { %"class.base::RefCounted.1442" }
%"class.base::RefCounted.1442" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1443 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1459", %"class.blink::StyleVariables", %class.scoped_refptr.1443 }
%"class.WTF::RefCounted.1459" = type { %"class.base::RefCounted.1460" }
%"class.base::RefCounted.1460" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1444" = type { %"class.base::RefCounted.1445" }
%"class.base::RefCounted.1445" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1446" = type { %"class.std::__1::__compressed_pair.1447" }
%"class.std::__1::__compressed_pair.1447" = type { %"struct.std::__1::__compressed_pair_elem.1448" }
%"struct.std::__1::__compressed_pair_elem.1448" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1449" }
%"class.std::__1::unique_ptr.1449" = type { %"class.std::__1::__compressed_pair.1450" }
%"class.std::__1::__compressed_pair.1450" = type { %"struct.std::__1::__compressed_pair_elem.1451" }
%"struct.std::__1::__compressed_pair_elem.1451" = type { %"class.WTF::Vector.1452"* }
%"class.WTF::Vector.1452" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.1463", %"class.WTF::String"* }
%"class.blink::HeapVector.1463" = type { %"class.WTF::Vector.1466" }
%"class.WTF::Vector.1466" = type { %"class.WTF::VectorBuffer.1467" }
%"class.WTF::VectorBuffer.1467" = type { %"class.WTF::VectorBufferBase.1468" }
%"class.WTF::VectorBufferBase.1468" = type { %"class.blink::Member"*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::ViewSourceEventListener" = type { %"class.blink::NativeEventListener", %"class.blink::Member.713", %"class.blink::Member.715" }
%"class.blink::NativeEventListener" = type { %"class.blink::EventListener" }
%"class.blink::Member.713" = type { %"class.blink::MemberBase.714" }
%"class.blink::MemberBase.714" = type { %"class.blink::HTMLTableElement"* }
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::HTMLInputElement"* }

$_ZN5blink22HTMLViewSourceDocumentD2Ev = comdat any

$_ZN5blink22HTMLViewSourceDocumentD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink12HTMLDocument18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink8Document23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZThn80_N5blink22HTMLViewSourceDocumentD1Ev = comdat any

$_ZThn80_N5blink22HTMLViewSourceDocumentD0Ev = comdat any

$_ZThn184_N5blink22HTMLViewSourceDocumentD1Ev = comdat any

$_ZThn184_N5blink22HTMLViewSourceDocumentD0Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14DocumentParserEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14DocumentParserEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14DocumentParserEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLHtmlElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLHeadElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLBodyElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLTableElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_23HTMLTableSectionElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLInputElementEE4CallIJRNS_22HTMLViewSourceDocumentENS_18CreateElementFlagsEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv = comdat any

$_ZNK5blink13EventListener18NameInHeapSnapshotEv = comdat any

$_ZN5blink13EventListenerD2Ev = comdat any

$_ZN5blink23ViewSourceEventListenerD0Ev = comdat any

$_ZN5blink23ViewSourceEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE = comdat any

$_ZNK5blink13EventListener14IsEventHandlerEv = comdat any

$_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv = comdat any

$_ZNK5blink13EventListener10ScriptBodyEv = comdat any

$_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE = comdat any

$_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE = comdat any

$_ZNK5blink23ViewSourceEventListener5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink13EventListener22IsJSBasedEventListenerEv = comdat any

$_ZNK5blink19NativeEventListener21IsNativeEventListenerEv = comdat any

$_ZNK5blink19NativeEventListener20IsImageEventListenerEv = comdat any

$_ZN5blink10TraceTraitINS_16HTMLTableElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLLabelElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLFormElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_19HTMLTableRowElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HTMLTableCellElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLBaseElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLAnchorElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23HTMLTableSectionElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HTMLTableCellElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink23ViewSourceEventListenerE = comdat any

@_ZTVN5blink22HTMLViewSourceDocumentE = hidden unnamed_addr constant { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] } { [82 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLViewSourceDocument"*)* @_ZN5blink22HTMLViewSourceDocumentD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLViewSourceDocument"*)* @_ZN5blink22HTMLViewSourceDocumentD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::HTMLViewSourceDocument"*, %"class.blink::Visitor"*)* @_ZNK5blink22HTMLViewSourceDocument5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLDocument"*)* @_ZNK5blink12HTMLDocument18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Document"*)* @_ZNK5blink8Document19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Document"*)* @_ZN5blink8Document23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Document"*)* @_ZNK5blink8Document8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Document"*)* @_ZNK5blink8Document11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Document"*, %"class.blink::Document"*, i32)* @_ZNK5blink8Document5CloneERS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Document"*)* @_ZNK5blink8Document23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Document"*, i32)* @_ZNK5blink8Document16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink13ContainerNode16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::ContainerNode"*)* @_ZN5blink4Node12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*)* @_ZN5blink13ContainerNode11RemovedFromERS0_ to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Document"*)* @_ZN5blink4Node20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink4Node26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::Document"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink8Document15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::Document"*)* @_ZNK5blink8Document20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (void (%"class.blink::Document"*)* @_ZN5blink8Document8ShutdownEv to i8*), i8* bitcast (%"class.blink::DocumentParser"* (%"class.blink::HTMLViewSourceDocument"*)* @_ZN5blink22HTMLViewSourceDocument12CreateParserEv to i8*), i8* bitcast (void (%"class.blink::Document"*, i32)* @_ZN5blink8Document8CountUseENS_5mojom10WebFeatureE to i8*), i8* bitcast (%"class.blink::Document"* (%"class.blink::HTMLDocument"*)* @_ZNK5blink12HTMLDocument28CloneDocumentWithoutChildrenEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLViewSourceDocument"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink22HTMLViewSourceDocument5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLViewSourceDocument"*)* @_ZThn80_N5blink22HTMLViewSourceDocumentD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLViewSourceDocument"*)* @_ZThn80_N5blink22HTMLViewSourceDocumentD0Ev to i8*)], [6 x i8*] [i8* inttoptr (i64 -184 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLViewSourceDocument"*, %"class.blink::Visitor"*)* @_ZThn184_NK5blink22HTMLViewSourceDocument5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLViewSourceDocument"*)* @_ZThn184_N5blink22HTMLViewSourceDocumentD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLViewSourceDocument"*)* @_ZThn184_N5blink22HTMLViewSourceDocumentD0Ev to i8*), i8* bitcast (void (%"class.blink::Document"*, i32)* @_ZThn184_N5blink8Document8CountUseENS_5mojom10WebFeatureE to i8*)], [3 x i8*] [i8* inttoptr (i64 -192 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLViewSourceDocument"*, %"class.blink::Visitor"*)* @_ZThn192_NK5blink22HTMLViewSourceDocument5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN5blink10html_names10kClassAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [21 x i8] c"line-gutter-backdrop\00", align 1
@_ZN5blink10html_names9kTbodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"checkbox\00", align 1
@_ZN5blink16event_type_names7kChangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names14kAriaLabelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [18 x i8] c"line-wrap-control\00", align 1
@_ZN5blink10html_names17kAutocompleteAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.3 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"html-doctype\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"html-end-of-file\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"html-tag\00", align 1
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.7 = private unnamed_addr constant [20 x i8] c"html-attribute-name\00", align 1
@_ZN5blink10html_names8kBaseTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names11kSrcsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names8kSrcAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.8 = private unnamed_addr constant [21 x i8] c"html-attribute-value\00", align 1
@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.9 = private unnamed_addr constant [13 x i8] c"html-comment\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink10html_names6kTdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.11 = private unnamed_addr constant [12 x i8] c"line-number\00", align 1
@_ZN5blink10html_names10kValueAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.12 = private unnamed_addr constant [13 x i8] c"line-content\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"html-attribute-value html-external-link\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"html-attribute-value html-resource-link\00", align 1
@_ZN5blink10html_names11kTargetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.15 = private unnamed_addr constant [7 x i8] c"_blank\00", align 1
@_ZN5blink10html_names8kRelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.16 = private unnamed_addr constant [20 x i8] c"noreferrer noopener\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"about:blank\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c",\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink12HTMLDocument18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14DocumentParserEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DocumentParser]\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14DocumentParserEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14DocumentParserEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13EventListenerEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EventListener]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink23ViewSourceEventListenerE = linkonce_odr hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventListener"*)* @_ZN5blink13EventListenerD2Ev to i8*), i8* bitcast (void (%"class.blink::ViewSourceEventListener"*)* @_ZN5blink23ViewSourceEventListenerD0Ev to i8*), i8* bitcast (void (%"class.blink::ViewSourceEventListener"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*)* @_ZN5blink23ViewSourceEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener14IsEventHandlerEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv to i8*), i8* bitcast (%"class.WTF::String"* (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener10ScriptBodyEv to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*, %"class.blink::ExecutionContext"*)* @_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*, %"class.blink::EventListener"*)* @_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE to i8*), i8* bitcast (void (%"class.blink::ViewSourceEventListener"*, %"class.blink::Visitor"*)* @_ZNK5blink23ViewSourceEventListener5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::EventListener"*)* @_ZNK5blink13EventListener22IsJSBasedEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener21IsNativeEventListenerEv to i8*), i8* bitcast (i1 (%"class.blink::NativeEventListener"*)* @_ZNK5blink19NativeEventListener20IsImageEventListenerEv to i8*)] }, comdat, align 8
@.str.22 = private unnamed_addr constant [14 x i8] c"EventListener\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"line-wrap\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.24 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.25 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink22HTMLViewSourceDocumentC1ERKNS_12DocumentInitE = hidden unnamed_addr alias void (%"class.blink::HTMLViewSourceDocument"*, %"class.blink::DocumentInit"*), void (%"class.blink::HTMLViewSourceDocument"*, %"class.blink::DocumentInit"*)* @_ZN5blink22HTMLViewSourceDocumentC2ERKNS_12DocumentInitE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLViewSourceDocumentC2ERKNS_12DocumentInitE(%"class.blink::HTMLViewSourceDocument"*, %"class.blink::DocumentInit"* dereferenceable(288)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0
  tail call void @_ZN5blink12HTMLDocumentC2ERKNS_12DocumentInitEh(%"class.blink::HTMLDocument"* %3, %"class.blink::DocumentInit"* dereferenceable(288) %1, i8 zeroext 0) #7
  %4 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i32 (...)*** %6 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DocumentInit", %"class.blink::DocumentInit"* %1, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #7
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #7
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 108
  %33 = bitcast %"class.blink::Element"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false)
  store i8 1, i8* %32, align 1
  tail call void @_ZN5blink8Document20SetCompatibilityModeENS0_17CompatibilityModeE(%"class.blink::Document"* %31, i32 2) #7
  %34 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 34
  store i8 1, i8* %34, align 4
  ret void
}

declare void @_ZN5blink12HTMLDocumentC2ERKNS_12DocumentInitEh(%"class.blink::HTMLDocument"*, %"class.blink::DocumentInit"* dereferenceable(288), i8 zeroext) unnamed_addr #1

declare void @_ZN5blink8Document20SetCompatibilityModeENS0_17CompatibilityModeE(%"class.blink::Document"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DocumentParser"* @_ZN5blink22HTMLViewSourceDocument12CreateParserEv(%"class.blink::HTMLViewSourceDocument"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 1
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14DocumentParserEEEPhm(i64 2872) #7
  %4 = bitcast i8* %3 to %"class.blink::HTMLViewSourceParser"*
  tail call void @_ZN5blink20HTMLViewSourceParserC1ERNS_22HTMLViewSourceDocumentERKN3WTF6StringE(%"class.blink::HTMLViewSourceParser"* %4, %"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0, %"class.WTF::String"* dereferenceable(8) %2) #7
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = bitcast i8* %3 to %"class.blink::DocumentParser"*
  ret %"class.blink::DocumentParser"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLViewSourceDocument21CreateContainingTableEv(%"class.blink::HTMLViewSourceDocument"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.blink::CreateElementFlags", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = tail call %"class.blink::HTMLHtmlElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLHtmlElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %10 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HTMLHtmlElement", %"class.blink::HTMLHtmlElement"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %10, %"class.blink::Node"* %11) #7
  %12 = tail call %"class.blink::HTMLHeadElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLHeadElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %13 = getelementptr inbounds %"class.blink::HTMLHtmlElement", %"class.blink::HTMLHtmlElement"* %9, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::HTMLHeadElement", %"class.blink::HTMLHeadElement"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %13, %"class.blink::Node"* %14) #7
  %15 = tail call %"class.blink::HTMLBodyElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLBodyElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %16 = getelementptr inbounds %"class.blink::HTMLBodyElement", %"class.blink::HTMLBodyElement"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %13, %"class.blink::Node"* %16) #7
  %17 = tail call %"class.blink::HTMLDivElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %18 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %20 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 20) #7
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %18, %"class.blink::QualifiedName"* dereferenceable(8) %19, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #7
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #7
  br label %37

37:                                               ; preds = %1, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  %38 = getelementptr inbounds %"class.blink::HTMLBodyElement", %"class.blink::HTMLBodyElement"* %15, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %38, %"class.blink::Node"* %39) #7
  %40 = call %"class.blink::HTMLTableElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLTableElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %41 = ptrtoint %"class.blink::HTMLTableElement"* %40 to i64
  %42 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE, align 8
  %43 = call %"class.blink::HTMLTableSectionElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_23HTMLTableSectionElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8) %42, %"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %44 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3
  %45 = ptrtoint %"class.blink::HTMLTableSectionElement"* %43 to i64
  %46 = bitcast %"class.blink::Member.540"* %44 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %37
  %50 = bitcast %"class.blink::HTMLTableSectionElement"* %43 to i8*
  %51 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #7
  %52 = getelementptr inbounds %"class.blink::Member.540", %"class.blink::Member.540"* %44, i64 0, i32 0, i32 0
  %53 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %52, align 8
  br label %54

54:                                               ; preds = %37, %49
  %55 = phi %"class.blink::HTMLTableSectionElement"* [ %43, %37 ], [ %53, %49 ]
  %56 = getelementptr inbounds %"class.blink::HTMLTableElement", %"class.blink::HTMLTableElement"* %40, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %56, %"class.blink::Node"* %57) #7
  %58 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %59 = load i64, i64* %46, align 8
  %60 = bitcast %"class.blink::Member.21"* %58 to i64*
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %54
  %64 = inttoptr i64 %59 to i8*
  %65 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %64) #7
  br label %66

66:                                               ; preds = %54, %63
  %67 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 5
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #7
  store i8 0, i8* %68, align 8
  %69 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %3, i64 0, i32 3
  %70 = load i8, i8* %69, align 8
  %71 = and i8 %70, -8
  %72 = or i8 %71, 2
  store i8 %72, i8* %69, align 8
  %73 = call %"class.blink::HTMLInputElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLInputElementEE4CallIJRNS_22HTMLViewSourceDocumentENS_18CreateElementFlagsEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0, %"class.blink::CreateElementFlags"* nonnull dereferenceable(24) %3) #7
  %74 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %73, i64 0, i32 1, i32 0
  call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %74) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #7
  %75 = ptrtoint %"class.blink::HTMLInputElement"* %73 to i64
  %76 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %78 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i64 8) #7
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %76, %"class.blink::QualifiedName"* dereferenceable(8) %77, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #7
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %66
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #7
  br label %95

95:                                               ; preds = %66, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #7
  %96 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kChangeE, align 8
  %98 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm(i64 48) #7
  %99 = getelementptr inbounds i8, i8* %98, i64 8
  store i8 0, i8* %99, align 8
  %100 = getelementptr inbounds i8, i8* %98, i64 16
  store i8 0, i8* %100, align 8
  %101 = bitcast i8* %98 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink23ViewSourceEventListenerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %102 = getelementptr inbounds i8, i8* %98, i64 32
  %103 = bitcast i8* %102 to i64*
  store i64 %41, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %98, i64 40
  %105 = bitcast i8* %104 to i64*
  store i64 %75, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %98, i64 -4
  %107 = bitcast i8* %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = or i16 %108, 1
  store atomic i16 %109, i16* %107 release, align 2
  %110 = bitcast i8* %98 to %"class.blink::EventListener"*
  %111 = call zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"* %96, %"class.WTF::AtomicString"* dereferenceable(8) %97, %"class.blink::EventListener"* %110, i1 zeroext false) #7
  %112 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE, align 8
  %113 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #7
  %114 = call dereferenceable(152) %"class.blink::Locale"* @_ZN5blink6Locale13DefaultLocaleEv() #7
  %115 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %114, i32 25019) #7
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %140, label %117

117:                                              ; preds = %95
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 acquire, align 4
  %120 = and i32 %119, 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %117
  %123 = load atomic i32, i32* %118 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %140

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #7
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %126
  call void @llvm.trap() #7
  unreachable

136:                                              ; preds = %126
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %127, align 4
  br label %140

138:                                              ; preds = %117
  %139 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %115) #7
  br label %140

140:                                              ; preds = %95, %122, %136, %138
  %141 = phi %"class.WTF::StringImpl"* [ %139, %138 ], [ %115, %122 ], [ %115, %136 ], [ null, %95 ]
  %142 = ptrtoint %"class.WTF::StringImpl"* %141 to i64
  %143 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %142, i64* %143, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %76, %"class.blink::QualifiedName"* dereferenceable(8) %112, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #7
  %144 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #7
  br label %160

160:                                              ; preds = %140, %156, %159
  br i1 %116, label %174, label %161

161:                                              ; preds = %160
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #7
  br label %174

174:                                              ; preds = %160, %170, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #7
  %175 = call %"class.blink::HTMLLabelElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLLabelElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %176 = getelementptr inbounds %"class.blink::HTMLLabelElement", %"class.blink::HTMLLabelElement"* %175, i64 0, i32 0, i32 0, i32 0
  %177 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  %178 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #7
  %179 = call dereferenceable(152) %"class.blink::Locale"* @_ZN5blink6Locale13DefaultLocaleEv() #7
  %180 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %179, i32 25019) #7
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %205, label %182

182:                                              ; preds = %174
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 acquire, align 4
  %185 = and i32 %184, 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %203, label %187

187:                                              ; preds = %182
  %188 = load atomic i32, i32* %183 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %205

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i33
  %195 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %194, i33 1) #7
  %196 = extractvalue { i33, i1 } %195, 1
  %197 = extractvalue { i33, i1 } %195, 0
  %198 = icmp slt i33 %197, 0
  %199 = or i1 %196, %198
  br i1 %199, label %200, label %201, !prof !2

200:                                              ; preds = %191
  call void @llvm.trap() #7
  unreachable

201:                                              ; preds = %191
  %202 = trunc i33 %197 to i32
  store i32 %202, i32* %192, align 4
  br label %205

203:                                              ; preds = %182
  %204 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %180) #7
  br label %205

205:                                              ; preds = %174, %187, %201, %203
  %206 = phi %"class.WTF::StringImpl"* [ %204, %203 ], [ %180, %187 ], [ %180, %201 ], [ null, %174 ]
  %207 = ptrtoint %"class.WTF::StringImpl"* %206 to i64
  %208 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  store i64 %207, i64* %208, align 8
  %209 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0
  %210 = call %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %177, %"class.WTF::String"* nonnull dereferenceable(8) %209) #7
  %211 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %210, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %176, %"class.blink::Node"* %211) #7
  %212 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %205
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #7
  br label %228

228:                                              ; preds = %205, %224, %227
  br i1 %181, label %242, label %229

229:                                              ; preds = %228
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #7
  br label %242

242:                                              ; preds = %228, %238, %241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #7
  %243 = getelementptr inbounds %"class.blink::HTMLLabelElement", %"class.blink::HTMLLabelElement"* %175, i64 0, i32 0, i32 0
  %244 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i64 17) #7
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %243, %"class.blink::QualifiedName"* dereferenceable(8) %19, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #7
  %245 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %261, label %248

248:                                              ; preds = %242
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #7
  br label %261

261:                                              ; preds = %242, %257, %260
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244) #7
  %262 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %176, %"class.blink::Node"* %262) #7
  %263 = call %"class.blink::HTMLFormElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLFormElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %264 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %263, i64 0, i32 0, i32 0
  %265 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAutocompleteAttrE, align 8
  %266 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %266) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3) #7
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %264, %"class.blink::QualifiedName"* dereferenceable(8) %265, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8) #7
  %267 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %261
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #7
  br label %283

283:                                              ; preds = %261, %279, %282
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %266) #7
  %284 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %263, i64 0, i32 0, i32 0, i32 0
  %285 = getelementptr inbounds %"class.blink::HTMLLabelElement", %"class.blink::HTMLLabelElement"* %175, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %284, %"class.blink::Node"* %285) #7
  %286 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %263, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %38, %"class.blink::Node"* %286) #7
  %287 = getelementptr inbounds %"class.blink::HTMLTableElement", %"class.blink::HTMLTableElement"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %38, %"class.blink::Node"* %287) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN5blink11EventTarget16addEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerEb(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, i1 zeroext) local_unnamed_addr #1

declare dereferenceable(152) %"class.blink::Locale"* @_ZN5blink6Locale13DefaultLocaleEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #1

declare %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLViewSourceDocument9AddSourceERKN3WTF6StringERNS_9HTMLTokenE(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HTMLToken"* nocapture readonly dereferenceable(2512)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %7 = icmp eq %"class.blink::Element"* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZN5blink22HTMLViewSourceDocument21CreateContainingTableEv(%"class.blink::HTMLViewSourceDocument"* %0)
  br label %9

9:                                                ; preds = %3, %8
  %10 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %35 [
    i32 5, label %16
    i32 1, label %12
    i32 6, label %13
    i32 2, label %14
    i32 3, label %14
    i32 4, label %15
  ]

12:                                               ; preds = %9
  tail call void @_ZN5blink22HTMLViewSourceDocument19ProcessDoctypeTokenERKN3WTF6StringERNS_9HTMLTokenE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::HTMLToken"* dereferenceable(2512) undef)
  br label %35

13:                                               ; preds = %9
  tail call void @_ZN5blink22HTMLViewSourceDocument21ProcessEndOfFileTokenERKN3WTF6StringERNS_9HTMLTokenE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::HTMLToken"* dereferenceable(2512) undef)
  br label %35

14:                                               ; preds = %9, %9
  tail call void @_ZN5blink22HTMLViewSourceDocument15ProcessTagTokenERKN3WTF6StringERNS_9HTMLTokenE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::HTMLToken"* dereferenceable(2512) %2)
  br label %35

15:                                               ; preds = %9
  tail call void @_ZN5blink22HTMLViewSourceDocument19ProcessCommentTokenERKN3WTF6StringERNS_9HTMLTokenE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::HTMLToken"* dereferenceable(2512) undef)
  br label %35

16:                                               ; preds = %9
  %17 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i64 0) #7
  call void @_ZN5blink22HTMLViewSourceDocument7AddTextERKN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #7
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #7
  br label %34

34:                                               ; preds = %16, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %35

35:                                               ; preds = %9, %34, %15, %14, %13, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLViewSourceDocument19ProcessDoctypeTokenERKN3WTF6StringERNS_9HTMLTokenE(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HTMLToken"* nocapture readnone dereferenceable(2512)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12) #7
  %7 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = icmp eq %"class.blink::Element"* %8, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  call void @_ZN5blink22HTMLViewSourceDocument7AddLineERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #7
  %14 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  br label %22

15:                                               ; preds = %3
  %16 = call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %17 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %17, %"class.blink::QualifiedName"* dereferenceable(8) %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #7
  %19 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %20 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %20, %"class.blink::Node"* %21) #7
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::Element"* [ %14, %13 ], [ %17, %15 ]
  %24 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %25 = ptrtoint %"class.blink::Element"* %23 to i64
  %26 = bitcast %"class.blink::Member.21"* %24 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.blink::Element"* %23 to i8*
  %31 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #7
  br label %32

32:                                               ; preds = %22, %29
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #7
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %50 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12) #7
  call void @_ZN5blink22HTMLViewSourceDocument7AddTextERKN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5)
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #7
  br label %67

67:                                               ; preds = %49, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #7
  %68 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 4
  %69 = bitcast %"class.blink::Member.542"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  store atomic i64 %70, i64* %26 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = inttoptr i64 %70 to i8*
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #7
  br label %76

76:                                               ; preds = %67, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLViewSourceDocument21ProcessEndOfFileTokenERKN3WTF6StringERNS_9HTMLTokenE(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HTMLToken"* nocapture readnone dereferenceable(2512)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i64 16) #7
  %7 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = icmp eq %"class.blink::Element"* %8, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  call void @_ZN5blink22HTMLViewSourceDocument7AddLineERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #7
  %14 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  br label %22

15:                                               ; preds = %3
  %16 = call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %17 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %17, %"class.blink::QualifiedName"* dereferenceable(8) %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #7
  %19 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %20 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %20, %"class.blink::Node"* %21) #7
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::Element"* [ %14, %13 ], [ %17, %15 ]
  %24 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %25 = ptrtoint %"class.blink::Element"* %23 to i64
  %26 = bitcast %"class.blink::Member.21"* %24 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.blink::Element"* %23 to i8*
  %31 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #7
  br label %32

32:                                               ; preds = %22, %29
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #7
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %50 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i64 16) #7
  call void @_ZN5blink22HTMLViewSourceDocument7AddTextERKN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5)
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #7
  br label %67

67:                                               ; preds = %49, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #7
  %68 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 4
  %69 = bitcast %"class.blink::Member.542"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  store atomic i64 %70, i64* %26 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = inttoptr i64 %70 to i8*
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #7
  br label %76

76:                                               ; preds = %67, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLViewSourceDocument15ProcessTagTokenERKN3WTF6StringERNS_9HTMLTokenE(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HTMLToken"* nocapture readonly dereferenceable(2512)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #7
  %11 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Element"*, %"class.blink::Element"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = icmp eq %"class.blink::Element"* %12, %15
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  call void @_ZN5blink22HTMLViewSourceDocument7AddLineERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6) #7
  %18 = load %"class.blink::Element"*, %"class.blink::Element"** %11, align 8
  br label %26

19:                                               ; preds = %3
  %20 = call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %21 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %21, %"class.blink::QualifiedName"* dereferenceable(8) %22, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6) #7
  %23 = load %"class.blink::Element"*, %"class.blink::Element"** %11, align 8
  %24 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %23, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %24, %"class.blink::Node"* %25) #7
  br label %26

26:                                               ; preds = %17, %19
  %27 = phi %"class.blink::Element"* [ %18, %17 ], [ %21, %19 ]
  %28 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %29 = ptrtoint %"class.blink::Element"* %27 to i64
  %30 = bitcast %"class.blink::Member.21"* %28 to i64*
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %26
  %34 = bitcast %"class.blink::Element"* %27 to i8*
  %35 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #7
  br label %36

36:                                               ; preds = %26, %33
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #7
  br label %53

53:                                               ; preds = %36, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  %54 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2, i64 0, i32 3, i32 0
  %56 = load i16*, i16** %55, align 8
  %57 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2, i64 0, i32 3, i32 1
  %58 = bitcast i16** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = ptrtoint i16* %56 to i64
  %61 = sub i64 %59, %60
  %62 = lshr exact i64 %61, 1
  %63 = trunc i64 %62 to i32
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %5, i16* %56, i32 %63) #7
  %64 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  %66 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2, i64 0, i32 6, i32 0, i32 0, i32 0
  %67 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %66, align 8
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2, i64 0, i32 6, i32 0, i32 0, i32 2
  %70 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %75 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %2, i64 0, i32 1, i32 0
  %76 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %77 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %78 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE to %"class.blink::QualifiedName"**), align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kSrcsetAttrE, align 8
  %85 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kSrcAttrE, align 8
  %87 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %86, i64 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  %89 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE to %"class.blink::QualifiedName"**), align 8
  %90 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %89, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  br label %92

92:                                               ; preds = %293, %53
  %93 = phi %"class.blink::HTMLToken::Attribute"* [ %67, %53 ], [ %275, %293 ]
  %94 = phi i32 [ 0, %53 ], [ %274, %293 ]
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  br label %100

100:                                              ; preds = %92, %97
  %101 = phi i32 [ %99, %97 ], [ 0, %92 ]
  %102 = icmp ult i32 %94, %101
  br i1 %102, label %103, label %307

103:                                              ; preds = %100
  %104 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %66, align 8
  %105 = load i32, i32* %69, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %104, i64 %106
  %108 = icmp eq %"class.blink::HTMLToken::Attribute"* %93, %107
  br i1 %108, label %109, label %118

109:                                              ; preds = %103
  br i1 %96, label %113, label %110

110:                                              ; preds = %109
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  br label %113

113:                                              ; preds = %109, %110
  %114 = phi i32 [ %112, %110 ], [ 0, %109 ]
  %115 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %116 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %117 = call i32 @_ZN5blink22HTMLViewSourceDocument8AddRangeERKN3WTF6StringEiiRKNS1_12AtomicStringEbbS7_(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %94, i32 %114, %"class.WTF::AtomicString"* dereferenceable(8) %115, i1 zeroext false, i1 zeroext false, %"class.WTF::AtomicString"* dereferenceable(8) %116)
  br label %307

118:                                              ; preds = %103
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #7
  %119 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %93, i64 0, i32 0, i32 0
  %120 = load i16*, i16** %119, align 8
  %121 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %93, i64 0, i32 0, i32 1
  %122 = bitcast i16** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = ptrtoint i16* %120 to i64
  %125 = sub i64 %123, %124
  %126 = lshr exact i64 %125, 1
  %127 = trunc i64 %126 to i32
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %4, i16* %120, i32 %127) #7
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #7
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %73, align 8
  %129 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %93, i64 0, i32 1, i32 0
  %130 = load i16*, i16** %129, align 8
  %131 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %93, i64 0, i32 1, i32 1
  %132 = bitcast i16** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = ptrtoint i16* %130 to i64
  %135 = sub i64 %133, %134
  %136 = lshr exact i64 %135, 1
  %137 = trunc i64 %136 to i32
  %138 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl20Create8BitIfPossibleEPKDsj(i16* %130, i32 %137) #7
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %163, label %140

140:                                              ; preds = %118
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 acquire, align 4
  %143 = and i32 %142, 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %140
  %146 = load atomic i32, i32* %141 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %164

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i33
  %153 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %152, i33 1) #7
  %154 = extractvalue { i33, i1 } %153, 1
  %155 = extractvalue { i33, i1 } %153, 0
  %156 = icmp slt i33 %155, 0
  %157 = or i1 %154, %156
  br i1 %157, label %158, label %159, !prof !2

158:                                              ; preds = %149
  call void @llvm.trap() #7
  unreachable

159:                                              ; preds = %149
  %160 = trunc i33 %155 to i32
  store i32 %160, i32* %150, align 4
  br label %164

161:                                              ; preds = %140
  %162 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %138) #7
  br label %164

163:                                              ; preds = %118
  store i64 0, i64* %74, align 8
  br label %178

164:                                              ; preds = %145, %159, %161
  %165 = phi %"class.WTF::StringImpl"* [ %138, %159 ], [ %138, %145 ], [ %162, %161 ]
  %166 = ptrtoint %"class.WTF::StringImpl"* %165 to i64
  store i64 %166, i64* %74, align 8
  %167 = load atomic i32, i32* %141 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %164
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %164
  %175 = phi i32 [ %173, %172 ], [ %171, %164 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #7
  br label %178

178:                                              ; preds = %163, %174, %177
  %179 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %93, i64 0, i32 2, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = load i32, i32* %75, align 4
  %182 = sub nsw i32 %180, %181
  %183 = call i32 @_ZN5blink22HTMLViewSourceDocument8AddRangeERKN3WTF6StringEiiRKNS1_12AtomicStringEbbS7_(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %94, i32 %182, %"class.WTF::AtomicString"* dereferenceable(8) %76, i1 zeroext false, i1 zeroext false, %"class.WTF::AtomicString"* dereferenceable(8) %77)
  %184 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %93, i64 0, i32 2, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = load i32, i32* %75, align 4
  %187 = sub nsw i32 %185, %186
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i64 19) #7
  %188 = call i32 @_ZN5blink22HTMLViewSourceDocument8AddRangeERKN3WTF6StringEiiRKNS1_12AtomicStringEbbS7_(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %183, i32 %187, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8, i1 zeroext false, i1 zeroext false, %"class.WTF::AtomicString"* dereferenceable(8) %77)
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %178
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #7
  br label %204

204:                                              ; preds = %178, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #7
  %205 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %81, align 8
  %206 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %205, i64 0, i32 3, i32 0, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %65, %207
  br i1 %208, label %209, label %220

209:                                              ; preds = %204
  %210 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %211 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %210, i64 0, i32 3, i32 0, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %128, %212
  br i1 %213, label %214, label %220

214:                                              ; preds = %209
  %215 = call %"class.blink::HTMLBaseElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLBaseElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %216 = getelementptr inbounds %"class.blink::HTMLBaseElement", %"class.blink::HTMLBaseElement"* %215, i64 0, i32 0, i32 0
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %216, %"class.blink::QualifiedName"* dereferenceable(8) %82, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #7
  %217 = load %"class.blink::Element"*, %"class.blink::Element"** %11, align 8
  %218 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %217, i64 0, i32 0
  %219 = getelementptr inbounds %"class.blink::HTMLBaseElement", %"class.blink::HTMLBaseElement"* %215, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %218, %"class.blink::Node"* %219) #7
  br label %220

220:                                              ; preds = %214, %209, %204
  %221 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %93, i64 0, i32 3, i32 0
  %222 = load i32, i32* %221, align 4
  %223 = load i32, i32* %75, align 4
  %224 = sub nsw i32 %222, %223
  %225 = call i32 @_ZN5blink22HTMLViewSourceDocument8AddRangeERKN3WTF6StringEiiRKNS1_12AtomicStringEbbS7_(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %188, i32 %224, %"class.WTF::AtomicString"* dereferenceable(8) %76, i1 zeroext false, i1 zeroext false, %"class.WTF::AtomicString"* dereferenceable(8) %77)
  %226 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %85, align 8
  %227 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %226, i64 0, i32 3, i32 0, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %128, %228
  br i1 %229, label %230, label %236

230:                                              ; preds = %220
  %231 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %93, i64 0, i32 3, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = load i32, i32* %75, align 4
  %234 = sub nsw i32 %232, %233
  %235 = call i32 @_ZN5blink22HTMLViewSourceDocument9AddSrcsetERKN3WTF6StringEii(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %225, i32 %234)
  br label %273

236:                                              ; preds = %220
  %237 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %238 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %237, i64 0, i32 3, i32 0, i32 0, i32 0
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %128, %239
  br i1 %240, label %246, label %241

241:                                              ; preds = %236
  %242 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %243 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %242, i64 0, i32 3, i32 0, i32 0, i32 0
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %243, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %128, %244
  br label %246

246:                                              ; preds = %241, %236
  %247 = phi i1 [ true, %236 ], [ %245, %241 ]
  %248 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %93, i64 0, i32 3, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = load i32, i32* %75, align 4
  %251 = sub nsw i32 %249, %250
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i64 20) #7
  %252 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %253 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %252, i64 0, i32 3, i32 0, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %65, %254
  %256 = call i32 @_ZN5blink22HTMLViewSourceDocument8AddRangeERKN3WTF6StringEiiRKNS1_12AtomicStringEbbS7_(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 %225, i32 %251, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9, i1 zeroext %247, i1 zeroext %255, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7)
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %272, label %259

259:                                              ; preds = %246
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %259
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ %265, %259 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %257) #7
  br label %272

272:                                              ; preds = %246, %268, %271
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #7
  br label %273

273:                                              ; preds = %272, %230
  %274 = phi i32 [ %235, %230 ], [ %256, %272 ]
  %275 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %93, i64 1
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %291, label %278

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %276) #7
  br label %291

291:                                              ; preds = %273, %287, %290
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #7
  %292 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %292, label %293, label %294

293:                                              ; preds = %291, %303, %306
  br label %92

294:                                              ; preds = %291
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %294
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %294
  %304 = phi i32 [ %302, %301 ], [ %300, %294 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %293

306:                                              ; preds = %303
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #7
  br label %293

307:                                              ; preds = %100, %113
  %308 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 4
  %309 = bitcast %"class.blink::Member.542"* %308 to i64*
  %310 = load i64, i64* %309, align 8
  store atomic i64 %310, i64* %30 monotonic, align 8
  %311 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %316, label %313

313:                                              ; preds = %307
  %314 = inttoptr i64 %310 to i8*
  %315 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %314) #7
  br label %316

316:                                              ; preds = %307, %313
  %317 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %317, label %331, label %318

318:                                              ; preds = %316
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %324 = load i32, i32* %323, align 4
  br i1 %322, label %325, label %327

325:                                              ; preds = %318
  %326 = add i32 %324, -1
  store i32 %326, i32* %323, align 4
  br label %327

327:                                              ; preds = %325, %318
  %328 = phi i32 [ %326, %325 ], [ %324, %318 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #7
  br label %331

331:                                              ; preds = %316, %327, %330
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLViewSourceDocument19ProcessCommentTokenERKN3WTF6StringERNS_9HTMLTokenE(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HTMLToken"* nocapture readnone dereferenceable(2512)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i64 12) #7
  %7 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = icmp eq %"class.blink::Element"* %8, %11
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  call void @_ZN5blink22HTMLViewSourceDocument7AddLineERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #7
  %14 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  br label %22

15:                                               ; preds = %3
  %16 = call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %17 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %17, %"class.blink::QualifiedName"* dereferenceable(8) %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #7
  %19 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %20 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %20, %"class.blink::Node"* %21) #7
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::Element"* [ %14, %13 ], [ %17, %15 ]
  %24 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %25 = ptrtoint %"class.blink::Element"* %23 to i64
  %26 = bitcast %"class.blink::Member.21"* %24 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.blink::Element"* %23 to i8*
  %31 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #7
  br label %32

32:                                               ; preds = %22, %29
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #7
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %50 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i64 12) #7
  call void @_ZN5blink22HTMLViewSourceDocument7AddTextERKN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5)
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #7
  br label %67

67:                                               ; preds = %49, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #7
  %68 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 4
  %69 = bitcast %"class.blink::Member.542"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  store atomic i64 %70, i64* %26 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = inttoptr i64 %70 to i8*
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #7
  br label %76

76:                                               ; preds = %67, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLViewSourceDocument21ProcessCharacterTokenERKN3WTF6StringERNS_9HTMLTokenE(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HTMLToken"* nocapture readnone dereferenceable(2512)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i64 0) #7
  call void @_ZN5blink22HTMLViewSourceDocument7AddTextERKN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4)
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #7
  br label %22

22:                                               ; preds = %3, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink22HTMLViewSourceDocument20AddSpanWithClassNameERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = icmp eq %"class.blink::Element"* %4, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  tail call void @_ZN5blink22HTMLViewSourceDocument7AddLineERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  %10 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  br label %18

11:                                               ; preds = %2
  %12 = tail call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %13 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %13, %"class.blink::QualifiedName"* dereferenceable(8) %14, %"class.WTF::AtomicString"* dereferenceable(8) %1) #7
  %15 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %16, %"class.blink::Node"* %17) #7
  br label %18

18:                                               ; preds = %11, %9
  %19 = phi %"class.blink::Element"* [ %10, %9 ], [ %13, %11 ]
  ret %"class.blink::Element"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLViewSourceDocument7AddTextERKN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.747", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %173, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %173, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.WTF::Vector.747"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.WTF::Vector.747", %"class.WTF::Vector.747"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.747", %"class.WTF::Vector.747"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #7
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %1, i16 zeroext 10, i1 zeroext true, %"class.WTF::Vector.747"* nonnull dereferenceable(16) %4) #7
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %136, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::String"* %5 to i8*
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %22, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::Member.540", %"class.blink::Member.540"* %23, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  %27 = bitcast %"class.blink::Member.21"* %22 to i64*
  %28 = add i32 %17, -1
  %29 = bitcast %"class.blink::Member.540"* %23 to i64*
  br label %30

30:                                               ; preds = %133, %19
  %31 = phi i32 [ 0, %19 ], [ %134, %133 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %21, align 8
  %32 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.747"* nonnull %4, i32 %31) #7
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %21, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #7
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  call void @llvm.trap() #7
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %30, %36, %51
  %54 = load %"class.blink::Element"*, %"class.blink::Element"** %24, align 8
  %55 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %25, align 8
  %56 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = icmp eq %"class.blink::Element"* %54, %56
  br i1 %57, label %58, label %59

58:                                               ; preds = %53
  call void @_ZN5blink22HTMLViewSourceDocument7AddLineERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  br label %59

59:                                               ; preds = %58, %53
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %85

66:                                               ; preds = %59, %62
  %67 = icmp eq i32 %31, %28
  br i1 %67, label %115, label %68

68:                                               ; preds = %66
  %69 = load %"class.blink::Element"*, %"class.blink::Element"** %24, align 8
  %70 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %69, i64 0, i32 0, i32 1, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %73, label %78

73:                                               ; preds = %68
  %74 = call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %75 = load %"class.blink::Element"*, %"class.blink::Element"** %24, align 8
  %76 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %75, i64 0, i32 0
  %77 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %76, %"class.blink::Node"* %77) #7
  br label %78

78:                                               ; preds = %73, %68
  %79 = load i64, i64* %29, align 8
  store atomic i64 %79, i64* %27 monotonic, align 8
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %115, label %82

82:                                               ; preds = %78
  %83 = inttoptr i64 %79 to i8*
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #7
  br label %115

85:                                               ; preds = %62
  %86 = load %"class.blink::Element"*, %"class.blink::Element"** %24, align 8
  %87 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %86, i64 0, i32 0
  %88 = call %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %26, %"class.WTF::String"* nonnull dereferenceable(8) %5) #7
  %89 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %88, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %87, %"class.blink::Node"* %89) #7
  %90 = ptrtoint %"class.blink::Element"* %86 to i64
  store atomic i64 %90, i64* %27 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %85
  %94 = bitcast %"class.blink::Element"* %86 to i8*
  %95 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #7
  br label %96

96:                                               ; preds = %85, %93
  %97 = icmp ult i32 %31, %28
  br i1 %97, label %98, label %115

98:                                               ; preds = %96
  %99 = load %"class.blink::Element"*, %"class.blink::Element"** %24, align 8
  %100 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %99, i64 0, i32 0, i32 1, i32 0, i32 0
  %101 = load %"class.blink::Node"*, %"class.blink::Node"** %100, align 8
  %102 = icmp eq %"class.blink::Node"* %101, null
  br i1 %102, label %103, label %108

103:                                              ; preds = %98
  %104 = call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %105 = load %"class.blink::Element"*, %"class.blink::Element"** %24, align 8
  %106 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %105, i64 0, i32 0
  %107 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %106, %"class.blink::Node"* %107) #7
  br label %108

108:                                              ; preds = %103, %98
  %109 = load i64, i64* %29, align 8
  store atomic i64 %109, i64* %27 monotonic, align 8
  %110 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %108
  %113 = inttoptr i64 %109 to i8*
  %114 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %113) #7
  br label %115

115:                                              ; preds = %112, %108, %82, %78, %96, %66
  %116 = phi i32 [ 2, %66 ], [ 0, %96 ], [ 4, %78 ], [ 4, %82 ], [ 0, %108 ], [ 0, %112 ]
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #7
  br label %132

132:                                              ; preds = %115, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  switch i32 %116, label %136 [
    i32 0, label %133
    i32 4, label %133
  ]

133:                                              ; preds = %132, %132
  %134 = add nuw i32 %31, 1
  %135 = icmp eq i32 %134, %17
  br i1 %135, label %136, label %30

136:                                              ; preds = %132, %133, %13
  %137 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %138 = icmp eq %"class.WTF::String"* %137, null
  br i1 %138, label %172, label %139, !prof !3

139:                                              ; preds = %136
  %140 = bitcast %"class.WTF::String"* %137 to i8*
  %141 = load i32, i32* %16, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %170, label %143, !prof !2

143:                                              ; preds = %139
  %144 = zext i32 %141 to i64
  %145 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 %144
  br label %146

146:                                              ; preds = %164, %143
  %147 = phi %"class.WTF::String"* [ %165, %164 ], [ %137, %143 ]
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #7
  br label %164

164:                                              ; preds = %163, %160, %146
  %165 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 1
  %166 = icmp eq %"class.WTF::String"* %165, %145
  br i1 %166, label %167, label %146

167:                                              ; preds = %164
  store i32 0, i32* %16, align 4
  %168 = bitcast %"class.WTF::Vector.747"* %4 to i8**
  %169 = load i8*, i8** %168, align 8
  br label %170

170:                                              ; preds = %167, %139
  %171 = phi i8* [ %169, %167 ], [ %140, %139 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %171) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %172

172:                                              ; preds = %136, %170
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  br label %173

173:                                              ; preds = %3, %9, %172
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink22HTMLViewSourceDocument8AddRangeERKN3WTF6StringEiiRKNS1_12AtomicStringEbbS7_(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i1 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.WTF::String", align 8
  %10 = icmp eq i32 %3, %2
  br i1 %10, label %102, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %14 = sub nsw i32 %3, %2
  %15 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 %2, i32 %14) #7
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %13, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %60, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %60, label %23

23:                                               ; preds = %19
  br i1 %5, label %24, label %34

24:                                               ; preds = %23
  %25 = tail call %"class.blink::Element"* @_ZN5blink22HTMLViewSourceDocument7AddLinkERKN3WTF12AtomicStringEb(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %7, i1 zeroext %6)
  %26 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %27 = ptrtoint %"class.blink::Element"* %25 to i64
  %28 = bitcast %"class.blink::Member.21"* %26 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %60, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.blink::Element"* %25 to i8*
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #7
  br label %60

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Element"*, %"class.blink::Element"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = icmp eq %"class.blink::Element"* %36, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  tail call void @_ZN5blink22HTMLViewSourceDocument7AddLineERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %4) #7
  %42 = load %"class.blink::Element"*, %"class.blink::Element"** %35, align 8
  br label %50

43:                                               ; preds = %34
  %44 = tail call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %45 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %45, %"class.blink::QualifiedName"* dereferenceable(8) %46, %"class.WTF::AtomicString"* dereferenceable(8) %4) #7
  %47 = load %"class.blink::Element"*, %"class.blink::Element"** %35, align 8
  %48 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %47, i64 0, i32 0
  %49 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %48, %"class.blink::Node"* %49) #7
  br label %50

50:                                               ; preds = %41, %43
  %51 = phi %"class.blink::Element"* [ %42, %41 ], [ %45, %43 ]
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %53 = ptrtoint %"class.blink::Element"* %51 to i64
  %54 = bitcast %"class.blink::Member.21"* %52 to i64*
  store atomic i64 %53, i64* %54 monotonic, align 8
  %55 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %50
  %58 = bitcast %"class.blink::Element"* %51 to i8*
  %59 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %58) #7
  br label %60

60:                                               ; preds = %11, %57, %50, %31, %24, %19
  call void @_ZN5blink22HTMLViewSourceDocument7AddTextERKN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::AtomicString"* dereferenceable(8) %4)
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %85, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %85, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %69 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::Element"*, %"class.blink::Element"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = icmp eq %"class.blink::Element"* %70, %73
  br i1 %74, label %85, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %70, i64 0, i32 0, i32 0
  %77 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %76) #7
  %78 = ptrtoint %"class.blink::ContainerNode"* %77 to i64
  %79 = bitcast %"class.blink::Member.21"* %68 to i64*
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %75
  %83 = bitcast %"class.blink::ContainerNode"* %77 to i8*
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #7
  br label %85

85:                                               ; preds = %67, %60, %82, %75, %63
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #7
  br label %101

101:                                              ; preds = %85, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  br label %102

102:                                              ; preds = %8, %101
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink22HTMLViewSourceDocument7AddBaseERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::HTMLBaseElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLBaseElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %4 = getelementptr inbounds %"class.blink::HTMLBaseElement", %"class.blink::HTMLBaseElement"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  tail call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %5, %"class.WTF::AtomicString"* dereferenceable(8) %1) #7
  %6 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Element"*, %"class.blink::Element"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLBaseElement", %"class.blink::HTMLBaseElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %8, %"class.blink::Node"* %9) #7
  ret %"class.blink::Element"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink22HTMLViewSourceDocument9AddSrcsetERKN3WTF6StringEii(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::String"* dereferenceable(8), i32, i32 returned) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::Vector.747", align 8
  %7 = alloca %"class.WTF::Vector.747", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %15 = sub nsw i32 %3, %2
  %16 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 %2, i32 %15) #7
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %14, align 8
  %17 = bitcast %"class.WTF::Vector.747"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.WTF::Vector.747", %"class.WTF::Vector.747"* %6, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector.747", %"class.WTF::Vector.747"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #7
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* nonnull %5, i16 zeroext 44, i1 zeroext true, %"class.WTF::Vector.747"* nonnull dereferenceable(16) %6) #7
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %41, label %22

22:                                               ; preds = %4
  %23 = bitcast %"class.WTF::Vector.747"* %7 to i8*
  %24 = getelementptr inbounds %"class.WTF::Vector.747", %"class.WTF::Vector.747"* %7, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::Vector.747", %"class.WTF::Vector.747"* %7, i64 0, i32 0, i32 0, i32 2
  %26 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  %29 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %30 = bitcast %"class.blink::Member.21"* %29 to i64*
  %31 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %29, i64 0, i32 0, i32 0
  %34 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.WTF::String"* %11 to i8*
  %37 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %40 = bitcast %"class.WTF::Vector.747"* %7 to i8**
  br label %94

41:                                               ; preds = %269, %4
  %42 = load %"class.WTF::String"*, %"class.WTF::String"** %18, align 8
  %43 = icmp eq %"class.WTF::String"* %42, null
  br i1 %43, label %77, label %44, !prof !3

44:                                               ; preds = %41
  %45 = bitcast %"class.WTF::String"* %42 to i8*
  %46 = load i32, i32* %19, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %75, label %48, !prof !2

48:                                               ; preds = %44
  %49 = zext i32 %46 to i64
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 %49
  br label %51

51:                                               ; preds = %69, %48
  %52 = phi %"class.WTF::String"* [ %70, %69 ], [ %42, %48 ]
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #7
  br label %69

69:                                               ; preds = %68, %65, %51
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 1
  %71 = icmp eq %"class.WTF::String"* %70, %50
  br i1 %71, label %72, label %51

72:                                               ; preds = %69
  store i32 0, i32* %19, align 4
  %73 = bitcast %"class.WTF::Vector.747"* %6 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %72, %44
  %76 = phi i8* [ %74, %72 ], [ %45, %44 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %18, align 8
  br label %77

77:                                               ; preds = %41, %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #7
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #7
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  ret i32 %3

94:                                               ; preds = %269, %22
  %95 = phi i32 [ 0, %22 ], [ %199, %269 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #7
  %96 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.747"* nonnull %6, i32 %95) #7
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %96, i16 zeroext 32, i1 zeroext false, %"class.WTF::Vector.747"* nonnull dereferenceable(16) %7) #7
  %97 = load i32, i32* %25, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %180, label %99

99:                                               ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %27, align 8
  %100 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.747"* nonnull %7, i32 0) #7
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %127, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 acquire, align 4
  %107 = and i32 %106, 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %125, label %109

109:                                              ; preds = %104
  %110 = load atomic i32, i32* %105 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %127

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #7
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %113
  call void @llvm.trap() #7
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %127

125:                                              ; preds = %104
  %126 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %102) #7
  br label %127

127:                                              ; preds = %99, %109, %123, %125
  %128 = phi %"class.WTF::StringImpl"* [ %126, %125 ], [ %102, %109 ], [ %102, %123 ], [ null, %99 ]
  %129 = ptrtoint %"class.WTF::StringImpl"* %128 to i64
  store i64 %129, i64* %28, align 8
  %130 = call %"class.blink::Element"* @_ZN5blink22HTMLViewSourceDocument7AddLinkERKN3WTF12AtomicStringEb(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8, i1 zeroext false)
  %131 = ptrtoint %"class.blink::Element"* %130 to i64
  store atomic i64 %131, i64* %30 monotonic, align 8
  %132 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %137, label %134

134:                                              ; preds = %127
  %135 = bitcast %"class.blink::Element"* %130 to i8*
  %136 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %135) #7
  br label %137

137:                                              ; preds = %127, %134
  %138 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.747"* nonnull %6, i32 %95) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i64 20) #7
  call void @_ZN5blink22HTMLViewSourceDocument7AddTextERKN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %138, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9)
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #7
  br label %154

154:                                              ; preds = %137, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  %155 = load %"class.blink::Element"*, %"class.blink::Element"** %33, align 8
  %156 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %155, i64 0, i32 0, i32 0
  %157 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %156) #7
  %158 = ptrtoint %"class.blink::ContainerNode"* %157 to i64
  store atomic i64 %158, i64* %30 monotonic, align 8
  %159 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %154
  %162 = bitcast %"class.blink::ContainerNode"* %157 to i8*
  %163 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %162) #7
  br label %164

164:                                              ; preds = %154, %161
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %197, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %197

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #7
  br label %197

180:                                              ; preds = %94
  %181 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.747"* nonnull %6, i32 %95) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i64 20) #7
  call void @_ZN5blink22HTMLViewSourceDocument7AddTextERKN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* dereferenceable(8) %181, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10)
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #7
  br label %197

197:                                              ; preds = %196, %193, %180, %179, %176, %164
  %198 = phi i8* [ %26, %164 ], [ %26, %176 ], [ %26, %179 ], [ %34, %180 ], [ %34, %193 ], [ %34, %196 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #7
  %199 = add nuw i32 %95, 1
  %200 = icmp ult i32 %199, %20
  br i1 %200, label %201, label %234

201:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i64 1) #7
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i64 20) #7
  call void @_ZN5blink22HTMLViewSourceDocument7AddTextERKN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12)
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %202) #7
  br label %217

217:                                              ; preds = %201, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #7
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %217
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #7
  br label %233

233:                                              ; preds = %217, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #7
  br label %234

234:                                              ; preds = %233, %197
  %235 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %236 = icmp eq %"class.WTF::String"* %235, null
  br i1 %236, label %269, label %237, !prof !3

237:                                              ; preds = %234
  %238 = bitcast %"class.WTF::String"* %235 to i8*
  %239 = load i32, i32* %25, align 4
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %267, label %241, !prof !2

241:                                              ; preds = %237
  %242 = zext i32 %239 to i64
  %243 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %235, i64 %242
  br label %244

244:                                              ; preds = %262, %241
  %245 = phi %"class.WTF::String"* [ %263, %262 ], [ %235, %241 ]
  %246 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %245, i64 0, i32 0, i32 0
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #7
  br label %262

262:                                              ; preds = %261, %258, %244
  %263 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %245, i64 1
  %264 = icmp eq %"class.WTF::String"* %263, %243
  br i1 %264, label %265, label %244

265:                                              ; preds = %262
  store i32 0, i32* %25, align 4
  %266 = load i8*, i8** %40, align 8
  br label %267

267:                                              ; preds = %265, %237
  %268 = phi i8* [ %266, %265 ], [ %238, %237 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %268) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %24, align 8
  br label %269

269:                                              ; preds = %234, %267
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #7
  %270 = icmp eq i32 %199, %20
  br i1 %270, label %41, label %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLViewSourceDocument7AddLineERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = tail call %"class.blink::HTMLTableRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_19HTMLTableRowElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %11 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::HTMLTableRowElement", %"class.blink::HTMLTableRowElement"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %13, %"class.blink::Node"* %14) #7
  %15 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE, align 8
  %16 = tail call %"class.blink::HTMLTableCellElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HTMLTableCellElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8) %15, %"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %17 = getelementptr inbounds %"class.blink::HTMLTableCellElement", %"class.blink::HTMLTableCellElement"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %19 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i64 11) #7
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %17, %"class.blink::QualifiedName"* dereferenceable(8) %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #7
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #7
  br label %36

36:                                               ; preds = %2, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  %37 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kValueAttrE, align 8
  %38 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 5
  %39 = load i32, i32* %38, align 8
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %38, align 8
  call void @_ZN5blink7Element20SetIntegralAttributeERKNS_13QualifiedNameEi(%"class.blink::Element"* %17, %"class.blink::QualifiedName"* dereferenceable(8) %37, i32 %40) #7
  %41 = getelementptr inbounds %"class.blink::HTMLTableRowElement", %"class.blink::HTMLTableRowElement"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::HTMLTableCellElement", %"class.blink::HTMLTableCellElement"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %41, %"class.blink::Node"* %42) #7
  %43 = call %"class.blink::HTMLTableCellElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HTMLTableCellElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8) %15, %"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %44 = getelementptr inbounds %"class.blink::HTMLTableCellElement", %"class.blink::HTMLTableCellElement"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i64 12) #7
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %44, %"class.blink::QualifiedName"* dereferenceable(8) %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8) #7
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #7
  br label %62

62:                                               ; preds = %36, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #7
  %63 = getelementptr inbounds %"class.blink::HTMLTableCellElement", %"class.blink::HTMLTableCellElement"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %41, %"class.blink::Node"* %63) #7
  %64 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 4
  %65 = ptrtoint %"class.blink::HTMLTableCellElement"* %43 to i64
  %66 = bitcast %"class.blink::Member.542"* %64 to i64*
  store atomic i64 %65, i64* %66 monotonic, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %62
  %70 = bitcast %"class.blink::HTMLTableCellElement"* %43 to i8*
  %71 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %70) #7
  %72 = load i64, i64* %66, align 8
  br label %73

73:                                               ; preds = %62, %69
  %74 = phi i64 [ %65, %62 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %76 = bitcast %"class.blink::Member.21"* %75 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %73
  %80 = inttoptr i64 %74 to i8*
  %81 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #7
  br label %82

82:                                               ; preds = %73, %79
  %83 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %192, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %192, label %90

90:                                               ; preds = %86
  %91 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #7
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %92, align 8
  %93 = load i32, i32* %87, align 4
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 1
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %96 = bitcast i8** %95 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %93, i32* %97, align 8
  %98 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #7
  %99 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %100 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i8** %101, align 8
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 19, i32* %102, align 8
  %103 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #7
  br i1 %103, label %129, label %104

104:                                              ; preds = %90
  %105 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #7
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %108, label %112

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %109, align 8
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %111 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %110, i64* %111, align 8
  br label %120

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 1
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %118 = bitcast i8** %117 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %118, align 8
  %119 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %120

120:                                              ; preds = %112, %108
  %121 = phi i64 [ %119, %112 ], [ %110, %108 ]
  %122 = phi i32 [ %115, %112 ], [ 0, %108 ]
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %122, i32* %123, align 8
  %124 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #7
  %125 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %121, i64* %125, align 8
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i8** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 20, i32* %127, align 8
  %128 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #7
  br i1 %128, label %129, label %170

129:                                              ; preds = %120, %90
  %130 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #7
  %131 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %75, i64 0, i32 0, i32 0
  %132 = load %"class.blink::Element"*, %"class.blink::Element"** %131, align 8
  %133 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %11, align 8
  %134 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %133, i64 0, i32 0, i32 0, i32 0
  %135 = icmp eq %"class.blink::Element"* %132, %134
  br i1 %135, label %136, label %138

136:                                              ; preds = %129
  call void @_ZN5blink22HTMLViewSourceDocument7AddLineERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #7
  %137 = load %"class.blink::Element"*, %"class.blink::Element"** %131, align 8
  br label %144

138:                                              ; preds = %129
  %139 = call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %140 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %139, i64 0, i32 0, i32 0
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %140, %"class.blink::QualifiedName"* dereferenceable(8) %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #7
  %141 = load %"class.blink::Element"*, %"class.blink::Element"** %131, align 8
  %142 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %141, i64 0, i32 0
  %143 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %139, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %142, %"class.blink::Node"* %143) #7
  br label %144

144:                                              ; preds = %136, %138
  %145 = phi %"class.blink::Element"* [ %137, %136 ], [ %140, %138 ]
  %146 = ptrtoint %"class.blink::Element"* %145 to i64
  store atomic i64 %146, i64* %76 monotonic, align 8
  %147 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %144
  %150 = bitcast %"class.blink::Element"* %145 to i8*
  %151 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %150) #7
  br label %152

152:                                              ; preds = %144, %149
  %153 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #7
  br label %169

169:                                              ; preds = %152, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #7
  br label %170

170:                                              ; preds = %169, %120
  %171 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %75, i64 0, i32 0, i32 0
  %172 = load %"class.blink::Element"*, %"class.blink::Element"** %171, align 8
  %173 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %11, align 8
  %174 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %173, i64 0, i32 0, i32 0, i32 0
  %175 = icmp eq %"class.blink::Element"* %172, %174
  br i1 %175, label %176, label %178

176:                                              ; preds = %170
  call void @_ZN5blink22HTMLViewSourceDocument7AddLineERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1) #7
  %177 = load %"class.blink::Element"*, %"class.blink::Element"** %171, align 8
  br label %184

178:                                              ; preds = %170
  %179 = call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %180 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %179, i64 0, i32 0, i32 0
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %180, %"class.blink::QualifiedName"* dereferenceable(8) %18, %"class.WTF::AtomicString"* dereferenceable(8) %1) #7
  %181 = load %"class.blink::Element"*, %"class.blink::Element"** %171, align 8
  %182 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %181, i64 0, i32 0
  %183 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %179, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %182, %"class.blink::Node"* %183) #7
  br label %184

184:                                              ; preds = %176, %178
  %185 = phi %"class.blink::Element"* [ %177, %176 ], [ %180, %178 ]
  %186 = ptrtoint %"class.blink::Element"* %185 to i64
  store atomic i64 %186, i64* %76 monotonic, align 8
  %187 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %192, label %189

189:                                              ; preds = %184
  %190 = bitcast %"class.blink::Element"* %185 to i8*
  %191 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %190) #7
  br label %192

192:                                              ; preds = %82, %189, %184, %86
  ret void
}

declare void @_ZN5blink7Element20SetIntegralAttributeERKNS_13QualifiedNameEi(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22HTMLViewSourceDocument10FinishLineEv(%"class.blink::HTMLViewSourceDocument"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::Member.21", %"class.blink::Member.21"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = tail call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %10 = load %"class.blink::Element"*, %"class.blink::Element"** %3, align 8
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %11, %"class.blink::Node"* %12) #7
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.540"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::Member.21"* %2 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = inttoptr i64 %16 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #7
  br label %23

23:                                               ; preds = %13, %20
  ret void
}

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector.747"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink22HTMLViewSourceDocument7AddLinkERKN3WTF12AtomicStringEb(%"class.blink::HTMLViewSourceDocument"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::HTMLTableSectionElement"*, %"class.blink::HTMLTableSectionElement"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::HTMLTableSectionElement", %"class.blink::HTMLTableSectionElement"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = icmp eq %"class.blink::Element"* %11, %14
  br i1 %15, label %16, label %35

16:                                               ; preds = %3
  %17 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #7
  call void @_ZN5blink22HTMLViewSourceDocument7AddLineERKN3WTF12AtomicStringE(%"class.blink::HTMLViewSourceDocument"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4)
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #7
  br label %34

34:                                               ; preds = %16, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %35

35:                                               ; preds = %34, %3
  %36 = call %"class.blink::HTMLAnchorElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLAnchorElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912) %0) #7
  %37 = select i1 %2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0)
  %38 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %36, i64 0, i32 0, i32 0
  %39 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %40 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* %37, i64 39) #7
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %38, %"class.blink::QualifiedName"* dereferenceable(8) %39, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #7
  %41 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #7
  br label %57

57:                                               ; preds = %35, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  %58 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names11kTargetAttrE, align 8
  %59 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i64 6) #7
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %38, %"class.blink::QualifiedName"* dereferenceable(8) %58, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6) #7
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #7
  br label %76

76:                                               ; preds = %57, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #7
  %77 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %38, %"class.blink::QualifiedName"* dereferenceable(8) %77, %"class.WTF::AtomicString"* dereferenceable(8) %1) #7
  %78 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names8kRelAttrE, align 8
  %79 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i64 19) #7
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %38, %"class.blink::QualifiedName"* dereferenceable(8) %78, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #7
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #7
  br label %96

96:                                               ; preds = %76, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #7
  %97 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %97) #7
  call void @_ZNK5blink17HTMLAnchorElement3UrlEv(%"class.blink::KURL"* nonnull sret %8, %"class.blink::HTMLAnchorElement"* %36) #7
  %98 = call zeroext i1 @_ZNK5blink4KURL20ProtocolIsJavaScriptEv(%"class.blink::KURL"* nonnull %8) #7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %97) #7
  br i1 %98, label %99, label %118

99:                                               ; preds = %96
  %100 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i64 11) #7
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %38, %"class.blink::QualifiedName"* dereferenceable(8) %77, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #7
  %101 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #7
  br label %117

117:                                              ; preds = %99, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #7
  br label %118

118:                                              ; preds = %117, %96
  %119 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  %120 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %119, i64 0, i32 0
  %121 = getelementptr inbounds %"class.blink::HTMLAnchorElement", %"class.blink::HTMLAnchorElement"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %120, %"class.blink::Node"* %121) #7
  ret %"class.blink::Element"* %38
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZNK5blink17HTMLAnchorElement3UrlEv(%"class.blink::KURL"* sret, %"class.blink::HTMLAnchorElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL20ProtocolIsJavaScriptEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22HTMLViewSourceDocument5TraceEPNS_7VisitorE(%"class.blink::HTMLViewSourceDocument"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.21"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.540"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23HTMLTableSectionElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 4
  %26 = bitcast %"class.blink::Member.542"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HTMLTableCellElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink8Document5TraceEPNS_7VisitorE(%"class.blink::Document"* %36, %"class.blink::Visitor"* %1) #7
  ret void
}

declare void @_ZNK5blink8Document5TraceEPNS_7VisitorE(%"class.blink::Document"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink22HTMLViewSourceDocument5TraceEPNS_7VisitorE(%"class.blink::HTMLViewSourceDocument"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 -1, i32 0, i32 0, i32 191
  %4 = getelementptr inbounds %"class.blink::WeakMember.532", %"class.blink::WeakMember.532"* %3, i64 360
  %5 = bitcast %"class.blink::WeakMember.532"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::WeakMember.532", %"class.blink::WeakMember.532"* %3, i64 361
  %16 = bitcast %"class.blink::WeakMember.532"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23HTMLTableSectionElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %"class.blink::WeakMember.532", %"class.blink::WeakMember.532"* %3, i64 362
  %27 = bitcast %"class.blink::WeakMember.532"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HTMLTableCellElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %36

36:                                               ; preds = %25, %30
  %37 = bitcast %"class.blink::WeakMember.532"* %3 to %"class.blink::Document"*
  tail call void @_ZNK5blink8Document5TraceEPNS_7VisitorE(%"class.blink::Document"* %37, %"class.blink::Visitor"* %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn184_NK5blink22HTMLViewSourceDocument5TraceEPNS_7VisitorE(%"class.blink::HTMLViewSourceDocument"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 -1, i32 0, i32 0, i32 174
  %4 = getelementptr inbounds %"class.blink::Member.512", %"class.blink::Member.512"* %3, i64 360
  %5 = bitcast %"class.blink::Member.512"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::Member.512", %"class.blink::Member.512"* %3, i64 361
  %16 = bitcast %"class.blink::Member.512"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23HTMLTableSectionElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %"class.blink::Member.512", %"class.blink::Member.512"* %3, i64 362
  %27 = bitcast %"class.blink::Member.512"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HTMLTableCellElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %36

36:                                               ; preds = %25, %30
  %37 = bitcast %"class.blink::Member.512"* %3 to %"class.blink::Document"*
  tail call void @_ZNK5blink8Document5TraceEPNS_7VisitorE(%"class.blink::Document"* %37, %"class.blink::Visitor"* %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn192_NK5blink22HTMLViewSourceDocument5TraceEPNS_7VisitorE(%"class.blink::HTMLViewSourceDocument"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 -1, i32 0, i32 0, i32 173
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 360
  %5 = bitcast %"class.WTF::String"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 361
  %16 = bitcast %"class.WTF::String"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23HTMLTableSectionElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 362
  %27 = bitcast %"class.WTF::String"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HTMLTableCellElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %36

36:                                               ; preds = %25, %30
  %37 = bitcast %"class.WTF::String"* %3 to %"class.blink::Document"*
  tail call void @_ZNK5blink8Document5TraceEPNS_7VisitorE(%"class.blink::Document"* %37, %"class.blink::Visitor"* %1) #7
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLViewSourceDocumentD2Ev(%"class.blink::HTMLViewSourceDocument"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast i32 (...)*** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #7
  br label %22

22:                                               ; preds = %1, %18, %21
  %23 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0
  tail call void @_ZN5blink12HTMLDocumentD2Ev(%"class.blink::HTMLDocument"* %23) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22HTMLViewSourceDocumentD0Ev(%"class.blink::HTMLViewSourceDocument"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast i32 (...)*** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #7
  br label %22

22:                                               ; preds = %1, %18, %21
  %23 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0
  tail call void @_ZN5blink12HTMLDocumentD2Ev(%"class.blink::HTMLDocument"* %23) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #7
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink12HTMLDocument18GetWrapperTypeInfoEv(%"class.blink::HTMLDocument"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12HTMLDocument18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink8Document23RemoveAllEventListenersEv(%"class.blink::Document"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8Document8nodeNameEv(%"class.blink::Document"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink8Document11getNodeTypeEv(%"class.blink::Document"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink8Document5CloneERS0_NS_17CloneChildrenFlagE(%"class.blink::Document"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8Document23CanContainRangeEndPointEv(%"class.blink::Document"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8Document16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Document"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink13ContainerNode16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::ContainerNode"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink13ContainerNode16DetachLayoutTreeEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare i32 @_ZN5blink4Node12InsertedIntoERNS_13ContainerNodeE(%"class.blink::Node"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode11RemovedFromERS0_(%"class.blink::ContainerNode"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Node"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node13DebugNodeNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink4Node26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Node"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink8Document15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::Document"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8Document20ChildrenCanHaveStyleEv(%"class.blink::Document"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink13ContainerNode24GetLayoutBoxForScrollingEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare void @_ZN5blink8Document8ShutdownEv(%"class.blink::Document"*) unnamed_addr #1

declare void @_ZN5blink8Document8CountUseENS_5mojom10WebFeatureE(%"class.blink::Document"*, i32) unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink12HTMLDocument28CloneDocumentWithoutChildrenEv(%"class.blink::HTMLDocument"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn80_N5blink22HTMLViewSourceDocumentD1Ev(%"class.blink::HTMLViewSourceDocument"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 -1, i32 0, i32 0, i32 191
  %3 = bitcast %"class.blink::WeakMember.532"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::WeakMember.532", %"class.blink::WeakMember.532"* %2, i64 10
  %5 = bitcast %"class.blink::WeakMember.532"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::WeakMember.532", %"class.blink::WeakMember.532"* %2, i64 23
  %7 = bitcast %"class.blink::WeakMember.532"* %6 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::WeakMember.532", %"class.blink::WeakMember.532"* %2, i64 359
  %9 = bitcast %"class.blink::WeakMember.532"* %8 to %"class.WTF::StringImpl"**
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #7
  br label %25

25:                                               ; preds = %1, %21, %24
  %26 = bitcast %"class.blink::WeakMember.532"* %2 to %"class.blink::HTMLDocument"*
  tail call void @_ZN5blink12HTMLDocumentD2Ev(%"class.blink::HTMLDocument"* %26) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn80_N5blink22HTMLViewSourceDocumentD0Ev(%"class.blink::HTMLViewSourceDocument"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 -1, i32 0, i32 0, i32 191
  %3 = bitcast %"class.blink::WeakMember.532"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::WeakMember.532", %"class.blink::WeakMember.532"* %2, i64 10
  %5 = bitcast %"class.blink::WeakMember.532"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::WeakMember.532", %"class.blink::WeakMember.532"* %2, i64 23
  %7 = bitcast %"class.blink::WeakMember.532"* %6 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::WeakMember.532", %"class.blink::WeakMember.532"* %2, i64 359
  %9 = bitcast %"class.blink::WeakMember.532"* %8 to %"class.WTF::StringImpl"**
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #7
  br label %25

25:                                               ; preds = %1, %21, %24
  %26 = bitcast %"class.blink::WeakMember.532"* %2 to %"class.blink::HTMLDocument"*
  tail call void @_ZN5blink12HTMLDocumentD2Ev(%"class.blink::HTMLDocument"* %26) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn184_N5blink22HTMLViewSourceDocumentD1Ev(%"class.blink::HTMLViewSourceDocument"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 -1, i32 0, i32 0, i32 174
  %3 = bitcast %"class.blink::Member.512"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Member.512", %"class.blink::Member.512"* %2, i64 10
  %5 = bitcast %"class.blink::Member.512"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member.512", %"class.blink::Member.512"* %2, i64 23
  %7 = bitcast %"class.blink::Member.512"* %6 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::Member.512", %"class.blink::Member.512"* %2, i64 359
  %9 = bitcast %"class.blink::Member.512"* %8 to %"class.WTF::StringImpl"**
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #7
  br label %25

25:                                               ; preds = %1, %21, %24
  %26 = bitcast %"class.blink::Member.512"* %2 to %"class.blink::HTMLDocument"*
  tail call void @_ZN5blink12HTMLDocumentD2Ev(%"class.blink::HTMLDocument"* %26) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn184_N5blink22HTMLViewSourceDocumentD0Ev(%"class.blink::HTMLViewSourceDocument"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 -1, i32 0, i32 0, i32 174
  %3 = bitcast %"class.blink::Member.512"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Member.512", %"class.blink::Member.512"* %2, i64 10
  %5 = bitcast %"class.blink::Member.512"* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member.512", %"class.blink::Member.512"* %2, i64 23
  %7 = bitcast %"class.blink::Member.512"* %6 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }, { [82 x i8*], [5 x i8*], [6 x i8*], [3 x i8*] }* @_ZTVN5blink22HTMLViewSourceDocumentE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.blink::Member.512", %"class.blink::Member.512"* %2, i64 359
  %9 = bitcast %"class.blink::Member.512"* %8 to %"class.WTF::StringImpl"**
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #7
  br label %25

25:                                               ; preds = %1, %21, %24
  %26 = bitcast %"class.blink::Member.512"* %2 to %"class.blink::HTMLDocument"*
  tail call void @_ZN5blink12HTMLDocumentD2Ev(%"class.blink::HTMLDocument"* %26) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn184_N5blink8Document8CountUseENS_5mojom10WebFeatureE(%"class.blink::Document"*, i32) unnamed_addr #0 align 2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"*, i16*, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl20Create8BitIfPossibleEPKDsj(i16*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink12HTMLDocumentD2Ev(%"class.blink::HTMLDocument"*) unnamed_addr #3

declare void @_ZN5blink20HTMLViewSourceParserC1ERNS_22HTMLViewSourceDocumentERKN3WTF6StringE(%"class.blink::HTMLViewSourceParser"*, %"class.blink::HTMLViewSourceDocument"* dereferenceable(2912), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14DocumentParserEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14DocumentParserEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #7
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %21, i8* %22) #7
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #7
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #7
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DocumentParser"*
  %4 = bitcast i8* %1 to void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)**, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::DocumentParser"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14DocumentParserEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::DocumentParser"*
  %3 = bitcast i8* %0 to void (%"class.blink::DocumentParser"*)***
  %4 = load void (%"class.blink::DocumentParser"*)**, void (%"class.blink::DocumentParser"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %4, i64 1
  %6 = load void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %5, align 8
  tail call void %6(%"class.blink::DocumentParser"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14DocumentParserEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #7
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLHtmlElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLHtmlElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLHtmlElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15HTMLHtmlElementC1ERNS_8DocumentE(%"class.blink::HTMLHtmlElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLHtmlElement"* %51
}

declare void @_ZN5blink15HTMLHtmlElementC1ERNS_8DocumentE(%"class.blink::HTMLHtmlElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #7
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLHeadElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLHeadElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLHeadElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15HTMLHeadElementC1ERNS_8DocumentE(%"class.blink::HTMLHeadElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLHeadElement"* %51
}

declare void @_ZN5blink15HTMLHeadElementC1ERNS_8DocumentE(%"class.blink::HTMLHeadElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLBodyElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLBodyElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLBodyElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15HTMLBodyElementC1ERNS_8DocumentE(%"class.blink::HTMLBodyElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLBodyElement"* %51
}

declare void @_ZN5blink15HTMLBodyElementC1ERNS_8DocumentE(%"class.blink::HTMLBodyElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLDivElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_14HTMLDivElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLDivElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14HTMLDivElementC1ERNS_8DocumentE(%"class.blink::HTMLDivElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLDivElement"* %51
}

declare void @_ZN5blink14HTMLDivElementC1ERNS_8DocumentE(%"class.blink::HTMLDivElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLTableElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLTableElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 136
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 136
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -136
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 68, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 136, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLTableElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16HTMLTableElementC1ERNS_8DocumentE(%"class.blink::HTMLTableElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLTableElement"* %51
}

declare void @_ZN5blink16HTMLTableElementC1ERNS_8DocumentE(%"class.blink::HTMLTableElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLTableSectionElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_23HTMLTableSectionElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8), %"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 112
  br i1 %16, label %47, label %17, !prof !2

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 112
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -112
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 56, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 112, i64 %48) #7
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::HTMLTableSectionElement"*
  %53 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %0, i64 0, i32 0
  %54 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink23HTMLTableSectionElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLTableSectionElement"* %52, %"class.blink::QualifiedName"* dereferenceable(8) %53, %"class.blink::Document"* dereferenceable(2848) %54) #7
  %55 = getelementptr inbounds i8, i8* %51, i64 -4
  %56 = bitcast i8* %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = or i16 %57, 1
  store atomic i16 %58, i16* %56 release, align 2
  ret %"class.blink::HTMLTableSectionElement"* %52
}

declare void @_ZN5blink23HTMLTableSectionElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLTableSectionElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLInputElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLInputElementEE4CallIJRNS_22HTMLViewSourceDocumentENS_18CreateElementFlagsEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912), %"class.blink::CreateElementFlags"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 328
  br i1 %16, label %47, label %17, !prof !2

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 328
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -328
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 164, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 328, i64 %48) #7
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::HTMLInputElement"*
  %53 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16HTMLInputElementC1ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLInputElement"* %52, %"class.blink::Document"* dereferenceable(2848) %53, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %1) #7
  %54 = getelementptr inbounds i8, i8* %51, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  ret %"class.blink::HTMLInputElement"* %52
}

declare void @_ZN5blink16HTMLInputElementC1ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLInputElement"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #1

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13EventListenerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13EventListenerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13EventListenerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13EventListenerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EventListener"*
  %4 = bitcast i8* %1 to void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)**, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)** %5, i64 9
  %7 = load void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)*, void (%"class.blink::EventListener"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::EventListener"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13EventListenerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::EventListener"*
  %3 = bitcast i8* %0 to void (%"class.blink::EventListener"*)***
  %4 = load void (%"class.blink::EventListener"*)**, void (%"class.blink::EventListener"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::EventListener"*)*, void (%"class.blink::EventListener"*)** %4, i64 1
  %6 = load void (%"class.blink::EventListener"*)*, void (%"class.blink::EventListener"*)** %5, align 8
  tail call void %6(%"class.blink::EventListener"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13EventListenerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #7
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink13EventListener18NameInHeapSnapshotEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13EventListenerD2Ev(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23ViewSourceEventListenerD0Ev(%"class.blink::ViewSourceEventListener"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23ViewSourceEventListener6InvokeEPNS_16ExecutionContextEPNS_5EventE(%"class.blink::ViewSourceEventListener"*, %"class.blink::ExecutionContext"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = getelementptr inbounds %"class.blink::ViewSourceEventListener", %"class.blink::ViewSourceEventListener"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::HTMLTableElement"*, %"class.blink::HTMLTableElement"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLTableElement", %"class.blink::HTMLTableElement"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %9 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.blink::ViewSourceEventListener", %"class.blink::ViewSourceEventListener"* %0, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"* %11) #7
  %13 = select i1 %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0)
  %14 = select i1 %12, i64 9, i64 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* %13, i64 %14) #7
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %7, %"class.blink::QualifiedName"* dereferenceable(8) %8, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #7
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #7
  br label %31

31:                                               ; preds = %3, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener14IsEventHandlerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener33IsEventHandlerForContentAttributeEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink13EventListener10ScriptBodyEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  ret %"class.WTF::String"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener24BelongsToTheCurrentWorldEPNS_16ExecutionContextE(%"class.blink::EventListener"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener7MatchesERKNS_13EventListenerE(%"class.blink::NativeEventListener"*, %"class.blink::EventListener"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::NativeEventListener", %"class.blink::NativeEventListener"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::EventListener"* %3, %1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink23ViewSourceEventListener5TraceEPNS_7VisitorE(%"class.blink::ViewSourceEventListener"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ViewSourceEventListener", %"class.blink::ViewSourceEventListener"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.713"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLTableElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ViewSourceEventListener", %"class.blink::ViewSourceEventListener"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.715"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv) #7
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13EventListener22IsJSBasedEventListenerEv(%"class.blink::EventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener21IsNativeEventListenerEv(%"class.blink::NativeEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19NativeEventListener20IsImageEventListenerEv(%"class.blink::NativeEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink16HTMLInputElement7checkedEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HTMLTableElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLTableElement"*
  tail call void @_ZNK5blink16HTMLTableElement5TraceEPNS_7VisitorE(%"class.blink::HTMLTableElement"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink16HTMLTableElement5TraceEPNS_7VisitorE(%"class.blink::HTMLTableElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HTMLInputElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLInputElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLInputElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLInputElement"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLLabelElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLLabelElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 120
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 120
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -120
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 60, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 120, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLLabelElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16HTMLLabelElementC1ERNS_8DocumentE(%"class.blink::HTMLLabelElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLLabelElement"* %51
}

declare void @_ZN5blink16HTMLLabelElementC1ERNS_8DocumentE(%"class.blink::HTMLLabelElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLFormElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLFormElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 208
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 208
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -208
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 104, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 208, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLFormElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15HTMLFormElementC1ERNS_8DocumentE(%"class.blink::HTMLFormElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLFormElement"* %51
}

declare void @_ZN5blink15HTMLFormElementC1ERNS_8DocumentE(%"class.blink::HTMLFormElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLSpanElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15HTMLSpanElementC1ERNS_8DocumentE(%"class.blink::HTMLSpanElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLSpanElement"* %51
}

declare void @_ZN5blink15HTMLSpanElementC1ERNS_8DocumentE(%"class.blink::HTMLSpanElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLTableRowElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_19HTMLTableRowElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLTableRowElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink19HTMLTableRowElementC1ERNS_8DocumentE(%"class.blink::HTMLTableRowElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLTableRowElement"* %51
}

declare void @_ZN5blink19HTMLTableRowElementC1ERNS_8DocumentE(%"class.blink::HTMLTableRowElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLTableCellElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HTMLTableCellElementEE4CallIJRKNS_17HTMLQualifiedNameERNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLQualifiedName"* dereferenceable(8), %"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 112
  br i1 %16, label %47, label %17, !prof !2

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 112
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -112
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 56, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 112, i64 %48) #7
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::HTMLTableCellElement"*
  %53 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %0, i64 0, i32 0
  %54 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20HTMLTableCellElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLTableCellElement"* %52, %"class.blink::QualifiedName"* dereferenceable(8) %53, %"class.blink::Document"* dereferenceable(2848) %54) #7
  %55 = getelementptr inbounds i8, i8* %51, i64 -4
  %56 = bitcast i8* %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = or i16 %57, 1
  store atomic i16 %58, i16* %56 release, align 2
  ret %"class.blink::HTMLTableCellElement"* %52
}

declare void @_ZN5blink20HTMLTableCellElementC1ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::HTMLTableCellElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLBRElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13HTMLBRElementC1ERNS_8DocumentE(%"class.blink::HTMLBRElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLBRElement"* %51
}

declare void @_ZN5blink13HTMLBRElementC1ERNS_8DocumentE(%"class.blink::HTMLBRElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.747"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.747", %"class.WTF::Vector.747"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.747", %"class.WTF::Vector.747"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLBaseElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLBaseElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLBaseElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15HTMLBaseElementC1ERNS_8DocumentE(%"class.blink::HTMLBaseElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLBaseElement"* %51
}

declare void @_ZN5blink15HTMLBaseElementC1ERNS_8DocumentE(%"class.blink::HTMLBaseElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLAnchorElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HTMLAnchorElementEE4CallIJRNS_22HTMLViewSourceDocumentEEEEPS1_DpOT_(%"class.blink::HTMLViewSourceDocument"* dereferenceable(2912)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 144
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 144
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -144
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 72, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 144, i64 %47) #7
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLAnchorElement"*
  %52 = getelementptr inbounds %"class.blink::HTMLViewSourceDocument", %"class.blink::HTMLViewSourceDocument"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink17HTMLAnchorElementC1ERNS_8DocumentE(%"class.blink::HTMLAnchorElement"* %51, %"class.blink::Document"* dereferenceable(2848) %52) #7
  %53 = getelementptr inbounds i8, i8* %50, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLAnchorElement"* %51
}

declare void @_ZN5blink17HTMLAnchorElementC1ERNS_8DocumentE(%"class.blink::HTMLAnchorElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23HTMLTableSectionElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

declare void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HTMLTableCellElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  tail call void @_ZNK5blink7Element5TraceEPNS_7VisitorE(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
