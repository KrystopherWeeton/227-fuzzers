; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/internal/transpose_utils.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/internal/transpose_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.tflite::TransposeParams" = type { i8, [5 x i32] }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN6tflite15transpose_utils23IsTranspose2DApplicableERKNS_15TransposeParamsERKNS_12RuntimeShapeEPiS7_(%"struct.tflite::TransposeParams"* nocapture readonly dereferenceable(24), %"class.tflite::RuntimeShape"* nocapture readonly dereferenceable(32), i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %21

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %10 = bitcast %union.anon* %9 to i32*
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %2, align 4
  %12 = load i32, i32* %5, align 8
  %13 = icmp sgt i32 %12, 5
  %14 = getelementptr inbounds %union.anon, %union.anon* %9, i64 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 1
  %17 = bitcast %union.anon* %9 to [5 x i32]*
  %18 = getelementptr inbounds [5 x i32], [5 x i32]* %17, i64 0, i64 1
  %19 = select i1 %13, i32* %16, i32* %18
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %3, align 4
  br label %99

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %6, 1
  br i1 %24, label %25, label %40

25:                                               ; preds = %21
  %26 = zext i32 %6 to i64
  br label %29

27:                                               ; preds = %29
  %28 = icmp eq i64 %39, %26
  br i1 %28, label %40, label %29

29:                                               ; preds = %27, %25
  %30 = phi i64 [ 1, %25 ], [ %39, %27 ]
  %31 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = sub nsw i32 %32, %23
  %34 = icmp slt i32 %33, 0
  %35 = select i1 %34, i32 %6, i32 0
  %36 = add nsw i32 %35, %33
  %37 = zext i32 %36 to i64
  %38 = icmp eq i64 %30, %37
  %39 = add nuw nsw i64 %30, 1
  br i1 %38, label %27, label %99

40:                                               ; preds = %27, %21
  store i32 1, i32* %2, align 4
  store i32 1, i32* %3, align 4
  %41 = icmp sgt i32 %6, 0
  br i1 %41, label %42, label %99

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %44 = getelementptr inbounds %union.anon, %union.anon* %43, i64 0, i32 0
  %45 = bitcast %union.anon* %43 to [5 x i32]*
  %46 = sext i32 %23 to i64
  %47 = zext i32 %6 to i64
  %48 = and i64 %47, 1
  %49 = icmp eq i32 %6, 1
  br i1 %49, label %83, label %50

50:                                               ; preds = %42
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %80, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %81, %52 ]
  %55 = icmp slt i64 %53, %46
  %56 = load i32, i32* %5, align 8
  %57 = icmp sgt i32 %56, 5
  %58 = load i32*, i32** %44, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 %53
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %53
  %61 = select i1 %57, i32* %59, i32* %60
  %62 = load i32, i32* %61, align 4
  %63 = select i1 %55, i32* %2, i32* %3
  %64 = select i1 %55, i32* %2, i32* %3
  %65 = load i32, i32* %63, align 4
  %66 = mul nsw i32 %65, %62
  store i32 %66, i32* %64, align 4
  %67 = or i64 %53, 1
  %68 = icmp slt i64 %67, %46
  %69 = load i32, i32* %5, align 8
  %70 = icmp sgt i32 %69, 5
  %71 = load i32*, i32** %44, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 %67
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %67
  %74 = select i1 %70, i32* %72, i32* %73
  %75 = load i32, i32* %74, align 4
  %76 = select i1 %68, i32* %2, i32* %3
  %77 = select i1 %68, i32* %2, i32* %3
  %78 = load i32, i32* %76, align 4
  %79 = mul nsw i32 %78, %75
  store i32 %79, i32* %77, align 4
  %80 = add nuw nsw i64 %53, 2
  %81 = add i64 %54, -2
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %52

83:                                               ; preds = %52, %42
  %84 = phi i64 [ 0, %42 ], [ %80, %52 ]
  %85 = icmp eq i64 %48, 0
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = icmp slt i64 %84, %46
  %88 = load i32, i32* %5, align 8
  %89 = icmp sgt i32 %88, 5
  %90 = load i32*, i32** %44, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 %84
  %92 = getelementptr inbounds [5 x i32], [5 x i32]* %45, i64 0, i64 %84
  %93 = select i1 %89, i32* %91, i32* %92
  %94 = load i32, i32* %93, align 4
  %95 = select i1 %87, i32* %2, i32* %3
  %96 = select i1 %87, i32* %2, i32* %3
  %97 = load i32, i32* %95, align 4
  %98 = mul nsw i32 %97, %94
  store i32 %98, i32* %96, align 4
  br label %99

99:                                               ; preds = %29, %86, %83, %40, %8
  %100 = phi i1 [ true, %8 ], [ true, %40 ], [ true, %83 ], [ true, %86 ], [ false, %29 ]
  ret i1 %100
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite15transpose_utils23RemoveOneSizeDimensionsEPNS_12RuntimeShapeES2_PNS_15TransposeParamsE(%"class.tflite::RuntimeShape"* nocapture, %"class.tflite::RuntimeShape"* nocapture, %"struct.tflite::TransposeParams"* nocapture) local_unnamed_addr #2 {
  %4 = alloca %"struct.tflite::TransposeParams", align 4
  %5 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %327

8:                                                ; preds = %3
  %9 = icmp sgt i32 %6, 5
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %11 = bitcast %union.anon* %10 to [5 x i32]*
  %12 = getelementptr inbounds %union.anon, %union.anon* %10, i64 0, i32 0
  %13 = zext i32 %6 to i64
  br label %16

14:                                               ; preds = %23
  %15 = icmp eq i64 %27, %13
  br i1 %15, label %327, label %16

16:                                               ; preds = %14, %8
  %17 = phi i64 [ 0, %8 ], [ %27, %14 ]
  br i1 %9, label %18, label %21

18:                                               ; preds = %16
  %19 = load i32*, i32** %12, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 %17
  br label %23

21:                                               ; preds = %16
  %22 = getelementptr inbounds [5 x i32], [5 x i32]* %11, i64 0, i64 %17
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i32* [ %20, %18 ], [ %22, %21 ]
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 1
  %27 = add nuw nsw i64 %17, 1
  br i1 %26, label %28, label %14

28:                                               ; preds = %23
  br i1 %9, label %29, label %31

29:                                               ; preds = %28
  %30 = load i32*, i32** %12, align 8
  br label %33

31:                                               ; preds = %28
  %32 = bitcast %union.anon* %10 to i32*
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i32* [ %30, %29 ], [ %32, %31 ]
  %35 = icmp ult i32 %6, 8
  br i1 %35, label %121, label %36

36:                                               ; preds = %33
  %37 = and i64 %13, 4294967288
  %38 = add nsw i64 %37, -8
  %39 = lshr exact i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 3
  %42 = icmp ult i64 %38, 24
  br i1 %42, label %88, label %43

43:                                               ; preds = %36
  %44 = sub nsw i64 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %85, %45 ]
  %47 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %43 ], [ %83, %45 ]
  %48 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %43 ], [ %84, %45 ]
  %49 = phi i64 [ %44, %43 ], [ %86, %45 ]
  %50 = getelementptr inbounds i32, i32* %34, i64 %46
  %51 = bitcast i32* %50 to <4 x i32>*
  %52 = load <4 x i32>, <4 x i32>* %51, align 4
  %53 = getelementptr inbounds i32, i32* %50, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  %55 = load <4 x i32>, <4 x i32>* %54, align 4
  %56 = mul nsw <4 x i32> %52, %47
  %57 = mul nsw <4 x i32> %55, %48
  %58 = or i64 %46, 8
  %59 = getelementptr inbounds i32, i32* %34, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  %61 = load <4 x i32>, <4 x i32>* %60, align 4
  %62 = getelementptr inbounds i32, i32* %59, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4
  %65 = mul nsw <4 x i32> %61, %56
  %66 = mul nsw <4 x i32> %64, %57
  %67 = or i64 %46, 16
  %68 = getelementptr inbounds i32, i32* %34, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 4
  %71 = getelementptr inbounds i32, i32* %68, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = load <4 x i32>, <4 x i32>* %72, align 4
  %74 = mul nsw <4 x i32> %70, %65
  %75 = mul nsw <4 x i32> %73, %66
  %76 = or i64 %46, 24
  %77 = getelementptr inbounds i32, i32* %34, i64 %76
  %78 = bitcast i32* %77 to <4 x i32>*
  %79 = load <4 x i32>, <4 x i32>* %78, align 4
  %80 = getelementptr inbounds i32, i32* %77, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4
  %83 = mul nsw <4 x i32> %79, %74
  %84 = mul nsw <4 x i32> %82, %75
  %85 = add i64 %46, 32
  %86 = add i64 %49, -4
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %45, !llvm.loop !2

88:                                               ; preds = %45, %36
  %89 = phi <4 x i32> [ undef, %36 ], [ %83, %45 ]
  %90 = phi <4 x i32> [ undef, %36 ], [ %84, %45 ]
  %91 = phi i64 [ 0, %36 ], [ %85, %45 ]
  %92 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %36 ], [ %83, %45 ]
  %93 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %36 ], [ %84, %45 ]
  %94 = icmp eq i64 %41, 0
  br i1 %94, label %111, label %95

95:                                               ; preds = %88, %95
  %96 = phi i64 [ %108, %95 ], [ %91, %88 ]
  %97 = phi <4 x i32> [ %106, %95 ], [ %92, %88 ]
  %98 = phi <4 x i32> [ %107, %95 ], [ %93, %88 ]
  %99 = phi i64 [ %109, %95 ], [ %41, %88 ]
  %100 = getelementptr inbounds i32, i32* %34, i64 %96
  %101 = bitcast i32* %100 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4
  %103 = getelementptr inbounds i32, i32* %100, i64 4
  %104 = bitcast i32* %103 to <4 x i32>*
  %105 = load <4 x i32>, <4 x i32>* %104, align 4
  %106 = mul nsw <4 x i32> %102, %97
  %107 = mul nsw <4 x i32> %105, %98
  %108 = add i64 %96, 8
  %109 = add i64 %99, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %95, !llvm.loop !4

111:                                              ; preds = %95, %88
  %112 = phi <4 x i32> [ %89, %88 ], [ %106, %95 ]
  %113 = phi <4 x i32> [ %90, %88 ], [ %107, %95 ]
  %114 = mul <4 x i32> %113, %112
  %115 = shufflevector <4 x i32> %114, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %116 = mul <4 x i32> %114, %115
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %118 = mul <4 x i32> %116, %117
  %119 = extractelement <4 x i32> %118, i32 0
  %120 = icmp eq i64 %37, %13
  br i1 %120, label %132, label %121

121:                                              ; preds = %111, %33
  %122 = phi i64 [ 0, %33 ], [ %37, %111 ]
  %123 = phi i32 [ 1, %33 ], [ %119, %111 ]
  br label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %130, %124 ], [ %122, %121 ]
  %126 = phi i32 [ %129, %124 ], [ %123, %121 ]
  %127 = getelementptr inbounds i32, i32* %34, i64 %125
  %128 = load i32, i32* %127, align 4
  %129 = mul nsw i32 %128, %126
  %130 = add nuw nsw i64 %125, 1
  %131 = icmp eq i64 %130, %13
  br i1 %131, label %132, label %124, !llvm.loop !6

132:                                              ; preds = %124, %111
  %133 = phi i32 [ %119, %111 ], [ %129, %124 ]
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %181

135:                                              ; preds = %132
  br i1 %9, label %136, label %142

136:                                              ; preds = %135
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = icmp eq i32* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %136
  %141 = bitcast i32* %138 to i8*
  tail call void @_ZdaPv(i8* %141) #5
  br label %142

142:                                              ; preds = %135, %136, %140
  store i32 1, i32* %5, align 8
  %143 = bitcast %union.anon* %10 to i32*
  store i32 1, i32* %143, align 4
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = icmp sgt i32 %145, 5
  br i1 %146, label %147, label %153

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 0
  %149 = load i32*, i32** %148, align 8
  %150 = icmp eq i32* %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %147
  %152 = bitcast i32* %149 to i8*
  tail call void @_ZdaPv(i8* %152) #5
  br label %153

153:                                              ; preds = %142, %147, %151
  store i32 1, i32* %144, align 8
  %154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %155 = bitcast %union.anon* %154 to i32*
  store i32 1, i32* %155, align 4
  %156 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %2, i64 0, i32 0
  store i8 1, i8* %156, align 4
  %157 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %2, i64 0, i32 1, i64 0
  store i32 0, i32* %157, align 4
  br label %327

158:                                              ; preds = %210
  br i1 %214, label %159, label %165

159:                                              ; preds = %158
  %160 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1, i32 0
  %161 = load i32*, i32** %160, align 8
  %162 = icmp eq i32* %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %159
  %164 = bitcast i32* %161 to i8*
  tail call void @_ZdaPv(i8* %164) #5
  br label %165

165:                                              ; preds = %163, %159, %158
  store i32 %212, i32* %5, align 8
  %166 = icmp sgt i32 %212, 5
  br i1 %166, label %167, label %173

167:                                              ; preds = %165
  %168 = sext i32 %212 to i64
  %169 = shl nuw nsw i64 %168, 2
  %170 = tail call i8* @_Znam(i64 %169) #5
  %171 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1, i32 0
  %172 = bitcast i32** %171 to i8**
  store i8* %170, i8** %172, align 8
  br label %173

173:                                              ; preds = %167, %165
  %174 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %174, i8 -86, i64 24, i1 false)
  %175 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %176 = load i32, i32* %175, align 8
  %177 = icmp sgt i32 %176, 5
  %178 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %179 = bitcast %union.anon* %178 to [5 x i32]*
  %180 = getelementptr inbounds %union.anon, %union.anon* %178, i64 0, i32 0
  br label %241

181:                                              ; preds = %132, %210
  %182 = phi i32 [ %211, %210 ], [ %6, %132 ]
  %183 = phi i64 [ %213, %210 ], [ 0, %132 ]
  %184 = phi i1 [ %214, %210 ], [ %9, %132 ]
  %185 = phi i32 [ %212, %210 ], [ 0, %132 ]
  br i1 %184, label %186, label %189

186:                                              ; preds = %181
  %187 = load i32*, i32** %12, align 8
  %188 = getelementptr inbounds i32, i32* %187, i64 %183
  br label %191

189:                                              ; preds = %181
  %190 = getelementptr inbounds [5 x i32], [5 x i32]* %11, i64 0, i64 %183
  br label %191

191:                                              ; preds = %186, %189
  %192 = phi i32* [ %188, %186 ], [ %190, %189 ]
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %210, label %195

195:                                              ; preds = %191
  br i1 %184, label %196, label %202

196:                                              ; preds = %195
  %197 = load i32*, i32** %12, align 8
  %198 = getelementptr inbounds i32, i32* %197, i64 %183
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %185 to i64
  %201 = getelementptr inbounds i32, i32* %197, i64 %200
  store i32 %199, i32* %201, align 4
  br label %207

202:                                              ; preds = %195
  %203 = getelementptr inbounds [5 x i32], [5 x i32]* %11, i64 0, i64 %183
  %204 = load i32, i32* %203, align 4
  %205 = sext i32 %185 to i64
  %206 = getelementptr inbounds [5 x i32], [5 x i32]* %11, i64 0, i64 %205
  store i32 %204, i32* %206, align 4
  br label %207

207:                                              ; preds = %196, %202
  %208 = add nsw i32 %185, 1
  %209 = load i32, i32* %5, align 8
  br label %210

210:                                              ; preds = %191, %207
  %211 = phi i32 [ %182, %191 ], [ %209, %207 ]
  %212 = phi i32 [ %185, %191 ], [ %208, %207 ]
  %213 = add nuw nsw i64 %183, 1
  %214 = icmp sgt i32 %211, 5
  %215 = icmp eq i64 %213, %13
  br i1 %215, label %158, label %181

216:                                              ; preds = %272
  br i1 %276, label %217, label %223

217:                                              ; preds = %216
  %218 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 0
  %219 = load i32*, i32** %218, align 8
  %220 = icmp eq i32* %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %217
  %222 = bitcast i32* %219 to i8*
  tail call void @_ZdaPv(i8* %222) #5
  br label %223

223:                                              ; preds = %221, %217, %216
  store i32 %274, i32* %175, align 8
  %224 = icmp sgt i32 %274, 5
  br i1 %224, label %225, label %232

225:                                              ; preds = %223
  %226 = sext i32 %274 to i64
  %227 = shl nuw nsw i64 %226, 2
  %228 = tail call i8* @_Znam(i64 %227) #5
  %229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 0
  %230 = bitcast i32** %229 to i8**
  store i8* %228, i8** %230, align 8
  %231 = trunc i32 %274 to i8
  store i8 %231, i8* %174, align 4
  br label %235

232:                                              ; preds = %223
  %233 = trunc i32 %274 to i8
  store i8 %233, i8* %174, align 4
  %234 = icmp sgt i32 %274, 0
  br i1 %234, label %235, label %280

235:                                              ; preds = %225, %232
  %236 = zext i32 %274 to i64
  %237 = and i64 %236, 1
  %238 = icmp eq i32 %274, 1
  %239 = sub nsw i64 %236, %237
  %240 = icmp eq i64 %237, 0
  br label %278

241:                                              ; preds = %272, %173
  %242 = phi i32 [ %176, %173 ], [ %273, %272 ]
  %243 = phi i64 [ 0, %173 ], [ %275, %272 ]
  %244 = phi i1 [ %177, %173 ], [ %276, %272 ]
  %245 = phi i32 [ 0, %173 ], [ %274, %272 ]
  br i1 %244, label %246, label %249

246:                                              ; preds = %241
  %247 = load i32*, i32** %180, align 8
  %248 = getelementptr inbounds i32, i32* %247, i64 %243
  br label %251

249:                                              ; preds = %241
  %250 = getelementptr inbounds [5 x i32], [5 x i32]* %179, i64 0, i64 %243
  br label %251

251:                                              ; preds = %246, %249
  %252 = phi i32* [ %248, %246 ], [ %250, %249 ]
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 1
  br i1 %254, label %272, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %2, i64 0, i32 1, i64 %243
  %257 = load i32, i32* %256, align 4
  %258 = sext i32 %245 to i64
  %259 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %258
  store i32 %257, i32* %259, align 4
  br i1 %244, label %260, label %265

260:                                              ; preds = %255
  %261 = load i32*, i32** %180, align 8
  %262 = getelementptr inbounds i32, i32* %261, i64 %243
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds i32, i32* %261, i64 %258
  store i32 %263, i32* %264, align 4
  br label %269

265:                                              ; preds = %255
  %266 = getelementptr inbounds [5 x i32], [5 x i32]* %179, i64 0, i64 %243
  %267 = load i32, i32* %266, align 4
  %268 = getelementptr inbounds [5 x i32], [5 x i32]* %179, i64 0, i64 %258
  store i32 %267, i32* %268, align 4
  br label %269

269:                                              ; preds = %260, %265
  %270 = add nsw i32 %245, 1
  %271 = load i32, i32* %175, align 8
  br label %272

272:                                              ; preds = %251, %269
  %273 = phi i32 [ %242, %251 ], [ %271, %269 ]
  %274 = phi i32 [ %245, %251 ], [ %270, %269 ]
  %275 = add nuw nsw i64 %243, 1
  %276 = icmp sgt i32 %273, 5
  %277 = icmp eq i64 %275, %13
  br i1 %277, label %216, label %241

278:                                              ; preds = %235, %299
  %279 = phi i32 [ 0, %235 ], [ %303, %299 ]
  br i1 %238, label %282, label %305

280:                                              ; preds = %299, %232
  %281 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %2, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %281, i8* nonnull align 4 %174, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #6
  br label %327

282:                                              ; preds = %337, %278
  %283 = phi i32 [ undef, %278 ], [ %338, %337 ]
  %284 = phi i64 [ 0, %278 ], [ %339, %337 ]
  %285 = phi i32 [ -1, %278 ], [ %338, %337 ]
  br i1 %240, label %299, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %284
  %288 = load i32, i32* %287, align 4
  %289 = icmp slt i32 %288, %279
  br i1 %289, label %299, label %290

290:                                              ; preds = %286
  %291 = icmp eq i32 %285, -1
  br i1 %291, label %297, label %292

292:                                              ; preds = %290
  %293 = sext i32 %285 to i64
  %294 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %293
  %295 = load i32, i32* %294, align 4
  %296 = icmp sgt i32 %295, %288
  br i1 %296, label %297, label %299

297:                                              ; preds = %292, %290
  %298 = trunc i64 %284 to i32
  br label %299

299:                                              ; preds = %297, %292, %286, %282
  %300 = phi i32 [ %283, %282 ], [ %298, %297 ], [ %285, %292 ], [ %285, %286 ]
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %301
  store i32 %279, i32* %302, align 4
  %303 = add nuw nsw i32 %279, 1
  %304 = icmp eq i32 %303, %274
  br i1 %304, label %280, label %278

305:                                              ; preds = %278, %337
  %306 = phi i64 [ %339, %337 ], [ 0, %278 ]
  %307 = phi i32 [ %338, %337 ], [ -1, %278 ]
  %308 = phi i64 [ %340, %337 ], [ %239, %278 ]
  %309 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %306
  %310 = load i32, i32* %309, align 4
  %311 = icmp slt i32 %310, %279
  br i1 %311, label %321, label %312

312:                                              ; preds = %305
  %313 = icmp eq i32 %307, -1
  br i1 %313, label %319, label %314

314:                                              ; preds = %312
  %315 = sext i32 %307 to i64
  %316 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %315
  %317 = load i32, i32* %316, align 4
  %318 = icmp sgt i32 %317, %310
  br i1 %318, label %319, label %321

319:                                              ; preds = %314, %312
  %320 = trunc i64 %306 to i32
  br label %321

321:                                              ; preds = %305, %314, %319
  %322 = phi i32 [ %320, %319 ], [ %307, %314 ], [ %307, %305 ]
  %323 = or i64 %306, 1
  %324 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %323
  %325 = load i32, i32* %324, align 4
  %326 = icmp slt i32 %325, %279
  br i1 %326, label %337, label %328

327:                                              ; preds = %14, %3, %280, %153
  ret void

328:                                              ; preds = %321
  %329 = icmp eq i32 %322, -1
  br i1 %329, label %335, label %330

330:                                              ; preds = %328
  %331 = sext i32 %322 to i64
  %332 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %331
  %333 = load i32, i32* %332, align 4
  %334 = icmp sgt i32 %333, %325
  br i1 %334, label %335, label %337

335:                                              ; preds = %330, %328
  %336 = trunc i64 %323 to i32
  br label %337

337:                                              ; preds = %335, %330, %321
  %338 = phi i32 [ %336, %335 ], [ %322, %330 ], [ %322, %321 ]
  %339 = add nuw nsw i64 %306, 2
  %340 = add i64 %308, -2
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %282, label %305
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nocapture readonly dereferenceable(32), %"class.tflite::RuntimeShape"* nocapture readonly dereferenceable(32), %"struct.tflite::TransposeParams"* nocapture readonly dereferenceable(24), %"class.tflite::RuntimeShape"* nocapture, %"class.tflite::RuntimeShape"* nocapture, %"struct.tflite::TransposeParams"* nocapture) local_unnamed_addr #2 {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 5
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  br i1 %9, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %union.anon, %union.anon* %10, i64 0, i32 0
  %13 = load i32*, i32** %12, align 8
  br label %17

14:                                               ; preds = %6
  %15 = bitcast %union.anon* %10 to i32*
  %16 = icmp sgt i32 %8, 0
  br i1 %16, label %17, label %120

17:                                               ; preds = %14, %11
  %18 = phi i32* [ %13, %11 ], [ %15, %14 ]
  %19 = zext i32 %8 to i64
  %20 = icmp ult i32 %8, 8
  br i1 %20, label %106, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 3
  %27 = icmp ult i64 %23, 24
  br i1 %27, label %73, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %70, %30 ]
  %32 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %28 ], [ %68, %30 ]
  %33 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %28 ], [ %69, %30 ]
  %34 = phi i64 [ %29, %28 ], [ %71, %30 ]
  %35 = getelementptr inbounds i32, i32* %18, i64 %31
  %36 = bitcast i32* %35 to <4 x i32>*
  %37 = load <4 x i32>, <4 x i32>* %36, align 4
  %38 = getelementptr inbounds i32, i32* %35, i64 4
  %39 = bitcast i32* %38 to <4 x i32>*
  %40 = load <4 x i32>, <4 x i32>* %39, align 4
  %41 = mul nsw <4 x i32> %37, %32
  %42 = mul nsw <4 x i32> %40, %33
  %43 = or i64 %31, 8
  %44 = getelementptr inbounds i32, i32* %18, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  %46 = load <4 x i32>, <4 x i32>* %45, align 4
  %47 = getelementptr inbounds i32, i32* %44, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  %49 = load <4 x i32>, <4 x i32>* %48, align 4
  %50 = mul nsw <4 x i32> %46, %41
  %51 = mul nsw <4 x i32> %49, %42
  %52 = or i64 %31, 16
  %53 = getelementptr inbounds i32, i32* %18, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  %55 = load <4 x i32>, <4 x i32>* %54, align 4
  %56 = getelementptr inbounds i32, i32* %53, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  %58 = load <4 x i32>, <4 x i32>* %57, align 4
  %59 = mul nsw <4 x i32> %55, %50
  %60 = mul nsw <4 x i32> %58, %51
  %61 = or i64 %31, 24
  %62 = getelementptr inbounds i32, i32* %18, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  %64 = load <4 x i32>, <4 x i32>* %63, align 4
  %65 = getelementptr inbounds i32, i32* %62, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4
  %68 = mul nsw <4 x i32> %64, %59
  %69 = mul nsw <4 x i32> %67, %60
  %70 = add i64 %31, 32
  %71 = add i64 %34, -4
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %30, !llvm.loop !8

73:                                               ; preds = %30, %21
  %74 = phi <4 x i32> [ undef, %21 ], [ %68, %30 ]
  %75 = phi <4 x i32> [ undef, %21 ], [ %69, %30 ]
  %76 = phi i64 [ 0, %21 ], [ %70, %30 ]
  %77 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %21 ], [ %68, %30 ]
  %78 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %21 ], [ %69, %30 ]
  %79 = icmp eq i64 %26, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %73, %80
  %81 = phi i64 [ %93, %80 ], [ %76, %73 ]
  %82 = phi <4 x i32> [ %91, %80 ], [ %77, %73 ]
  %83 = phi <4 x i32> [ %92, %80 ], [ %78, %73 ]
  %84 = phi i64 [ %94, %80 ], [ %26, %73 ]
  %85 = getelementptr inbounds i32, i32* %18, i64 %81
  %86 = bitcast i32* %85 to <4 x i32>*
  %87 = load <4 x i32>, <4 x i32>* %86, align 4
  %88 = getelementptr inbounds i32, i32* %85, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  %90 = load <4 x i32>, <4 x i32>* %89, align 4
  %91 = mul nsw <4 x i32> %87, %82
  %92 = mul nsw <4 x i32> %90, %83
  %93 = add i64 %81, 8
  %94 = add i64 %84, -1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %80, !llvm.loop !9

96:                                               ; preds = %80, %73
  %97 = phi <4 x i32> [ %74, %73 ], [ %91, %80 ]
  %98 = phi <4 x i32> [ %75, %73 ], [ %92, %80 ]
  %99 = mul <4 x i32> %98, %97
  %100 = shufflevector <4 x i32> %99, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %101 = mul <4 x i32> %99, %100
  %102 = shufflevector <4 x i32> %101, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %103 = mul <4 x i32> %101, %102
  %104 = extractelement <4 x i32> %103, i32 0
  %105 = icmp eq i64 %22, %19
  br i1 %105, label %117, label %106

106:                                              ; preds = %96, %17
  %107 = phi i64 [ 0, %17 ], [ %22, %96 ]
  %108 = phi i32 [ 1, %17 ], [ %104, %96 ]
  br label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %115, %109 ], [ %107, %106 ]
  %111 = phi i32 [ %114, %109 ], [ %108, %106 ]
  %112 = getelementptr inbounds i32, i32* %18, i64 %110
  %113 = load i32, i32* %112, align 4
  %114 = mul nsw i32 %113, %111
  %115 = add nuw nsw i64 %110, 1
  %116 = icmp eq i64 %115, %19
  br i1 %116, label %117, label %109, !llvm.loop !10

117:                                              ; preds = %109, %96
  %118 = phi i32 [ %104, %96 ], [ %114, %109 ]
  %119 = sext i32 %118 to i64
  br label %120

120:                                              ; preds = %117, %14
  %121 = phi i64 [ 1, %14 ], [ %119, %117 ]
  %122 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %2, i64 0, i32 0
  %123 = load i8, i8* %122, align 4
  %124 = sext i8 %123 to i32
  %125 = icmp sgt i8 %123, 0
  br i1 %125, label %126, label %149

126:                                              ; preds = %120
  %127 = getelementptr inbounds %union.anon, %union.anon* %10, i64 0, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = bitcast %union.anon* %10 to [5 x i32]*
  %130 = sext i8 %123 to i64
  br label %131

131:                                              ; preds = %126, %139
  %132 = phi i64 [ 0, %126 ], [ %147, %139 ]
  %133 = phi i32 [ 0, %126 ], [ %146, %139 ]
  %134 = phi i64 [ %121, %126 ], [ %145, %139 ]
  %135 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %2, i64 0, i32 1, i64 %132
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i64
  %138 = icmp eq i64 %132, %137
  br i1 %138, label %139, label %149

139:                                              ; preds = %131
  %140 = getelementptr inbounds i32, i32* %128, i64 %132
  %141 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 %132
  %142 = select i1 %9, i32* %140, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = udiv i64 %134, %144
  %146 = add nuw nsw i32 %133, 1
  %147 = add nuw nsw i64 %132, 1
  %148 = icmp slt i64 %147, %130
  br i1 %148, label %131, label %149

149:                                              ; preds = %131, %139, %120
  %150 = phi i32 [ 0, %120 ], [ %133, %131 ], [ %146, %139 ]
  %151 = phi i64 [ %121, %120 ], [ %134, %131 ], [ %145, %139 ]
  %152 = sub i32 %124, %150
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = icmp sgt i32 %154, 5
  br i1 %155, label %156, label %162

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = icmp eq i32* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %156
  %161 = bitcast i32* %158 to i8*
  tail call void @_ZdaPv(i8* %161) #5
  br label %162

162:                                              ; preds = %160, %156, %149
  store i32 %152, i32* %153, align 8
  %163 = icmp sgt i32 %152, 5
  br i1 %163, label %164, label %170

164:                                              ; preds = %162
  %165 = sext i32 %152 to i64
  %166 = shl nuw nsw i64 %165, 2
  %167 = tail call i8* @_Znam(i64 %166) #5
  %168 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %169 = bitcast i32** %168 to i8**
  store i8* %167, i8** %169, align 8
  br label %170

170:                                              ; preds = %162, %164
  %171 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %172 = load i32, i32* %171, align 8
  %173 = icmp sgt i32 %172, 5
  br i1 %173, label %174, label %180

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = icmp eq i32* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %174
  %179 = bitcast i32* %176 to i8*
  tail call void @_ZdaPv(i8* %179) #5
  br label %180

180:                                              ; preds = %178, %174, %170
  store i32 %152, i32* %171, align 8
  br i1 %163, label %181, label %187

181:                                              ; preds = %180
  %182 = sext i32 %152 to i64
  %183 = shl nuw nsw i64 %182, 2
  %184 = tail call i8* @_Znam(i64 %183) #5
  %185 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %186 = bitcast i32** %185 to i8**
  store i8* %184, i8** %186, align 8
  br label %187

187:                                              ; preds = %180, %181
  %188 = trunc i32 %152 to i8
  %189 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %5, i64 0, i32 0
  store i8 %188, i8* %189, align 4
  %190 = load i8, i8* %122, align 4
  %191 = sext i8 %190 to i32
  %192 = icmp slt i32 %150, %191
  br i1 %192, label %193, label %207

193:                                              ; preds = %187
  %194 = getelementptr inbounds %union.anon, %union.anon* %10, i64 0, i32 0
  %195 = bitcast %union.anon* %10 to [5 x i32]*
  %196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %197 = bitcast %union.anon* %196 to [5 x i32]*
  %198 = getelementptr inbounds %union.anon, %union.anon* %196, i64 0, i32 0
  %199 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %201 = getelementptr inbounds %union.anon, %union.anon* %200, i64 0, i32 0
  %202 = bitcast %union.anon* %200 to [5 x i32]*
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %204 = bitcast %union.anon* %203 to [5 x i32]*
  %205 = getelementptr inbounds %union.anon, %union.anon* %203, i64 0, i32 0
  %206 = zext i32 %150 to i64
  br label %215

207:                                              ; preds = %248, %187
  %208 = icmp sgt i32 %152, 0
  br i1 %208, label %209, label %259

209:                                              ; preds = %207
  %210 = zext i32 %152 to i64
  %211 = and i64 %210, 1
  %212 = icmp eq i32 %152, 1
  %213 = sub nsw i64 %210, %211
  %214 = icmp eq i64 %211, 0
  br label %257

215:                                              ; preds = %193, %248
  %216 = phi i64 [ %206, %193 ], [ %253, %248 ]
  %217 = sub nuw nsw i64 %216, %206
  %218 = load i32, i32* %7, align 8
  %219 = icmp sgt i32 %218, 5
  %220 = load i32*, i32** %194, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 %216
  %222 = getelementptr inbounds [5 x i32], [5 x i32]* %195, i64 0, i64 %216
  %223 = select i1 %219, i32* %221, i32* %222
  %224 = load i32, i32* %223, align 4
  %225 = load i32, i32* %153, align 8
  %226 = icmp sgt i32 %225, 5
  br i1 %226, label %227, label %230

227:                                              ; preds = %215
  %228 = load i32*, i32** %198, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 %217
  br label %232

230:                                              ; preds = %215
  %231 = getelementptr inbounds [5 x i32], [5 x i32]* %197, i64 0, i64 %217
  br label %232

232:                                              ; preds = %227, %230
  %233 = phi i32* [ %229, %227 ], [ %231, %230 ]
  store i32 %224, i32* %233, align 4
  %234 = load i32, i32* %199, align 8
  %235 = icmp sgt i32 %234, 5
  %236 = load i32*, i32** %201, align 8
  %237 = getelementptr inbounds i32, i32* %236, i64 %216
  %238 = getelementptr inbounds [5 x i32], [5 x i32]* %202, i64 0, i64 %216
  %239 = select i1 %235, i32* %237, i32* %238
  %240 = load i32, i32* %239, align 4
  %241 = load i32, i32* %171, align 8
  %242 = icmp sgt i32 %241, 5
  br i1 %242, label %243, label %246

243:                                              ; preds = %232
  %244 = load i32*, i32** %205, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 %217
  br label %248

246:                                              ; preds = %232
  %247 = getelementptr inbounds [5 x i32], [5 x i32]* %204, i64 0, i64 %217
  br label %248

248:                                              ; preds = %243, %246
  %249 = phi i32* [ %245, %243 ], [ %247, %246 ]
  store i32 %240, i32* %249, align 4
  %250 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %2, i64 0, i32 1, i64 %216
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %5, i64 0, i32 1, i64 %217
  store i32 %251, i32* %252, align 4
  %253 = add nuw nsw i64 %216, 1
  %254 = load i8, i8* %122, align 4
  %255 = sext i8 %254 to i64
  %256 = icmp slt i64 %253, %255
  br i1 %256, label %215, label %207

257:                                              ; preds = %209, %277
  %258 = phi i32 [ 0, %209 ], [ %281, %277 ]
  br i1 %212, label %260, label %283

259:                                              ; preds = %277, %207
  ret i64 %151

260:                                              ; preds = %314, %257
  %261 = phi i32 [ undef, %257 ], [ %315, %314 ]
  %262 = phi i64 [ 0, %257 ], [ %316, %314 ]
  %263 = phi i32 [ -1, %257 ], [ %315, %314 ]
  br i1 %214, label %277, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %5, i64 0, i32 1, i64 %262
  %266 = load i32, i32* %265, align 4
  %267 = icmp slt i32 %266, %258
  br i1 %267, label %277, label %268

268:                                              ; preds = %264
  %269 = icmp eq i32 %263, -1
  br i1 %269, label %275, label %270

270:                                              ; preds = %268
  %271 = sext i32 %263 to i64
  %272 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %5, i64 0, i32 1, i64 %271
  %273 = load i32, i32* %272, align 4
  %274 = icmp sgt i32 %273, %266
  br i1 %274, label %275, label %277

275:                                              ; preds = %270, %268
  %276 = trunc i64 %262 to i32
  br label %277

277:                                              ; preds = %275, %270, %264, %260
  %278 = phi i32 [ %261, %260 ], [ %276, %275 ], [ %263, %270 ], [ %263, %264 ]
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %5, i64 0, i32 1, i64 %279
  store i32 %258, i32* %280, align 4
  %281 = add nuw nsw i32 %258, 1
  %282 = icmp eq i32 %281, %152
  br i1 %282, label %259, label %257

283:                                              ; preds = %257, %314
  %284 = phi i64 [ %316, %314 ], [ 0, %257 ]
  %285 = phi i32 [ %315, %314 ], [ -1, %257 ]
  %286 = phi i64 [ %317, %314 ], [ %213, %257 ]
  %287 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %5, i64 0, i32 1, i64 %284
  %288 = load i32, i32* %287, align 4
  %289 = icmp slt i32 %288, %258
  br i1 %289, label %299, label %290

290:                                              ; preds = %283
  %291 = icmp eq i32 %285, -1
  br i1 %291, label %297, label %292

292:                                              ; preds = %290
  %293 = sext i32 %285 to i64
  %294 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %5, i64 0, i32 1, i64 %293
  %295 = load i32, i32* %294, align 4
  %296 = icmp sgt i32 %295, %288
  br i1 %296, label %297, label %299

297:                                              ; preds = %292, %290
  %298 = trunc i64 %284 to i32
  br label %299

299:                                              ; preds = %283, %292, %297
  %300 = phi i32 [ %298, %297 ], [ %285, %292 ], [ %285, %283 ]
  %301 = or i64 %284, 1
  %302 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %5, i64 0, i32 1, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = icmp slt i32 %303, %258
  br i1 %304, label %314, label %305

305:                                              ; preds = %299
  %306 = icmp eq i32 %300, -1
  br i1 %306, label %312, label %307

307:                                              ; preds = %305
  %308 = sext i32 %300 to i64
  %309 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %5, i64 0, i32 1, i64 %308
  %310 = load i32, i32* %309, align 4
  %311 = icmp sgt i32 %310, %303
  br i1 %311, label %312, label %314

312:                                              ; preds = %307, %305
  %313 = trunc i64 %301 to i32
  br label %314

314:                                              ; preds = %312, %307, %299
  %315 = phi i32 [ %313, %312 ], [ %300, %307 ], [ %300, %299 ]
  %316 = add nuw nsw i64 %284, 2
  %317 = add i64 %286, -2
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %260, label %283
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !7, !3}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !5}
!10 = distinct !{!10, !7, !3}
