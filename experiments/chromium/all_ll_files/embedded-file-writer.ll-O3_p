; ModuleID = '../../v8/src/snapshot/embedded/embedded-file-writer.cc'
source_filename = "../../v8/src/snapshot/embedded/embedded-file-writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::EmbeddedFileWriter" = type { %"class.v8::internal::EmbeddedFileWriterInterface", [1711 x %"class.std::__1::vector"], [1711 x %"class.std::__1::vector.1"], %"class.std::__1::map", %"class.std::__1::vector.21", i8*, i8*, i8*, i8* }
%"class.v8::internal::EmbeddedFileWriterInterface" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.v8::internal::LabelInfo"*, %"struct.v8::internal::LabelInfo"*, %"class.std::__1::__compressed_pair.8" }
%"struct.v8::internal::LabelInfo" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.v8::internal::LabelInfo"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { i8**, i8**, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i8** }
%"class.v8::internal::PlatformEmbeddedFileWriterBase" = type { i32 (...)**, %struct._IO_FILE* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::internal::EmbeddedData" = type <{ i8*, i32, [4 x i8], i8*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [256 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::SourcePositionTableIterator" = type { %"class.v8::internal::Vector.28", %"class.v8::internal::Handle", i32, [4 x i8], %"struct.v8::internal::PositionTableEntry", i32, i32 }
%"class.v8::internal::Vector.28" = type { i8*, i64 }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"struct.v8::internal::PositionTableEntry" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.686", %"class.std::__1::unique_ptr.707", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.717", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.858", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.871", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.881", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.886", %"struct.std::__1::atomic.193", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.961", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1004"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1013", i32, i8, i8, i32, i32, %"class.std::__1::vector.1019", %"class.std::__1::vector.1019", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1026", i64, %"class.std::__1::unordered_map.1027", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.582", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.201", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1083", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1121", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1155", %"class.std::__1::vector.1159", %"class.std::__1::vector.1159", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.33", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.33" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.57", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.57", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.57", i64, i64, %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.67", %"class.std::__1::vector.71", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.202", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.57", i64, i8, %"struct.std::__1::atomic.57", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.206", %"class.std::__1::vector.206", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.219", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.491", %"class.std::__1::unique_ptr.491", %"class.std::__1::unique_ptr.497", %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.509", %"class.std::__1::unique_ptr.515", %"class.std::__1::shared_ptr.521", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.544", %"class.std::__1::unique_ptr.570", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.576", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.589", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.371", i8, [7 x i8], %"class.std::__1::unordered_map.595", %"class.std::__1::unordered_map.621", %"class.std::__1::unordered_map.595", %"class.std::__1::unordered_map.645", %"class.std::__1::vector.673", i8, %"class.std::__1::unique_ptr.680", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.38", %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.53", [4 x i8] }>
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.62", %"struct.std::__1::atomic.62", %"struct.std::__1::atomic.62" }
%"struct.std::__1::atomic.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i64 }
%"struct.std::__1::atomic.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__cxx_atomic_impl.69" }
%"struct.std::__1::__cxx_atomic_impl.69" = type { %"struct.std::__1::__cxx_atomic_base_impl.70" }
%"struct.std::__1::__cxx_atomic_base_impl.70" = type { i32 }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"struct.std::__1::pair.73"*, %"struct.std::__1::pair.73"*, %"class.std::__1::__compressed_pair.74" }
%"struct.std::__1::pair.73" = type opaque
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::pair.73"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.57", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.144" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.57"*, %"class.std::__1::unique_ptr.138" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.57", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.79", %"class.std::__1::vector.79", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.81" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.86" }
%"class.std::__1::__hash_table.86" = type <{ %"class.std::__1::unique_ptr.87", %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.104", [4 x i8] }>
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base.90"** }
%"struct.std::__1::__hash_node_base.90" = type { %"struct.std::__1::__hash_node_base.90"* }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::__bucket_list_deallocator.92" }
%"class.std::__1::__bucket_list_deallocator.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base.90" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.62", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.127", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.57"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.62", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.62", %"struct.std::__1::atomic.109", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__cxx_atomic_impl.111" }
%"struct.std::__1::__cxx_atomic_impl.111" = type { %"struct.std::__1::__cxx_atomic_base_impl.112" }
%"struct.std::__1::__cxx_atomic_base_impl.112" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.113" }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.115" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.127" = type { %"struct.std::__1::__atomic_base.128" }
%"struct.std::__1::__atomic_base.128" = type { %"struct.std::__1::__cxx_atomic_impl.129" }
%"struct.std::__1::__cxx_atomic_impl.129" = type { %"struct.std::__1::__cxx_atomic_base_impl.130" }
%"struct.std::__1::__cxx_atomic_base_impl.130" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.131", i8, [7 x i8] }>
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { i64*, i64*, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.57", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { %"struct.std::__1::pair.146"*, %"struct.std::__1::pair.146"*, %"class.std::__1::__compressed_pair.147" }
%"struct.std::__1::pair.146" = type { i32, i64 }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.std::__1::pair.146"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.57", i64, %"struct.std::__1::atomic.57" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.57", i32, %"struct.std::__1::atomic.57", %"class.v8::base::Mutex", %"struct.std::__1::atomic.57" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.152" }
%"class.std::__1::unordered_map.152" = type { %"class.std::__1::__hash_table.153" }
%"class.std::__1::__hash_table.153" = type <{ %"class.std::__1::unique_ptr.154", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.174", [4 x i8] }>
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::__hash_node_base.157"** }
%"struct.std::__1::__hash_node_base.157" = type { %"struct.std::__1::__hash_node_base.157"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator.159" }
%"class.std::__1::__bucket_list_deallocator.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base.157" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.180", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.182" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1088", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1092", %"class.std::__1::unique_ptr.1098", %"class.std::__1::unique_ptr.515", %"class.std::__1::vector.1104", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1088" = type { %"struct.std::__1::__atomic_base.1089" }
%"struct.std::__1::__atomic_base.1089" = type { %"struct.std::__1::__cxx_atomic_impl.1090" }
%"struct.std::__1::__cxx_atomic_impl.1090" = type { %"struct.std::__1::__cxx_atomic_base_impl.1091" }
%"struct.std::__1::__cxx_atomic_base_impl.1091" = type { i32 }
%"class.std::__1::unique_ptr.1092" = type { %"class.std::__1::__compressed_pair.1093" }
%"class.std::__1::__compressed_pair.1093" = type { %"struct.std::__1::__compressed_pair_elem.1094" }
%"struct.std::__1::__compressed_pair_elem.1094" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.851" }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { i64**, i64**, %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { i64** }
%"class.std::__1::unique_ptr.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.851", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1104" = type { %"class.std::__1::__vector_base.1105" }
%"class.std::__1::__vector_base.1105" = type { %"struct.std::__1::pair.1106"*, %"struct.std::__1::pair.1106"*, %"class.std::__1::__compressed_pair.1107" }
%"struct.std::__1::pair.1106" = type opaque
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::pair.1106"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.193", %"struct.std::__1::atomic.197", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.57" }
%"struct.std::__1::atomic.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.57", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.201" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.202" = type { %"struct.std::__1::__atomic_base.203" }
%"struct.std::__1::__atomic_base.203" = type { %"struct.std::__1::__cxx_atomic_impl.204" }
%"struct.std::__1::__cxx_atomic_impl.204" = type { %"struct.std::__1::__cxx_atomic_base_impl.205" }
%"struct.std::__1::__cxx_atomic_base_impl.205" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i64 }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.208" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.267", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.321", %"class.std::__1::vector.321", %"class.std::__1::vector.321", %"class.std::__1::vector.328", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.222", %"class.std::__1::vector.223", %"class.std::__1::vector.230", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.222" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.223" = type { %"class.std::__1::__vector_base.224" }
%"class.std::__1::__vector_base.224" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.225" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.230" = type { %"class.std::__1::__vector_base.231" }
%"class.std::__1::__vector_base.231" = type { %"class.std::__1::unique_ptr.232"*, %"class.std::__1::unique_ptr.232"*, %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::unique_ptr.232" = type opaque
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.std::__1::unique_ptr.232"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.238", %"class.v8::internal::Worklist.240", %"class.v8::internal::Worklist.240", %"class.v8::internal::Worklist.240", %"class.v8::internal::Worklist.242", %"class.v8::internal::Worklist.244", %"class.v8::internal::Worklist.246", %"class.v8::internal::Worklist.248", %"class.v8::internal::Worklist.250", %"class.v8::internal::Worklist.252" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.v8::internal::Worklist.238" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.v8::internal::Worklist.240" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.v8::internal::Worklist.242" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.v8::internal::Worklist.244" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.v8::internal::Worklist.246" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.v8::internal::Worklist.248" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.v8::internal::Worklist.250" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.v8::internal::Worklist.252" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.57" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.254", i8, i64 }
%"class.std::__1::vector.254" = type { %"class.std::__1::__vector_base.255" }
%"class.std::__1::__vector_base.255" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.270" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.222"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.270" = type { %"class.std::__1::__hash_table.271" }
%"class.std::__1::__hash_table.271" = type <{ %"class.std::__1::unique_ptr.272", %"class.std::__1::__compressed_pair.282", %"class.std::__1::__compressed_pair.287", %"class.std::__1::__compressed_pair.290", [4 x i8] }>
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274", %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"struct.std::__1::__hash_node_base.275"** }
%"struct.std::__1::__hash_node_base.275" = type { %"struct.std::__1::__hash_node_base.275"* }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.std::__1::__bucket_list_deallocator.277" }
%"class.std::__1::__bucket_list_deallocator.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::__hash_node_base.275" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.297" }
%"class.std::__1::unordered_map.297" = type { %"class.std::__1::__hash_table.298" }
%"class.std::__1::__hash_table.298" = type <{ %"class.std::__1::unique_ptr.299", %"class.std::__1::__compressed_pair.309", %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.317", [4 x i8] }>
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301", %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.std::__1::__hash_node_base.302"** }
%"struct.std::__1::__hash_node_base.302" = type { %"struct.std::__1::__hash_node_base.302"* }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.std::__1::__bucket_list_deallocator.304" }
%"class.std::__1::__bucket_list_deallocator.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.std::__1::__hash_node_base.302" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.328" = type { %"class.std::__1::__vector_base.329" }
%"class.std::__1::__vector_base.329" = type { %"struct.std::__1::pair.330"*, %"struct.std::__1::pair.330"*, %"class.std::__1::__compressed_pair.331" }
%"struct.std::__1::pair.330" = type opaque
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::pair.330"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.336", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.321"], [3 x %"class.std::__1::vector.321"], i8, %"struct.std::__1::atomic.193", [6 x i8], %"class.std::__1::vector.321", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.346"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.321", %"class.std::__1::vector.321", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.346" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.57", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.371", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.364"], %"class.std::__1::unique_ptr.336" }
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.403", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.407", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.412" }
%"struct.std::__1::atomic.403" = type { %"struct.std::__1::__atomic_base.404" }
%"struct.std::__1::__atomic_base.404" = type { %"struct.std::__1::__cxx_atomic_impl.405" }
%"struct.std::__1::__cxx_atomic_impl.405" = type { %"struct.std::__1::__cxx_atomic_base_impl.406" }
%"struct.std::__1::__cxx_atomic_base_impl.406" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.407" = type { %"struct.std::__1::__atomic_base.408" }
%"struct.std::__1::__atomic_base.408" = type { %"struct.std::__1::__cxx_atomic_impl.409" }
%"struct.std::__1::__cxx_atomic_impl.409" = type { %"struct.std::__1::__cxx_atomic_base_impl.410" }
%"struct.std::__1::__cxx_atomic_base_impl.410" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.412" = type { %"class.std::__1::__hash_table.413" }
%"class.std::__1::__hash_table.413" = type <{ %"class.std::__1::unique_ptr.414", %"class.std::__1::__compressed_pair.424", %"class.std::__1::__compressed_pair.429", %"class.std::__1::__compressed_pair.432", [4 x i8] }>
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416", %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.417"** }
%"struct.std::__1::__hash_node_base.417" = type { %"struct.std::__1::__hash_node_base.417"* }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.std::__1::__bucket_list_deallocator.419" }
%"class.std::__1::__bucket_list_deallocator.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"struct.std::__1::__hash_node_base.417" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.336", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.193", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.442", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.442" = type { %"class.std::__1::__hash_table.443" }
%"class.std::__1::__hash_table.443" = type <{ %"class.std::__1::unique_ptr.444", %"class.std::__1::__compressed_pair.454", %"class.std::__1::__compressed_pair.459", %"class.std::__1::__compressed_pair.462", [4 x i8] }>
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446", %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"struct.std::__1::__hash_node_base.447"** }
%"struct.std::__1::__hash_node_base.447" = type { %"struct.std::__1::__hash_node_base.447"* }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.std::__1::__bucket_list_deallocator.449" }
%"class.std::__1::__bucket_list_deallocator.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"struct.std::__1::__hash_node_base.447" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.478" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.521" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.540", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.522", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.525", %"class.std::__1::set.533" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.525" = type { %"class.std::__1::__tree.526" }
%"class.std::__1::__tree.526" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::set.533" = type { %"class.std::__1::__tree.534" }
%"class.std::__1::__tree.534" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.540" = type { %"struct.std::__1::__atomic_base.541" }
%"struct.std::__1::__atomic_base.541" = type { %"struct.std::__1::__cxx_atomic_impl.542" }
%"struct.std::__1::__cxx_atomic_impl.542" = type { %"struct.std::__1::__cxx_atomic_base_impl.543" }
%"struct.std::__1::__cxx_atomic_base_impl.543" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.544" = type { %"class.std::__1::__hash_table.545" }
%"class.std::__1::__hash_table.545" = type <{ %"class.std::__1::unique_ptr.546", %"class.std::__1::__compressed_pair.556", %"class.std::__1::__compressed_pair.561", %"class.std::__1::__compressed_pair.564", [4 x i8] }>
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548", %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"struct.std::__1::__hash_node_base.549"** }
%"struct.std::__1::__hash_node_base.549" = type { %"struct.std::__1::__hash_node_base.549"* }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.std::__1::__bucket_list_deallocator.551" }
%"class.std::__1::__bucket_list_deallocator.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"struct.std::__1::__hash_node_base.549" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.582", %"class.std::__1::vector.582" }
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::unordered_map.621" = type { %"class.std::__1::__hash_table.622" }
%"class.std::__1::__hash_table.622" = type <{ %"class.std::__1::unique_ptr.623", %"class.std::__1::__compressed_pair.633", %"class.std::__1::__compressed_pair.638", %"class.std::__1::__compressed_pair.641", [4 x i8] }>
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625", %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"struct.std::__1::__hash_node_base.626"** }
%"struct.std::__1::__hash_node_base.626" = type { %"struct.std::__1::__hash_node_base.626"* }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.std::__1::__bucket_list_deallocator.628" }
%"class.std::__1::__bucket_list_deallocator.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"struct.std::__1::__hash_node_base.626" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::unordered_map.595" = type { %"class.std::__1::__hash_table.596" }
%"class.std::__1::__hash_table.596" = type <{ %"class.std::__1::unique_ptr.597", %"class.std::__1::__compressed_pair.607", %"class.std::__1::__compressed_pair.612", %"class.std::__1::__compressed_pair.615", [4 x i8] }>
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599", %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"struct.std::__1::__hash_node_base.600"** }
%"struct.std::__1::__hash_node_base.600" = type { %"struct.std::__1::__hash_node_base.600"* }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.std::__1::__bucket_list_deallocator.602" }
%"class.std::__1::__bucket_list_deallocator.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.600" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::unordered_map.645" = type { %"class.std::__1::__hash_table.646" }
%"class.std::__1::__hash_table.646" = type <{ %"class.std::__1::unique_ptr.647", %"class.std::__1::__compressed_pair.657", %"class.std::__1::__compressed_pair.662", %"class.std::__1::__compressed_pair.667", [4 x i8] }>
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649", %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"struct.std::__1::__hash_node_base.650"** }
%"struct.std::__1::__hash_node_base.650" = type { %"struct.std::__1::__hash_node_base.650"* }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.std::__1::__bucket_list_deallocator.652" }
%"class.std::__1::__bucket_list_deallocator.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"struct.std::__1::__hash_node_base.650" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.std::__1::vector.673" = type { %"class.std::__1::__vector_base.674" }
%"class.std::__1::__vector_base.674" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.675" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.582" }
%"class.std::__1::shared_ptr.686" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.180", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.701" }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.690" }
%"class.std::__1::vector.690" = type { %"class.std::__1::__vector_base.691" }
%"class.std::__1::__vector_base.691" = type { %"class.std::__1::unique_ptr.692"*, %"class.std::__1::unique_ptr.692"*, %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.std::__1::unique_ptr.692"* }
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.710", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.710" = type { %"struct.std::__1::__atomic_base.711" }
%"struct.std::__1::__atomic_base.711" = type { %"struct.std::__1::__cxx_atomic_impl.712" }
%"struct.std::__1::__cxx_atomic_impl.712" = type { %"struct.std::__1::__cxx_atomic_base_impl.713" }
%"struct.std::__1::__cxx_atomic_base_impl.713" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.717" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.718", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.718" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.719", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.719" = type { %"class.std::__1::__vector_base.720" }
%"class.std::__1::__vector_base.720" = type { %"class.std::__1::unique_ptr.721"*, %"class.std::__1::unique_ptr.721"*, %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::unique_ptr.721" = type opaque
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.std::__1::unique_ptr.721"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.727 }
%union.anon.727 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.728", %"class.std::__1::unique_ptr.734", %"struct.std::__1::atomic.193", %"class.std::__1::unique_ptr.740", %"class.std::__1::unique_ptr.746", %"class.std::__1::unique_ptr.752", %"class.std::__1::unique_ptr.758", %"class.std::__1::unique_ptr.764", %"class.std::__1::set.770", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.770" = type { %"class.std::__1::__tree.771" }
%"class.std::__1::__tree.771" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.780" }
%"class.v8::internal::TaggedImpl.780" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.779" }
%"class.v8::internal::TaggedImpl.779" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.787", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.793", %"class.v8::internal::DetachableVector.794", %"class.v8::internal::DetachableVector.793", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.794" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.793" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.57", %"class.std::__1::unique_ptr.781", %"class.std::__1::unique_ptr.522" }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.795", %"class.std::__1::vector.801", %"class.std::__1::unique_ptr.808", %"class.std::__1::vector.815", %"class.std::__1::unique_ptr.822", i64, %"class.std::__1::vector.828", %"class.std::__1::vector.836", %"class.std::__1::vector.844", i8, i8, i32 }
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.v8::internal::GlobalHandles::NodeSpace.811"* }
%"class.v8::internal::GlobalHandles::NodeSpace.811" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.817" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.828" = type { %"class.std::__1::__vector_base.829" }
%"class.std::__1::__vector_base.829" = type { %"struct.std::__1::pair.830"*, %"struct.std::__1::pair.830"*, %"class.std::__1::__compressed_pair.831" }
%"struct.std::__1::pair.830" = type opaque
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"struct.std::__1::pair.830"* }
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { %"struct.std::__1::pair.838"*, %"struct.std::__1::pair.838"*, %"class.std::__1::__compressed_pair.839" }
%"struct.std::__1::pair.838" = type opaque
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.std::__1::pair.838"* }
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.846" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.851", %"class.std::__1::vector.858" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.865" }
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { i32*, i32*, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.871" = type { %"struct.std::__1::__atomic_base.872" }
%"struct.std::__1::__atomic_base.872" = type { %"struct.std::__1::__cxx_atomic_impl.873" }
%"struct.std::__1::__cxx_atomic_impl.873" = type { %"struct.std::__1::__cxx_atomic_base_impl.874" }
%"struct.std::__1::__cxx_atomic_base_impl.874" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.881" = type { %"struct.std::__1::__atomic_base.882" }
%"struct.std::__1::__atomic_base.882" = type { %"struct.std::__1::__cxx_atomic_impl.883" }
%"struct.std::__1::__cxx_atomic_impl.883" = type { %"struct.std::__1::__cxx_atomic_base_impl.884" }
%"struct.std::__1::__cxx_atomic_base_impl.884" = type { i32 }
%"class.std::__1::unordered_map.886" = type { %"class.std::__1::__hash_table.887" }
%"class.std::__1::__hash_table.887" = type <{ %"class.std::__1::unique_ptr.888", %"class.std::__1::__compressed_pair.898", %"class.std::__1::__compressed_pair.903", %"class.std::__1::__compressed_pair.906", [4 x i8] }>
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890", %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"struct.std::__1::__hash_node_base.891"** }
%"struct.std::__1::__hash_node_base.891" = type { %"struct.std::__1::__hash_node_base.891"* }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.std::__1::__bucket_list_deallocator.893" }
%"class.std::__1::__bucket_list_deallocator.893" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"struct.std::__1::__hash_node_base.891" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::atomic.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__cxx_atomic_impl.195" }
%"struct.std::__1::__cxx_atomic_impl.195" = type { %"struct.std::__1::__cxx_atomic_base_impl.196" }
%"struct.std::__1::__cxx_atomic_base_impl.196" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.912", %"class.v8::internal::Handle.918", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.919", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.918" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.919" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.920", %"class.std::__1::vector.926", %"class.std::__1::unique_ptr.934", %"class.std::__1::unique_ptr.940", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.946", %"class.std::__1::vector.952", %"struct.std::__1::pair.960" }
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.926" = type { %"class.std::__1::__vector_base.927" }
%"class.std::__1::__vector_base.927" = type { %"class.std::__1::unique_ptr.928"*, %"class.std::__1::unique_ptr.928"*, %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::unique_ptr.928" = type opaque
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"class.std::__1::unique_ptr.928"* }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.940" = type { %"class.std::__1::__compressed_pair.941" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.952" = type { %"class.std::__1::__vector_base.953" }
%"class.std::__1::__vector_base.953" = type { %"struct.std::__1::pair.954"*, %"struct.std::__1::pair.954"*, %"class.std::__1::__compressed_pair.955" }
%"struct.std::__1::pair.954" = type opaque
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"struct.std::__1::pair.954"* }
%"struct.std::__1::pair.960" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.34"*, i16, i8*)*, i8* }
%"class.v8::Local.34" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.961" = type { %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.964", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.964" = type { %"class.std::__1::__hash_table.965" }
%"class.std::__1::__hash_table.965" = type <{ %"class.std::__1::unique_ptr.966", %"class.std::__1::__compressed_pair.976", %"class.std::__1::__compressed_pair.981", %"class.std::__1::__compressed_pair.985", [4 x i8] }>
%"class.std::__1::unique_ptr.966" = type { %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968", %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.968" = type { %"struct.std::__1::__hash_node_base.969"** }
%"struct.std::__1::__hash_node_base.969" = type { %"struct.std::__1::__hash_node_base.969"* }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"class.std::__1::__bucket_list_deallocator.971" }
%"class.std::__1::__bucket_list_deallocator.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"struct.std::__1::__hash_node_base.969" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.999" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.993"**, %"struct.std::__1::pair.993"**, %"struct.std::__1::pair.993"**, %"class.std::__1::__compressed_pair.994" }
%"struct.std::__1::pair.993" = type opaque
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"struct.std::__1::pair.993"** }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1004" = type { %"class.std::__1::__vector_base.1005" }
%"class.std::__1::__vector_base.1005" = type { %"class.v8::internal::Handle.1006"*, %"class.v8::internal::Handle.1006"*, %"class.std::__1::__compressed_pair.1007" }
%"class.v8::internal::Handle.1006" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"class.v8::internal::Handle.1006"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector.1012", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector.1012" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.876", i32, %"class.v8::Local.34" }
%"class.v8::Local.876" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1019" = type { %"class.std::__1::__vector_base.1020" }
%"class.std::__1::__vector_base.1020" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1026" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1027" = type { %"class.std::__1::__hash_table.1028" }
%"class.std::__1::__hash_table.1028" = type <{ %"class.std::__1::unique_ptr.1029", %"class.std::__1::__compressed_pair.1039", %"class.std::__1::__compressed_pair.1044", %"class.std::__1::__compressed_pair.1047", [4 x i8] }>
%"class.std::__1::unique_ptr.1029" = type { %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031", %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1032"** }
%"struct.std::__1::__hash_node_base.1032" = type { %"struct.std::__1::__hash_node_base.1032"* }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.std::__1::__bucket_list_deallocator.1034" }
%"class.std::__1::__bucket_list_deallocator.1034" = type { %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"struct.std::__1::__hash_node_base.1032" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.582" = type { %"class.std::__1::__vector_base.583" }
%"class.std::__1::__vector_base.583" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.201" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1051", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1080", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1081", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1051" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1076, %union.anon.1078, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1076 = type { i64 }
%union.anon.1078 = type { i64 }
%"class.std::__1::weak_ptr.1080" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1081" = type { %"class.v8::PersistentBase.1082" }
%"class.v8::PersistentBase.1082" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1052", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1052" = type { %"class.std::__1::__hash_table.1053" }
%"class.std::__1::__hash_table.1053" = type <{ %"class.std::__1::unique_ptr.1054", %"class.std::__1::__compressed_pair.1064", %"class.std::__1::__compressed_pair.1069", %"class.std::__1::__compressed_pair.1072", [4 x i8] }>
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056", %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"struct.std::__1::__hash_node_base.1057"** }
%"struct.std::__1::__hash_node_base.1057" = type { %"struct.std::__1::__hash_node_base.1057"* }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.std::__1::__bucket_list_deallocator.1059" }
%"class.std::__1::__bucket_list_deallocator.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"struct.std::__1::__hash_node_base.1057" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1112", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.877", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.877" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1129" }
%"class.std::__1::unordered_map.1129" = type { %"class.std::__1::__hash_table.1130" }
%"class.std::__1::__hash_table.1130" = type <{ %"class.std::__1::unique_ptr.1131", %"class.std::__1::__compressed_pair.1141", %"class.std::__1::__compressed_pair.1146", %"class.std::__1::__compressed_pair.1149", [4 x i8] }>
%"class.std::__1::unique_ptr.1131" = type { %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133", %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"struct.std::__1::__hash_node_base.1134"** }
%"struct.std::__1::__hash_node_base.1134" = type { %"struct.std::__1::__hash_node_base.1134"* }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"class.std::__1::__bucket_list_deallocator.1136" }
%"class.std::__1::__bucket_list_deallocator.1136" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"struct.std::__1::__hash_node_base.1134" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1155" = type { %"struct.std::__1::__atomic_base.1156" }
%"struct.std::__1::__atomic_base.1156" = type { %"struct.std::__1::__cxx_atomic_impl.1157" }
%"struct.std::__1::__cxx_atomic_impl.1157" = type { %"struct.std::__1::__cxx_atomic_base_impl.1158" }
%"struct.std::__1::__cxx_atomic_base_impl.1158" = type { %"class.std::__1::vector.1159"* }
%"class.std::__1::vector.1159" = type { %"class.std::__1::__vector_base.1160" }
%"class.std::__1::__vector_base.1160" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1161" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"struct.v8::MemoryRange"* }

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIN2v88internal9LabelInfoENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@_ZN2v88internalL23kDefaultEmbeddedVariantE = internal constant [8 x i8] c"Default\00", align 1
@.str = private unnamed_addr constant [12 x i8] c"Builtins_%s\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"%s_Builtins_%s\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"positions.done()\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"next_source_pos_offset >= i\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"next_label_offset >= i\00", align 1
@.str.6 = private unnamed_addr constant [68 x i8] c"The embedded blob code section starts here. It contains the builtin\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"instruction streams.\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"v8_code_start_for_profiler_\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"v8_%s_embedded_blob_code_\00", align 1
@.str.10 = private unnamed_addr constant [52 x i8] c"Pointer to the beginning of the embedded blob code.\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"v8_%s_embedded_blob_data_\00", align 1
@.str.12 = private unnamed_addr constant [60 x i8] c"Pointer to the beginning of the embedded blob data section.\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"v8_%s_embedded_blob_code_size_\00", align 1
@.str.14 = private unnamed_addr constant [45 x i8] c"The size of the embedded blob code in bytes.\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"v8_%s_embedded_blob_data_size_\00", align 1
@.str.16 = private unnamed_addr constant [53 x i8] c"The size of the embedded blob data section in bytes.\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"construct_stub_create_deopt_addr\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"construct_stub_invoke_deopt_addr\00", align 1
@_ZTVN2v88internal18EmbeddedFileWriterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.v8::internal::EmbeddedFileWriter"*, i8*)* @_ZN2v88internal18EmbeddedFileWriter37LookupOrAddExternallyCompiledFilenameEPKc to i8*), i8* bitcast (i8* (%"class.v8::internal::EmbeddedFileWriter"*, i32)* @_ZNK2v88internal18EmbeddedFileWriter29GetExternallyCompiledFilenameEi to i8*), i8* bitcast (i32 (%"class.v8::internal::EmbeddedFileWriter"*)* @_ZNK2v88internal18EmbeddedFileWriter34GetExternallyCompiledFilenameCountEv to i8*), i8* bitcast (void (%"class.v8::internal::EmbeddedFileWriter"*, %"class.v8::internal::Builtins"*)* @_ZN2v88internal18EmbeddedFileWriter31PrepareBuiltinSourcePositionMapEPNS0_8BuiltinsE to i8*), i8* bitcast (void (%"class.v8::internal::EmbeddedFileWriter"*, i32, i32)* @_ZN2v88internal18EmbeddedFileWriter26PrepareBuiltinLabelInfoMapEii to i8*)] }, align 8
@.str.19 = private unnamed_addr constant [10 x i8] c"size != 0\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"v8_%s_embedded_blob_code_data_\00", align 1
@.str.22 = private unnamed_addr constant [31 x i8] c"v8_%s_embedded_blob_data_data_\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal18EmbeddedFileWriter12WriteBuiltinEPNS0_30PlatformEmbeddedFileWriterBaseEPKNS0_12EmbeddedDataEi(%"class.v8::internal::EmbeddedFileWriter"*, %"class.v8::internal::PlatformEmbeddedFileWriterBase"*, %"class.v8::internal::EmbeddedData"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::EmbeddedVector", align 8
  %6 = alloca %"class.v8::internal::SourcePositionTableIterator", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 6
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN2v88internalL23kDefaultEmbeddedVariantE, i64 0, i64 0)) #13
  %11 = icmp eq i32 %10, 0
  %12 = bitcast %"class.v8::internal::EmbeddedVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %5, i64 0, i32 1, i64 0
  %14 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %5, i64 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %5, i64 0, i32 0, i32 1
  store i64 256, i64* %15, align 8
  %16 = call i8* @_ZN2v88internal8Builtins4nameEi(i32 %3) #14
  br i1 %11, label %17, label %19

17:                                               ; preds = %4
  %18 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %13, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* %16) #14
  br label %21

19:                                               ; preds = %4
  %20 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %13, i64 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i8* %9, i8* %16) #14
  br label %21

21:                                               ; preds = %19, %17
  %22 = load i8*, i8** %14, align 8
  %23 = call i32 @_ZNK2v88internal12EmbeddedData24InstructionSizeOfBuiltinEi(%"class.v8::internal::EmbeddedData"* %2, i32 %3) #14
  %24 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)***
  %25 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)** %25, i64 12
  %27 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)** %26, align 8
  call void %27(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* %22, i32 %23) #14
  %28 = sext i32 %3 to i64
  %29 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 1, i64 %28, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 1, i64 %28, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = ptrtoint i8* %30 to i64
  %35 = sub i64 %33, %34
  %36 = bitcast %"class.v8::internal::SourcePositionTableIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %36) #14
  call void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_6VectorIKhEENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"* nonnull %6, i8* %30, i64 %35, i32 1, i32 0) #14
  %37 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %6, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %41, label %40, !prof !2

40:                                               ; preds = %21
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #15
  unreachable

41:                                               ; preds = %21
  %42 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 2, i64 %28, i32 0, i32 0
  %43 = load %"struct.v8::internal::LabelInfo"*, %"struct.v8::internal::LabelInfo"** %42, align 8
  %44 = call i64 @_ZNK2v88internal12EmbeddedData25InstructionStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"* %2, i32 %3) #14
  %45 = inttoptr i64 %44 to i8*
  %46 = call i32 @_ZNK2v88internal12EmbeddedData24InstructionSizeOfBuiltinEi(%"class.v8::internal::EmbeddedData"* %2, i32 %3) #14
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49, !prof !3

48:                                               ; preds = %41
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0)) #15
  unreachable

49:                                               ; preds = %41
  %50 = add i32 %46, 32
  %51 = and i32 %50, -32
  %52 = load i32, i32* %37, align 8
  %53 = icmp eq i32 %52, -1
  %54 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %6, i64 0, i32 4, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = select i1 %53, i32 %51, i32 %55
  %57 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 2, i64 %28, i32 0, i32 1
  %58 = load %"struct.v8::internal::LabelInfo"*, %"struct.v8::internal::LabelInfo"** %57, align 8
  %59 = icmp eq %"struct.v8::internal::LabelInfo"* %43, %58
  br i1 %59, label %63, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %43, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  br label %63

63:                                               ; preds = %49, %60
  %64 = phi i32 [ %62, %60 ], [ %51, %49 ]
  %65 = icmp eq i32 %51, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)***
  br label %153

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.v8::internal::SourcePositionTableIterator", %"class.v8::internal::SourcePositionTableIterator"* %6, i64 0, i32 4, i32 2
  %70 = bitcast %"class.v8::internal::EmbeddedFileWriter"* %0 to i8* (%"class.v8::internal::EmbeddedFileWriter"*, i32)***
  %71 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32, i8*, i32)***
  %72 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %73 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)***
  br label %77

77:                                               ; preds = %68, %144
  %78 = phi i32 [ 0, %68 ], [ %148, %144 ]
  %79 = phi %"struct.v8::internal::LabelInfo"* [ %43, %68 ], [ %146, %144 ]
  %80 = phi i32 [ %56, %68 ], [ %106, %144 ]
  %81 = phi i32 [ %64, %68 ], [ %145, %144 ]
  %82 = icmp eq i32 %78, %80
  br i1 %82, label %83, label %105

83:                                               ; preds = %77
  %84 = load i64, i64* %69, align 8
  %85 = lshr i64 %84, 21
  %86 = trunc i64 %85 to i32
  %87 = and i32 %86, 1023
  %88 = load i8* (%"class.v8::internal::EmbeddedFileWriter"*, i32)**, i8* (%"class.v8::internal::EmbeddedFileWriter"*, i32)*** %70, align 8
  %89 = getelementptr inbounds i8* (%"class.v8::internal::EmbeddedFileWriter"*, i32)*, i8* (%"class.v8::internal::EmbeddedFileWriter"*, i32)** %88, i64 1
  %90 = load i8* (%"class.v8::internal::EmbeddedFileWriter"*, i32)*, i8* (%"class.v8::internal::EmbeddedFileWriter"*, i32)** %89, align 8
  %91 = call i8* %90(%"class.v8::internal::EmbeddedFileWriter"* %0, i32 %87) #14
  %92 = load i64, i64* %69, align 8
  %93 = lshr i64 %92, 1
  %94 = trunc i64 %93 to i32
  %95 = and i32 %94, 1048575
  %96 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32, i8*, i32)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32, i8*, i32)*** %71, align 8
  %97 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32, i8*, i32)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32, i8*, i32)** %96, i64 11
  %98 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32, i8*, i32)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32, i8*, i32)** %97, align 8
  call void %98(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i32 %87, i8* %91, i32 %95) #14
  call void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"* nonnull %6) #14
  %99 = load i32, i32* %37, align 8
  %100 = icmp eq i32 %99, -1
  %101 = load i32, i32* %54, align 8
  %102 = select i1 %100, i32 %51, i32 %101
  %103 = icmp ult i32 %102, %78
  br i1 %103, label %104, label %105, !prof !3

104:                                              ; preds = %83
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #15
  unreachable

105:                                              ; preds = %83, %77
  %106 = phi i32 [ %102, %83 ], [ %80, %77 ]
  %107 = icmp eq i32 %78, %81
  br i1 %107, label %108, label %144

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %79, i64 0, i32 1
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %108
  %115 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 %115, i64 24, i1 false) #14
  br label %121

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %118, i64 %120) #14
  br label %121

121:                                              ; preds = %114, %116
  %122 = load i8, i8* %74, align 1
  %123 = icmp slt i8 %122, 0
  %124 = load i8*, i8** %75, align 8
  %125 = select i1 %123, i8* %124, i8* %72
  %126 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %76, align 8
  %127 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %126, i64 10
  %128 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %127, align 8
  call void %128(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* %125) #14
  %129 = load i8, i8* %74, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %132) #16
  br label %133

133:                                              ; preds = %121, %131
  %134 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %79, i64 1
  %135 = load %"struct.v8::internal::LabelInfo"*, %"struct.v8::internal::LabelInfo"** %57, align 8
  %136 = icmp eq %"struct.v8::internal::LabelInfo"* %134, %135
  br i1 %136, label %140, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %134, i64 0, i32 0
  %139 = load i32, i32* %138, align 8
  br label %140

140:                                              ; preds = %133, %137
  %141 = phi i32 [ %139, %137 ], [ %51, %133 ]
  %142 = icmp ult i32 %141, %78
  br i1 %142, label %143, label %144, !prof !3

143:                                              ; preds = %140
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #15
  unreachable

144:                                              ; preds = %140, %105
  %145 = phi i32 [ %141, %140 ], [ %81, %105 ]
  %146 = phi %"struct.v8::internal::LabelInfo"* [ %134, %140 ], [ %79, %105 ]
  %147 = icmp ult i32 %145, %106
  %148 = select i1 %147, i32 %145, i32 %106
  %149 = zext i32 %78 to i64
  %150 = getelementptr inbounds i8, i8* %45, i64 %149
  %151 = sub i32 %148, %78
  call void @_ZN2v88internal18EmbeddedFileWriter35WriteBinaryContentsAsInlineAssemblyEPNS0_30PlatformEmbeddedFileWriterBaseEPKhj(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* %150, i32 %151)
  %152 = icmp ult i32 %148, %51
  br i1 %152, label %77, label %153

153:                                              ; preds = %144, %66
  %154 = phi void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** [ %67, %66 ], [ %76, %144 ]
  %155 = load i8*, i8** %14, align 8
  %156 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %154, align 8
  %157 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %156, i64 13
  %158 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %157, align 8
  call void %158(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* %155) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %36) #14
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %12) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

declare i32 @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8*, i64, i8*, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @_ZN2v88internal8Builtins4nameEi(i32) local_unnamed_addr #3

declare i32 @_ZNK2v88internal12EmbeddedData24InstructionSizeOfBuiltinEi(%"class.v8::internal::EmbeddedData"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal27SourcePositionTableIteratorC1ENS0_6VectorIKhEENS1_15IterationFilterENS1_19FunctionEntryFilterE(%"class.v8::internal::SourcePositionTableIterator"*, i8*, i64, i32, i32) unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

declare i64 @_ZNK2v88internal12EmbeddedData25InstructionStartOfBuiltinEi(%"class.v8::internal::EmbeddedData"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal27SourcePositionTableIterator7AdvanceEv(%"class.v8::internal::SourcePositionTableIterator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal18EmbeddedFileWriter18WriteBuiltinLabelsEPNS0_30PlatformEmbeddedFileWriterBaseENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.v8::internal::EmbeddedFileWriter"* nocapture readnone, %"class.v8::internal::PlatformEmbeddedFileWriterBase"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  br label %13

11:                                               ; preds = %3
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i8* [ %10, %8 ], [ %12, %11 ]
  %15 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)***
  %16 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %16, i64 10
  %18 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %17, align 8
  tail call void %18(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* %14) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18EmbeddedFileWriter35WriteBinaryContentsAsInlineAssemblyEPNS0_30PlatformEmbeddedFileWriterBaseEPKhj(%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0 to i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)***
  %5 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %5, i64 21
  %7 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %6, align 8
  %8 = tail call i32 %7(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0) #14
  %9 = tail call i32 @_ZN2v88internal17DataDirectiveSizeENS0_13DataDirectiveE(i32 %8) #14
  %10 = icmp ult i32 %9, %2
  br i1 %10, label %11, label %58

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::PlatformEmbeddedFileWriterBase", %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0, i64 0, i32 1
  %13 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0 to i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)***
  %14 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0 to i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)***
  %15 = shl nsw i32 %9, 1
  %16 = sext i32 %15 to i64
  %17 = add nsw i64 %16, 3
  br label %18

18:                                               ; preds = %11, %47
  %19 = phi i1 [ true, %11 ], [ %51, %47 ]
  %20 = phi i32 [ %9, %11 ], [ %49, %47 ]
  %21 = phi i32 [ 0, %11 ], [ %48, %47 ]
  %22 = phi i32 [ 0, %11 ], [ %20, %47 ]
  br i1 %19, label %23, label %28

23:                                               ; preds = %18
  %24 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)**, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)*** %13, align 8
  %25 = getelementptr inbounds i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)** %24, i64 20
  %26 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)** %25, align 8
  %27 = tail call i32 %26(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0, i32 %8) #14
  br label %31

28:                                               ; preds = %18
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %30 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #14
  br label %31

31:                                               ; preds = %23, %28
  %32 = phi i32 [ %27, %23 ], [ %30, %28 ]
  %33 = add nsw i32 %32, %21
  %34 = zext i32 %22 to i64
  %35 = getelementptr inbounds i8, i8* %1, i64 %34
  %36 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %14, align 8
  %37 = getelementptr inbounds i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %36, i64 22
  %38 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %37, align 8
  %39 = tail call i32 %38(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0, i8* %35) #14
  %40 = add nsw i32 %33, %39
  %41 = sext i32 %40 to i64
  %42 = add nsw i64 %17, %41
  %43 = icmp ugt i64 %42, 100
  br i1 %43, label %44, label %47

44:                                               ; preds = %31
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %12, align 8
  %46 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %45) #14
  br label %47

47:                                               ; preds = %31, %44
  %48 = phi i32 [ 0, %44 ], [ %40, %31 ]
  %49 = add i32 %20, %9
  %50 = icmp ult i32 %49, %2
  %51 = icmp eq i32 %48, 0
  br i1 %50, label %18, label %52

52:                                               ; preds = %47
  br i1 %51, label %58, label %53

53:                                               ; preds = %52
  %54 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)***
  %55 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %55, i64 16
  %57 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %56, align 8
  tail call void %57(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0) #14
  br label %58

58:                                               ; preds = %3, %52, %53
  %59 = phi i32 [ %20, %52 ], [ %20, %53 ], [ 0, %3 ]
  %60 = icmp ult i32 %59, %2
  br i1 %60, label %61, label %107

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.v8::internal::PlatformEmbeddedFileWriterBase", %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0, i64 0, i32 1
  %63 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0 to i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)***
  %64 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0 to i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)***
  %65 = zext i32 %59 to i64
  br label %66

66:                                               ; preds = %95, %61
  %67 = phi i64 [ %65, %61 ], [ %97, %95 ]
  %68 = phi i1 [ true, %61 ], [ %98, %95 ]
  %69 = phi i32 [ 0, %61 ], [ %96, %95 ]
  br i1 %68, label %70, label %75

70:                                               ; preds = %66
  %71 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)**, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)*** %63, align 8
  %72 = getelementptr inbounds i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)** %71, i64 20
  %73 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)** %72, align 8
  %74 = tail call i32 %73(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0, i32 0) #14
  br label %78

75:                                               ; preds = %66
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %62, align 8
  %77 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #14
  br label %78

78:                                               ; preds = %70, %75
  %79 = phi i32 [ %74, %70 ], [ %77, %75 ]
  %80 = add nsw i32 %79, %69
  %81 = getelementptr inbounds i8, i8* %1, i64 %67
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i64
  %84 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)**, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)*** %64, align 8
  %85 = getelementptr inbounds i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)** %84, i64 14
  %86 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)** %85, align 8
  %87 = tail call i32 %86(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0, i64 %83) #14
  %88 = add nsw i32 %80, %87
  %89 = sext i32 %88 to i64
  %90 = add nsw i64 %89, 5
  %91 = icmp ugt i64 %90, 100
  br i1 %91, label %92, label %95

92:                                               ; preds = %78
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %62, align 8
  %94 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %93) #14
  br label %95

95:                                               ; preds = %78, %92
  %96 = phi i32 [ 0, %92 ], [ %88, %78 ]
  %97 = add nuw nsw i64 %67, 1
  %98 = icmp eq i32 %96, 0
  %99 = trunc i64 %97 to i32
  %100 = icmp eq i32 %99, %2
  br i1 %100, label %101, label %66

101:                                              ; preds = %95
  br i1 %98, label %107, label %102

102:                                              ; preds = %101
  %103 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)***
  %104 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %104, i64 16
  %106 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %105, align 8
  tail call void %106(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %0) #14
  br label %107

107:                                              ; preds = %58, %101, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal18EmbeddedFileWriter16WriteCodeSectionEPNS0_30PlatformEmbeddedFileWriterBaseEPKNS0_12EmbeddedDataE(%"class.v8::internal::EmbeddedFileWriter"*, %"class.v8::internal::PlatformEmbeddedFileWriterBase"*, %"class.v8::internal::EmbeddedData"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::EmbeddedVector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)***
  %7 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %7, i64 15
  %9 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %8, align 8
  tail call void %9(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.6, i64 0, i64 0)) #14
  %10 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %6, align 8
  %11 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %10, i64 15
  %12 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %11, align 8
  tail call void %12(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0)) #14
  %13 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)***
  %14 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %14, i64 2
  %16 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %15, align 8
  tail call void %16(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  %17 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)***
  %18 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)** %18, i64 12
  %20 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)** %19, align 8
  tail call void %20(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i32 1) #14
  %21 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)***
  %22 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)**, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)** %22, i64 20
  %24 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i32)** %23, align 8
  %25 = tail call i32 %24(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i32 0) #14
  %26 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)***
  %27 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)**, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)** %27, i64 14
  %29 = load i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)*, i32 (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i64)** %28, align 8
  %30 = tail call i32 %29(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i64 204) #14
  %31 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %13, align 8
  %32 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %31, i64 16
  %33 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %32, align 8
  tail call void %33(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  %34 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %6, align 8
  %35 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %34, i64 13
  %36 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %35, align 8
  tail call void %36(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0)) #14
  %37 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %13, align 8
  %38 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %37, i64 5
  %39 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %38, align 8
  tail call void %39(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  %40 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #14
  %41 = bitcast %"class.v8::internal::EmbeddedVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %41) #14, !noalias !4
  %42 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %4, i64 0, i32 1, i64 0
  %43 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %4, i64 0, i32 0, i32 0
  store i8* %42, i8** %43, align 8, !noalias !4
  %44 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %4, i64 0, i32 0, i32 1
  store i64 256, i64* %44, align 8, !noalias !4
  %45 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 6
  %46 = load i8*, i8** %45, align 8, !noalias !4
  %47 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %42, i64 256, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i64 0, i64 0), i8* %46) #14, !noalias !4
  %48 = load i8*, i8** %43, align 8, !noalias !4
  %49 = call i64 @strlen(i8* %48) #14, !noalias !4
  %50 = icmp ugt i64 %49, -17
  br i1 %50, label %51, label %53

51:                                               ; preds = %3
  %52 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %52) #15
  unreachable

53:                                               ; preds = %3
  %54 = icmp ult i64 %49, 23
  br i1 %54, label %64, label %55

55:                                               ; preds = %53
  %56 = add nuw i64 %49, 16
  %57 = and i64 %56, -16
  %58 = call i8* @_Znwm(i64 %57) #16
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %58, i8** %59, align 8, !alias.scope !4
  %60 = or i64 %57, -9223372036854775808
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %60, i64* %61, align 8, !alias.scope !4
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %49, i64* %62, align 8, !alias.scope !4
  %63 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %69

64:                                               ; preds = %53
  %65 = trunc i64 %49 to i8
  %66 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  store i8 %65, i8* %67, align 1, !alias.scope !4
  %68 = icmp eq i64 %49, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %64, %55
  %70 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %66, %64 ], [ %63, %55 ]
  %71 = phi i8* [ %40, %64 ], [ %58, %55 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %71, i8* align 1 %48, i64 %49, i1 false) #14
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %66, %64 ], [ %70, %69 ]
  %74 = phi i8* [ %40, %64 ], [ %71, %69 ]
  %75 = getelementptr inbounds i8, i8* %74, i64 %49
  store i8 0, i8* %75, align 1
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %41) #14, !noalias !4
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = select i1 %78, i8* %80, i8* %40
  %82 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %6, align 8
  %83 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %82, i64 10
  %84 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %83, align 8
  call void %84(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* %81) #14
  %85 = load i8, i8* %76, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %72
  %88 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %88) #16
  br label %89

89:                                               ; preds = %72, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #14
  br label %94

90:                                               ; preds = %94
  %91 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %13, align 8
  %92 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %91, i64 16
  %93 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %92, align 8
  call void %93(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  ret void

94:                                               ; preds = %94, %89
  %95 = phi i32 [ 0, %89 ], [ %96, %94 ]
  call void @_ZNK2v88internal18EmbeddedFileWriter12WriteBuiltinEPNS0_30PlatformEmbeddedFileWriterBaseEPKNS0_12EmbeddedDataEi(%"class.v8::internal::EmbeddedFileWriter"* %0, %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, %"class.v8::internal::EmbeddedData"* %2, i32 %95)
  %96 = add nuw nsw i32 %95, 1
  %97 = icmp eq i32 %96, 1711
  br i1 %97, label %90, label %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal18EmbeddedFileWriter17WriteFileEpilogueEPNS0_30PlatformEmbeddedFileWriterBaseEPKNS0_12EmbeddedDataE(%"class.v8::internal::EmbeddedFileWriter"* nocapture readonly, %"class.v8::internal::PlatformEmbeddedFileWriterBase"*, %"class.v8::internal::EmbeddedData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::EmbeddedVector", align 8
  %5 = alloca %"class.v8::internal::EmbeddedVector", align 8
  %6 = alloca %"class.v8::internal::EmbeddedVector", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.v8::internal::EmbeddedVector", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.v8::internal::EmbeddedVector", align 8
  %11 = alloca %"class.v8::internal::EmbeddedVector", align 8
  %12 = bitcast %"class.v8::internal::EmbeddedVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %6, i64 0, i32 1, i64 0
  %14 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %6, i64 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %6, i64 0, i32 0, i32 1
  store i64 256, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 6
  %17 = load i8*, i8** %16, align 8
  %18 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %13, i64 256, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8* %17) #14
  %19 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)***
  %20 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %20, i64 15
  %22 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %21, align 8
  call void %22(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.10, i64 0, i64 0)) #14
  %23 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)***
  %24 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %24, i64 3
  %26 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %25, align 8
  call void %26(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  %27 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %23, align 8
  %28 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %27, i64 6
  %29 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %28, align 8
  call void %29(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  %30 = load i8*, i8** %14, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = bitcast %"class.v8::internal::EmbeddedVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %32) #14, !noalias !7
  %33 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %5, i64 0, i32 1, i64 0
  %34 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %5, i64 0, i32 0, i32 0
  store i8* %33, i8** %34, align 8, !noalias !7
  %35 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %5, i64 0, i32 0, i32 1
  store i64 256, i64* %35, align 8, !noalias !7
  %36 = load i8*, i8** %16, align 8, !noalias !7
  %37 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %33, i64 256, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i64 0, i64 0), i8* %36) #14, !noalias !7
  %38 = load i8*, i8** %34, align 8, !noalias !7
  %39 = call i64 @strlen(i8* %38) #14, !noalias !7
  %40 = icmp ugt i64 %39, -17
  br i1 %40, label %41, label %43

41:                                               ; preds = %3
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %42) #15
  unreachable

43:                                               ; preds = %3
  %44 = icmp ult i64 %39, 23
  br i1 %44, label %54, label %45

45:                                               ; preds = %43
  %46 = add nuw i64 %39, 16
  %47 = and i64 %46, -16
  %48 = call i8* @_Znwm(i64 %47) #16
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %48, i8** %49, align 8, !alias.scope !7
  %50 = or i64 %47, -9223372036854775808
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %50, i64* %51, align 8, !alias.scope !7
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %39, i64* %52, align 8, !alias.scope !7
  %53 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %59

54:                                               ; preds = %43
  %55 = trunc i64 %39 to i8
  %56 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 %55, i8* %57, align 1, !alias.scope !7
  %58 = icmp eq i64 %39, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %54, %45
  %60 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %56, %54 ], [ %53, %45 ]
  %61 = phi i8* [ %31, %54 ], [ %48, %45 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %61, i8* align 1 %38, i64 %39, i1 false) #14
  br label %62

62:                                               ; preds = %54, %59
  %63 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %56, %54 ], [ %60, %59 ]
  %64 = phi i8* [ %31, %54 ], [ %61, %59 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 %39
  store i8 0, i8* %65, align 1
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %32) #14, !noalias !7
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = select i1 %68, i8* %70, i8* %31
  %72 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)***
  %73 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)** %73, i64 8
  %75 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)** %74, align 8
  call void %75(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* %30, i8* %71) #14
  %76 = load i8, i8* %66, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %62
  %79 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %79) #16
  br label %80

80:                                               ; preds = %62, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  %81 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %23, align 8
  %82 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %81, i64 16
  %83 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %82, align 8
  call void %83(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  %84 = bitcast %"class.v8::internal::EmbeddedVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %84) #14
  %85 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %8, i64 0, i32 1, i64 0
  %86 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %8, i64 0, i32 0, i32 0
  store i8* %85, i8** %86, align 8
  %87 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %8, i64 0, i32 0, i32 1
  store i64 256, i64* %87, align 8
  %88 = load i8*, i8** %16, align 8
  %89 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %85, i64 256, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* %88) #14
  %90 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %19, align 8
  %91 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %90, i64 15
  %92 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %91, align 8
  call void %92(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.12, i64 0, i64 0)) #14
  %93 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %23, align 8
  %94 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %93, i64 6
  %95 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %94, align 8
  call void %95(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  %96 = load i8*, i8** %86, align 8
  %97 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #14
  %98 = bitcast %"class.v8::internal::EmbeddedVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %98) #14, !noalias !10
  %99 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %4, i64 0, i32 1, i64 0
  %100 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %4, i64 0, i32 0, i32 0
  store i8* %99, i8** %100, align 8, !noalias !10
  %101 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %4, i64 0, i32 0, i32 1
  store i64 256, i64* %101, align 8, !noalias !10
  %102 = load i8*, i8** %16, align 8, !noalias !10
  %103 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %99, i64 256, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22, i64 0, i64 0), i8* %102) #14, !noalias !10
  %104 = load i8*, i8** %100, align 8, !noalias !10
  %105 = call i64 @strlen(i8* %104) #14, !noalias !10
  %106 = icmp ugt i64 %105, -17
  br i1 %106, label %107, label %109

107:                                              ; preds = %80
  %108 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %108) #15
  unreachable

109:                                              ; preds = %80
  %110 = icmp ult i64 %105, 23
  br i1 %110, label %120, label %111

111:                                              ; preds = %109
  %112 = add nuw i64 %105, 16
  %113 = and i64 %112, -16
  %114 = call i8* @_Znwm(i64 %113) #16
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %114, i8** %115, align 8, !alias.scope !10
  %116 = or i64 %113, -9223372036854775808
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %116, i64* %117, align 8, !alias.scope !10
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %105, i64* %118, align 8, !alias.scope !10
  %119 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %125

120:                                              ; preds = %109
  %121 = trunc i64 %105 to i8
  %122 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  store i8 %121, i8* %123, align 1, !alias.scope !10
  %124 = icmp eq i64 %105, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %120, %111
  %126 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %122, %120 ], [ %119, %111 ]
  %127 = phi i8* [ %97, %120 ], [ %114, %111 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %127, i8* align 1 %104, i64 %105, i1 false) #14
  br label %128

128:                                              ; preds = %120, %125
  %129 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %122, %120 ], [ %126, %125 ]
  %130 = phi i8* [ %97, %120 ], [ %127, %125 ]
  %131 = getelementptr inbounds i8, i8* %130, i64 %105
  store i8 0, i8* %131, align 1
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %98) #14, !noalias !10
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = select i1 %134, i8* %136, i8* %97
  %138 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)*** %72, align 8
  %139 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)** %138, i64 8
  %140 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i8*)** %139, align 8
  call void %140(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* %96, i8* %137) #14
  %141 = load i8, i8* %132, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %145

143:                                              ; preds = %128
  %144 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %144) #16
  br label %145

145:                                              ; preds = %128, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #14
  %146 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %23, align 8
  %147 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %146, i64 16
  %148 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %147, align 8
  call void %148(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %84) #14
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %12) #14
  %149 = bitcast %"class.v8::internal::EmbeddedVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %149) #14
  %150 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %10, i64 0, i32 1, i64 0
  %151 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %10, i64 0, i32 0, i32 0
  store i8* %150, i8** %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %10, i64 0, i32 0, i32 1
  store i64 256, i64* %152, align 8
  %153 = load i8*, i8** %16, align 8
  %154 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %150, i64 256, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0), i8* %153) #14
  %155 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %19, align 8
  %156 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %155, i64 15
  %157 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %156, align 8
  call void %157(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14, i64 0, i64 0)) #14
  %158 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %23, align 8
  %159 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %158, i64 4
  %160 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %159, align 8
  call void %160(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  %161 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %23, align 8
  %162 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %161, i64 6
  %163 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %162, align 8
  call void %163(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  %164 = load i8*, i8** %151, align 8
  %165 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = bitcast %"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1 to void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)***
  %168 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)** %168, i64 7
  %170 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)** %169, align 8
  call void %170(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* %164, i32 %166) #14
  %171 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %23, align 8
  %172 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %171, i64 16
  %173 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %172, align 8
  call void %173(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  %174 = bitcast %"class.v8::internal::EmbeddedVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %174) #14
  %175 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %11, i64 0, i32 1, i64 0
  %176 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %11, i64 0, i32 0, i32 0
  store i8* %175, i8** %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %11, i64 0, i32 0, i32 1
  store i64 256, i64* %177, align 8
  %178 = load i8*, i8** %16, align 8
  %179 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %175, i64 256, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i64 0, i64 0), i8* %178) #14
  %180 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*** %19, align 8
  %181 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %180, i64 15
  %182 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*)** %181, align 8
  call void %182(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16, i64 0, i64 0)) #14
  %183 = load i8*, i8** %176, align 8
  %184 = getelementptr inbounds %"class.v8::internal::EmbeddedData", %"class.v8::internal::EmbeddedData"* %2, i64 0, i32 4
  %185 = load i32, i32* %184, align 8
  %186 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*** %167, align 8
  %187 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)** %186, i64 7
  %188 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*, i8*, i32)** %187, align 8
  call void %188(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1, i8* %183, i32 %185) #14
  %189 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %23, align 8
  %190 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %189, i64 16
  %191 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %190, align 8
  call void %191(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %174) #14
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %149) #14
  %192 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)**, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*** %23, align 8
  %193 = getelementptr inbounds void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %192, i64 19
  %194 = load void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)*, void (%"class.v8::internal::PlatformEmbeddedFileWriterBase"*)** %193, align 8
  call void %194(%"class.v8::internal::PlatformEmbeddedFileWriterBase"* %1) #14
  ret void
}

declare i32 @_ZN2v88internal17DataDirectiveSizeENS0_13DataDirectiveE(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal18EmbeddedFileWriter37LookupOrAddExternallyCompiledFilenameEPKc(%"class.v8::internal::EmbeddedFileWriter"*, i8*) unnamed_addr #0 align 2 {
  %3 = ptrtoint i8* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %66, label %9

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::__tree_end_node"* [ %20, %9 ], [ %5, %2 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %21, %9 ], [ %7, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp ult i8* %13, %1
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %19 = select i1 %14, %"class.std::__1::__tree_node"** %16, %"class.std::__1::__tree_node"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %17
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %5
  br i1 %24, label %34, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ugt i8* %28, %1
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 5
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to i32*
  %33 = load i32, i32* %32, align 8
  br label %175

34:                                               ; preds = %23, %25
  %35 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  %38 = add nsw i32 %37, 1
  %39 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %62, %34
  %41 = phi %"class.std::__1::__tree_node"* [ %65, %62 ], [ %7, %34 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %64, %62 ], [ %39, %34 ]
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 2, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = icmp ugt i8* %44, %1
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %62

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0
  br label %72

52:                                               ; preds = %40
  %53 = icmp ult i8* %44, %1
  br i1 %53, label %54, label %60

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 1
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0
  br label %72

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 0, i32 0
  br label %72

62:                                               ; preds = %54, %46
  %63 = phi %"class.std::__1::__tree_node_base"* [ %48, %46 ], [ %56, %54 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %47, %46 ], [ %55, %54 ]
  %65 = bitcast %"class.std::__1::__tree_node_base"* %63 to %"class.std::__1::__tree_node"*
  br label %40

66:                                               ; preds = %2
  %67 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = trunc i64 %68 to i32
  %70 = add nsw i32 %69, 1
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %72

72:                                               ; preds = %66, %60, %58, %50
  %73 = phi i32 [ %70, %66 ], [ %38, %50 ], [ %38, %58 ], [ %38, %60 ]
  %74 = phi i64* [ %67, %66 ], [ %35, %50 ], [ %35, %58 ], [ %35, %60 ]
  %75 = phi %"class.std::__1::__tree_end_node"* [ %5, %66 ], [ %51, %50 ], [ %59, %58 ], [ %61, %60 ]
  %76 = phi %"class.std::__1::__tree_node_base"** [ %71, %66 ], [ %47, %50 ], [ %55, %58 ], [ %42, %60 ]
  %77 = bitcast %"class.std::__1::__tree_node_base"** %76 to %"class.std::__1::__tree_node"**
  %78 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node"* %78, null
  br i1 %79, label %80, label %105

80:                                               ; preds = %72
  %81 = tail call i8* @_Znwm(i64 48) #16, !noalias !13
  %82 = getelementptr inbounds i8, i8* %81, i64 32
  %83 = bitcast i8* %82 to i64*
  store i64 %3, i64* %83, align 8, !noalias !13
  %84 = getelementptr inbounds i8, i8* %81, i64 40
  %85 = bitcast i8* %84 to i32*
  store i32 %73, i32* %85, align 8, !noalias !13
  %86 = bitcast i8* %81 to %"class.std::__1::__tree_node_base"*
  %87 = getelementptr inbounds i8, i8* %81, i64 16
  %88 = bitcast i8* %87 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %75, %"class.std::__1::__tree_end_node"** %88, align 8
  %89 = bitcast %"class.std::__1::__tree_node_base"** %76 to i8**
  store i8* %81, i8** %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %91, i64 0, i32 0
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, null
  br i1 %94, label %99, label %95

95:                                               ; preds = %80
  %96 = ptrtoint %"class.std::__1::__tree_node_base"* %93 to i64
  %97 = bitcast %"class.std::__1::map"* %4 to i64*
  store i64 %96, i64* %97, align 8
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  br label %99

99:                                               ; preds = %95, %80
  %100 = phi %"class.std::__1::__tree_node_base"* [ %86, %80 ], [ %98, %95 ]
  %101 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %102, %"class.std::__1::__tree_node_base"* %100) #14
  %103 = load i64, i64* %74, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %74, align 8
  br label %105

105:                                              ; preds = %72, %99
  %106 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 4
  %107 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 4, i32 0, i32 1
  %108 = load i8**, i8*** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %110 = load i8**, i8*** %109, align 8
  %111 = icmp eq i8** %108, %110
  %112 = ptrtoint i8** %110 to i64
  br i1 %111, label %118, label %113

113:                                              ; preds = %105
  %114 = bitcast i8** %108 to i64*
  store i64 %3, i64* %114, align 8
  %115 = getelementptr inbounds i8*, i8** %108, i64 1
  %116 = ptrtoint i8** %115 to i64
  %117 = bitcast i8*** %107 to i64*
  store i64 %116, i64* %117, align 8
  br label %175

118:                                              ; preds = %105
  %119 = ptrtoint i8** %108 to i64
  %120 = bitcast i8*** %107 to i64*
  %121 = bitcast %"class.std::__1::vector.21"* %106 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 %119, %122
  %124 = ashr exact i64 %123, 3
  %125 = add nsw i64 %124, 1
  %126 = icmp ugt i64 %125, 2305843009213693951
  br i1 %126, label %127, label %129

127:                                              ; preds = %118
  %128 = bitcast %"class.std::__1::vector.21"* %106 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %128) #15
  unreachable

129:                                              ; preds = %118
  %130 = bitcast i8*** %109 to i64*
  %131 = sub i64 %112, %122
  %132 = ashr exact i64 %131, 3
  %133 = icmp ult i64 %132, 1152921504606846975
  br i1 %133, label %134, label %142

134:                                              ; preds = %129
  %135 = ashr exact i64 %131, 2
  %136 = icmp ult i64 %135, %125
  %137 = select i1 %136, i64 %125, i64 %135
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %134
  %140 = icmp ugt i64 %137, 2305843009213693951
  br i1 %140, label %141, label %142

141:                                              ; preds = %139
  tail call void @abort() #15
  unreachable

142:                                              ; preds = %139, %129
  %143 = phi i64 [ %137, %139 ], [ 2305843009213693951, %129 ]
  %144 = shl i64 %143, 3
  %145 = tail call i8* @_Znwm(i64 %144) #16
  %146 = bitcast i8* %145 to i8**
  br label %147

147:                                              ; preds = %142, %134
  %148 = phi i64 [ %143, %142 ], [ 0, %134 ]
  %149 = phi i8** [ %146, %142 ], [ null, %134 ]
  %150 = getelementptr inbounds i8*, i8** %149, i64 %124
  %151 = getelementptr inbounds i8*, i8** %149, i64 %148
  %152 = ptrtoint i8** %151 to i64
  %153 = bitcast i8** %150 to i64*
  store i64 %3, i64* %153, align 8
  %154 = getelementptr inbounds i8*, i8** %150, i64 1
  %155 = ptrtoint i8** %154 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %106, i64 0, i32 0, i32 0
  %157 = load i8**, i8*** %156, align 8
  %158 = load i64, i64* %120, align 8
  %159 = ptrtoint i8** %157 to i64
  %160 = sub i64 %158, %159
  %161 = ashr exact i64 %160, 3
  %162 = sub nsw i64 0, %161
  %163 = getelementptr inbounds i8*, i8** %150, i64 %162
  %164 = ptrtoint i8** %163 to i64
  %165 = icmp sgt i64 %160, 0
  br i1 %165, label %166, label %170

166:                                              ; preds = %147
  %167 = bitcast i8** %163 to i8*
  %168 = bitcast i8** %157 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 %160, i1 false) #14
  %169 = load i8**, i8*** %156, align 8
  br label %170

170:                                              ; preds = %166, %147
  %171 = phi i8** [ %157, %147 ], [ %169, %166 ]
  store i64 %164, i64* %121, align 8
  store i64 %155, i64* %120, align 8
  store i64 %152, i64* %130, align 8
  %172 = icmp eq i8** %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %170
  %174 = bitcast i8** %171 to i8*
  tail call void @_ZdlPv(i8* %174) #16
  br label %175

175:                                              ; preds = %173, %170, %113, %30
  %176 = phi i32 [ %33, %30 ], [ %73, %113 ], [ %73, %170 ], [ %73, %173 ]
  ret i32 %176
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK2v88internal18EmbeddedFileWriter29GetExternallyCompiledFilenameEi(%"class.v8::internal::EmbeddedFileWriter"* nocapture readonly, i32) unnamed_addr #5 align 2 {
  %3 = add nsw i32 %1, -1
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load i8**, i8*** %5, align 8
  %7 = getelementptr inbounds i8*, i8** %6, i64 %4
  %8 = load i8*, i8** %7, align 8
  ret i8* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal18EmbeddedFileWriter34GetExternallyCompiledFilenameCountEv(%"class.v8::internal::EmbeddedFileWriter"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18EmbeddedFileWriter31PrepareBuiltinSourcePositionMapEPNS0_8BuiltinsE(%"class.v8::internal::EmbeddedFileWriter"*, %"class.v8::internal::Builtins"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %5 to i64*
  br label %10

9:                                                ; preds = %51
  ret void

10:                                               ; preds = %51, %2
  %11 = phi i64 [ 0, %2 ], [ %52, %51 ]
  %12 = trunc i64 %11 to i32
  %13 = call i64 @_ZN2v88internal8Builtins7builtinEi(%"class.v8::internal::Builtins"* %1, i32 %12) #14
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i8*
  %22 = add i64 %19, 3
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = ashr i32 %24, 1
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %21, i64 %26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #14
  %28 = ptrtoint i8* %27 to i64
  %29 = sub i64 %28, %20
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %10
  %32 = icmp slt i64 %29, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %34) #15
  unreachable

35:                                               ; preds = %31
  %36 = call i8* @_Znwm(i64 %29) #16
  store i8* %36, i8** %5, align 8
  store i8* %36, i8** %6, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %29
  store i8* %37, i8** %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %21, i64 %29, i1 false) #14
  %38 = ptrtoint i8* %37 to i64
  store i64 %38, i64* %8, align 8
  br label %39

39:                                               ; preds = %10, %35
  %40 = phi i8* [ null, %10 ], [ %37, %35 ]
  %41 = phi i8* [ null, %10 ], [ %36, %35 ]
  %42 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 1, i64 %11
  %43 = icmp eq %"class.std::__1::vector"* %42, %3
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %42, i8* %41, i8* %40) #14
  %45 = load i8*, i8** %6, align 8
  br label %46

46:                                               ; preds = %39, %44
  %47 = phi i8* [ %41, %39 ], [ %45, %44 ]
  %48 = icmp eq i8* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  %50 = ptrtoint i8* %47 to i64
  store i64 %50, i64* %8, align 8
  call void @_ZdlPv(i8* nonnull %47) #16
  br label %51

51:                                               ; preds = %46, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  %52 = add nuw nsw i64 %11, 1
  %53 = icmp eq i64 %52, 1711
  br i1 %53, label %9, label %10
}

declare i64 @_ZN2v88internal8Builtins7builtinEi(%"class.v8::internal::Builtins"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18EmbeddedFileWriter26PrepareBuiltinLabelInfoMapEii(%"class.v8::internal::EmbeddedFileWriter"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.v8::internal::LabelInfo", align 8
  %5 = alloca %"struct.v8::internal::LabelInfo", align 8
  %6 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 2, i64 49
  %7 = bitcast %"struct.v8::internal::LabelInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %4, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %4, i64 0, i32 1
  %10 = tail call i8* @_Znwm(i64 48) #16
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i64 32, i1 false) #14
  %14 = getelementptr inbounds i8, i8* %10, i64 32
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 2, i64 49, i32 0, i32 1
  %16 = load %"struct.v8::internal::LabelInfo"*, %"struct.v8::internal::LabelInfo"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::EmbeddedFileWriter", %"class.v8::internal::EmbeddedFileWriter"* %0, i64 0, i32 2, i64 49, i32 0, i32 2, i32 0, i32 0
  %18 = load %"struct.v8::internal::LabelInfo"*, %"struct.v8::internal::LabelInfo"** %17, align 8
  %19 = icmp ult %"struct.v8::internal::LabelInfo"* %16, %18
  br i1 %19, label %20, label %28

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %16, i64 0, i32 0
  store i32 %1, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %16, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #14
  %25 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %16, i64 1
  %26 = ptrtoint %"struct.v8::internal::LabelInfo"* %25 to i64
  %27 = bitcast %"struct.v8::internal::LabelInfo"** %15 to i64*
  store i64 %26, i64* %27, align 8
  br label %35

28:                                               ; preds = %3
  call void @_ZNSt3__16vectorIN2v88internal9LabelInfoENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.1"* %6, %"struct.v8::internal::LabelInfo"* nonnull dereferenceable(32) %4) #14
  %29 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %34) #16
  br label %35

35:                                               ; preds = %20, %28, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #14
  %36 = bitcast %"struct.v8::internal::LabelInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #14
  %37 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %5, i64 0, i32 0
  store i32 %2, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %5, i64 0, i32 1
  %39 = call i8* @_Znwm(i64 48) #16
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8
  %41 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %42, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), i64 32, i1 false) #14
  %43 = getelementptr inbounds i8, i8* %39, i64 32
  store i8 0, i8* %43, align 1
  %44 = load %"struct.v8::internal::LabelInfo"*, %"struct.v8::internal::LabelInfo"** %15, align 8
  %45 = load %"struct.v8::internal::LabelInfo"*, %"struct.v8::internal::LabelInfo"** %17, align 8
  %46 = icmp ult %"struct.v8::internal::LabelInfo"* %44, %45
  br i1 %46, label %47, label %55

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %44, i64 0, i32 0
  store i32 %2, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %44, i64 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #14
  %52 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %44, i64 1
  %53 = ptrtoint %"struct.v8::internal::LabelInfo"* %52 to i64
  %54 = bitcast %"struct.v8::internal::LabelInfo"** %15 to i64*
  store i64 %53, i64* %54, align 8
  br label %62

55:                                               ; preds = %35
  call void @_ZNSt3__16vectorIN2v88internal9LabelInfoENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.1"* %6, %"struct.v8::internal::LabelInfo"* nonnull dereferenceable(32) %5) #14
  %56 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %61) #16
  br label %62

62:                                               ; preds = %47, %55, %60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #14
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !16
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !16
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #14
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #14
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #16
  %46 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #14
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #15
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #16
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #14
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal9LabelInfoENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.1"*, %"struct.v8::internal::LabelInfo"* dereferenceable(32)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.v8::internal::LabelInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.v8::internal::LabelInfo"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #16
  %33 = bitcast i8* %32 to %"struct.v8::internal::LabelInfo"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.v8::internal::LabelInfo"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %36, i64 %35
  %39 = ptrtoint %"struct.v8::internal::LabelInfo"* %38 to i64
  %40 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %1, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %1, i64 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %46 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #14
  %47 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %37, i64 1
  %48 = ptrtoint %"struct.v8::internal::LabelInfo"* %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %50 = load %"struct.v8::internal::LabelInfo"*, %"struct.v8::internal::LabelInfo"** %49, align 8
  %51 = ptrtoint %"struct.v8::internal::LabelInfo"* %50 to i64
  %52 = load %"struct.v8::internal::LabelInfo"*, %"struct.v8::internal::LabelInfo"** %3, align 8
  %53 = icmp eq %"struct.v8::internal::LabelInfo"* %52, %50
  br i1 %53, label %99, label %54

54:                                               ; preds = %34
  %55 = getelementptr %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %52, i64 -1, i32 0
  %56 = ptrtoint i32* %55 to i64
  %57 = sub i64 %56, %51
  %58 = and i64 %57, 32
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %52, i64 -1
  %62 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %37, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %37, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %52, i64 -1, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %68 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #14
  %69 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %37, i64 -1
  br label %70

70:                                               ; preds = %60, %54
  %71 = phi %"struct.v8::internal::LabelInfo"* [ undef, %54 ], [ %69, %60 ]
  %72 = phi %"struct.v8::internal::LabelInfo"* [ %37, %54 ], [ %69, %60 ]
  %73 = phi %"struct.v8::internal::LabelInfo"* [ %52, %54 ], [ %61, %60 ]
  %74 = icmp ult i64 %57, 32
  br i1 %74, label %95, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"struct.v8::internal::LabelInfo"* [ %93, %75 ], [ %72, %70 ]
  %77 = phi %"struct.v8::internal::LabelInfo"* [ %85, %75 ], [ %73, %70 ]
  %78 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %76, i64 -1, i32 0
  %79 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %77, i64 -1, i32 0
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %78, align 8
  %81 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %76, i64 -1, i32 1
  %82 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %77, i64 -1, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #14
  %85 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %77, i64 -2
  %86 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %76, i64 -2, i32 0
  %87 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %85, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %76, i64 -2, i32 1
  %90 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %77, i64 -2, i32 1
  %91 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #14
  %93 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %76, i64 -2
  %94 = icmp eq %"struct.v8::internal::LabelInfo"* %85, %50
  br i1 %94, label %95, label %75

95:                                               ; preds = %75, %70
  %96 = phi %"struct.v8::internal::LabelInfo"* [ %71, %70 ], [ %93, %75 ]
  %97 = load i64, i64* %6, align 8
  %98 = load %"struct.v8::internal::LabelInfo"*, %"struct.v8::internal::LabelInfo"** %3, align 8
  br label %99

99:                                               ; preds = %34, %95
  %100 = phi %"struct.v8::internal::LabelInfo"* [ %98, %95 ], [ %50, %34 ]
  %101 = phi %"struct.v8::internal::LabelInfo"* [ %96, %95 ], [ %37, %34 ]
  %102 = phi i64 [ %97, %95 ], [ %51, %34 ]
  %103 = ptrtoint %"struct.v8::internal::LabelInfo"* %101 to i64
  store i64 %103, i64* %6, align 8
  store i64 %48, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %104 = inttoptr i64 %102 to %"struct.v8::internal::LabelInfo"*
  %105 = icmp eq %"struct.v8::internal::LabelInfo"* %100, %104
  br i1 %105, label %119, label %106

106:                                              ; preds = %99, %117
  %107 = phi %"struct.v8::internal::LabelInfo"* [ %108, %117 ], [ %100, %99 ]
  %108 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %107, i64 -1
  %109 = getelementptr inbounds %"struct.v8::internal::LabelInfo", %"struct.v8::internal::LabelInfo"* %107, i64 -1, i32 1
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZdlPv(i8* %116) #16
  br label %117

117:                                              ; preds = %114, %106
  %118 = icmp eq %"struct.v8::internal::LabelInfo"* %108, %104
  br i1 %118, label %119, label %106

119:                                              ; preds = %117, %99
  %120 = icmp eq i64 %102, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = inttoptr i64 %102 to i8*
  tail call void @_ZdlPv(i8* %122) #16
  br label %123

123:                                              ; preds = %119, %121
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK2v88internal18EmbeddedFileWriter26EmbeddedBlobCodeDataSymbolEv: argument 0"}
!6 = distinct !{!6, !"_ZNK2v88internal18EmbeddedFileWriter26EmbeddedBlobCodeDataSymbolEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK2v88internal18EmbeddedFileWriter26EmbeddedBlobCodeDataSymbolEv: argument 0"}
!9 = distinct !{!9, !"_ZNK2v88internal18EmbeddedFileWriter26EmbeddedBlobCodeDataSymbolEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK2v88internal18EmbeddedFileWriter26EmbeddedBlobDataDataSymbolEv: argument 0"}
!12 = distinct !{!12, !"_ZNK2v88internal18EmbeddedFileWriter26EmbeddedBlobDataDataSymbolEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__16__treeINS_12__value_typeIPKciEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJNS_4pairIS3_iEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISI_EEEEEEDpOT_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__16__treeINS_12__value_typeIPKciEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJNS_4pairIS3_iEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISI_EEEEEEDpOT_"}
!16 = !{i8 0, i8 2}
