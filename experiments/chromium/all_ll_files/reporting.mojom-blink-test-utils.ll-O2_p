; ModuleID = 'gen/third_party/blink/public/mojom/reporting/reporting.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/reporting/reporting.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::ReportingServiceProxyAsyncWaiter" = type { %"class.blink::mojom::blink::ReportingServiceProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting" = type { %"class.blink::mojom::blink::ReportingServiceProxy" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }

$_ZN5blink5mojom5blink21ReportingServiceProxyD2Ev = comdat any

$_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom5blink42ReportingServiceProxyInterceptorForTestingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ReportingServiceProxy"*)* @_ZN5blink5mojom5blink21ReportingServiceProxyD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)* @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)* @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTesting23QueueInterventionReportERKNS_4KURLERKN3WTF6StringES9_S9_ii to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*, %"class.blink::KURL"*, %"class.WTF::String"*, i8, i64, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)* @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTesting22QueueDeprecationReportERKNS_4KURLERKN3WTF6StringEN4absl8optionalIN4base4TimeEEES9_S9_ii to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i16, i32, i32)* @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTesting23QueueCspViolationReportERKNS_4KURLERKN3WTF6StringES9_S9_S9_S9_S9_S9_S9_S9_tii to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)* @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTesting37QueuePermissionsPolicyViolationReportERKNS_4KURLERKN3WTF6StringES9_S9_S9_ii to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)* @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTesting34QueueDocumentPolicyViolationReportERKNS_4KURLERKN3WTF6StringES9_S9_S9_S9_ii to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink32ReportingServiceProxyAsyncWaiterC1EPNS1_21ReportingServiceProxyE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ReportingServiceProxyAsyncWaiter"*, %"class.blink::mojom::blink::ReportingServiceProxy"*), void (%"class.blink::mojom::blink::ReportingServiceProxyAsyncWaiter"*, %"class.blink::mojom::blink::ReportingServiceProxy"*)* @_ZN5blink5mojom5blink32ReportingServiceProxyAsyncWaiterC2EPNS1_21ReportingServiceProxyE
@_ZN5blink5mojom5blink32ReportingServiceProxyAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ReportingServiceProxyAsyncWaiter"*), void (%"class.blink::mojom::blink::ReportingServiceProxyAsyncWaiter"*)* @_ZN5blink5mojom5blink32ReportingServiceProxyAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTesting23QueueInterventionReportERKNS_4KURLERKN3WTF6StringES9_S9_ii(%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #0 align 2 {
  %8 = bitcast %"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)***
  %9 = load %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)**, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)** %9, i64 7
  %11 = load %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.blink::mojom::blink::ReportingServiceProxy"* %11(%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"* %0) #5
  %13 = bitcast %"class.blink::mojom::blink::ReportingServiceProxy"* %12 to void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)***
  %14 = load void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)** %14, i64 2
  %16 = load void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)** %15, align 8
  tail call void %16(%"class.blink::mojom::blink::ReportingServiceProxy"* %12, %"class.blink::KURL"* dereferenceable(112) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4, i32 %5, i32 %6) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTesting22QueueDeprecationReportERKNS_4KURLERKN3WTF6StringEN4absl8optionalIN4base4TimeEEES9_S9_ii(%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), i8, i64, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #0 align 2 {
  %10 = bitcast %"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)***
  %11 = load %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)**, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)** %11, i64 7
  %13 = load %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.blink::mojom::blink::ReportingServiceProxy"* %13(%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"* %0) #5
  %15 = bitcast %"class.blink::mojom::blink::ReportingServiceProxy"* %14 to void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, i8, i64, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)***
  %16 = load void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, i8, i64, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, i8, i64, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, i8, i64, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, i8, i64, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)** %16, i64 3
  %18 = load void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, i8, i64, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, i8, i64, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)** %17, align 8
  tail call void %18(%"class.blink::mojom::blink::ReportingServiceProxy"* %14, %"class.blink::KURL"* dereferenceable(112) %1, %"class.WTF::String"* dereferenceable(8) %2, i8 %3, i64 %4, %"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %6, i32 %7, i32 %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTesting23QueueCspViolationReportERKNS_4KURLERKN3WTF6StringES9_S9_S9_S9_S9_S9_S9_S9_tii(%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i16 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %15 = bitcast %"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)***
  %16 = load %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)**, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)** %16, i64 7
  %18 = load %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)** %17, align 8
  %19 = tail call %"class.blink::mojom::blink::ReportingServiceProxy"* %18(%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"* %0) #5
  %20 = bitcast %"class.blink::mojom::blink::ReportingServiceProxy"* %19 to void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i16, i32, i32)***
  %21 = load void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i16, i32, i32)**, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i16, i32, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i16, i32, i32)*, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i16, i32, i32)** %21, i64 4
  %23 = load void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i16, i32, i32)*, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i16, i32, i32)** %22, align 8
  tail call void %23(%"class.blink::mojom::blink::ReportingServiceProxy"* %19, %"class.blink::KURL"* dereferenceable(112) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %10, i16 zeroext %11, i32 %12, i32 %13) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTesting37QueuePermissionsPolicyViolationReportERKNS_4KURLERKN3WTF6StringES9_S9_S9_ii(%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #0 align 2 {
  %9 = bitcast %"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)***
  %10 = load %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)**, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)** %10, i64 7
  %12 = load %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.blink::mojom::blink::ReportingServiceProxy"* %12(%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"* %0) #5
  %14 = bitcast %"class.blink::mojom::blink::ReportingServiceProxy"* %13 to void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)***
  %15 = load void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)** %15, i64 5
  %17 = load void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)** %16, align 8
  tail call void %17(%"class.blink::mojom::blink::ReportingServiceProxy"* %13, %"class.blink::KURL"* dereferenceable(112) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5, i32 %6, i32 %7) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTesting34QueueDocumentPolicyViolationReportERKNS_4KURLERKN3WTF6StringES9_S9_S9_S9_ii(%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #0 align 2 {
  %10 = bitcast %"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)***
  %11 = load %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)**, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)** %11, i64 7
  %13 = load %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)*, %"class.blink::mojom::blink::ReportingServiceProxy"* (%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.blink::mojom::blink::ReportingServiceProxy"* %13(%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"* %0) #5
  %15 = bitcast %"class.blink::mojom::blink::ReportingServiceProxy"* %14 to void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)***
  %16 = load void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)**, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)** %16, i64 6
  %18 = load void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)*, void (%"class.blink::mojom::blink::ReportingServiceProxy"*, %"class.blink::KURL"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32, i32)** %17, align 8
  tail call void %18(%"class.blink::mojom::blink::ReportingServiceProxy"* %14, %"class.blink::KURL"* dereferenceable(112) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %6, i32 %7, i32 %8) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink32ReportingServiceProxyAsyncWaiterC2EPNS1_21ReportingServiceProxyE(%"class.blink::mojom::blink::ReportingServiceProxyAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ReportingServiceProxy"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ReportingServiceProxyAsyncWaiter", %"class.blink::mojom::blink::ReportingServiceProxyAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ReportingServiceProxy"* %1, %"class.blink::mojom::blink::ReportingServiceProxy"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink32ReportingServiceProxyAsyncWaiterD2Ev(%"class.blink::mojom::blink::ReportingServiceProxyAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink21ReportingServiceProxyD2Ev(%"class.blink::mojom::blink::ReportingServiceProxy"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink42ReportingServiceProxyInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ReportingServiceProxyInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
