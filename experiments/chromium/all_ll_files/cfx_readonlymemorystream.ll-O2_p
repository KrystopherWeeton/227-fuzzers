; ModuleID = '../../third_party/pdfium/core/fxcrt/cfx_readonlymemorystream.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/cfx_readonlymemorystream.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_ReadOnlyMemoryStream = type { %class.IFX_SeekableReadStream.base, %"class.std::__1::unique_ptr", %"class.pdfium::span", %"class.fxcrt::Retainable" }
%class.IFX_SeekableReadStream.base = type { %class.IFX_StreamWithSize }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }

$_ZN22IFX_SeekableReadStreamD1Ev = comdat any

$_ZN22IFX_SeekableReadStreamD0Ev = comdat any

$_ZTv0_n24_N22IFX_SeekableReadStreamD1Ev = comdat any

$_ZTv0_n24_N22IFX_SeekableReadStreamD0Ev = comdat any

@_ZTV24CFX_ReadOnlyMemoryStream = hidden unnamed_addr constant { [12 x i8*], [5 x i8*] } { [12 x i8*] [i8* null, i8* inttoptr (i64 32 to i8*), i8* null, i8* null, i8* null, i8* bitcast (i64 (%class.CFX_ReadOnlyMemoryStream*)* @_ZN24CFX_ReadOnlyMemoryStream7GetSizeEv to i8*), i8* bitcast (i1 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream5IsEOFEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream11GetPositionEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*, i8*, i64)* @_ZN22IFX_SeekableReadStream9ReadBlockEPvm to i8*), i8* bitcast (i1 (%class.CFX_ReadOnlyMemoryStream*, i8*, i64, i64)* @_ZN24CFX_ReadOnlyMemoryStream17ReadBlockAtOffsetEPvlm to i8*), i8* bitcast (void (%class.CFX_ReadOnlyMemoryStream*)* @_ZN24CFX_ReadOnlyMemoryStreamD1Ev to i8*), i8* bitcast (void (%class.CFX_ReadOnlyMemoryStream*)* @_ZN24CFX_ReadOnlyMemoryStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%class.CFX_ReadOnlyMemoryStream*)* @_ZTv0_n24_N24CFX_ReadOnlyMemoryStreamD1Ev to i8*), i8* bitcast (void (%class.CFX_ReadOnlyMemoryStream*)* @_ZTv0_n24_N24CFX_ReadOnlyMemoryStreamD0Ev to i8*)] }, align 8
@_ZTT24CFX_ReadOnlyMemoryStream = hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTC24CFX_ReadOnlyMemoryStream0_22IFX_SeekableReadStream, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTC24CFX_ReadOnlyMemoryStream0_22IFX_SeekableReadStream, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTC24CFX_ReadOnlyMemoryStream0_22IFX_SeekableReadStream, i32 0, inrange i32 0, i32 5) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i32 0, inrange i32 0, i32 5) to i8*)], align 8
@_ZTC24CFX_ReadOnlyMemoryStream0_22IFX_SeekableReadStream = hidden unnamed_addr constant { [12 x i8*], [5 x i8*] } { [12 x i8*] [i8* null, i8* inttoptr (i64 32 to i8*), i8* null, i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream5IsEOFEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStream11GetPositionEv to i8*), i8* bitcast (i64 (%class.IFX_SeekableReadStream*, i8*, i64)* @_ZN22IFX_SeekableReadStream9ReadBlockEPvm to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZN22IFX_SeekableReadStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZTv0_n24_N22IFX_SeekableReadStreamD1Ev to i8*), i8* bitcast (void (%class.IFX_SeekableReadStream*)* @_ZTv0_n24_N22IFX_SeekableReadStreamD0Ev to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CFX_ReadOnlyMemoryStreamC2ENSt3__110unique_ptrIh13FxFreeDeleterEEm(%class.CFX_ReadOnlyMemoryStream* nocapture, i8** nocapture readonly, i8*, i64) unnamed_addr #0 align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds i8*, i8** %1, i64 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds i8*, i8** %1, i64 2
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8**
  %14 = inttoptr i64 %8 to i8*
  %15 = getelementptr i8, i8* %14, i64 -32
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %17
  %20 = bitcast i8* %19 to i64*
  store i64 %12, i64* %20, align 8
  %21 = getelementptr inbounds i8*, i8** %1, i64 3
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = load i8*, i8** %13, align 8
  %25 = getelementptr i8, i8* %24, i64 -40
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %18, i64 %27
  %29 = bitcast i8* %28 to i64*
  store i64 %23, i64* %29, align 8
  %30 = bitcast i8** %1 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %9, align 8
  %32 = getelementptr inbounds i8*, i8** %1, i64 4
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = inttoptr i64 %31 to i8*
  %36 = getelementptr i8, i8* %35, i64 -32
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds i8, i8* %18, i64 %38
  %40 = bitcast i8* %39 to i64*
  store i64 %34, i64* %40, align 8
  %41 = getelementptr inbounds i8*, i8** %1, i64 5
  %42 = bitcast i8** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = load i8*, i8** %13, align 8
  %45 = getelementptr i8, i8* %44, i64 -40
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* %18, i64 %47
  %49 = bitcast i8* %48 to i64*
  store i64 %43, i64* %49, align 8
  %50 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 1
  %51 = bitcast %"class.std::__1::unique_ptr"* %50 to i64*
  store i64 %5, i64* %51, align 8
  %52 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 2
  %53 = bitcast %"class.pdfium::span"* %52 to i64*
  store i64 %5, i64* %53, align 8
  %54 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 2, i32 1
  store i64 %3, i64* %54, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CFX_ReadOnlyMemoryStreamC1ENSt3__110unique_ptrIh13FxFreeDeleterEEm(%class.CFX_ReadOnlyMemoryStream* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 3, i32 0
  %6 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 3, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 0, i64 5) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 2
  %11 = bitcast %"class.pdfium::span"* %10 to i64*
  store i64 %4, i64* %11, align 8
  %12 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 2, i32 1
  store i64 %2, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CFX_ReadOnlyMemoryStreamC2EN6pdfium4spanIKhEE(%class.CFX_ReadOnlyMemoryStream* nocapture, i8** nocapture readonly, %"class.pdfium::span"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds i8*, i8** %1, i64 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds i8*, i8** %1, i64 2
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8**
  %12 = inttoptr i64 %6 to i8*
  %13 = getelementptr i8, i8* %12, i64 -32
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = bitcast i8* %17 to i64*
  store i64 %10, i64* %18, align 8
  %19 = getelementptr inbounds i8*, i8** %1, i64 3
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load i8*, i8** %11, align 8
  %23 = getelementptr i8, i8* %22, i64 -40
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %16, i64 %25
  %27 = bitcast i8* %26 to i64*
  store i64 %21, i64* %27, align 8
  %28 = bitcast i8** %1 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %7, align 8
  %30 = getelementptr inbounds i8*, i8** %1, i64 4
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = inttoptr i64 %29 to i8*
  %34 = getelementptr i8, i8* %33, i64 -32
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %16, i64 %36
  %38 = bitcast i8* %37 to i64*
  store i64 %32, i64* %38, align 8
  %39 = getelementptr inbounds i8*, i8** %1, i64 5
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = load i8*, i8** %11, align 8
  %43 = getelementptr i8, i8* %42, i64 -40
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds i8, i8* %16, i64 %45
  %47 = bitcast i8* %46 to i64*
  store i64 %41, i64* %47, align 8
  %48 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 1
  %49 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 2
  %51 = bitcast %"class.pdfium::span"* %50 to i8*
  %52 = bitcast %"class.pdfium::span"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CFX_ReadOnlyMemoryStreamC1EN6pdfium4spanIKhEE(%class.CFX_ReadOnlyMemoryStream* nocapture, %"class.pdfium::span"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 3, i32 0
  %4 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 3, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 0, i64 5) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 2
  %9 = bitcast %"class.pdfium::span"* %8 to i8*
  %10 = bitcast %"class.pdfium::span"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CFX_ReadOnlyMemoryStreamD2Ev(%class.CFX_ReadOnlyMemoryStream* nocapture, i8** nocapture readonly) unnamed_addr #0 align 2 {
  %3 = bitcast i8** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds i8*, i8** %1, i64 4
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8**
  %10 = inttoptr i64 %4 to i8*
  %11 = getelementptr i8, i8* %10, i64 -32
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %13
  %16 = bitcast i8* %15 to i64*
  store i64 %8, i64* %16, align 8
  %17 = getelementptr inbounds i8*, i8** %1, i64 5
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = load i8*, i8** %9, align 8
  %21 = getelementptr i8, i8* %20, i64 -40
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i8, i8* %14, i64 %23
  %25 = bitcast i8* %24 to i64*
  store i64 %19, i64* %25, align 8
  %26 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  store i8* null, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %2
  tail call void @_Z7FX_FreePv(i8* nonnull %27) #7
  br label %30

30:                                               ; preds = %2, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CFX_ReadOnlyMemoryStreamD1Ev(%class.CFX_ReadOnlyMemoryStream* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i64*
  %3 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 3
  %4 = bitcast %"class.fxcrt::Retainable"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 0, i64 5) to i64), i64* %2, align 8
  %5 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  store i8* null, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %6) #7
  br label %9

9:                                                ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n24_N24CFX_ReadOnlyMemoryStreamD1Ev(%class.CFX_ReadOnlyMemoryStream* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8*
  %3 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 0, i64 5) to i64), i64* %9, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  store i8* null, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %14) #7
  br label %17

17:                                               ; preds = %1, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CFX_ReadOnlyMemoryStreamD0Ev(%class.CFX_ReadOnlyMemoryStream*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i64*
  %3 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 3
  %4 = bitcast %"class.fxcrt::Retainable"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 0, i64 5) to i64), i64* %2, align 8
  %5 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  store i8* null, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %6) #7
  br label %9

9:                                                ; preds = %1, %8
  %10 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZTv0_n24_N24CFX_ReadOnlyMemoryStreamD0Ev(%class.CFX_ReadOnlyMemoryStream*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8*
  %3 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [12 x i8*], [5 x i8*] }, { [12 x i8*], [5 x i8*] }* @_ZTV24CFX_ReadOnlyMemoryStream, i64 0, inrange i32 0, i64 5) to i64), i64* %9, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  store i8* null, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %14) #7
  br label %17

17:                                               ; preds = %1, %16
  tail call void @_ZdlPv(i8* %8) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN24CFX_ReadOnlyMemoryStream7GetSizeEv(%class.CFX_ReadOnlyMemoryStream* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 2, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp sgt i64 %3, -1
  br i1 %4, label %6, label %5, !prof !2

5:                                                ; preds = %1
  tail call void @llvm.trap() #7
  unreachable

6:                                                ; preds = %1
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZTv0_n24_N24CFX_ReadOnlyMemoryStream7GetSizeEv(%class.CFX_ReadOnlyMemoryStream* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8*
  %3 = bitcast %class.CFX_ReadOnlyMemoryStream* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = getelementptr inbounds i8, i8* %8, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp sgt i64 %11, -1
  br i1 %12, label %14, label %13, !prof !2

13:                                               ; preds = %1
  tail call void @llvm.trap() #7
  unreachable

14:                                               ; preds = %1
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN24CFX_ReadOnlyMemoryStream17ReadBlockAtOffsetEPvlm(%class.CFX_ReadOnlyMemoryStream* nocapture readonly, i8*, i64, i64) unnamed_addr #0 align 2 {
  %5 = icmp eq i8* %1, null
  %6 = icmp slt i64 %2, 0
  %7 = or i1 %5, %6
  %8 = icmp eq i64 %3, 0
  %9 = or i1 %7, %8
  br i1 %9, label %38, label %10

10:                                               ; preds = %4
  %11 = zext i64 %3 to i65
  %12 = sext i64 %2 to i65
  %13 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %11, i65 %12) #7
  %14 = extractvalue { i65, i1 } %13, 1
  %15 = extractvalue { i65, i1 } %13, 0
  %16 = icmp slt i65 %15, 0
  %17 = or i1 %14, %16
  br i1 %17, label %38, label %18

18:                                               ; preds = %10
  %19 = trunc i65 %15 to i64
  %20 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 2, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, %19
  br i1 %22, label %38, label %23

23:                                               ; preds = %18
  %24 = icmp ult i64 %21, %2
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %23
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !4, !srcloc !7
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !4, !srcloc !8
  unreachable

26:                                               ; preds = %23
  %27 = icmp eq i64 %3, -1
  %28 = sub i64 %21, %2
  %29 = icmp ult i64 %28, %3
  %30 = xor i1 %27, true
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %26
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !4, !srcloc !9
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #7, !noalias !4, !srcloc !10
  unreachable

33:                                               ; preds = %26
  %34 = getelementptr inbounds %class.CFX_ReadOnlyMemoryStream, %class.CFX_ReadOnlyMemoryStream* %0, i64 0, i32 2, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8, !noalias !4
  %36 = getelementptr inbounds i8, i8* %35, i64 %2
  %37 = select i1 %27, i64 %28, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 1 %36, i64 %37, i1 false)
  br label %38

38:                                               ; preds = %33, %18, %10, %4
  %39 = phi i1 [ false, %4 ], [ true, %33 ], [ false, %10 ], [ false, %18 ]
  ret i1 %39
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZN22IFX_SeekableReadStream5IsEOFEv(%class.IFX_SeekableReadStream*) unnamed_addr #3

declare i64 @_ZN22IFX_SeekableReadStream11GetPositionEv(%class.IFX_SeekableReadStream*) unnamed_addr #3

declare i64 @_ZN22IFX_SeekableReadStream9ReadBlockEPvm(%class.IFX_SeekableReadStream*, i8*, i64) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22IFX_SeekableReadStreamD1Ev(%class.IFX_SeekableReadStream*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22IFX_SeekableReadStreamD0Ev(%class.IFX_SeekableReadStream*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N22IFX_SeekableReadStreamD1Ev(%class.IFX_SeekableReadStream*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N22IFX_SeekableReadStreamD0Ev(%class.IFX_SeekableReadStream*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind readnone speculatable
declare { i65, i1 } @llvm.sadd.with.overflow.i65(i65, i65) #6

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK6pdfium4spanIKhE7subspanEmm: argument 0"}
!6 = distinct !{!6, !"_ZNK6pdfium4spanIKhE7subspanEmm"}
!7 = !{i32 -2143840637}
!8 = !{i32 -2143840616}
!9 = !{i32 -2143840050}
!10 = !{i32 -2143840029}
