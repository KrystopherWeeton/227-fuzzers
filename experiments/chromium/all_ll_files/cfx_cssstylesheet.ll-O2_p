; ModuleID = '../../third_party/pdfium/core/fxcrt/css/cfx_cssstylesheet.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/css/cfx_cssstylesheet.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_CSSStyleSheet = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.CFX_CSSStyleRule* }
%class.CFX_CSSStyleRule = type { %class.CFX_CSSDeclaration, %"class.std::__1::vector.19" }
%class.CFX_CSSDeclaration = type { %"class.std::__1::vector.3", %"class.std::__1::vector.11" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr.5" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr.5"* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.std::__1::unique_ptr.13"*, %"class.std::__1::unique_ptr.13"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::unique_ptr.13" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::unique_ptr.13"* }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.CFX_CSSSelector* }
%class.CFX_CSSSelector = type { i8, i32, %"class.std::__1::unique_ptr.21" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i32* }
%class.CFX_CSSSyntaxParser = type { i8, i8, %class.CFX_CSSOutputTextBuf, %class.CFX_CSSInputTextBuf, %"class.std::__1::stack" }
%class.CFX_CSSOutputTextBuf = type { %"class.std::__1::vector.36" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { i32*, i32*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i32* }
%class.CFX_CSSInputTextBuf = type { %"class.fxcrt::StringViewTemplate", i64 }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.46" }
%"struct.std::__1::__split_buffer" = type { i8**, i8**, i8**, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i8** }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i64 }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.54" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"struct.CFX_CSSData::Property" = type { i8, i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrI15CFX_CSSSelectorNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI16CFX_CSSStyleRuleNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZN17CFX_CSSStyleSheetC1Ev = hidden unnamed_addr alias void (%class.CFX_CSSStyleSheet*), void (%class.CFX_CSSStyleSheet*)* @_ZN17CFX_CSSStyleSheetC2Ev
@_ZN17CFX_CSSStyleSheetD1Ev = hidden unnamed_addr alias void (%class.CFX_CSSStyleSheet*), void (%class.CFX_CSSStyleSheet*)* @_ZN17CFX_CSSStyleSheetD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CFX_CSSStyleSheetC2Ev(%class.CFX_CSSStyleSheet* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFX_CSSStyleSheet* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CFX_CSSStyleSheetD2Ev(%class.CFX_CSSStyleSheet* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSStyleSheet, %class.CFX_CSSStyleSheet* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %7 = getelementptr inbounds %class.CFX_CSSStyleSheet, %class.CFX_CSSStyleSheet* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %8, %3
  br i1 %9, label %23, label %10

10:                                               ; preds = %5, %18
  %11 = phi %"class.std::__1::unique_ptr"* [ %12, %18 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 -1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %class.CFX_CSSStyleRule*, %class.CFX_CSSStyleRule** %13, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %13, align 8
  %15 = icmp eq %class.CFX_CSSStyleRule* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  tail call void @_ZN16CFX_CSSStyleRuleD1Ev(%class.CFX_CSSStyleRule* nonnull %14) #10
  %17 = bitcast %class.CFX_CSSStyleRule* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %16, %10
  %19 = icmp eq %"class.std::__1::unique_ptr"* %12, %3
  br i1 %19, label %20, label %10

20:                                               ; preds = %18
  %21 = bitcast %class.CFX_CSSStyleSheet* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %5
  %24 = phi i8* [ %22, %20 ], [ %6, %5 ]
  store %"class.std::__1::unique_ptr"* %3, %"class.std::__1::unique_ptr"** %7, align 8
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK17CFX_CSSStyleSheet10CountRulesEv(%class.CFX_CSSStyleSheet* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSStyleSheet, %class.CFX_CSSStyleSheet* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.std::__1::unique_ptr"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %class.CFX_CSSStyleSheet* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = ashr exact i64 %7, 3
  ret i64 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CFX_CSSStyleRule* @_ZNK17CFX_CSSStyleSheet7GetRuleEm(%class.CFX_CSSStyleSheet* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_CSSStyleSheet, %class.CFX_CSSStyleSheet* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %1, i32 0, i32 0, i32 0
  %6 = load %class.CFX_CSSStyleRule*, %class.CFX_CSSStyleRule** %5, align 8
  ret %class.CFX_CSSStyleRule* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17CFX_CSSStyleSheet10LoadBufferEN5fxcrt18StringViewTemplateIwEE(%class.CFX_CSSStyleSheet*, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = getelementptr inbounds %class.CFX_CSSStyleSheet, %class.CFX_CSSStyleSheet* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = getelementptr inbounds %class.CFX_CSSStyleSheet, %class.CFX_CSSStyleSheet* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr"* %7, %5
  br i1 %8, label %19, label %9

9:                                                ; preds = %2, %17
  %10 = phi %"class.std::__1::unique_ptr"* [ %11, %17 ], [ %7, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 -1
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %class.CFX_CSSStyleRule*, %class.CFX_CSSStyleRule** %12, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %12, align 8
  %14 = icmp eq %class.CFX_CSSStyleRule* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  tail call void @_ZN16CFX_CSSStyleRuleD1Ev(%class.CFX_CSSStyleRule* nonnull %13) #10
  %16 = bitcast %class.CFX_CSSStyleRule* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %9
  %18 = icmp eq %"class.std::__1::unique_ptr"* %11, %5
  br i1 %18, label %19, label %9

19:                                               ; preds = %17, %2
  store %"class.std::__1::unique_ptr"* %5, %"class.std::__1::unique_ptr"** %6, align 8
  %20 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20)
  %21 = tail call i8* @_Znwm(i64 104) #11
  %22 = bitcast i8* %21 to %class.CFX_CSSSyntaxParser*
  %23 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %23, i64 16, i1 false) #10
  call void @_ZN19CFX_CSSSyntaxParserC1EN5fxcrt18StringViewTemplateIwEE(%class.CFX_CSSSyntaxParser* nonnull %22, %"class.fxcrt::StringViewTemplate"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20)
  br label %24

24:                                               ; preds = %29, %19
  %25 = call zeroext i8 @_ZN19CFX_CSSSyntaxParser13DoSyntaxParseEv(%class.CFX_CSSSyntaxParser* nonnull %22) #10
  %26 = icmp eq i8 %25, 3
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = call zeroext i8 @_ZN17CFX_CSSStyleSheet13LoadStyleRuleEP19CFX_CSSSyntaxParser(%class.CFX_CSSStyleSheet* %0, %class.CFX_CSSSyntaxParser* nonnull %22)
  br label %29

29:                                               ; preds = %27, %24
  %30 = phi i8 [ %28, %27 ], [ %25, %24 ]
  switch i8 %30, label %24 [
    i8 1, label %31
    i8 0, label %32
  ]

31:                                               ; preds = %29
  br label %32

32:                                               ; preds = %29, %31
  %33 = phi i1 [ true, %31 ], [ false, %29 ]
  call void @_ZN19CFX_CSSSyntaxParserD1Ev(%class.CFX_CSSSyntaxParser* nonnull %22) #10
  call void @_ZdlPv(i8* nonnull %21) #11
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i8 @_ZN19CFX_CSSSyntaxParser13DoSyntaxParseEv(%class.CFX_CSSSyntaxParser*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN17CFX_CSSStyleSheet13LoadStyleRuleEP19CFX_CSSSyntaxParser(%class.CFX_CSSStyleSheet*, %class.CFX_CSSSyntaxParser*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.19", align 8
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.std::__1::unique_ptr.21", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %10 = alloca %"class.fxcrt::WideString", align 8
  %11 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %12 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %13 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %14 = alloca %"class.std::__1::unique_ptr", align 8
  %15 = bitcast %"class.std::__1::vector.19"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %3, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %3, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #10
  %19 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %20, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %4) #10
  %21 = bitcast %"class.std::__1::unique_ptr"* %14 to i8*
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr"* %14 to i8**
  %24 = getelementptr inbounds %class.CFX_CSSStyleSheet, %class.CFX_CSSStyleSheet* %0, i64 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %class.CFX_CSSStyleSheet, %class.CFX_CSSStyleSheet* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %26 = getelementptr inbounds %class.CFX_CSSStyleSheet, %class.CFX_CSSStyleSheet* %0, i64 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %28 = bitcast %"class.std::__1::unique_ptr"** %24 to i64*
  %29 = bitcast %"class.fxcrt::StringViewTemplate"* %12 to i8*
  %30 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %12, i64 0, i32 0, i32 1
  %31 = bitcast %"class.fxcrt::StringViewTemplate"* %13 to i8*
  %32 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  %33 = bitcast %"class.fxcrt::StringViewTemplate"* %9 to i8*
  %34 = bitcast %"class.fxcrt::WideString"* %10 to i8*
  %35 = bitcast %"class.fxcrt::StringViewTemplate"* %11 to i8*
  %36 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  %37 = bitcast %"class.std::__1::unique_ptr.21"* %6 to i8*
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %6, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.fxcrt::StringViewTemplate"* %7 to i8*
  %40 = bitcast %"class.std::__1::unique_ptr.21"** %17 to i64*
  %41 = bitcast %"class.fxcrt::StringViewTemplate"* %12 to i8*
  %42 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  %43 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  br label %44

44:                                               ; preds = %112, %2
  %45 = phi %class.CFX_CSSStyleRule* [ %97, %112 ], [ null, %2 ]
  %46 = phi %"struct.CFX_CSSData::Property"* [ %48, %112 ], [ null, %2 ]
  br label %47

47:                                               ; preds = %78, %44
  %48 = phi %"struct.CFX_CSSData::Property"* [ %46, %44 ], [ %79, %78 ]
  %49 = icmp eq %"struct.CFX_CSSData::Property"* %48, null
  br label %50

50:                                               ; preds = %87, %47
  %51 = call zeroext i8 @_ZN19CFX_CSSSyntaxParser13DoSyntaxParseEv(%class.CFX_CSSSyntaxParser* %1) #10
  switch i8 %51, label %135 [
    i8 4, label %52
    i8 7, label %72
    i8 8, label %80
    i8 5, label %88
    i8 6, label %116
    i8 1, label %134
  ]

52:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false)
  call void @_ZNK19CFX_CSSSyntaxParser16GetCurrentStringEv(%"class.fxcrt::StringViewTemplate"* nonnull sret %5, %class.CFX_CSSSyntaxParser* %1) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  store %class.CFX_CSSSelector* inttoptr (i64 -6148914691236517206 to %class.CFX_CSSSelector*), %class.CFX_CSSSelector** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %36, i64 16, i1 false)
  %53 = call %class.CFX_CSSSelector* @_ZN15CFX_CSSSelector10FromStringEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %7) #10
  store %class.CFX_CSSSelector* %53, %class.CFX_CSSSelector** %38, align 8
  %54 = icmp eq %class.CFX_CSSSelector* %53, null
  %55 = ptrtoint %class.CFX_CSSSelector* %53 to i64
  br i1 %54, label %56, label %57

56:                                               ; preds = %52
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %38, align 8
  br label %71

57:                                               ; preds = %52
  %58 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %17, align 8
  %59 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %18, align 8
  %60 = icmp ult %"class.std::__1::unique_ptr.21"* %58, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %38, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.21"* %58 to i64*
  store i64 %55, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %58, i64 1
  %64 = ptrtoint %"class.std::__1::unique_ptr.21"* %63 to i64
  store i64 %64, i64* %40, align 8
  br label %66

65:                                               ; preds = %57
  call void @_ZNSt3__16vectorINS_10unique_ptrI15CFX_CSSSelectorNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.19"* nonnull %3, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %6) #10
  br label %66

66:                                               ; preds = %65, %61
  %67 = load %class.CFX_CSSSelector*, %class.CFX_CSSSelector** %38, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %38, align 8
  %68 = icmp eq %class.CFX_CSSSelector* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  call void @_ZN15CFX_CSSSelectorD1Ev(%class.CFX_CSSSelector* nonnull %67) #10
  %70 = getelementptr inbounds %class.CFX_CSSSelector, %class.CFX_CSSSelector* %67, i64 0, i32 0
  call void @_ZdlPv(i8* %70) #11
  br label %71

71:                                               ; preds = %56, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #10
  br label %87

72:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 16, i1 false)
  call void @_ZNK19CFX_CSSSyntaxParser16GetCurrentStringEv(%"class.fxcrt::StringViewTemplate"* nonnull sret %8, %class.CFX_CSSSyntaxParser* %1) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* nonnull align 8 %32, i64 16, i1 false)
  %73 = call %"struct.CFX_CSSData::Property"* @_ZN11CFX_CSSData17GetPropertyByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %9) #10
  %74 = icmp eq %"struct.CFX_CSSData::Property"* %73, null
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %32, i64 16, i1 false)
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull %10, %"class.fxcrt::StringViewTemplate"* nonnull %11) #10
  %76 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* nonnull %4, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %10) #10
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %77

77:                                               ; preds = %72, %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #10
  br label %78

78:                                               ; preds = %80, %77
  %79 = phi %"struct.CFX_CSSData::Property"* [ %73, %77 ], [ null, %80 ]
  br label %47

80:                                               ; preds = %50
  br i1 %49, label %78, label %81

81:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  call void @_ZNK19CFX_CSSSyntaxParser16GetCurrentStringEv(%"class.fxcrt::StringViewTemplate"* nonnull sret %12, %class.CFX_CSSSyntaxParser* %1) #10
  %82 = call %class.CFX_CSSDeclaration* @_ZN16CFX_CSSStyleRule14GetDeclarationEv(%class.CFX_CSSStyleRule* %45) #10
  %83 = load i64, i64* %30, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %81
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %29, i64 16, i1 false)
  call void @_ZN18CFX_CSSDeclaration11AddPropertyEPKN11CFX_CSSData8PropertyEN5fxcrt18StringViewTemplateIwEE(%class.CFX_CSSDeclaration* %82, %"struct.CFX_CSSData::Property"* nonnull %48, %"class.fxcrt::StringViewTemplate"* nonnull %13) #10
  br label %86

86:                                               ; preds = %85, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #10
  br label %87

87:                                               ; preds = %86, %71
  br label %50

88:                                               ; preds = %50
  %89 = icmp eq %class.CFX_CSSStyleRule* %45, null
  br i1 %89, label %90, label %94

90:                                               ; preds = %88
  %91 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %16, align 8
  %92 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %17, align 8
  %93 = icmp eq %"class.std::__1::unique_ptr.21"* %91, %92
  br i1 %93, label %94, label %95

94:                                               ; preds = %88, %90
  br label %113

95:                                               ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  store %class.CFX_CSSStyleRule* inttoptr (i64 -6148914691236517206 to %class.CFX_CSSStyleRule*), %class.CFX_CSSStyleRule** %22, align 8
  %96 = call i8* @_Znwm(i64 72) #11
  %97 = bitcast i8* %96 to %class.CFX_CSSStyleRule*
  call void @_ZN16CFX_CSSStyleRuleC1Ev(%class.CFX_CSSStyleRule* nonnull %97) #10
  store i8* %96, i8** %23, align 8
  call void @_ZN16CFX_CSSStyleRule11SetSelectorEPNSt3__16vectorINS0_10unique_ptrI15CFX_CSSSelectorNS0_14default_deleteIS3_EEEENS0_9allocatorIS6_EEEE(%class.CFX_CSSStyleRule* nonnull %97, %"class.std::__1::vector.19"* nonnull %3) #10
  %98 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %24, align 8
  %99 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %25, align 8
  %100 = icmp ult %"class.std::__1::unique_ptr"* %98, %99
  br i1 %100, label %101, label %106

101:                                              ; preds = %95
  %102 = load i64, i64* %27, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %22, align 8
  %103 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 1
  %105 = ptrtoint %"class.std::__1::unique_ptr"* %104 to i64
  store i64 %105, i64* %28, align 8
  br label %107

106:                                              ; preds = %95
  call void @_ZNSt3__16vectorINS_10unique_ptrI16CFX_CSSStyleRuleNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %26, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %14) #10
  br label %107

107:                                              ; preds = %101, %106
  %108 = load %class.CFX_CSSStyleRule*, %class.CFX_CSSStyleRule** %22, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %22, align 8
  %109 = icmp eq %class.CFX_CSSStyleRule* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %107
  call void @_ZN16CFX_CSSStyleRuleD1Ev(%class.CFX_CSSStyleRule* nonnull %108) #10
  %111 = bitcast %class.CFX_CSSStyleRule* %108 to i8*
  call void @_ZdlPv(i8* %111) #11
  br label %112

112:                                              ; preds = %107, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %44

113:                                              ; preds = %115, %94
  %114 = call zeroext i8 @_ZN19CFX_CSSSyntaxParser13DoSyntaxParseEv(%class.CFX_CSSSyntaxParser* %1) #10
  switch i8 %114, label %135 [
    i8 4, label %115
    i8 5, label %115
    i8 7, label %115
    i8 8, label %115
  ]

115:                                              ; preds = %113, %113, %113, %113
  br label %113

116:                                              ; preds = %50
  %117 = icmp eq %class.CFX_CSSStyleRule* %45, null
  br i1 %117, label %135, label %118

118:                                              ; preds = %116
  %119 = call %class.CFX_CSSDeclaration* @_ZN16CFX_CSSStyleRule14GetDeclarationEv(%class.CFX_CSSStyleRule* nonnull %45) #10
  %120 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %119, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %120, align 8
  %122 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %119, i64 0, i32 0, i32 0, i32 1
  %123 = load %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"** %122, align 8
  %124 = icmp eq %"class.std::__1::unique_ptr.5"* %121, %123
  br i1 %124, label %125, label %135

125:                                              ; preds = %118
  %126 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %24, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %126, i64 -1
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %127, i64 0, i32 0, i32 0, i32 0
  %129 = load %class.CFX_CSSStyleRule*, %class.CFX_CSSStyleRule** %128, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %128, align 8
  %130 = icmp eq %class.CFX_CSSStyleRule* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %125
  call void @_ZN16CFX_CSSStyleRuleD1Ev(%class.CFX_CSSStyleRule* nonnull %129) #10
  %132 = bitcast %class.CFX_CSSStyleRule* %129 to i8*
  call void @_ZdlPv(i8* %132) #11
  br label %133

133:                                              ; preds = %125, %131
  store %"class.std::__1::unique_ptr"* %127, %"class.std::__1::unique_ptr"** %24, align 8
  br label %135

134:                                              ; preds = %50
  br label %135

135:                                              ; preds = %113, %50, %134, %118, %133, %116
  %136 = phi i8 [ 2, %116 ], [ 2, %133 ], [ 2, %118 ], [ %51, %134 ], [ 0, %50 ], [ 2, %113 ]
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %137 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %16, align 8
  %138 = icmp eq %"class.std::__1::unique_ptr.21"* %137, null
  br i1 %138, label %158, label %139

139:                                              ; preds = %135
  %140 = bitcast %"class.std::__1::unique_ptr.21"* %137 to i8*
  %141 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %17, align 8
  %142 = icmp eq %"class.std::__1::unique_ptr.21"* %141, %137
  br i1 %142, label %156, label %143

143:                                              ; preds = %139, %151
  %144 = phi %"class.std::__1::unique_ptr.21"* [ %145, %151 ], [ %141, %139 ]
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %144, i64 -1
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %145, i64 0, i32 0, i32 0, i32 0
  %147 = load %class.CFX_CSSSelector*, %class.CFX_CSSSelector** %146, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %146, align 8
  %148 = icmp eq %class.CFX_CSSSelector* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %143
  call void @_ZN15CFX_CSSSelectorD1Ev(%class.CFX_CSSSelector* nonnull %147) #10
  %150 = getelementptr inbounds %class.CFX_CSSSelector, %class.CFX_CSSSelector* %147, i64 0, i32 0
  call void @_ZdlPv(i8* %150) #11
  br label %151

151:                                              ; preds = %149, %143
  %152 = icmp eq %"class.std::__1::unique_ptr.21"* %145, %137
  br i1 %152, label %153, label %143

153:                                              ; preds = %151
  %154 = bitcast %"class.std::__1::vector.19"* %3 to i8**
  %155 = load i8*, i8** %154, align 8
  br label %156

156:                                              ; preds = %153, %139
  %157 = phi i8* [ %155, %153 ], [ %140, %139 ]
  store %"class.std::__1::unique_ptr.21"* %137, %"class.std::__1::unique_ptr.21"** %17, align 8
  call void @_ZdlPv(i8* %157) #11
  br label %158

158:                                              ; preds = %135, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  ret i8 %136
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

declare void @_ZNK19CFX_CSSSyntaxParser16GetCurrentStringEv(%"class.fxcrt::StringViewTemplate"* sret, %class.CFX_CSSSyntaxParser*) local_unnamed_addr #3

declare %class.CFX_CSSSelector* @_ZN15CFX_CSSSelector10FromStringEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %"struct.CFX_CSSData::Property"* @_ZN11CFX_CSSData17GetPropertyByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #3

declare void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #4

declare %class.CFX_CSSDeclaration* @_ZN16CFX_CSSStyleRule14GetDeclarationEv(%class.CFX_CSSStyleRule*) local_unnamed_addr #3

declare void @_ZN18CFX_CSSDeclaration11AddPropertyEPKN11CFX_CSSData8PropertyEN5fxcrt18StringViewTemplateIwEE(%class.CFX_CSSDeclaration*, %"struct.CFX_CSSData::Property"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #3

declare void @_ZN16CFX_CSSStyleRule11SetSelectorEPNSt3__16vectorINS0_10unique_ptrI15CFX_CSSSelectorNS0_14default_deleteIS3_EEEENS0_9allocatorIS6_EEEE(%class.CFX_CSSStyleRule*, %"class.std::__1::vector.19"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CFX_CSSStyleSheet11SkipRuleSetEP19CFX_CSSSyntaxParser(%class.CFX_CSSStyleSheet* nocapture readnone, %class.CFX_CSSSyntaxParser*) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %5, %2
  %4 = tail call zeroext i8 @_ZN19CFX_CSSSyntaxParser13DoSyntaxParseEv(%class.CFX_CSSSyntaxParser* %1) #10
  switch i8 %4, label %6 [
    i8 4, label %5
    i8 5, label %5
    i8 7, label %5
    i8 8, label %5
  ]

5:                                                ; preds = %3, %3, %3, %3
  br label %3

6:                                                ; preds = %3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN19CFX_CSSSyntaxParserC1EN5fxcrt18StringViewTemplateIwEE(%class.CFX_CSSSyntaxParser*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN19CFX_CSSSyntaxParserD1Ev(%class.CFX_CSSSyntaxParser*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN15CFX_CSSSelectorD1Ev(%class.CFX_CSSSelector*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI15CFX_CSSSelectorNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.19"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.21"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.19"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.21"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.21"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.21"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.21"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.21"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.21"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.21"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.21"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.21"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CFX_CSSSelector** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.21"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.21"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.21"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.21"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.21"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.21"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.21"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.21"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.21"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.21"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.21"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.21"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.21"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.21"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.21"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.21"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.21"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.21"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.21"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.21"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.21"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.21"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.21"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.21"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.21"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.21"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.21"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.21"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.21"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.21"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.21"*
  %138 = icmp eq %"class.std::__1::unique_ptr.21"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.21"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CFX_CSSSelector*, %class.CFX_CSSSelector** %142, align 8
  store %class.CFX_CSSSelector* null, %class.CFX_CSSSelector** %142, align 8
  %144 = icmp eq %class.CFX_CSSSelector* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN15CFX_CSSSelectorD1Ev(%class.CFX_CSSSelector* nonnull %143) #10
  %146 = getelementptr inbounds %class.CFX_CSSSelector, %class.CFX_CSSSelector* %143, i64 0, i32 0
  tail call void @_ZdlPv(i8* %146) #11
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.21"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZN16CFX_CSSStyleRuleC1Ev(%class.CFX_CSSStyleRule*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN16CFX_CSSStyleRuleD1Ev(%class.CFX_CSSStyleRule*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI16CFX_CSSStyleRuleNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CFX_CSSStyleRule** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !4

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CFX_CSSStyleRule*, %class.CFX_CSSStyleRule** %142, align 8
  store %class.CFX_CSSStyleRule* null, %class.CFX_CSSStyleRule** %142, align 8
  %144 = icmp eq %class.CFX_CSSStyleRule* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN16CFX_CSSStyleRuleD1Ev(%class.CFX_CSSStyleRule* nonnull %143) #10
  %146 = bitcast %class.CFX_CSSStyleRule* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #11
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
