; ModuleID = '../../third_party/zlib/uncompr.c'
source_filename = "../../third_party/zlib/uncompr.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque

@.str = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_uncompress2(i8*, i64* nocapture, i8*, i64* nocapture) local_unnamed_addr #0 {
  %5 = alloca %struct.z_stream_s, align 8
  %6 = alloca [1 x i8], align 1
  %7 = bitcast %struct.z_stream_s* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %7) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 112, i1 false)
  %8 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #3
  store i8 -86, i8* %8, align 1
  %9 = load i64, i64* %3, align 8
  %10 = load i64, i64* %1, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %4
  store i64 0, i64* %1, align 8
  br label %13

13:                                               ; preds = %4, %12
  %14 = phi i8* [ %0, %12 ], [ %8, %4 ]
  %15 = phi i64 [ %10, %12 ], [ 1, %4 ]
  %16 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 0
  store i8* %2, i8** %16, align 8
  %17 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 8
  %19 = bitcast i8* (i8*, i32, i32)** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false)
  %20 = call i32 @Cr_z_inflateInit_(%struct.z_stream_s* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112) #3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %75

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 3
  store i8* %14, i8** %23, align 8
  %24 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 4
  store i32 0, i32* %24, align 8
  br label %27

25:                                               ; preds = %46
  %26 = load i32, i32* %24, align 8
  br label %27

27:                                               ; preds = %25, %22
  %28 = phi i32 [ %26, %25 ], [ 0, %22 ]
  %29 = phi i64 [ %47, %25 ], [ %9, %22 ]
  %30 = phi i64 [ %38, %25 ], [ %15, %22 ]
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = icmp ult i64 %30, 4294967295
  %34 = select i1 %33, i64 %30, i64 4294967295
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %24, align 8
  %36 = sub i64 %30, %34
  br label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %36, %32 ], [ %30, %27 ]
  %39 = load i32, i32* %17, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = icmp ult i64 %29, 4294967295
  %43 = select i1 %42, i64 %29, i64 4294967295
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %17, align 8
  %45 = sub i64 %29, %43
  br label %46

46:                                               ; preds = %41, %37
  %47 = phi i64 [ %45, %41 ], [ %29, %37 ]
  %48 = call i32 @Cr_z_inflate(%struct.z_stream_s* nonnull %5, i32 0) #3
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %25, label %50

50:                                               ; preds = %46
  %51 = load i32, i32* %17, align 8
  %52 = zext i32 %51 to i64
  %53 = load i64, i64* %3, align 8
  %54 = add i64 %47, %52
  %55 = sub i64 %53, %54
  store i64 %55, i64* %3, align 8
  %56 = icmp eq i8* %14, %8
  %57 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %5, i64 0, i32 5
  %58 = load i64, i64* %57, align 8
  br i1 %56, label %60, label %59

59:                                               ; preds = %50
  store i64 %58, i64* %1, align 8
  br label %65

60:                                               ; preds = %50
  %61 = icmp ne i64 %58, 0
  %62 = icmp eq i32 %48, -5
  %63 = and i1 %62, %61
  %64 = select i1 %63, i64 1, i64 %38
  br label %65

65:                                               ; preds = %60, %59
  %66 = phi i64 [ %38, %59 ], [ %64, %60 ]
  %67 = call i32 @Cr_z_inflateEnd(%struct.z_stream_s* nonnull %5) #3
  switch i32 %48, label %73 [
    i32 1, label %75
    i32 2, label %74
    i32 -5, label %68
  ]

68:                                               ; preds = %65
  %69 = load i32, i32* %24, align 8
  %70 = zext i32 %69 to i64
  %71 = sub nsw i64 0, %70
  %72 = icmp eq i64 %66, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %65, %68
  br label %75

74:                                               ; preds = %65
  br label %75

75:                                               ; preds = %73, %68, %74, %65, %13
  %76 = phi i32 [ %20, %13 ], [ 0, %65 ], [ %48, %73 ], [ -3, %68 ], [ -3, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #3
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %7) #3
  ret i32 %76
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @Cr_z_inflateInit_(%struct.z_stream_s*, i8*, i32) local_unnamed_addr #2

declare i32 @Cr_z_inflate(%struct.z_stream_s*, i32) local_unnamed_addr #2

declare i32 @Cr_z_inflateEnd(%struct.z_stream_s*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_uncompress(i8*, i64* nocapture, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  store i64 %3, i64* %5, align 8
  %6 = call i32 @Cr_z_uncompress2(i8* %0, i64* %1, i8* %2, i64* nonnull %5)
  ret i32 %6
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
