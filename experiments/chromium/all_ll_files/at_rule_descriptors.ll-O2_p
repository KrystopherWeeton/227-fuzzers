; ModuleID = 'gen/third_party/blink/renderer/core/css/parser/at_rule_descriptors.cc'
source_filename = "gen/third_party/blink/renderer/core/css/parser/at_rule_descriptors.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::Property" = type { i32, i32 }
%"struct.blink::(anonymous namespace)::stringpool_t" = type { [6 x i8], [9 x i8], [7 x i8], [6 x i8], [4 x i8], [9 x i8], [4 x i8], [13 x i8], [12 x i8], [11 x i8], [12 x i8], [7 x i8], [11 x i8], [5 x i8], [13 x i8], [10 x i8], [22 x i8], [7 x i8], [14 x i8], [16 x i8], [9 x i8], [6 x i8], [11 x i8], [17 x i8], [4 x i8], [7 x i8], [12 x i8], [10 x i8], [7 x i8], [9 x i8], [14 x i8], [9 x i8], [7 x i8], [11 x i8], [8 x i8], [10 x i8], [30 x i8], [9 x i8], [12 x i8], [18 x i8], [17 x i8], [13 x i8] }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash18findDescriptorImplEPKcmE20descriptor_word_list = internal constant [42 x %"struct.blink::Property"] [%"struct.blink::Property" { i32 0, i32 32 }, %"struct.blink::Property" { i32 6, i32 13 }, %"struct.blink::Property" { i32 15, i32 12 }, %"struct.blink::Property" { i32 22, i32 27 }, %"struct.blink::Property" { i32 28, i32 4 }, %"struct.blink::Property" { i32 32, i32 23 }, %"struct.blink::Property" { i32 41, i32 31 }, %"struct.blink::Property" { i32 45, i32 10 }, %"struct.blink::Property" { i32 58, i32 24 }, %"struct.blink::Property" { i32 70, i32 20 }, %"struct.blink::Property" { i32 81, i32 28 }, %"struct.blink::Property" { i32 93, i32 29 }, %"struct.blink::Property" { i32 100, i32 37 }, %"struct.blink::Property" { i32 111, i32 41 }, %"struct.blink::Property" { i32 116, i32 8 }, %"struct.blink::Property" { i32 129, i32 39 }, %"struct.blink::Property" { i32 139, i32 7 }, %"struct.blink::Property" { i32 161, i32 33 }, %"struct.blink::Property" { i32 168, i32 38 }, %"struct.blink::Property" { i32 182, i32 2 }, %"struct.blink::Property" { i32 198, i32 22 }, %"struct.blink::Property" { i32 207, i32 40 }, %"struct.blink::Property" { i32 213, i32 17 }, %"struct.blink::Property" { i32 224, i32 3 }, %"struct.blink::Property" { i32 241, i32 25 }, %"struct.blink::Property" { i32 245, i32 36 }, %"struct.blink::Property" { i32 252, i32 11 }, %"struct.blink::Property" { i32 264, i32 21 }, %"struct.blink::Property" { i32 274, i32 35 }, %"struct.blink::Property" { i32 281, i32 30 }, %"struct.blink::Property" { i32 290, i32 14 }, %"struct.blink::Property" { i32 304, i32 19 }, %"struct.blink::Property" { i32 313, i32 26 }, %"struct.blink::Property" { i32 320, i32 9 }, %"struct.blink::Property" { i32 331, i32 34 }, %"struct.blink::Property" { i32 339, i32 18 }, %"struct.blink::Property" { i32 349, i32 7 }, %"struct.blink::Property" { i32 379, i32 15 }, %"struct.blink::Property" { i32 388, i32 6 }, %"struct.blink::Property" { i32 400, i32 16 }, %"struct.blink::Property" { i32 418, i32 1 }, %"struct.blink::Property" { i32 435, i32 5 }], align 16
@_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash18findDescriptorImplEPKcmE6lookup = internal unnamed_addr constant [63 x i8] c"\FF\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\FF\1A\1B\1C\1D\1E\FF\1F\FF\FF\FF !\FF\22#\FF$\FF%\FF&'(\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF)", align 16
@_ZN5blink12_GLOBAL__N_119stringpool_contentsE = internal constant %"struct.blink::(anonymous namespace)::stringpool_t" { [6 x i8] c"start\00", [9 x i8] c"inherits\00", [7 x i8] c"height\00", [6 x i8] c"range\00", [4 x i8] c"end\00", [9 x i8] c"negative\00", [4 x i8] c"src\00", [13 x i8] c"font-variant\00", [12 x i8] c"orientation\00", [11 x i8] c"min-height\00", [12 x i8] c"size-adjust\00", [7 x i8] c"source\00", [11 x i8] c"time-range\00", [5 x i8] c"zoom\00", [13 x i8] c"font-stretch\00", [10 x i8] c"user-zoom\00", [22 x i8] c"font-feature-settings\00", [7 x i8] c"suffix\00", [14 x i8] c"unicode-range\00", [16 x i8] c"ascent-override\00", [9 x i8] c"min-zoom\00", [6 x i8] c"width\00", [11 x i8] c"max-height\00", [17 x i8] c"descent-override\00", [4 x i8] c"pad\00", [7 x i8] c"system\00", [12 x i8] c"font-weight\00", [10 x i8] c"min-width\00", [7 x i8] c"syntax\00", [9 x i8] c"speak-as\00", [14 x i8] c"initial-value\00", [9 x i8] c"max-zoom\00", [7 x i8] c"prefix\00", [11 x i8] c"font-style\00", [8 x i8] c"symbols\00", [10 x i8] c"max-width\00", [30 x i8] c"-webkit-font-feature-settings\00", [9 x i8] c"fallback\00", [12 x i8] c"font-family\00", [18 x i8] c"line-gap-override\00", [17 x i8] c"additive-symbols\00", [13 x i8] c"font-display\00" }, align 1
@_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values = internal unnamed_addr constant [256 x i8] c"?????????????????????????????????????????????\00???????????????????????????????????????????????????\01\00\07\03\02\03\01\00\00\04\06\0E\07\00\03\15?\00\00\00\00\00\13\0C\11\01?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????", align 16
@switch.table._ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE = private unnamed_addr constant [41 x i32] [i32 29, i32 45, i32 136, i32 140, i32 154, i32 4, i32 5, i32 10, i32 11, i32 477, i32 17, i32 165, i32 169, i32 170, i32 141, i32 210, i32 233, i32 235, i32 236, i32 238, i32 240, i32 241, i32 243, i32 253, i32 271, i32 287, i32 290, i32 327, i32 328, i32 330, i32 331, i32 332, i32 343, i32 344, i32 345, i32 346, i32 366, i32 379, i32 381, i32 438, i32 27], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20AsAtRuleDescriptorIDEN3WTF10StringViewE(%"class.WTF::StringView"* nocapture readonly byval(%"class.WTF::StringView") align 8) local_unnamed_addr #0 {
  %2 = alloca [30 x i8], align 16
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %10, label %42, label %12

12:                                               ; preds = %1
  %13 = load i8*, i8** %11, align 8
  %14 = add i32 %4, -1
  %15 = icmp ugt i32 %14, 28
  br i1 %15, label %76, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds [30 x i8], [30 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 30, i8* nonnull %17) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 30, i1 false) #5
  br label %18

18:                                               ; preds = %25, %16
  %19 = phi i32 [ %30, %25 ], [ 0, %16 ]
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %13, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = add i8 %22, -1
  %24 = icmp ugt i8 %23, 125
  br i1 %24, label %40, label %25

25:                                               ; preds = %18
  %26 = zext i8 %22 to i64
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds [30 x i8], [30 x i8]* %2, i64 0, i64 %20
  store i8 %28, i8* %29, align 1
  %30 = add i32 %19, 1
  %31 = icmp eq i32 %30, %4
  br i1 %31, label %32, label %18

32:                                               ; preds = %25
  %33 = zext i32 %4 to i64
  %34 = getelementptr inbounds [30 x i8], [30 x i8]* %2, i64 0, i64 %33
  store i8 0, i8* %34, align 1
  %35 = call fastcc %"struct.blink::Property"* @_ZN5blink12_GLOBAL__N_114FindDescriptorEPKcj(i8* nonnull %17, i32 %4) #5
  %36 = icmp eq %"struct.blink::Property"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.blink::Property", %"struct.blink::Property"* %35, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %18, %37, %32
  %41 = phi i32 [ %39, %37 ], [ 0, %32 ], [ 0, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 30, i8* nonnull %17) #5
  br label %76

42:                                               ; preds = %1
  %43 = bitcast i8** %11 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = add i32 %4, -1
  %46 = icmp ugt i32 %45, 28
  br i1 %46, label %76, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds [30 x i8], [30 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 30, i8* nonnull %48) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %48, i8 -86, i64 30, i1 false) #5
  br label %49

49:                                               ; preds = %56, %47
  %50 = phi i32 [ %64, %56 ], [ 0, %47 ]
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %44, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = add i16 %53, -1
  %55 = icmp ugt i16 %54, 125
  br i1 %55, label %74, label %56

56:                                               ; preds = %49
  %57 = add nsw i16 %53, -65
  %58 = icmp ult i16 %57, 26
  %59 = zext i1 %58 to i16
  %60 = shl nuw nsw i16 %59, 5
  %61 = or i16 %60, %53
  %62 = trunc i16 %61 to i8
  %63 = getelementptr inbounds [30 x i8], [30 x i8]* %2, i64 0, i64 %51
  store i8 %62, i8* %63, align 1
  %64 = add i32 %50, 1
  %65 = icmp eq i32 %64, %4
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = zext i32 %4 to i64
  %68 = getelementptr inbounds [30 x i8], [30 x i8]* %2, i64 0, i64 %67
  store i8 0, i8* %68, align 1
  %69 = call fastcc %"struct.blink::Property"* @_ZN5blink12_GLOBAL__N_114FindDescriptorEPKcj(i8* nonnull %48, i32 %4) #5
  %70 = icmp eq %"struct.blink::Property"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.blink::Property", %"struct.blink::Property"* %69, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  br label %74

74:                                               ; preds = %49, %71, %66
  %75 = phi i32 [ %73, %71 ], [ 0, %66 ], [ 0, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 30, i8* nonnull %48) #5
  br label %76

76:                                               ; preds = %74, %42, %40, %12
  %77 = phi i32 [ %41, %40 ], [ 0, %12 ], [ %75, %74 ], [ 0, %42 ]
  ret i32 %77
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE(i32) local_unnamed_addr #2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 41
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [41 x i32], [41 x i32]* @switch.table._ZN5blink33AtRuleDescriptorIDAsCSSPropertyIDENS_18AtRuleDescriptorIDE, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink31CSSPropertyIDAsAtRuleDescriptorENS_13CSSPropertyIDE(i32) local_unnamed_addr #2 {
  switch i32 %0, label %42 [
    i32 29, label %43
    i32 45, label %2
    i32 136, label %3
    i32 140, label %4
    i32 154, label %5
    i32 4, label %6
    i32 5, label %7
    i32 10, label %8
    i32 11, label %9
    i32 477, label %10
    i32 17, label %11
    i32 165, label %12
    i32 169, label %13
    i32 170, label %14
    i32 141, label %15
    i32 210, label %16
    i32 233, label %17
    i32 235, label %18
    i32 236, label %19
    i32 238, label %20
    i32 240, label %21
    i32 241, label %22
    i32 243, label %23
    i32 253, label %24
    i32 271, label %25
    i32 287, label %26
    i32 290, label %27
    i32 327, label %28
    i32 328, label %29
    i32 330, label %30
    i32 331, label %31
    i32 332, label %32
    i32 343, label %33
    i32 344, label %34
    i32 345, label %35
    i32 346, label %36
    i32 366, label %37
    i32 379, label %38
    i32 381, label %39
    i32 438, label %40
    i32 27, label %41
  ]

2:                                                ; preds = %1
  br label %43

3:                                                ; preds = %1
  br label %43

4:                                                ; preds = %1
  br label %43

5:                                                ; preds = %1
  br label %43

6:                                                ; preds = %1
  br label %43

7:                                                ; preds = %1
  br label %43

8:                                                ; preds = %1
  br label %43

9:                                                ; preds = %1
  br label %43

10:                                               ; preds = %1
  br label %43

11:                                               ; preds = %1
  br label %43

12:                                               ; preds = %1
  br label %43

13:                                               ; preds = %1
  br label %43

14:                                               ; preds = %1
  br label %43

15:                                               ; preds = %1
  br label %43

16:                                               ; preds = %1
  br label %43

17:                                               ; preds = %1
  br label %43

18:                                               ; preds = %1
  br label %43

19:                                               ; preds = %1
  br label %43

20:                                               ; preds = %1
  br label %43

21:                                               ; preds = %1
  br label %43

22:                                               ; preds = %1
  br label %43

23:                                               ; preds = %1
  br label %43

24:                                               ; preds = %1
  br label %43

25:                                               ; preds = %1
  br label %43

26:                                               ; preds = %1
  br label %43

27:                                               ; preds = %1
  br label %43

28:                                               ; preds = %1
  br label %43

29:                                               ; preds = %1
  br label %43

30:                                               ; preds = %1
  br label %43

31:                                               ; preds = %1
  br label %43

32:                                               ; preds = %1
  br label %43

33:                                               ; preds = %1
  br label %43

34:                                               ; preds = %1
  br label %43

35:                                               ; preds = %1
  br label %43

36:                                               ; preds = %1
  br label %43

37:                                               ; preds = %1
  br label %43

38:                                               ; preds = %1
  br label %43

39:                                               ; preds = %1
  br label %43

40:                                               ; preds = %1
  br label %43

41:                                               ; preds = %1
  br label %43

42:                                               ; preds = %1
  br label %43

43:                                               ; preds = %1, %42, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %44 = phi i32 [ 0, %42 ], [ 41, %41 ], [ 40, %40 ], [ 39, %39 ], [ 38, %38 ], [ 37, %37 ], [ 36, %36 ], [ 35, %35 ], [ 34, %34 ], [ 33, %33 ], [ 32, %32 ], [ 31, %31 ], [ 30, %30 ], [ 29, %29 ], [ 28, %28 ], [ 27, %27 ], [ 26, %26 ], [ 25, %25 ], [ 24, %24 ], [ 23, %23 ], [ 22, %22 ], [ 21, %21 ], [ 20, %20 ], [ 19, %19 ], [ 18, %18 ], [ 17, %17 ], [ 16, %16 ], [ 15, %15 ], [ 14, %14 ], [ 13, %13 ], [ 12, %12 ], [ 11, %11 ], [ 10, %10 ], [ 9, %9 ], [ 8, %8 ], [ 7, %7 ], [ 6, %6 ], [ 5, %5 ], [ 4, %4 ], [ 3, %3 ], [ 2, %2 ], [ 1, %1 ]
  ret i32 %44
}

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc %"struct.blink::Property"* @_ZN5blink12_GLOBAL__N_114FindDescriptorEPKcj(i8* readonly, i32) unnamed_addr #3 {
  %3 = zext i32 %1 to i64
  %4 = add nsw i64 %3, -3
  %5 = icmp ult i64 %4, 27
  br i1 %5, label %6, label %288

6:                                                ; preds = %2
  switch i32 %1, label %7 [
    i32 28, label %14
    i32 27, label %23
    i32 26, label %32
    i32 25, label %41
    i32 24, label %50
    i32 23, label %59
    i32 22, label %68
    i32 21, label %77
    i32 20, label %86
    i32 19, label %95
    i32 18, label %104
    i32 17, label %113
    i32 16, label %122
    i32 15, label %131
    i32 14, label %140
    i32 13, label %149
    i32 12, label %158
    i32 11, label %167
    i32 10, label %176
    i32 9, label %185
    i32 8, label %194
    i32 7, label %203
    i32 6, label %212
    i32 5, label %221
    i32 4, label %230
    i32 3, label %239
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds i8, i8* %0, i64 28
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  br label %14

14:                                               ; preds = %7, %6
  %15 = phi i32 [ %13, %7 ], [ 0, %6 ]
  %16 = getelementptr inbounds i8, i8* %0, i64 27
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i64
  %19 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = add nuw nsw i32 %15, %21
  br label %23

23:                                               ; preds = %14, %6
  %24 = phi i32 [ %22, %14 ], [ 0, %6 ]
  %25 = getelementptr inbounds i8, i8* %0, i64 26
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = add nuw nsw i32 %24, %30
  br label %32

32:                                               ; preds = %23, %6
  %33 = phi i32 [ %31, %23 ], [ 0, %6 ]
  %34 = getelementptr inbounds i8, i8* %0, i64 25
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = add nuw nsw i32 %33, %39
  br label %41

41:                                               ; preds = %32, %6
  %42 = phi i32 [ %40, %32 ], [ 0, %6 ]
  %43 = getelementptr inbounds i8, i8* %0, i64 24
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = add nuw nsw i32 %42, %48
  br label %50

50:                                               ; preds = %41, %6
  %51 = phi i32 [ %49, %41 ], [ 0, %6 ]
  %52 = getelementptr inbounds i8, i8* %0, i64 23
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = add nuw nsw i32 %51, %57
  br label %59

59:                                               ; preds = %50, %6
  %60 = phi i32 [ %58, %50 ], [ 0, %6 ]
  %61 = getelementptr inbounds i8, i8* %0, i64 22
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i64
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = add nuw nsw i32 %60, %66
  br label %68

68:                                               ; preds = %59, %6
  %69 = phi i32 [ %67, %59 ], [ 0, %6 ]
  %70 = getelementptr inbounds i8, i8* %0, i64 21
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = add nuw nsw i32 %69, %75
  br label %77

77:                                               ; preds = %68, %6
  %78 = phi i32 [ %76, %68 ], [ 0, %6 ]
  %79 = getelementptr inbounds i8, i8* %0, i64 20
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i64
  %82 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = add nuw nsw i32 %78, %84
  br label %86

86:                                               ; preds = %77, %6
  %87 = phi i32 [ %85, %77 ], [ 0, %6 ]
  %88 = getelementptr inbounds i8, i8* %0, i64 19
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = add nuw nsw i32 %87, %93
  br label %95

95:                                               ; preds = %86, %6
  %96 = phi i32 [ %94, %86 ], [ 0, %6 ]
  %97 = getelementptr inbounds i8, i8* %0, i64 18
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = add nuw nsw i32 %96, %102
  br label %104

104:                                              ; preds = %95, %6
  %105 = phi i32 [ %103, %95 ], [ 0, %6 ]
  %106 = getelementptr inbounds i8, i8* %0, i64 17
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i64
  %109 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = add nuw nsw i32 %105, %111
  br label %113

113:                                              ; preds = %104, %6
  %114 = phi i32 [ %112, %104 ], [ 0, %6 ]
  %115 = getelementptr inbounds i8, i8* %0, i64 16
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i64
  %118 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = add nuw nsw i32 %114, %120
  br label %122

122:                                              ; preds = %113, %6
  %123 = phi i32 [ %121, %113 ], [ 0, %6 ]
  %124 = getelementptr inbounds i8, i8* %0, i64 15
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = add nuw nsw i32 %123, %129
  br label %131

131:                                              ; preds = %122, %6
  %132 = phi i32 [ %130, %122 ], [ 0, %6 ]
  %133 = getelementptr inbounds i8, i8* %0, i64 14
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i64
  %136 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = add nuw nsw i32 %132, %138
  br label %140

140:                                              ; preds = %131, %6
  %141 = phi i32 [ %139, %131 ], [ 0, %6 ]
  %142 = getelementptr inbounds i8, i8* %0, i64 13
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = add nuw nsw i32 %141, %147
  br label %149

149:                                              ; preds = %140, %6
  %150 = phi i32 [ %148, %140 ], [ 0, %6 ]
  %151 = getelementptr inbounds i8, i8* %0, i64 12
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i64
  %154 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = add nuw nsw i32 %150, %156
  br label %158

158:                                              ; preds = %149, %6
  %159 = phi i32 [ %157, %149 ], [ 0, %6 ]
  %160 = getelementptr inbounds i8, i8* %0, i64 11
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i32
  %166 = add nuw nsw i32 %159, %165
  br label %167

167:                                              ; preds = %158, %6
  %168 = phi i32 [ %166, %158 ], [ 0, %6 ]
  %169 = getelementptr inbounds i8, i8* %0, i64 10
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i64
  %172 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = add nuw nsw i32 %168, %174
  br label %176

176:                                              ; preds = %167, %6
  %177 = phi i32 [ %175, %167 ], [ 0, %6 ]
  %178 = getelementptr inbounds i8, i8* %0, i64 9
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = add nuw nsw i32 %177, %183
  br label %185

185:                                              ; preds = %176, %6
  %186 = phi i32 [ %184, %176 ], [ 0, %6 ]
  %187 = getelementptr inbounds i8, i8* %0, i64 8
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = add nuw nsw i32 %186, %192
  br label %194

194:                                              ; preds = %185, %6
  %195 = phi i32 [ %193, %185 ], [ 0, %6 ]
  %196 = getelementptr inbounds i8, i8* %0, i64 7
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i32
  %202 = add nuw nsw i32 %195, %201
  br label %203

203:                                              ; preds = %194, %6
  %204 = phi i32 [ %202, %194 ], [ 0, %6 ]
  %205 = getelementptr inbounds i8, i8* %0, i64 6
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i64
  %208 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = add nuw nsw i32 %204, %210
  br label %212

212:                                              ; preds = %203, %6
  %213 = phi i32 [ %211, %203 ], [ 0, %6 ]
  %214 = getelementptr inbounds i8, i8* %0, i64 5
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = add nuw nsw i32 %213, %219
  br label %221

221:                                              ; preds = %212, %6
  %222 = phi i32 [ %220, %212 ], [ 0, %6 ]
  %223 = getelementptr inbounds i8, i8* %0, i64 4
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i64
  %226 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = add nuw nsw i32 %222, %228
  br label %230

230:                                              ; preds = %221, %6
  %231 = phi i32 [ %229, %221 ], [ 0, %6 ]
  %232 = getelementptr inbounds i8, i8* %0, i64 3
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = add nuw nsw i32 %231, %237
  br label %239

239:                                              ; preds = %230, %6
  %240 = phi i32 [ %238, %230 ], [ 0, %6 ]
  %241 = getelementptr inbounds i8, i8* %0, i64 2
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i64
  %244 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %243
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i32
  %247 = add nuw nsw i32 %240, %246
  %248 = getelementptr inbounds i8, i8* %0, i64 1
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i64
  %251 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %250
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = add nuw nsw i32 %247, %253
  %255 = load i8, i8* %0, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash24descriptor_hash_functionEPKcmE11asso_values, i64 0, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = add nuw nsw i32 %254, %259
  %261 = icmp ult i32 %260, 63
  br i1 %261, label %262, label %287

262:                                              ; preds = %239
  %263 = zext i32 %260 to i64
  %264 = lshr i64 4613751751533658110, %263
  %265 = and i64 %264, 1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %287, label %267

267:                                              ; preds = %262
  %268 = getelementptr inbounds [63 x i8], [63 x i8]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash18findDescriptorImplEPKcmE6lookup, i64 0, i64 %263
  %269 = load i8, i8* %268, align 1
  %270 = sext i8 %269 to i64
  %271 = getelementptr inbounds [42 x %"struct.blink::Property"], [42 x %"struct.blink::Property"]* @_ZZN5blink12_GLOBAL__N_120AtRuleDescriptorHash18findDescriptorImplEPKcmE20descriptor_word_list, i64 0, i64 %270
  %272 = getelementptr inbounds %"struct.blink::Property", %"struct.blink::Property"* %271, i64 0, i32 0
  %273 = load i32, i32* %272, align 8
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds %"struct.blink::(anonymous namespace)::stringpool_t", %"struct.blink::(anonymous namespace)::stringpool_t"* @_ZN5blink12_GLOBAL__N_119stringpool_contentsE, i64 0, i32 0, i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = icmp eq i8 %255, %276
  br i1 %277, label %278, label %287

278:                                              ; preds = %267
  %279 = getelementptr inbounds i8, i8* %275, i64 1
  %280 = add nsw i64 %3, -1
  %281 = tail call i32 @strncmp(i8* %248, i8* %279, i64 %280) #6
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %278
  %284 = getelementptr inbounds i8, i8* %275, i64 %3
  %285 = load i8, i8* %284, align 1
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %288, label %287

287:                                              ; preds = %283, %278, %267, %262, %239
  br label %288

288:                                              ; preds = %2, %283, %287
  %289 = phi %"struct.blink::Property"* [ %271, %283 ], [ null, %287 ], [ null, %2 ]
  ret %"struct.blink::Property"* %289
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
