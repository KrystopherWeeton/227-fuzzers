; ModuleID = '../../third_party/blink/renderer/core/clipboard/clipboard_utilities.cc'
source_filename = "../../third_party/blink/renderer/core/clipboard/clipboard_utilities.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector.2" }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4", [16 x i8] }
%"class.WTF::VectorBufferBase.4" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.32 }
%union.anon.32 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.37 }
%union.anon.37 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.38 }
%struct.anon.38 = type { %"struct.std::__1::__padding.39", i8 }
%"struct.std::__1::__padding.39" = type { [1 x i8] }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.23 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.12, i32, i32 }
%class.sk_sp.12 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.23 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"struct.SkPngEncoder::Options" = type { i32, i32, %class.sk_sp.24 }
%class.sk_sp.24 = type { %class.SkDataTable* }
%class.SkDataTable = type { %class.SkRefCnt.base, i32, i64, %union.anon.25, void (i8*)*, i8* }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.13" }>
%union.anon.25 = type { %"struct.SkDataTable::Dir"* }
%"struct.SkDataTable::Dir" = type { i8*, i64 }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.4" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.13", [4 x i8] }>

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

@.str = private unnamed_addr constant [11 x i8] c"<img src=\22\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c" alt=\22\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"/>\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"<img src=\22data:image/png;base64,\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"\22 alt=\22\22/>\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ReplaceNBSPWithSpaceERN3WTF6StringE(%"class.WTF::String"* nocapture dereferenceable(8)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* nonnull %3, i16 zeroext 160, i16 zeroext 32) #7
  %7 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %8 = bitcast %"class.WTF::String"* %0 to i64*
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  store i64 %7, i64* %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #7
  br label %24

24:                                               ; preds = %1, %5, %20, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink19ConvertURIListToURLERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::Vector", align 8
  %3 = alloca %"class.blink::KURL", align 8
  %4 = bitcast %"class.WTF::Vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #7
  call void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %0, i16 zeroext 10, i1 zeroext false, %"class.WTF::Vector"* nonnull dereferenceable(16) %2) #7
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %5, align 8
  %8 = load i32, i32* %6, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %91, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  br label %14

14:                                               ; preds = %12, %84
  %15 = phi %"class.WTF::String"* [ %7, %12 ], [ %85, %84 ]
  %16 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %15) #7
  %17 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %18 = bitcast %"class.WTF::String"* %15 to i64*
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  store i64 %17, i64* %18, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %37, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #7
  br label %35

35:                                               ; preds = %31, %34
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  br label %37

37:                                               ; preds = %35, %14
  %38 = phi %"class.WTF::StringImpl"* [ %36, %35 ], [ %16, %14 ]
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %84, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %84, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  br i1 %48, label %54, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.WTF::StringImpl"* %49 to i8*
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  br label %57

54:                                               ; preds = %44
  %55 = bitcast %"class.WTF::StringImpl"* %49 to i16*
  %56 = load i16, i16* %55, align 2
  br label %57

57:                                               ; preds = %50, %54
  %58 = phi i16 [ %53, %50 ], [ %56, %54 ]
  %59 = icmp eq i16 %58, 35
  br i1 %59, label %84, label %60

60:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %13) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %15) #7
  %61 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %3) #7
  br i1 %61, label %62, label %83

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 4, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %87, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %87

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #7
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %71
  call void @llvm.trap() #7
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %87

83:                                               ; preds = %60
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #7
  br label %84

84:                                               ; preds = %37, %57, %40, %83
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %86 = icmp eq %"class.WTF::String"* %85, %10
  br i1 %86, label %88, label %14

87:                                               ; preds = %62, %66, %81
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #7
  br label %88

88:                                               ; preds = %84, %87
  %89 = phi %"class.WTF::StringImpl"* [ %64, %87 ], [ null, %84 ]
  %90 = load %"class.WTF::String"*, %"class.WTF::String"** %5, align 8
  br label %91

91:                                               ; preds = %88, %1
  %92 = phi %"class.WTF::String"* [ %90, %88 ], [ %7, %1 ]
  %93 = phi %"class.WTF::StringImpl"* [ %89, %88 ], [ null, %1 ]
  %94 = icmp eq %"class.WTF::String"* %92, null
  br i1 %94, label %128, label %95, !prof !3

95:                                               ; preds = %91
  %96 = bitcast %"class.WTF::String"* %92 to i8*
  %97 = load i32, i32* %6, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %126, label %99, !prof !2

99:                                               ; preds = %95
  %100 = zext i32 %97 to i64
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 %100
  br label %102

102:                                              ; preds = %120, %99
  %103 = phi %"class.WTF::String"* [ %121, %120 ], [ %92, %99 ]
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #7
  br label %120

120:                                              ; preds = %119, %116, %102
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %103, i64 1
  %122 = icmp eq %"class.WTF::String"* %121, %101
  br i1 %122, label %123, label %102

123:                                              ; preds = %120
  store i32 0, i32* %6, align 4
  %124 = bitcast %"class.WTF::Vector"* %2 to i8**
  %125 = load i8*, i8** %124, align 8
  br label %126

126:                                              ; preds = %123, %95
  %127 = phi i8* [ %125, %123 ], [ %96, %95 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %127) #7
  store %"class.WTF::String"* null, %"class.WTF::String"** %5, align 8
  br label %128

128:                                              ; preds = %91, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #7
  ret %"class.WTF::StringImpl"* %93
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink16URLToImageMarkupERKNS_4KURLERKN3WTF6StringE(%"class.blink::KURL"* nocapture readonly dereferenceable(112), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %14 = bitcast %union.anon* %13 to i8*
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %16, align 4
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %17, align 1
  %18 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #7
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 10, i32* %22, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #7
  %23 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %0, i64 0, i32 4
  %25 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL13EscapeForHTMLERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %24)
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %27, label %32

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %28, align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %30 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 0, i32* %31, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  br label %52

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 1
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %38 = bitcast i8** %37 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %35, i32* %39, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %32
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %32
  %49 = phi i32 [ %47, %46 ], [ %45, %32 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #7
  br label %52

52:                                               ; preds = %27, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #7
  %53 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #7
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %55 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 1, i32* %57, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #7
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %105, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %105, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #7
  %67 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %68 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 6, i32* %70, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #7
  %71 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #7
  %72 = call fastcc %"class.WTF::StringImpl"* @_ZN5blinkL13EscapeForHTMLERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1)
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %79

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %75, align 8
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %77 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 0, i32* %78, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %99

79:                                               ; preds = %65
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %85 = bitcast i8** %84 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %82, i32* %86, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %79
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %79
  %96 = phi i32 [ %94, %93 ], [ %92, %79 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #7
  br label %99

99:                                               ; preds = %74, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #7
  %100 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #7
  %101 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %102 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8** %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 1, i32* %104, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #7
  br label %105

105:                                              ; preds = %52, %99, %61
  %106 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #7
  %107 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %108 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8** %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 2, i32* %110, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #7
  %111 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #7
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #7
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #7
  br label %127

127:                                              ; preds = %105, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #7
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #7
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #7
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #7
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #7
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #7
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blinkL13EscapeForHTMLERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string.34", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = icmp eq %"class.WTF::StringImpl"* %6, null
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %17 = bitcast %"class.WTF::StringImpl"* %16 to i8*
  %18 = select i1 %15, i8* null, i8* %17
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  br i1 %15, label %24, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  br label %24

24:                                               ; preds = %11, %20
  %25 = phi i64 [ %23, %20 ], [ 0, %11 ]
  call void @_ZN3net13EscapeForHTMLEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, i8* %18, i64 %25) #7
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = load i8*, i8** %13, align 8
  %31 = load i64, i64* %14, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i8* %30, i8* %12
  %34 = select i1 %29, i64 %31, i64 %32
  call void @_ZN3WTF6StringC1EPKcm(%"class.WTF::String"* nonnull %2, i8* %33, i64 %34) #7
  %35 = load i8, i8* %27, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %70

37:                                               ; preds = %24
  %38 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %38) #8
  br label %70

39:                                               ; preds = %1
  %40 = bitcast %"class.std::__1::basic_string.34"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #7
  %41 = getelementptr inbounds %"class.std::__1::basic_string.34", %"class.std::__1::basic_string.34"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string.34", %"class.std::__1::basic_string.34"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = icmp eq %"class.WTF::StringImpl"* %6, null
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %45 = bitcast %"class.WTF::StringImpl"* %44 to i16*
  %46 = select i1 %43, i16* null, i16* %45
  %47 = bitcast %"class.std::__1::basic_string.34"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false)
  br i1 %43, label %52, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %39, %48
  %53 = phi i64 [ %51, %48 ], [ 0, %39 ]
  call void @_ZN3net13EscapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.34"* nonnull sret %4, i16* %46, i64 %53) #7
  %54 = bitcast %"class.std::__1::basic_string.34"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  %58 = load i16*, i16** %41, align 8
  %59 = load i64, i64* %42, align 8
  %60 = bitcast %"class.std::__1::basic_string.34"* %4 to i16*
  %61 = zext i8 %56 to i64
  %62 = select i1 %57, i16* %58, i16* %60
  %63 = select i1 %57, i64 %59, i64 %61
  %64 = trunc i64 %63 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %2, i16* %62, i32 %64) #7
  %65 = load i8, i8* %55, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %52
  %68 = bitcast %"class.std::__1::basic_string.34"* %4 to i8**
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #8
  br label %70

70:                                               ; preds = %67, %52, %37, %24
  %71 = phi i8* [ %12, %24 ], [ %12, %37 ], [ %40, %52 ], [ %40, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #7
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  ret %"class.WTF::StringImpl"* %73
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink19BitmapToImageMarkupERK8SkBitmap(%class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 {
  %2 = alloca %class.SkPixmap, align 8
  %3 = alloca %"struct.SkPngEncoder::Options", align 8
  %4 = alloca %"class.WTF::Vector.26", align 8
  %5 = alloca %"class.WTF::StringBuilder", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 0, i32 0
  %10 = load %class.SkPixelRef*, %class.SkPixelRef** %9, align 8
  %11 = icmp eq %class.SkPixelRef* %10, null
  br i1 %11, label %124, label %12

12:                                               ; preds = %1
  %13 = bitcast %class.SkPixmap* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 40, i1 false) #7
  %14 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %0, %class.SkPixmap* nonnull %2) #7
  %15 = bitcast %"struct.SkPngEncoder::Options"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %3, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %3, i64 0, i32 2, i32 0
  store %class.SkDataTable* null, %class.SkDataTable** %18, align 8
  store i32 1, i32* %17, align 4
  store i32 8, i32* %16, align 8
  %19 = bitcast %"class.WTF::Vector.26"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false) #7
  %22 = call zeroext i1 @_ZN5blink12ImageEncoder6EncodeEPN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEERK8SkPixmapRKN12SkPngEncoder7OptionsE(%"class.WTF::Vector.26"* nonnull %4, %class.SkPixmap* nonnull dereferenceable(40) %2, %"struct.SkPngEncoder::Options"* nonnull dereferenceable(16) %3) #7
  br i1 %22, label %23, label %91

23:                                               ; preds = %12
  %24 = bitcast %"class.WTF::StringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 48, i1 false)
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1
  %27 = bitcast %union.anon* %26 to i8*
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 2
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 3
  store i8 1, i8* %29, align 4
  %30 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 4
  store i8 0, i8* %30, align 1
  %31 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %33 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 32, i32* %35, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  %36 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #7
  %37 = load i8*, i8** %20, align 8
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = call %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64 %39, i8* %37, i32 0) #7
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %42, label %47

42:                                               ; preds = %23
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %43, align 8
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 0, i32* %46, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  br label %67

47:                                               ; preds = %23
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 1
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %50, i32* %54, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %47
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %47
  %64 = phi i32 [ %62, %61 ], [ %60, %47 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #7
  br label %67

67:                                               ; preds = %42, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #7
  %68 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #7
  %69 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %70 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 10, i32* %72, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #7
  %73 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %5) #7
  %74 = ptrtoint %"class.WTF::StringImpl"* %73 to i64
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %5) #7
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #7
  br label %90

90:                                               ; preds = %67, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #7
  br label %91

91:                                               ; preds = %12, %90
  %92 = phi i64 [ %74, %90 ], [ 0, %12 ]
  %93 = load i8*, i8** %20, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %100, label %95, !prof !3

95:                                               ; preds = %91
  %96 = load i32, i32* %21, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98, !prof !2

98:                                               ; preds = %95
  store i32 0, i32* %21, align 4
  br label %99

99:                                               ; preds = %98, %95
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %93) #7
  store i8* null, i8** %20, align 8
  br label %100

100:                                              ; preds = %91, %99
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #7
  %101 = load %class.SkDataTable*, %class.SkDataTable** %18, align 8
  %102 = icmp eq %class.SkDataTable* %101, null
  br i1 %102, label %113, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %101, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw add i32* %104, i32 -1 acq_rel
  %106 = icmp eq i32 %105, 1
  br i1 %106, label %107, label %113

107:                                              ; preds = %103
  %108 = bitcast %class.SkDataTable* %101 to %class.SkRefCntBase*
  %109 = bitcast %class.SkDataTable* %101 to void (%class.SkRefCntBase*)***
  %110 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %109, align 8
  %111 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %110, i64 2
  %112 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %111, align 8
  call void %112(%class.SkRefCntBase* nonnull %108) #7
  br label %113

113:                                              ; preds = %100, %103, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #7
  %114 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %115 = load %class.SkColorSpace*, %class.SkColorSpace** %114, align 8
  %116 = icmp eq %class.SkColorSpace* %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw add i32* %118, i32 -1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = bitcast %class.SkColorSpace* %115 to i8*
  call void @_ZdlPv(i8* %122) #8
  br label %123

123:                                              ; preds = %113, %117, %121
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #7
  br label %124

124:                                              ; preds = %1, %123
  %125 = phi i64 [ %92, %123 ], [ 0, %1 ]
  %126 = inttoptr i64 %125 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %126
}

declare zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap*, %class.SkPixmap*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink12ImageEncoder6EncodeEPN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEERK8SkPixmapRKN12SkPngEncoder7OptionsE(%"class.WTF::Vector.26"*, %class.SkPixmap* dereferenceable(40), %"struct.SkPngEncoder::Options"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64, i8*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"*, i16 zeroext, i16 zeroext) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF6String5SplitEDsbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, i16 zeroext, i1 zeroext, %"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare void @_ZN3net13EscapeForHTMLEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF6StringC1EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN3net13EscapeForHTMLEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.34"* sret, i16*, i64) local_unnamed_addr #2

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
