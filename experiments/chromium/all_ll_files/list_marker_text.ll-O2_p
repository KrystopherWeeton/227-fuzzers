; ModuleID = '../../third_party/blink/renderer/core/layout/list_marker_text.cc'
source_filename = "../../third_party/blink/renderer/core/layout/list_marker_text.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i16*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.6" = type { %"class.WTF::StringTypeAdapter.7" }
%"class.WTF::StringTypeAdapter.7" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6insertIiEEvjOT_ = comdat any

$_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6insertIRKDsEEvjOT_ = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN3WTF7unicodeL21kWhiteBulletCharacterE = internal constant i16 9702, align 2
@_ZN3WTF7unicodeL16kBulletCharacterE = internal constant i16 8226, align 2
@_ZN3WTF7unicodeL32kBlackRightPointingSmallTriangleE = internal constant i16 9656, align 2
@_ZN3WTF7unicodeL31kBlackDownPointingSmallTriangleE = internal constant i16 9662, align 2
@_ZN3WTF7unicodeL21kBlackSquareCharacterE = internal constant i16 9632, align 2
@.str.1 = private unnamed_addr constant [3 x i8] c"-0\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE20kArabicIndicNumerals = internal unnamed_addr constant [10 x i16] [i16 1632, i16 1633, i16 1634, i16 1635, i16 1636, i16 1637, i16 1638, i16 1639, i16 1640, i16 1641], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kBengaliNumerals = internal unnamed_addr constant [10 x i16] [i16 2534, i16 2535, i16 2536, i16 2537, i16 2538, i16 2539, i16 2540, i16 2541, i16 2542, i16 2543], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE14kKhmerNumerals = internal unnamed_addr constant [10 x i16] [i16 6112, i16 6113, i16 6114, i16 6115, i16 6116, i16 6117, i16 6118, i16 6119, i16 6120, i16 6121], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kDevanagariNumerals = internal unnamed_addr constant [10 x i16] [i16 2406, i16 2407, i16 2408, i16 2409, i16 2410, i16 2411, i16 2412, i16 2413, i16 2414, i16 2415], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kGujaratiNumerals = internal unnamed_addr constant [10 x i16] [i16 2790, i16 2791, i16 2792, i16 2793, i16 2794, i16 2795, i16 2796, i16 2797, i16 2798, i16 2799], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kGurmukhiNumerals = internal unnamed_addr constant [10 x i16] [i16 2662, i16 2663, i16 2664, i16 2665, i16 2666, i16 2667, i16 2668, i16 2669, i16 2670, i16 2671], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kKannadaNumerals = internal unnamed_addr constant [10 x i16] [i16 3302, i16 3303, i16 3304, i16 3305, i16 3306, i16 3307, i16 3308, i16 3309, i16 3310, i16 3311], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE12kLaoNumerals = internal unnamed_addr constant [10 x i16] [i16 3792, i16 3793, i16 3794, i16 3795, i16 3796, i16 3797, i16 3798, i16 3799, i16 3800, i16 3801], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE18kMalayalamNumerals = internal unnamed_addr constant [10 x i16] [i16 3430, i16 3431, i16 3432, i16 3433, i16 3434, i16 3435, i16 3436, i16 3437, i16 3438, i16 3439], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE18kMongolianNumerals = internal unnamed_addr constant [10 x i16] [i16 6160, i16 6161, i16 6162, i16 6163, i16 6164, i16 6165, i16 6166, i16 6167, i16 6168, i16 6169], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kMyanmarNumerals = internal unnamed_addr constant [10 x i16] [i16 4160, i16 4161, i16 4162, i16 4163, i16 4164, i16 4165, i16 4166, i16 4167, i16 4168, i16 4169], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE14kOriyaNumerals = internal unnamed_addr constant [10 x i16] [i16 2918, i16 2919, i16 2920, i16 2921, i16 2922, i16 2923, i16 2924, i16 2925, i16 2926, i16 2927], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE13kUrduNumerals = internal unnamed_addr constant [10 x i16] [i16 1776, i16 1777, i16 1778, i16 1779, i16 1780, i16 1781, i16 1782, i16 1783, i16 1784, i16 1785], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE15kTeluguNumerals = internal unnamed_addr constant [10 x i16] [i16 3174, i16 3175, i16 3176, i16 3177, i16 3178, i16 3179, i16 3180, i16 3181, i16 3182, i16 3183], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kTibetanNumerals = internal unnamed_addr constant [10 x i16] [i16 3872, i16 3873, i16 3874, i16 3875, i16 3876, i16 3877, i16 3878, i16 3879, i16 3880, i16 3881], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE13kThaiNumerals = internal unnamed_addr constant [10 x i16] [i16 3664, i16 3665, i16 3666, i16 3667, i16 3668, i16 3669, i16 3670, i16 3671, i16 3672, i16 3673], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kLowerLatinAlphabet = internal unnamed_addr constant [26 x i8] c"abcdefghijklmnopqrstuvwxyz", align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kUpperLatinAlphabet = internal unnamed_addr constant [26 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZ", align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kLowerGreekAlphabet = internal unnamed_addr constant [24 x i16] [i16 945, i16 946, i16 947, i16 948, i16 949, i16 950, i16 951, i16 952, i16 953, i16 954, i16 955, i16 956, i16 957, i16 958, i16 959, i16 960, i16 961, i16 963, i16 964, i16 965, i16 966, i16 967, i16 968, i16 969], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kHiraganaAlphabet = internal unnamed_addr constant [48 x i16] [i16 12354, i16 12356, i16 12358, i16 12360, i16 12362, i16 12363, i16 12365, i16 12367, i16 12369, i16 12371, i16 12373, i16 12375, i16 12377, i16 12379, i16 12381, i16 12383, i16 12385, i16 12388, i16 12390, i16 12392, i16 12394, i16 12395, i16 12396, i16 12397, i16 12398, i16 12399, i16 12402, i16 12405, i16 12408, i16 12411, i16 12414, i16 12415, i16 12416, i16 12417, i16 12418, i16 12420, i16 12422, i16 12424, i16 12425, i16 12426, i16 12427, i16 12428, i16 12429, i16 12431, i16 12432, i16 12433, i16 12434, i16 12435], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE22kHiraganaIrohaAlphabet = internal unnamed_addr constant [47 x i16] [i16 12356, i16 12429, i16 12399, i16 12395, i16 12411, i16 12408, i16 12392, i16 12385, i16 12426, i16 12396, i16 12427, i16 12434, i16 12431, i16 12363, i16 12424, i16 12383, i16 12428, i16 12381, i16 12388, i16 12397, i16 12394, i16 12425, i16 12416, i16 12358, i16 12432, i16 12398, i16 12362, i16 12367, i16 12420, i16 12414, i16 12369, i16 12405, i16 12371, i16 12360, i16 12390, i16 12354, i16 12373, i16 12365, i16 12422, i16 12417, i16 12415, i16 12375, i16 12433, i16 12402, i16 12418, i16 12379, i16 12377], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kKatakanaAlphabet = internal unnamed_addr constant [48 x i16] [i16 12450, i16 12452, i16 12454, i16 12456, i16 12458, i16 12459, i16 12461, i16 12463, i16 12465, i16 12467, i16 12469, i16 12471, i16 12473, i16 12475, i16 12477, i16 12479, i16 12481, i16 12484, i16 12486, i16 12488, i16 12490, i16 12491, i16 12492, i16 12493, i16 12494, i16 12495, i16 12498, i16 12501, i16 12504, i16 12507, i16 12510, i16 12511, i16 12512, i16 12513, i16 12514, i16 12516, i16 12518, i16 12520, i16 12521, i16 12522, i16 12523, i16 12524, i16 12525, i16 12527, i16 12528, i16 12529, i16 12530, i16 12531], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE22kKatakanaIrohaAlphabet = internal unnamed_addr constant [47 x i16] [i16 12452, i16 12525, i16 12495, i16 12491, i16 12507, i16 12504, i16 12488, i16 12481, i16 12522, i16 12492, i16 12523, i16 12530, i16 12527, i16 12459, i16 12520, i16 12479, i16 12524, i16 12477, i16 12484, i16 12493, i16 12490, i16 12521, i16 12512, i16 12454, i16 12528, i16 12494, i16 12458, i16 12463, i16 12516, i16 12510, i16 12465, i16 12501, i16 12467, i16 12456, i16 12486, i16 12450, i16 12469, i16 12461, i16 12518, i16 12513, i16 12511, i16 12471, i16 12529, i16 12498, i16 12514, i16 12475, i16 12473], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE25kCjkEarthlyBranchAlphabet = internal unnamed_addr constant [12 x i16] [i16 23376, i16 19985, i16 23493, i16 21359, i16 -28752, i16 24051, i16 21320, i16 26410, i16 30003, i16 -28343, i16 25100, i16 20133], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE24kCjkHeavenlyStemAlphabet = internal unnamed_addr constant [10 x i16] [i16 30002, i16 20057, i16 19993, i16 19969, i16 25098, i16 24049, i16 24218, i16 -28773, i16 22764, i16 30328], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE24kHangulConsonantAlphabet = internal unnamed_addr constant [14 x i16] [i16 12593, i16 12596, i16 12599, i16 12601, i16 12609, i16 12610, i16 12613, i16 12615, i16 12616, i16 12618, i16 12619, i16 12620, i16 12621, i16 12622], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE15kHangulAlphabet = internal unnamed_addr constant [14 x i16] [i16 -21504, i16 -20328, i16 -19740, i16 -18564, i16 -17976, i16 -17388, i16 -16212, i16 -15036, i16 -14448, i16 -13272, i16 -12684, i16 -12096, i16 -11508, i16 -10920], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE28kEthiopicHalehameGezAlphabet = internal unnamed_addr constant [26 x i16] [i16 4608, i16 4616, i16 4624, i16 4632, i16 4640, i16 4648, i16 4656, i16 4672, i16 4704, i16 4720, i16 4736, i16 4752, i16 4768, i16 4776, i16 4808, i16 4816, i16 4824, i16 4840, i16 4848, i16 4872, i16 4896, i16 4912, i16 4920, i16 4928, i16 4936, i16 4944], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE27kEthiopicHalehameAmAlphabet = internal unnamed_addr constant [33 x i16] [i16 4608, i16 4616, i16 4624, i16 4632, i16 4640, i16 4648, i16 4656, i16 4664, i16 4672, i16 4704, i16 4720, i16 4728, i16 4736, i16 4752, i16 4760, i16 4768, i16 4776, i16 4792, i16 4808, i16 4816, i16 4824, i16 4832, i16 4840, i16 4848, i16 4864, i16 4872, i16 4896, i16 4904, i16 4912, i16 4920, i16 4928, i16 4936, i16 4944], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE29kEthiopicHalehameTiErAlphabet = internal unnamed_addr constant [31 x i16] [i16 4608, i16 4616, i16 4624, i16 4632, i16 4648, i16 4656, i16 4664, i16 4672, i16 4688, i16 4704, i16 4720, i16 4728, i16 4752, i16 4760, i16 4768, i16 4776, i16 4792, i16 4808, i16 4816, i16 4824, i16 4832, i16 4840, i16 4848, i16 4864, i16 4872, i16 4896, i16 4904, i16 4912, i16 4920, i16 4936, i16 4944], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE29kEthiopicHalehameTiEtAlphabet = internal unnamed_addr constant [34 x i16] [i16 4608, i16 4616, i16 4624, i16 4632, i16 4640, i16 4648, i16 4656, i16 4664, i16 4672, i16 4688, i16 4704, i16 4720, i16 4728, i16 4736, i16 4752, i16 4760, i16 4768, i16 4776, i16 4792, i16 4808, i16 4816, i16 4824, i16 4832, i16 4840, i16 4848, i16 4864, i16 4872, i16 4896, i16 4904, i16 4912, i16 4920, i16 4928, i16 4936, i16 4944], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE24kKoreanHangulFormalTable = internal constant [26 x i16] [i16 2, i16 -17972, i16 0, i16 -14923, i16 0, i16 -14224, i16 0, i16 -15635, i16 -17359, i16 -13156, i16 -14847, i16 -14468, i16 -14476, i16 -16196, i16 -16212, i16 -14812, i16 -14559, i16 -12704, i16 -11500, i16 -21140, i16 -17976, i16 -14476, i16 -20216, i16 -15708, i16 32, i16 0], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE23kKoreanHanjaFormalTable = internal constant [26 x i16] [i16 2, i16 -31700, i16 0, i16 20740, i16 0, i16 20806, i16 0, i16 25342, i16 30334, i16 20191, i16 -26890, i16 22777, i16 -29517, i16 21443, i16 22235, i16 20116, i16 20845, i16 19971, i16 20843, i16 20061, i16 -17976, i16 -14476, i16 -20216, i16 -15708, i16 32, i16 0], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE25kKoreanHanjaInformalTable = internal constant [26 x i16] [i16 2, i16 -31700, i16 0, i16 20740, i16 0, i16 20806, i16 0, i16 21313, i16 30334, i16 21315, i16 -26890, i16 19968, i16 20108, i16 19977, i16 22235, i16 20116, i16 20845, i16 19971, i16 20843, i16 20061, i16 -17976, i16 -14476, i16 -20216, i16 -15708, i16 32, i16 0], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE32kTraditionalChineseInformalTable = internal constant [22 x i16] [i16 1, i16 -31700, i16 0, i16 20740, i16 0, i16 20806, i16 0, i16 21313, i16 30334, i16 21315, i16 -26890, i16 19968, i16 20108, i16 19977, i16 22235, i16 20116, i16 20845, i16 19971, i16 20843, i16 20061, i16 -29536, i16 0], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE27kSimpleChineseInformalTable = internal constant [22 x i16] [i16 1, i16 19975, i16 0, i16 20159, i16 0, i16 19975, i16 20159, i16 21313, i16 30334, i16 21315, i16 -26890, i16 19968, i16 20108, i16 19977, i16 22235, i16 20116, i16 20845, i16 19971, i16 20843, i16 20061, i16 -29409, i16 0], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE30kTraditionalChineseFormalTable = internal constant [22 x i16] [i16 1, i16 -31700, i16 0, i16 20740, i16 0, i16 20806, i16 0, i16 25342, i16 20336, i16 20191, i16 -26890, i16 22777, i16 -29517, i16 21443, i16 -32634, i16 20237, i16 -27016, i16 26578, i16 25420, i16 29590, i16 -29536, i16 0], align 16
@_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE25kSimpleChineseFormalTable = internal constant [22 x i16] [i16 1, i16 19975, i16 0, i16 20159, i16 0, i16 19975, i16 20159, i16 25342, i16 20336, i16 20191, i16 -26890, i16 22777, i16 -29392, i16 21441, i16 -32634, i16 20237, i16 -27066, i16 26578, i16 25420, i16 29590, i16 -29409, i16 0], align 16
@_ZZN5blink16list_marker_textL7ToRomanEibE8kLdigits = internal unnamed_addr constant [7 x i8] c"ivxlcdm", align 1
@_ZZN5blink16list_marker_textL7ToRomanEibE8kUdigits = internal unnamed_addr constant [7 x i8] c"IVXLCDM", align 1
@_ZZN5blink16list_marker_textL10ToGeorgianEiE18kGeorgianThousands = internal unnamed_addr constant [9 x i16] [i16 4329, i16 4330, i16 4331, i16 4332, i16 4333, i16 4334, i16 4340, i16 4335, i16 4336], align 16
@_ZZN5blink16list_marker_textL10ToGeorgianEiE17kGeorgianHundreds = internal unnamed_addr constant [9 x i16] [i16 4320, i16 4321, i16 4322, i16 4339, i16 4324, i16 4325, i16 4326, i16 4327, i16 4328], align 16
@_ZZN5blink16list_marker_textL10ToGeorgianEiE13kGeorgianTens = internal unnamed_addr constant [9 x i16] [i16 4312, i16 4313, i16 4314, i16 4315, i16 4316, i16 4338, i16 4317, i16 4318, i16 4319], align 16
@_ZZN5blink16list_marker_textL10ToGeorgianEiE13kGeorgianOnes = internal unnamed_addr constant [9 x i16] [i16 4304, i16 4305, i16 4306, i16 4307, i16 4308, i16 4309, i16 4310, i16 4337, i16 4311], align 16
@_ZZN5blink16list_marker_textL8ToHebrewEiE11kHebrewZero = internal constant [3 x i16] [i16 1505, i16 1508, i16 1488], align 2
@_ZN3WTF7unicodeL33kHebrewPunctuationGereshCharacterE = internal constant i16 1523, align 2
@.str.3 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZZN5blink16list_marker_textL17ToHebrewUnder1000EiRN3WTF6VectorIDsLj0ENS1_18PartitionAllocatorEEEE11kHebrewTens = internal constant [9 x i16] [i16 1497, i16 1499, i16 1500, i16 1502, i16 1504, i16 1505, i16 1506, i16 1508, i16 1510], align 16
@.str.8 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.9 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.10 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@switch.table._ZN5blink16list_marker_text6SuffixENS_14EListStyleTypeEi = private unnamed_addr constant [58 x i16] [i16 32, i16 32, i16 32, i16 32, i16 32, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 4966, i16 4966, i16 4966, i16 4966, i16 46, i16 46, i16 12289, i16 12289, i16 12289, i16 46, i16 46, i16 46, i16 46, i16 46, i16 46, i16 12289, i16 12289, i16 12289, i16 12289, i16 46, i16 46, i16 46, i16 46, i16 32], align 2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZN5blink16list_marker_text6SuffixENS_14EListStyleTypeEi(i32, i32) local_unnamed_addr #0 {
  switch i32 %0, label %17 [
    i32 31, label %13
    i32 30, label %13
    i32 29, label %13
    i32 27, label %13
    i32 28, label %13
    i32 56, label %13
    i32 54, label %13
    i32 55, label %13
    i32 53, label %13
    i32 39, label %13
    i32 38, label %13
    i32 37, label %13
    i32 36, label %13
    i32 34, label %13
    i32 35, label %13
    i32 33, label %13
    i32 32, label %13
    i32 26, label %8
    i32 25, label %8
    i32 43, label %23
    i32 47, label %23
    i32 46, label %3
    i32 45, label %3
    i32 44, label %3
  ]

3:                                                ; preds = %2, %2, %2
  %4 = add i32 %1, -1
  %5 = icmp ult i32 %4, 99999999
  %6 = icmp ult i32 %0, 58
  %7 = and i1 %5, %6
  br i1 %7, label %19, label %23

8:                                                ; preds = %2, %2
  %9 = add i32 %1, -1
  %10 = icmp ult i32 %9, 3999
  %11 = icmp ult i32 %0, 58
  %12 = and i1 %10, %11
  br i1 %12, label %19, label %23

13:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %14 = icmp sgt i32 %1, 0
  %15 = icmp ult i32 %0, 58
  %16 = and i1 %14, %15
  br i1 %16, label %19, label %23

17:                                               ; preds = %2
  %18 = icmp ult i32 %0, 58
  br i1 %18, label %19, label %23

19:                                               ; preds = %13, %8, %3, %17
  %20 = sext i32 %0 to i64
  %21 = getelementptr inbounds [58 x i16], [58 x i16]* @switch.table._ZN5blink16list_marker_text6SuffixENS_14EListStyleTypeEi, i64 0, i64 %20
  %22 = load i16, i16* %21, align 2
  ret i16 %22

23:                                               ; preds = %13, %8, %3, %17, %2, %2
  ret i16 46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEi(i32, i32) local_unnamed_addr #2 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca [5 x i16], align 2
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca [33 x i8], align 16
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.WTF::String", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.WTF::String", align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %"class.WTF::String", align 8
  %33 = alloca %"class.WTF::String", align 8
  %34 = alloca %"class.WTF::String", align 8
  %35 = alloca %"class.WTF::String", align 8
  %36 = alloca %"class.WTF::String", align 8
  %37 = alloca %"class.WTF::String", align 8
  %38 = alloca [33 x i16], align 16
  %39 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %40 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %41 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %42 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %43 = alloca %"class.WTF::String", align 8
  %44 = alloca %"class.WTF::StringAppend", align 8
  %45 = alloca %"class.WTF::StringAppend", align 8
  switch i32 %0, label %59 [
    i32 31, label %57
    i32 30, label %57
    i32 29, label %57
    i32 27, label %57
    i32 28, label %57
    i32 56, label %57
    i32 54, label %57
    i32 55, label %57
    i32 53, label %57
    i32 39, label %57
    i32 38, label %57
    i32 37, label %57
    i32 36, label %57
    i32 34, label %57
    i32 35, label %57
    i32 33, label %57
    i32 32, label %57
    i32 26, label %54
    i32 25, label %54
    i32 43, label %52
    i32 47, label %49
    i32 46, label %46
    i32 45, label %46
    i32 44, label %46
  ]

46:                                               ; preds = %2, %2, %2
  %47 = add i32 %1, -1
  %48 = icmp ugt i32 %47, 99999998
  br i1 %48, label %66, label %59

49:                                               ; preds = %2
  %50 = add i32 %1, -1
  %51 = icmp ugt i32 %50, 19998
  br i1 %51, label %66, label %1568

52:                                               ; preds = %2
  %53 = icmp ugt i32 %1, 999999
  br i1 %53, label %66, label %1630

54:                                               ; preds = %2, %2
  %55 = add i32 %1, -1
  %56 = icmp ugt i32 %55, 3998
  br i1 %56, label %66, label %59

57:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %58 = icmp slt i32 %1, 1
  br i1 %58, label %66, label %59

59:                                               ; preds = %46, %54, %57, %2
  switch i32 %0, label %1701 [
    i32 57, label %60
    i32 1, label %61
    i32 0, label %62
    i32 4, label %63
    i32 3, label %64
    i32 2, label %65
    i32 5, label %66
    i32 6, label %115
    i32 7, label %384
    i32 8, label %425
    i32 9, label %466
    i32 10, label %466
    i32 11, label %507
    i32 12, label %548
    i32 13, label %589
    i32 14, label %630
    i32 15, label %671
    i32 16, label %712
    i32 17, label %753
    i32 18, label %794
    i32 19, label %835
    i32 20, label %876
    i32 21, label %876
    i32 22, label %917
    i32 23, label %958
    i32 24, label %999
    i32 28, label %1040
    i32 29, label %1040
    i32 30, label %1073
    i32 31, label %1073
    i32 27, label %1106
    i32 53, label %1139
    i32 55, label %1172
    i32 54, label %1205
    i32 56, label %1238
    i32 32, label %1271
    i32 33, label %1304
    i32 39, label %1337
    i32 38, label %1370
    i32 34, label %1403
    i32 35, label %1436
    i32 36, label %1469
    i32 37, label %1502
    i32 40, label %1535
    i32 41, label %1538
    i32 42, label %1541
    i32 48, label %1544
    i32 52, label %1544
    i32 50, label %1547
    i32 51, label %1550
    i32 49, label %1553
    i32 25, label %1556
    i32 26, label %1559
    i32 44, label %1562
    i32 46, label %1562
    i32 45, label %1565
    i32 47, label %1568
    i32 43, label %1630
  ]

60:                                               ; preds = %59
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %43, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #8
  br label %1702

61:                                               ; preds = %59
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %43, i16* nonnull @_ZN3WTF7unicodeL21kWhiteBulletCharacterE, i32 1) #8
  br label %1702

62:                                               ; preds = %59
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %43, i16* nonnull @_ZN3WTF7unicodeL16kBulletCharacterE, i32 1) #8
  br label %1702

63:                                               ; preds = %59
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %43, i16* nonnull @_ZN3WTF7unicodeL32kBlackRightPointingSmallTriangleE, i32 1) #8
  br label %1702

64:                                               ; preds = %59
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %43, i16* nonnull @_ZN3WTF7unicodeL31kBlackDownPointingSmallTriangleE, i32 1) #8
  br label %1702

65:                                               ; preds = %59
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %43, i16* nonnull @_ZN3WTF7unicodeL21kBlackSquareCharacterE, i32 1) #8
  br label %1702

66:                                               ; preds = %46, %49, %52, %54, %57, %59
  %67 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %42, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #8
  %68 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %42, i64 0, i32 0, i64 12
  %69 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %42, i64 0, i32 2
  %70 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %42, i64 0, i32 3
  %71 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %42, i64 0, i32 0, i64 13
  %72 = icmp slt i32 %1, 0
  %73 = sub i32 0, %1
  %74 = select i1 %72, i32 %73, i32 %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 32, i1 false) #8
  store i8* %68, i8** %69, align 8
  %75 = urem i32 %74, 10
  %76 = udiv i32 %74, 10
  %77 = trunc i32 %75 to i8
  %78 = or i8 %77, 48
  store i8 %78, i8* %68, align 4
  %79 = icmp ugt i32 %74, 9
  br i1 %79, label %80, label %102

80:                                               ; preds = %66
  %81 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %42, i64 0, i32 0, i64 11
  store i8* %81, i8** %69, align 8
  %82 = urem i32 %76, 10
  %83 = trunc i32 %82 to i8
  %84 = or i8 %83, 48
  store i8 %84, i8* %81, align 1
  %85 = icmp ugt i32 %74, 99
  br i1 %85, label %86, label %102

86:                                               ; preds = %80
  %87 = udiv i32 %74, 100
  %88 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %42, i64 0, i32 0, i64 10
  store i8* %88, i8** %69, align 8
  %89 = urem i32 %87, 10
  %90 = trunc i32 %89 to i8
  %91 = or i8 %90, 48
  store i8 %91, i8* %88, align 2
  %92 = icmp ugt i32 %74, 999
  br i1 %92, label %93, label %102

93:                                               ; preds = %86, %93
  %94 = phi i32 [ %96, %93 ], [ %87, %86 ]
  %95 = load i8*, i8** %69, align 8
  %96 = udiv i32 %94, 10
  %97 = getelementptr inbounds i8, i8* %95, i64 -1
  store i8* %97, i8** %69, align 8
  %98 = urem i32 %96, 10
  %99 = trunc i32 %98 to i8
  %100 = or i8 %99, 48
  store i8 %100, i8* %97, align 1
  %101 = icmp ugt i32 %94, 99
  br i1 %101, label %93, label %102

102:                                              ; preds = %93, %86, %80, %66
  br i1 %72, label %103, label %106

103:                                              ; preds = %102
  %104 = load i8*, i8** %69, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 -1
  store i8* %105, i8** %69, align 8
  store i8 45, i8* %105, align 1
  br label %106

106:                                              ; preds = %102, %103
  %107 = bitcast i8** %69 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = ptrtoint i8* %71 to i64
  %110 = sub i64 %109, %108
  %111 = trunc i64 %110 to i32
  store i32 %111, i32* %70, align 8
  %112 = inttoptr i64 %108 to i8*
  %113 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %112, i32 %111) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #8
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %114, align 8
  br label %1702

115:                                              ; preds = %59
  %116 = add i32 %1, 9
  %117 = icmp ugt i32 %116, 18
  br i1 %117, label %118, label %167

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %41, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #8
  %120 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %41, i64 0, i32 0, i64 12
  %121 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %41, i64 0, i32 2
  %122 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %41, i64 0, i32 3
  %123 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %41, i64 0, i32 0, i64 13
  %124 = icmp slt i32 %1, 0
  %125 = sub i32 0, %1
  %126 = select i1 %124, i32 %125, i32 %1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 32, i1 false) #8
  store i8* %120, i8** %121, align 8
  %127 = urem i32 %126, 10
  %128 = udiv i32 %126, 10
  %129 = trunc i32 %127 to i8
  %130 = or i8 %129, 48
  store i8 %130, i8* %120, align 4
  %131 = icmp ugt i32 %126, 9
  br i1 %131, label %132, label %154

132:                                              ; preds = %118
  %133 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %41, i64 0, i32 0, i64 11
  store i8* %133, i8** %121, align 8
  %134 = urem i32 %128, 10
  %135 = trunc i32 %134 to i8
  %136 = or i8 %135, 48
  store i8 %136, i8* %133, align 1
  %137 = icmp ugt i32 %126, 99
  br i1 %137, label %138, label %154

138:                                              ; preds = %132
  %139 = udiv i32 %126, 100
  %140 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %41, i64 0, i32 0, i64 10
  store i8* %140, i8** %121, align 8
  %141 = urem i32 %139, 10
  %142 = trunc i32 %141 to i8
  %143 = or i8 %142, 48
  store i8 %143, i8* %140, align 2
  %144 = icmp ugt i32 %126, 999
  br i1 %144, label %145, label %154

145:                                              ; preds = %138, %145
  %146 = phi i32 [ %148, %145 ], [ %139, %138 ]
  %147 = load i8*, i8** %121, align 8
  %148 = udiv i32 %146, 10
  %149 = getelementptr inbounds i8, i8* %147, i64 -1
  store i8* %149, i8** %121, align 8
  %150 = urem i32 %148, 10
  %151 = trunc i32 %150 to i8
  %152 = or i8 %151, 48
  store i8 %152, i8* %149, align 1
  %153 = icmp ugt i32 %146, 99
  br i1 %153, label %145, label %154

154:                                              ; preds = %145, %138, %132, %118
  br i1 %124, label %155, label %158

155:                                              ; preds = %154
  %156 = load i8*, i8** %121, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 -1
  store i8* %157, i8** %121, align 8
  store i8 45, i8* %157, align 1
  br label %158

158:                                              ; preds = %154, %155
  %159 = bitcast i8** %121 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = ptrtoint i8* %123 to i64
  %162 = sub i64 %161, %160
  %163 = trunc i64 %162 to i32
  store i32 %163, i32* %122, align 8
  %164 = inttoptr i64 %160 to i8*
  %165 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %164, i32 %163) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #8
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %165, %"class.WTF::StringImpl"** %166, align 8
  br label %1702

167:                                              ; preds = %115
  %168 = icmp slt i32 %1, 0
  br i1 %168, label %169, label %295

169:                                              ; preds = %167
  %170 = bitcast %"class.WTF::StringAppend"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #8
  %171 = sub nsw i32 0, %1
  %172 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %40, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %172) #8
  %173 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %40, i64 0, i32 0, i64 12
  %174 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %40, i64 0, i32 2
  %175 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %40, i64 0, i32 3
  %176 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %40, i64 0, i32 0, i64 13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 32, i1 false) #8
  store i8* %173, i8** %174, align 8
  %177 = trunc i32 %171 to i8
  %178 = urem i8 %177, 10
  %179 = or i8 %178, 48
  store i8 %179, i8* %173, align 4
  %180 = icmp ugt i32 %171, 9
  %181 = ptrtoint i8* %173 to i64
  br i1 %180, label %182, label %209

182:                                              ; preds = %169
  %183 = udiv i32 %171, 10
  %184 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %40, i64 0, i32 0, i64 11
  store i8* %184, i8** %174, align 8
  %185 = urem i32 %183, 10
  %186 = trunc i32 %185 to i8
  %187 = or i8 %186, 48
  store i8 %187, i8* %184, align 1
  %188 = icmp ugt i32 %171, 99
  %189 = ptrtoint i8* %184 to i64
  br i1 %188, label %190, label %209

190:                                              ; preds = %182
  %191 = udiv i32 %171, 100
  %192 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %40, i64 0, i32 0, i64 10
  store i8* %192, i8** %174, align 8
  %193 = urem i32 %191, 10
  %194 = trunc i32 %193 to i8
  %195 = or i8 %194, 48
  store i8 %195, i8* %192, align 2
  %196 = icmp ugt i32 %171, 999
  br i1 %196, label %197, label %206

197:                                              ; preds = %190, %197
  %198 = phi i32 [ %200, %197 ], [ %191, %190 ]
  %199 = load i8*, i8** %174, align 8
  %200 = udiv i32 %198, 10
  %201 = getelementptr inbounds i8, i8* %199, i64 -1
  store i8* %201, i8** %174, align 8
  %202 = urem i32 %200, 10
  %203 = trunc i32 %202 to i8
  %204 = or i8 %203, 48
  store i8 %204, i8* %201, align 1
  %205 = icmp ugt i32 %198, 99
  br i1 %205, label %197, label %206

206:                                              ; preds = %197, %190
  %207 = bitcast i8** %174 to i64*
  %208 = load i64, i64* %207, align 8
  br label %209

209:                                              ; preds = %206, %182, %169
  %210 = phi i64 [ %208, %206 ], [ %189, %182 ], [ %181, %169 ]
  %211 = ptrtoint i8* %176 to i64
  %212 = sub i64 %211, %210
  %213 = trunc i64 %212 to i32
  store i32 %213, i32* %175, align 8
  %214 = inttoptr i64 %210 to i8*
  %215 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %214, i32 %213) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %172) #8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %260, label %217

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %234

224:                                              ; preds = %217
  %225 = zext i32 %223 to i33
  %226 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %225, i33 1) #8
  %227 = extractvalue { i33, i1 } %226, 1
  %228 = extractvalue { i33, i1 } %226, 0
  %229 = icmp slt i33 %228, 0
  %230 = or i1 %227, %229
  br i1 %230, label %231, label %232, !prof !2

231:                                              ; preds = %224
  call void @llvm.trap() #8
  unreachable

232:                                              ; preds = %224
  %233 = trunc i33 %228 to i32
  store i32 %233, i32* %222, align 4
  br label %234

234:                                              ; preds = %232, %217
  %235 = phi i32 [ %233, %232 ], [ %223, %217 ]
  %236 = load atomic i32, i32* %218 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %249

239:                                              ; preds = %234
  %240 = zext i32 %235 to i33
  %241 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %240, i33 1) #8
  %242 = extractvalue { i33, i1 } %241, 1
  %243 = extractvalue { i33, i1 } %241, 0
  %244 = icmp slt i33 %243, 0
  %245 = or i1 %242, %244
  br i1 %245, label %246, label %247, !prof !2

246:                                              ; preds = %239
  call void @llvm.trap() #8
  unreachable

247:                                              ; preds = %239
  %248 = trunc i33 %243 to i32
  store i32 %248, i32* %222, align 4
  br label %249

249:                                              ; preds = %247, %234
  %250 = phi i32 [ %248, %247 ], [ %235, %234 ]
  %251 = load atomic i32, i32* %218 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %256

254:                                              ; preds = %249
  %255 = add i32 %250, -1
  store i32 %255, i32* %222, align 4
  br label %256

256:                                              ; preds = %254, %249
  %257 = phi i32 [ %255, %254 ], [ %250, %249 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #8
  br label %260

260:                                              ; preds = %209, %256, %259
  %261 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %44, i64 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %261, align 8
  %262 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %44, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %262, align 8
  %263 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %44)
  %264 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %263, %"class.WTF::StringImpl"** %264, align 8
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %265, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %260
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %265) #8
  br label %280

280:                                              ; preds = %260, %276, %279
  br i1 %216, label %294, label %281

281:                                              ; preds = %280
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #8
  br label %294

294:                                              ; preds = %280, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #8
  br label %1702

295:                                              ; preds = %167
  %296 = bitcast %"class.WTF::StringAppend"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %296) #8
  %297 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %39, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %297) #8
  %298 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %39, i64 0, i32 0, i64 12
  %299 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %39, i64 0, i32 2
  %300 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %39, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %297, i8 -86, i64 32, i1 false) #8
  store i8* %298, i8** %299, align 8
  %301 = trunc i32 %1 to i8
  %302 = urem i8 %301, 10
  %303 = or i8 %302, 48
  store i8 %303, i8* %298, align 4
  store i32 1, i32* %300, align 8
  %304 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %298, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %297) #8
  %305 = icmp eq %"class.WTF::StringImpl"* %304, null
  br i1 %305, label %349, label %306

306:                                              ; preds = %295
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %312 = load i32, i32* %311, align 4
  br i1 %310, label %313, label %323

313:                                              ; preds = %306
  %314 = zext i32 %312 to i33
  %315 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %314, i33 1) #8
  %316 = extractvalue { i33, i1 } %315, 1
  %317 = extractvalue { i33, i1 } %315, 0
  %318 = icmp slt i33 %317, 0
  %319 = or i1 %316, %318
  br i1 %319, label %320, label %321, !prof !2

320:                                              ; preds = %313
  call void @llvm.trap() #8
  unreachable

321:                                              ; preds = %313
  %322 = trunc i33 %317 to i32
  store i32 %322, i32* %311, align 4
  br label %323

323:                                              ; preds = %321, %306
  %324 = phi i32 [ %322, %321 ], [ %312, %306 ]
  %325 = load atomic i32, i32* %307 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %338

328:                                              ; preds = %323
  %329 = zext i32 %324 to i33
  %330 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %329, i33 1) #8
  %331 = extractvalue { i33, i1 } %330, 1
  %332 = extractvalue { i33, i1 } %330, 0
  %333 = icmp slt i33 %332, 0
  %334 = or i1 %331, %333
  br i1 %334, label %335, label %336, !prof !2

335:                                              ; preds = %328
  call void @llvm.trap() #8
  unreachable

336:                                              ; preds = %328
  %337 = trunc i33 %332 to i32
  store i32 %337, i32* %311, align 4
  br label %338

338:                                              ; preds = %336, %323
  %339 = phi i32 [ %337, %336 ], [ %324, %323 ]
  %340 = load atomic i32, i32* %307 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %345

343:                                              ; preds = %338
  %344 = add i32 %339, -1
  store i32 %344, i32* %311, align 4
  br label %345

345:                                              ; preds = %343, %338
  %346 = phi i32 [ %344, %343 ], [ %339, %338 ]
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %345
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %304) #8
  br label %349

349:                                              ; preds = %295, %345, %348
  %350 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %45, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %350, align 8
  %351 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %45, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %304, %"class.WTF::StringImpl"** %351, align 8
  %352 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"* nonnull %45)
  %353 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %352, %"class.WTF::StringImpl"** %353, align 8
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %351, align 8
  %355 = icmp eq %"class.WTF::StringImpl"* %354, null
  br i1 %355, label %369, label %356

356:                                              ; preds = %349
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load atomic i32, i32* %357 monotonic, align 4
  %359 = and i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 0
  %362 = load i32, i32* %361, align 4
  br i1 %360, label %363, label %365

363:                                              ; preds = %356
  %364 = add i32 %362, -1
  store i32 %364, i32* %361, align 4
  br label %365

365:                                              ; preds = %363, %356
  %366 = phi i32 [ %364, %363 ], [ %362, %356 ]
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %369

368:                                              ; preds = %365
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %354) #8
  br label %369

369:                                              ; preds = %349, %365, %368
  br i1 %305, label %383, label %370

370:                                              ; preds = %369
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = load atomic i32, i32* %371 monotonic, align 4
  %373 = and i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  br i1 %374, label %377, label %379

377:                                              ; preds = %370
  %378 = add i32 %376, -1
  store i32 %378, i32* %375, align 4
  br label %379

379:                                              ; preds = %377, %370
  %380 = phi i32 [ %378, %377 ], [ %376, %370 ]
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %304) #8
  br label %383

383:                                              ; preds = %369, %379, %382
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %296) #8
  br label %1702

384:                                              ; preds = %59
  %385 = bitcast %"class.WTF::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %385) #8
  %386 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %386) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %386, i8 -86, i64 64, i1 false) #8
  %387 = icmp slt i32 %1, 0
  %388 = sub nsw i32 0, %1
  %389 = select i1 %387, i32 %388, i32 %1
  %390 = urem i32 %389, 10
  %391 = zext i32 %390 to i64
  %392 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE20kArabicIndicNumerals, i64 0, i64 %391
  %393 = load i16, i16* %392, align 2
  %394 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %393, i16* %394, align 16
  %395 = icmp ult i32 %389, 10
  br i1 %395, label %410, label %396

396:                                              ; preds = %384, %396
  %397 = phi i64 [ %404, %396 ], [ 1, %384 ]
  %398 = phi i32 [ %399, %396 ], [ %389, %384 ]
  %399 = udiv i32 %398, 10
  %400 = urem i32 %399, 10
  %401 = zext i32 %400 to i64
  %402 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE20kArabicIndicNumerals, i64 0, i64 %401
  %403 = load i16, i16* %402, align 2
  %404 = add nuw i64 %397, 1
  %405 = sub nsw i64 32, %397
  %406 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %405
  store i16 %403, i16* %406, align 2
  %407 = icmp ult i32 %398, 100
  br i1 %407, label %408, label %396

408:                                              ; preds = %396
  %409 = trunc i64 %404 to i32
  br i1 %387, label %411, label %417

410:                                              ; preds = %384
  br i1 %387, label %411, label %417

411:                                              ; preds = %410, %408
  %412 = phi i32 [ %409, %408 ], [ 1, %410 ]
  %413 = add nuw nsw i32 %412, 1
  %414 = sub nsw i32 32, %412
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %415
  store i16 45, i16* %416, align 2
  br label %417

417:                                              ; preds = %408, %410, %411
  %418 = phi i32 [ %413, %411 ], [ 1, %410 ], [ %409, %408 ]
  %419 = sub nsw i32 33, %418
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %420
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %37, i16* %421, i32 %418) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %386) #8
  %422 = bitcast %"class.WTF::String"* %37 to i64*
  %423 = load i64, i64* %422, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %385) #8
  %424 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %423, i64* %424, align 8
  br label %1702

425:                                              ; preds = %59
  %426 = bitcast %"class.WTF::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %426) #8
  %427 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %427) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %427, i8 -86, i64 64, i1 false) #8
  %428 = icmp slt i32 %1, 0
  %429 = sub nsw i32 0, %1
  %430 = select i1 %428, i32 %429, i32 %1
  %431 = urem i32 %430, 10
  %432 = zext i32 %431 to i64
  %433 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kBengaliNumerals, i64 0, i64 %432
  %434 = load i16, i16* %433, align 2
  %435 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %434, i16* %435, align 16
  %436 = icmp ult i32 %430, 10
  br i1 %436, label %451, label %437

437:                                              ; preds = %425, %437
  %438 = phi i64 [ %445, %437 ], [ 1, %425 ]
  %439 = phi i32 [ %440, %437 ], [ %430, %425 ]
  %440 = udiv i32 %439, 10
  %441 = urem i32 %440, 10
  %442 = zext i32 %441 to i64
  %443 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kBengaliNumerals, i64 0, i64 %442
  %444 = load i16, i16* %443, align 2
  %445 = add nuw i64 %438, 1
  %446 = sub nsw i64 32, %438
  %447 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %446
  store i16 %444, i16* %447, align 2
  %448 = icmp ult i32 %439, 100
  br i1 %448, label %449, label %437

449:                                              ; preds = %437
  %450 = trunc i64 %445 to i32
  br i1 %428, label %452, label %458

451:                                              ; preds = %425
  br i1 %428, label %452, label %458

452:                                              ; preds = %451, %449
  %453 = phi i32 [ %450, %449 ], [ 1, %451 ]
  %454 = add nuw nsw i32 %453, 1
  %455 = sub nsw i32 32, %453
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %456
  store i16 45, i16* %457, align 2
  br label %458

458:                                              ; preds = %449, %451, %452
  %459 = phi i32 [ %454, %452 ], [ 1, %451 ], [ %450, %449 ]
  %460 = sub nsw i32 33, %459
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %461
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %36, i16* %462, i32 %459) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %427) #8
  %463 = bitcast %"class.WTF::String"* %36 to i64*
  %464 = load i64, i64* %463, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %426) #8
  %465 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %464, i64* %465, align 8
  br label %1702

466:                                              ; preds = %59, %59
  %467 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %467) #8
  %468 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %468) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %468, i8 -86, i64 64, i1 false) #8
  %469 = icmp slt i32 %1, 0
  %470 = sub nsw i32 0, %1
  %471 = select i1 %469, i32 %470, i32 %1
  %472 = urem i32 %471, 10
  %473 = zext i32 %472 to i64
  %474 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE14kKhmerNumerals, i64 0, i64 %473
  %475 = load i16, i16* %474, align 2
  %476 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %475, i16* %476, align 16
  %477 = icmp ult i32 %471, 10
  br i1 %477, label %492, label %478

478:                                              ; preds = %466, %478
  %479 = phi i64 [ %486, %478 ], [ 1, %466 ]
  %480 = phi i32 [ %481, %478 ], [ %471, %466 ]
  %481 = udiv i32 %480, 10
  %482 = urem i32 %481, 10
  %483 = zext i32 %482 to i64
  %484 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE14kKhmerNumerals, i64 0, i64 %483
  %485 = load i16, i16* %484, align 2
  %486 = add nuw i64 %479, 1
  %487 = sub nsw i64 32, %479
  %488 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %487
  store i16 %485, i16* %488, align 2
  %489 = icmp ult i32 %480, 100
  br i1 %489, label %490, label %478

490:                                              ; preds = %478
  %491 = trunc i64 %486 to i32
  br i1 %469, label %493, label %499

492:                                              ; preds = %466
  br i1 %469, label %493, label %499

493:                                              ; preds = %492, %490
  %494 = phi i32 [ %491, %490 ], [ 1, %492 ]
  %495 = add nuw nsw i32 %494, 1
  %496 = sub nsw i32 32, %494
  %497 = sext i32 %496 to i64
  %498 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %497
  store i16 45, i16* %498, align 2
  br label %499

499:                                              ; preds = %490, %492, %493
  %500 = phi i32 [ %495, %493 ], [ 1, %492 ], [ %491, %490 ]
  %501 = sub nsw i32 33, %500
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %502
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %35, i16* %503, i32 %500) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %468) #8
  %504 = bitcast %"class.WTF::String"* %35 to i64*
  %505 = load i64, i64* %504, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %467) #8
  %506 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %505, i64* %506, align 8
  br label %1702

507:                                              ; preds = %59
  %508 = bitcast %"class.WTF::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %508) #8
  %509 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %509) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %509, i8 -86, i64 64, i1 false) #8
  %510 = icmp slt i32 %1, 0
  %511 = sub nsw i32 0, %1
  %512 = select i1 %510, i32 %511, i32 %1
  %513 = urem i32 %512, 10
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kDevanagariNumerals, i64 0, i64 %514
  %516 = load i16, i16* %515, align 2
  %517 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %516, i16* %517, align 16
  %518 = icmp ult i32 %512, 10
  br i1 %518, label %533, label %519

519:                                              ; preds = %507, %519
  %520 = phi i64 [ %527, %519 ], [ 1, %507 ]
  %521 = phi i32 [ %522, %519 ], [ %512, %507 ]
  %522 = udiv i32 %521, 10
  %523 = urem i32 %522, 10
  %524 = zext i32 %523 to i64
  %525 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kDevanagariNumerals, i64 0, i64 %524
  %526 = load i16, i16* %525, align 2
  %527 = add nuw i64 %520, 1
  %528 = sub nsw i64 32, %520
  %529 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %528
  store i16 %526, i16* %529, align 2
  %530 = icmp ult i32 %521, 100
  br i1 %530, label %531, label %519

531:                                              ; preds = %519
  %532 = trunc i64 %527 to i32
  br i1 %510, label %534, label %540

533:                                              ; preds = %507
  br i1 %510, label %534, label %540

534:                                              ; preds = %533, %531
  %535 = phi i32 [ %532, %531 ], [ 1, %533 ]
  %536 = add nuw nsw i32 %535, 1
  %537 = sub nsw i32 32, %535
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %538
  store i16 45, i16* %539, align 2
  br label %540

540:                                              ; preds = %531, %533, %534
  %541 = phi i32 [ %536, %534 ], [ 1, %533 ], [ %532, %531 ]
  %542 = sub nsw i32 33, %541
  %543 = sext i32 %542 to i64
  %544 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %543
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %34, i16* %544, i32 %541) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %509) #8
  %545 = bitcast %"class.WTF::String"* %34 to i64*
  %546 = load i64, i64* %545, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %508) #8
  %547 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %546, i64* %547, align 8
  br label %1702

548:                                              ; preds = %59
  %549 = bitcast %"class.WTF::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %549) #8
  %550 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %550) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %550, i8 -86, i64 64, i1 false) #8
  %551 = icmp slt i32 %1, 0
  %552 = sub nsw i32 0, %1
  %553 = select i1 %551, i32 %552, i32 %1
  %554 = urem i32 %553, 10
  %555 = zext i32 %554 to i64
  %556 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kGujaratiNumerals, i64 0, i64 %555
  %557 = load i16, i16* %556, align 2
  %558 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %557, i16* %558, align 16
  %559 = icmp ult i32 %553, 10
  br i1 %559, label %574, label %560

560:                                              ; preds = %548, %560
  %561 = phi i64 [ %568, %560 ], [ 1, %548 ]
  %562 = phi i32 [ %563, %560 ], [ %553, %548 ]
  %563 = udiv i32 %562, 10
  %564 = urem i32 %563, 10
  %565 = zext i32 %564 to i64
  %566 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kGujaratiNumerals, i64 0, i64 %565
  %567 = load i16, i16* %566, align 2
  %568 = add nuw i64 %561, 1
  %569 = sub nsw i64 32, %561
  %570 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %569
  store i16 %567, i16* %570, align 2
  %571 = icmp ult i32 %562, 100
  br i1 %571, label %572, label %560

572:                                              ; preds = %560
  %573 = trunc i64 %568 to i32
  br i1 %551, label %575, label %581

574:                                              ; preds = %548
  br i1 %551, label %575, label %581

575:                                              ; preds = %574, %572
  %576 = phi i32 [ %573, %572 ], [ 1, %574 ]
  %577 = add nuw nsw i32 %576, 1
  %578 = sub nsw i32 32, %576
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %579
  store i16 45, i16* %580, align 2
  br label %581

581:                                              ; preds = %572, %574, %575
  %582 = phi i32 [ %577, %575 ], [ 1, %574 ], [ %573, %572 ]
  %583 = sub nsw i32 33, %582
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %584
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %33, i16* %585, i32 %582) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %550) #8
  %586 = bitcast %"class.WTF::String"* %33 to i64*
  %587 = load i64, i64* %586, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %549) #8
  %588 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %587, i64* %588, align 8
  br label %1702

589:                                              ; preds = %59
  %590 = bitcast %"class.WTF::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %590) #8
  %591 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %591) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %591, i8 -86, i64 64, i1 false) #8
  %592 = icmp slt i32 %1, 0
  %593 = sub nsw i32 0, %1
  %594 = select i1 %592, i32 %593, i32 %1
  %595 = urem i32 %594, 10
  %596 = zext i32 %595 to i64
  %597 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kGurmukhiNumerals, i64 0, i64 %596
  %598 = load i16, i16* %597, align 2
  %599 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %598, i16* %599, align 16
  %600 = icmp ult i32 %594, 10
  br i1 %600, label %615, label %601

601:                                              ; preds = %589, %601
  %602 = phi i64 [ %609, %601 ], [ 1, %589 ]
  %603 = phi i32 [ %604, %601 ], [ %594, %589 ]
  %604 = udiv i32 %603, 10
  %605 = urem i32 %604, 10
  %606 = zext i32 %605 to i64
  %607 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kGurmukhiNumerals, i64 0, i64 %606
  %608 = load i16, i16* %607, align 2
  %609 = add nuw i64 %602, 1
  %610 = sub nsw i64 32, %602
  %611 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %610
  store i16 %608, i16* %611, align 2
  %612 = icmp ult i32 %603, 100
  br i1 %612, label %613, label %601

613:                                              ; preds = %601
  %614 = trunc i64 %609 to i32
  br i1 %592, label %616, label %622

615:                                              ; preds = %589
  br i1 %592, label %616, label %622

616:                                              ; preds = %615, %613
  %617 = phi i32 [ %614, %613 ], [ 1, %615 ]
  %618 = add nuw nsw i32 %617, 1
  %619 = sub nsw i32 32, %617
  %620 = sext i32 %619 to i64
  %621 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %620
  store i16 45, i16* %621, align 2
  br label %622

622:                                              ; preds = %613, %615, %616
  %623 = phi i32 [ %618, %616 ], [ 1, %615 ], [ %614, %613 ]
  %624 = sub nsw i32 33, %623
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %625
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %32, i16* %626, i32 %623) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %591) #8
  %627 = bitcast %"class.WTF::String"* %32 to i64*
  %628 = load i64, i64* %627, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %590) #8
  %629 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %628, i64* %629, align 8
  br label %1702

630:                                              ; preds = %59
  %631 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %631) #8
  %632 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %632) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %632, i8 -86, i64 64, i1 false) #8
  %633 = icmp slt i32 %1, 0
  %634 = sub nsw i32 0, %1
  %635 = select i1 %633, i32 %634, i32 %1
  %636 = urem i32 %635, 10
  %637 = zext i32 %636 to i64
  %638 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kKannadaNumerals, i64 0, i64 %637
  %639 = load i16, i16* %638, align 2
  %640 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %639, i16* %640, align 16
  %641 = icmp ult i32 %635, 10
  br i1 %641, label %656, label %642

642:                                              ; preds = %630, %642
  %643 = phi i64 [ %650, %642 ], [ 1, %630 ]
  %644 = phi i32 [ %645, %642 ], [ %635, %630 ]
  %645 = udiv i32 %644, 10
  %646 = urem i32 %645, 10
  %647 = zext i32 %646 to i64
  %648 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kKannadaNumerals, i64 0, i64 %647
  %649 = load i16, i16* %648, align 2
  %650 = add nuw i64 %643, 1
  %651 = sub nsw i64 32, %643
  %652 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %651
  store i16 %649, i16* %652, align 2
  %653 = icmp ult i32 %644, 100
  br i1 %653, label %654, label %642

654:                                              ; preds = %642
  %655 = trunc i64 %650 to i32
  br i1 %633, label %657, label %663

656:                                              ; preds = %630
  br i1 %633, label %657, label %663

657:                                              ; preds = %656, %654
  %658 = phi i32 [ %655, %654 ], [ 1, %656 ]
  %659 = add nuw nsw i32 %658, 1
  %660 = sub nsw i32 32, %658
  %661 = sext i32 %660 to i64
  %662 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %661
  store i16 45, i16* %662, align 2
  br label %663

663:                                              ; preds = %654, %656, %657
  %664 = phi i32 [ %659, %657 ], [ 1, %656 ], [ %655, %654 ]
  %665 = sub nsw i32 33, %664
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %666
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %31, i16* %667, i32 %664) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %632) #8
  %668 = bitcast %"class.WTF::String"* %31 to i64*
  %669 = load i64, i64* %668, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %631) #8
  %670 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %669, i64* %670, align 8
  br label %1702

671:                                              ; preds = %59
  %672 = bitcast %"class.WTF::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %672) #8
  %673 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %673) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %673, i8 -86, i64 64, i1 false) #8
  %674 = icmp slt i32 %1, 0
  %675 = sub nsw i32 0, %1
  %676 = select i1 %674, i32 %675, i32 %1
  %677 = urem i32 %676, 10
  %678 = zext i32 %677 to i64
  %679 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE12kLaoNumerals, i64 0, i64 %678
  %680 = load i16, i16* %679, align 2
  %681 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %680, i16* %681, align 16
  %682 = icmp ult i32 %676, 10
  br i1 %682, label %697, label %683

683:                                              ; preds = %671, %683
  %684 = phi i64 [ %691, %683 ], [ 1, %671 ]
  %685 = phi i32 [ %686, %683 ], [ %676, %671 ]
  %686 = udiv i32 %685, 10
  %687 = urem i32 %686, 10
  %688 = zext i32 %687 to i64
  %689 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE12kLaoNumerals, i64 0, i64 %688
  %690 = load i16, i16* %689, align 2
  %691 = add nuw i64 %684, 1
  %692 = sub nsw i64 32, %684
  %693 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %692
  store i16 %690, i16* %693, align 2
  %694 = icmp ult i32 %685, 100
  br i1 %694, label %695, label %683

695:                                              ; preds = %683
  %696 = trunc i64 %691 to i32
  br i1 %674, label %698, label %704

697:                                              ; preds = %671
  br i1 %674, label %698, label %704

698:                                              ; preds = %697, %695
  %699 = phi i32 [ %696, %695 ], [ 1, %697 ]
  %700 = add nuw nsw i32 %699, 1
  %701 = sub nsw i32 32, %699
  %702 = sext i32 %701 to i64
  %703 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %702
  store i16 45, i16* %703, align 2
  br label %704

704:                                              ; preds = %695, %697, %698
  %705 = phi i32 [ %700, %698 ], [ 1, %697 ], [ %696, %695 ]
  %706 = sub nsw i32 33, %705
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %707
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %30, i16* %708, i32 %705) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %673) #8
  %709 = bitcast %"class.WTF::String"* %30 to i64*
  %710 = load i64, i64* %709, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %672) #8
  %711 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %710, i64* %711, align 8
  br label %1702

712:                                              ; preds = %59
  %713 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %713) #8
  %714 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %714) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %714, i8 -86, i64 64, i1 false) #8
  %715 = icmp slt i32 %1, 0
  %716 = sub nsw i32 0, %1
  %717 = select i1 %715, i32 %716, i32 %1
  %718 = urem i32 %717, 10
  %719 = zext i32 %718 to i64
  %720 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE18kMalayalamNumerals, i64 0, i64 %719
  %721 = load i16, i16* %720, align 2
  %722 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %721, i16* %722, align 16
  %723 = icmp ult i32 %717, 10
  br i1 %723, label %738, label %724

724:                                              ; preds = %712, %724
  %725 = phi i64 [ %732, %724 ], [ 1, %712 ]
  %726 = phi i32 [ %727, %724 ], [ %717, %712 ]
  %727 = udiv i32 %726, 10
  %728 = urem i32 %727, 10
  %729 = zext i32 %728 to i64
  %730 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE18kMalayalamNumerals, i64 0, i64 %729
  %731 = load i16, i16* %730, align 2
  %732 = add nuw i64 %725, 1
  %733 = sub nsw i64 32, %725
  %734 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %733
  store i16 %731, i16* %734, align 2
  %735 = icmp ult i32 %726, 100
  br i1 %735, label %736, label %724

736:                                              ; preds = %724
  %737 = trunc i64 %732 to i32
  br i1 %715, label %739, label %745

738:                                              ; preds = %712
  br i1 %715, label %739, label %745

739:                                              ; preds = %738, %736
  %740 = phi i32 [ %737, %736 ], [ 1, %738 ]
  %741 = add nuw nsw i32 %740, 1
  %742 = sub nsw i32 32, %740
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %743
  store i16 45, i16* %744, align 2
  br label %745

745:                                              ; preds = %736, %738, %739
  %746 = phi i32 [ %741, %739 ], [ 1, %738 ], [ %737, %736 ]
  %747 = sub nsw i32 33, %746
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %748
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %29, i16* %749, i32 %746) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %714) #8
  %750 = bitcast %"class.WTF::String"* %29 to i64*
  %751 = load i64, i64* %750, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %713) #8
  %752 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %751, i64* %752, align 8
  br label %1702

753:                                              ; preds = %59
  %754 = bitcast %"class.WTF::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %754) #8
  %755 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %755) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %755, i8 -86, i64 64, i1 false) #8
  %756 = icmp slt i32 %1, 0
  %757 = sub nsw i32 0, %1
  %758 = select i1 %756, i32 %757, i32 %1
  %759 = urem i32 %758, 10
  %760 = zext i32 %759 to i64
  %761 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE18kMongolianNumerals, i64 0, i64 %760
  %762 = load i16, i16* %761, align 2
  %763 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %762, i16* %763, align 16
  %764 = icmp ult i32 %758, 10
  br i1 %764, label %779, label %765

765:                                              ; preds = %753, %765
  %766 = phi i64 [ %773, %765 ], [ 1, %753 ]
  %767 = phi i32 [ %768, %765 ], [ %758, %753 ]
  %768 = udiv i32 %767, 10
  %769 = urem i32 %768, 10
  %770 = zext i32 %769 to i64
  %771 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE18kMongolianNumerals, i64 0, i64 %770
  %772 = load i16, i16* %771, align 2
  %773 = add nuw i64 %766, 1
  %774 = sub nsw i64 32, %766
  %775 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %774
  store i16 %772, i16* %775, align 2
  %776 = icmp ult i32 %767, 100
  br i1 %776, label %777, label %765

777:                                              ; preds = %765
  %778 = trunc i64 %773 to i32
  br i1 %756, label %780, label %786

779:                                              ; preds = %753
  br i1 %756, label %780, label %786

780:                                              ; preds = %779, %777
  %781 = phi i32 [ %778, %777 ], [ 1, %779 ]
  %782 = add nuw nsw i32 %781, 1
  %783 = sub nsw i32 32, %781
  %784 = sext i32 %783 to i64
  %785 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %784
  store i16 45, i16* %785, align 2
  br label %786

786:                                              ; preds = %777, %779, %780
  %787 = phi i32 [ %782, %780 ], [ 1, %779 ], [ %778, %777 ]
  %788 = sub nsw i32 33, %787
  %789 = sext i32 %788 to i64
  %790 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %789
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %28, i16* %790, i32 %787) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %755) #8
  %791 = bitcast %"class.WTF::String"* %28 to i64*
  %792 = load i64, i64* %791, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %754) #8
  %793 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %792, i64* %793, align 8
  br label %1702

794:                                              ; preds = %59
  %795 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %795) #8
  %796 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %796) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %796, i8 -86, i64 64, i1 false) #8
  %797 = icmp slt i32 %1, 0
  %798 = sub nsw i32 0, %1
  %799 = select i1 %797, i32 %798, i32 %1
  %800 = urem i32 %799, 10
  %801 = zext i32 %800 to i64
  %802 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kMyanmarNumerals, i64 0, i64 %801
  %803 = load i16, i16* %802, align 2
  %804 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %803, i16* %804, align 16
  %805 = icmp ult i32 %799, 10
  br i1 %805, label %820, label %806

806:                                              ; preds = %794, %806
  %807 = phi i64 [ %814, %806 ], [ 1, %794 ]
  %808 = phi i32 [ %809, %806 ], [ %799, %794 ]
  %809 = udiv i32 %808, 10
  %810 = urem i32 %809, 10
  %811 = zext i32 %810 to i64
  %812 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kMyanmarNumerals, i64 0, i64 %811
  %813 = load i16, i16* %812, align 2
  %814 = add nuw i64 %807, 1
  %815 = sub nsw i64 32, %807
  %816 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %815
  store i16 %813, i16* %816, align 2
  %817 = icmp ult i32 %808, 100
  br i1 %817, label %818, label %806

818:                                              ; preds = %806
  %819 = trunc i64 %814 to i32
  br i1 %797, label %821, label %827

820:                                              ; preds = %794
  br i1 %797, label %821, label %827

821:                                              ; preds = %820, %818
  %822 = phi i32 [ %819, %818 ], [ 1, %820 ]
  %823 = add nuw nsw i32 %822, 1
  %824 = sub nsw i32 32, %822
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %825
  store i16 45, i16* %826, align 2
  br label %827

827:                                              ; preds = %818, %820, %821
  %828 = phi i32 [ %823, %821 ], [ 1, %820 ], [ %819, %818 ]
  %829 = sub nsw i32 33, %828
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %830
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %27, i16* %831, i32 %828) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %796) #8
  %832 = bitcast %"class.WTF::String"* %27 to i64*
  %833 = load i64, i64* %832, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %795) #8
  %834 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %833, i64* %834, align 8
  br label %1702

835:                                              ; preds = %59
  %836 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %836) #8
  %837 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %837) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %837, i8 -86, i64 64, i1 false) #8
  %838 = icmp slt i32 %1, 0
  %839 = sub nsw i32 0, %1
  %840 = select i1 %838, i32 %839, i32 %1
  %841 = urem i32 %840, 10
  %842 = zext i32 %841 to i64
  %843 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE14kOriyaNumerals, i64 0, i64 %842
  %844 = load i16, i16* %843, align 2
  %845 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %844, i16* %845, align 16
  %846 = icmp ult i32 %840, 10
  br i1 %846, label %861, label %847

847:                                              ; preds = %835, %847
  %848 = phi i64 [ %855, %847 ], [ 1, %835 ]
  %849 = phi i32 [ %850, %847 ], [ %840, %835 ]
  %850 = udiv i32 %849, 10
  %851 = urem i32 %850, 10
  %852 = zext i32 %851 to i64
  %853 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE14kOriyaNumerals, i64 0, i64 %852
  %854 = load i16, i16* %853, align 2
  %855 = add nuw i64 %848, 1
  %856 = sub nsw i64 32, %848
  %857 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %856
  store i16 %854, i16* %857, align 2
  %858 = icmp ult i32 %849, 100
  br i1 %858, label %859, label %847

859:                                              ; preds = %847
  %860 = trunc i64 %855 to i32
  br i1 %838, label %862, label %868

861:                                              ; preds = %835
  br i1 %838, label %862, label %868

862:                                              ; preds = %861, %859
  %863 = phi i32 [ %860, %859 ], [ 1, %861 ]
  %864 = add nuw nsw i32 %863, 1
  %865 = sub nsw i32 32, %863
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %866
  store i16 45, i16* %867, align 2
  br label %868

868:                                              ; preds = %859, %861, %862
  %869 = phi i32 [ %864, %862 ], [ 1, %861 ], [ %860, %859 ]
  %870 = sub nsw i32 33, %869
  %871 = sext i32 %870 to i64
  %872 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %871
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %26, i16* %872, i32 %869) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %837) #8
  %873 = bitcast %"class.WTF::String"* %26 to i64*
  %874 = load i64, i64* %873, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %836) #8
  %875 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %874, i64* %875, align 8
  br label %1702

876:                                              ; preds = %59, %59
  %877 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %877) #8
  %878 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %878) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %878, i8 -86, i64 64, i1 false) #8
  %879 = icmp slt i32 %1, 0
  %880 = sub nsw i32 0, %1
  %881 = select i1 %879, i32 %880, i32 %1
  %882 = urem i32 %881, 10
  %883 = zext i32 %882 to i64
  %884 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE13kUrduNumerals, i64 0, i64 %883
  %885 = load i16, i16* %884, align 2
  %886 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %885, i16* %886, align 16
  %887 = icmp ult i32 %881, 10
  br i1 %887, label %902, label %888

888:                                              ; preds = %876, %888
  %889 = phi i64 [ %896, %888 ], [ 1, %876 ]
  %890 = phi i32 [ %891, %888 ], [ %881, %876 ]
  %891 = udiv i32 %890, 10
  %892 = urem i32 %891, 10
  %893 = zext i32 %892 to i64
  %894 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE13kUrduNumerals, i64 0, i64 %893
  %895 = load i16, i16* %894, align 2
  %896 = add nuw i64 %889, 1
  %897 = sub nsw i64 32, %889
  %898 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %897
  store i16 %895, i16* %898, align 2
  %899 = icmp ult i32 %890, 100
  br i1 %899, label %900, label %888

900:                                              ; preds = %888
  %901 = trunc i64 %896 to i32
  br i1 %879, label %903, label %909

902:                                              ; preds = %876
  br i1 %879, label %903, label %909

903:                                              ; preds = %902, %900
  %904 = phi i32 [ %901, %900 ], [ 1, %902 ]
  %905 = add nuw nsw i32 %904, 1
  %906 = sub nsw i32 32, %904
  %907 = sext i32 %906 to i64
  %908 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %907
  store i16 45, i16* %908, align 2
  br label %909

909:                                              ; preds = %900, %902, %903
  %910 = phi i32 [ %905, %903 ], [ 1, %902 ], [ %901, %900 ]
  %911 = sub nsw i32 33, %910
  %912 = sext i32 %911 to i64
  %913 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %912
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %25, i16* %913, i32 %910) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %878) #8
  %914 = bitcast %"class.WTF::String"* %25 to i64*
  %915 = load i64, i64* %914, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %877) #8
  %916 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %915, i64* %916, align 8
  br label %1702

917:                                              ; preds = %59
  %918 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %918) #8
  %919 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %919) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %919, i8 -86, i64 64, i1 false) #8
  %920 = icmp slt i32 %1, 0
  %921 = sub nsw i32 0, %1
  %922 = select i1 %920, i32 %921, i32 %1
  %923 = urem i32 %922, 10
  %924 = zext i32 %923 to i64
  %925 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE15kTeluguNumerals, i64 0, i64 %924
  %926 = load i16, i16* %925, align 2
  %927 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %926, i16* %927, align 16
  %928 = icmp ult i32 %922, 10
  br i1 %928, label %943, label %929

929:                                              ; preds = %917, %929
  %930 = phi i64 [ %937, %929 ], [ 1, %917 ]
  %931 = phi i32 [ %932, %929 ], [ %922, %917 ]
  %932 = udiv i32 %931, 10
  %933 = urem i32 %932, 10
  %934 = zext i32 %933 to i64
  %935 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE15kTeluguNumerals, i64 0, i64 %934
  %936 = load i16, i16* %935, align 2
  %937 = add nuw i64 %930, 1
  %938 = sub nsw i64 32, %930
  %939 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %938
  store i16 %936, i16* %939, align 2
  %940 = icmp ult i32 %931, 100
  br i1 %940, label %941, label %929

941:                                              ; preds = %929
  %942 = trunc i64 %937 to i32
  br i1 %920, label %944, label %950

943:                                              ; preds = %917
  br i1 %920, label %944, label %950

944:                                              ; preds = %943, %941
  %945 = phi i32 [ %942, %941 ], [ 1, %943 ]
  %946 = add nuw nsw i32 %945, 1
  %947 = sub nsw i32 32, %945
  %948 = sext i32 %947 to i64
  %949 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %948
  store i16 45, i16* %949, align 2
  br label %950

950:                                              ; preds = %941, %943, %944
  %951 = phi i32 [ %946, %944 ], [ 1, %943 ], [ %942, %941 ]
  %952 = sub nsw i32 33, %951
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %953
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %24, i16* %954, i32 %951) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %919) #8
  %955 = bitcast %"class.WTF::String"* %24 to i64*
  %956 = load i64, i64* %955, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %918) #8
  %957 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %956, i64* %957, align 8
  br label %1702

958:                                              ; preds = %59
  %959 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %959) #8
  %960 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %960) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %960, i8 -86, i64 64, i1 false) #8
  %961 = icmp slt i32 %1, 0
  %962 = sub nsw i32 0, %1
  %963 = select i1 %961, i32 %962, i32 %1
  %964 = urem i32 %963, 10
  %965 = zext i32 %964 to i64
  %966 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kTibetanNumerals, i64 0, i64 %965
  %967 = load i16, i16* %966, align 2
  %968 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %967, i16* %968, align 16
  %969 = icmp ult i32 %963, 10
  br i1 %969, label %984, label %970

970:                                              ; preds = %958, %970
  %971 = phi i64 [ %978, %970 ], [ 1, %958 ]
  %972 = phi i32 [ %973, %970 ], [ %963, %958 ]
  %973 = udiv i32 %972, 10
  %974 = urem i32 %973, 10
  %975 = zext i32 %974 to i64
  %976 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE16kTibetanNumerals, i64 0, i64 %975
  %977 = load i16, i16* %976, align 2
  %978 = add nuw i64 %971, 1
  %979 = sub nsw i64 32, %971
  %980 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %979
  store i16 %977, i16* %980, align 2
  %981 = icmp ult i32 %972, 100
  br i1 %981, label %982, label %970

982:                                              ; preds = %970
  %983 = trunc i64 %978 to i32
  br i1 %961, label %985, label %991

984:                                              ; preds = %958
  br i1 %961, label %985, label %991

985:                                              ; preds = %984, %982
  %986 = phi i32 [ %983, %982 ], [ 1, %984 ]
  %987 = add nuw nsw i32 %986, 1
  %988 = sub nsw i32 32, %986
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %989
  store i16 45, i16* %990, align 2
  br label %991

991:                                              ; preds = %982, %984, %985
  %992 = phi i32 [ %987, %985 ], [ 1, %984 ], [ %983, %982 ]
  %993 = sub nsw i32 33, %992
  %994 = sext i32 %993 to i64
  %995 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %994
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %23, i16* %995, i32 %992) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %960) #8
  %996 = bitcast %"class.WTF::String"* %23 to i64*
  %997 = load i64, i64* %996, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %959) #8
  %998 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %997, i64* %998, align 8
  br label %1702

999:                                              ; preds = %59
  %1000 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1000) #8
  %1001 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1001) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1001, i8 -86, i64 64, i1 false) #8
  %1002 = icmp slt i32 %1, 0
  %1003 = sub nsw i32 0, %1
  %1004 = select i1 %1002, i32 %1003, i32 %1
  %1005 = urem i32 %1004, 10
  %1006 = zext i32 %1005 to i64
  %1007 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE13kThaiNumerals, i64 0, i64 %1006
  %1008 = load i16, i16* %1007, align 2
  %1009 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1008, i16* %1009, align 16
  %1010 = icmp ult i32 %1004, 10
  br i1 %1010, label %1025, label %1011

1011:                                             ; preds = %999, %1011
  %1012 = phi i64 [ %1019, %1011 ], [ 1, %999 ]
  %1013 = phi i32 [ %1014, %1011 ], [ %1004, %999 ]
  %1014 = udiv i32 %1013, 10
  %1015 = urem i32 %1014, 10
  %1016 = zext i32 %1015 to i64
  %1017 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE13kThaiNumerals, i64 0, i64 %1016
  %1018 = load i16, i16* %1017, align 2
  %1019 = add nuw i64 %1012, 1
  %1020 = sub nsw i64 32, %1012
  %1021 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1020
  store i16 %1018, i16* %1021, align 2
  %1022 = icmp ult i32 %1013, 100
  br i1 %1022, label %1023, label %1011

1023:                                             ; preds = %1011
  %1024 = trunc i64 %1019 to i32
  br i1 %1002, label %1026, label %1032

1025:                                             ; preds = %999
  br i1 %1002, label %1026, label %1032

1026:                                             ; preds = %1025, %1023
  %1027 = phi i32 [ %1024, %1023 ], [ 1, %1025 ]
  %1028 = add nuw nsw i32 %1027, 1
  %1029 = sub nsw i32 32, %1027
  %1030 = sext i32 %1029 to i64
  %1031 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1030
  store i16 45, i16* %1031, align 2
  br label %1032

1032:                                             ; preds = %1023, %1025, %1026
  %1033 = phi i32 [ %1028, %1026 ], [ 1, %1025 ], [ %1024, %1023 ]
  %1034 = sub nsw i32 33, %1033
  %1035 = sext i32 %1034 to i64
  %1036 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1035
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %22, i16* %1036, i32 %1033) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1001) #8
  %1037 = bitcast %"class.WTF::String"* %22 to i64*
  %1038 = load i64, i64* %1037, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1000) #8
  %1039 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1038, i64* %1039, align 8
  br label %1702

1040:                                             ; preds = %59, %59
  %1041 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1041) #8
  %1042 = getelementptr inbounds [33 x i8], [33 x i8]* %21, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 33, i8* nonnull %1042) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1042, i8 -86, i64 32, i1 false) #8
  %1043 = add i32 %1, -1
  %1044 = urem i32 %1043, 26
  %1045 = zext i32 %1044 to i64
  %1046 = getelementptr inbounds [26 x i8], [26 x i8]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kLowerLatinAlphabet, i64 0, i64 %1045
  %1047 = load i8, i8* %1046, align 1
  %1048 = getelementptr inbounds [33 x i8], [33 x i8]* %21, i64 0, i64 32
  store i8 %1047, i8* %1048, align 16
  %1049 = icmp ugt i32 %1043, 25
  br i1 %1049, label %1050, label %1065

1050:                                             ; preds = %1040, %1050
  %1051 = phi i64 [ %1059, %1050 ], [ 1, %1040 ]
  %1052 = phi i32 [ %1054, %1050 ], [ %1043, %1040 ]
  %1053 = udiv i32 %1052, 26
  %1054 = add nsw i32 %1053, -1
  %1055 = urem i32 %1054, 26
  %1056 = zext i32 %1055 to i64
  %1057 = getelementptr inbounds [26 x i8], [26 x i8]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kLowerLatinAlphabet, i64 0, i64 %1056
  %1058 = load i8, i8* %1057, align 1
  %1059 = add nuw i64 %1051, 1
  %1060 = sub nsw i64 32, %1051
  %1061 = getelementptr inbounds [33 x i8], [33 x i8]* %21, i64 0, i64 %1060
  store i8 %1058, i8* %1061, align 1
  %1062 = icmp ugt i32 %1054, 25
  br i1 %1062, label %1050, label %1063

1063:                                             ; preds = %1050
  %1064 = trunc i64 %1059 to i32
  br label %1065

1065:                                             ; preds = %1040, %1063
  %1066 = phi i32 [ 1, %1040 ], [ %1064, %1063 ]
  %1067 = sub nsw i32 33, %1066
  %1068 = sext i32 %1067 to i64
  %1069 = getelementptr inbounds [33 x i8], [33 x i8]* %21, i64 0, i64 %1068
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %20, i8* %1069, i32 %1066) #8
  call void @llvm.lifetime.end.p0i8(i64 33, i8* nonnull %1042) #8
  %1070 = bitcast %"class.WTF::String"* %20 to i64*
  %1071 = load i64, i64* %1070, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1041) #8
  %1072 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1071, i64* %1072, align 8
  br label %1702

1073:                                             ; preds = %59, %59
  %1074 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1074) #8
  %1075 = getelementptr inbounds [33 x i8], [33 x i8]* %21, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 33, i8* nonnull %1075) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1075, i8 -86, i64 32, i1 false) #8
  %1076 = add i32 %1, -1
  %1077 = urem i32 %1076, 26
  %1078 = zext i32 %1077 to i64
  %1079 = getelementptr inbounds [26 x i8], [26 x i8]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kUpperLatinAlphabet, i64 0, i64 %1078
  %1080 = load i8, i8* %1079, align 1
  %1081 = getelementptr inbounds [33 x i8], [33 x i8]* %21, i64 0, i64 32
  store i8 %1080, i8* %1081, align 16
  %1082 = icmp ugt i32 %1076, 25
  br i1 %1082, label %1083, label %1098

1083:                                             ; preds = %1073, %1083
  %1084 = phi i64 [ %1092, %1083 ], [ 1, %1073 ]
  %1085 = phi i32 [ %1087, %1083 ], [ %1076, %1073 ]
  %1086 = udiv i32 %1085, 26
  %1087 = add nsw i32 %1086, -1
  %1088 = urem i32 %1087, 26
  %1089 = zext i32 %1088 to i64
  %1090 = getelementptr inbounds [26 x i8], [26 x i8]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kUpperLatinAlphabet, i64 0, i64 %1089
  %1091 = load i8, i8* %1090, align 1
  %1092 = add nuw i64 %1084, 1
  %1093 = sub nsw i64 32, %1084
  %1094 = getelementptr inbounds [33 x i8], [33 x i8]* %21, i64 0, i64 %1093
  store i8 %1091, i8* %1094, align 1
  %1095 = icmp ugt i32 %1087, 25
  br i1 %1095, label %1083, label %1096

1096:                                             ; preds = %1083
  %1097 = trunc i64 %1092 to i32
  br label %1098

1098:                                             ; preds = %1073, %1096
  %1099 = phi i32 [ 1, %1073 ], [ %1097, %1096 ]
  %1100 = sub nsw i32 33, %1099
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds [33 x i8], [33 x i8]* %21, i64 0, i64 %1101
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %19, i8* %1102, i32 %1099) #8
  call void @llvm.lifetime.end.p0i8(i64 33, i8* nonnull %1075) #8
  %1103 = bitcast %"class.WTF::String"* %19 to i64*
  %1104 = load i64, i64* %1103, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1074) #8
  %1105 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1104, i64* %1105, align 8
  br label %1702

1106:                                             ; preds = %59
  %1107 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1107) #8
  %1108 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1108) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1108, i8 -86, i64 64, i1 false) #8
  %1109 = add i32 %1, -1
  %1110 = urem i32 %1109, 24
  %1111 = zext i32 %1110 to i64
  %1112 = getelementptr inbounds [24 x i16], [24 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kLowerGreekAlphabet, i64 0, i64 %1111
  %1113 = load i16, i16* %1112, align 2
  %1114 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1113, i16* %1114, align 16
  %1115 = icmp ult i32 %1109, 24
  br i1 %1115, label %1131, label %1116

1116:                                             ; preds = %1106, %1116
  %1117 = phi i64 [ %1125, %1116 ], [ 1, %1106 ]
  %1118 = phi i32 [ %1120, %1116 ], [ %1109, %1106 ]
  %1119 = udiv i32 %1118, 24
  %1120 = add nsw i32 %1119, -1
  %1121 = urem i32 %1120, 24
  %1122 = zext i32 %1121 to i64
  %1123 = getelementptr inbounds [24 x i16], [24 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE19kLowerGreekAlphabet, i64 0, i64 %1122
  %1124 = load i16, i16* %1123, align 2
  %1125 = add nuw i64 %1117, 1
  %1126 = sub nsw i64 32, %1117
  %1127 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1126
  store i16 %1124, i16* %1127, align 2
  %1128 = icmp ult i32 %1120, 24
  br i1 %1128, label %1129, label %1116

1129:                                             ; preds = %1116
  %1130 = trunc i64 %1125 to i32
  br label %1131

1131:                                             ; preds = %1106, %1129
  %1132 = phi i32 [ %1130, %1129 ], [ 1, %1106 ]
  %1133 = sub nsw i32 33, %1132
  %1134 = sext i32 %1133 to i64
  %1135 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1134
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %18, i16* %1135, i32 %1132) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1108) #8
  %1136 = bitcast %"class.WTF::String"* %18 to i64*
  %1137 = load i64, i64* %1136, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1107) #8
  %1138 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1137, i64* %1138, align 8
  br label %1702

1139:                                             ; preds = %59
  %1140 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1140) #8
  %1141 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1141) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1141, i8 -86, i64 64, i1 false) #8
  %1142 = add i32 %1, -1
  %1143 = urem i32 %1142, 48
  %1144 = zext i32 %1143 to i64
  %1145 = getelementptr inbounds [48 x i16], [48 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kHiraganaAlphabet, i64 0, i64 %1144
  %1146 = load i16, i16* %1145, align 2
  %1147 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1146, i16* %1147, align 16
  %1148 = icmp ult i32 %1142, 48
  br i1 %1148, label %1164, label %1149

1149:                                             ; preds = %1139, %1149
  %1150 = phi i64 [ %1158, %1149 ], [ 1, %1139 ]
  %1151 = phi i32 [ %1153, %1149 ], [ %1142, %1139 ]
  %1152 = udiv i32 %1151, 48
  %1153 = add nsw i32 %1152, -1
  %1154 = urem i32 %1153, 48
  %1155 = zext i32 %1154 to i64
  %1156 = getelementptr inbounds [48 x i16], [48 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kHiraganaAlphabet, i64 0, i64 %1155
  %1157 = load i16, i16* %1156, align 2
  %1158 = add nuw i64 %1150, 1
  %1159 = sub nsw i64 32, %1150
  %1160 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1159
  store i16 %1157, i16* %1160, align 2
  %1161 = icmp ult i32 %1153, 48
  br i1 %1161, label %1162, label %1149

1162:                                             ; preds = %1149
  %1163 = trunc i64 %1158 to i32
  br label %1164

1164:                                             ; preds = %1139, %1162
  %1165 = phi i32 [ %1163, %1162 ], [ 1, %1139 ]
  %1166 = sub nsw i32 33, %1165
  %1167 = sext i32 %1166 to i64
  %1168 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1167
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %17, i16* %1168, i32 %1165) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1141) #8
  %1169 = bitcast %"class.WTF::String"* %17 to i64*
  %1170 = load i64, i64* %1169, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1140) #8
  %1171 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1170, i64* %1171, align 8
  br label %1702

1172:                                             ; preds = %59
  %1173 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1173) #8
  %1174 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1174) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1174, i8 -86, i64 64, i1 false) #8
  %1175 = add i32 %1, -1
  %1176 = urem i32 %1175, 47
  %1177 = zext i32 %1176 to i64
  %1178 = getelementptr inbounds [47 x i16], [47 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE22kHiraganaIrohaAlphabet, i64 0, i64 %1177
  %1179 = load i16, i16* %1178, align 2
  %1180 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1179, i16* %1180, align 16
  %1181 = icmp ult i32 %1175, 47
  br i1 %1181, label %1197, label %1182

1182:                                             ; preds = %1172, %1182
  %1183 = phi i64 [ %1191, %1182 ], [ 1, %1172 ]
  %1184 = phi i32 [ %1186, %1182 ], [ %1175, %1172 ]
  %1185 = udiv i32 %1184, 47
  %1186 = add nsw i32 %1185, -1
  %1187 = urem i32 %1186, 47
  %1188 = zext i32 %1187 to i64
  %1189 = getelementptr inbounds [47 x i16], [47 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE22kHiraganaIrohaAlphabet, i64 0, i64 %1188
  %1190 = load i16, i16* %1189, align 2
  %1191 = add nuw i64 %1183, 1
  %1192 = sub nsw i64 32, %1183
  %1193 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1192
  store i16 %1190, i16* %1193, align 2
  %1194 = icmp ult i32 %1186, 47
  br i1 %1194, label %1195, label %1182

1195:                                             ; preds = %1182
  %1196 = trunc i64 %1191 to i32
  br label %1197

1197:                                             ; preds = %1172, %1195
  %1198 = phi i32 [ %1196, %1195 ], [ 1, %1172 ]
  %1199 = sub nsw i32 33, %1198
  %1200 = sext i32 %1199 to i64
  %1201 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1200
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %16, i16* %1201, i32 %1198) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1174) #8
  %1202 = bitcast %"class.WTF::String"* %16 to i64*
  %1203 = load i64, i64* %1202, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1173) #8
  %1204 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1203, i64* %1204, align 8
  br label %1702

1205:                                             ; preds = %59
  %1206 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1206) #8
  %1207 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1207) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1207, i8 -86, i64 64, i1 false) #8
  %1208 = add i32 %1, -1
  %1209 = urem i32 %1208, 48
  %1210 = zext i32 %1209 to i64
  %1211 = getelementptr inbounds [48 x i16], [48 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kKatakanaAlphabet, i64 0, i64 %1210
  %1212 = load i16, i16* %1211, align 2
  %1213 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1212, i16* %1213, align 16
  %1214 = icmp ult i32 %1208, 48
  br i1 %1214, label %1230, label %1215

1215:                                             ; preds = %1205, %1215
  %1216 = phi i64 [ %1224, %1215 ], [ 1, %1205 ]
  %1217 = phi i32 [ %1219, %1215 ], [ %1208, %1205 ]
  %1218 = udiv i32 %1217, 48
  %1219 = add nsw i32 %1218, -1
  %1220 = urem i32 %1219, 48
  %1221 = zext i32 %1220 to i64
  %1222 = getelementptr inbounds [48 x i16], [48 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE17kKatakanaAlphabet, i64 0, i64 %1221
  %1223 = load i16, i16* %1222, align 2
  %1224 = add nuw i64 %1216, 1
  %1225 = sub nsw i64 32, %1216
  %1226 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1225
  store i16 %1223, i16* %1226, align 2
  %1227 = icmp ult i32 %1219, 48
  br i1 %1227, label %1228, label %1215

1228:                                             ; preds = %1215
  %1229 = trunc i64 %1224 to i32
  br label %1230

1230:                                             ; preds = %1205, %1228
  %1231 = phi i32 [ %1229, %1228 ], [ 1, %1205 ]
  %1232 = sub nsw i32 33, %1231
  %1233 = sext i32 %1232 to i64
  %1234 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1233
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %15, i16* %1234, i32 %1231) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1207) #8
  %1235 = bitcast %"class.WTF::String"* %15 to i64*
  %1236 = load i64, i64* %1235, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1206) #8
  %1237 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1236, i64* %1237, align 8
  br label %1702

1238:                                             ; preds = %59
  %1239 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1239) #8
  %1240 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1240) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1240, i8 -86, i64 64, i1 false) #8
  %1241 = add i32 %1, -1
  %1242 = urem i32 %1241, 47
  %1243 = zext i32 %1242 to i64
  %1244 = getelementptr inbounds [47 x i16], [47 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE22kKatakanaIrohaAlphabet, i64 0, i64 %1243
  %1245 = load i16, i16* %1244, align 2
  %1246 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1245, i16* %1246, align 16
  %1247 = icmp ult i32 %1241, 47
  br i1 %1247, label %1263, label %1248

1248:                                             ; preds = %1238, %1248
  %1249 = phi i64 [ %1257, %1248 ], [ 1, %1238 ]
  %1250 = phi i32 [ %1252, %1248 ], [ %1241, %1238 ]
  %1251 = udiv i32 %1250, 47
  %1252 = add nsw i32 %1251, -1
  %1253 = urem i32 %1252, 47
  %1254 = zext i32 %1253 to i64
  %1255 = getelementptr inbounds [47 x i16], [47 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE22kKatakanaIrohaAlphabet, i64 0, i64 %1254
  %1256 = load i16, i16* %1255, align 2
  %1257 = add nuw i64 %1249, 1
  %1258 = sub nsw i64 32, %1249
  %1259 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1258
  store i16 %1256, i16* %1259, align 2
  %1260 = icmp ult i32 %1252, 47
  br i1 %1260, label %1261, label %1248

1261:                                             ; preds = %1248
  %1262 = trunc i64 %1257 to i32
  br label %1263

1263:                                             ; preds = %1238, %1261
  %1264 = phi i32 [ %1262, %1261 ], [ 1, %1238 ]
  %1265 = sub nsw i32 33, %1264
  %1266 = sext i32 %1265 to i64
  %1267 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1266
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %14, i16* %1267, i32 %1264) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1240) #8
  %1268 = bitcast %"class.WTF::String"* %14 to i64*
  %1269 = load i64, i64* %1268, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1239) #8
  %1270 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1269, i64* %1270, align 8
  br label %1702

1271:                                             ; preds = %59
  %1272 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1272) #8
  %1273 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1273) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1273, i8 -86, i64 64, i1 false) #8
  %1274 = add i32 %1, -1
  %1275 = urem i32 %1274, 12
  %1276 = zext i32 %1275 to i64
  %1277 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE25kCjkEarthlyBranchAlphabet, i64 0, i64 %1276
  %1278 = load i16, i16* %1277, align 2
  %1279 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1278, i16* %1279, align 16
  %1280 = icmp ult i32 %1274, 12
  br i1 %1280, label %1296, label %1281

1281:                                             ; preds = %1271, %1281
  %1282 = phi i64 [ %1290, %1281 ], [ 1, %1271 ]
  %1283 = phi i32 [ %1285, %1281 ], [ %1274, %1271 ]
  %1284 = udiv i32 %1283, 12
  %1285 = add nsw i32 %1284, -1
  %1286 = urem i32 %1285, 12
  %1287 = zext i32 %1286 to i64
  %1288 = getelementptr inbounds [12 x i16], [12 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE25kCjkEarthlyBranchAlphabet, i64 0, i64 %1287
  %1289 = load i16, i16* %1288, align 2
  %1290 = add nuw i64 %1282, 1
  %1291 = sub nsw i64 32, %1282
  %1292 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1291
  store i16 %1289, i16* %1292, align 2
  %1293 = icmp ult i32 %1285, 12
  br i1 %1293, label %1294, label %1281

1294:                                             ; preds = %1281
  %1295 = trunc i64 %1290 to i32
  br label %1296

1296:                                             ; preds = %1271, %1294
  %1297 = phi i32 [ %1295, %1294 ], [ 1, %1271 ]
  %1298 = sub nsw i32 33, %1297
  %1299 = sext i32 %1298 to i64
  %1300 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1299
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %13, i16* %1300, i32 %1297) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1273) #8
  %1301 = bitcast %"class.WTF::String"* %13 to i64*
  %1302 = load i64, i64* %1301, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1272) #8
  %1303 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1302, i64* %1303, align 8
  br label %1702

1304:                                             ; preds = %59
  %1305 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1305) #8
  %1306 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1306) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1306, i8 -86, i64 64, i1 false) #8
  %1307 = add i32 %1, -1
  %1308 = urem i32 %1307, 10
  %1309 = zext i32 %1308 to i64
  %1310 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE24kCjkHeavenlyStemAlphabet, i64 0, i64 %1309
  %1311 = load i16, i16* %1310, align 2
  %1312 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1311, i16* %1312, align 16
  %1313 = icmp ult i32 %1307, 10
  br i1 %1313, label %1329, label %1314

1314:                                             ; preds = %1304, %1314
  %1315 = phi i64 [ %1323, %1314 ], [ 1, %1304 ]
  %1316 = phi i32 [ %1318, %1314 ], [ %1307, %1304 ]
  %1317 = udiv i32 %1316, 10
  %1318 = add nsw i32 %1317, -1
  %1319 = urem i32 %1318, 10
  %1320 = zext i32 %1319 to i64
  %1321 = getelementptr inbounds [10 x i16], [10 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE24kCjkHeavenlyStemAlphabet, i64 0, i64 %1320
  %1322 = load i16, i16* %1321, align 2
  %1323 = add nuw i64 %1315, 1
  %1324 = sub nsw i64 32, %1315
  %1325 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1324
  store i16 %1322, i16* %1325, align 2
  %1326 = icmp ult i32 %1318, 10
  br i1 %1326, label %1327, label %1314

1327:                                             ; preds = %1314
  %1328 = trunc i64 %1323 to i32
  br label %1329

1329:                                             ; preds = %1304, %1327
  %1330 = phi i32 [ %1328, %1327 ], [ 1, %1304 ]
  %1331 = sub nsw i32 33, %1330
  %1332 = sext i32 %1331 to i64
  %1333 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1332
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %12, i16* %1333, i32 %1330) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1306) #8
  %1334 = bitcast %"class.WTF::String"* %12 to i64*
  %1335 = load i64, i64* %1334, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1305) #8
  %1336 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1335, i64* %1336, align 8
  br label %1702

1337:                                             ; preds = %59
  %1338 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1338) #8
  %1339 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1339) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1339, i8 -86, i64 64, i1 false) #8
  %1340 = add i32 %1, -1
  %1341 = urem i32 %1340, 14
  %1342 = zext i32 %1341 to i64
  %1343 = getelementptr inbounds [14 x i16], [14 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE24kHangulConsonantAlphabet, i64 0, i64 %1342
  %1344 = load i16, i16* %1343, align 2
  %1345 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1344, i16* %1345, align 16
  %1346 = icmp ult i32 %1340, 14
  br i1 %1346, label %1362, label %1347

1347:                                             ; preds = %1337, %1347
  %1348 = phi i64 [ %1356, %1347 ], [ 1, %1337 ]
  %1349 = phi i32 [ %1351, %1347 ], [ %1340, %1337 ]
  %1350 = udiv i32 %1349, 14
  %1351 = add nsw i32 %1350, -1
  %1352 = urem i32 %1351, 14
  %1353 = zext i32 %1352 to i64
  %1354 = getelementptr inbounds [14 x i16], [14 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE24kHangulConsonantAlphabet, i64 0, i64 %1353
  %1355 = load i16, i16* %1354, align 2
  %1356 = add nuw i64 %1348, 1
  %1357 = sub nsw i64 32, %1348
  %1358 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1357
  store i16 %1355, i16* %1358, align 2
  %1359 = icmp ult i32 %1351, 14
  br i1 %1359, label %1360, label %1347

1360:                                             ; preds = %1347
  %1361 = trunc i64 %1356 to i32
  br label %1362

1362:                                             ; preds = %1337, %1360
  %1363 = phi i32 [ %1361, %1360 ], [ 1, %1337 ]
  %1364 = sub nsw i32 33, %1363
  %1365 = sext i32 %1364 to i64
  %1366 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1365
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %11, i16* %1366, i32 %1363) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1339) #8
  %1367 = bitcast %"class.WTF::String"* %11 to i64*
  %1368 = load i64, i64* %1367, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1338) #8
  %1369 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1368, i64* %1369, align 8
  br label %1702

1370:                                             ; preds = %59
  %1371 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1371) #8
  %1372 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1372) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1372, i8 -86, i64 64, i1 false) #8
  %1373 = add i32 %1, -1
  %1374 = urem i32 %1373, 14
  %1375 = zext i32 %1374 to i64
  %1376 = getelementptr inbounds [14 x i16], [14 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE15kHangulAlphabet, i64 0, i64 %1375
  %1377 = load i16, i16* %1376, align 2
  %1378 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1377, i16* %1378, align 16
  %1379 = icmp ult i32 %1373, 14
  br i1 %1379, label %1395, label %1380

1380:                                             ; preds = %1370, %1380
  %1381 = phi i64 [ %1389, %1380 ], [ 1, %1370 ]
  %1382 = phi i32 [ %1384, %1380 ], [ %1373, %1370 ]
  %1383 = udiv i32 %1382, 14
  %1384 = add nsw i32 %1383, -1
  %1385 = urem i32 %1384, 14
  %1386 = zext i32 %1385 to i64
  %1387 = getelementptr inbounds [14 x i16], [14 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE15kHangulAlphabet, i64 0, i64 %1386
  %1388 = load i16, i16* %1387, align 2
  %1389 = add nuw i64 %1381, 1
  %1390 = sub nsw i64 32, %1381
  %1391 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1390
  store i16 %1388, i16* %1391, align 2
  %1392 = icmp ult i32 %1384, 14
  br i1 %1392, label %1393, label %1380

1393:                                             ; preds = %1380
  %1394 = trunc i64 %1389 to i32
  br label %1395

1395:                                             ; preds = %1370, %1393
  %1396 = phi i32 [ %1394, %1393 ], [ 1, %1370 ]
  %1397 = sub nsw i32 33, %1396
  %1398 = sext i32 %1397 to i64
  %1399 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1398
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %10, i16* %1399, i32 %1396) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1372) #8
  %1400 = bitcast %"class.WTF::String"* %10 to i64*
  %1401 = load i64, i64* %1400, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1371) #8
  %1402 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1401, i64* %1402, align 8
  br label %1702

1403:                                             ; preds = %59
  %1404 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1404) #8
  %1405 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1405) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1405, i8 -86, i64 64, i1 false) #8
  %1406 = add i32 %1, -1
  %1407 = urem i32 %1406, 26
  %1408 = zext i32 %1407 to i64
  %1409 = getelementptr inbounds [26 x i16], [26 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE28kEthiopicHalehameGezAlphabet, i64 0, i64 %1408
  %1410 = load i16, i16* %1409, align 2
  %1411 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1410, i16* %1411, align 16
  %1412 = icmp ult i32 %1406, 26
  br i1 %1412, label %1428, label %1413

1413:                                             ; preds = %1403, %1413
  %1414 = phi i64 [ %1422, %1413 ], [ 1, %1403 ]
  %1415 = phi i32 [ %1417, %1413 ], [ %1406, %1403 ]
  %1416 = udiv i32 %1415, 26
  %1417 = add nsw i32 %1416, -1
  %1418 = urem i32 %1417, 26
  %1419 = zext i32 %1418 to i64
  %1420 = getelementptr inbounds [26 x i16], [26 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE28kEthiopicHalehameGezAlphabet, i64 0, i64 %1419
  %1421 = load i16, i16* %1420, align 2
  %1422 = add nuw i64 %1414, 1
  %1423 = sub nsw i64 32, %1414
  %1424 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1423
  store i16 %1421, i16* %1424, align 2
  %1425 = icmp ult i32 %1417, 26
  br i1 %1425, label %1426, label %1413

1426:                                             ; preds = %1413
  %1427 = trunc i64 %1422 to i32
  br label %1428

1428:                                             ; preds = %1403, %1426
  %1429 = phi i32 [ %1427, %1426 ], [ 1, %1403 ]
  %1430 = sub nsw i32 33, %1429
  %1431 = sext i32 %1430 to i64
  %1432 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1431
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %9, i16* %1432, i32 %1429) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1405) #8
  %1433 = bitcast %"class.WTF::String"* %9 to i64*
  %1434 = load i64, i64* %1433, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1404) #8
  %1435 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1434, i64* %1435, align 8
  br label %1702

1436:                                             ; preds = %59
  %1437 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1437) #8
  %1438 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1438) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1438, i8 -86, i64 64, i1 false) #8
  %1439 = add i32 %1, -1
  %1440 = urem i32 %1439, 33
  %1441 = zext i32 %1440 to i64
  %1442 = getelementptr inbounds [33 x i16], [33 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE27kEthiopicHalehameAmAlphabet, i64 0, i64 %1441
  %1443 = load i16, i16* %1442, align 2
  %1444 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1443, i16* %1444, align 16
  %1445 = icmp ult i32 %1439, 33
  br i1 %1445, label %1461, label %1446

1446:                                             ; preds = %1436, %1446
  %1447 = phi i64 [ %1455, %1446 ], [ 1, %1436 ]
  %1448 = phi i32 [ %1450, %1446 ], [ %1439, %1436 ]
  %1449 = udiv i32 %1448, 33
  %1450 = add nsw i32 %1449, -1
  %1451 = urem i32 %1450, 33
  %1452 = zext i32 %1451 to i64
  %1453 = getelementptr inbounds [33 x i16], [33 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE27kEthiopicHalehameAmAlphabet, i64 0, i64 %1452
  %1454 = load i16, i16* %1453, align 2
  %1455 = add nuw i64 %1447, 1
  %1456 = sub nsw i64 32, %1447
  %1457 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1456
  store i16 %1454, i16* %1457, align 2
  %1458 = icmp ult i32 %1450, 33
  br i1 %1458, label %1459, label %1446

1459:                                             ; preds = %1446
  %1460 = trunc i64 %1455 to i32
  br label %1461

1461:                                             ; preds = %1436, %1459
  %1462 = phi i32 [ %1460, %1459 ], [ 1, %1436 ]
  %1463 = sub nsw i32 33, %1462
  %1464 = sext i32 %1463 to i64
  %1465 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1464
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %8, i16* %1465, i32 %1462) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1438) #8
  %1466 = bitcast %"class.WTF::String"* %8 to i64*
  %1467 = load i64, i64* %1466, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1437) #8
  %1468 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1467, i64* %1468, align 8
  br label %1702

1469:                                             ; preds = %59
  %1470 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1470) #8
  %1471 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1471) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1471, i8 -86, i64 64, i1 false) #8
  %1472 = add i32 %1, -1
  %1473 = urem i32 %1472, 31
  %1474 = zext i32 %1473 to i64
  %1475 = getelementptr inbounds [31 x i16], [31 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE29kEthiopicHalehameTiErAlphabet, i64 0, i64 %1474
  %1476 = load i16, i16* %1475, align 2
  %1477 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1476, i16* %1477, align 16
  %1478 = icmp ult i32 %1472, 31
  br i1 %1478, label %1494, label %1479

1479:                                             ; preds = %1469, %1479
  %1480 = phi i64 [ %1488, %1479 ], [ 1, %1469 ]
  %1481 = phi i32 [ %1483, %1479 ], [ %1472, %1469 ]
  %1482 = udiv i32 %1481, 31
  %1483 = add nsw i32 %1482, -1
  %1484 = urem i32 %1483, 31
  %1485 = zext i32 %1484 to i64
  %1486 = getelementptr inbounds [31 x i16], [31 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE29kEthiopicHalehameTiErAlphabet, i64 0, i64 %1485
  %1487 = load i16, i16* %1486, align 2
  %1488 = add nuw i64 %1480, 1
  %1489 = sub nsw i64 32, %1480
  %1490 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1489
  store i16 %1487, i16* %1490, align 2
  %1491 = icmp ult i32 %1483, 31
  br i1 %1491, label %1492, label %1479

1492:                                             ; preds = %1479
  %1493 = trunc i64 %1488 to i32
  br label %1494

1494:                                             ; preds = %1469, %1492
  %1495 = phi i32 [ %1493, %1492 ], [ 1, %1469 ]
  %1496 = sub nsw i32 33, %1495
  %1497 = sext i32 %1496 to i64
  %1498 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1497
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %7, i16* %1498, i32 %1495) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1471) #8
  %1499 = bitcast %"class.WTF::String"* %7 to i64*
  %1500 = load i64, i64* %1499, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1470) #8
  %1501 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1500, i64* %1501, align 8
  br label %1702

1502:                                             ; preds = %59
  %1503 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1503) #8
  %1504 = bitcast [33 x i16]* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 66, i8* nonnull %1504) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1504, i8 -86, i64 64, i1 false) #8
  %1505 = add i32 %1, -1
  %1506 = urem i32 %1505, 34
  %1507 = zext i32 %1506 to i64
  %1508 = getelementptr inbounds [34 x i16], [34 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE29kEthiopicHalehameTiEtAlphabet, i64 0, i64 %1507
  %1509 = load i16, i16* %1508, align 2
  %1510 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 32
  store i16 %1509, i16* %1510, align 16
  %1511 = icmp ult i32 %1505, 34
  br i1 %1511, label %1527, label %1512

1512:                                             ; preds = %1502, %1512
  %1513 = phi i64 [ %1521, %1512 ], [ 1, %1502 ]
  %1514 = phi i32 [ %1516, %1512 ], [ %1505, %1502 ]
  %1515 = udiv i32 %1514, 34
  %1516 = add nsw i32 %1515, -1
  %1517 = urem i32 %1516, 34
  %1518 = zext i32 %1517 to i64
  %1519 = getelementptr inbounds [34 x i16], [34 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE29kEthiopicHalehameTiEtAlphabet, i64 0, i64 %1518
  %1520 = load i16, i16* %1519, align 2
  %1521 = add nuw i64 %1513, 1
  %1522 = sub nsw i64 32, %1513
  %1523 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1522
  store i16 %1520, i16* %1523, align 2
  %1524 = icmp ult i32 %1516, 34
  br i1 %1524, label %1525, label %1512

1525:                                             ; preds = %1512
  %1526 = trunc i64 %1521 to i32
  br label %1527

1527:                                             ; preds = %1502, %1525
  %1528 = phi i32 [ %1526, %1525 ], [ 1, %1502 ]
  %1529 = sub nsw i32 33, %1528
  %1530 = sext i32 %1529 to i64
  %1531 = getelementptr inbounds [33 x i16], [33 x i16]* %38, i64 0, i64 %1530
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %6, i16* %1531, i32 %1528) #8
  call void @llvm.lifetime.end.p0i8(i64 66, i8* nonnull %1504) #8
  %1532 = bitcast %"class.WTF::String"* %6 to i64*
  %1533 = load i64, i64* %1532, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1503) #8
  %1534 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1533, i64* %1534, align 8
  br label %1702

1535:                                             ; preds = %59
  %1536 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL16ToCJKIdeographicEiPKDsNS0_8CJKStyleE(i32 %1, i16* getelementptr inbounds ([26 x i16], [26 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE24kKoreanHangulFormalTable, i64 0, i64 0), i32 0)
  %1537 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1536, %"class.WTF::StringImpl"** %1537, align 8
  br label %1702

1538:                                             ; preds = %59
  %1539 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL16ToCJKIdeographicEiPKDsNS0_8CJKStyleE(i32 %1, i16* getelementptr inbounds ([26 x i16], [26 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE23kKoreanHanjaFormalTable, i64 0, i64 0), i32 0)
  %1540 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1539, %"class.WTF::StringImpl"** %1540, align 8
  br label %1702

1541:                                             ; preds = %59
  %1542 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL16ToCJKIdeographicEiPKDsNS0_8CJKStyleE(i32 %1, i16* getelementptr inbounds ([26 x i16], [26 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE25kKoreanHanjaInformalTable, i64 0, i64 0), i32 1)
  %1543 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1542, %"class.WTF::StringImpl"** %1543, align 8
  br label %1702

1544:                                             ; preds = %59, %59
  %1545 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL16ToCJKIdeographicEiPKDsNS0_8CJKStyleE(i32 %1, i16* getelementptr inbounds ([22 x i16], [22 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE32kTraditionalChineseInformalTable, i64 0, i64 0), i32 1)
  %1546 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1545, %"class.WTF::StringImpl"** %1546, align 8
  br label %1702

1547:                                             ; preds = %59
  %1548 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL16ToCJKIdeographicEiPKDsNS0_8CJKStyleE(i32 %1, i16* getelementptr inbounds ([22 x i16], [22 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE27kSimpleChineseInformalTable, i64 0, i64 0), i32 1)
  %1549 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1548, %"class.WTF::StringImpl"** %1549, align 8
  br label %1702

1550:                                             ; preds = %59
  %1551 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL16ToCJKIdeographicEiPKDsNS0_8CJKStyleE(i32 %1, i16* getelementptr inbounds ([22 x i16], [22 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE30kTraditionalChineseFormalTable, i64 0, i64 0), i32 0)
  %1552 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1551, %"class.WTF::StringImpl"** %1552, align 8
  br label %1702

1553:                                             ; preds = %59
  %1554 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL16ToCJKIdeographicEiPKDsNS0_8CJKStyleE(i32 %1, i16* getelementptr inbounds ([22 x i16], [22 x i16]* @_ZZN5blink16list_marker_text7GetTextENS_14EListStyleTypeEiE25kSimpleChineseFormalTable, i64 0, i64 0), i32 0)
  %1555 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1554, %"class.WTF::StringImpl"** %1555, align 8
  br label %1702

1556:                                             ; preds = %59
  %1557 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL7ToRomanEib(i32 %1, i1 zeroext false)
  %1558 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1557, %"class.WTF::StringImpl"** %1558, align 8
  br label %1702

1559:                                             ; preds = %59
  %1560 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL7ToRomanEib(i32 %1, i1 zeroext true)
  %1561 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1560, %"class.WTF::StringImpl"** %1561, align 8
  br label %1702

1562:                                             ; preds = %59, %59
  %1563 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL10ToArmenianEib(i32 %1, i1 zeroext true)
  %1564 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1563, %"class.WTF::StringImpl"** %1564, align 8
  br label %1702

1565:                                             ; preds = %59
  %1566 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL10ToArmenianEib(i32 %1, i1 zeroext false)
  %1567 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1566, %"class.WTF::StringImpl"** %1567, align 8
  br label %1702

1568:                                             ; preds = %49, %59
  %1569 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1569)
  %1570 = bitcast [5 x i16]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %1570) #8
  %1571 = getelementptr inbounds [5 x i16], [5 x i16]* %5, i64 0, i64 0
  %1572 = icmp sgt i32 %1, 9999
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %1570, i8 -86, i64 10, i1 false) #8
  br i1 %1572, label %1573, label %1574

1573:                                             ; preds = %1568
  store i16 4341, i16* %1571, align 2
  br label %1574

1574:                                             ; preds = %1573, %1568
  %1575 = phi i32 [ 1, %1573 ], [ 0, %1568 ]
  %1576 = sdiv i32 %1, 1000
  %1577 = srem i32 %1576, 10
  %1578 = icmp eq i32 %1577, 0
  br i1 %1578, label %1587, label %1579

1579:                                             ; preds = %1574
  %1580 = add nsw i32 %1577, -1
  %1581 = sext i32 %1580 to i64
  %1582 = getelementptr inbounds [9 x i16], [9 x i16]* @_ZZN5blink16list_marker_textL10ToGeorgianEiE18kGeorgianThousands, i64 0, i64 %1581
  %1583 = load i16, i16* %1582, align 2
  %1584 = add nuw nsw i32 %1575, 1
  %1585 = zext i32 %1575 to i64
  %1586 = getelementptr inbounds [5 x i16], [5 x i16]* %5, i64 0, i64 %1585
  store i16 %1583, i16* %1586, align 2
  br label %1587

1587:                                             ; preds = %1579, %1574
  %1588 = phi i32 [ %1584, %1579 ], [ %1575, %1574 ]
  %1589 = sdiv i32 %1, 100
  %1590 = srem i32 %1589, 10
  %1591 = icmp eq i32 %1590, 0
  br i1 %1591, label %1600, label %1592

1592:                                             ; preds = %1587
  %1593 = add nsw i32 %1590, -1
  %1594 = sext i32 %1593 to i64
  %1595 = getelementptr inbounds [9 x i16], [9 x i16]* @_ZZN5blink16list_marker_textL10ToGeorgianEiE17kGeorgianHundreds, i64 0, i64 %1594
  %1596 = load i16, i16* %1595, align 2
  %1597 = add nuw nsw i32 %1588, 1
  %1598 = sext i32 %1588 to i64
  %1599 = getelementptr inbounds [5 x i16], [5 x i16]* %5, i64 0, i64 %1598
  store i16 %1596, i16* %1599, align 2
  br label %1600

1600:                                             ; preds = %1592, %1587
  %1601 = phi i32 [ %1597, %1592 ], [ %1588, %1587 ]
  %1602 = sdiv i32 %1, 10
  %1603 = srem i32 %1, 10
  %1604 = srem i32 %1602, 10
  %1605 = icmp eq i32 %1604, 0
  br i1 %1605, label %1614, label %1606

1606:                                             ; preds = %1600
  %1607 = add nsw i32 %1604, -1
  %1608 = sext i32 %1607 to i64
  %1609 = getelementptr inbounds [9 x i16], [9 x i16]* @_ZZN5blink16list_marker_textL10ToGeorgianEiE13kGeorgianTens, i64 0, i64 %1608
  %1610 = load i16, i16* %1609, align 2
  %1611 = add nuw nsw i32 %1601, 1
  %1612 = sext i32 %1601 to i64
  %1613 = getelementptr inbounds [5 x i16], [5 x i16]* %5, i64 0, i64 %1612
  store i16 %1610, i16* %1613, align 2
  br label %1614

1614:                                             ; preds = %1606, %1600
  %1615 = phi i32 [ %1611, %1606 ], [ %1601, %1600 ]
  %1616 = icmp eq i32 %1603, 0
  br i1 %1616, label %1625, label %1617

1617:                                             ; preds = %1614
  %1618 = add nsw i32 %1603, -1
  %1619 = sext i32 %1618 to i64
  %1620 = getelementptr inbounds [9 x i16], [9 x i16]* @_ZZN5blink16list_marker_textL10ToGeorgianEiE13kGeorgianOnes, i64 0, i64 %1619
  %1621 = load i16, i16* %1620, align 2
  %1622 = add nuw nsw i32 %1615, 1
  %1623 = sext i32 %1615 to i64
  %1624 = getelementptr inbounds [5 x i16], [5 x i16]* %5, i64 0, i64 %1623
  store i16 %1621, i16* %1624, align 2
  br label %1625

1625:                                             ; preds = %1614, %1617
  %1626 = phi i32 [ %1622, %1617 ], [ %1615, %1614 ]
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %4, i16* nonnull %1571, i32 %1626) #8
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %1570) #8
  %1627 = bitcast %"class.WTF::String"* %4 to i64*
  %1628 = load i64, i64* %1627, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1569)
  %1629 = bitcast %"class.WTF::String"* %43 to i64*
  store i64 %1628, i64* %1629, align 8
  br label %1702

1630:                                             ; preds = %52, %59
  %1631 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1631) #8
  %1632 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %1633 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1631, i8 0, i64 16, i1 false) #8
  %1634 = icmp eq i32 %1, 0
  br i1 %1634, label %1635, label %1636

1635:                                             ; preds = %1630
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j(%"class.WTF::Vector"* nonnull %3, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZN5blink16list_marker_textL8ToHebrewEiE11kHebrewZero, i64 0, i64 0), i32 3) #8
  br label %1643

1636:                                             ; preds = %1630
  %1637 = icmp sgt i32 %1, 999
  br i1 %1637, label %1638, label %1641

1638:                                             ; preds = %1636
  %1639 = udiv i32 %1, 1000
  call fastcc void @_ZN5blink16list_marker_textL17ToHebrewUnder1000EiRN3WTF6VectorIDsLj0ENS1_18PartitionAllocatorEEE(i32 %1639, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #8
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6insertIRKDsEEvjOT_(%"class.WTF::Vector"* nonnull %3, i32 0, i16* nonnull dereferenceable(2) @_ZN3WTF7unicodeL33kHebrewPunctuationGereshCharacterE) #8
  %1640 = urem i32 %1, 1000
  br label %1641

1641:                                             ; preds = %1638, %1636
  %1642 = phi i32 [ %1640, %1638 ], [ %1, %1636 ]
  call fastcc void @_ZN5blink16list_marker_textL17ToHebrewUnder1000EiRN3WTF6VectorIDsLj0ENS1_18PartitionAllocatorEEE(i32 %1642, %"class.WTF::Vector"* nonnull dereferenceable(16) %3) #8
  br label %1643

1643:                                             ; preds = %1641, %1635
  %1644 = load i16*, i16** %1632, align 8
  %1645 = load i32, i32* %1633, align 4
  %1646 = icmp eq i32 %1645, 0
  br i1 %1646, label %1669, label %1647

1647:                                             ; preds = %1643
  %1648 = zext i32 %1645 to i64
  %1649 = getelementptr inbounds i16, i16* %1644, i64 %1648
  %1650 = getelementptr inbounds i16, i16* %1649, i64 -1
  %1651 = icmp ugt i16* %1650, %1644
  br i1 %1651, label %1652, label %1665

1652:                                             ; preds = %1647, %1652
  %1653 = phi i16* [ %1658, %1652 ], [ %1650, %1647 ]
  %1654 = phi i16* [ %1657, %1652 ], [ %1644, %1647 ]
  %1655 = load i16, i16* %1654, align 2
  %1656 = load i16, i16* %1653, align 2
  store i16 %1656, i16* %1654, align 2
  store i16 %1655, i16* %1653, align 2
  %1657 = getelementptr inbounds i16, i16* %1654, i64 1
  %1658 = getelementptr inbounds i16, i16* %1653, i64 -1
  %1659 = icmp ult i16* %1657, %1658
  br i1 %1659, label %1652, label %1660

1660:                                             ; preds = %1652
  %1661 = load i32, i32* %1633, align 4
  %1662 = icmp eq i32 %1661, 0
  br i1 %1662, label %1669, label %1663

1663:                                             ; preds = %1660
  %1664 = load i16*, i16** %1632, align 8
  br label %1665

1665:                                             ; preds = %1663, %1647
  %1666 = phi i16* [ %1664, %1663 ], [ %1644, %1647 ]
  %1667 = phi i32 [ %1661, %1663 ], [ %1645, %1647 ]
  %1668 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKDsj(i16* %1666, i32 %1667) #8
  br label %1689

1669:                                             ; preds = %1660, %1643
  %1670 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %1671 = icmp eq %"class.WTF::StringImpl"* %1670, null
  br i1 %1671, label %1689, label %1672

1672:                                             ; preds = %1669
  %1673 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1670, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1674 = load atomic i32, i32* %1673 monotonic, align 4
  %1675 = and i32 %1674, 2
  %1676 = icmp eq i32 %1675, 0
  br i1 %1676, label %1677, label %1689

1677:                                             ; preds = %1672
  %1678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1670, i64 0, i32 0
  %1679 = load i32, i32* %1678, align 4
  %1680 = zext i32 %1679 to i33
  %1681 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1680, i33 1) #8
  %1682 = extractvalue { i33, i1 } %1681, 1
  %1683 = extractvalue { i33, i1 } %1681, 0
  %1684 = icmp slt i33 %1683, 0
  %1685 = or i1 %1682, %1684
  br i1 %1685, label %1686, label %1687, !prof !2

1686:                                             ; preds = %1677
  call void @llvm.trap() #8
  unreachable

1687:                                             ; preds = %1677
  %1688 = trunc i33 %1683 to i32
  store i32 %1688, i32* %1678, align 4
  br label %1689

1689:                                             ; preds = %1687, %1672, %1669, %1665
  %1690 = phi %"class.WTF::StringImpl"* [ null, %1669 ], [ %1670, %1687 ], [ %1670, %1672 ], [ %1668, %1665 ]
  %1691 = load i16*, i16** %1632, align 8
  %1692 = icmp eq i16* %1691, null
  %1693 = bitcast i16* %1691 to i8*
  br i1 %1692, label %1699, label %1694, !prof !3

1694:                                             ; preds = %1689
  %1695 = load i32, i32* %1633, align 4
  %1696 = icmp eq i32 %1695, 0
  br i1 %1696, label %1698, label %1697, !prof !2

1697:                                             ; preds = %1694
  store i32 0, i32* %1633, align 4
  br label %1698

1698:                                             ; preds = %1697, %1694
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1693) #8
  store i16* null, i16** %1632, align 8
  br label %1699

1699:                                             ; preds = %1689, %1698
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1631) #8
  %1700 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1690, %"class.WTF::StringImpl"** %1700, align 8
  br label %1702

1701:                                             ; preds = %59
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %43, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #8
  br label %1702

1702:                                             ; preds = %1701, %1699, %1625, %1565, %1562, %1559, %1556, %1553, %1550, %1547, %1544, %1541, %1538, %1535, %1527, %1494, %1461, %1428, %1395, %1362, %1329, %1296, %1263, %1230, %1197, %1164, %1131, %1098, %1065, %1032, %991, %950, %909, %868, %827, %786, %745, %704, %663, %622, %581, %540, %499, %458, %417, %383, %294, %158, %106, %65, %64, %63, %62, %61, %60
  %1703 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %1704 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1703, align 8
  ret %"class.WTF::StringImpl"* %1704
}

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.6", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.6", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #8
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #8
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #8
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #8
  %29 = bitcast %"class.WTF::StringTypeAdapter.6"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.6", %"class.WTF::StringTypeAdapter.6"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.6", %"class.WTF::StringTypeAdapter.6"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #8
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.6"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #8
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.6", %"class.WTF::StringTypeAdapter.6"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.7"* nonnull %47, i8* %50) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #8
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #8
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %59
  call void @llvm.trap() #8
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #8
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #8
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #8
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #8
  %90 = bitcast %"class.WTF::StringTypeAdapter.6"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #8
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.6", %"class.WTF::StringTypeAdapter.6"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.6", %"class.WTF::StringTypeAdapter.6"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #8
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.6"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #8
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.6", %"class.WTF::StringTypeAdapter.6"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.7"* nonnull %108, i16* %111) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #8
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #8
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %120
  call void @llvm.trap() #8
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #8
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #8
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL16ToCJKIdeographicEiPKDsNS0_8CJKStyleE(i32, i16*, i32) unnamed_addr #2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca [36 x i32], align 16
  %6 = alloca [41 x i16], align 16
  %7 = icmp eq i32 %0, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds i16, i16* %1, i64 10
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %4, i16* %9, i32 1) #8
  br label %198

10:                                               ; preds = %3
  %11 = icmp slt i32 %0, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %10
  %13 = icmp eq i32 %0, -2147483648
  %14 = sub nsw i32 0, %0
  %15 = select i1 %13, i32 2147483647, i32 %14, !prof !2
  br label %16

16:                                               ; preds = %12, %10
  %17 = phi i32 [ %0, %10 ], [ %15, %12 ]
  %18 = bitcast [36 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 144, i1 false)
  %19 = load i16, i16* %1, align 2
  %20 = icmp eq i16 %19, 1
  %21 = icmp eq i16 %19, 2
  %22 = icmp eq i32 %2, 1
  %23 = and i1 %22, %21
  %24 = and i1 %22, %20
  br label %25

25:                                               ; preds = %131, %16
  %26 = phi i64 [ %132, %131 ], [ 0, %16 ]
  %27 = phi i32 [ %29, %131 ], [ %17, %16 ]
  %28 = srem i32 %27, 10000
  %29 = sdiv i32 %27, 10000
  %30 = sub nuw nsw i64 3, %26
  %31 = mul nuw nsw i64 %30, 9
  %32 = getelementptr inbounds [36 x i32], [36 x i32]* %5, i64 0, i64 %31
  %33 = icmp ne i32 %28, 0
  %34 = icmp ne i64 %26, 0
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %42

36:                                               ; preds = %25
  %37 = getelementptr inbounds i32, i32* %32, i64 8
  %38 = trunc i64 %26 to i32
  %39 = add nuw nsw i32 %38, 1
  store i32 %39, i32* %37, align 4
  %40 = getelementptr inbounds i32, i32* %32, i64 7
  %41 = trunc i64 %26 to i32
  store i32 %41, i32* %40, align 4
  br label %42

42:                                               ; preds = %36, %25
  %43 = srem i32 %28, 10
  %44 = sdiv i32 %28, 10
  %45 = icmp eq i32 %43, 0
  %46 = and i1 %45, %20
  br i1 %45, label %54, label %47

47:                                               ; preds = %42
  %48 = icmp eq i32 %43, 1
  %49 = and i1 %48, %23
  %50 = and i1 %34, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = add nsw i32 %43, 10
  %53 = getelementptr inbounds i32, i32* %32, i64 6
  store i32 %52, i32* %53, align 4
  br label %54

54:                                               ; preds = %47, %51, %42
  %55 = add i32 %27, 9999
  %56 = icmp ugt i32 %55, 19998
  %57 = icmp sgt i32 %28, 9
  %58 = or i1 %56, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %54
  %60 = srem i32 %44, 10
  %61 = icmp eq i32 %60, 1
  %62 = and i1 %61, %23
  %63 = icmp ne i32 %60, 0
  %64 = xor i1 %63, true
  %65 = or i1 %62, %64
  %66 = or i1 %63, %46
  %67 = and i1 %66, %65
  br i1 %67, label %71, label %68

68:                                               ; preds = %59
  %69 = add nsw i32 %60, 10
  %70 = getelementptr inbounds i32, i32* %32, i64 4
  store i32 %69, i32* %70, align 4
  br label %71

71:                                               ; preds = %59, %68
  %72 = and i1 %46, %64
  br i1 %63, label %73, label %75

73:                                               ; preds = %71
  %74 = getelementptr inbounds i32, i32* %32, i64 5
  store i32 7, i32* %74, align 4
  br label %75

75:                                               ; preds = %71, %73, %54
  %76 = phi i1 [ %46, %54 ], [ %72, %73 ], [ %72, %71 ]
  %77 = icmp sgt i32 %28, 99
  %78 = or i1 %56, %77
  br i1 %78, label %79, label %96

79:                                               ; preds = %75
  %80 = sdiv i32 %28, 100
  %81 = srem i32 %80, 10
  %82 = icmp eq i32 %81, 1
  %83 = and i1 %82, %23
  %84 = icmp ne i32 %81, 0
  %85 = xor i1 %84, true
  %86 = or i1 %83, %85
  %87 = or i1 %84, %76
  %88 = and i1 %86, %87
  br i1 %88, label %92, label %89

89:                                               ; preds = %79
  %90 = add nsw i32 %81, 10
  %91 = getelementptr inbounds i32, i32* %32, i64 2
  store i32 %90, i32* %91, align 4
  br label %92

92:                                               ; preds = %79, %89
  %93 = and i1 %76, %85
  br i1 %84, label %94, label %96

94:                                               ; preds = %92
  %95 = getelementptr inbounds i32, i32* %32, i64 3
  store i32 8, i32* %95, align 4
  br label %96

96:                                               ; preds = %92, %94, %75
  %97 = phi i1 [ %76, %75 ], [ %93, %94 ], [ %93, %92 ]
  %98 = icmp sgt i32 %28, 999
  %99 = or i1 %56, %98
  br i1 %99, label %100, label %118

100:                                              ; preds = %96
  %101 = sdiv i32 %28, 1000
  br i1 %23, label %102, label %105

102:                                              ; preds = %100
  %103 = add nsw i32 %28, -1000
  %104 = icmp ult i32 %103, 1000
  br label %105

105:                                              ; preds = %102, %100
  %106 = phi i1 [ false, %100 ], [ %104, %102 ]
  %107 = add nsw i32 %28, 999
  %108 = icmp ugt i32 %107, 1998
  %109 = xor i1 %108, true
  %110 = or i1 %106, %109
  %111 = or i1 %108, %97
  %112 = and i1 %111, %110
  br i1 %112, label %115, label %113

113:                                              ; preds = %105
  %114 = add nsw i32 %101, 10
  store i32 %114, i32* %32, align 4
  br label %115

115:                                              ; preds = %105, %113
  br i1 %108, label %116, label %118

116:                                              ; preds = %115
  %117 = getelementptr inbounds i32, i32* %32, i64 1
  store i32 9, i32* %117, align 4
  br label %118

118:                                              ; preds = %115, %116, %96
  %119 = and i1 %34, %97
  br i1 %119, label %120, label %126

120:                                              ; preds = %118
  %121 = getelementptr inbounds i32, i32* %32, i64 7
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds i32, i32* %32, i64 6
  store i32 %122, i32* %123, align 4
  %124 = getelementptr inbounds i32, i32* %32, i64 8
  %125 = load i32, i32* %124, align 4
  store i32 %125, i32* %121, align 4
  store i32 10, i32* %124, align 4
  br label %126

126:                                              ; preds = %120, %118
  %127 = icmp slt i32 %28, 20
  %128 = and i1 %127, %24
  br i1 %128, label %129, label %131

129:                                              ; preds = %126
  %130 = getelementptr inbounds i32, i32* %32, i64 4
  store i32 0, i32* %130, align 4
  br label %131

131:                                              ; preds = %129, %126
  %132 = add nuw nsw i64 %26, 1
  %133 = icmp ult i64 %132, 4
  %134 = and i1 %56, %133
  br i1 %134, label %25, label %135

135:                                              ; preds = %131
  %136 = bitcast [41 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 82, i8* nonnull %136) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %136, i8 -86, i64 82, i1 false)
  br i1 %11, label %139, label %137

137:                                              ; preds = %152, %139, %135
  %138 = phi i32 [ 0, %135 ], [ 0, %139 ], [ %153, %152 ]
  br label %158

139:                                              ; preds = %135
  %140 = getelementptr inbounds i16, i16* %1, i64 20
  %141 = load i16, i16* %140, align 2
  %142 = icmp eq i16 %141, 0
  br i1 %142, label %137, label %143

143:                                              ; preds = %139, %143
  %144 = phi i64 [ %146, %143 ], [ 0, %139 ]
  %145 = phi i16 [ %150, %143 ], [ %141, %139 ]
  %146 = add nuw i64 %144, 1
  %147 = getelementptr inbounds [41 x i16], [41 x i16]* %6, i64 0, i64 %144
  store i16 %145, i16* %147, align 2
  %148 = add nuw nsw i64 %144, 21
  %149 = getelementptr inbounds i16, i16* %1, i64 %148
  %150 = load i16, i16* %149, align 2
  %151 = icmp eq i16 %150, 0
  br i1 %151, label %152, label %143

152:                                              ; preds = %143
  %153 = trunc i64 %146 to i32
  br label %137

154:                                              ; preds = %183
  %155 = icmp eq i32 %186, 10
  %156 = and i1 %155, %20
  %157 = add nsw i32 %185, -1
  br i1 %156, label %194, label %189

158:                                              ; preds = %137, %183
  %159 = phi i16 [ %184, %183 ], [ %19, %137 ]
  %160 = phi i64 [ %187, %183 ], [ 0, %137 ]
  %161 = phi i32 [ %186, %183 ], [ 0, %137 ]
  %162 = phi i32 [ %185, %183 ], [ %138, %137 ]
  %163 = getelementptr inbounds [36 x i32], [36 x i32]* %5, i64 0, i64 %160
  %164 = load i32, i32* %163, align 4
  switch i32 %164, label %169 [
    i32 0, label %183
    i32 10, label %165
  ]

165:                                              ; preds = %158
  %166 = icmp eq i16 %159, 1
  %167 = icmp ne i32 %161, 10
  %168 = and i1 %167, %166
  br i1 %168, label %169, label %183

169:                                              ; preds = %158, %165
  %170 = zext i32 %164 to i64
  %171 = getelementptr inbounds i16, i16* %1, i64 %170
  %172 = load i16, i16* %171, align 2
  %173 = icmp eq i16 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %169
  %175 = add nsw i32 %162, 1
  %176 = sext i32 %162 to i64
  %177 = getelementptr inbounds [41 x i16], [41 x i16]* %6, i64 0, i64 %176
  store i16 %172, i16* %177, align 2
  br i1 %21, label %178, label %183

178:                                              ; preds = %174
  switch i32 %164, label %183 [
    i32 5, label %179
    i32 3, label %179
    i32 1, label %179
  ]

179:                                              ; preds = %178, %178, %178
  %180 = add nsw i32 %162, 2
  %181 = sext i32 %175 to i64
  %182 = getelementptr inbounds [41 x i16], [41 x i16]* %6, i64 0, i64 %181
  store i16 32, i16* %182, align 2
  br label %183

183:                                              ; preds = %165, %178, %169, %174, %179, %158
  %184 = phi i16 [ %159, %158 ], [ %159, %165 ], [ 2, %179 ], [ 2, %178 ], [ %19, %174 ], [ %159, %169 ]
  %185 = phi i32 [ %162, %158 ], [ %162, %165 ], [ %180, %179 ], [ %175, %178 ], [ %175, %174 ], [ %162, %169 ]
  %186 = phi i32 [ %161, %158 ], [ 10, %165 ], [ %164, %179 ], [ %164, %178 ], [ %164, %174 ], [ %164, %169 ]
  %187 = add nuw nsw i64 %160, 1
  %188 = icmp eq i64 %187, 36
  br i1 %188, label %154, label %158

189:                                              ; preds = %154
  %190 = sext i32 %157 to i64
  %191 = getelementptr inbounds [41 x i16], [41 x i16]* %6, i64 0, i64 %190
  %192 = load i16, i16* %191, align 2
  %193 = icmp eq i16 %192, 32
  br i1 %193, label %194, label %195

194:                                              ; preds = %154, %189
  br label %195

195:                                              ; preds = %194, %189
  %196 = phi i32 [ %157, %194 ], [ %185, %189 ]
  %197 = getelementptr inbounds [41 x i16], [41 x i16]* %6, i64 0, i64 0
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %4, i16* nonnull %197, i32 %196) #8
  call void @llvm.lifetime.end.p0i8(i64 82, i8* nonnull %136) #8
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %18) #8
  br label %198

198:                                              ; preds = %195, %8
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  ret %"class.WTF::StringImpl"* %200
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL7ToRomanEib(i32, i1 zeroext) unnamed_addr #2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca [15 x i8], align 1
  %5 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %5) #8
  %6 = select i1 %1, [7 x i8]* @_ZZN5blink16list_marker_textL7ToRomanEibE8kUdigits, [7 x i8]* @_ZZN5blink16list_marker_textL7ToRomanEibE8kLdigits
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 -86, i64 15, i1 false)
  br label %7

7:                                                ; preds = %62, %2
  %8 = phi i64 [ %64, %62 ], [ 0, %2 ]
  %9 = phi i32 [ %12, %62 ], [ %0, %2 ]
  %10 = phi i32 [ %63, %62 ], [ 0, %2 ]
  %11 = srem i32 %9, 10
  %12 = sdiv i32 %9, 10
  %13 = srem i32 %11, 5
  %14 = add nsw i32 %13, -1
  %15 = icmp ult i32 %14, 3
  br i1 %15, label %16, label %29

16:                                               ; preds = %7
  %17 = getelementptr inbounds [7 x i8], [7 x i8]* %6, i64 0, i64 %8
  %18 = load i8, i8* %17, align 1
  %19 = sext i32 %10 to i64
  %20 = add nsw i64 %19, 1
  %21 = shl nsw i64 %19, 32
  %22 = sub i64 60129542144, %21
  %23 = ashr exact i64 %22, 32
  %24 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %23
  store i8 %18, i8* %24, align 1
  %25 = icmp sgt i32 %13, 1
  br i1 %25, label %73, label %26

26:                                               ; preds = %87, %73, %80, %16
  %27 = phi i64 [ %20, %16 ], [ %74, %73 ], [ %81, %80 ], [ %88, %87 ]
  %28 = trunc i64 %27 to i32
  br label %29

29:                                               ; preds = %26, %7
  %30 = phi i32 [ %10, %7 ], [ %28, %26 ]
  %31 = add nsw i32 %11, -4
  %32 = icmp ult i32 %31, 5
  br i1 %32, label %33, label %41

33:                                               ; preds = %29
  %34 = or i64 %8, 1
  %35 = getelementptr inbounds [7 x i8], [7 x i8]* %6, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = add nsw i32 %30, 1
  %38 = sub i32 14, %30
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %39
  store i8 %36, i8* %40, align 1
  br label %51

41:                                               ; preds = %29
  %42 = icmp eq i32 %11, 9
  br i1 %42, label %43, label %51

43:                                               ; preds = %41
  %44 = add nuw nsw i64 %8, 2
  %45 = getelementptr inbounds [7 x i8], [7 x i8]* %6, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = add nsw i32 %30, 1
  %48 = sub i32 14, %30
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %49
  store i8 %46, i8* %50, align 1
  br label %54

51:                                               ; preds = %33, %41
  %52 = phi i32 [ %30, %41 ], [ %37, %33 ]
  %53 = icmp eq i32 %13, 4
  br i1 %53, label %54, label %62

54:                                               ; preds = %43, %51
  %55 = phi i32 [ %47, %43 ], [ %52, %51 ]
  %56 = getelementptr inbounds [7 x i8], [7 x i8]* %6, i64 0, i64 %8
  %57 = load i8, i8* %56, align 1
  %58 = add nsw i32 %55, 1
  %59 = sub i32 14, %55
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %60
  store i8 %57, i8* %61, align 1
  br label %62

62:                                               ; preds = %54, %51
  %63 = phi i32 [ %58, %54 ], [ %52, %51 ]
  %64 = add nuw i64 %8, 2
  %65 = add i32 %9, 9
  %66 = icmp ugt i32 %65, 18
  br i1 %66, label %7, label %67

67:                                               ; preds = %62
  %68 = sub nsw i32 15, %63
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %69
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %3, i8* %70, i32 %63) #8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %5) #8
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  ret %"class.WTF::StringImpl"* %72

73:                                               ; preds = %16
  %74 = add nsw i64 %19, 2
  %75 = shl i64 %20, 32
  %76 = sub i64 60129542144, %75
  %77 = ashr exact i64 %76, 32
  %78 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %77
  store i8 %18, i8* %78, align 1
  %79 = icmp eq i32 %13, 2
  br i1 %79, label %26, label %80

80:                                               ; preds = %73
  %81 = add nsw i64 %19, 3
  %82 = shl i64 %74, 32
  %83 = sub i64 60129542144, %82
  %84 = ashr exact i64 %83, 32
  %85 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %84
  store i8 %18, i8* %85, align 1
  %86 = icmp sgt i32 %13, 3
  br i1 %86, label %87, label %26

87:                                               ; preds = %80
  %88 = add nsw i64 %19, 4
  %89 = shl i64 %81, 32
  %90 = sub i64 60129542144, %89
  %91 = ashr exact i64 %90, 32
  %92 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 %91
  store i8 %18, i8* %92, align 1
  br label %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink16list_marker_textL10ToArmenianEib(i32, i1 zeroext) unnamed_addr #2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca [18 x i16], align 16
  %5 = bitcast [18 x i16]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 36, i1 false)
  %6 = sdiv i32 %0, 10000
  %7 = srem i32 %0, 10000
  %8 = getelementptr inbounds [18 x i16], [18 x i16]* %4, i64 0, i64 0
  %9 = select i1 %1, i32 0, i32 48
  %10 = add nsw i32 %6, 999
  %11 = icmp ugt i32 %10, 1998
  br i1 %11, label %12, label %23

12:                                               ; preds = %2
  %13 = sdiv i32 %0, 10000000
  %14 = add nsw i32 %6, -7000
  %15 = icmp ult i32 %14, 1000
  %16 = or i32 %9, 1355
  %17 = add nsw i32 %16, %13
  %18 = trunc i32 %17 to i16
  %19 = trunc i32 %9 to i16
  %20 = add nuw nsw i16 %19, 1362
  %21 = select i1 %15, i16 %20, i16 %18
  store i16 %21, i16* %8, align 16
  %22 = getelementptr inbounds [18 x i16], [18 x i16]* %4, i64 0, i64 1
  store i16 770, i16* %22, align 2
  br label %23

23:                                               ; preds = %12, %2
  %24 = phi i32 [ 0, %2 ], [ 2, %12 ]
  %25 = sdiv i32 %0, 1000000
  %26 = srem i32 %25, 10
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %23
  %29 = or i32 %9, 1346
  %30 = add nsw i32 %29, %26
  %31 = trunc i32 %30 to i16
  %32 = or i32 %24, 1
  %33 = zext i32 %24 to i64
  %34 = getelementptr inbounds [18 x i16], [18 x i16]* %4, i64 0, i64 %33
  store i16 %31, i16* %34, align 4
  %35 = add nuw nsw i32 %24, 2
  %36 = zext i32 %32 to i64
  %37 = getelementptr inbounds [18 x i16], [18 x i16]* %4, i64 0, i64 %36
  store i16 770, i16* %37, align 2
  br label %38

38:                                               ; preds = %28, %23
  %39 = phi i32 [ %35, %28 ], [ %24, %23 ]
  %40 = sdiv i32 %0, 100000
  %41 = srem i32 %40, 10
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %38
  %44 = add nuw nsw i32 %9, 1337
  %45 = add nsw i32 %44, %41
  %46 = trunc i32 %45 to i16
  %47 = add nuw nsw i32 %39, 1
  %48 = sext i32 %39 to i64
  %49 = getelementptr inbounds [18 x i16], [18 x i16]* %4, i64 0, i64 %48
  store i16 %46, i16* %49, align 2
  %50 = add nuw nsw i32 %39, 2
  %51 = sext i32 %47 to i64
  %52 = getelementptr inbounds [18 x i16], [18 x i16]* %4, i64 0, i64 %51
  store i16 770, i16* %52, align 2
  br label %53

53:                                               ; preds = %43, %38
  %54 = phi i32 [ %50, %43 ], [ %39, %38 ]
  %55 = srem i32 %6, 10
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %53
  %58 = add nuw nsw i32 %9, 1328
  %59 = add nsw i32 %58, %55
  %60 = trunc i32 %59 to i16
  %61 = add nuw nsw i32 %54, 1
  %62 = sext i32 %54 to i64
  %63 = getelementptr inbounds [18 x i16], [18 x i16]* %4, i64 0, i64 %62
  store i16 %60, i16* %63, align 2
  %64 = add nuw nsw i32 %54, 2
  %65 = sext i32 %61 to i64
  %66 = getelementptr inbounds [18 x i16], [18 x i16]* %4, i64 0, i64 %65
  store i16 770, i16* %66, align 2
  br label %67

67:                                               ; preds = %53, %57
  %68 = phi i32 [ %64, %57 ], [ %54, %53 ]
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [18 x i16], [18 x i16]* %4, i64 0, i64 %69
  %71 = add nsw i32 %7, 999
  %72 = icmp ugt i32 %71, 1998
  br i1 %72, label %73, label %83

73:                                               ; preds = %67
  %74 = sdiv i32 %7, 1000
  %75 = add nsw i32 %7, -7000
  %76 = icmp ult i32 %75, 1000
  %77 = or i32 %9, 1355
  %78 = add nsw i32 %77, %74
  %79 = trunc i32 %78 to i16
  %80 = trunc i32 %9 to i16
  %81 = add nuw nsw i16 %80, 1362
  %82 = select i1 %76, i16 %81, i16 %79
  store i16 %82, i16* %70, align 2
  br label %83

83:                                               ; preds = %73, %67
  %84 = phi i32 [ 0, %67 ], [ 1, %73 ]
  %85 = sdiv i32 %7, 100
  %86 = srem i32 %85, 10
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %83
  %89 = or i32 %9, 1346
  %90 = add nsw i32 %89, %86
  %91 = trunc i32 %90 to i16
  %92 = add nuw nsw i32 %84, 1
  %93 = zext i32 %84 to i64
  %94 = getelementptr inbounds i16, i16* %70, i64 %93
  store i16 %91, i16* %94, align 2
  br label %95

95:                                               ; preds = %88, %83
  %96 = phi i32 [ %92, %88 ], [ %84, %83 ]
  %97 = sdiv i32 %7, 10
  %98 = srem i32 %7, 10
  %99 = srem i32 %97, 10
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %108, label %101

101:                                              ; preds = %95
  %102 = add nuw nsw i32 %9, 1337
  %103 = add nsw i32 %102, %99
  %104 = trunc i32 %103 to i16
  %105 = add nuw nsw i32 %96, 1
  %106 = sext i32 %96 to i64
  %107 = getelementptr inbounds i16, i16* %70, i64 %106
  store i16 %104, i16* %107, align 2
  br label %108

108:                                              ; preds = %101, %95
  %109 = phi i32 [ %105, %101 ], [ %96, %95 ]
  %110 = icmp eq i32 %98, 0
  br i1 %110, label %118, label %111

111:                                              ; preds = %108
  %112 = add nuw nsw i32 %9, 1328
  %113 = add nsw i32 %112, %98
  %114 = trunc i32 %113 to i16
  %115 = add nuw nsw i32 %109, 1
  %116 = sext i32 %109 to i64
  %117 = getelementptr inbounds i16, i16* %70, i64 %116
  store i16 %114, i16* %117, align 2
  br label %118

118:                                              ; preds = %108, %111
  %119 = phi i32 [ %115, %111 ], [ %109, %108 ]
  %120 = add nuw nsw i32 %119, %68
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %3, i16* nonnull %8, i32 %120) #8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %5) #8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  ret %"class.WTF::StringImpl"* %122
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"*, i8*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j(%"class.WTF::Vector"*, i16*, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %101

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = icmp ugt i16* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i16, i16* %15, i64 %18
  %20 = icmp ugt i16* %19, %1
  br i1 %20, label %58, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %101, !prof !3

30:                                               ; preds = %21
  %31 = icmp eq i16* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %32) #8
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  br i1 %31, label %35, label %40

35:                                               ; preds = %30
  %36 = ptrtoint i8* %34 to i64
  %37 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = lshr i64 %33, 1
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %10, align 8
  br label %101

40:                                               ; preds = %30
  %41 = lshr i64 %33, 1
  %42 = ptrtoint i8* %34 to i64
  %43 = load i16*, i16** %14, align 8
  %44 = icmp ne i8* %34, null
  %45 = icmp ne i16* %43, null
  %46 = and i1 %44, %45
  %47 = bitcast i16* %43 to i8*
  br i1 %46, label %48, label %54, !prof !3

48:                                               ; preds = %40
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = shl nuw nsw i64 %50, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %34, i8* nonnull align 2 %47, i64 %51, i1 false) #8
  %52 = bitcast %"class.WTF::Vector"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %48, %40
  %55 = phi i8* [ %53, %48 ], [ %47, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #8
  %56 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %42, i64* %56 monotonic, align 8
  %57 = trunc i64 %41 to i32
  store i32 %57, i32* %10, align 8
  br label %101

58:                                               ; preds = %17
  %59 = ptrtoint i16* %1 to i64
  %60 = ptrtoint i16* %15 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 1
  %63 = lshr i32 %11, 2
  %64 = add nuw i32 %11, 1
  %65 = add i32 %64, %63
  %66 = icmp ugt i32 %65, 4
  %67 = select i1 %66, i32 %65, i32 4
  %68 = icmp ugt i32 %67, %9
  %69 = select i1 %68, i32 %67, i32 %9
  %70 = icmp ult i32 %11, %69
  br i1 %70, label %71, label %98, !prof !3

71:                                               ; preds = %58
  %72 = icmp eq i16* %15, null
  %73 = zext i32 %69 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %73) #8
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %76 = ptrtoint i8* %75 to i64
  br i1 %72, label %77, label %79

77:                                               ; preds = %71
  %78 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %76, i64* %78 monotonic, align 8
  br label %94

79:                                               ; preds = %71
  %80 = load i16*, i16** %14, align 8
  %81 = icmp ne i8* %75, null
  %82 = icmp ne i16* %80, null
  %83 = and i1 %81, %82
  %84 = bitcast i16* %80 to i8*
  br i1 %83, label %85, label %91, !prof !3

85:                                               ; preds = %79
  %86 = load i32, i32* %7, align 4
  %87 = zext i32 %86 to i64
  %88 = shl nuw nsw i64 %87, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %75, i8* nonnull align 2 %84, i64 %88, i1 false) #8
  %89 = bitcast %"class.WTF::Vector"* %0 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %85, %79
  %92 = phi i8* [ %90, %85 ], [ %84, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #8
  %93 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %76, i64* %93 monotonic, align 8
  br label %94

94:                                               ; preds = %91, %77
  %95 = lshr i64 %74, 1
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %10, align 8
  %97 = bitcast i8* %75 to i16*
  br label %98

98:                                               ; preds = %94, %58
  %99 = phi i16* [ %15, %58 ], [ %97, %94 ]
  %100 = getelementptr inbounds i16, i16* %99, i64 %62
  br label %101

101:                                              ; preds = %98, %21, %35, %54, %3
  %102 = phi i16* [ %1, %3 ], [ %100, %98 ], [ %1, %21 ], [ %1, %35 ], [ %1, %54 ]
  %103 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #8
  %104 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %104, align 8
  %105 = load i32, i32* %7, align 4
  %106 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = icmp ult i32 %9, %105
  br i1 %107, label %109, label %108

108:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* null, i8** %104, align 8
  br label %118

109:                                              ; preds = %101
  %110 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  %111 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %105) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %110, i8* %111) #8
  %112 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* %113, i8** %104, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #8
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #8
  br label %118

118:                                              ; preds = %108, %109, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #8
  %119 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load i16*, i16** %119, align 8
  %121 = load i32, i32* %7, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %120, i64 %122
  %124 = icmp ne i16* %123, null
  %125 = icmp ne i16* %102, null
  %126 = and i1 %125, %124
  br i1 %126, label %127, label %132, !prof !3

127:                                              ; preds = %118
  %128 = zext i32 %2 to i64
  %129 = bitcast i16* %123 to i8*
  %130 = bitcast i16* %102 to i8*
  %131 = shl nuw nsw i64 %128, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %129, i8* nonnull align 2 %130, i64 %131, i1 false) #8
  br label %132

132:                                              ; preds = %118, %127
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink16list_marker_textL17ToHebrewUnder1000EiRN3WTF6VectorIDsLj0ENS1_18PartitionAllocatorEEE(i32, %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = sdiv i32 %0, 400
  %9 = srem i32 %0, 400
  %10 = icmp sgt i32 %0, 399
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = bitcast i32* %3 to i8*
  br label %16

13:                                               ; preds = %16, %2
  %14 = add nsw i32 %9, 99
  %15 = icmp ugt i32 %14, 198
  br i1 %15, label %20, label %24

16:                                               ; preds = %16, %11
  %17 = phi i32 [ 0, %11 ], [ %18, %16 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #8
  store i32 1514, i32* %3, align 4
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6insertIiEEvjOT_(%"class.WTF::Vector"* %1, i32 0, i32* nonnull dereferenceable(4) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #8
  %18 = add nuw nsw i32 %17, 1
  %19 = icmp eq i32 %18, %8
  br i1 %19, label %13, label %16

20:                                               ; preds = %13
  %21 = sdiv i32 %9, 100
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #8
  %23 = add nsw i32 %21, 1510
  store i32 %23, i32* %4, align 4
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6insertIiEEvjOT_(%"class.WTF::Vector"* %1, i32 0, i32* nonnull dereferenceable(4) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #8
  br label %24

24:                                               ; preds = %20, %13
  %25 = srem i32 %9, 100
  %26 = add nsw i32 %25, -15
  %27 = icmp ult i32 %26, 2
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #8
  store i32 1496, i32* %5, align 4
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6insertIiEEvjOT_(%"class.WTF::Vector"* %1, i32 0, i32* nonnull dereferenceable(4) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #8
  %30 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #8
  %31 = add nuw nsw i32 %25, 1478
  store i32 %31, i32* %6, align 4
  br label %46

32:                                               ; preds = %24
  %33 = add nsw i32 %25, 9
  %34 = icmp ugt i32 %33, 18
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  %36 = sdiv i32 %25, 10
  %37 = add nsw i32 %36, -1
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [9 x i16], [9 x i16]* @_ZZN5blink16list_marker_textL17ToHebrewUnder1000EiRN3WTF6VectorIDsLj0ENS1_18PartitionAllocatorEEEE11kHebrewTens, i64 0, i64 %38
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6insertIRKDsEEvjOT_(%"class.WTF::Vector"* %1, i32 0, i16* dereferenceable(2) %39) #8
  br label %40

40:                                               ; preds = %35, %32
  %41 = srem i32 %25, 10
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %40
  %44 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #8
  %45 = add nsw i32 %41, 1487
  store i32 %45, i32* %7, align 4
  br label %46

46:                                               ; preds = %28, %43
  %47 = phi i32* [ %7, %43 ], [ %6, %28 ]
  %48 = phi i8* [ %44, %43 ], [ %30, %28 ]
  call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6insertIiEEvjOT_(%"class.WTF::Vector"* %1, i32 0, i32* nonnull dereferenceable(4) %47) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #8
  br label %49

49:                                               ; preds = %46, %40
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6insertIiEEvjOT_(%"class.WTF::Vector"*, i32, i32* dereferenceable(4)) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %67

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = lshr i32 %24, 2
  %31 = add i32 %29, %30
  %32 = icmp ugt i32 %31, 4
  %33 = select i1 %32, i32 %31, i32 4
  %34 = icmp ugt i32 %33, %29
  %35 = select i1 %34, i32 %33, i32 %29
  %36 = icmp ult i32 %24, %35
  br i1 %36, label %37, label %67, !prof !3

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load i16*, i16** %38, align 8
  %40 = icmp eq i16* %39, null
  %41 = zext i32 %35 to i64
  %42 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %41) #8
  %43 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %42, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  br i1 %40, label %44, label %49

44:                                               ; preds = %37
  %45 = ptrtoint i8* %43 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = lshr i64 %42, 1
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %25, align 8
  br label %67

49:                                               ; preds = %37
  %50 = lshr i64 %42, 1
  %51 = ptrtoint i8* %43 to i64
  %52 = load i16*, i16** %38, align 8
  %53 = icmp ne i8* %43, null
  %54 = icmp ne i16* %52, null
  %55 = and i1 %53, %54
  %56 = bitcast i16* %52 to i8*
  br i1 %55, label %57, label %63, !prof !3

57:                                               ; preds = %49
  %58 = load i32, i32* %9, align 4
  %59 = zext i32 %58 to i64
  %60 = shl nuw nsw i64 %59, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %43, i8* nonnull align 2 %56, i64 %60, i1 false) #8
  %61 = bitcast %"class.WTF::Vector"* %0 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %57, %49
  %64 = phi i8* [ %62, %57 ], [ %56, %49 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #8
  %65 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %51, i64* %65 monotonic, align 8
  %66 = trunc i64 %50 to i32
  store i32 %66, i32* %25, align 8
  br label %67

67:                                               ; preds = %63, %44, %28, %23
  %68 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %69 = load i16*, i16** %68, align 8
  %70 = zext i32 %1 to i64
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  %72 = getelementptr inbounds i16, i16* %71, i64 1
  %73 = icmp ne i16* %72, null
  %74 = icmp ne i16* %71, null
  %75 = and i1 %74, %73
  br i1 %75, label %76, label %85, !prof !3

76:                                               ; preds = %67
  %77 = load i32, i32* %9, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i16, i16* %69, i64 %78
  %80 = bitcast i16* %72 to i8*
  %81 = bitcast i16* %71 to i8*
  %82 = ptrtoint i16* %79 to i64
  %83 = ptrtoint i16* %71 to i64
  %84 = sub i64 %82, %83
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 2 %80, i8* nonnull align 2 %81, i64 %84, i1 false) #8
  br label %85

85:                                               ; preds = %67, %76
  %86 = load i32, i32* %2, align 4
  %87 = trunc i32 %86 to i16
  store i16 %87, i16* %71, align 2
  %88 = load i32, i32* %9, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %9, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6insertIRKDsEEvjOT_(%"class.WTF::Vector"*, i32, i16* dereferenceable(2)) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  br label %120

31:                                               ; preds = %23
  %32 = add i32 %24, 1
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = icmp ugt i16* %34, %2
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = zext i32 %24 to i64
  %38 = getelementptr inbounds i16, i16* %34, i64 %37
  %39 = icmp ugt i16* %38, %2
  br i1 %39, label %78, label %40

40:                                               ; preds = %36, %31
  %41 = lshr i32 %24, 2
  %42 = add i32 %32, %41
  %43 = icmp ugt i32 %42, 4
  %44 = select i1 %43, i32 %42, i32 4
  %45 = icmp ugt i32 %44, %32
  %46 = select i1 %45, i32 %44, i32 %32
  %47 = icmp ult i32 %24, %46
  br i1 %47, label %48, label %120, !prof !3

48:                                               ; preds = %40
  %49 = icmp eq i16* %34, null
  %50 = zext i32 %46 to i64
  %51 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %50) #8
  %52 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %51, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  br i1 %49, label %53, label %59

53:                                               ; preds = %48
  %54 = ptrtoint i8* %52 to i64
  %55 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = lshr i64 %51, 1
  %57 = trunc i64 %56 to i32
  store i32 %57, i32* %25, align 8
  %58 = bitcast i8* %52 to i16*
  br label %120

59:                                               ; preds = %48
  %60 = lshr i64 %51, 1
  %61 = ptrtoint i8* %52 to i64
  %62 = load i16*, i16** %33, align 8
  %63 = icmp ne i8* %52, null
  %64 = icmp ne i16* %62, null
  %65 = and i1 %63, %64
  %66 = bitcast i16* %62 to i8*
  br i1 %65, label %67, label %73, !prof !3

67:                                               ; preds = %59
  %68 = load i32, i32* %9, align 4
  %69 = zext i32 %68 to i64
  %70 = shl nuw nsw i64 %69, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %52, i8* nonnull align 2 %66, i64 %70, i1 false) #8
  %71 = bitcast %"class.WTF::Vector"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %67, %59
  %74 = phi i8* [ %72, %67 ], [ %66, %59 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #8
  %75 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %61, i64* %75 monotonic, align 8
  %76 = trunc i64 %60 to i32
  store i32 %76, i32* %25, align 8
  %77 = bitcast i8* %52 to i16*
  br label %120

78:                                               ; preds = %36
  %79 = ptrtoint i16* %2 to i64
  %80 = ptrtoint i16* %34 to i64
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 1
  %83 = lshr i32 %24, 2
  %84 = add i32 %32, %83
  %85 = icmp ugt i32 %84, 4
  %86 = select i1 %85, i32 %84, i32 4
  %87 = icmp ugt i32 %86, %32
  %88 = select i1 %87, i32 %86, i32 %32
  %89 = icmp ult i32 %24, %88
  br i1 %89, label %90, label %117, !prof !3

90:                                               ; preds = %78
  %91 = icmp eq i16* %34, null
  %92 = zext i32 %88 to i64
  %93 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %92) #8
  %94 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %93, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %95 = ptrtoint i8* %94 to i64
  br i1 %91, label %96, label %98

96:                                               ; preds = %90
  %97 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %95, i64* %97 monotonic, align 8
  br label %113

98:                                               ; preds = %90
  %99 = load i16*, i16** %33, align 8
  %100 = icmp ne i8* %94, null
  %101 = icmp ne i16* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast i16* %99 to i8*
  br i1 %102, label %104, label %110, !prof !3

104:                                              ; preds = %98
  %105 = load i32, i32* %9, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %94, i8* nonnull align 2 %103, i64 %107, i1 false) #8
  %108 = bitcast %"class.WTF::Vector"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %98
  %111 = phi i8* [ %109, %104 ], [ %103, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #8
  %112 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %95, i64* %112 monotonic, align 8
  br label %113

113:                                              ; preds = %110, %96
  %114 = lshr i64 %93, 1
  %115 = trunc i64 %114 to i32
  store i32 %115, i32* %25, align 8
  %116 = bitcast i8* %94 to i16*
  br label %117

117:                                              ; preds = %113, %78
  %118 = phi i16* [ %34, %78 ], [ %116, %113 ]
  %119 = getelementptr inbounds i16, i16* %118, i64 %82
  br label %120

120:                                              ; preds = %28, %117, %40, %53, %73
  %121 = phi i16* [ %30, %28 ], [ %118, %117 ], [ %34, %40 ], [ %58, %53 ], [ %77, %73 ]
  %122 = phi i16* [ %2, %28 ], [ %119, %117 ], [ %2, %40 ], [ %2, %53 ], [ %2, %73 ]
  %123 = zext i32 %1 to i64
  %124 = getelementptr inbounds i16, i16* %121, i64 %123
  %125 = getelementptr inbounds i16, i16* %124, i64 1
  %126 = icmp ne i16* %125, null
  %127 = icmp ne i16* %124, null
  %128 = and i1 %127, %126
  br i1 %128, label %129, label %138, !prof !3

129:                                              ; preds = %120
  %130 = load i32, i32* %9, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i16, i16* %121, i64 %131
  %133 = bitcast i16* %125 to i8*
  %134 = bitcast i16* %124 to i8*
  %135 = ptrtoint i16* %132 to i64
  %136 = ptrtoint i16* %124 to i64
  %137 = sub i64 %135, %136
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 2 %133, i8* nonnull align 2 %134, i64 %137, i1 false) #8
  br label %138

138:                                              ; preds = %120, %129
  %139 = load i16, i16* %122, align 2
  store i16 %139, i16* %124, align 2
  %140 = load i32, i32* %9, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %9, align 4
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKDsj(i16*, i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #8
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* %30, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.10, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i8* %45, i8* %46) #8
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.10, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #8
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.7"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.7"*, i16*) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
