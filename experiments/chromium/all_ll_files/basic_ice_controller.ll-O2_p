; ModuleID = '../../third_party/webrtc/p2p/base/basic_ice_controller.cc'
source_filename = "../../third_party/webrtc/p2p/base/basic_ice_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.240 = type { %"struct.cricket::IceControllerEvent" }
%"struct.cricket::IceControllerEvent" = type { i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::nothrow_t" = type { i8 }
%"class.cricket::BasicIceController" = type { %"class.cricket::IceControllerInterface", %"class.std::__1::function", %"class.std::__1::function.0", %"class.std::__1::function.5", %"struct.cricket::IceConfig", %"struct.cricket::IceFieldTrials"*, %"class.cricket::Connection"*, %"class.std::__1::vector.190", %"class.std::__1::set.197", %"class.std::__1::set.197", i64 }
%"class.cricket::IceControllerInterface" = type { i32 (...)** }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i32 (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::function.0" = type { %"class.std::__1::__function::__policy_func.3" }
%"class.std::__1::__function::__policy_func.3" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.4", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.4" = type { i32 (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::function.5" = type { %"class.std::__1::__function::__policy_func.8" }
%"class.std::__1::__function::__policy_func.8" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.9", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.9" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.cricket::Connection"*)* }
%"struct.cricket::IceConfig" = type { %"class.absl::optional.131", %"class.absl::optional.131", i32, i8, %"class.absl::optional.131", i8, i8, %"class.absl::optional.131", %"class.absl::optional.131", i32, %"class.absl::optional.131", %"class.absl::optional.131", %"class.absl::optional.131", %"class.absl::optional.131", %"class.absl::optional.131", %"class.absl::optional.131", %"class.absl::optional.131", %"class.absl::optional.185" }
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { i32 }
%"class.absl::optional.185" = type { %"class.absl::optional_internal::optional_data.186" }
%"class.absl::optional_internal::optional_data.186" = type { %"class.absl::optional_internal::optional_data_base.187" }
%"class.absl::optional_internal::optional_data_base.187" = type { %"class.absl::optional_internal::optional_data_dtor_base.188" }
%"class.absl::optional_internal::optional_data_dtor_base.188" = type { i8, %union.anon.189 }
%union.anon.189 = type { i32 }
%"struct.cricket::IceFieldTrials" = type <{ i8, [3 x i8], %"class.absl::optional.131", %"class.absl::optional.131", %"class.absl::optional.131", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.cricket::Connection" = type { %"class.cricket::CandidatePairInterface", %"class.rtc::MessageHandlerAutoCleanup", %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy.18", %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy", i32, %"class.cricket::Port"*, i64, %"class.cricket::Candidate", %"struct.cricket::ConnectionInfo", %"class.rtc::RateTracker", %"class.rtc::RateTracker", i64, i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, %"class.cricket::StunRequestManager", i32, i32, i64, %"class.absl::optional", i64, i64, i64, i64, i64, %"class.std::__1::vector.119", %"class.absl::optional.126", %"class.absl::optional.131", %"class.absl::optional.131", %"class.absl::optional.131", i8, i32, %"class.absl::optional.131", i64, i32, %"class.absl::optional.136", %"class.webrtc::IceEventLog"*, %"class.absl::optional.161", %"class.std::__1::unique_ptr.166", %"struct.cricket::IceFieldTrials"*, %"class.rtc::EventBasedExponentialMovingAverage" }
%"class.cricket::CandidatePairInterface" = type { i32 (...)** }
%"class.rtc::MessageHandlerAutoCleanup" = type { %"class.rtc::MessageHandler" }
%"class.rtc::MessageHandler" = type { i32 (...)** }
%"class.sigslot::has_slots" = type { %"class.sigslot::has_slots_interface", %"class.std::__1::set" }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.sigslot::signal_with_thread_policy.18" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::_signal_base.base" = type <{ %"class.sigslot::_signal_base_interface", %"class.std::__1::list", %"class.std::__1::__list_iterator", i8 }>
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.sigslot::signal_with_thread_policy" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.cricket::Port" = type { %"class.cricket::PortInterface", %"class.rtc::MessageHandler", %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy.28", %"class.sigslot::signal_with_thread_policy.30", %"class.sigslot::signal_with_thread_policy.32", %"class.sigslot::signal_with_thread_policy.32", %"class.sigslot::signal_with_thread_policy.34", %"class.rtc::Thread"*, %"class.rtc::PacketSocketFactory"*, %"class.std::__1::basic_string", i8, %"class.rtc::Network"*, i16, i16, %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.75", %"class.std::__1::map", i32, i8, i32, i64, i8, %"class.std::__1::basic_string", %"struct.rtc::ProxyInfo", i16, i32, i64, i32, %"class.rtc::WeakPtrFactory", %"class.webrtc::CallbackList" }
%"class.cricket::PortInterface" = type { i32 (...)**, %"class.sigslot::signal_with_thread_policy.20", %"class.sigslot::signal_with_thread_policy.22", %"class.sigslot::signal_with_thread_policy.24", %"class.sigslot::signal_with_thread_policy.26" }
%"class.sigslot::signal_with_thread_policy.20" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.22" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.24" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.26" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.28" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.30" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.32" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.34" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.rtc::Thread" = type <{ %"class.webrtc::TaskQueueBase", i8, [7 x i8], %"struct.rtc::Message", %"class.std::__1::list.36", %"class.rtc::Thread::PriorityQueue", i32, [4 x i8], %"class.rtc::RecursiveCriticalSection", i8, i8, [2 x i8], i32, %"class.rtc::SocketServer"*, %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", i64, i8, i8, [6 x i8], %"class.rtc::Thread::QueuedTaskHandler", %"class.std::__1::unique_ptr.58", i32, [4 x i8] }>
%"class.webrtc::TaskQueueBase" = type { i32 (...)** }
%"struct.rtc::Message" = type { %"class.rtc::Location", %"class.rtc::MessageHandler"*, i32, %"class.rtc::MessageData"* }
%"class.rtc::Location" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.rtc::MessageData" = type { i32 (...)** }
%"class.std::__1::list.36" = type { %"class.std::__1::__list_imp.37" }
%"class.std::__1::__list_imp.37" = type { %"struct.std::__1::__list_node_base.38", %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::__list_node_base.38" = type { %"struct.std::__1::__list_node_base.38"*, %"struct.std::__1::__list_node_base.38"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.rtc::Thread::PriorityQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector", %"struct.std::__1::less.48" }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.rtc::Thread::DelayedMessage"*, %"class.rtc::Thread::DelayedMessage"*, %"class.std::__1::__compressed_pair.43" }
%"class.rtc::Thread::DelayedMessage" = type { i64, i64, i32, %"struct.rtc::Message" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.rtc::Thread::DelayedMessage"* }
%"struct.std::__1::less.48" = type { i8 }
%"class.rtc::RecursiveCriticalSection" = type <{ %union.pthread_mutex_t, i64, i32, [4 x i8] }>
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.rtc::SocketServer" = type { %"class.rtc::SocketFactory", %"class.rtc::NetworkBinderInterface"* }
%"class.rtc::SocketFactory" = type { i32 (...)** }
%"class.rtc::NetworkBinderInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.rtc::SocketServer"* }
%"class.rtc::Thread::QueuedTaskHandler" = type { %"class.rtc::MessageHandler" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter"* }
%"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter" = type { %"class.webrtc::TaskQueueBase"* }
%"class.rtc::PacketSocketFactory" = type { i32 (...)** }
%"class.rtc::Network" = type { %"class.sigslot::signal_with_thread_policy.64", %"class.sigslot::signal_with_thread_policy.64", %"class.rtc::DefaultLocalAddressProvider"*, %"class.rtc::MdnsResponderProvider"*, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.rtc::IPAddress", i32, %"class.std::__1::basic_string", %"class.std::__1::vector.68", i32, i8, i32, i32, i32, i8, i16, i8, i32 }
%"class.sigslot::signal_with_thread_policy.64" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.rtc::DefaultLocalAddressProvider" = type { i32 (...)** }
%"class.rtc::MdnsResponderProvider" = type { i32 (...)** }
%"class.rtc::IPAddress" = type <{ i32 (...)**, i32, %union.anon.66, [4 x i8] }>
%union.anon.66 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.67 }
%union.anon.67 = type { [4 x i32] }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.rtc::InterfaceAddress"*, %"class.rtc::InterfaceAddress"*, %"class.std::__1::__compressed_pair.70" }
%"class.rtc::InterfaceAddress" = type { %"class.rtc::IPAddress.base", i32 }
%"class.rtc::IPAddress.base" = type <{ i32 (...)**, i32, %union.anon.66 }>
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.rtc::InterfaceAddress"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.cricket::Candidate"*, %"class.cricket::Candidate"*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.cricket::Candidate"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.82" }
%"class.std::__1::__tree.82" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.rtc::ProxyInfo" = type { i32, [4 x i8], %"class.rtc::SocketAddress", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.rtc::CryptString" }
%"class.rtc::SocketAddress" = type <{ %"class.std::__1::basic_string", %"class.rtc::IPAddress", i16, [2 x i8], i32, i8, [7 x i8] }>
%"class.rtc::CryptString" = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.rtc::CryptStringImpl"* }
%"class.rtc::CryptStringImpl" = type { i32 (...)** }
%"class.rtc::WeakPtrFactory" = type { %"class.rtc::internal::WeakReferenceOwner", %"class.cricket::Port"* }
%"class.rtc::internal::WeakReferenceOwner" = type { %"class.rtc::scoped_refptr" }
%"class.rtc::scoped_refptr" = type { %"class.rtc::RefCountedObject"* }
%"class.rtc::RefCountedObject" = type { %"class.rtc::internal::WeakReference::Flag.base", %"class.webrtc::webrtc_impl::RefCounter" }
%"class.rtc::internal::WeakReference::Flag.base" = type <{ %"class.rtc::RefCountInterface", i8 }>
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.webrtc::CallbackList" = type { %"class.webrtc::callback_list_impl::CallbackListReceivers" }
%"class.webrtc::callback_list_impl::CallbackListReceivers" = type <{ %"class.std::__1::vector.98", i8, [7 x i8] }>
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"struct.webrtc::callback_list_impl::CallbackListReceivers::Callback"*, %"struct.webrtc::callback_list_impl::CallbackListReceivers::Callback"*, %"class.std::__1::__compressed_pair.100" }
%"struct.webrtc::callback_list_impl::CallbackListReceivers::Callback" = type { i8*, [8 x i8], %"class.webrtc::UntypedFunction" }
%"class.webrtc::UntypedFunction" = type { %"union.webrtc::webrtc_function_impl::VoidUnion", void ()*, void (%"union.webrtc::webrtc_function_impl::VoidUnion"*)* }
%"union.webrtc::webrtc_function_impl::VoidUnion" = type { i8*, [24 x i8] }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.webrtc::callback_list_impl::CallbackListReceivers::Callback"* }
%"class.cricket::Candidate" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.rtc::SocketAddress", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", %"class.rtc::SocketAddress", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, i16, %"class.std::__1::basic_string" }
%"struct.cricket::ConnectionInfo" = type { i8, i8, i8, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.cricket::Candidate", %"class.cricket::Candidate", i8*, i32, i64, i8, i64, %"class.absl::optional" }
%"class.rtc::RateTracker" = type { i32 (...)**, i64, i64, i64*, i64, i64, i64, i64 }
%"class.cricket::StunRequestManager" = type { %"class.sigslot::signal_with_thread_policy.106", %"class.rtc::Thread"*, %"class.std::__1::map.108", %"class.std::__1::basic_string" }
%"class.sigslot::signal_with_thread_policy.106" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.std::__1::map.108" = type { %"class.std::__1::__tree.109" }
%"class.std::__1::__tree.109" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.105 }
%union.anon.105 = type { i32 }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"struct.cricket::Connection::SentPing"*, %"struct.cricket::Connection::SentPing"*, %"class.std::__1::__compressed_pair.121" }
%"struct.cricket::Connection::SentPing" = type <{ %"class.std::__1::basic_string", i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.cricket::Connection::SentPing"* }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, %union.anon.130 }
%union.anon.130 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.136" = type { %"class.absl::optional_internal::optional_data.137" }
%"class.absl::optional_internal::optional_data.137" = type { %"class.absl::optional_internal::optional_data_base.138" }
%"class.absl::optional_internal::optional_data_base.138" = type { %"class.absl::optional_internal::optional_data_dtor_base.139" }
%"class.absl::optional_internal::optional_data_dtor_base.139" = type { i8, %union.anon.140 }
%union.anon.140 = type { %"class.webrtc::IceCandidatePairDescription" }
%"class.webrtc::IceCandidatePairDescription" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.webrtc::IceEventLog" = type { %"class.webrtc::RtcEventLog"*, %"class.std::__1::unordered_map" }
%"class.webrtc::RtcEventLog" = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.141", %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.154", %"class.std::__1::__compressed_pair.157", [4 x i8] }>
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143", %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { float }
%"class.absl::optional.161" = type { %"class.absl::optional_internal::optional_data.162" }
%"class.absl::optional_internal::optional_data.162" = type { %"class.absl::optional_internal::optional_data_base.163" }
%"class.absl::optional_internal::optional_data_base.163" = type { %"class.absl::optional_internal::optional_data_dtor_base.164" }
%"class.absl::optional_internal::optional_data_dtor_base.164" = type { i8, %union.anon.165 }
%union.anon.165 = type { i8 }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.cricket::StunMessage"* }
%"class.cricket::StunMessage" = type { i32 (...)**, %"class.std::__1::vector.169", i16, i16, %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string" }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"class.std::__1::unique_ptr.171"*, %"class.std::__1::unique_ptr.171"*, %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::unique_ptr.171" = type opaque
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::unique_ptr.171"* }
%"class.rtc::EventBasedExponentialMovingAverage" = type { double, double, double, double, %"class.absl::optional.180" }
%"class.absl::optional.180" = type { %"class.absl::optional_internal::optional_data.181" }
%"class.absl::optional_internal::optional_data.181" = type { %"class.absl::optional_internal::optional_data_base.182" }
%"class.absl::optional_internal::optional_data_base.182" = type { %"class.absl::optional_internal::optional_data_dtor_base.183" }
%"class.absl::optional_internal::optional_data_dtor_base.183" = type { i8, %union.anon.184 }
%union.anon.184 = type { i64 }
%"class.std::__1::vector.190" = type { %"class.std::__1::__vector_base.191" }
%"class.std::__1::__vector_base.191" = type { %"class.cricket::Connection"**, %"class.cricket::Connection"**, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.cricket::Connection"** }
%"class.std::__1::set.197" = type { %"class.std::__1::__tree.198" }
%"class.std::__1::__tree.198" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.cricket::IceControllerFactoryArgs" = type { %"class.std::__1::function", %"class.std::__1::function.0", %"class.std::__1::function.5", %"struct.cricket::IceFieldTrials"*, %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.cricket::Connection"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.cricket::IceControllerInterface::PingResult" = type <{ %"class.absl::optional.208", i32, [4 x i8] }>
%"class.absl::optional.208" = type { %"class.absl::optional_internal::optional_data.209" }
%"class.absl::optional_internal::optional_data.209" = type { %"class.absl::optional_internal::optional_data_base.210" }
%"class.absl::optional_internal::optional_data_base.210" = type { %"class.absl::optional_internal::optional_data_dtor_base.211" }
%"class.absl::optional_internal::optional_data_dtor_base.211" = type { i8, %union.anon.212 }
%union.anon.212 = type { %"class.cricket::Connection"* }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.190"* }
%"class.std::__1::map.221" = type { %"class.std::__1::__tree.222" }
%"class.std::__1::__tree.222" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__tree_node.256" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.235" }
%"struct.std::__1::pair.235" = type { %"class.rtc::Network"*, %"class.cricket::Connection"* }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.cricket::IceControllerInterface::SwitchResult" = type { %"class.absl::optional.208", %"class.absl::optional.236", %"class.std::__1::vector.190" }
%"class.absl::optional.236" = type { %"class.absl::optional_internal::optional_data.237" }
%"class.absl::optional_internal::optional_data.237" = type { %"class.absl::optional_internal::optional_data_base.238" }
%"class.absl::optional_internal::optional_data_base.238" = type { %"class.absl::optional_internal::optional_data_dtor_base.239" }
%"class.absl::optional_internal::optional_data_dtor_base.239" = type { i8, %union.anon.240 }
%class.anon.241 = type { %"class.cricket::BasicIceController"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNK7cricket18BasicIceController11connectionsEv = comdat any

$_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__120back_insert_iteratorINS_6vectorIPKN7cricket10ConnectionENS_9allocatorIS5_EEEEEaSERKS5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = comdat any

@_ZTVN7cricket18BasicIceControllerE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cricket::BasicIceController"*)* @_ZN7cricket18BasicIceControllerD2Ev to i8*), i8* bitcast (void (%"class.cricket::BasicIceController"*)* @_ZN7cricket18BasicIceControllerD0Ev to i8*), i8* bitcast (void (%"class.cricket::BasicIceController"*, %"struct.cricket::IceConfig"*)* @_ZN7cricket18BasicIceController12SetIceConfigERKNS_9IceConfigE to i8*), i8* bitcast (void (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*)* @_ZN7cricket18BasicIceController21SetSelectedConnectionEPKNS_10ConnectionE to i8*), i8* bitcast (void (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*)* @_ZN7cricket18BasicIceController13AddConnectionEPKNS_10ConnectionE to i8*), i8* bitcast (void (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*)* @_ZN7cricket18BasicIceController21OnConnectionDestroyedEPKNS_10ConnectionE to i8*), i8* bitcast ({ %"class.cricket::Connection"**, i64 } (%"class.cricket::BasicIceController"*)* @_ZNK7cricket18BasicIceController11connectionsEv to i8*), i8* bitcast (i1 (%"class.cricket::BasicIceController"*)* @_ZNK7cricket18BasicIceController21HasPingableConnectionEv to i8*), i8* bitcast (void (%"struct.cricket::IceControllerInterface::PingResult"*, %"class.cricket::BasicIceController"*, i64)* @_ZN7cricket18BasicIceController22SelectConnectionToPingEl to i8*), i8* bitcast (i1 (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i32, i32)* @_ZNK7cricket18BasicIceController19GetUseCandidateAttrEPKNS_10ConnectionENS_14NominationModeENS_7IceModeE to i8*), i8* bitcast (%"class.cricket::Connection"* (%"class.cricket::BasicIceController"*)* @_ZN7cricket18BasicIceController26FindNextPingableConnectionEv to i8*), i8* bitcast (void (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*)* @_ZN7cricket18BasicIceController20MarkConnectionPingedEPKNS_10ConnectionE to i8*), i8* bitcast (void (%"struct.cricket::IceControllerInterface::SwitchResult"*, %"class.cricket::BasicIceController"*, i64, %"class.cricket::Connection"*)* @_ZN7cricket18BasicIceController22ShouldSwitchConnectionENS_18IceControllerEventEPKNS_10ConnectionE to i8*), i8* bitcast (void (%"struct.cricket::IceControllerInterface::SwitchResult"*, %"class.cricket::BasicIceController"*, i64)* @_ZN7cricket18BasicIceController23SortAndSwitchConnectionENS_18IceControllerEventE to i8*), i8* bitcast (void (%"class.std::__1::vector.190"*, %"class.cricket::BasicIceController"*)* @_ZN7cricket18BasicIceController16PruneConnectionsEv to i8*)] }, align 8
@.str = private unnamed_addr constant [58 x i8] c"../../third_party/webrtc/p2p/base/basic_ice_controller.cc\00", align 1
@.str.1 = private unnamed_addr constant [81 x i8] c"connections_.size() == pinged_connections_.size() + unpinged_connections_.size()\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"Selecting connection for triggered check: \00", align 1
@_ZN7cricket53WEAK_OR_STABILIZING_WRITABLE_CONNECTION_PING_INTERVALE = external local_unnamed_addr constant i32, align 4
@.str.3 = private unnamed_addr constant [35 x i8] c"reset initial_select_timestamp_ = \00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c" selection delayed by: \00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"set initial_select_timestamp_ms_ = \00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"delay initial selection up to \00", align 1
@__const._ZN7cricket18BasicIceController22ShouldSwitchConnectionENS_18IceControllerEventEPKNS_10ConnectionE.recheck_event = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon.240 } } } } { { { { i8, [3 x i8], %union.anon.240 } } } { { { i8, [3 x i8], %union.anon.240 } } { { i8, [3 x i8], %union.anon.240 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.240 { %"struct.cricket::IceControllerEvent" { i32 -1431655766, i32 -1431655766 } } } } } }, align 4
@.str.8 = private unnamed_addr constant [9 x i8] c"Sorting \00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c" available connections\00", align 1
@_ZN7cricket15RELAY_PORT_TYPEE = external constant [0 x i8], align 1
@_ZN7cricket15PRFLX_PORT_TYPEE = external constant [0 x i8], align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"a != nullptr\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"b != nullptr\00", align 1
@_ZN7cricket28MIN_CHECK_RECEIVING_INTERVALE = external local_unnamed_addr constant i32, align 4
@_ZN7cricket17UDP_PROTOCOL_NAMEE = external constant [0 x i8], align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = linkonce_odr hidden constant [1 x i8] zeroinitializer, comdat, align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN7cricket18BasicIceControllerC1ERKNS_24IceControllerFactoryArgsE = hidden unnamed_addr alias void (%"class.cricket::BasicIceController"*, %"struct.cricket::IceControllerFactoryArgs"*), void (%"class.cricket::BasicIceController"*, %"struct.cricket::IceControllerFactoryArgs"*)* @_ZN7cricket18BasicIceControllerC2ERKNS_24IceControllerFactoryArgsE
@_ZN7cricket18BasicIceControllerD1Ev = hidden unnamed_addr alias void (%"class.cricket::BasicIceController"*), void (%"class.cricket::BasicIceController"*)* @_ZN7cricket18BasicIceControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceControllerC2ERKNS_24IceControllerFactoryArgsE(%"class.cricket::BasicIceController"*, %"struct.cricket::IceControllerFactoryArgs"* nocapture readonly dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN7cricket18BasicIceControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::function"* %4 to i8*
  %6 = bitcast %"struct.cricket::IceControllerFactoryArgs"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false) #12
  %7 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.cricket::IceControllerFactoryArgs", %"struct.cricket::IceControllerFactoryArgs"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::__function::__policy_invoker"* %8 to i64*
  %10 = bitcast %"struct.std::__1::__function::__policy_invoker"* %7 to i64*
  %11 = load i64, i64* %9, align 8
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 1, i32 0, i32 2
  %13 = getelementptr inbounds %"struct.cricket::IceControllerFactoryArgs", %"struct.cricket::IceControllerFactoryArgs"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %13, align 8
  store %"struct.std::__1::__function::__policy"* %14, %"struct.std::__1::__function::__policy"** %12, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %14, i64 0, i32 0
  %16 = load i8* (i8*)*, i8* (i8*)** %15, align 8
  %17 = icmp eq i8* (i8*)* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.cricket::IceControllerFactoryArgs", %"struct.cricket::IceControllerFactoryArgs"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i8* %16(i8* %20) #12
  %22 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  br label %23

23:                                               ; preds = %2, %18
  %24 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"struct.cricket::IceControllerFactoryArgs", %"struct.cricket::IceControllerFactoryArgs"* %1, i64 0, i32 1
  %26 = bitcast %"class.std::__1::function.0"* %24 to i8*
  %27 = bitcast %"class.std::__1::function.0"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 16, i1 false) #12
  %28 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 2, i32 0, i32 1
  %29 = getelementptr inbounds %"struct.cricket::IceControllerFactoryArgs", %"struct.cricket::IceControllerFactoryArgs"* %1, i64 0, i32 1, i32 0, i32 1
  %30 = bitcast %"struct.std::__1::__function::__policy_invoker.4"* %29 to i64*
  %31 = bitcast %"struct.std::__1::__function::__policy_invoker.4"* %28 to i64*
  %32 = load i64, i64* %30, align 8
  store i64 %32, i64* %31, align 8
  %33 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 2, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.cricket::IceControllerFactoryArgs", %"struct.cricket::IceControllerFactoryArgs"* %1, i64 0, i32 1, i32 0, i32 2
  %35 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %34, align 8
  store %"struct.std::__1::__function::__policy"* %35, %"struct.std::__1::__function::__policy"** %33, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %35, i64 0, i32 0
  %37 = load i8* (i8*)*, i8* (i8*)** %36, align 8
  %38 = icmp eq i8* (i8*)* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %23
  %40 = getelementptr inbounds %"class.std::__1::function.0", %"class.std::__1::function.0"* %25, i64 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = tail call i8* %37(i8* %41) #12
  %43 = getelementptr inbounds %"class.std::__1::function.0", %"class.std::__1::function.0"* %24, i64 0, i32 0, i32 0, i32 0
  store i8* %42, i8** %43, align 8
  br label %44

44:                                               ; preds = %23, %39
  %45 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 3
  %46 = getelementptr inbounds %"struct.cricket::IceControllerFactoryArgs", %"struct.cricket::IceControllerFactoryArgs"* %1, i64 0, i32 2
  %47 = bitcast %"class.std::__1::function.5"* %45 to i8*
  %48 = bitcast %"class.std::__1::function.5"* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 16, i1 false) #12
  %49 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 3, i32 0, i32 1
  %50 = getelementptr inbounds %"struct.cricket::IceControllerFactoryArgs", %"struct.cricket::IceControllerFactoryArgs"* %1, i64 0, i32 2, i32 0, i32 1
  %51 = bitcast %"struct.std::__1::__function::__policy_invoker.9"* %50 to i64*
  %52 = bitcast %"struct.std::__1::__function::__policy_invoker.9"* %49 to i64*
  %53 = load i64, i64* %51, align 8
  store i64 %53, i64* %52, align 8
  %54 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 3, i32 0, i32 2
  %55 = getelementptr inbounds %"struct.cricket::IceControllerFactoryArgs", %"struct.cricket::IceControllerFactoryArgs"* %1, i64 0, i32 2, i32 0, i32 2
  %56 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %55, align 8
  store %"struct.std::__1::__function::__policy"* %56, %"struct.std::__1::__function::__policy"** %54, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %56, i64 0, i32 0
  %58 = load i8* (i8*)*, i8* (i8*)** %57, align 8
  %59 = icmp eq i8* (i8*)* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"class.std::__1::function.5", %"class.std::__1::function.5"* %46, i64 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = tail call i8* %58(i8* %62) #12
  %64 = getelementptr inbounds %"class.std::__1::function.5", %"class.std::__1::function.5"* %45, i64 0, i32 0, i32 0, i32 0
  store i8* %63, i8** %64, align 8
  br label %65

65:                                               ; preds = %44, %60
  %66 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 4
  tail call void @_ZN7cricket9IceConfigC1Ev(%"struct.cricket::IceConfig"* %66) #12
  %67 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 5
  %68 = getelementptr inbounds %"struct.cricket::IceControllerFactoryArgs", %"struct.cricket::IceControllerFactoryArgs"* %1, i64 0, i32 3
  %69 = bitcast %"struct.cricket::IceFieldTrials"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.cricket::IceFieldTrials"** %67 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 6
  %73 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %75 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 0
  %76 = bitcast %"class.std::__1::__tree_node_base"** %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #12
  %77 = bitcast %"class.cricket::Connection"** %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 32, i1 false)
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %75, align 8
  %78 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %80 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 0
  %81 = bitcast %"class.std::__1::__tree_node_base"** %78 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %79, %"class.std::__1::__tree_end_node"** %80, align 8
  %82 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 10
  store i64 0, i64* %82, align 8
  ret void
}

declare void @_ZN7cricket9IceConfigC1Ev(%"struct.cricket::IceConfig"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceControllerD2Ev(%"class.cricket::BasicIceController"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN7cricket18BasicIceControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0
  %4 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.198"* %3, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0
  %8 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call void @_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.198"* %7, %"class.std::__1::__tree_node"* %10) #12
  %11 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 0
  %12 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %11, align 8
  %13 = icmp eq %"class.cricket::Connection"** %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = ptrtoint %"class.cricket::Connection"** %12 to i64
  %16 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 1
  %17 = bitcast %"class.cricket::Connection"*** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.cricket::Connection"** %12 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 4
  tail call void @_ZN7cricket9IceConfigD1Ev(%"struct.cricket::IceConfig"* %20) #12
  %21 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 3, i32 0, i32 2
  %22 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %22, i64 0, i32 1
  %24 = load void (i8*)*, void (i8*)** %23, align 8
  %25 = icmp eq void (i8*)* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void %24(i8* %28) #12
  br label %29

29:                                               ; preds = %19, %26
  %30 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 2, i32 0, i32 2
  %31 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %31, i64 0, i32 1
  %33 = load void (i8*)*, void (i8*)** %32, align 8
  %34 = icmp eq void (i8*)* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void %33(i8* %37) #12
  br label %38

38:                                               ; preds = %29, %35
  %39 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 1, i32 0, i32 2
  %40 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %40, i64 0, i32 1
  %42 = load void (i8*)*, void (i8*)** %41, align 8
  %43 = icmp eq void (i8*)* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void %42(i8* %46) #12
  br label %47

47:                                               ; preds = %38, %44
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7cricket9IceConfigD1Ev(%"struct.cricket::IceConfig"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceControllerD0Ev(%"class.cricket::BasicIceController"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7cricket18BasicIceControllerD2Ev(%"class.cricket::BasicIceController"* %0) #12
  %2 = bitcast %"class.cricket::BasicIceController"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceController12SetIceConfigERKNS_9IceConfigE(%"class.cricket::BasicIceController"* nocapture, %"struct.cricket::IceConfig"* nocapture readonly dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.cricket::IceConfig", %"struct.cricket::IceConfig"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 4 %4, i64 120, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7cricket18BasicIceController21SetSelectedConnectionEPKNS_10ConnectionE(%"class.cricket::BasicIceController"* nocapture, %"class.cricket::Connection"*) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 6
  store %"class.cricket::Connection"* %1, %"class.cricket::Connection"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceController13AddConnectionEPKNS_10ConnectionE(%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.cricket::Connection"* %1 to i64
  %4 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7
  %5 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 1
  %6 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %5, align 8
  %7 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %7, align 8
  %9 = icmp eq %"class.cricket::Connection"** %6, %8
  %10 = ptrtoint %"class.cricket::Connection"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.cricket::Connection"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 1
  %14 = ptrtoint %"class.cricket::Connection"** %13 to i64
  %15 = bitcast %"class.cricket::Connection"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %"class.cricket::Connection"** %6 to i64
  %18 = bitcast %"class.cricket::Connection"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.190"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.190"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #14
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.cricket::Connection"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #13
  %44 = bitcast i8* %43 to %"class.cricket::Connection"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.cricket::Connection"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %47, i64 %22
  %49 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %47, i64 %46
  %50 = ptrtoint %"class.cricket::Connection"** %49 to i64
  %51 = bitcast %"class.cricket::Connection"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %48, i64 1
  %53 = ptrtoint %"class.cricket::Connection"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %4, i64 0, i32 0, i32 0
  %55 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.cricket::Connection"** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %48, i64 %60
  %62 = ptrtoint %"class.cricket::Connection"** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.cricket::Connection"** %61 to i8*
  %66 = bitcast %"class.cricket::Connection"** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #12
  %67 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.cricket::Connection"** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.cricket::Connection"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.cricket::Connection"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %11, %68, %71
  %74 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9
  %75 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %76 = bitcast %"class.std::__1::__tree_end_node"* %75 to %"class.std::__1::__tree_node"**
  %77 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node"* %77, null
  br i1 %78, label %107, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %103, %79
  %82 = phi %"class.std::__1::__tree_node"* [ %106, %103 ], [ %77, %79 ]
  %83 = phi %"class.std::__1::__tree_node_base"** [ %105, %103 ], [ %80, %79 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 1
  %85 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %84, align 8
  %86 = icmp ugt %"class.cricket::Connection"* %85, %1
  br i1 %86, label %87, label %93

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %103

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 0
  br label %109

93:                                               ; preds = %81
  %94 = icmp ult %"class.cricket::Connection"* %85, %1
  br i1 %94, label %95, label %101

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 1
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 0
  br label %109

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 0, i32 0
  br label %109

103:                                              ; preds = %95, %87
  %104 = phi %"class.std::__1::__tree_node_base"* [ %89, %87 ], [ %97, %95 ]
  %105 = phi %"class.std::__1::__tree_node_base"** [ %88, %87 ], [ %96, %95 ]
  %106 = bitcast %"class.std::__1::__tree_node_base"* %104 to %"class.std::__1::__tree_node"*
  br label %81

107:                                              ; preds = %73
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 0, i32 0
  br label %109

109:                                              ; preds = %107, %101, %99, %91
  %110 = phi %"class.std::__1::__tree_end_node"* [ %75, %107 ], [ %92, %91 ], [ %100, %99 ], [ %102, %101 ]
  %111 = phi %"class.std::__1::__tree_node_base"** [ %108, %107 ], [ %88, %91 ], [ %96, %99 ], [ %83, %101 ]
  %112 = bitcast %"class.std::__1::__tree_node_base"** %111 to %"class.std::__1::__tree_node"**
  %113 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node"* %113, null
  br i1 %114, label %115, label %139

115:                                              ; preds = %109
  %116 = tail call i8* @_Znwm(i64 40) #13, !noalias !2
  %117 = getelementptr inbounds i8, i8* %116, i64 32
  %118 = bitcast i8* %117 to i64*
  store i64 %3, i64* %118, align 8, !noalias !2
  %119 = bitcast i8* %116 to %"class.std::__1::__tree_node_base"*
  %120 = getelementptr inbounds i8, i8* %116, i64 16
  %121 = bitcast i8* %120 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %110, %"class.std::__1::__tree_end_node"** %121, align 8
  %122 = bitcast %"class.std::__1::__tree_node_base"** %111 to i8**
  store i8* %116, i8** %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::set.197", %"class.std::__1::set.197"* %74, i64 0, i32 0, i32 0
  %124 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %132, label %128

128:                                              ; preds = %115
  %129 = ptrtoint %"class.std::__1::__tree_node_base"* %126 to i64
  %130 = bitcast %"class.std::__1::set.197"* %74 to i64*
  store i64 %129, i64* %130, align 8
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  br label %132

132:                                              ; preds = %128, %115
  %133 = phi %"class.std::__1::__tree_node_base"* [ %119, %115 ], [ %131, %128 ]
  %134 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %135, %"class.std::__1::__tree_node_base"* %133) #12
  %136 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = add i64 %137, 1
  store i64 %138, i64* %136, align 8
  br label %139

139:                                              ; preds = %109, %132
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceController21OnConnectionDestroyedEPKNS_10ConnectionE(%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0
  %4 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  %8 = bitcast %"class.std::__1::__tree_node"* %6 to %"class.std::__1::__tree_node_base"*
  br i1 %7, label %72, label %9

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::__tree_end_node"* [ %20, %9 ], [ %4, %2 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %21, %9 ], [ %6, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %13 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %12, align 8
  %14 = icmp ult %"class.cricket::Connection"* %13, %1
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %19 = select i1 %14, %"class.std::__1::__tree_node"** %16, %"class.std::__1::__tree_node"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %17
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %4
  br i1 %24, label %72, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.cricket::Connection"**
  %28 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, align 8
  %29 = icmp ugt %"class.cricket::Connection"* %28, %1
  br i1 %29, label %72, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 1, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %42

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 2
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_end_node"**
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %35
  br i1 %41, label %58, label %49

42:                                               ; preds = %30, %42
  %43 = phi %"class.std::__1::__tree_node_base"* [ %45, %42 ], [ %32, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %47, label %42

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0
  br label %58

49:                                               ; preds = %34, %49
  %50 = phi %"class.std::__1::__tree_end_node"** [ %53, %49 ], [ %37, %34 ]
  %51 = bitcast %"class.std::__1::__tree_end_node"** %50 to %"class.std::__1::__tree_node_base"**
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 2
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %52
  br i1 %57, label %58, label %49

58:                                               ; preds = %49, %47, %34
  %59 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %38, %34 ], [ %54, %49 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree.198", %"class.std::__1::__tree.198"* %3, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %20
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = ptrtoint %"class.std::__1::__tree_end_node"* %59 to i64
  %65 = bitcast %"class.std::__1::__tree.198"* %3 to i64*
  store i64 %64, i64* %65, align 8
  br label %66

66:                                               ; preds = %63, %58
  %67 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, -1
  store i64 %69, i64* %67, align 8
  %70 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %8, %"class.std::__1::__tree_node_base"* %70) #12
  %71 = bitcast %"class.std::__1::__tree_end_node"* %20 to i8*
  tail call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %2, %23, %25, %66
  %73 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0
  %74 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node"**
  %76 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node"* %76, null
  %78 = bitcast %"class.std::__1::__tree_node"* %76 to %"class.std::__1::__tree_node_base"*
  br i1 %77, label %142, label %79

79:                                               ; preds = %72, %79
  %80 = phi %"class.std::__1::__tree_end_node"* [ %90, %79 ], [ %74, %72 ]
  %81 = phi %"class.std::__1::__tree_node"* [ %91, %79 ], [ %76, %72 ]
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 1
  %83 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %82, align 8
  %84 = icmp ult %"class.cricket::Connection"* %83, %1
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 0, i32 1
  %86 = bitcast %"class.std::__1::__tree_node_base"** %85 to %"class.std::__1::__tree_node"**
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %81, i64 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::__tree_node"* %81 to %"class.std::__1::__tree_node"**
  %89 = select i1 %84, %"class.std::__1::__tree_node"** %86, %"class.std::__1::__tree_node"** %88
  %90 = select i1 %84, %"class.std::__1::__tree_end_node"* %80, %"class.std::__1::__tree_end_node"* %87
  %91 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %89, align 8
  %92 = icmp eq %"class.std::__1::__tree_node"* %91, null
  br i1 %92, label %93, label %79

93:                                               ; preds = %79
  %94 = icmp eq %"class.std::__1::__tree_end_node"* %90, %74
  br i1 %94, label %142, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 4
  %97 = bitcast %"class.std::__1::__tree_end_node"* %96 to %"class.cricket::Connection"**
  %98 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %97, align 8
  %99 = icmp ugt %"class.cricket::Connection"* %98, %1
  br i1 %99, label %142, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 1, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, null
  br i1 %103, label %104, label %112

104:                                              ; preds = %100
  %105 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node_base"*
  %106 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 2
  %107 = bitcast %"class.std::__1::__tree_end_node"* %106 to %"class.std::__1::__tree_end_node"**
  %108 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, %105
  br i1 %111, label %128, label %119

112:                                              ; preds = %100, %112
  %113 = phi %"class.std::__1::__tree_node_base"* [ %115, %112 ], [ %102, %100 ]
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, null
  br i1 %116, label %117, label %112

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  br label %128

119:                                              ; preds = %104, %119
  %120 = phi %"class.std::__1::__tree_end_node"** [ %123, %119 ], [ %107, %104 ]
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %122, i64 0, i32 2
  %124 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, %122
  br i1 %127, label %128, label %119

128:                                              ; preds = %119, %117, %104
  %129 = phi %"class.std::__1::__tree_end_node"* [ %118, %117 ], [ %108, %104 ], [ %124, %119 ]
  %130 = getelementptr inbounds %"class.std::__1::__tree.198", %"class.std::__1::__tree.198"* %73, i64 0, i32 0
  %131 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %130, align 8
  %132 = icmp eq %"class.std::__1::__tree_end_node"* %131, %90
  br i1 %132, label %133, label %136

133:                                              ; preds = %128
  %134 = ptrtoint %"class.std::__1::__tree_end_node"* %129 to i64
  %135 = bitcast %"class.std::__1::__tree.198"* %73 to i64*
  store i64 %134, i64* %135, align 8
  br label %136

136:                                              ; preds = %133, %128
  %137 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, -1
  store i64 %139, i64* %137, align 8
  %140 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %78, %"class.std::__1::__tree_node_base"* %140) #12
  %141 = bitcast %"class.std::__1::__tree_end_node"* %90 to i8*
  tail call void @_ZdlPv(i8* %141) #13
  br label %142

142:                                              ; preds = %72, %93, %95, %136
  %143 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 0
  %144 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %143, align 8
  %145 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 1
  %146 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %145, align 8
  %147 = icmp eq %"class.cricket::Connection"** %144, %146
  %148 = ptrtoint %"class.cricket::Connection"** %146 to i64
  br i1 %147, label %156, label %149

149:                                              ; preds = %142, %153
  %150 = phi %"class.cricket::Connection"** [ %154, %153 ], [ %144, %142 ]
  %151 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %150, align 8
  %152 = icmp eq %"class.cricket::Connection"* %151, %1
  br i1 %152, label %156, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %150, i64 1
  %155 = icmp eq %"class.cricket::Connection"** %154, %146
  br i1 %155, label %156, label %149

156:                                              ; preds = %149, %153, %142
  %157 = phi %"class.cricket::Connection"** [ %144, %142 ], [ %146, %153 ], [ %150, %149 ]
  %158 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %157, i64 1
  %159 = ptrtoint %"class.cricket::Connection"** %158 to i64
  %160 = sub i64 %148, %159
  %161 = ashr exact i64 %160, 3
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %156
  %164 = bitcast %"class.cricket::Connection"** %157 to i8*
  %165 = bitcast %"class.cricket::Connection"** %158 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %164, i8* align 8 %165, i64 %160, i1 false) #12
  br label %166

166:                                              ; preds = %156, %163
  %167 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %157, i64 %161
  store %"class.cricket::Connection"** %167, %"class.cricket::Connection"*** %145, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7cricket18BasicIceController21HasPingableConnectionEv(%"class.cricket::BasicIceController"*) unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN3rtc10TimeMillisEv() #12
  %3 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %3, align 8
  %5 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 1
  %6 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %5, align 8
  %7 = icmp eq %"class.cricket::Connection"** %4, %6
  br i1 %7, label %15, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"class.cricket::Connection"** %14, %6
  br i1 %9, label %15, label %10

10:                                               ; preds = %1, %8
  %11 = phi %"class.cricket::Connection"** [ %14, %8 ], [ %4, %1 ]
  %12 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %11, align 8
  %13 = tail call zeroext i1 @_ZNK7cricket18BasicIceController10IsPingableEPKNS_10ConnectionEl(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* %12, i64 %2) #12
  %14 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %11, i64 1
  br i1 %13, label %15, label %8

15:                                               ; preds = %8, %10, %1
  %16 = phi i1 [ false, %1 ], [ false, %8 ], [ true, %10 ]
  ret i1 %16
}

declare i64 @_ZN3rtc10TimeMillisEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceController22SelectConnectionToPingEl(%"struct.cricket::IceControllerInterface::PingResult"* noalias nocapture sret, %"class.cricket::BasicIceController"*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 7, i32 0, i32 0
  %5 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %4, align 8
  %6 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 7, i32 0, i32 1
  %7 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %6, align 8
  %8 = icmp eq %"class.cricket::Connection"** %5, %7
  br i1 %8, label %22, label %9

9:                                                ; preds = %3, %19
  %10 = phi %"class.cricket::Connection"** [ %20, %19 ], [ %5, %3 ]
  %11 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %10, align 8
  %12 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %11, i64 0, i32 16
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %11, i64 0, i32 45
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %17, 3
  br i1 %18, label %22, label %19

19:                                               ; preds = %15, %9
  %20 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %10, i64 1
  %21 = icmp eq %"class.cricket::Connection"** %20, %7
  br i1 %21, label %22, label %9

22:                                               ; preds = %15, %19, %3
  %23 = phi i1 [ false, %3 ], [ false, %19 ], [ true, %15 ]
  %24 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 6
  %25 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %24, align 8
  %26 = icmp eq %"class.cricket::Connection"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %25, i64 0, i32 16
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %40

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %25, i64 0, i32 17
  %33 = load i8, i8* %32, align 4, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %25, i64 0, i32 18
  %37 = load i8, i8* %36, align 1, !range !5
  %38 = icmp eq i8 %37, 0
  %39 = or i1 %23, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %27, %31, %22, %35
  %41 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 4
  %42 = tail call i32 @_ZNK7cricket9IceConfig47ice_check_interval_weak_connectivity_or_defaultEv(%"struct.cricket::IceConfig"* %41) #12
  %43 = tail call i32 @_ZNK7cricket9IceConfig33ice_check_min_interval_or_defaultEv(%"struct.cricket::IceConfig"* %41) #12
  %44 = icmp slt i32 %42, %43
  %45 = select i1 %44, i32 %43, i32 %42
  br label %52

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 4
  %48 = tail call i32 @_ZNK7cricket9IceConfig49ice_check_interval_strong_connectivity_or_defaultEv(%"struct.cricket::IceConfig"* %47) #12
  %49 = tail call i32 @_ZNK7cricket9IceConfig33ice_check_min_interval_or_defaultEv(%"struct.cricket::IceConfig"* %47) #12
  %50 = icmp slt i32 %48, %49
  %51 = select i1 %50, i32 %49, i32 %48
  br label %52

52:                                               ; preds = %46, %40
  %53 = phi i32 [ %45, %40 ], [ %51, %46 ]
  %54 = tail call i64 @_ZN3rtc10TimeMillisEv() #12
  %55 = sext i32 %53 to i64
  %56 = add nsw i64 %55, %2
  %57 = icmp slt i64 %54, %56
  br i1 %57, label %64, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.cricket::BasicIceController"* %1 to %"class.cricket::Connection"* (%"class.cricket::BasicIceController"*)***
  %60 = load %"class.cricket::Connection"* (%"class.cricket::BasicIceController"*)**, %"class.cricket::Connection"* (%"class.cricket::BasicIceController"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.cricket::Connection"* (%"class.cricket::BasicIceController"*)*, %"class.cricket::Connection"* (%"class.cricket::BasicIceController"*)** %60, i64 10
  %62 = load %"class.cricket::Connection"* (%"class.cricket::BasicIceController"*)*, %"class.cricket::Connection"* (%"class.cricket::BasicIceController"*)** %61, align 8
  %63 = tail call %"class.cricket::Connection"* %62(%"class.cricket::BasicIceController"* %1) #12
  br label %64

64:                                               ; preds = %52, %58
  %65 = phi %"class.cricket::Connection"* [ %63, %58 ], [ null, %52 ]
  %66 = getelementptr inbounds %"struct.cricket::IceControllerInterface::PingResult", %"struct.cricket::IceControllerInterface::PingResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 -86, i64 24, i1 false)
  %67 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 4
  %68 = tail call i32 @_ZNK7cricket9IceConfig28receiving_timeout_or_defaultEv(%"struct.cricket::IceConfig"* %67) #12
  %69 = sdiv i32 %68, 10
  %70 = load i32, i32* @_ZN7cricket28MIN_CHECK_RECEIVING_INTERVALE, align 4
  %71 = icmp slt i32 %70, %69
  %72 = select i1 %71, i32 %69, i32 %70
  %73 = icmp slt i32 %72, %53
  %74 = select i1 %73, i32 %72, i32 %53
  %75 = icmp eq %"class.cricket::Connection"* %65, null
  br i1 %75, label %80, label %76

76:                                               ; preds = %64
  %77 = ptrtoint %"class.cricket::Connection"* %65 to i64
  store i8 1, i8* %66, align 8
  %78 = getelementptr inbounds %"struct.cricket::IceControllerInterface::PingResult", %"struct.cricket::IceControllerInterface::PingResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = bitcast %"class.cricket::Connection"** %78 to i64*
  store i64 %77, i64* %79, align 8
  br label %81

80:                                               ; preds = %64
  store i8 0, i8* %66, align 8
  br label %81

81:                                               ; preds = %76, %80
  %82 = getelementptr inbounds %"struct.cricket::IceControllerInterface::PingResult", %"struct.cricket::IceControllerInterface::PingResult"* %0, i64 0, i32 1
  store i32 %74, i32* %82, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceController20MarkConnectionPingedEPKNS_10ConnectionE(%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.cricket::Connection"* %1 to i64
  %4 = icmp eq %"class.cricket::Connection"* %1, null
  br i1 %4, label %140, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %35, %11
  %14 = phi %"class.std::__1::__tree_node"* [ %38, %35 ], [ %9, %11 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1
  %17 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %16, align 8
  %18 = icmp ugt %"class.cricket::Connection"* %17, %1
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

25:                                               ; preds = %13
  %26 = icmp ult %"class.cricket::Connection"* %17, %1
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %19
  %36 = phi %"class.std::__1::__tree_node_base"* [ %21, %19 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %20, %19 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %13

39:                                               ; preds = %5
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %41

41:                                               ; preds = %39, %33, %31, %23
  %42 = phi %"class.std::__1::__tree_end_node"* [ %7, %39 ], [ %24, %23 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %20, %23 ], [ %28, %31 ], [ %15, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %47, label %140

47:                                               ; preds = %41
  %48 = tail call i8* @_Znwm(i64 40) #13, !noalias !6
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  %50 = bitcast i8* %49 to i64*
  store i64 %3, i64* %50, align 8, !noalias !6
  %51 = bitcast i8* %48 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %53, align 8
  %54 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8**
  store i8* %48, i8** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::set.197", %"class.std::__1::set.197"* %6, i64 0, i32 0, i32 0
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %47
  %61 = ptrtoint %"class.std::__1::__tree_node_base"* %58 to i64
  %62 = bitcast %"class.std::__1::set.197"* %6 to i64*
  store i64 %61, i64* %62, align 8
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %64

64:                                               ; preds = %60, %47
  %65 = phi %"class.std::__1::__tree_node_base"* [ %51, %47 ], [ %63, %60 ]
  %66 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"* %65) #12
  %68 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  %71 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0
  %72 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_node"**
  %74 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node"* %74, null
  %76 = bitcast %"class.std::__1::__tree_node"* %74 to %"class.std::__1::__tree_node_base"*
  br i1 %75, label %140, label %77

77:                                               ; preds = %64, %77
  %78 = phi %"class.std::__1::__tree_end_node"* [ %88, %77 ], [ %72, %64 ]
  %79 = phi %"class.std::__1::__tree_node"* [ %89, %77 ], [ %74, %64 ]
  %80 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %79, i64 0, i32 1
  %81 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %80, align 8
  %82 = icmp ult %"class.cricket::Connection"* %81, %1
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %79, i64 0, i32 0, i32 1
  %84 = bitcast %"class.std::__1::__tree_node_base"** %83 to %"class.std::__1::__tree_node"**
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %79, i64 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::__tree_node"* %79 to %"class.std::__1::__tree_node"**
  %87 = select i1 %82, %"class.std::__1::__tree_node"** %84, %"class.std::__1::__tree_node"** %86
  %88 = select i1 %82, %"class.std::__1::__tree_end_node"* %78, %"class.std::__1::__tree_end_node"* %85
  %89 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %87, align 8
  %90 = icmp eq %"class.std::__1::__tree_node"* %89, null
  br i1 %90, label %91, label %77

91:                                               ; preds = %77
  %92 = icmp eq %"class.std::__1::__tree_end_node"* %88, %72
  br i1 %92, label %140, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 4
  %95 = bitcast %"class.std::__1::__tree_end_node"* %94 to %"class.cricket::Connection"**
  %96 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %95, align 8
  %97 = icmp ugt %"class.cricket::Connection"* %96, %1
  br i1 %97, label %140, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 1, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %110

102:                                              ; preds = %98
  %103 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node_base"*
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 2
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.std::__1::__tree_end_node"**
  %106 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %106, i64 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, %103
  br i1 %109, label %126, label %117

110:                                              ; preds = %98, %110
  %111 = phi %"class.std::__1::__tree_node_base"* [ %113, %110 ], [ %100, %98 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %110

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 0
  br label %126

117:                                              ; preds = %102, %117
  %118 = phi %"class.std::__1::__tree_end_node"** [ %121, %117 ], [ %105, %102 ]
  %119 = bitcast %"class.std::__1::__tree_end_node"** %118 to %"class.std::__1::__tree_node_base"**
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %120, i64 0, i32 2
  %122 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %122, i64 0, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, %120
  br i1 %125, label %126, label %117

126:                                              ; preds = %117, %115, %102
  %127 = phi %"class.std::__1::__tree_end_node"* [ %116, %115 ], [ %106, %102 ], [ %122, %117 ]
  %128 = getelementptr inbounds %"class.std::__1::__tree.198", %"class.std::__1::__tree.198"* %71, i64 0, i32 0
  %129 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_end_node"* %129, %88
  br i1 %130, label %131, label %134

131:                                              ; preds = %126
  %132 = ptrtoint %"class.std::__1::__tree_end_node"* %127 to i64
  %133 = bitcast %"class.std::__1::__tree.198"* %71 to i64*
  store i64 %132, i64* %133, align 8
  br label %134

134:                                              ; preds = %131, %126
  %135 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, -1
  store i64 %137, i64* %135, align 8
  %138 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %76, %"class.std::__1::__tree_node_base"* %138) #12
  %139 = bitcast %"class.std::__1::__tree_end_node"* %88 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %41, %134, %93, %91, %64, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cricket::Connection"* @_ZN7cricket18BasicIceController26FindNextPingableConnectionEv(%"class.cricket::BasicIceController"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::back_insert_iterator", align 8
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::vector.190", align 8
  %5 = alloca %"class.std::__1::vector.190", align 8
  %6 = alloca %"class.std::__1::vector.190", align 8
  %7 = tail call i64 @_ZN3rtc10TimeMillisEv() #12
  %8 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 6
  %9 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %8, align 8
  %10 = icmp eq %"class.cricket::Connection"* %9, null
  br i1 %10, label %37, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %9, i64 0, i32 18
  %13 = load i8, i8* %12, align 1, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %9, i64 0, i32 16
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = tail call zeroext i1 @_ZNK7cricket18BasicIceController34WritableConnectionPastPingIntervalEPKNS_10ConnectionEl(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* nonnull %9, i64 %7)
  %21 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %8, align 8
  br i1 %20, label %467, label %22

22:                                               ; preds = %19
  %23 = icmp eq %"class.cricket::Connection"* %21, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %15, %11, %22
  %25 = phi %"class.cricket::Connection"* [ %21, %22 ], [ %9, %11 ], [ %9, %15 ]
  %26 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %25, i64 0, i32 16
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %37

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %25, i64 0, i32 17
  %31 = load i8, i8* %30, align 4, !range !5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %25, i64 0, i32 18
  %35 = load i8, i8* %34, align 1, !range !5
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %169

37:                                               ; preds = %1, %24, %29, %22, %33
  %38 = bitcast %"class.std::__1::vector.190"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %4, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #12
  %41 = bitcast %"class.std::__1::vector.190"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  call void @_ZNK7cricket18BasicIceController35GetBestWritableConnectionPerNetworkEv(%"class.std::__1::vector.190"* nonnull sret %5, %"class.cricket::BasicIceController"* %0)
  %42 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %5, i64 0, i32 0, i32 0
  %43 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %5, i64 0, i32 0, i32 1
  %45 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %44, align 8
  %46 = bitcast %"class.std::__1::back_insert_iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %2, i64 0, i32 0
  store %"class.std::__1::vector.190"* %4, %"class.std::__1::vector.190"** %47, align 8
  %48 = icmp eq %"class.cricket::Connection"** %43, %45
  br i1 %48, label %60, label %49

49:                                               ; preds = %37, %55
  %50 = phi %"class.cricket::Connection"** [ %56, %55 ], [ %43, %37 ]
  %51 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %50, align 8
  %52 = call zeroext i1 @_ZNK7cricket18BasicIceController34WritableConnectionPastPingIntervalEPKNS_10ConnectionEl(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* %51, i64 %7) #12
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPKN7cricket10ConnectionENS_9allocatorIS5_EEEEEaSERKS5_(%"class.std::__1::back_insert_iterator"* nonnull %2, %"class.cricket::Connection"** dereferenceable(8) %50) #12
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %50, i64 1
  %57 = icmp eq %"class.cricket::Connection"** %56, %45
  br i1 %57, label %58, label %49

58:                                               ; preds = %55
  %59 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %42, align 8
  br label %60

60:                                               ; preds = %58, %37
  %61 = phi %"class.cricket::Connection"** [ %59, %58 ], [ %43, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  %62 = icmp eq %"class.cricket::Connection"** %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %60
  %64 = ptrtoint %"class.cricket::Connection"** %61 to i64
  %65 = bitcast %"class.cricket::Connection"*** %44 to i64*
  store i64 %64, i64* %65, align 8
  %66 = bitcast %"class.cricket::Connection"** %61 to i8*
  call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  %68 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %39, align 8
  %69 = ptrtoint %"class.cricket::Connection"** %68 to i64
  %70 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %40, align 8
  %71 = icmp eq %"class.cricket::Connection"** %68, %70
  br i1 %71, label %156, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %68, i64 1
  %74 = icmp eq %"class.cricket::Connection"** %73, %70
  br i1 %74, label %156, label %75

75:                                               ; preds = %72
  %76 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %70, i64 -2
  %77 = ptrtoint %"class.cricket::Connection"** %76 to i64
  %78 = sub i64 %77, %69
  %79 = lshr i64 %78, 3
  %80 = add nuw nsw i64 %79, 1
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %75, %83
  %84 = phi %"class.cricket::Connection"** [ %97, %83 ], [ %73, %75 ]
  %85 = phi i64 [ %96, %83 ], [ %69, %75 ]
  %86 = phi i64 [ %98, %83 ], [ %81, %75 ]
  %87 = ptrtoint %"class.cricket::Connection"** %84 to i64
  %88 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %84, align 8
  %89 = inttoptr i64 %85 to %"class.cricket::Connection"**
  %90 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %89, align 8
  %91 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %88, i64 0, i32 31
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %90, i64 0, i32 31
  %94 = load i64, i64* %93, align 8
  %95 = icmp slt i64 %92, %94
  %96 = select i1 %95, i64 %87, i64 %85
  %97 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %84, i64 1
  %98 = add i64 %86, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %83, !llvm.loop !9

100:                                              ; preds = %83, %75
  %101 = phi i64 [ undef, %75 ], [ %96, %83 ]
  %102 = phi %"class.cricket::Connection"** [ %73, %75 ], [ %97, %83 ]
  %103 = phi i64 [ %69, %75 ], [ %96, %83 ]
  %104 = icmp ult i64 %78, 24
  br i1 %104, label %153, label %105

105:                                              ; preds = %100, %105
  %106 = phi %"class.cricket::Connection"** [ %151, %105 ], [ %102, %100 ]
  %107 = phi i64 [ %150, %105 ], [ %103, %100 ]
  %108 = ptrtoint %"class.cricket::Connection"** %106 to i64
  %109 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %106, align 8
  %110 = inttoptr i64 %107 to %"class.cricket::Connection"**
  %111 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %110, align 8
  %112 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %109, i64 0, i32 31
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %111, i64 0, i32 31
  %115 = load i64, i64* %114, align 8
  %116 = icmp slt i64 %113, %115
  %117 = select i1 %116, i64 %108, i64 %107
  %118 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %106, i64 1
  %119 = ptrtoint %"class.cricket::Connection"** %118 to i64
  %120 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %118, align 8
  %121 = inttoptr i64 %117 to %"class.cricket::Connection"**
  %122 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %121, align 8
  %123 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %120, i64 0, i32 31
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %122, i64 0, i32 31
  %126 = load i64, i64* %125, align 8
  %127 = icmp slt i64 %124, %126
  %128 = select i1 %127, i64 %119, i64 %117
  %129 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %106, i64 2
  %130 = ptrtoint %"class.cricket::Connection"** %129 to i64
  %131 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %129, align 8
  %132 = inttoptr i64 %128 to %"class.cricket::Connection"**
  %133 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %132, align 8
  %134 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %131, i64 0, i32 31
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %133, i64 0, i32 31
  %137 = load i64, i64* %136, align 8
  %138 = icmp slt i64 %135, %137
  %139 = select i1 %138, i64 %130, i64 %128
  %140 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %106, i64 3
  %141 = ptrtoint %"class.cricket::Connection"** %140 to i64
  %142 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %140, align 8
  %143 = inttoptr i64 %139 to %"class.cricket::Connection"**
  %144 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %143, align 8
  %145 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %142, i64 0, i32 31
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %144, i64 0, i32 31
  %148 = load i64, i64* %147, align 8
  %149 = icmp slt i64 %146, %148
  %150 = select i1 %149, i64 %141, i64 %139
  %151 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %106, i64 4
  %152 = icmp eq %"class.cricket::Connection"** %151, %70
  br i1 %152, label %153, label %105

153:                                              ; preds = %105, %100
  %154 = phi i64 [ %101, %100 ], [ %150, %105 ]
  %155 = inttoptr i64 %154 to %"class.cricket::Connection"**
  br label %156

156:                                              ; preds = %153, %67, %72
  %157 = phi %"class.cricket::Connection"** [ %68, %67 ], [ %68, %72 ], [ %155, %153 ]
  %158 = icmp eq %"class.cricket::Connection"** %70, %157
  br i1 %158, label %161, label %159

159:                                              ; preds = %156
  %160 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %157, align 8
  br label %161

161:                                              ; preds = %156, %159
  %162 = phi i1 [ false, %159 ], [ true, %156 ]
  %163 = phi %"class.cricket::Connection"* [ %160, %159 ], [ undef, %156 ]
  %164 = icmp eq %"class.cricket::Connection"** %68, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %161
  %166 = bitcast %"class.cricket::Connection"*** %40 to i64*
  store i64 %69, i64* %166, align 8
  %167 = bitcast %"class.cricket::Connection"** %68 to i8*
  call void @_ZdlPv(i8* %167) #13
  br label %168

168:                                              ; preds = %161, %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  br i1 %162, label %169, label %467

169:                                              ; preds = %168, %33
  %170 = call %"class.cricket::Connection"* @_ZN7cricket18BasicIceController41FindOldestConnectionNeedingTriggeredCheckEl(%"class.cricket::BasicIceController"* %0, i64 %7)
  %171 = icmp eq %"class.cricket::Connection"* %170, null
  br i1 %171, label %172, label %467

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7
  %174 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 1
  %175 = bitcast %"class.cricket::Connection"*** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.std::__1::vector.190"* %173 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = sub i64 %176, %178
  %180 = ashr exact i64 %179, 3
  %181 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8
  %182 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9
  %185 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %186 = load i64, i64* %185, align 8
  %187 = add i64 %186, %183
  %188 = icmp eq i64 %180, %187
  br i1 %188, label %190, label %189

189:                                              ; preds = %172
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 171, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #14
  unreachable

190:                                              ; preds = %172
  %191 = getelementptr inbounds %"class.std::__1::set.197", %"class.std::__1::set.197"* %184, i64 0, i32 0, i32 0
  %192 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %193 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %194 = icmp eq %"class.std::__1::__tree_end_node"* %192, %193
  br i1 %194, label %232, label %195

195:                                              ; preds = %190, %229
  %196 = phi %"class.std::__1::__tree_end_node"* [ %230, %229 ], [ %192, %190 ]
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 4
  %198 = bitcast %"class.std::__1::__tree_end_node"* %197 to %"class.cricket::Connection"**
  %199 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %198, align 8
  %200 = call zeroext i1 @_ZNK7cricket18BasicIceController10IsPingableEPKNS_10ConnectionEl(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* %199, i64 %7) #12
  br i1 %200, label %373, label %201

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 1, i32 0
  %203 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %202, align 8
  %204 = icmp eq %"class.std::__1::__tree_node_base"* %203, null
  br i1 %204, label %205, label %213

205:                                              ; preds = %201
  %206 = bitcast %"class.std::__1::__tree_end_node"* %196 to %"class.std::__1::__tree_node_base"*
  %207 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 2
  %208 = bitcast %"class.std::__1::__tree_end_node"* %207 to %"class.std::__1::__tree_end_node"**
  %209 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %208, align 8
  %210 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %209, i64 0, i32 0
  %211 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %210, align 8
  %212 = icmp eq %"class.std::__1::__tree_node_base"* %211, %206
  br i1 %212, label %229, label %220

213:                                              ; preds = %201, %213
  %214 = phi %"class.std::__1::__tree_node_base"* [ %216, %213 ], [ %203, %201 ]
  %215 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %214, i64 0, i32 0, i32 0
  %216 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %215, align 8
  %217 = icmp eq %"class.std::__1::__tree_node_base"* %216, null
  br i1 %217, label %218, label %213

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %214, i64 0, i32 0
  br label %229

220:                                              ; preds = %205, %220
  %221 = phi %"class.std::__1::__tree_end_node"** [ %224, %220 ], [ %208, %205 ]
  %222 = bitcast %"class.std::__1::__tree_end_node"** %221 to %"class.std::__1::__tree_node_base"**
  %223 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %222, align 8
  %224 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %223, i64 0, i32 2
  %225 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %224, align 8
  %226 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %225, i64 0, i32 0
  %227 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %226, align 8
  %228 = icmp eq %"class.std::__1::__tree_node_base"* %227, %223
  br i1 %228, label %229, label %220

229:                                              ; preds = %220, %218, %205
  %230 = phi %"class.std::__1::__tree_end_node"* [ %219, %218 ], [ %209, %205 ], [ %225, %220 ]
  %231 = icmp eq %"class.std::__1::__tree_end_node"* %230, %193
  br i1 %231, label %232, label %195

232:                                              ; preds = %229, %190
  %233 = getelementptr inbounds %"class.std::__1::set.197", %"class.std::__1::set.197"* %181, i64 0, i32 0, i32 0
  %234 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %233, align 8
  %235 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %236 = icmp eq %"class.std::__1::__tree_end_node"* %234, %235
  br i1 %236, label %368, label %237

237:                                              ; preds = %232
  %238 = ptrtoint %"class.std::__1::__tree_end_node"* %193 to i64
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 0, i32 0
  %240 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %241 = bitcast %"class.std::__1::set.197"* %184 to i64*
  br label %242

242:                                              ; preds = %237, %365
  %243 = phi %"class.std::__1::__tree_end_node"* [ %366, %365 ], [ %234, %237 ]
  %244 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %243, i64 4
  %245 = bitcast %"class.std::__1::__tree_end_node"* %244 to %"class.cricket::Connection"**
  %246 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %247 = icmp eq %"class.std::__1::__tree_end_node"* %246, %193
  %248 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %239, align 8
  br i1 %247, label %275, label %249

249:                                              ; preds = %242
  %250 = icmp eq %"class.std::__1::__tree_node_base"* %248, null
  br i1 %250, label %256, label %251

251:                                              ; preds = %249, %251
  %252 = phi %"class.std::__1::__tree_node_base"* [ %254, %251 ], [ %248, %249 ]
  %253 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %252, i64 0, i32 1
  %254 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %253, align 8
  %255 = icmp eq %"class.std::__1::__tree_node_base"* %254, null
  br i1 %255, label %267, label %251

256:                                              ; preds = %249, %256
  %257 = phi %"class.std::__1::__tree_end_node"* [ %261, %256 ], [ %193, %249 ]
  %258 = bitcast %"class.std::__1::__tree_end_node"* %257 to %"class.std::__1::__tree_node_base"*
  %259 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %257, i64 2
  %260 = bitcast %"class.std::__1::__tree_end_node"* %259 to %"class.std::__1::__tree_end_node"**
  %261 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %260, align 8
  %262 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %261, i64 0, i32 0
  %263 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %262, align 8
  %264 = icmp eq %"class.std::__1::__tree_node_base"* %263, %258
  br i1 %264, label %256, label %265

265:                                              ; preds = %256
  %266 = bitcast %"class.std::__1::__tree_end_node"* %261 to %"class.std::__1::__tree_node_base"*
  br label %267

267:                                              ; preds = %251, %265
  %268 = phi %"class.std::__1::__tree_node_base"* [ %266, %265 ], [ %252, %251 ]
  %269 = ptrtoint %"class.std::__1::__tree_node_base"* %268 to i64
  %270 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %268, i64 1
  %271 = bitcast %"class.std::__1::__tree_node_base"* %270 to %"class.cricket::Connection"**
  %272 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %271, align 8
  %273 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %245, align 8
  %274 = icmp ult %"class.cricket::Connection"* %272, %273
  br i1 %274, label %275, label %281

275:                                              ; preds = %267, %242
  %276 = phi i64 [ %269, %267 ], [ %238, %242 ]
  %277 = icmp eq %"class.std::__1::__tree_node_base"* %248, null
  br i1 %277, label %309, label %278

278:                                              ; preds = %275
  %279 = inttoptr i64 %276 to %"class.std::__1::__tree_node_base"*
  %280 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 1
  br label %309

281:                                              ; preds = %267
  %282 = icmp eq %"class.std::__1::__tree_node_base"* %248, null
  br i1 %282, label %309, label %283

283:                                              ; preds = %281, %302
  %284 = phi %"class.std::__1::__tree_node_base"* [ %303, %302 ], [ %248, %281 ]
  %285 = phi %"class.std::__1::__tree_node_base"** [ %304, %302 ], [ %240, %281 ]
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %284, i64 1
  %287 = bitcast %"class.std::__1::__tree_node_base"* %286 to %"class.cricket::Connection"**
  %288 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %287, align 8
  %289 = icmp ult %"class.cricket::Connection"* %273, %288
  br i1 %289, label %290, label %296

290:                                              ; preds = %283
  %291 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %284, i64 0, i32 0, i32 0
  %292 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %291, align 8
  %293 = icmp eq %"class.std::__1::__tree_node_base"* %292, null
  br i1 %293, label %294, label %302

294:                                              ; preds = %290
  %295 = ptrtoint %"class.std::__1::__tree_node_base"* %284 to i64
  br label %309

296:                                              ; preds = %283
  %297 = icmp ult %"class.cricket::Connection"* %288, %273
  br i1 %297, label %298, label %307

298:                                              ; preds = %296
  %299 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %284, i64 0, i32 1
  %300 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %299, align 8
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %300, null
  br i1 %301, label %305, label %302

302:                                              ; preds = %298, %290
  %303 = phi %"class.std::__1::__tree_node_base"* [ %292, %290 ], [ %300, %298 ]
  %304 = phi %"class.std::__1::__tree_node_base"** [ %291, %290 ], [ %299, %298 ]
  br label %283

305:                                              ; preds = %298
  %306 = ptrtoint %"class.std::__1::__tree_node_base"* %284 to i64
  br label %309

307:                                              ; preds = %296
  %308 = ptrtoint %"class.std::__1::__tree_node_base"* %284 to i64
  br label %309

309:                                              ; preds = %281, %275, %278, %294, %305, %307
  %310 = phi i64 [ %276, %278 ], [ %295, %294 ], [ %306, %305 ], [ %308, %307 ], [ %238, %275 ], [ %238, %281 ]
  %311 = phi %"class.std::__1::__tree_node_base"** [ %280, %278 ], [ %291, %294 ], [ %299, %305 ], [ %285, %307 ], [ %239, %275 ], [ %239, %281 ]
  %312 = bitcast %"class.std::__1::__tree_node_base"** %311 to %"class.std::__1::__tree_node"**
  %313 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %312, align 8
  %314 = icmp eq %"class.std::__1::__tree_node"* %313, null
  br i1 %314, label %315, label %337

315:                                              ; preds = %309
  %316 = call i8* @_Znwm(i64 40) #13, !noalias !11
  %317 = getelementptr inbounds i8, i8* %316, i64 32
  %318 = bitcast %"class.std::__1::__tree_end_node"* %244 to i64*
  %319 = load i64, i64* %318, align 8, !noalias !11
  %320 = bitcast i8* %317 to i64*
  store i64 %319, i64* %320, align 8, !noalias !11
  %321 = bitcast i8* %316 to %"class.std::__1::__tree_node_base"*
  %322 = getelementptr inbounds i8, i8* %316, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %316, i8 0, i64 16, i1 false) #12
  %323 = bitcast i8* %322 to i64*
  store i64 %310, i64* %323, align 8
  %324 = bitcast %"class.std::__1::__tree_node_base"** %311 to i8**
  store i8* %316, i8** %324, align 8
  %325 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %326 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %325, i64 0, i32 0
  %327 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %326, align 8
  %328 = icmp eq %"class.std::__1::__tree_node_base"* %327, null
  br i1 %328, label %332, label %329

329:                                              ; preds = %315
  %330 = ptrtoint %"class.std::__1::__tree_node_base"* %327 to i64
  store i64 %330, i64* %241, align 8
  %331 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %332

332:                                              ; preds = %329, %315
  %333 = phi %"class.std::__1::__tree_node_base"* [ %321, %315 ], [ %331, %329 ]
  %334 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %240, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %334, %"class.std::__1::__tree_node_base"* %333) #12
  %335 = load i64, i64* %185, align 8
  %336 = add i64 %335, 1
  store i64 %336, i64* %185, align 8
  br label %337

337:                                              ; preds = %309, %332
  %338 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %243, i64 1, i32 0
  %339 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %338, align 8
  %340 = icmp eq %"class.std::__1::__tree_node_base"* %339, null
  br i1 %340, label %341, label %349

341:                                              ; preds = %337
  %342 = bitcast %"class.std::__1::__tree_end_node"* %243 to %"class.std::__1::__tree_node_base"*
  %343 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %243, i64 2
  %344 = bitcast %"class.std::__1::__tree_end_node"* %343 to %"class.std::__1::__tree_end_node"**
  %345 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %344, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %345, i64 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = icmp eq %"class.std::__1::__tree_node_base"* %347, %342
  br i1 %348, label %365, label %356

349:                                              ; preds = %337, %349
  %350 = phi %"class.std::__1::__tree_node_base"* [ %352, %349 ], [ %339, %337 ]
  %351 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %350, i64 0, i32 0, i32 0
  %352 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %351, align 8
  %353 = icmp eq %"class.std::__1::__tree_node_base"* %352, null
  br i1 %353, label %354, label %349

354:                                              ; preds = %349
  %355 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %350, i64 0, i32 0
  br label %365

356:                                              ; preds = %341, %356
  %357 = phi %"class.std::__1::__tree_end_node"** [ %360, %356 ], [ %344, %341 ]
  %358 = bitcast %"class.std::__1::__tree_end_node"** %357 to %"class.std::__1::__tree_node_base"**
  %359 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %358, align 8
  %360 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %359, i64 0, i32 2
  %361 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %361, i64 0, i32 0
  %363 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %362, align 8
  %364 = icmp eq %"class.std::__1::__tree_node_base"* %363, %359
  br i1 %364, label %365, label %356

365:                                              ; preds = %356, %354, %341
  %366 = phi %"class.std::__1::__tree_end_node"* [ %355, %354 ], [ %345, %341 ], [ %361, %356 ]
  %367 = icmp eq %"class.std::__1::__tree_end_node"* %366, %235
  br i1 %367, label %368, label %242

368:                                              ; preds = %365, %232
  %369 = getelementptr inbounds %"class.std::__1::set.197", %"class.std::__1::set.197"* %181, i64 0, i32 0
  %370 = bitcast %"class.std::__1::__tree_end_node"* %235 to %"class.std::__1::__tree_node"**
  %371 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %370, align 8
  call void @_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.198"* %369, %"class.std::__1::__tree_node"* %371) #12
  store i64 0, i64* %182, align 8
  store %"class.std::__1::__tree_end_node"* %235, %"class.std::__1::__tree_end_node"** %233, align 8
  %372 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %372, align 8
  br label %373

373:                                              ; preds = %195, %368
  %374 = bitcast %"class.std::__1::vector.190"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %374) #12
  %375 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %6, i64 0, i32 0, i32 0
  %376 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %374, i8 0, i64 24, i1 false) #12
  %377 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %378 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378) #12
  %379 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.190"* %6, %"class.std::__1::vector.190"** %379, align 8
  %380 = icmp eq %"class.std::__1::__tree_end_node"* %377, %193
  br i1 %380, label %381, label %382

381:                                              ; preds = %373
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #12
  br label %455

382:                                              ; preds = %373, %418
  %383 = phi %"class.std::__1::__tree_end_node"* [ %419, %418 ], [ %377, %373 ]
  %384 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %383, i64 4
  %385 = bitcast %"class.std::__1::__tree_end_node"* %384 to %"class.cricket::Connection"**
  %386 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %385, align 8
  %387 = call zeroext i1 @_ZNK7cricket18BasicIceController10IsPingableEPKNS_10ConnectionEl(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* %386, i64 %7) #12
  br i1 %387, label %388, label %390

388:                                              ; preds = %382
  %389 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPKN7cricket10ConnectionENS_9allocatorIS5_EEEEEaSERKS5_(%"class.std::__1::back_insert_iterator"* nonnull %3, %"class.cricket::Connection"** dereferenceable(8) %385) #12
  br label %390

390:                                              ; preds = %388, %382
  %391 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %383, i64 1, i32 0
  %392 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %391, align 8
  %393 = icmp eq %"class.std::__1::__tree_node_base"* %392, null
  br i1 %393, label %394, label %402

394:                                              ; preds = %390
  %395 = bitcast %"class.std::__1::__tree_end_node"* %383 to %"class.std::__1::__tree_node_base"*
  %396 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %383, i64 2
  %397 = bitcast %"class.std::__1::__tree_end_node"* %396 to %"class.std::__1::__tree_end_node"**
  %398 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %397, align 8
  %399 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %398, i64 0, i32 0
  %400 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %399, align 8
  %401 = icmp eq %"class.std::__1::__tree_node_base"* %400, %395
  br i1 %401, label %418, label %409

402:                                              ; preds = %390, %402
  %403 = phi %"class.std::__1::__tree_node_base"* [ %405, %402 ], [ %392, %390 ]
  %404 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %403, i64 0, i32 0, i32 0
  %405 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %404, align 8
  %406 = icmp eq %"class.std::__1::__tree_node_base"* %405, null
  br i1 %406, label %407, label %402

407:                                              ; preds = %402
  %408 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %403, i64 0, i32 0
  br label %418

409:                                              ; preds = %394, %409
  %410 = phi %"class.std::__1::__tree_end_node"** [ %413, %409 ], [ %397, %394 ]
  %411 = bitcast %"class.std::__1::__tree_end_node"** %410 to %"class.std::__1::__tree_node_base"**
  %412 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %411, align 8
  %413 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %412, i64 0, i32 2
  %414 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %413, align 8
  %415 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %414, i64 0, i32 0
  %416 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %415, align 8
  %417 = icmp eq %"class.std::__1::__tree_node_base"* %416, %412
  br i1 %417, label %418, label %409

418:                                              ; preds = %409, %407, %394
  %419 = phi %"class.std::__1::__tree_end_node"* [ %408, %407 ], [ %398, %394 ], [ %414, %409 ]
  %420 = icmp eq %"class.std::__1::__tree_end_node"* %419, %193
  br i1 %420, label %421, label %382

421:                                              ; preds = %418
  %422 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %375, align 8
  %423 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %376, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #12
  %424 = icmp eq %"class.cricket::Connection"** %422, %423
  br i1 %424, label %458, label %425

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %422, i64 1
  %427 = icmp eq %"class.cricket::Connection"** %426, %423
  br i1 %427, label %449, label %428

428:                                              ; preds = %425
  %429 = ptrtoint %"class.cricket::Connection"** %422 to i64
  br label %430

430:                                              ; preds = %428, %442
  %431 = phi %"class.cricket::Connection"** [ %444, %442 ], [ %426, %428 ]
  %432 = phi i64 [ %443, %442 ], [ %429, %428 ]
  %433 = inttoptr i64 %432 to %"class.cricket::Connection"**
  %434 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %433, align 8
  %435 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %431, align 8
  %436 = icmp eq %"class.cricket::Connection"* %434, %435
  br i1 %436, label %442, label %437

437:                                              ; preds = %430
  %438 = ptrtoint %"class.cricket::Connection"** %431 to i64
  %439 = call %"class.cricket::Connection"* @_ZN7cricket18BasicIceController12MorePingableEPKNS_10ConnectionES3_(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* %434, %"class.cricket::Connection"* %435) #12
  %440 = icmp eq %"class.cricket::Connection"* %439, %435
  %441 = select i1 %440, i64 %438, i64 %432
  br label %442

442:                                              ; preds = %437, %430
  %443 = phi i64 [ %432, %430 ], [ %441, %437 ]
  %444 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %431, i64 1
  %445 = icmp eq %"class.cricket::Connection"** %444, %423
  br i1 %445, label %446, label %430

446:                                              ; preds = %442
  %447 = inttoptr i64 %443 to %"class.cricket::Connection"**
  %448 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %376, align 8
  br label %449

449:                                              ; preds = %446, %425
  %450 = phi %"class.cricket::Connection"** [ %423, %425 ], [ %448, %446 ]
  %451 = phi %"class.cricket::Connection"** [ %422, %425 ], [ %447, %446 ]
  %452 = icmp eq %"class.cricket::Connection"** %451, %450
  br i1 %452, label %455, label %453

453:                                              ; preds = %449
  %454 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %451, align 8
  br label %455

455:                                              ; preds = %453, %449, %381
  %456 = phi %"class.cricket::Connection"* [ null, %381 ], [ null, %449 ], [ %454, %453 ]
  %457 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %375, align 8
  br label %458

458:                                              ; preds = %455, %421
  %459 = phi %"class.cricket::Connection"** [ %457, %455 ], [ %422, %421 ]
  %460 = phi %"class.cricket::Connection"* [ %456, %455 ], [ null, %421 ]
  %461 = icmp eq %"class.cricket::Connection"** %459, null
  br i1 %461, label %466, label %462

462:                                              ; preds = %458
  %463 = ptrtoint %"class.cricket::Connection"** %459 to i64
  %464 = bitcast %"class.cricket::Connection"*** %376 to i64*
  store i64 %463, i64* %464, align 8
  %465 = bitcast %"class.cricket::Connection"** %459 to i8*
  call void @_ZdlPv(i8* %465) #13
  br label %466

466:                                              ; preds = %458, %462
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %374) #12
  br label %467

467:                                              ; preds = %19, %466, %169, %168
  %468 = phi %"class.cricket::Connection"* [ %163, %168 ], [ %460, %466 ], [ %170, %169 ], [ %21, %19 ]
  ret %"class.cricket::Connection"* %468
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7cricket18BasicIceController34WritableConnectionPastPingIntervalEPKNS_10ConnectionEl(%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 45
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, 3
  %7 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 4
  br i1 %6, label %8, label %13

8:                                                ; preds = %3
  %9 = tail call i32 @_ZNK7cricket9IceConfig47ice_check_interval_weak_connectivity_or_defaultEv(%"struct.cricket::IceConfig"* %7) #12
  %10 = tail call i32 @_ZNK7cricket9IceConfig33ice_check_min_interval_or_defaultEv(%"struct.cricket::IceConfig"* %7) #12
  %11 = icmp slt i32 %9, %10
  %12 = select i1 %11, i32 %10, i32 %9
  br label %36

13:                                               ; preds = %3
  %14 = tail call i32 @_ZNK7cricket9IceConfig51stable_writable_connection_ping_interval_or_defaultEv(%"struct.cricket::IceConfig"* %7) #12
  %15 = load i32, i32* @_ZN7cricket53WEAK_OR_STABILIZING_WRITABLE_CONNECTION_PING_INTERVALE, align 4
  %16 = icmp slt i32 %15, %14
  %17 = select i1 %16, i32 %15, i32 %14
  %18 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 6
  %19 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %18, align 8
  %20 = icmp eq %"class.cricket::Connection"* %19, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %19, i64 0, i32 16
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %36

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %19, i64 0, i32 17
  %27 = load i8, i8* %26, align 4, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %19, i64 0, i32 18
  %31 = load i8, i8* %30, align 1, !range !5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = tail call zeroext i1 @_ZNK7cricket10Connection6stableEl(%"class.cricket::Connection"* %1, i64 %2) #12
  %35 = select i1 %34, i32 %14, i32 %17
  br label %36

36:                                               ; preds = %8, %13, %21, %25, %29, %33
  %37 = phi i32 [ %12, %8 ], [ %17, %29 ], [ %35, %33 ], [ %17, %13 ], [ %17, %25 ], [ %17, %21 ]
  %38 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 31
  %39 = load i64, i64* %38, align 8
  %40 = sext i32 %37 to i64
  %41 = add nsw i64 %39, %40
  %42 = icmp sle i64 %41, %2
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7cricket18BasicIceController35GetBestWritableConnectionPerNetworkEv(%"class.std::__1::vector.190"* noalias sret, %"class.cricket::BasicIceController"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::map.221", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.190"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = bitcast %"class.std::__1::map.221"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  call void @_ZNK7cricket18BasicIceController26GetBestConnectionByNetworkEv(%"class.std::__1::map.221"* nonnull sret %3, %"class.cricket::BasicIceController"* %1)
  %8 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %3, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = icmp eq %"class.std::__1::__tree_end_node"* %9, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.cricket::Connection"*** %4 to i64*
  %14 = bitcast %"class.std::__1::vector.190"* %0 to i64*
  %15 = bitcast %"class.cricket::Connection"*** %5 to i64*
  br label %20

16:                                               ; preds = %114, %2
  %17 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %3, i64 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node.256"**
  %19 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %18, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.222"* nonnull %17, %"class.std::__1::__tree_node.256"* %19) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void

20:                                               ; preds = %12, %114
  %21 = phi %"class.std::__1::__tree_end_node"* [ %9, %12 ], [ %115, %114 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 5
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.cricket::Connection"**
  %24 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %23, align 8
  %25 = ptrtoint %"class.cricket::Connection"* %24 to i64
  %26 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %24, i64 0, i32 16
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %86

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %24, i64 0, i32 18
  %31 = load i8, i8* %30, align 1, !range !5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %86, label %33

33:                                               ; preds = %29
  %34 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %4, align 8
  %35 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %5, align 8
  %36 = icmp eq %"class.cricket::Connection"** %34, %35
  %37 = ptrtoint %"class.cricket::Connection"** %35 to i64
  br i1 %36, label %42, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.cricket::Connection"** %34 to i64*
  store i64 %25, i64* %39, align 8
  %40 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %34, i64 1
  %41 = ptrtoint %"class.cricket::Connection"** %40 to i64
  store i64 %41, i64* %13, align 8
  br label %86

42:                                               ; preds = %33
  %43 = ptrtoint %"class.cricket::Connection"** %34 to i64
  %44 = load i64, i64* %14, align 8
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 3
  %47 = add nsw i64 %46, 1
  %48 = icmp ugt i64 %47, 2305843009213693951
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = bitcast %"class.std::__1::vector.190"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #14
  unreachable

51:                                               ; preds = %42
  %52 = sub i64 %37, %44
  %53 = ashr exact i64 %52, 3
  %54 = icmp ult i64 %53, 1152921504606846975
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = ashr exact i64 %52, 2
  %57 = icmp ult i64 %56, %47
  %58 = select i1 %57, i64 %47, i64 %56
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %55
  %61 = icmp ugt i64 %58, 2305843009213693951
  br i1 %61, label %62, label %63

62:                                               ; preds = %60
  call void @abort() #14
  unreachable

63:                                               ; preds = %60, %51
  %64 = phi i64 [ %58, %60 ], [ 2305843009213693951, %51 ]
  %65 = shl i64 %64, 3
  %66 = call i8* @_Znwm(i64 %65) #13
  %67 = bitcast i8* %66 to %"class.cricket::Connection"**
  br label %68

68:                                               ; preds = %63, %55
  %69 = phi i64 [ %64, %63 ], [ 0, %55 ]
  %70 = phi i8* [ %66, %63 ], [ null, %55 ]
  %71 = phi %"class.cricket::Connection"** [ %67, %63 ], [ null, %55 ]
  %72 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %71, i64 %46
  %73 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %71, i64 %69
  %74 = ptrtoint %"class.cricket::Connection"** %73 to i64
  %75 = bitcast %"class.cricket::Connection"** %72 to i64*
  store i64 %25, i64* %75, align 8
  %76 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %72, i64 1
  %77 = ptrtoint %"class.cricket::Connection"** %76 to i64
  %78 = ptrtoint %"class.cricket::Connection"** %71 to i64
  %79 = icmp sgt i64 %45, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %68
  %81 = inttoptr i64 %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %81, i64 %45, i1 false) #12
  br label %82

82:                                               ; preds = %80, %68
  store i64 %78, i64* %14, align 8
  store i64 %77, i64* %13, align 8
  store i64 %74, i64* %15, align 8
  %83 = icmp eq i64 %44, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = inttoptr i64 %44 to i8*
  call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %29, %84, %82, %38, %20
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %98

90:                                               ; preds = %86
  %91 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %93 = bitcast %"class.std::__1::__tree_end_node"* %92 to %"class.std::__1::__tree_end_node"**
  %94 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 0, i32 0
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, %91
  br i1 %97, label %114, label %105

98:                                               ; preds = %86, %98
  %99 = phi %"class.std::__1::__tree_node_base"* [ %101, %98 ], [ %88, %86 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %103, label %98

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0
  br label %114

105:                                              ; preds = %90, %105
  %106 = phi %"class.std::__1::__tree_end_node"** [ %109, %105 ], [ %93, %90 ]
  %107 = bitcast %"class.std::__1::__tree_end_node"** %106 to %"class.std::__1::__tree_node_base"**
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %108, i64 0, i32 2
  %110 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 0, i32 0
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, %108
  br i1 %113, label %114, label %105

114:                                              ; preds = %105, %90, %103
  %115 = phi %"class.std::__1::__tree_end_node"* [ %104, %103 ], [ %94, %90 ], [ %110, %105 ]
  %116 = icmp eq %"class.std::__1::__tree_end_node"* %115, %10
  br i1 %116, label %16, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cricket::Connection"* @_ZN7cricket18BasicIceController41FindOldestConnectionNeedingTriggeredCheckEl(%"class.cricket::BasicIceController"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %5, align 8
  %7 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 1
  %8 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %7, align 8
  %9 = icmp eq %"class.cricket::Connection"** %6, %8
  br i1 %9, label %61, label %12

10:                                               ; preds = %34
  %11 = icmp eq %"class.cricket::Connection"* %35, null
  br i1 %11, label %61, label %38

12:                                               ; preds = %2, %34
  %13 = phi %"class.cricket::Connection"* [ %35, %34 ], [ null, %2 ]
  %14 = phi %"class.cricket::Connection"** [ %36, %34 ], [ %6, %2 ]
  %15 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK7cricket18BasicIceController10IsPingableEPKNS_10ConnectionEl(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* %15, i64 %1)
  br i1 %16, label %17, label %34

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %15, i64 0, i32 16
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %34, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %15, i64 0, i32 32
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %15, i64 0, i32 31
  %25 = load i64, i64* %24, align 8
  %26 = icmp sgt i64 %23, %25
  br i1 %26, label %27, label %34

27:                                               ; preds = %21
  %28 = icmp eq %"class.cricket::Connection"* %13, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %13, i64 0, i32 32
  %31 = load i64, i64* %30, align 8
  %32 = icmp slt i64 %23, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %27, %29
  br label %34

34:                                               ; preds = %21, %29, %33, %17, %12
  %35 = phi %"class.cricket::Connection"* [ %13, %12 ], [ %15, %33 ], [ %13, %29 ], [ %13, %21 ], [ %13, %17 ]
  %36 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %14, i64 1
  %37 = icmp eq %"class.cricket::Connection"** %36, %8
  br i1 %37, label %10, label %12

38:                                               ; preds = %10
  %39 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %39) #12
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 229, i32 3, i32 0, i32 0) #12
  %40 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %41 = bitcast %"class.std::__1::basic_ostringstream"* %40 to %"class.std::__1::basic_ostream"*
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i64 42) #12
  %43 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #12
  call void @_ZNK7cricket10Connection8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.cricket::Connection"* nonnull %35) #12
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %46 to i64
  %53 = select i1 %47, i8* %49, i8* %43
  %54 = select i1 %47, i64 %51, i64 %52
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %42, i8* %53, i64 %54) #12
  %56 = load i8, i8* %45, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %38
  %59 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %38, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #12
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %39) #12
  br label %61

61:                                               ; preds = %2, %10, %60
  %62 = phi %"class.cricket::Connection"* [ null, %10 ], [ %35, %60 ], [ null, %2 ]
  ret %"class.cricket::Connection"* %62
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7cricket18BasicIceController10IsPingableEPKNS_10ConnectionEl(%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i64) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.cricket::Connection"* %1 to %"class.cricket::Candidate"* (%"class.cricket::Connection"*)***
  %5 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %5, i64 3
  %7 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %6, align 8
  %8 = tail call dereferenceable(440) %"class.cricket::Candidate"* %7(%"class.cricket::Connection"* %1) #12
  %9 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %8, i64 0, i32 6
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %94, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %8, i64 0, i32 7
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %94, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 42
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 3
  br i1 %33, label %94, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 18
  %36 = load i8, i8* %35, align 1, !range !5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 16
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %94

42:                                               ; preds = %34, %38
  %43 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 5
  %44 = load %"struct.cricket::IceFieldTrials"*, %"struct.cricket::IceFieldTrials"** %43, align 8
  %45 = getelementptr inbounds %"struct.cricket::IceFieldTrials", %"struct.cricket::IceFieldTrials"* %44, i64 0, i32 2
  %46 = tail call zeroext i1 @_ZNK7cricket10Connection23TooManyOutstandingPingsERKN4absl8optionalIiEE(%"class.cricket::Connection"* %1, %"class.absl::optional.131"* dereferenceable(8) %45) #12
  br i1 %46, label %94, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 6
  %49 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %48, align 8
  %50 = icmp eq %"class.cricket::Connection"* %49, null
  br i1 %50, label %94, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %49, i64 0, i32 16
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %94

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %49, i64 0, i32 17
  %57 = load i8, i8* %56, align 4, !range !5
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %94, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %49, i64 0, i32 18
  %61 = load i8, i8* %60, align 1, !range !5
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %94, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %65 = load i32 (%"union.std::__1::__function::__policy_storage"*)*, i32 (%"union.std::__1::__function::__policy_storage"*)** %64, align 8
  %66 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 1, i32 0, i32 0
  %67 = tail call i32 %65(%"union.std::__1::__function::__policy_storage"* %66) #12
  %68 = icmp eq i32 %67, 2
  br i1 %68, label %69, label %88

69:                                               ; preds = %63
  %70 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %48, align 8
  %71 = icmp eq %"class.cricket::Connection"* %70, %1
  br i1 %71, label %88, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 16
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 3
  br i1 %75, label %88, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 28
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %94, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 34
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 4
  %84 = tail call i32 @_ZNK7cricket9IceConfig42backup_connection_ping_interval_or_defaultEv(%"struct.cricket::IceConfig"* %83) #12
  %85 = sext i32 %84 to i64
  %86 = add nsw i64 %82, %85
  %87 = icmp sle i64 %86, %2
  br label %94

88:                                               ; preds = %72, %63, %69
  %89 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 16
  %90 = load i32, i32* %89, align 8
  switch i32 %90, label %93 [
    i32 3, label %94
    i32 0, label %91
  ]

91:                                               ; preds = %88
  %92 = tail call zeroext i1 @_ZNK7cricket18BasicIceController34WritableConnectionPastPingIntervalEPKNS_10ConnectionEl(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* %1, i64 %2)
  br label %94

93:                                               ; preds = %88
  br label %94

94:                                               ; preds = %88, %93, %51, %55, %47, %76, %80, %59, %42, %38, %30, %3, %19, %91
  %95 = phi i1 [ %92, %91 ], [ false, %19 ], [ false, %3 ], [ false, %30 ], [ false, %38 ], [ false, %42 ], [ true, %59 ], [ true, %76 ], [ %87, %80 ], [ false, %88 ], [ true, %47 ], [ true, %55 ], [ true, %51 ], [ true, %93 ]
  ret i1 %95
}

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #1

declare void @_ZNK7cricket10Connection8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.cricket::Connection"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7cricket18BasicIceController35CalculateActiveWritablePingIntervalEPKNS_10ConnectionEl(%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 45
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, 3
  %7 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 4
  br i1 %6, label %8, label %13

8:                                                ; preds = %3
  %9 = tail call i32 @_ZNK7cricket9IceConfig47ice_check_interval_weak_connectivity_or_defaultEv(%"struct.cricket::IceConfig"* %7) #12
  %10 = tail call i32 @_ZNK7cricket9IceConfig33ice_check_min_interval_or_defaultEv(%"struct.cricket::IceConfig"* %7) #12
  %11 = icmp slt i32 %9, %10
  %12 = select i1 %11, i32 %10, i32 %9
  br label %36

13:                                               ; preds = %3
  %14 = tail call i32 @_ZNK7cricket9IceConfig51stable_writable_connection_ping_interval_or_defaultEv(%"struct.cricket::IceConfig"* %7) #12
  %15 = load i32, i32* @_ZN7cricket53WEAK_OR_STABILIZING_WRITABLE_CONNECTION_PING_INTERVALE, align 4
  %16 = icmp slt i32 %15, %14
  %17 = select i1 %16, i32 %15, i32 %14
  %18 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 6
  %19 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %18, align 8
  %20 = icmp eq %"class.cricket::Connection"* %19, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %19, i64 0, i32 16
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %36

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %19, i64 0, i32 17
  %27 = load i8, i8* %26, align 4, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %19, i64 0, i32 18
  %31 = load i8, i8* %30, align 1, !range !5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = tail call zeroext i1 @_ZNK7cricket10Connection6stableEl(%"class.cricket::Connection"* %1, i64 %2) #12
  %35 = select i1 %34, i32 %14, i32 %17
  br label %36

36:                                               ; preds = %21, %25, %13, %29, %33, %8
  %37 = phi i32 [ %12, %8 ], [ %17, %29 ], [ %35, %33 ], [ %17, %13 ], [ %17, %25 ], [ %17, %21 ]
  ret i32 %37
}

declare i32 @_ZNK7cricket9IceConfig51stable_writable_connection_ping_interval_or_defaultEv(%"struct.cricket::IceConfig"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK7cricket10Connection6stableEl(%"class.cricket::Connection"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK7cricket10Connection23TooManyOutstandingPingsERKN4absl8optionalIiEE(%"class.cricket::Connection"*, %"class.absl::optional.131"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7cricket18BasicIceController18IsBackupConnectionEPKNS_10ConnectionE(%"class.cricket::BasicIceController"*, %"class.cricket::Connection"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load i32 (%"union.std::__1::__function::__policy_storage"*)*, i32 (%"union.std::__1::__function::__policy_storage"*)** %3, align 8
  %5 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = tail call i32 %4(%"union.std::__1::__function::__policy_storage"* %5) #12
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 6
  %10 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %9, align 8
  %11 = icmp eq %"class.cricket::Connection"* %10, %1
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 16
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 3
  br label %16

16:                                               ; preds = %8, %12, %2
  %17 = phi i1 [ false, %8 ], [ false, %2 ], [ %15, %12 ]
  ret i1 %17
}

declare i32 @_ZNK7cricket9IceConfig42backup_connection_ping_interval_or_defaultEv(%"struct.cricket::IceConfig"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cricket::Connection"* @_ZN7cricket18BasicIceController12MorePingableEPKNS_10ConnectionES3_(%"class.cricket::BasicIceController"* nocapture readonly, %"class.cricket::Connection"*, %"class.cricket::Connection"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.190", align 8
  %5 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 4, i32 3
  %6 = load i8, i8* %5, align 4, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = tail call %"class.cricket::Connection"* @_ZN7cricket18BasicIceController16MostLikelyToWorkEPKNS_10ConnectionES3_(%"class.cricket::BasicIceController"* undef, %"class.cricket::Connection"* %1, %"class.cricket::Connection"* %2)
  %10 = icmp eq %"class.cricket::Connection"* %9, null
  br i1 %10, label %11, label %74

11:                                               ; preds = %3, %8
  %12 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 31
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %2, i64 0, i32 31
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %13, %15
  %17 = icmp sgt i64 %13, %15
  %18 = select i1 %17, %"class.cricket::Connection"* %2, %"class.cricket::Connection"* null
  %19 = select i1 %16, %"class.cricket::Connection"* %1, %"class.cricket::Connection"* %18
  %20 = icmp eq %"class.cricket::Connection"* %19, null
  br i1 %20, label %21, label %74

21:                                               ; preds = %11
  %22 = bitcast %"class.std::__1::vector.190"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %4, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #12
  %26 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 1
  %27 = bitcast %"class.cricket::Connection"*** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.190"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %65, label %34

34:                                               ; preds = %21
  %35 = icmp ugt i64 %32, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector.190"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %37) #14
  unreachable

38:                                               ; preds = %34
  %39 = tail call i8* @_Znwm(i64 %31) #13
  %40 = bitcast i8* %39 to %"class.cricket::Connection"**
  %41 = bitcast %"class.cricket::Connection"*** %23 to i8**
  store i8* %39, i8** %41, align 8
  %42 = bitcast %"class.std::__1::vector.190"* %4 to i8**
  store i8* %39, i8** %42, align 8
  %43 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %40, i64 %32
  store %"class.cricket::Connection"** %43, %"class.cricket::Connection"*** %24, align 8
  %44 = bitcast %"class.cricket::Connection"*** %23 to i64*
  %45 = ptrtoint i8* %39 to i64
  %46 = icmp sgt i64 %31, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %38
  %48 = lshr exact i64 %31, 3
  %49 = inttoptr i64 %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %49, i64 %31, i1 false) #12
  %50 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %40, i64 %48
  %51 = ptrtoint %"class.cricket::Connection"** %50 to i64
  br label %52

52:                                               ; preds = %38, %47
  %53 = phi i64 [ %51, %47 ], [ %45, %38 ]
  store i64 %53, i64* %44, align 8
  %54 = inttoptr i64 %53 to %"class.cricket::Connection"**
  %55 = icmp eq %"class.cricket::Connection"** %40, %54
  br i1 %55, label %67, label %56

56:                                               ; preds = %52, %62
  %57 = phi %"class.cricket::Connection"** [ %63, %62 ], [ %40, %52 ]
  %58 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %57, align 8
  %59 = icmp eq %"class.cricket::Connection"* %58, %1
  %60 = icmp eq %"class.cricket::Connection"* %58, %2
  %61 = or i1 %59, %60
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %57, i64 1
  %64 = icmp eq %"class.cricket::Connection"** %63, %54
  br i1 %64, label %67, label %56

65:                                               ; preds = %21
  %66 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** null, align 536870912
  br label %72

67:                                               ; preds = %62, %56, %52
  %68 = phi %"class.cricket::Connection"** [ %54, %52 ], [ %54, %62 ], [ %57, %56 ]
  %69 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %68, align 8
  %70 = ptrtoint i8* %39 to i64
  %71 = bitcast %"class.cricket::Connection"*** %23 to i64*
  store i64 %70, i64* %71, align 8
  tail call void @_ZdlPv(i8* nonnull %39) #13
  br label %72

72:                                               ; preds = %65, %67
  %73 = phi %"class.cricket::Connection"* [ %66, %65 ], [ %69, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  br label %74

74:                                               ; preds = %72, %11, %8
  %75 = phi %"class.cricket::Connection"* [ %9, %8 ], [ %73, %72 ], [ %19, %11 ]
  ret %"class.cricket::Connection"* %75
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cricket::Connection"* @_ZN7cricket18BasicIceController16MostLikelyToWorkEPKNS_10ConnectionES3_(%"class.cricket::BasicIceController"* nocapture readnone, %"class.cricket::Connection"*, %"class.cricket::Connection"*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.cricket::Connection"* %1 to %"class.cricket::Candidate"* (%"class.cricket::Connection"*)***
  %5 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %5, i64 2
  %7 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %6, align 8
  %8 = tail call dereferenceable(440) %"class.cricket::Candidate"* %7(%"class.cricket::Connection"* %1) #12
  %9 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %8, i64 0, i32 8
  %10 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0)) #12
  %11 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %8, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %42

20:                                               ; preds = %3
  %21 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %9, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0), i64 %10) #12
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %42

23:                                               ; preds = %20
  %24 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %4, align 8
  %25 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %24, i64 3
  %26 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %25, align 8
  %27 = tail call dereferenceable(440) %"class.cricket::Candidate"* %26(%"class.cricket::Connection"* %1) #12
  %28 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %27, i64 0, i32 8
  %29 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0)) #12
  %30 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %27, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %32 to i64
  %37 = select i1 %33, i64 %35, i64 %36
  %38 = icmp eq i64 %29, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %23
  %40 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %28, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0), i64 %29) #12
  %41 = icmp eq i32 %40, 0
  br label %42

42:                                               ; preds = %3, %20, %23, %39
  %43 = phi i1 [ false, %20 ], [ %41, %39 ], [ false, %23 ], [ false, %3 ]
  %44 = bitcast %"class.cricket::Connection"* %2 to %"class.cricket::Candidate"* (%"class.cricket::Connection"*)***
  %45 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %45, i64 2
  %47 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %46, align 8
  %48 = tail call dereferenceable(440) %"class.cricket::Candidate"* %47(%"class.cricket::Connection"* %2) #12
  %49 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %48, i64 0, i32 8
  %50 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0)) #12
  %51 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %48, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %53 to i64
  %58 = select i1 %54, i64 %56, i64 %57
  %59 = icmp eq i64 %50, %58
  br i1 %59, label %60, label %82

60:                                               ; preds = %42
  %61 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %49, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0), i64 %50) #12
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %82

63:                                               ; preds = %60
  %64 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %44, align 8
  %65 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %64, i64 3
  %66 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %65, align 8
  %67 = tail call dereferenceable(440) %"class.cricket::Candidate"* %66(%"class.cricket::Connection"* %2) #12
  %68 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %67, i64 0, i32 8
  %69 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0)) #12
  %70 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %67, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %72 to i64
  %77 = select i1 %73, i64 %75, i64 %76
  %78 = icmp eq i64 %69, %77
  br i1 %78, label %79, label %82

79:                                               ; preds = %63
  %80 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %68, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0), i64 %69) #12
  %81 = icmp eq i32 %80, 0
  br label %82

82:                                               ; preds = %42, %60, %63, %79
  %83 = phi i1 [ false, %60 ], [ %81, %79 ], [ false, %63 ], [ false, %42 ]
  %84 = xor i1 %43, true
  %85 = or i1 %83, %84
  br i1 %85, label %86, label %137

86:                                               ; preds = %82
  %87 = xor i1 %83, true
  %88 = or i1 %43, %87
  br i1 %88, label %89, label %137

89:                                               ; preds = %86
  %90 = or i1 %84, %87
  br i1 %90, label %136, label %91

91:                                               ; preds = %89
  %92 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %4, align 8
  %93 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %92, i64 2
  %94 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %93, align 8
  %95 = tail call dereferenceable(440) %"class.cricket::Candidate"* %94(%"class.cricket::Connection"* %1) #12
  %96 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %95, i64 0, i32 3
  %97 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket17UDP_PROTOCOL_NAMEE, i64 0, i64 0)) #12
  %98 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  %102 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %95, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = zext i8 %100 to i64
  %105 = select i1 %101, i64 %103, i64 %104
  %106 = icmp eq i64 %97, %105
  br i1 %106, label %107, label %110

107:                                              ; preds = %91
  %108 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %96, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket17UDP_PROTOCOL_NAMEE, i64 0, i64 0), i64 %97) #12
  %109 = icmp ne i32 %108, 0
  br label %110

110:                                              ; preds = %91, %107
  %111 = phi i1 [ %109, %107 ], [ true, %91 ]
  %112 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %44, align 8
  %113 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %112, i64 2
  %114 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %113, align 8
  %115 = tail call dereferenceable(440) %"class.cricket::Candidate"* %114(%"class.cricket::Connection"* %2) #12
  %116 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %115, i64 0, i32 3
  %117 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket17UDP_PROTOCOL_NAMEE, i64 0, i64 0)) #12
  %118 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %119 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %118, i64 0, i32 1, i32 0
  %120 = load i8, i8* %119, align 1
  %121 = icmp slt i8 %120, 0
  %122 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %115, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = zext i8 %120 to i64
  %125 = select i1 %121, i64 %123, i64 %124
  %126 = icmp eq i64 %117, %125
  br i1 %126, label %127, label %130

127:                                              ; preds = %110
  %128 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %116, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket17UDP_PROTOCOL_NAMEE, i64 0, i64 0), i64 %117) #12
  %129 = icmp eq i32 %128, 0
  br label %130

130:                                              ; preds = %110, %127
  %131 = phi i1 [ %129, %127 ], [ false, %110 ]
  %132 = or i1 %111, %131
  br i1 %132, label %133, label %137

133:                                              ; preds = %130
  %134 = xor i1 %131, true
  %135 = or i1 %111, %134
  br i1 %135, label %136, label %137

136:                                              ; preds = %89, %133
  br label %137

137:                                              ; preds = %130, %86, %82, %133, %136
  %138 = phi %"class.cricket::Connection"* [ null, %136 ], [ %2, %133 ], [ %1, %82 ], [ %2, %86 ], [ %1, %130 ]
  ret %"class.cricket::Connection"* %138
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.cricket::Connection"* @_ZN7cricket18BasicIceController19LeastRecentlyPingedEPKNS_10ConnectionES3_(%"class.cricket::BasicIceController"* nocapture readnone, %"class.cricket::Connection"* readonly, %"class.cricket::Connection"* readonly) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 31
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %2, i64 0, i32 31
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %5, %7
  %9 = icmp sgt i64 %5, %7
  %10 = select i1 %9, %"class.cricket::Connection"* %2, %"class.cricket::Connection"* null
  %11 = select i1 %8, %"class.cricket::Connection"* %1, %"class.cricket::Connection"* %10
  ret %"class.cricket::Connection"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7cricket18BasicIceController26GetBestConnectionByNetworkEv(%"class.std::__1::map.221"* noalias sret, %"class.cricket::BasicIceController"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %3, align 8
  %8 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 6
  %9 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %8, align 8
  %10 = icmp eq %"class.cricket::Connection"* %9, null
  br i1 %10, label %82, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.cricket::Connection"* %9 to %"class.rtc::Network"* (%"class.cricket::Connection"*)***
  %13 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)**, %"class.rtc::Network"* (%"class.cricket::Connection"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %13, i64 4
  %15 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %14, align 8
  %16 = tail call %"class.rtc::Network"* %15(%"class.cricket::Connection"* nonnull %9) #12
  %17 = ptrtoint %"class.rtc::Network"* %16 to i64
  %18 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.256"**
  %19 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node.256"* %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %11, %43
  %22 = phi %"class.std::__1::__tree_node.256"* [ %46, %43 ], [ %19, %11 ]
  %23 = phi %"class.std::__1::__tree_node_base"** [ %45, %43 ], [ %4, %11 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %22, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.rtc::Network"*, %"class.rtc::Network"** %24, align 8
  %26 = icmp ult %"class.rtc::Network"* %16, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %22, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %43

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %22, i64 0, i32 0, i32 0
  br label %49

33:                                               ; preds = %21
  %34 = icmp ult %"class.rtc::Network"* %25, %16
  br i1 %34, label %35, label %41

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %22, i64 0, i32 0, i32 1
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %22, i64 0, i32 0, i32 0
  br label %49

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %22, i64 0, i32 0, i32 0
  br label %49

43:                                               ; preds = %35, %27
  %44 = phi %"class.std::__1::__tree_node_base"* [ %29, %27 ], [ %37, %35 ]
  %45 = phi %"class.std::__1::__tree_node_base"** [ %28, %27 ], [ %36, %35 ]
  %46 = bitcast %"class.std::__1::__tree_node_base"* %44 to %"class.std::__1::__tree_node.256"*
  br label %21

47:                                               ; preds = %11
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %49

49:                                               ; preds = %47, %41, %39, %31
  %50 = phi %"class.std::__1::__tree_end_node"* [ %6, %47 ], [ %32, %31 ], [ %40, %39 ], [ %42, %41 ]
  %51 = phi %"class.std::__1::__tree_node_base"** [ %48, %47 ], [ %28, %31 ], [ %36, %39 ], [ %23, %41 ]
  %52 = bitcast %"class.std::__1::__tree_node_base"** %51 to %"class.std::__1::__tree_node.256"**
  %53 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node.256"* %53, null
  br i1 %54, label %55, label %79

55:                                               ; preds = %49
  %56 = tail call i8* @_Znwm(i64 48) #13, !noalias !14
  %57 = getelementptr inbounds i8, i8* %56, i64 32
  %58 = bitcast i8* %57 to i64*
  store i64 %17, i64* %58, align 8, !noalias !14
  %59 = getelementptr inbounds i8, i8* %56, i64 40
  %60 = bitcast i8* %59 to %"class.cricket::Connection"**
  store %"class.cricket::Connection"* null, %"class.cricket::Connection"** %60, align 8, !noalias !14
  %61 = bitcast i8* %56 to %"class.std::__1::__tree_node.256"*
  %62 = bitcast i8* %56 to %"class.std::__1::__tree_node_base"*
  %63 = getelementptr inbounds i8, i8* %56, i64 16
  %64 = bitcast i8* %63 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"** %64, align 8
  %65 = bitcast %"class.std::__1::__tree_node_base"** %51 to i8**
  store i8* %56, i8** %65, align 8
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %55
  %71 = ptrtoint %"class.std::__1::__tree_node_base"* %68 to i64
  %72 = bitcast %"class.std::__1::map.221"* %0 to i64*
  store i64 %71, i64* %72, align 8
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  br label %74

74:                                               ; preds = %70, %55
  %75 = phi %"class.std::__1::__tree_node_base"* [ %62, %55 ], [ %73, %70 ]
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %4, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"* %75) #12
  %77 = load i64, i64* %5, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %5, align 8
  br label %79

79:                                               ; preds = %49, %74
  %80 = phi %"class.std::__1::__tree_node.256"* [ %61, %74 ], [ %53, %49 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %80, i64 0, i32 1, i32 0, i32 1
  store %"class.cricket::Connection"* %9, %"class.cricket::Connection"** %81, align 8
  br label %82

82:                                               ; preds = %2, %79
  %83 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 7, i32 0, i32 0
  %84 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %83, align 8
  %85 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 7, i32 0, i32 1
  %86 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %85, align 8
  %87 = icmp eq %"class.cricket::Connection"** %84, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %82
  %89 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.256"**
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  %91 = bitcast %"class.std::__1::map.221"* %0 to i64*
  br label %93

92:                                               ; preds = %160, %82
  ret void

93:                                               ; preds = %88, %160
  %94 = phi %"class.cricket::Connection"** [ %84, %88 ], [ %161, %160 ]
  %95 = bitcast %"class.cricket::Connection"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = inttoptr i64 %96 to %"class.cricket::Connection"*
  %98 = inttoptr i64 %96 to %"class.rtc::Network"* (%"class.cricket::Connection"*)***
  %99 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)**, %"class.rtc::Network"* (%"class.cricket::Connection"*)*** %98, align 8
  %100 = getelementptr inbounds %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %99, i64 4
  %101 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %100, align 8
  %102 = tail call %"class.rtc::Network"* %101(%"class.cricket::Connection"* %97) #12
  %103 = ptrtoint %"class.rtc::Network"* %102 to i64
  %104 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %89, align 8
  %105 = icmp eq %"class.std::__1::__tree_node.256"* %104, null
  br i1 %105, label %132, label %106

106:                                              ; preds = %93, %128
  %107 = phi %"class.std::__1::__tree_node.256"* [ %131, %128 ], [ %104, %93 ]
  %108 = phi %"class.std::__1::__tree_node_base"** [ %130, %128 ], [ %4, %93 ]
  %109 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %107, i64 0, i32 1, i32 0, i32 0
  %110 = load %"class.rtc::Network"*, %"class.rtc::Network"** %109, align 8
  %111 = icmp ult %"class.rtc::Network"* %102, %110
  br i1 %111, label %112, label %118

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %107, i64 0, i32 0, i32 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, null
  br i1 %115, label %116, label %128

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %107, i64 0, i32 0, i32 0
  br label %132

118:                                              ; preds = %106
  %119 = icmp ult %"class.rtc::Network"* %110, %102
  br i1 %119, label %120, label %126

120:                                              ; preds = %118
  %121 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %107, i64 0, i32 0, i32 1
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, null
  br i1 %123, label %124, label %128

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %107, i64 0, i32 0, i32 0
  br label %132

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %107, i64 0, i32 0, i32 0
  br label %132

128:                                              ; preds = %120, %112
  %129 = phi %"class.std::__1::__tree_node_base"* [ %114, %112 ], [ %122, %120 ]
  %130 = phi %"class.std::__1::__tree_node_base"** [ %113, %112 ], [ %121, %120 ]
  %131 = bitcast %"class.std::__1::__tree_node_base"* %129 to %"class.std::__1::__tree_node.256"*
  br label %106

132:                                              ; preds = %93, %126, %124, %116
  %133 = phi %"class.std::__1::__tree_end_node"* [ %117, %116 ], [ %125, %124 ], [ %127, %126 ], [ %6, %93 ]
  %134 = phi %"class.std::__1::__tree_node_base"** [ %113, %116 ], [ %121, %124 ], [ %108, %126 ], [ %90, %93 ]
  %135 = bitcast %"class.std::__1::__tree_node_base"** %134 to %"class.std::__1::__tree_node.256"**
  %136 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node.256"* %136, null
  br i1 %137, label %138, label %160

138:                                              ; preds = %132
  %139 = tail call i8* @_Znwm(i64 48) #13, !noalias !17
  %140 = getelementptr inbounds i8, i8* %139, i64 32
  %141 = bitcast i8* %140 to i64*
  store i64 %103, i64* %141, align 8, !noalias !17
  %142 = getelementptr inbounds i8, i8* %139, i64 40
  %143 = bitcast i8* %142 to i64*
  store i64 %96, i64* %143, align 8, !noalias !17
  %144 = bitcast i8* %139 to %"class.std::__1::__tree_node_base"*
  %145 = getelementptr inbounds i8, i8* %139, i64 16
  %146 = bitcast i8* %145 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %133, %"class.std::__1::__tree_end_node"** %146, align 8
  %147 = bitcast %"class.std::__1::__tree_node_base"** %134 to i8**
  store i8* %139, i8** %147, align 8
  %148 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %148, i64 0, i32 0
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %138
  %153 = ptrtoint %"class.std::__1::__tree_node_base"* %150 to i64
  store i64 %153, i64* %91, align 8
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  br label %155

155:                                              ; preds = %152, %138
  %156 = phi %"class.std::__1::__tree_node_base"* [ %144, %138 ], [ %154, %152 ]
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %4, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %157, %"class.std::__1::__tree_node_base"* %156) #12
  %158 = load i64, i64* %5, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %5, align 8
  br label %160

160:                                              ; preds = %132, %155
  %161 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %94, i64 1
  %162 = icmp eq %"class.cricket::Connection"** %161, %86
  br i1 %162, label %92, label %93
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceController28HandleInitialSelectDampeningENS_18IceControllerEventEPKNS_10ConnectionE(%"struct.cricket::IceControllerInterface::SwitchResult"* noalias nocapture sret, %"class.cricket::BasicIceController"* nocapture, i64, %"class.cricket::Connection"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %7 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %8 = ptrtoint %"class.cricket::Connection"* %3 to i64
  %9 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 5
  %10 = load %"struct.cricket::IceFieldTrials"*, %"struct.cricket::IceFieldTrials"** %9, align 8
  %11 = getelementptr inbounds %"struct.cricket::IceFieldTrials", %"struct.cricket::IceFieldTrials"* %10, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 4, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %25

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"struct.cricket::IceFieldTrials", %"struct.cricket::IceFieldTrials"* %10, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 4, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = bitcast %"class.cricket::Connection"** %20 to i64*
  store i64 %8, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 2
  %24 = bitcast %"class.std::__1::vector.190"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #12
  br label %119

25:                                               ; preds = %14, %4
  %26 = tail call i64 @_ZN3rtc10TimeMillisEv() #12
  %27 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %3, i64 0, i32 32
  %28 = load i64, i64* %27, align 8
  %29 = icmp sgt i64 %28, 0
  %30 = load %"struct.cricket::IceFieldTrials"*, %"struct.cricket::IceFieldTrials"** %9, align 8
  br i1 %29, label %31, label %37

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"struct.cricket::IceFieldTrials", %"struct.cricket::IceFieldTrials"* %30, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 4, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.cricket::IceFieldTrials", %"struct.cricket::IceFieldTrials"* %30, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %43

37:                                               ; preds = %25, %31
  %38 = getelementptr inbounds %"struct.cricket::IceFieldTrials", %"struct.cricket::IceFieldTrials"* %30, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 4, !range !5
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.cricket::IceFieldTrials", %"struct.cricket::IceFieldTrials"* %30, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %43

43:                                               ; preds = %35, %41
  %44 = phi i32* [ %42, %41 ], [ %36, %35 ]
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  br label %47

47:                                               ; preds = %43, %37
  %48 = phi i64 [ 0, %37 ], [ %46, %43 ]
  %49 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 10
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  %52 = select i1 %51, i64 %26, i64 %50
  %53 = add nsw i64 %52, %48
  %54 = icmp slt i64 %26, %53
  br i1 %54, label %72, label %55

55:                                               ; preds = %47
  %56 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %56) #12
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 438, i32 3, i32 0, i32 0) #12
  %57 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %58 = bitcast %"class.std::__1::basic_ostringstream"* %57 to %"class.std::__1::basic_ostream"*
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i64 34) #12
  %60 = load i64, i64* %49, align 8
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %59, i64 %60) #12
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %61, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i64 23) #12
  %63 = sub nsw i64 %26, %52
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %62, i64 %63) #12
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 2) #12
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %56) #12
  store i64 0, i64* %49, align 8
  %66 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %66, align 8
  %67 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = bitcast %"class.cricket::Connection"** %67 to i64*
  store i64 %8, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %69, align 8
  %70 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 2
  %71 = bitcast %"class.std::__1::vector.190"* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 24, i1 false) #12
  br label %119

72:                                               ; preds = %47
  br i1 %51, label %73, label %81

73:                                               ; preds = %72
  store i64 %26, i64* %49, align 8
  %74 = bitcast %"class.rtc::DiagnosticLogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %74) #12
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %6, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 451, i32 3, i32 0, i32 0) #12
  %75 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %6, i64 0, i32 7
  %76 = bitcast %"class.std::__1::basic_ostringstream"* %75 to %"class.std::__1::basic_ostream"*
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0), i64 35) #12
  %78 = load i64, i64* %49, align 8
  %79 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %77, i64 %78) #12
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %74) #12
  %80 = load %"struct.cricket::IceFieldTrials"*, %"struct.cricket::IceFieldTrials"** %9, align 8
  br label %81

81:                                               ; preds = %73, %72
  %82 = phi %"struct.cricket::IceFieldTrials"* [ %80, %73 ], [ %30, %72 ]
  %83 = trunc i64 %48 to i32
  %84 = getelementptr inbounds %"struct.cricket::IceFieldTrials", %"struct.cricket::IceFieldTrials"* %82, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %85 = load i8, i8* %84, align 4, !range !5
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"struct.cricket::IceFieldTrials", %"struct.cricket::IceFieldTrials"* %82, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %89, %83
  %91 = select i1 %90, i32 %89, i32 %83
  br label %92

92:                                               ; preds = %81, %87
  %93 = phi i32 [ %91, %87 ], [ %83, %81 ]
  %94 = getelementptr inbounds %"struct.cricket::IceFieldTrials", %"struct.cricket::IceFieldTrials"* %82, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %95 = load i8, i8* %94, align 4, !range !5
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"struct.cricket::IceFieldTrials", %"struct.cricket::IceFieldTrials"* %82, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp slt i32 %99, %93
  %101 = select i1 %100, i32 %99, i32 %93
  br label %102

102:                                              ; preds = %92, %97
  %103 = phi i32 [ %101, %97 ], [ %93, %92 ]
  %104 = bitcast %"class.rtc::DiagnosticLogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %104) #12
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %7, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 464, i32 3, i32 0, i32 0) #12
  %105 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %7, i64 0, i32 7
  %106 = bitcast %"class.std::__1::basic_ostringstream"* %105 to %"class.std::__1::basic_ostream"*
  %107 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %106, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i64 30) #12
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %107, i32 %103) #12
  %109 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 2) #12
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %104) #12
  %110 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %110, align 8
  %111 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %111, align 8
  %112 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %113 = bitcast %"struct.cricket::IceControllerEvent"* %112 to i64*
  %114 = zext i32 %103 to i64
  %115 = shl nuw i64 %114, 32
  %116 = or i64 %115, 9
  store i64 %116, i64* %113, align 4
  %117 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 2
  %118 = bitcast %"class.std::__1::vector.190"* %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 24, i1 false) #12
  br label %119

119:                                              ; preds = %55, %102, %18
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceController22ShouldSwitchConnectionENS_18IceControllerEventEPKNS_10ConnectionE(%"struct.cricket::IceControllerInterface::SwitchResult"* noalias nocapture sret, %"class.cricket::BasicIceController"*, i64, %"class.cricket::Connection"*) unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = ptrtoint %"class.cricket::Connection"* %3 to i64
  %7 = icmp eq %"class.cricket::Connection"* %3, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %3, i64 0, i32 16
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %10, 2
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call zeroext i1 @_ZNK7cricket18BasicIceController16PresumedWritableEPKNS_10ConnectionE(%"class.cricket::BasicIceController"* %1, %"class.cricket::Connection"* nonnull %3) #12
  br i1 %13, label %14, label %18

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 6
  %16 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %15, align 8
  %17 = icmp eq %"class.cricket::Connection"* %16, %3
  br i1 %17, label %18, label %23

18:                                               ; preds = %4, %14, %12
  %19 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::vector.190"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #12
  br label %127

23:                                               ; preds = %14
  %24 = icmp eq %"class.cricket::Connection"* %16, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %23
  tail call void @_ZN7cricket18BasicIceController28HandleInitialSelectDampeningENS_18IceControllerEventEPKNS_10ConnectionE(%"struct.cricket::IceControllerInterface::SwitchResult"* sret %0, %"class.cricket::BasicIceController"* %1, i64 %2, %"class.cricket::Connection"* nonnull %3)
  br label %127

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 4, i32 17
  %28 = bitcast %"class.absl::optional.185"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i8
  %31 = lshr i64 %29, 32
  %32 = trunc i64 %31 to i32
  %33 = bitcast %"class.cricket::Connection"* %3 to %"class.rtc::Network"* (%"class.cricket::Connection"*)***
  %34 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)**, %"class.rtc::Network"* (%"class.cricket::Connection"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %34, i64 4
  %36 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %35, align 8
  %37 = tail call %"class.rtc::Network"* %36(%"class.cricket::Connection"* nonnull %3) #12
  %38 = getelementptr inbounds %"class.rtc::Network", %"class.rtc::Network"* %37, i64 0, i32 12
  %39 = load i32, i32* %38, align 8
  %40 = icmp ne i8 %30, 0
  %41 = icmp eq i32 %39, %32
  %42 = and i1 %40, %41
  %43 = bitcast %"class.cricket::Connection"* %16 to %"class.rtc::Network"* (%"class.cricket::Connection"*)***
  %44 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)**, %"class.rtc::Network"* (%"class.cricket::Connection"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %44, i64 4
  %46 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %45, align 8
  %47 = tail call %"class.rtc::Network"* %46(%"class.cricket::Connection"* nonnull %16) #12
  %48 = getelementptr inbounds %"class.rtc::Network", %"class.rtc::Network"* %47, i64 0, i32 12
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, %32
  %51 = and i1 %40, %50
  %52 = xor i1 %42, true
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %70

54:                                               ; preds = %26
  %55 = xor i1 %51, true
  %56 = or i1 %42, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %54
  %58 = tail call i32 @_ZNK7cricket10Connection18ComputeNetworkCostEv(%"class.cricket::Connection"* nonnull %3) #12
  %59 = tail call i32 @_ZNK7cricket10Connection18ComputeNetworkCostEv(%"class.cricket::Connection"* nonnull %16) #12
  %60 = icmp ugt i32 %58, %59
  br i1 %60, label %61, label %70

61:                                               ; preds = %57, %54
  %62 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %3, i64 0, i32 17
  %63 = load i8, i8* %62, align 4, !range !5
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %66, align 8
  %67 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %67, align 8
  %68 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 2
  %69 = bitcast %"class.std::__1::vector.190"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #12
  br label %127

70:                                               ; preds = %61, %57, %26
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 0, i8* %5, align 1
  %71 = tail call i64 @_ZN3rtc10TimeMillisEv() #12
  %72 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 4
  %73 = tail call i32 @_ZNK7cricket9IceConfig36receiving_switching_delay_or_defaultEv(%"struct.cricket::IceConfig"* %72) #12
  %74 = sext i32 %73 to i64
  %75 = sub nsw i64 %71, %74
  %76 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %15, align 8
  %77 = call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %1, %"class.cricket::Connection"* %76, %"class.cricket::Connection"* nonnull %3, i8 1, i64 %75, i8* nonnull %5)
  %78 = load i8, i8* %5, align 1, !range !5
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %70
  %81 = tail call i32 @_ZNK7cricket9IceConfig36receiving_switching_delay_or_defaultEv(%"struct.cricket::IceConfig"* %72) #12
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %80
  %84 = tail call i32 @_ZNK7cricket9IceConfig36receiving_switching_delay_or_defaultEv(%"struct.cricket::IceConfig"* %72) #12
  %85 = zext i32 %84 to i64
  %86 = shl nuw i64 %85, 32
  %87 = and i64 %2, 4294967295
  %88 = or i64 %86, %87
  br label %89

89:                                               ; preds = %80, %70, %83
  %90 = phi i64 [ -6148914691236517206, %70 ], [ -6148914691236517206, %80 ], [ %88, %83 ]
  %91 = phi i8 [ 0, %70 ], [ 0, %80 ], [ 1, %83 ]
  %92 = icmp slt i32 %77, 0
  br i1 %92, label %93, label %98

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %94, align 8
  %95 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %96 = bitcast %"class.cricket::Connection"** %95 to i64*
  store i64 %6, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %97, align 8
  br label %124

98:                                               ; preds = %89
  %99 = icmp eq i32 %77, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %101, align 8
  %102 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %91, i8* %102, align 8
  %103 = getelementptr inbounds i8, i8* %101, i64 17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %103, i8* nonnull align 1 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon.240 } } } }, { { { { i8, [3 x i8], %union.anon.240 } } } }* @__const._ZN7cricket18BasicIceController22ShouldSwitchConnectionENS_18IceControllerEventEPKNS_10ConnectionE.recheck_event, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 3, i1 false)
  %104 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %105 = bitcast %union.anon.240* %104 to i64*
  store i64 %90, i64* %105, align 4
  br label %124

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %3, i64 0, i32 27
  %108 = load i32, i32* %107, align 8
  %109 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %15, align 8
  %110 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %109, i64 0, i32 27
  %111 = load i32, i32* %110, align 8
  %112 = add nsw i32 %111, -10
  %113 = icmp sgt i32 %108, %112
  %114 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %113, label %119, label %115

115:                                              ; preds = %106
  store i8 1, i8* %114, align 8
  %116 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %117 = bitcast %"class.cricket::Connection"** %116 to i64*
  store i64 %6, i64* %117, align 8
  %118 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %118, align 8
  br label %124

119:                                              ; preds = %106
  store i8 0, i8* %114, align 8
  %120 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 %91, i8* %120, align 8
  %121 = getelementptr inbounds i8, i8* %114, i64 17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %121, i8* nonnull align 1 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon.240 } } } }, { { { { i8, [3 x i8], %union.anon.240 } } } }* @__const._ZN7cricket18BasicIceController22ShouldSwitchConnectionENS_18IceControllerEventEPKNS_10ConnectionE.recheck_event, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 3, i1 false)
  %122 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %123 = bitcast %union.anon.240* %122 to i64*
  store i64 %90, i64* %123, align 4
  br label %124

124:                                              ; preds = %119, %115, %100, %93
  %125 = getelementptr inbounds %"struct.cricket::IceControllerInterface::SwitchResult", %"struct.cricket::IceControllerInterface::SwitchResult"* %0, i64 0, i32 2
  %126 = bitcast %"class.std::__1::vector.190"* %125 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  br label %127

127:                                              ; preds = %65, %124, %25, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7cricket18BasicIceController11ReadyToSendEPKNS_10ConnectionE(%"class.cricket::BasicIceController"* nocapture readonly, %"class.cricket::Connection"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.cricket::Connection"* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 16
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZNK7cricket18BasicIceController16PresumedWritableEPKNS_10ConnectionE(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* nonnull %1)
  br label %10

10:                                               ; preds = %4, %2, %8
  %11 = phi i1 [ false, %2 ], [ %9, %8 ], [ true, %4 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7cricket18BasicIceController28CompareCandidatePairNetworksEPKNS_10ConnectionES3_N4absl8optionalIN3rtc11AdapterTypeEEE(%"class.cricket::BasicIceController"* nocapture readonly, %"class.cricket::Connection"*, %"class.cricket::Connection"*, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 4, i32 17
  %6 = bitcast %"class.absl::optional.185"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i8
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = bitcast %"class.cricket::Connection"* %1 to %"class.rtc::Network"* (%"class.cricket::Connection"*)***
  %12 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)**, %"class.rtc::Network"* (%"class.cricket::Connection"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %12, i64 4
  %14 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %13, align 8
  %15 = tail call %"class.rtc::Network"* %14(%"class.cricket::Connection"* %1) #12
  %16 = getelementptr inbounds %"class.rtc::Network", %"class.rtc::Network"* %15, i64 0, i32 12
  %17 = load i32, i32* %16, align 8
  %18 = icmp ne i8 %8, 0
  %19 = icmp eq i32 %17, %10
  %20 = and i1 %18, %19
  %21 = bitcast %"class.cricket::Connection"* %2 to %"class.rtc::Network"* (%"class.cricket::Connection"*)***
  %22 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)**, %"class.rtc::Network"* (%"class.cricket::Connection"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %22, i64 4
  %24 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %23, align 8
  %25 = tail call %"class.rtc::Network"* %24(%"class.cricket::Connection"* %2) #12
  %26 = getelementptr inbounds %"class.rtc::Network", %"class.rtc::Network"* %25, i64 0, i32 12
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, %10
  %29 = and i1 %18, %28
  %30 = xor i1 %20, true
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %42

32:                                               ; preds = %4
  %33 = xor i1 %29, true
  %34 = or i1 %20, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %32
  %36 = tail call i32 @_ZNK7cricket10Connection18ComputeNetworkCostEv(%"class.cricket::Connection"* %1) #12
  %37 = tail call i32 @_ZNK7cricket10Connection18ComputeNetworkCostEv(%"class.cricket::Connection"* %2) #12
  %38 = icmp ult i32 %36, %37
  %39 = icmp ugt i32 %36, %37
  %40 = sext i1 %39 to i32
  %41 = select i1 %38, i32 1, i32 %40
  br label %42

42:                                               ; preds = %4, %35, %32
  %43 = phi i32 [ -1, %32 ], [ %41, %35 ], [ 1, %4 ]
  ret i32 %43
}

declare i32 @_ZNK7cricket9IceConfig36receiving_switching_delay_or_defaultEv(%"struct.cricket::IceConfig"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, %"class.cricket::Connection"*, i8, i64, i8* nocapture) local_unnamed_addr #0 align 2 {
  %7 = icmp eq %"class.cricket::Connection"* %1, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 696, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #14
  unreachable

9:                                                ; preds = %6
  %10 = icmp eq %"class.cricket::Connection"* %2, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 697, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #14
  unreachable

12:                                               ; preds = %9
  %13 = tail call i32 @_ZNK7cricket18BasicIceController23CompareConnectionStatesEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* nonnull %1, %"class.cricket::Connection"* nonnull %2, i8 %3, i64 %4, i8* %5)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %39

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %17 = load i32 (%"union.std::__1::__function::__policy_storage"*)*, i32 (%"union.std::__1::__function::__policy_storage"*)** %16, align 8
  %18 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = tail call i32 %17(%"union.std::__1::__function::__policy_storage"* %18) #12
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %37

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 24
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %2, i64 0, i32 24
  %25 = load i32, i32* %24, align 4
  %26 = icmp ugt i32 %23, %25
  br i1 %26, label %39, label %27

27:                                               ; preds = %21
  %28 = icmp ult i32 %23, %25
  br i1 %28, label %39, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 33
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %2, i64 0, i32 33
  %33 = load i64, i64* %32, align 8
  %34 = icmp sgt i64 %31, %33
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = icmp slt i64 %31, %33
  br i1 %36, label %39, label %37

37:                                               ; preds = %35, %15
  %38 = tail call i32 @_ZNK7cricket18BasicIceController27CompareConnectionCandidatesEPKNS_10ConnectionES3_(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* nonnull %1, %"class.cricket::Connection"* nonnull %2)
  br label %39

39:                                               ; preds = %35, %29, %27, %21, %12, %37
  %40 = phi i32 [ %38, %37 ], [ %13, %12 ], [ 1, %21 ], [ -1, %27 ], [ 1, %29 ], [ -1, %35 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceController23SortAndSwitchConnectionENS_18IceControllerEventE(%"struct.cricket::IceControllerInterface::SwitchResult"* noalias sret, %"class.cricket::BasicIceController"*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %class.anon.241, align 8
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 7
  %9 = ptrtoint %"class.cricket::BasicIceController"* %1 to i64
  %10 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %8, i64 0, i32 0, i32 0
  %11 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %10, align 8
  %12 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 7, i32 0, i32 1
  %13 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %12, align 8
  %14 = bitcast %class.anon.241* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = ptrtoint %"class.cricket::Connection"** %11 to i64
  %16 = ptrtoint %"class.cricket::Connection"** %13 to i64
  %17 = bitcast %class.anon.241* %4 to i64*
  store i64 %9, i64* %17, align 8
  %18 = sub i64 %16, %15
  %19 = ashr exact i64 %18, 3
  %20 = icmp sgt i64 %18, 1024
  br i1 %20, label %21, label %32

21:                                               ; preds = %3
  %22 = icmp slt i64 %19, 1152921504606846975
  %23 = select i1 %22, i64 %19, i64 1152921504606846975
  br label %24

24:                                               ; preds = %29, %21
  %25 = phi i64 [ %30, %29 ], [ %23, %21 ]
  %26 = shl i64 %25, 3
  %27 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %26, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = lshr i64 %25, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %24

32:                                               ; preds = %29, %3
  call fastcc void @"_ZNSt3__113__stable_sortIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.cricket::Connection"** %11, %"class.cricket::Connection"** %13, %class.anon.241* nonnull dereferenceable(8) %4, i64 %19, %"class.cricket::Connection"** null, i64 0) #12
  br label %35

33:                                               ; preds = %24
  %34 = bitcast i8* %27 to %"class.cricket::Connection"**
  call fastcc void @"_ZNSt3__113__stable_sortIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.cricket::Connection"** %11, %"class.cricket::Connection"** %13, %class.anon.241* nonnull dereferenceable(8) %4, i64 %19, %"class.cricket::Connection"** nonnull %34, i64 %25) #12
  call void @_ZdlPv(i8* nonnull %27) #13
  br label %35

35:                                               ; preds = %32, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %36 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %36) #12
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 541, i32 4, i32 0, i32 0) #12
  %37 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %37 to %"class.std::__1::basic_ostream"*
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i64 8) #12
  %40 = bitcast %"class.cricket::Connection"*** %12 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.190"* %8 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 3
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %45) #12
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %46, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i64 22) #12
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %36) #12
  %48 = load i64, i64* %40, align 8
  %49 = load i64, i64* %42, align 8
  %50 = icmp eq i64 %48, %49
  br i1 %50, label %60, label %51

51:                                               ; preds = %35
  %52 = bitcast %"class.rtc::DiagnosticLogMessage"* %6 to i8*
  %53 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %6, i64 0, i32 7
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %53 to %"class.std::__1::basic_ostream"*
  %55 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %66

60:                                               ; preds = %83, %35
  %61 = phi i64 [ %48, %35 ], [ %85, %83 ]
  %62 = phi i64 [ %49, %35 ], [ %86, %83 ]
  %63 = inttoptr i64 %62 to %"class.cricket::Connection"**
  %64 = inttoptr i64 %61 to %"class.cricket::Connection"**
  %65 = icmp eq %"class.cricket::Connection"** %63, %64
  br i1 %65, label %92, label %90

66:                                               ; preds = %51, %83
  %67 = phi i64 [ 0, %51 ], [ %84, %83 ]
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %52) #12
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %6, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i32 544, i32 4, i32 0, i32 0) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #12
  %68 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %10, align 8
  %69 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %68, i64 %67
  %70 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %69, align 8
  call void @_ZNK7cricket10Connection8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.cricket::Connection"* %70) #12
  %71 = load i8, i8* %57, align 1
  %72 = icmp slt i8 %71, 0
  %73 = load i8*, i8** %58, align 8
  %74 = load i64, i64* %59, align 8
  %75 = zext i8 %71 to i64
  %76 = select i1 %72, i8* %73, i8* %55
  %77 = select i1 %72, i64 %74, i64 %75
  %78 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %54, i8* %76, i64 %77) #12
  %79 = load i8, i8* %57, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %66
  %82 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %66, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #12
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %52) #12
  %84 = add nuw i64 %67, 1
  %85 = load i64, i64* %40, align 8
  %86 = load i64, i64* %42, align 8
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = icmp ult i64 %84, %88
  br i1 %89, label %66, label %60

90:                                               ; preds = %60
  %91 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %63, align 8
  br label %92

92:                                               ; preds = %60, %90
  %93 = phi %"class.cricket::Connection"* [ %91, %90 ], [ null, %60 ]
  %94 = bitcast %"class.cricket::BasicIceController"* %1 to void (%"struct.cricket::IceControllerInterface::SwitchResult"*, %"class.cricket::BasicIceController"*, i64, %"class.cricket::Connection"*)***
  %95 = load void (%"struct.cricket::IceControllerInterface::SwitchResult"*, %"class.cricket::BasicIceController"*, i64, %"class.cricket::Connection"*)**, void (%"struct.cricket::IceControllerInterface::SwitchResult"*, %"class.cricket::BasicIceController"*, i64, %"class.cricket::Connection"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"struct.cricket::IceControllerInterface::SwitchResult"*, %"class.cricket::BasicIceController"*, i64, %"class.cricket::Connection"*)*, void (%"struct.cricket::IceControllerInterface::SwitchResult"*, %"class.cricket::BasicIceController"*, i64, %"class.cricket::Connection"*)** %95, i64 12
  %97 = load void (%"struct.cricket::IceControllerInterface::SwitchResult"*, %"class.cricket::BasicIceController"*, i64, %"class.cricket::Connection"*)*, void (%"struct.cricket::IceControllerInterface::SwitchResult"*, %"class.cricket::BasicIceController"*, i64, %"class.cricket::Connection"*)** %96, align 8
  call void %97(%"struct.cricket::IceControllerInterface::SwitchResult"* sret %0, %"class.cricket::BasicIceController"* %1, i64 %2, %"class.cricket::Connection"* %93) #12
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7cricket18BasicIceController16PresumedWritableEPKNS_10ConnectionE(%"class.cricket::BasicIceController"* nocapture readonly, %"class.cricket::Connection"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 16
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %68

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 4, i32 5
  %8 = load i8, i8* %7, align 8, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %68, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.cricket::Connection"* %1 to %"class.cricket::Candidate"* (%"class.cricket::Connection"*)***
  %12 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %12, i64 2
  %14 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %13, align 8
  %15 = tail call dereferenceable(440) %"class.cricket::Candidate"* %14(%"class.cricket::Connection"* %1) #12
  %16 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %15, i64 0, i32 8
  %17 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0)) #12
  %18 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %15, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i64 %23, i64 %24
  %26 = icmp eq i64 %17, %25
  br i1 %26, label %27, label %68

27:                                               ; preds = %10
  %28 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %16, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0), i64 %17) #12
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %68

30:                                               ; preds = %27
  %31 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %11, align 8
  %32 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %31, i64 3
  %33 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %32, align 8
  %34 = tail call dereferenceable(440) %"class.cricket::Candidate"* %33(%"class.cricket::Connection"* %1) #12
  %35 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %34, i64 0, i32 8
  %36 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0)) #12
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %34, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %39 to i64
  %44 = select i1 %40, i64 %42, i64 %43
  %45 = icmp eq i64 %36, %44
  br i1 %45, label %46, label %49

46:                                               ; preds = %30
  %47 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %35, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15RELAY_PORT_TYPEE, i64 0, i64 0), i64 %36) #12
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %68, label %49

49:                                               ; preds = %30, %46
  %50 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %11, align 8
  %51 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %50, i64 3
  %52 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %51, align 8
  %53 = tail call dereferenceable(440) %"class.cricket::Candidate"* %52(%"class.cricket::Connection"* %1) #12
  %54 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %53, i64 0, i32 8
  %55 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15PRFLX_PORT_TYPEE, i64 0, i64 0)) #12
  %56 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %53, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = zext i8 %58 to i64
  %63 = select i1 %59, i64 %61, i64 %62
  %64 = icmp eq i64 %55, %63
  br i1 %64, label %65, label %68

65:                                               ; preds = %49
  %66 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %54, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN7cricket15PRFLX_PORT_TYPEE, i64 0, i64 0), i64 %55) #12
  %67 = icmp eq i32 %66, 0
  br label %68

68:                                               ; preds = %10, %65, %49, %6, %46, %27, %2
  %69 = phi i1 [ false, %27 ], [ false, %6 ], [ false, %2 ], [ true, %46 ], [ %67, %65 ], [ false, %49 ], [ false, %10 ]
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7cricket18BasicIceController23CompareConnectionStatesEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* nocapture readonly, %"class.cricket::Connection"*, %"class.cricket::Connection"*, i8, i64, i8* nocapture) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 16
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZNK7cricket18BasicIceController16PresumedWritableEPKNS_10ConnectionE(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* %1)
  br label %12

12:                                               ; preds = %10, %6
  %13 = phi i1 [ true, %6 ], [ %11, %10 ]
  %14 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %2, i64 0, i32 16
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = tail call zeroext i1 @_ZNK7cricket18BasicIceController16PresumedWritableEPKNS_10ConnectionE(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* %2)
  %19 = xor i1 %13, true
  %20 = or i1 %18, %19
  br i1 %20, label %21, label %68

21:                                               ; preds = %12, %17
  %22 = phi i1 [ %18, %17 ], [ true, %12 ]
  %23 = xor i1 %22, true
  %24 = or i1 %13, %23
  br i1 %24, label %25, label %68

25:                                               ; preds = %21
  %26 = load i32, i32* %7, align 8
  %27 = load i32, i32* %14, align 8
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %68, label %29

29:                                               ; preds = %25
  %30 = icmp slt i32 %27, %26
  br i1 %30, label %68, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 17
  %33 = load i8, i8* %32, align 4, !range !5
  %34 = icmp eq i8 %33, 0
  %35 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %2, i64 0, i32 17
  %36 = load i8, i8* %35, align 4, !range !5
  %37 = icmp ne i8 %36, 0
  br i1 %34, label %39, label %38

38:                                               ; preds = %31
  br i1 %37, label %52, label %68

39:                                               ; preds = %31
  br i1 %37, label %40, label %52

40:                                               ; preds = %39
  %41 = icmp eq i8 %3, 0
  br i1 %41, label %68, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 35
  %44 = load i64, i64* %43, align 8
  %45 = icmp sgt i64 %44, %4
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %2, i64 0, i32 35
  %48 = load i64, i64* %47, align 8
  %49 = icmp sgt i64 %48, %4
  br i1 %49, label %50, label %68

50:                                               ; preds = %46, %42
  store i8 1, i8* %5, align 1
  %51 = load i32, i32* %7, align 8
  br label %52

52:                                               ; preds = %38, %50, %39
  %53 = phi i32 [ %26, %38 ], [ %51, %50 ], [ %26, %39 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %52
  %56 = load i32, i32* %14, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %67

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 18
  %60 = load i8, i8* %59, align 1, !range !5
  %61 = icmp eq i8 %60, 0
  %62 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %2, i64 0, i32 18
  %63 = load i8, i8* %62, align 1, !range !5
  %64 = icmp ne i8 %63, 0
  br i1 %61, label %66, label %65

65:                                               ; preds = %58
  br i1 %64, label %67, label %68

66:                                               ; preds = %58
  br i1 %64, label %68, label %67

67:                                               ; preds = %65, %66, %55, %52
  br label %68

68:                                               ; preds = %40, %66, %65, %46, %38, %29, %25, %21, %17, %67
  %69 = phi i32 [ 0, %67 ], [ 1, %17 ], [ -1, %21 ], [ 1, %25 ], [ -1, %29 ], [ 1, %38 ], [ -1, %46 ], [ -1, %40 ], [ 1, %65 ], [ -1, %66 ]
  ret i32 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7cricket18BasicIceController27CompareConnectionCandidatesEPKNS_10ConnectionES3_(%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, %"class.cricket::Connection"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 4, i32 17
  %5 = bitcast %"class.absl::optional.185"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i8
  %8 = lshr i64 %6, 32
  %9 = trunc i64 %8 to i32
  %10 = bitcast %"class.cricket::Connection"* %1 to %"class.rtc::Network"* (%"class.cricket::Connection"*)***
  %11 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)**, %"class.rtc::Network"* (%"class.cricket::Connection"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %11, i64 4
  %13 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %12, align 8
  %14 = tail call %"class.rtc::Network"* %13(%"class.cricket::Connection"* %1) #12
  %15 = getelementptr inbounds %"class.rtc::Network", %"class.rtc::Network"* %14, i64 0, i32 12
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i8 %7, 0
  %18 = icmp eq i32 %16, %9
  %19 = and i1 %17, %18
  %20 = bitcast %"class.cricket::Connection"* %2 to %"class.rtc::Network"* (%"class.cricket::Connection"*)***
  %21 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)**, %"class.rtc::Network"* (%"class.cricket::Connection"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %21, i64 4
  %23 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %22, align 8
  %24 = tail call %"class.rtc::Network"* %23(%"class.cricket::Connection"* %2) #12
  %25 = getelementptr inbounds %"class.rtc::Network", %"class.rtc::Network"* %24, i64 0, i32 12
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %9
  %28 = and i1 %17, %27
  %29 = xor i1 %19, true
  %30 = or i1 %28, %29
  br i1 %30, label %31, label %103

31:                                               ; preds = %3
  %32 = xor i1 %28, true
  %33 = or i1 %19, %32
  br i1 %33, label %34, label %103

34:                                               ; preds = %31
  %35 = tail call i32 @_ZNK7cricket10Connection18ComputeNetworkCostEv(%"class.cricket::Connection"* %1) #12
  %36 = tail call i32 @_ZNK7cricket10Connection18ComputeNetworkCostEv(%"class.cricket::Connection"* %2) #12
  %37 = icmp ult i32 %35, %36
  br i1 %37, label %103, label %38

38:                                               ; preds = %34
  %39 = icmp ugt i32 %35, %36
  br i1 %39, label %103, label %40

40:                                               ; preds = %38
  %41 = bitcast %"class.cricket::Connection"* %1 to i64 (%"class.cricket::Connection"*)***
  %42 = load i64 (%"class.cricket::Connection"*)**, i64 (%"class.cricket::Connection"*)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.cricket::Connection"*)*, i64 (%"class.cricket::Connection"*)** %42, i64 6
  %44 = load i64 (%"class.cricket::Connection"*)*, i64 (%"class.cricket::Connection"*)** %43, align 8
  %45 = tail call i64 %44(%"class.cricket::Connection"* %1) #12
  %46 = bitcast %"class.cricket::Connection"* %2 to i64 (%"class.cricket::Connection"*)***
  %47 = load i64 (%"class.cricket::Connection"*)**, i64 (%"class.cricket::Connection"*)*** %46, align 8
  %48 = getelementptr inbounds i64 (%"class.cricket::Connection"*)*, i64 (%"class.cricket::Connection"*)** %47, i64 6
  %49 = load i64 (%"class.cricket::Connection"*)*, i64 (%"class.cricket::Connection"*)** %48, align 8
  %50 = tail call i64 %49(%"class.cricket::Connection"* %2) #12
  %51 = icmp ugt i64 %45, %50
  br i1 %51, label %103, label %52

52:                                               ; preds = %40
  %53 = load i64 (%"class.cricket::Connection"*)**, i64 (%"class.cricket::Connection"*)*** %41, align 8
  %54 = getelementptr inbounds i64 (%"class.cricket::Connection"*)*, i64 (%"class.cricket::Connection"*)** %53, i64 6
  %55 = load i64 (%"class.cricket::Connection"*)*, i64 (%"class.cricket::Connection"*)** %54, align 8
  %56 = tail call i64 %55(%"class.cricket::Connection"* %1) #12
  %57 = load i64 (%"class.cricket::Connection"*)**, i64 (%"class.cricket::Connection"*)*** %46, align 8
  %58 = getelementptr inbounds i64 (%"class.cricket::Connection"*)*, i64 (%"class.cricket::Connection"*)** %57, i64 6
  %59 = load i64 (%"class.cricket::Connection"*)*, i64 (%"class.cricket::Connection"*)** %58, align 8
  %60 = tail call i64 %59(%"class.cricket::Connection"* %2) #12
  %61 = icmp ult i64 %56, %60
  br i1 %61, label %103, label %62

62:                                               ; preds = %52
  %63 = bitcast %"class.cricket::Connection"* %1 to %"class.cricket::Candidate"* (%"class.cricket::Connection"*)***
  %64 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %63, align 8
  %65 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %64, i64 3
  %66 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %65, align 8
  %67 = tail call dereferenceable(440) %"class.cricket::Candidate"* %66(%"class.cricket::Connection"* %1) #12
  %68 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %67, i64 0, i32 11
  %69 = load i32, i32* %68, align 4
  %70 = bitcast %"class.cricket::Connection"* %1 to i32 (%"class.cricket::Connection"*)***
  %71 = load i32 (%"class.cricket::Connection"*)**, i32 (%"class.cricket::Connection"*)*** %70, align 8
  %72 = getelementptr inbounds i32 (%"class.cricket::Connection"*)*, i32 (%"class.cricket::Connection"*)** %71, i64 5
  %73 = load i32 (%"class.cricket::Connection"*)*, i32 (%"class.cricket::Connection"*)** %72, align 8
  %74 = tail call i32 %73(%"class.cricket::Connection"* %1) #12
  %75 = bitcast %"class.cricket::Connection"* %2 to %"class.cricket::Candidate"* (%"class.cricket::Connection"*)***
  %76 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)**, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*** %75, align 8
  %77 = getelementptr inbounds %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %76, i64 3
  %78 = load %"class.cricket::Candidate"* (%"class.cricket::Connection"*)*, %"class.cricket::Candidate"* (%"class.cricket::Connection"*)** %77, align 8
  %79 = tail call dereferenceable(440) %"class.cricket::Candidate"* %78(%"class.cricket::Connection"* %2) #12
  %80 = getelementptr inbounds %"class.cricket::Candidate", %"class.cricket::Candidate"* %79, i64 0, i32 11
  %81 = load i32, i32* %80, align 4
  %82 = bitcast %"class.cricket::Connection"* %2 to i32 (%"class.cricket::Connection"*)***
  %83 = load i32 (%"class.cricket::Connection"*)**, i32 (%"class.cricket::Connection"*)*** %82, align 8
  %84 = getelementptr inbounds i32 (%"class.cricket::Connection"*)*, i32 (%"class.cricket::Connection"*)** %83, i64 5
  %85 = load i32 (%"class.cricket::Connection"*)*, i32 (%"class.cricket::Connection"*)** %84, align 8
  %86 = tail call i32 %85(%"class.cricket::Connection"* %2) #12
  %87 = add i32 %74, %69
  %88 = sub i32 %87, %81
  %89 = sub i32 %88, %86
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %62
  %92 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %93 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.cricket::Connection"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.cricket::Connection"*)** %92, align 8
  %94 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 3, i32 0, i32 0
  %95 = tail call zeroext i1 %93(%"union.std::__1::__function::__policy_storage"* %94, %"class.cricket::Connection"* %1) #12
  %96 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.cricket::Connection"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.cricket::Connection"*)** %92, align 8
  %97 = tail call zeroext i1 %96(%"union.std::__1::__function::__policy_storage"* %94, %"class.cricket::Connection"* %2) #12
  %98 = xor i1 %97, true
  %99 = or i1 %95, %98
  br i1 %99, label %100, label %103

100:                                              ; preds = %91
  %101 = and i1 %95, %98
  %102 = sext i1 %101 to i32
  ret i32 %102

103:                                              ; preds = %38, %34, %3, %31, %62, %91, %52, %40
  %104 = phi i32 [ -1, %38 ], [ 1, %40 ], [ -1, %52 ], [ %89, %62 ], [ 1, %91 ], [ 1, %3 ], [ -1, %31 ], [ 1, %34 ]
  ret i32 %104
}

declare i32 @_ZNK7cricket10Connection18ComputeNetworkCostEv(%"class.cricket::Connection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7cricket18BasicIceController16PruneConnectionsEv(%"class.std::__1::vector.190"* noalias sret, %"class.cricket::BasicIceController"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::map.221", align 8
  %4 = alloca %"class.rtc::IPAddress", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector.190"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = bitcast %"class.std::__1::map.221"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.std::__1::map.221"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZNK7cricket18BasicIceController26GetBestConnectionByNetworkEv(%"class.std::__1::map.221"* nonnull sret %3, %"class.cricket::BasicIceController"* %1)
  %13 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 7, i32 0, i32 0
  %14 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %13, align 8
  %15 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 7, i32 0, i32 1
  %16 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %15, align 8
  %17 = icmp eq %"class.cricket::Connection"** %14, %16
  br i1 %17, label %28, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %1, i64 0, i32 6
  %20 = bitcast %"class.rtc::IPAddress"* %4 to i8*
  %21 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node.256"**
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 0, i32 0
  %24 = bitcast %"class.std::__1::map.221"* %3 to i64*
  %25 = bitcast %"class.cricket::Connection"*** %5 to i64*
  %26 = bitcast %"class.std::__1::vector.190"* %0 to i64*
  %27 = bitcast %"class.cricket::Connection"*** %6 to i64*
  br label %33

28:                                               ; preds = %185, %2
  %29 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %3, i64 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::map.221", %"class.std::__1::map.221"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node.256"**
  %32 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %31, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.222"* nonnull %29, %"class.std::__1::__tree_node.256"* %32) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  ret void

33:                                               ; preds = %18, %185
  %34 = phi %"class.cricket::Connection"** [ %14, %18 ], [ %186, %185 ]
  %35 = bitcast %"class.cricket::Connection"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #12
  %38 = inttoptr i64 %36 to %"class.cricket::Connection"*
  %39 = inttoptr i64 %36 to %"class.rtc::Network"* (%"class.cricket::Connection"*)***
  %40 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)**, %"class.rtc::Network"* (%"class.cricket::Connection"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %40, i64 4
  %42 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %41, align 8
  %43 = call %"class.rtc::Network"* %42(%"class.cricket::Connection"* %38) #12
  call void @_ZNK3rtc7Network9GetBestIPEv(%"class.rtc::IPAddress"* nonnull sret %4, %"class.rtc::Network"* %43) #12
  %44 = call zeroext i1 @_ZN3rtc7IPIsAnyERKNS_9IPAddressE(%"class.rtc::IPAddress"* nonnull dereferenceable(32) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #12
  br i1 %44, label %112, label %45

45:                                               ; preds = %33
  %46 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)**, %"class.rtc::Network"* (%"class.cricket::Connection"*)*** %39, align 8
  %47 = getelementptr inbounds %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %46, i64 4
  %48 = load %"class.rtc::Network"* (%"class.cricket::Connection"*)*, %"class.rtc::Network"* (%"class.cricket::Connection"*)** %47, align 8
  %49 = call %"class.rtc::Network"* %48(%"class.cricket::Connection"* %38) #12
  %50 = ptrtoint %"class.rtc::Network"* %49 to i64
  %51 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %22, align 8
  %52 = icmp eq %"class.std::__1::__tree_node.256"* %51, null
  br i1 %52, label %79, label %53

53:                                               ; preds = %45, %75
  %54 = phi %"class.std::__1::__tree_node.256"* [ %78, %75 ], [ %51, %45 ]
  %55 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %10, %45 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %54, i64 0, i32 1, i32 0, i32 0
  %57 = load %"class.rtc::Network"*, %"class.rtc::Network"** %56, align 8
  %58 = icmp ult %"class.rtc::Network"* %49, %57
  br i1 %58, label %59, label %65

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %54, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %75

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %54, i64 0, i32 0, i32 0
  br label %79

65:                                               ; preds = %53
  %66 = icmp ult %"class.rtc::Network"* %57, %49
  br i1 %66, label %67, label %73

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %54, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %54, i64 0, i32 0, i32 0
  br label %79

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %54, i64 0, i32 0, i32 0
  br label %79

75:                                               ; preds = %67, %59
  %76 = phi %"class.std::__1::__tree_node_base"* [ %61, %59 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %60, %59 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node.256"*
  br label %53

79:                                               ; preds = %45, %73, %71, %63
  %80 = phi %"class.std::__1::__tree_end_node"* [ %64, %63 ], [ %72, %71 ], [ %74, %73 ], [ %21, %45 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %60, %63 ], [ %68, %71 ], [ %55, %73 ], [ %23, %45 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"** %81 to %"class.std::__1::__tree_node.256"**
  %83 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node.256"* %83, null
  br i1 %84, label %85, label %108

85:                                               ; preds = %79
  %86 = call i8* @_Znwm(i64 48) #13, !noalias !20
  %87 = getelementptr inbounds i8, i8* %86, i64 32
  %88 = bitcast i8* %87 to i64*
  store i64 %50, i64* %88, align 8, !noalias !20
  %89 = getelementptr inbounds i8, i8* %86, i64 40
  %90 = bitcast i8* %89 to %"class.cricket::Connection"**
  store %"class.cricket::Connection"* null, %"class.cricket::Connection"** %90, align 8, !noalias !20
  %91 = bitcast i8* %86 to %"class.std::__1::__tree_node.256"*
  %92 = bitcast i8* %86 to %"class.std::__1::__tree_node_base"*
  %93 = getelementptr inbounds i8, i8* %86, i64 16
  %94 = bitcast i8* %93 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %80, %"class.std::__1::__tree_end_node"** %94, align 8
  %95 = bitcast %"class.std::__1::__tree_node_base"** %81 to i8**
  store i8* %86, i8** %95, align 8
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %85
  %101 = ptrtoint %"class.std::__1::__tree_node_base"* %98 to i64
  store i64 %101, i64* %24, align 8
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  br label %103

103:                                              ; preds = %100, %85
  %104 = phi %"class.std::__1::__tree_node_base"* [ %92, %85 ], [ %102, %100 ]
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %10, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %105, %"class.std::__1::__tree_node_base"* %104) #12
  %106 = load i64, i64* %11, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %11, align 8
  br label %108

108:                                              ; preds = %79, %103
  %109 = phi %"class.std::__1::__tree_node.256"* [ %91, %103 ], [ %83, %79 ]
  %110 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %109, i64 0, i32 1, i32 0, i32 1
  %111 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %110, align 8
  br label %112

112:                                              ; preds = %33, %108
  %113 = phi %"class.cricket::Connection"* [ %111, %108 ], [ %37, %33 ]
  %114 = icmp eq %"class.cricket::Connection"* %113, null
  %115 = icmp eq %"class.cricket::Connection"* %113, %38
  %116 = or i1 %114, %115
  br i1 %116, label %185, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %113, i64 0, i32 16
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %185

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %113, i64 0, i32 17
  %123 = load i8, i8* %122, align 4, !range !5
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %185, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %113, i64 0, i32 18
  %127 = load i8, i8* %126, align 1, !range !5
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %185, label %129

129:                                              ; preds = %125
  %130 = call i32 @_ZNK7cricket18BasicIceController27CompareConnectionCandidatesEPKNS_10ConnectionES3_(%"class.cricket::BasicIceController"* %1, %"class.cricket::Connection"* nonnull %113, %"class.cricket::Connection"* %38)
  %131 = icmp sgt i32 %130, -1
  br i1 %131, label %132, label %185

132:                                              ; preds = %129
  %133 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %5, align 8
  %134 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %6, align 8
  %135 = icmp eq %"class.cricket::Connection"** %133, %134
  %136 = ptrtoint %"class.cricket::Connection"** %134 to i64
  br i1 %135, label %141, label %137

137:                                              ; preds = %132
  %138 = bitcast %"class.cricket::Connection"** %133 to i64*
  store i64 %36, i64* %138, align 8
  %139 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %133, i64 1
  %140 = ptrtoint %"class.cricket::Connection"** %139 to i64
  store i64 %140, i64* %25, align 8
  br label %185

141:                                              ; preds = %132
  %142 = ptrtoint %"class.cricket::Connection"** %133 to i64
  %143 = load i64, i64* %26, align 8
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = add nsw i64 %145, 1
  %147 = icmp ugt i64 %146, 2305843009213693951
  br i1 %147, label %148, label %150

148:                                              ; preds = %141
  %149 = bitcast %"class.std::__1::vector.190"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %149) #14
  unreachable

150:                                              ; preds = %141
  %151 = sub i64 %136, %143
  %152 = ashr exact i64 %151, 3
  %153 = icmp ult i64 %152, 1152921504606846975
  br i1 %153, label %154, label %162

154:                                              ; preds = %150
  %155 = ashr exact i64 %151, 2
  %156 = icmp ult i64 %155, %146
  %157 = select i1 %156, i64 %146, i64 %155
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %167, label %159

159:                                              ; preds = %154
  %160 = icmp ugt i64 %157, 2305843009213693951
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  call void @abort() #14
  unreachable

162:                                              ; preds = %159, %150
  %163 = phi i64 [ %157, %159 ], [ 2305843009213693951, %150 ]
  %164 = shl i64 %163, 3
  %165 = call i8* @_Znwm(i64 %164) #13
  %166 = bitcast i8* %165 to %"class.cricket::Connection"**
  br label %167

167:                                              ; preds = %162, %154
  %168 = phi i64 [ %163, %162 ], [ 0, %154 ]
  %169 = phi i8* [ %165, %162 ], [ null, %154 ]
  %170 = phi %"class.cricket::Connection"** [ %166, %162 ], [ null, %154 ]
  %171 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %170, i64 %145
  %172 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %170, i64 %168
  %173 = ptrtoint %"class.cricket::Connection"** %172 to i64
  %174 = bitcast %"class.cricket::Connection"** %171 to i64*
  store i64 %36, i64* %174, align 8
  %175 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %171, i64 1
  %176 = ptrtoint %"class.cricket::Connection"** %175 to i64
  %177 = ptrtoint %"class.cricket::Connection"** %170 to i64
  %178 = icmp sgt i64 %144, 0
  br i1 %178, label %179, label %181

179:                                              ; preds = %167
  %180 = inttoptr i64 %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %180, i64 %144, i1 false) #12
  br label %181

181:                                              ; preds = %179, %167
  store i64 %177, i64* %26, align 8
  store i64 %176, i64* %25, align 8
  store i64 %173, i64* %27, align 8
  %182 = icmp eq i64 %143, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = inttoptr i64 %143 to i8*
  call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %117, %121, %183, %181, %137, %112, %129, %125
  %186 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %34, i64 1
  %187 = icmp eq %"class.cricket::Connection"** %186, %16
  br i1 %187, label %28, label %33
}

declare zeroext i1 @_ZN3rtc7IPIsAnyERKNS_9IPAddressE(%"class.rtc::IPAddress"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7cricket18BasicIceController19GetUseCandidateAttrEPKNS_10ConnectionENS_14NominationModeENS_7IceModeE(%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i32, i32) unnamed_addr #0 align 2 {
  switch i32 %2, label %35 [
    i32 2, label %13
    i32 1, label %5
  ]

5:                                                ; preds = %4
  %6 = icmp eq i32 %3, 1
  br i1 %6, label %7, label %35

7:                                                ; preds = %5
  %8 = bitcast %"class.cricket::BasicIceController"* %0 to i1 (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i32, i32)***
  %9 = load i1 (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i32, i32)**, i1 (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i32, i32)*, i1 (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i32, i32)** %9, i64 9
  %11 = load i1 (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i32, i32)*, i1 (%"class.cricket::BasicIceController"*, %"class.cricket::Connection"*, i32, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* %1, i32 0, i32 1) #12
  br label %35

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 6
  %15 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %14, align 8
  %16 = icmp eq %"class.cricket::Connection"* %15, %1
  %17 = icmp eq i32 %3, 1
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  br i1 %16, label %19, label %35

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %1, i64 0, i32 16
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br label %35

23:                                               ; preds = %13
  %24 = icmp eq %"class.cricket::Connection"* %15, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %15, i64 0, i32 16
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = tail call i32 @_ZNK7cricket18BasicIceController27CompareConnectionCandidatesEPKNS_10ConnectionES3_(%"class.cricket::BasicIceController"* %0, %"class.cricket::Connection"* nonnull %15, %"class.cricket::Connection"* %1)
  %31 = icmp slt i32 %30, 0
  br label %32

32:                                               ; preds = %23, %29, %25
  %33 = phi i1 [ true, %25 ], [ true, %23 ], [ %31, %29 ]
  %34 = or i1 %16, %33
  br label %35

35:                                               ; preds = %4, %32, %19, %18, %5, %7
  %36 = phi i1 [ %12, %7 ], [ true, %5 ], [ %34, %32 ], [ false, %18 ], [ %22, %19 ], [ false, %4 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.cricket::Connection"**, i64 } @_ZNK7cricket18BasicIceController11connectionsEv(%"class.cricket::BasicIceController"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %2, align 8
  %4 = getelementptr inbounds %"class.cricket::BasicIceController", %"class.cricket::BasicIceController"* %0, i64 0, i32 7, i32 0, i32 1
  %5 = bitcast %"class.cricket::Connection"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = ptrtoint %"class.cricket::Connection"** %3 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp eq i64 %8, 0
  %11 = select i1 %10, %"class.cricket::Connection"** null, %"class.cricket::Connection"** %3
  %12 = insertvalue { %"class.cricket::Connection"**, i64 } undef, %"class.cricket::Connection"** %11, 0
  %13 = insertvalue { %"class.cricket::Connection"**, i64 } %12, i64 %9, 1
  ret { %"class.cricket::Connection"**, i64 } %13
}

declare i32 @_ZNK7cricket9IceConfig47ice_check_interval_weak_connectivity_or_defaultEv(%"struct.cricket::IceConfig"*) local_unnamed_addr #1

declare i32 @_ZNK7cricket9IceConfig33ice_check_min_interval_or_defaultEv(%"struct.cricket::IceConfig"*) local_unnamed_addr #1

declare i32 @_ZNK7cricket9IceConfig49ice_check_interval_strong_connectivity_or_defaultEv(%"struct.cricket::IceConfig"*) local_unnamed_addr #1

declare i32 @_ZNK7cricket9IceConfig28receiving_timeout_or_defaultEv(%"struct.cricket::IceConfig"*) local_unnamed_addr #1

declare void @_ZNK3rtc7Network9GetBestIPEv(%"class.rtc::IPAddress"* sret, %"class.rtc::Network"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #7

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.198"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.198"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.198"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !5
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !5
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !5
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !5
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !5
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !5
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !5
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !5
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !5
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !5
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !5
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !5
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !5
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIPKN7cricket10ConnectionENS_9allocatorIS5_EEEEEaSERKS5_(%"class.std::__1::back_insert_iterator"*, %"class.cricket::Connection"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.190"*, %"class.std::__1::vector.190"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %4, i64 0, i32 0, i32 1
  %6 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %7, align 8
  %9 = icmp eq %"class.cricket::Connection"** %6, %8
  %10 = ptrtoint %"class.cricket::Connection"** %8 to i64
  br i1 %9, label %18, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.cricket::Connection"** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.cricket::Connection"** %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 1
  %16 = ptrtoint %"class.cricket::Connection"** %15 to i64
  %17 = bitcast %"class.cricket::Connection"*** %5 to i64*
  store i64 %16, i64* %17, align 8
  br label %77

18:                                               ; preds = %2
  %19 = ptrtoint %"class.cricket::Connection"** %6 to i64
  %20 = bitcast %"class.cricket::Connection"*** %5 to i64*
  %21 = bitcast %"class.std::__1::vector.190"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.190"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #14
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"class.cricket::Connection"*** %7 to i64*
  %31 = sub i64 %10, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 1152921504606846975
  br i1 %33, label %34, label %42

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = icmp ugt i64 %37, 2305843009213693951
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @abort() #14
  unreachable

42:                                               ; preds = %39, %29
  %43 = phi i64 [ %37, %39 ], [ 2305843009213693951, %29 ]
  %44 = shl i64 %43, 3
  %45 = tail call i8* @_Znwm(i64 %44) #13
  %46 = bitcast i8* %45 to %"class.cricket::Connection"**
  br label %47

47:                                               ; preds = %42, %34
  %48 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %49 = phi %"class.cricket::Connection"** [ %46, %42 ], [ null, %34 ]
  %50 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %49, i64 %24
  %51 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %49, i64 %48
  %52 = ptrtoint %"class.cricket::Connection"** %51 to i64
  %53 = bitcast %"class.cricket::Connection"** %1 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.cricket::Connection"** %50 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %50, i64 1
  %57 = ptrtoint %"class.cricket::Connection"** %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.190", %"class.std::__1::vector.190"* %4, i64 0, i32 0, i32 0
  %59 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %58, align 8
  %60 = load i64, i64* %20, align 8
  %61 = ptrtoint %"class.cricket::Connection"** %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %50, i64 %64
  %66 = ptrtoint %"class.cricket::Connection"** %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %47
  %69 = bitcast %"class.cricket::Connection"** %65 to i8*
  %70 = bitcast %"class.cricket::Connection"** %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #12
  %71 = load %"class.cricket::Connection"**, %"class.cricket::Connection"*** %58, align 8
  br label %72

72:                                               ; preds = %68, %47
  %73 = phi %"class.cricket::Connection"** [ %59, %47 ], [ %71, %68 ]
  store i64 %66, i64* %21, align 8
  store i64 %57, i64* %20, align 8
  store i64 %52, i64* %30, align 8
  %74 = icmp eq %"class.cricket::Connection"** %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.cricket::Connection"** %73 to i8*
  tail call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %11, %72, %75
  ret %"class.std::__1::back_insert_iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.222"*, %"class.std::__1::__tree_node.256"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.256"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.256"* %1 to %"class.std::__1::__tree_node.256"**
  %6 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.222"* %0, %"class.std::__1::__tree_node.256"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.256"**
  %9 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.222"* %0, %"class.std::__1::__tree_node.256"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.256"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__113__stable_sortIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.cricket::Connection"**, %"class.cricket::Connection"**, %class.anon.241* dereferenceable(8), i64, %"class.cricket::Connection"**, i64) unnamed_addr #0 {
  switch i64 %3, label %28 [
    i64 0, label %463
    i64 1, label %463
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %1, i64 -1
  %9 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %8, align 8
  %10 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %0, align 8
  %11 = getelementptr inbounds %class.anon.241, %class.anon.241* %2, i64 0, i32 0
  %12 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %11, align 8
  %13 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %12, %"class.cricket::Connection"* %9, %"class.cricket::Connection"* %10, i8 0, i64 undef, i8* null) #12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = icmp sgt i32 %13, 0
  br i1 %16, label %23, label %463

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %9, i64 0, i32 27
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %10, i64 0, i32 27
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %19, %21
  br i1 %22, label %23, label %463

23:                                               ; preds = %15, %17
  %24 = bitcast %"class.cricket::Connection"** %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.cricket::Connection"** %8 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %24, align 8
  store i64 %25, i64* %26, align 8
  br label %463

28:                                               ; preds = %6
  %29 = icmp slt i64 %3, 129
  br i1 %29, label %30, label %68

30:                                               ; preds = %28
  %31 = icmp eq %"class.cricket::Connection"** %0, %1
  br i1 %31, label %463, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %0, i64 1
  %34 = icmp eq %"class.cricket::Connection"** %33, %1
  br i1 %34, label %463, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %class.anon.241, %class.anon.241* %2, i64 0, i32 0
  br label %37

37:                                               ; preds = %58, %35
  %38 = phi %"class.cricket::Connection"** [ %33, %35 ], [ %61, %58 ]
  %39 = bitcast %"class.cricket::Connection"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = inttoptr i64 %40 to %"class.cricket::Connection"*
  %42 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %41, i64 0, i32 27
  %43 = icmp eq %"class.cricket::Connection"** %38, %0
  br i1 %43, label %58, label %44

44:                                               ; preds = %37, %63
  %45 = phi %"class.cricket::Connection"** [ %46, %63 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %45, i64 -1
  %47 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %46, align 8
  %48 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %36, align 8
  %49 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %48, %"class.cricket::Connection"* %41, %"class.cricket::Connection"* %47, i8 0, i64 undef, i8* null) #12
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %44
  %52 = icmp sgt i32 %49, 0
  br i1 %52, label %63, label %58

53:                                               ; preds = %44
  %54 = load i32, i32* %42, align 8
  %55 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %47, i64 0, i32 27
  %56 = load i32, i32* %55, align 8
  %57 = icmp slt i32 %54, %56
  br i1 %57, label %63, label %58

58:                                               ; preds = %63, %53, %51, %37
  %59 = phi %"class.cricket::Connection"** [ %0, %37 ], [ %45, %53 ], [ %45, %51 ], [ %0, %63 ]
  %60 = bitcast %"class.cricket::Connection"** %59 to i64*
  store i64 %40, i64* %60, align 8
  %61 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %38, i64 1
  %62 = icmp eq %"class.cricket::Connection"** %61, %1
  br i1 %62, label %463, label %37

63:                                               ; preds = %53, %51
  %64 = bitcast %"class.cricket::Connection"** %46 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.cricket::Connection"** %45 to i64*
  store i64 %65, i64* %66, align 8
  %67 = icmp eq %"class.cricket::Connection"** %46, %0
  br i1 %67, label %58, label %44

68:                                               ; preds = %28
  %69 = lshr i64 %3, 1
  %70 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %0, i64 %69
  %71 = icmp sgt i64 %3, %5
  br i1 %71, label %461, label %72

72:                                               ; preds = %68
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeE"(%"class.cricket::Connection"** %0, %"class.cricket::Connection"** %70, %class.anon.241* dereferenceable(8) %2, i64 %69, %"class.cricket::Connection"** %4)
  %73 = sub nsw i64 %3, %69
  %74 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %4, i64 %69
  tail call fastcc void @"_ZNSt3__118__stable_sort_moveIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeE"(%"class.cricket::Connection"** %70, %"class.cricket::Connection"** %1, %class.anon.241* dereferenceable(8) %2, i64 %73, %"class.cricket::Connection"** %74)
  %75 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %4, i64 %3
  %76 = getelementptr inbounds %class.anon.241, %class.anon.241* %2, i64 0, i32 0
  br label %208

77:                                               ; preds = %412
  %78 = ptrtoint %"class.cricket::Connection"** %413 to i64
  %79 = icmp eq %"class.cricket::Connection"** %413, %75
  br i1 %79, label %463, label %80

80:                                               ; preds = %77
  %81 = add i64 %3, -1
  %82 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %4, i64 %81
  %83 = ptrtoint %"class.cricket::Connection"** %82 to i64
  %84 = sub i64 %83, %78
  %85 = lshr i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = icmp ult i64 %86, 4
  br i1 %87, label %88, label %115

88:                                               ; preds = %206, %115, %80
  %89 = phi %"class.cricket::Connection"** [ %413, %115 ], [ %413, %80 ], [ %129, %206 ]
  %90 = phi %"class.cricket::Connection"** [ %415, %115 ], [ %415, %80 ], [ %130, %206 ]
  %91 = ptrtoint %"class.cricket::Connection"** %89 to i64
  %92 = add i64 %3, -1
  %93 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %4, i64 %92
  %94 = ptrtoint %"class.cricket::Connection"** %93 to i64
  %95 = sub i64 %94, %91
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %88, %100
  %101 = phi %"class.cricket::Connection"** [ %107, %100 ], [ %89, %88 ]
  %102 = phi %"class.cricket::Connection"** [ %108, %100 ], [ %90, %88 ]
  %103 = phi i64 [ %109, %100 ], [ %98, %88 ]
  %104 = bitcast %"class.cricket::Connection"** %101 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.cricket::Connection"** %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %101, i64 1
  %108 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %102, i64 1
  %109 = add i64 %103, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %100, !llvm.loop !23

111:                                              ; preds = %100, %88
  %112 = phi %"class.cricket::Connection"** [ %89, %88 ], [ %107, %100 ]
  %113 = phi %"class.cricket::Connection"** [ %90, %88 ], [ %108, %100 ]
  %114 = icmp ult i64 %95, 56
  br i1 %114, label %463, label %417

115:                                              ; preds = %80
  %116 = add i64 %3, -1
  %117 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %4, i64 %116
  %118 = ptrtoint %"class.cricket::Connection"** %117 to i64
  %119 = sub i64 %118, %78
  %120 = lshr i64 %119, 3
  %121 = add nuw nsw i64 %120, 1
  %122 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %415, i64 %121
  %123 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %413, i64 %121
  %124 = icmp ult %"class.cricket::Connection"** %415, %123
  %125 = icmp ult %"class.cricket::Connection"** %413, %122
  %126 = and i1 %124, %125
  br i1 %126, label %88, label %127

127:                                              ; preds = %115
  %128 = and i64 %86, 4611686018427387900
  %129 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %413, i64 %128
  %130 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %415, i64 %128
  %131 = add nsw i64 %128, -4
  %132 = lshr exact i64 %131, 2
  %133 = add nuw nsw i64 %132, 1
  %134 = and i64 %133, 3
  %135 = icmp ult i64 %131, 12
  br i1 %135, label %187, label %136

136:                                              ; preds = %127
  %137 = sub nsw i64 %133, %134
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi i64 [ 0, %136 ], [ %184, %138 ]
  %140 = phi i64 [ %137, %136 ], [ %185, %138 ]
  %141 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %413, i64 %139
  %142 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %415, i64 %139
  %143 = bitcast %"class.cricket::Connection"** %141 to <2 x i64>*
  %144 = load <2 x i64>, <2 x i64>* %143, align 8, !alias.scope !24
  %145 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %141, i64 2
  %146 = bitcast %"class.cricket::Connection"** %145 to <2 x i64>*
  %147 = load <2 x i64>, <2 x i64>* %146, align 8, !alias.scope !24
  %148 = bitcast %"class.cricket::Connection"** %142 to <2 x i64>*
  store <2 x i64> %144, <2 x i64>* %148, align 8, !alias.scope !27, !noalias !24
  %149 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %142, i64 2
  %150 = bitcast %"class.cricket::Connection"** %149 to <2 x i64>*
  store <2 x i64> %147, <2 x i64>* %150, align 8, !alias.scope !27, !noalias !24
  %151 = or i64 %139, 4
  %152 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %413, i64 %151
  %153 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %415, i64 %151
  %154 = bitcast %"class.cricket::Connection"** %152 to <2 x i64>*
  %155 = load <2 x i64>, <2 x i64>* %154, align 8, !alias.scope !24
  %156 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %152, i64 2
  %157 = bitcast %"class.cricket::Connection"** %156 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8, !alias.scope !24
  %159 = bitcast %"class.cricket::Connection"** %153 to <2 x i64>*
  store <2 x i64> %155, <2 x i64>* %159, align 8, !alias.scope !27, !noalias !24
  %160 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %153, i64 2
  %161 = bitcast %"class.cricket::Connection"** %160 to <2 x i64>*
  store <2 x i64> %158, <2 x i64>* %161, align 8, !alias.scope !27, !noalias !24
  %162 = or i64 %139, 8
  %163 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %413, i64 %162
  %164 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %415, i64 %162
  %165 = bitcast %"class.cricket::Connection"** %163 to <2 x i64>*
  %166 = load <2 x i64>, <2 x i64>* %165, align 8, !alias.scope !24
  %167 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %163, i64 2
  %168 = bitcast %"class.cricket::Connection"** %167 to <2 x i64>*
  %169 = load <2 x i64>, <2 x i64>* %168, align 8, !alias.scope !24
  %170 = bitcast %"class.cricket::Connection"** %164 to <2 x i64>*
  store <2 x i64> %166, <2 x i64>* %170, align 8, !alias.scope !27, !noalias !24
  %171 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %164, i64 2
  %172 = bitcast %"class.cricket::Connection"** %171 to <2 x i64>*
  store <2 x i64> %169, <2 x i64>* %172, align 8, !alias.scope !27, !noalias !24
  %173 = or i64 %139, 12
  %174 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %413, i64 %173
  %175 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %415, i64 %173
  %176 = bitcast %"class.cricket::Connection"** %174 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 8, !alias.scope !24
  %178 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %174, i64 2
  %179 = bitcast %"class.cricket::Connection"** %178 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8, !alias.scope !24
  %181 = bitcast %"class.cricket::Connection"** %175 to <2 x i64>*
  store <2 x i64> %177, <2 x i64>* %181, align 8, !alias.scope !27, !noalias !24
  %182 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %175, i64 2
  %183 = bitcast %"class.cricket::Connection"** %182 to <2 x i64>*
  store <2 x i64> %180, <2 x i64>* %183, align 8, !alias.scope !27, !noalias !24
  %184 = add i64 %139, 16
  %185 = add i64 %140, -4
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %138, !llvm.loop !29

187:                                              ; preds = %138, %127
  %188 = phi i64 [ 0, %127 ], [ %184, %138 ]
  %189 = icmp eq i64 %134, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %187, %190
  %191 = phi i64 [ %203, %190 ], [ %188, %187 ]
  %192 = phi i64 [ %204, %190 ], [ %134, %187 ]
  %193 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %413, i64 %191
  %194 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %415, i64 %191
  %195 = bitcast %"class.cricket::Connection"** %193 to <2 x i64>*
  %196 = load <2 x i64>, <2 x i64>* %195, align 8, !alias.scope !24
  %197 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %193, i64 2
  %198 = bitcast %"class.cricket::Connection"** %197 to <2 x i64>*
  %199 = load <2 x i64>, <2 x i64>* %198, align 8, !alias.scope !24
  %200 = bitcast %"class.cricket::Connection"** %194 to <2 x i64>*
  store <2 x i64> %196, <2 x i64>* %200, align 8, !alias.scope !27, !noalias !24
  %201 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %194, i64 2
  %202 = bitcast %"class.cricket::Connection"** %201 to <2 x i64>*
  store <2 x i64> %199, <2 x i64>* %202, align 8, !alias.scope !27, !noalias !24
  %203 = add i64 %191, 4
  %204 = add i64 %192, -1
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %190, !llvm.loop !31

206:                                              ; preds = %190, %187
  %207 = icmp eq i64 %86, %128
  br i1 %207, label %463, label %88

208:                                              ; preds = %412, %72
  %209 = phi %"class.cricket::Connection"** [ %4, %72 ], [ %414, %412 ]
  %210 = phi %"class.cricket::Connection"** [ %74, %72 ], [ %413, %412 ]
  %211 = phi %"class.cricket::Connection"** [ %0, %72 ], [ %415, %412 ]
  %212 = icmp eq %"class.cricket::Connection"** %210, %75
  br i1 %212, label %213, label %388

213:                                              ; preds = %208
  %214 = ptrtoint %"class.cricket::Connection"** %209 to i64
  %215 = icmp eq %"class.cricket::Connection"** %209, %74
  br i1 %215, label %463, label %216

216:                                              ; preds = %213
  %217 = add nsw i64 %69, -1
  %218 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %4, i64 %217
  %219 = ptrtoint %"class.cricket::Connection"** %218 to i64
  %220 = sub i64 %219, %214
  %221 = lshr i64 %220, 3
  %222 = add nuw nsw i64 %221, 1
  %223 = icmp ult i64 %222, 4
  br i1 %223, label %317, label %224

224:                                              ; preds = %216
  %225 = add nsw i64 %69, -1
  %226 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %4, i64 %225
  %227 = ptrtoint %"class.cricket::Connection"** %226 to i64
  %228 = sub i64 %227, %214
  %229 = lshr i64 %228, 3
  %230 = add nuw nsw i64 %229, 1
  %231 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %211, i64 %230
  %232 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %209, i64 %230
  %233 = icmp ult %"class.cricket::Connection"** %211, %232
  %234 = icmp ult %"class.cricket::Connection"** %209, %231
  %235 = and i1 %233, %234
  br i1 %235, label %317, label %236

236:                                              ; preds = %224
  %237 = and i64 %222, 4611686018427387900
  %238 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %209, i64 %237
  %239 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %211, i64 %237
  %240 = add nsw i64 %237, -4
  %241 = lshr exact i64 %240, 2
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 12
  br i1 %244, label %296, label %245

245:                                              ; preds = %236
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %209, i64 %248
  %251 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %211, i64 %248
  %252 = bitcast %"class.cricket::Connection"** %250 to <2 x i64>*
  %253 = load <2 x i64>, <2 x i64>* %252, align 8, !alias.scope !32
  %254 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %250, i64 2
  %255 = bitcast %"class.cricket::Connection"** %254 to <2 x i64>*
  %256 = load <2 x i64>, <2 x i64>* %255, align 8, !alias.scope !32
  %257 = bitcast %"class.cricket::Connection"** %251 to <2 x i64>*
  store <2 x i64> %253, <2 x i64>* %257, align 8, !alias.scope !35, !noalias !32
  %258 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %251, i64 2
  %259 = bitcast %"class.cricket::Connection"** %258 to <2 x i64>*
  store <2 x i64> %256, <2 x i64>* %259, align 8, !alias.scope !35, !noalias !32
  %260 = or i64 %248, 4
  %261 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %209, i64 %260
  %262 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %211, i64 %260
  %263 = bitcast %"class.cricket::Connection"** %261 to <2 x i64>*
  %264 = load <2 x i64>, <2 x i64>* %263, align 8, !alias.scope !32
  %265 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %261, i64 2
  %266 = bitcast %"class.cricket::Connection"** %265 to <2 x i64>*
  %267 = load <2 x i64>, <2 x i64>* %266, align 8, !alias.scope !32
  %268 = bitcast %"class.cricket::Connection"** %262 to <2 x i64>*
  store <2 x i64> %264, <2 x i64>* %268, align 8, !alias.scope !35, !noalias !32
  %269 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %262, i64 2
  %270 = bitcast %"class.cricket::Connection"** %269 to <2 x i64>*
  store <2 x i64> %267, <2 x i64>* %270, align 8, !alias.scope !35, !noalias !32
  %271 = or i64 %248, 8
  %272 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %209, i64 %271
  %273 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %211, i64 %271
  %274 = bitcast %"class.cricket::Connection"** %272 to <2 x i64>*
  %275 = load <2 x i64>, <2 x i64>* %274, align 8, !alias.scope !32
  %276 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %272, i64 2
  %277 = bitcast %"class.cricket::Connection"** %276 to <2 x i64>*
  %278 = load <2 x i64>, <2 x i64>* %277, align 8, !alias.scope !32
  %279 = bitcast %"class.cricket::Connection"** %273 to <2 x i64>*
  store <2 x i64> %275, <2 x i64>* %279, align 8, !alias.scope !35, !noalias !32
  %280 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %273, i64 2
  %281 = bitcast %"class.cricket::Connection"** %280 to <2 x i64>*
  store <2 x i64> %278, <2 x i64>* %281, align 8, !alias.scope !35, !noalias !32
  %282 = or i64 %248, 12
  %283 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %209, i64 %282
  %284 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %211, i64 %282
  %285 = bitcast %"class.cricket::Connection"** %283 to <2 x i64>*
  %286 = load <2 x i64>, <2 x i64>* %285, align 8, !alias.scope !32
  %287 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %283, i64 2
  %288 = bitcast %"class.cricket::Connection"** %287 to <2 x i64>*
  %289 = load <2 x i64>, <2 x i64>* %288, align 8, !alias.scope !32
  %290 = bitcast %"class.cricket::Connection"** %284 to <2 x i64>*
  store <2 x i64> %286, <2 x i64>* %290, align 8, !alias.scope !35, !noalias !32
  %291 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %284, i64 2
  %292 = bitcast %"class.cricket::Connection"** %291 to <2 x i64>*
  store <2 x i64> %289, <2 x i64>* %292, align 8, !alias.scope !35, !noalias !32
  %293 = add i64 %248, 16
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !37

296:                                              ; preds = %247, %236
  %297 = phi i64 [ 0, %236 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %209, i64 %300
  %303 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %211, i64 %300
  %304 = bitcast %"class.cricket::Connection"** %302 to <2 x i64>*
  %305 = load <2 x i64>, <2 x i64>* %304, align 8, !alias.scope !32
  %306 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %302, i64 2
  %307 = bitcast %"class.cricket::Connection"** %306 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !32
  %309 = bitcast %"class.cricket::Connection"** %303 to <2 x i64>*
  store <2 x i64> %305, <2 x i64>* %309, align 8, !alias.scope !35, !noalias !32
  %310 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %303, i64 2
  %311 = bitcast %"class.cricket::Connection"** %310 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %311, align 8, !alias.scope !35, !noalias !32
  %312 = add i64 %300, 4
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !38

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %222, %237
  br i1 %316, label %463, label %317

317:                                              ; preds = %315, %224, %216
  %318 = phi %"class.cricket::Connection"** [ %209, %224 ], [ %209, %216 ], [ %238, %315 ]
  %319 = phi %"class.cricket::Connection"** [ %211, %224 ], [ %211, %216 ], [ %239, %315 ]
  %320 = ptrtoint %"class.cricket::Connection"** %318 to i64
  %321 = add nsw i64 %69, -1
  %322 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %4, i64 %321
  %323 = ptrtoint %"class.cricket::Connection"** %322 to i64
  %324 = sub i64 %323, %320
  %325 = lshr i64 %324, 3
  %326 = add nuw nsw i64 %325, 1
  %327 = and i64 %326, 7
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %340, label %329

329:                                              ; preds = %317, %329
  %330 = phi %"class.cricket::Connection"** [ %336, %329 ], [ %318, %317 ]
  %331 = phi %"class.cricket::Connection"** [ %337, %329 ], [ %319, %317 ]
  %332 = phi i64 [ %338, %329 ], [ %327, %317 ]
  %333 = bitcast %"class.cricket::Connection"** %330 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = bitcast %"class.cricket::Connection"** %331 to i64*
  store i64 %334, i64* %335, align 8
  %336 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %330, i64 1
  %337 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %331, i64 1
  %338 = add i64 %332, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %329, !llvm.loop !39

340:                                              ; preds = %329, %317
  %341 = phi %"class.cricket::Connection"** [ %318, %317 ], [ %336, %329 ]
  %342 = phi %"class.cricket::Connection"** [ %319, %317 ], [ %337, %329 ]
  %343 = icmp ult i64 %324, 56
  br i1 %343, label %463, label %344

344:                                              ; preds = %340, %344
  %345 = phi %"class.cricket::Connection"** [ %385, %344 ], [ %341, %340 ]
  %346 = phi %"class.cricket::Connection"** [ %386, %344 ], [ %342, %340 ]
  %347 = bitcast %"class.cricket::Connection"** %345 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.cricket::Connection"** %346 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %345, i64 1
  %351 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %346, i64 1
  %352 = bitcast %"class.cricket::Connection"** %350 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"class.cricket::Connection"** %351 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %345, i64 2
  %356 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %346, i64 2
  %357 = bitcast %"class.cricket::Connection"** %355 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"class.cricket::Connection"** %356 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %345, i64 3
  %361 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %346, i64 3
  %362 = bitcast %"class.cricket::Connection"** %360 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"class.cricket::Connection"** %361 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %345, i64 4
  %366 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %346, i64 4
  %367 = bitcast %"class.cricket::Connection"** %365 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"class.cricket::Connection"** %366 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %345, i64 5
  %371 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %346, i64 5
  %372 = bitcast %"class.cricket::Connection"** %370 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = bitcast %"class.cricket::Connection"** %371 to i64*
  store i64 %373, i64* %374, align 8
  %375 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %345, i64 6
  %376 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %346, i64 6
  %377 = bitcast %"class.cricket::Connection"** %375 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = bitcast %"class.cricket::Connection"** %376 to i64*
  store i64 %378, i64* %379, align 8
  %380 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %345, i64 7
  %381 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %346, i64 7
  %382 = bitcast %"class.cricket::Connection"** %380 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = bitcast %"class.cricket::Connection"** %381 to i64*
  store i64 %383, i64* %384, align 8
  %385 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %345, i64 8
  %386 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %346, i64 8
  %387 = icmp eq %"class.cricket::Connection"** %385, %74
  br i1 %387, label %463, label %344, !llvm.loop !40

388:                                              ; preds = %208
  %389 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %210, align 8
  %390 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %209, align 8
  %391 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %76, align 8
  %392 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %391, %"class.cricket::Connection"* %389, %"class.cricket::Connection"* %390, i8 0, i64 undef, i8* null) #12
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %396, label %394

394:                                              ; preds = %388
  %395 = icmp sgt i32 %392, 0
  br i1 %395, label %402, label %407

396:                                              ; preds = %388
  %397 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %389, i64 0, i32 27
  %398 = load i32, i32* %397, align 8
  %399 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %390, i64 0, i32 27
  %400 = load i32, i32* %399, align 8
  %401 = icmp slt i32 %398, %400
  br i1 %401, label %402, label %407

402:                                              ; preds = %396, %394
  %403 = bitcast %"class.cricket::Connection"** %210 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = bitcast %"class.cricket::Connection"** %211 to i64*
  store i64 %404, i64* %405, align 8
  %406 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %210, i64 1
  br label %412

407:                                              ; preds = %396, %394
  %408 = bitcast %"class.cricket::Connection"** %209 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = bitcast %"class.cricket::Connection"** %211 to i64*
  store i64 %409, i64* %410, align 8
  %411 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %209, i64 1
  br label %412

412:                                              ; preds = %407, %402
  %413 = phi %"class.cricket::Connection"** [ %406, %402 ], [ %210, %407 ]
  %414 = phi %"class.cricket::Connection"** [ %209, %402 ], [ %411, %407 ]
  %415 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %211, i64 1
  %416 = icmp eq %"class.cricket::Connection"** %414, %74
  br i1 %416, label %77, label %208

417:                                              ; preds = %111, %417
  %418 = phi %"class.cricket::Connection"** [ %458, %417 ], [ %112, %111 ]
  %419 = phi %"class.cricket::Connection"** [ %459, %417 ], [ %113, %111 ]
  %420 = bitcast %"class.cricket::Connection"** %418 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = bitcast %"class.cricket::Connection"** %419 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %418, i64 1
  %424 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %419, i64 1
  %425 = bitcast %"class.cricket::Connection"** %423 to i64*
  %426 = load i64, i64* %425, align 8
  %427 = bitcast %"class.cricket::Connection"** %424 to i64*
  store i64 %426, i64* %427, align 8
  %428 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %418, i64 2
  %429 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %419, i64 2
  %430 = bitcast %"class.cricket::Connection"** %428 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = bitcast %"class.cricket::Connection"** %429 to i64*
  store i64 %431, i64* %432, align 8
  %433 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %418, i64 3
  %434 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %419, i64 3
  %435 = bitcast %"class.cricket::Connection"** %433 to i64*
  %436 = load i64, i64* %435, align 8
  %437 = bitcast %"class.cricket::Connection"** %434 to i64*
  store i64 %436, i64* %437, align 8
  %438 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %418, i64 4
  %439 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %419, i64 4
  %440 = bitcast %"class.cricket::Connection"** %438 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = bitcast %"class.cricket::Connection"** %439 to i64*
  store i64 %441, i64* %442, align 8
  %443 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %418, i64 5
  %444 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %419, i64 5
  %445 = bitcast %"class.cricket::Connection"** %443 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = bitcast %"class.cricket::Connection"** %444 to i64*
  store i64 %446, i64* %447, align 8
  %448 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %418, i64 6
  %449 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %419, i64 6
  %450 = bitcast %"class.cricket::Connection"** %448 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = bitcast %"class.cricket::Connection"** %449 to i64*
  store i64 %451, i64* %452, align 8
  %453 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %418, i64 7
  %454 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %419, i64 7
  %455 = bitcast %"class.cricket::Connection"** %453 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = bitcast %"class.cricket::Connection"** %454 to i64*
  store i64 %456, i64* %457, align 8
  %458 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %418, i64 8
  %459 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %419, i64 8
  %460 = icmp eq %"class.cricket::Connection"** %458, %75
  br i1 %460, label %463, label %417, !llvm.loop !41

461:                                              ; preds = %68
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.cricket::Connection"** %0, %"class.cricket::Connection"** %70, %class.anon.241* dereferenceable(8) %2, i64 %69, %"class.cricket::Connection"** %4, i64 %5)
  %462 = sub nsw i64 %3, %69
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.cricket::Connection"** %70, %"class.cricket::Connection"** %1, %class.anon.241* dereferenceable(8) %2, i64 %462, %"class.cricket::Connection"** %4, i64 %5)
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEl"(%"class.cricket::Connection"** %0, %"class.cricket::Connection"** %70, %"class.cricket::Connection"** %1, %class.anon.241* dereferenceable(8) %2, i64 %69, i64 %462, %"class.cricket::Connection"** %4, i64 %5)
  ret void

463:                                              ; preds = %111, %417, %340, %344, %58, %206, %315, %213, %77, %32, %30, %15, %17, %23, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__118__stable_sort_moveIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeE"(%"class.cricket::Connection"**, %"class.cricket::Connection"**, %class.anon.241* dereferenceable(8), i64, %"class.cricket::Connection"**) unnamed_addr #0 {
  switch i64 %3, label %42 [
    i64 0, label %505
    i64 1, label %6
    i64 2, label %10
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.cricket::Connection"** %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.cricket::Connection"** %4 to i64*
  store i64 %8, i64* %9, align 8
  br label %505

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %1, i64 -1
  %12 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %11, align 8
  %13 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %0, align 8
  %14 = getelementptr inbounds %class.anon.241, %class.anon.241* %2, i64 0, i32 0
  %15 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %14, align 8
  %16 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %15, %"class.cricket::Connection"* %12, %"class.cricket::Connection"* %13, i8 0, i64 undef, i8* null) #12
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = icmp sgt i32 %16, 0
  br i1 %19, label %26, label %34

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %12, i64 0, i32 27
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %13, i64 0, i32 27
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %22, %24
  br i1 %25, label %26, label %34

26:                                               ; preds = %18, %20
  %27 = bitcast %"class.cricket::Connection"** %11 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.cricket::Connection"** %4 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %4, i64 1
  %31 = bitcast %"class.cricket::Connection"** %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.cricket::Connection"** %30 to i64*
  store i64 %32, i64* %33, align 8
  br label %505

34:                                               ; preds = %18, %20
  %35 = bitcast %"class.cricket::Connection"** %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.cricket::Connection"** %4 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %4, i64 1
  %39 = bitcast %"class.cricket::Connection"** %11 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.cricket::Connection"** %38 to i64*
  store i64 %40, i64* %41, align 8
  br label %505

42:                                               ; preds = %5
  %43 = icmp slt i64 %3, 9
  br i1 %43, label %44, label %114

44:                                               ; preds = %42
  %45 = icmp eq %"class.cricket::Connection"** %0, %1
  br i1 %45, label %505, label %46

46:                                               ; preds = %44
  %47 = bitcast %"class.cricket::Connection"** %0 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.cricket::Connection"** %4 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %0, i64 1
  %51 = icmp eq %"class.cricket::Connection"** %50, %1
  br i1 %51, label %505, label %52

52:                                               ; preds = %46
  %53 = inttoptr i64 %48 to %"class.cricket::Connection"*
  %54 = getelementptr inbounds %class.anon.241, %class.anon.241* %2, i64 0, i32 0
  br label %55

55:                                               ; preds = %112, %52
  %56 = phi %"class.cricket::Connection"* [ %53, %52 ], [ %113, %112 ]
  %57 = phi %"class.cricket::Connection"** [ %50, %52 ], [ %110, %112 ]
  %58 = phi %"class.cricket::Connection"** [ %4, %52 ], [ %59, %112 ]
  %59 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %58, i64 1
  %60 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %57, align 8
  %61 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %54, align 8
  %62 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %61, %"class.cricket::Connection"* %60, %"class.cricket::Connection"* %56, i8 0, i64 undef, i8* null) #12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %55
  %65 = icmp sgt i32 %62, 0
  br i1 %65, label %72, label %105

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %60, i64 0, i32 27
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %56, i64 0, i32 27
  %70 = load i32, i32* %69, align 8
  %71 = icmp slt i32 %68, %70
  br i1 %71, label %72, label %105

72:                                               ; preds = %66, %64
  %73 = bitcast %"class.cricket::Connection"** %58 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.cricket::Connection"** %59 to i64*
  store i64 %74, i64* %75, align 8
  %76 = icmp eq %"class.cricket::Connection"** %58, %4
  br i1 %76, label %101, label %77

77:                                               ; preds = %72, %93
  %78 = phi %"class.cricket::Connection"** [ %80, %93 ], [ %58, %72 ]
  %79 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %57, align 8
  %80 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %78, i64 -1
  %81 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %80, align 8
  %82 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %54, align 8
  %83 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %82, %"class.cricket::Connection"* %79, %"class.cricket::Connection"* %81, i8 0, i64 undef, i8* null) #12
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %77
  %86 = icmp sgt i32 %83, 0
  br i1 %86, label %93, label %98

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %79, i64 0, i32 27
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %81, i64 0, i32 27
  %91 = load i32, i32* %90, align 8
  %92 = icmp slt i32 %89, %91
  br i1 %92, label %93, label %98

93:                                               ; preds = %87, %85
  %94 = bitcast %"class.cricket::Connection"** %80 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.cricket::Connection"** %78 to i64*
  store i64 %95, i64* %96, align 8
  %97 = icmp eq %"class.cricket::Connection"** %80, %4
  br i1 %97, label %98, label %77

98:                                               ; preds = %93, %87, %85
  %99 = phi %"class.cricket::Connection"** [ %78, %87 ], [ %4, %93 ], [ %78, %85 ]
  %100 = bitcast %"class.cricket::Connection"** %99 to i64*
  br label %101

101:                                              ; preds = %98, %72
  %102 = phi i64* [ %100, %98 ], [ %49, %72 ]
  %103 = bitcast %"class.cricket::Connection"** %57 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %102, align 8
  br label %109

105:                                              ; preds = %66, %64
  %106 = bitcast %"class.cricket::Connection"** %57 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.cricket::Connection"** %59 to i64*
  store i64 %107, i64* %108, align 8
  br label %109

109:                                              ; preds = %105, %101
  %110 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %57, i64 1
  %111 = icmp eq %"class.cricket::Connection"** %110, %1
  br i1 %111, label %505, label %112

112:                                              ; preds = %109
  %113 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %59, align 8
  br label %55

114:                                              ; preds = %42
  %115 = lshr i64 %3, 1
  %116 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %0, i64 %115
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.cricket::Connection"** %0, %"class.cricket::Connection"** %116, %class.anon.241* dereferenceable(8) %2, i64 %115, %"class.cricket::Connection"** %4, i64 %115)
  %117 = sub nsw i64 %3, %115
  %118 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %4, i64 %115
  tail call fastcc void @"_ZNSt3__113__stable_sortIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_T_NS_15iterator_traitsISC_E15difference_typeEPNSF_10value_typeEl"(%"class.cricket::Connection"** %116, %"class.cricket::Connection"** %1, %class.anon.241* dereferenceable(8) %2, i64 %117, %"class.cricket::Connection"** %118, i64 %117)
  %119 = icmp eq i64 %115, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %class.anon.241, %class.anon.241* %2, i64 0, i32 0
  br label %296

122:                                              ; preds = %500, %114
  %123 = phi %"class.cricket::Connection"** [ %116, %114 ], [ %501, %500 ]
  %124 = phi %"class.cricket::Connection"** [ %4, %114 ], [ %503, %500 ]
  %125 = ptrtoint %"class.cricket::Connection"** %123 to i64
  %126 = icmp eq %"class.cricket::Connection"** %123, %1
  br i1 %126, label %505, label %127

127:                                              ; preds = %122
  %128 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %1, i64 -1
  %129 = ptrtoint %"class.cricket::Connection"** %128 to i64
  %130 = sub i64 %129, %125
  %131 = lshr i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = icmp ult i64 %132, 4
  br i1 %133, label %226, label %134

134:                                              ; preds = %127
  %135 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %1, i64 -1
  %136 = ptrtoint %"class.cricket::Connection"** %135 to i64
  %137 = sub i64 %136, %125
  %138 = lshr i64 %137, 3
  %139 = add nuw nsw i64 %138, 1
  %140 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %124, i64 %139
  %141 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %123, i64 %139
  %142 = icmp ult %"class.cricket::Connection"** %124, %141
  %143 = icmp ult %"class.cricket::Connection"** %123, %140
  %144 = and i1 %142, %143
  br i1 %144, label %226, label %145

145:                                              ; preds = %134
  %146 = and i64 %132, 4611686018427387900
  %147 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %124, i64 %146
  %148 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %123, i64 %146
  %149 = add nsw i64 %146, -4
  %150 = lshr exact i64 %149, 2
  %151 = add nuw nsw i64 %150, 1
  %152 = and i64 %151, 3
  %153 = icmp ult i64 %149, 12
  br i1 %153, label %205, label %154

154:                                              ; preds = %145
  %155 = sub nsw i64 %151, %152
  br label %156

156:                                              ; preds = %156, %154
  %157 = phi i64 [ 0, %154 ], [ %202, %156 ]
  %158 = phi i64 [ %155, %154 ], [ %203, %156 ]
  %159 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %124, i64 %157
  %160 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %123, i64 %157
  %161 = bitcast %"class.cricket::Connection"** %160 to <2 x i64>*
  %162 = load <2 x i64>, <2 x i64>* %161, align 8, !alias.scope !42
  %163 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %160, i64 2
  %164 = bitcast %"class.cricket::Connection"** %163 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8, !alias.scope !42
  %166 = bitcast %"class.cricket::Connection"** %159 to <2 x i64>*
  store <2 x i64> %162, <2 x i64>* %166, align 8, !alias.scope !45, !noalias !42
  %167 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %159, i64 2
  %168 = bitcast %"class.cricket::Connection"** %167 to <2 x i64>*
  store <2 x i64> %165, <2 x i64>* %168, align 8, !alias.scope !45, !noalias !42
  %169 = or i64 %157, 4
  %170 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %124, i64 %169
  %171 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %123, i64 %169
  %172 = bitcast %"class.cricket::Connection"** %171 to <2 x i64>*
  %173 = load <2 x i64>, <2 x i64>* %172, align 8, !alias.scope !42
  %174 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %171, i64 2
  %175 = bitcast %"class.cricket::Connection"** %174 to <2 x i64>*
  %176 = load <2 x i64>, <2 x i64>* %175, align 8, !alias.scope !42
  %177 = bitcast %"class.cricket::Connection"** %170 to <2 x i64>*
  store <2 x i64> %173, <2 x i64>* %177, align 8, !alias.scope !45, !noalias !42
  %178 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %170, i64 2
  %179 = bitcast %"class.cricket::Connection"** %178 to <2 x i64>*
  store <2 x i64> %176, <2 x i64>* %179, align 8, !alias.scope !45, !noalias !42
  %180 = or i64 %157, 8
  %181 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %124, i64 %180
  %182 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %123, i64 %180
  %183 = bitcast %"class.cricket::Connection"** %182 to <2 x i64>*
  %184 = load <2 x i64>, <2 x i64>* %183, align 8, !alias.scope !42
  %185 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %182, i64 2
  %186 = bitcast %"class.cricket::Connection"** %185 to <2 x i64>*
  %187 = load <2 x i64>, <2 x i64>* %186, align 8, !alias.scope !42
  %188 = bitcast %"class.cricket::Connection"** %181 to <2 x i64>*
  store <2 x i64> %184, <2 x i64>* %188, align 8, !alias.scope !45, !noalias !42
  %189 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %181, i64 2
  %190 = bitcast %"class.cricket::Connection"** %189 to <2 x i64>*
  store <2 x i64> %187, <2 x i64>* %190, align 8, !alias.scope !45, !noalias !42
  %191 = or i64 %157, 12
  %192 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %124, i64 %191
  %193 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %123, i64 %191
  %194 = bitcast %"class.cricket::Connection"** %193 to <2 x i64>*
  %195 = load <2 x i64>, <2 x i64>* %194, align 8, !alias.scope !42
  %196 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %193, i64 2
  %197 = bitcast %"class.cricket::Connection"** %196 to <2 x i64>*
  %198 = load <2 x i64>, <2 x i64>* %197, align 8, !alias.scope !42
  %199 = bitcast %"class.cricket::Connection"** %192 to <2 x i64>*
  store <2 x i64> %195, <2 x i64>* %199, align 8, !alias.scope !45, !noalias !42
  %200 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %192, i64 2
  %201 = bitcast %"class.cricket::Connection"** %200 to <2 x i64>*
  store <2 x i64> %198, <2 x i64>* %201, align 8, !alias.scope !45, !noalias !42
  %202 = add i64 %157, 16
  %203 = add i64 %158, -4
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %156, !llvm.loop !47

205:                                              ; preds = %156, %145
  %206 = phi i64 [ 0, %145 ], [ %202, %156 ]
  %207 = icmp eq i64 %152, 0
  br i1 %207, label %224, label %208

208:                                              ; preds = %205, %208
  %209 = phi i64 [ %221, %208 ], [ %206, %205 ]
  %210 = phi i64 [ %222, %208 ], [ %152, %205 ]
  %211 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %124, i64 %209
  %212 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %123, i64 %209
  %213 = bitcast %"class.cricket::Connection"** %212 to <2 x i64>*
  %214 = load <2 x i64>, <2 x i64>* %213, align 8, !alias.scope !42
  %215 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %212, i64 2
  %216 = bitcast %"class.cricket::Connection"** %215 to <2 x i64>*
  %217 = load <2 x i64>, <2 x i64>* %216, align 8, !alias.scope !42
  %218 = bitcast %"class.cricket::Connection"** %211 to <2 x i64>*
  store <2 x i64> %214, <2 x i64>* %218, align 8, !alias.scope !45, !noalias !42
  %219 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %211, i64 2
  %220 = bitcast %"class.cricket::Connection"** %219 to <2 x i64>*
  store <2 x i64> %217, <2 x i64>* %220, align 8, !alias.scope !45, !noalias !42
  %221 = add i64 %209, 4
  %222 = add i64 %210, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %208, !llvm.loop !48

224:                                              ; preds = %208, %205
  %225 = icmp eq i64 %132, %146
  br i1 %225, label %505, label %226

226:                                              ; preds = %224, %134, %127
  %227 = phi %"class.cricket::Connection"** [ %124, %134 ], [ %124, %127 ], [ %147, %224 ]
  %228 = phi %"class.cricket::Connection"** [ %123, %134 ], [ %123, %127 ], [ %148, %224 ]
  %229 = ptrtoint %"class.cricket::Connection"** %228 to i64
  %230 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %1, i64 -1
  %231 = ptrtoint %"class.cricket::Connection"** %230 to i64
  %232 = sub i64 %231, %229
  %233 = lshr i64 %232, 3
  %234 = add nuw nsw i64 %233, 1
  %235 = and i64 %234, 7
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %248, label %237

237:                                              ; preds = %226, %237
  %238 = phi %"class.cricket::Connection"** [ %245, %237 ], [ %227, %226 ]
  %239 = phi %"class.cricket::Connection"** [ %244, %237 ], [ %228, %226 ]
  %240 = phi i64 [ %246, %237 ], [ %235, %226 ]
  %241 = bitcast %"class.cricket::Connection"** %239 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.cricket::Connection"** %238 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %239, i64 1
  %245 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %238, i64 1
  %246 = add i64 %240, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %237, !llvm.loop !49

248:                                              ; preds = %237, %226
  %249 = phi %"class.cricket::Connection"** [ %227, %226 ], [ %245, %237 ]
  %250 = phi %"class.cricket::Connection"** [ %228, %226 ], [ %244, %237 ]
  %251 = icmp ult i64 %232, 56
  br i1 %251, label %505, label %252

252:                                              ; preds = %248, %252
  %253 = phi %"class.cricket::Connection"** [ %294, %252 ], [ %249, %248 ]
  %254 = phi %"class.cricket::Connection"** [ %293, %252 ], [ %250, %248 ]
  %255 = bitcast %"class.cricket::Connection"** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.cricket::Connection"** %253 to i64*
  store i64 %256, i64* %257, align 8
  %258 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %254, i64 1
  %259 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %253, i64 1
  %260 = bitcast %"class.cricket::Connection"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.cricket::Connection"** %259 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %254, i64 2
  %264 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %253, i64 2
  %265 = bitcast %"class.cricket::Connection"** %263 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"class.cricket::Connection"** %264 to i64*
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %254, i64 3
  %269 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %253, i64 3
  %270 = bitcast %"class.cricket::Connection"** %268 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.cricket::Connection"** %269 to i64*
  store i64 %271, i64* %272, align 8
  %273 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %254, i64 4
  %274 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %253, i64 4
  %275 = bitcast %"class.cricket::Connection"** %273 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %"class.cricket::Connection"** %274 to i64*
  store i64 %276, i64* %277, align 8
  %278 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %254, i64 5
  %279 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %253, i64 5
  %280 = bitcast %"class.cricket::Connection"** %278 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = bitcast %"class.cricket::Connection"** %279 to i64*
  store i64 %281, i64* %282, align 8
  %283 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %254, i64 6
  %284 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %253, i64 6
  %285 = bitcast %"class.cricket::Connection"** %283 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = bitcast %"class.cricket::Connection"** %284 to i64*
  store i64 %286, i64* %287, align 8
  %288 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %254, i64 7
  %289 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %253, i64 7
  %290 = bitcast %"class.cricket::Connection"** %288 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %"class.cricket::Connection"** %289 to i64*
  store i64 %291, i64* %292, align 8
  %293 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %254, i64 8
  %294 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %253, i64 8
  %295 = icmp eq %"class.cricket::Connection"** %293, %1
  br i1 %295, label %505, label %252, !llvm.loop !50

296:                                              ; preds = %500, %120
  %297 = phi %"class.cricket::Connection"** [ %4, %120 ], [ %503, %500 ]
  %298 = phi %"class.cricket::Connection"** [ %0, %120 ], [ %502, %500 ]
  %299 = phi %"class.cricket::Connection"** [ %116, %120 ], [ %501, %500 ]
  %300 = icmp eq %"class.cricket::Connection"** %299, %1
  br i1 %300, label %301, label %476

301:                                              ; preds = %296
  %302 = ptrtoint %"class.cricket::Connection"** %298 to i64
  %303 = icmp eq %"class.cricket::Connection"** %298, %116
  br i1 %303, label %505, label %304

304:                                              ; preds = %301
  %305 = add nsw i64 %115, -1
  %306 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %0, i64 %305
  %307 = ptrtoint %"class.cricket::Connection"** %306 to i64
  %308 = sub i64 %307, %302
  %309 = lshr i64 %308, 3
  %310 = add nuw nsw i64 %309, 1
  %311 = icmp ult i64 %310, 4
  br i1 %311, label %405, label %312

312:                                              ; preds = %304
  %313 = add nsw i64 %115, -1
  %314 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %0, i64 %313
  %315 = ptrtoint %"class.cricket::Connection"** %314 to i64
  %316 = sub i64 %315, %302
  %317 = lshr i64 %316, 3
  %318 = add nuw nsw i64 %317, 1
  %319 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %297, i64 %318
  %320 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %298, i64 %318
  %321 = icmp ult %"class.cricket::Connection"** %297, %320
  %322 = icmp ult %"class.cricket::Connection"** %298, %319
  %323 = and i1 %321, %322
  br i1 %323, label %405, label %324

324:                                              ; preds = %312
  %325 = and i64 %310, 4611686018427387900
  %326 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %297, i64 %325
  %327 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %298, i64 %325
  %328 = add nsw i64 %325, -4
  %329 = lshr exact i64 %328, 2
  %330 = add nuw nsw i64 %329, 1
  %331 = and i64 %330, 3
  %332 = icmp ult i64 %328, 12
  br i1 %332, label %384, label %333

333:                                              ; preds = %324
  %334 = sub nsw i64 %330, %331
  br label %335

335:                                              ; preds = %335, %333
  %336 = phi i64 [ 0, %333 ], [ %381, %335 ]
  %337 = phi i64 [ %334, %333 ], [ %382, %335 ]
  %338 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %297, i64 %336
  %339 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %298, i64 %336
  %340 = bitcast %"class.cricket::Connection"** %339 to <2 x i64>*
  %341 = load <2 x i64>, <2 x i64>* %340, align 8, !alias.scope !51
  %342 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %339, i64 2
  %343 = bitcast %"class.cricket::Connection"** %342 to <2 x i64>*
  %344 = load <2 x i64>, <2 x i64>* %343, align 8, !alias.scope !51
  %345 = bitcast %"class.cricket::Connection"** %338 to <2 x i64>*
  store <2 x i64> %341, <2 x i64>* %345, align 8, !alias.scope !54, !noalias !51
  %346 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %338, i64 2
  %347 = bitcast %"class.cricket::Connection"** %346 to <2 x i64>*
  store <2 x i64> %344, <2 x i64>* %347, align 8, !alias.scope !54, !noalias !51
  %348 = or i64 %336, 4
  %349 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %297, i64 %348
  %350 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %298, i64 %348
  %351 = bitcast %"class.cricket::Connection"** %350 to <2 x i64>*
  %352 = load <2 x i64>, <2 x i64>* %351, align 8, !alias.scope !51
  %353 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %350, i64 2
  %354 = bitcast %"class.cricket::Connection"** %353 to <2 x i64>*
  %355 = load <2 x i64>, <2 x i64>* %354, align 8, !alias.scope !51
  %356 = bitcast %"class.cricket::Connection"** %349 to <2 x i64>*
  store <2 x i64> %352, <2 x i64>* %356, align 8, !alias.scope !54, !noalias !51
  %357 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %349, i64 2
  %358 = bitcast %"class.cricket::Connection"** %357 to <2 x i64>*
  store <2 x i64> %355, <2 x i64>* %358, align 8, !alias.scope !54, !noalias !51
  %359 = or i64 %336, 8
  %360 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %297, i64 %359
  %361 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %298, i64 %359
  %362 = bitcast %"class.cricket::Connection"** %361 to <2 x i64>*
  %363 = load <2 x i64>, <2 x i64>* %362, align 8, !alias.scope !51
  %364 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %361, i64 2
  %365 = bitcast %"class.cricket::Connection"** %364 to <2 x i64>*
  %366 = load <2 x i64>, <2 x i64>* %365, align 8, !alias.scope !51
  %367 = bitcast %"class.cricket::Connection"** %360 to <2 x i64>*
  store <2 x i64> %363, <2 x i64>* %367, align 8, !alias.scope !54, !noalias !51
  %368 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %360, i64 2
  %369 = bitcast %"class.cricket::Connection"** %368 to <2 x i64>*
  store <2 x i64> %366, <2 x i64>* %369, align 8, !alias.scope !54, !noalias !51
  %370 = or i64 %336, 12
  %371 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %297, i64 %370
  %372 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %298, i64 %370
  %373 = bitcast %"class.cricket::Connection"** %372 to <2 x i64>*
  %374 = load <2 x i64>, <2 x i64>* %373, align 8, !alias.scope !51
  %375 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %372, i64 2
  %376 = bitcast %"class.cricket::Connection"** %375 to <2 x i64>*
  %377 = load <2 x i64>, <2 x i64>* %376, align 8, !alias.scope !51
  %378 = bitcast %"class.cricket::Connection"** %371 to <2 x i64>*
  store <2 x i64> %374, <2 x i64>* %378, align 8, !alias.scope !54, !noalias !51
  %379 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %371, i64 2
  %380 = bitcast %"class.cricket::Connection"** %379 to <2 x i64>*
  store <2 x i64> %377, <2 x i64>* %380, align 8, !alias.scope !54, !noalias !51
  %381 = add i64 %336, 16
  %382 = add i64 %337, -4
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %335, !llvm.loop !56

384:                                              ; preds = %335, %324
  %385 = phi i64 [ 0, %324 ], [ %381, %335 ]
  %386 = icmp eq i64 %331, 0
  br i1 %386, label %403, label %387

387:                                              ; preds = %384, %387
  %388 = phi i64 [ %400, %387 ], [ %385, %384 ]
  %389 = phi i64 [ %401, %387 ], [ %331, %384 ]
  %390 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %297, i64 %388
  %391 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %298, i64 %388
  %392 = bitcast %"class.cricket::Connection"** %391 to <2 x i64>*
  %393 = load <2 x i64>, <2 x i64>* %392, align 8, !alias.scope !51
  %394 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %391, i64 2
  %395 = bitcast %"class.cricket::Connection"** %394 to <2 x i64>*
  %396 = load <2 x i64>, <2 x i64>* %395, align 8, !alias.scope !51
  %397 = bitcast %"class.cricket::Connection"** %390 to <2 x i64>*
  store <2 x i64> %393, <2 x i64>* %397, align 8, !alias.scope !54, !noalias !51
  %398 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %390, i64 2
  %399 = bitcast %"class.cricket::Connection"** %398 to <2 x i64>*
  store <2 x i64> %396, <2 x i64>* %399, align 8, !alias.scope !54, !noalias !51
  %400 = add i64 %388, 4
  %401 = add i64 %389, -1
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %403, label %387, !llvm.loop !57

403:                                              ; preds = %387, %384
  %404 = icmp eq i64 %310, %325
  br i1 %404, label %505, label %405

405:                                              ; preds = %403, %312, %304
  %406 = phi %"class.cricket::Connection"** [ %297, %312 ], [ %297, %304 ], [ %326, %403 ]
  %407 = phi %"class.cricket::Connection"** [ %298, %312 ], [ %298, %304 ], [ %327, %403 ]
  %408 = ptrtoint %"class.cricket::Connection"** %407 to i64
  %409 = add nsw i64 %115, -1
  %410 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %0, i64 %409
  %411 = ptrtoint %"class.cricket::Connection"** %410 to i64
  %412 = sub i64 %411, %408
  %413 = lshr i64 %412, 3
  %414 = add nuw nsw i64 %413, 1
  %415 = and i64 %414, 7
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %428, label %417

417:                                              ; preds = %405, %417
  %418 = phi %"class.cricket::Connection"** [ %425, %417 ], [ %406, %405 ]
  %419 = phi %"class.cricket::Connection"** [ %424, %417 ], [ %407, %405 ]
  %420 = phi i64 [ %426, %417 ], [ %415, %405 ]
  %421 = bitcast %"class.cricket::Connection"** %419 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = bitcast %"class.cricket::Connection"** %418 to i64*
  store i64 %422, i64* %423, align 8
  %424 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %419, i64 1
  %425 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %418, i64 1
  %426 = add i64 %420, -1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %417, !llvm.loop !58

428:                                              ; preds = %417, %405
  %429 = phi %"class.cricket::Connection"** [ %406, %405 ], [ %425, %417 ]
  %430 = phi %"class.cricket::Connection"** [ %407, %405 ], [ %424, %417 ]
  %431 = icmp ult i64 %412, 56
  br i1 %431, label %505, label %432

432:                                              ; preds = %428, %432
  %433 = phi %"class.cricket::Connection"** [ %474, %432 ], [ %429, %428 ]
  %434 = phi %"class.cricket::Connection"** [ %473, %432 ], [ %430, %428 ]
  %435 = bitcast %"class.cricket::Connection"** %434 to i64*
  %436 = load i64, i64* %435, align 8
  %437 = bitcast %"class.cricket::Connection"** %433 to i64*
  store i64 %436, i64* %437, align 8
  %438 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %434, i64 1
  %439 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %433, i64 1
  %440 = bitcast %"class.cricket::Connection"** %438 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = bitcast %"class.cricket::Connection"** %439 to i64*
  store i64 %441, i64* %442, align 8
  %443 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %434, i64 2
  %444 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %433, i64 2
  %445 = bitcast %"class.cricket::Connection"** %443 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = bitcast %"class.cricket::Connection"** %444 to i64*
  store i64 %446, i64* %447, align 8
  %448 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %434, i64 3
  %449 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %433, i64 3
  %450 = bitcast %"class.cricket::Connection"** %448 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = bitcast %"class.cricket::Connection"** %449 to i64*
  store i64 %451, i64* %452, align 8
  %453 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %434, i64 4
  %454 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %433, i64 4
  %455 = bitcast %"class.cricket::Connection"** %453 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = bitcast %"class.cricket::Connection"** %454 to i64*
  store i64 %456, i64* %457, align 8
  %458 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %434, i64 5
  %459 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %433, i64 5
  %460 = bitcast %"class.cricket::Connection"** %458 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = bitcast %"class.cricket::Connection"** %459 to i64*
  store i64 %461, i64* %462, align 8
  %463 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %434, i64 6
  %464 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %433, i64 6
  %465 = bitcast %"class.cricket::Connection"** %463 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = bitcast %"class.cricket::Connection"** %464 to i64*
  store i64 %466, i64* %467, align 8
  %468 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %434, i64 7
  %469 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %433, i64 7
  %470 = bitcast %"class.cricket::Connection"** %468 to i64*
  %471 = load i64, i64* %470, align 8
  %472 = bitcast %"class.cricket::Connection"** %469 to i64*
  store i64 %471, i64* %472, align 8
  %473 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %434, i64 8
  %474 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %433, i64 8
  %475 = icmp eq %"class.cricket::Connection"** %473, %116
  br i1 %475, label %505, label %432, !llvm.loop !59

476:                                              ; preds = %296
  %477 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %299, align 8
  %478 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %298, align 8
  %479 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %121, align 8
  %480 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %479, %"class.cricket::Connection"* %477, %"class.cricket::Connection"* %478, i8 0, i64 undef, i8* null) #12
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %484, label %482

482:                                              ; preds = %476
  %483 = icmp sgt i32 %480, 0
  br i1 %483, label %490, label %495

484:                                              ; preds = %476
  %485 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %477, i64 0, i32 27
  %486 = load i32, i32* %485, align 8
  %487 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %478, i64 0, i32 27
  %488 = load i32, i32* %487, align 8
  %489 = icmp slt i32 %486, %488
  br i1 %489, label %490, label %495

490:                                              ; preds = %484, %482
  %491 = bitcast %"class.cricket::Connection"** %299 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = bitcast %"class.cricket::Connection"** %297 to i64*
  store i64 %492, i64* %493, align 8
  %494 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %299, i64 1
  br label %500

495:                                              ; preds = %484, %482
  %496 = bitcast %"class.cricket::Connection"** %298 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = bitcast %"class.cricket::Connection"** %297 to i64*
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %298, i64 1
  br label %500

500:                                              ; preds = %495, %490
  %501 = phi %"class.cricket::Connection"** [ %494, %490 ], [ %299, %495 ]
  %502 = phi %"class.cricket::Connection"** [ %298, %490 ], [ %499, %495 ]
  %503 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %297, i64 1
  %504 = icmp eq %"class.cricket::Connection"** %502, %116
  br i1 %504, label %122, label %296

505:                                              ; preds = %428, %432, %248, %252, %109, %403, %224, %301, %122, %46, %44, %26, %34, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__115__inplace_mergeIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEl"(%"class.cricket::Connection"**, %"class.cricket::Connection"**, %"class.cricket::Connection"**, %class.anon.241* readonly dereferenceable(8), i64, i64, %"class.cricket::Connection"**, i64) unnamed_addr #0 {
  %9 = ptrtoint %"class.cricket::Connection"** %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %1037, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %"class.cricket::Connection"** %1 to i64
  %13 = ptrtoint %"class.cricket::Connection"** %0 to i64
  %14 = getelementptr inbounds %class.anon.241, %class.anon.241* %3, i64 0, i32 0
  br label %15

15:                                               ; preds = %11, %1030
  %16 = phi %"class.cricket::Connection"** [ %2, %11 ], [ %1035, %1030 ]
  %17 = phi i64 [ %4, %11 ], [ %1034, %1030 ]
  %18 = phi i64 [ %5, %11 ], [ %1033, %1030 ]
  %19 = phi i64 [ %12, %11 ], [ %1032, %1030 ]
  %20 = phi i64 [ %13, %11 ], [ %1031, %1030 ]
  %21 = icmp sgt i64 %17, %7
  %22 = icmp sgt i64 %18, %7
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %29

24:                                               ; preds = %15
  %25 = icmp eq i64 %17, 0
  br i1 %25, label %1037, label %26

26:                                               ; preds = %24
  %27 = inttoptr i64 %19 to %"class.cricket::Connection"**
  %28 = inttoptr i64 %19 to i8*
  br label %635

29:                                               ; preds = %15
  %30 = inttoptr i64 %20 to %"class.cricket::Connection"**
  %31 = inttoptr i64 %20 to i8*
  %32 = inttoptr i64 %19 to %"class.cricket::Connection"**
  %33 = inttoptr i64 %19 to i8*
  %34 = icmp sgt i64 %17, %18
  br i1 %34, label %168, label %35

35:                                               ; preds = %29
  %36 = icmp eq %"class.cricket::Connection"** %30, %32
  br i1 %36, label %1037, label %37

37:                                               ; preds = %35
  %38 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %32, i64 -1
  %39 = bitcast %"class.cricket::Connection"** %38 to i8*
  %40 = sub i64 0, %20
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %44, 4
  br i1 %45, label %46, label %73

46:                                               ; preds = %166, %73, %37
  %47 = phi %"class.cricket::Connection"** [ %6, %73 ], [ %6, %37 ], [ %89, %166 ]
  %48 = phi %"class.cricket::Connection"** [ %30, %73 ], [ %30, %37 ], [ %90, %166 ]
  %49 = ptrtoint %"class.cricket::Connection"** %48 to i64
  %50 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %32, i64 -1
  %51 = ptrtoint %"class.cricket::Connection"** %50 to i64
  %52 = sub i64 %51, %49
  %53 = lshr i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %46, %57
  %58 = phi %"class.cricket::Connection"** [ %65, %57 ], [ %47, %46 ]
  %59 = phi %"class.cricket::Connection"** [ %64, %57 ], [ %48, %46 ]
  %60 = phi i64 [ %66, %57 ], [ %55, %46 ]
  %61 = bitcast %"class.cricket::Connection"** %59 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.cricket::Connection"** %58 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %59, i64 1
  %65 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %58, i64 1
  %66 = add i64 %60, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %57, !llvm.loop !60

68:                                               ; preds = %57, %46
  %69 = phi %"class.cricket::Connection"** [ undef, %46 ], [ %65, %57 ]
  %70 = phi %"class.cricket::Connection"** [ %47, %46 ], [ %65, %57 ]
  %71 = phi %"class.cricket::Connection"** [ %48, %46 ], [ %64, %57 ]
  %72 = icmp ult i64 %52, 56
  br i1 %72, label %301, label %346

73:                                               ; preds = %37
  %74 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %32, i64 -1
  %75 = bitcast %"class.cricket::Connection"** %74 to i8*
  %76 = sub i64 0, %20
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = ptrtoint i8* %77 to i64
  %79 = lshr i64 %78, 3
  %80 = add nuw nsw i64 %79, 1
  %81 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %80
  %82 = bitcast %"class.cricket::Connection"** %81 to i8*
  %83 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %30, i64 %80
  %84 = icmp ugt %"class.cricket::Connection"** %83, %6
  %85 = icmp ult i8* %31, %82
  %86 = and i1 %84, %85
  br i1 %86, label %46, label %87

87:                                               ; preds = %73
  %88 = and i64 %44, 4611686018427387900
  %89 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %88
  %90 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %30, i64 %88
  %91 = add nsw i64 %88, -4
  %92 = lshr exact i64 %91, 2
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, 3
  %95 = icmp ult i64 %91, 12
  br i1 %95, label %147, label %96

96:                                               ; preds = %87
  %97 = sub nsw i64 %93, %94
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %144, %98 ]
  %100 = phi i64 [ %97, %96 ], [ %145, %98 ]
  %101 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %99
  %102 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %30, i64 %99
  %103 = bitcast %"class.cricket::Connection"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !61
  %105 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %102, i64 2
  %106 = bitcast %"class.cricket::Connection"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !61
  %108 = bitcast %"class.cricket::Connection"** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !64, !noalias !61
  %109 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %101, i64 2
  %110 = bitcast %"class.cricket::Connection"** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !64, !noalias !61
  %111 = or i64 %99, 4
  %112 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %111
  %113 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %30, i64 %111
  %114 = bitcast %"class.cricket::Connection"** %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !61
  %116 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %113, i64 2
  %117 = bitcast %"class.cricket::Connection"** %116 to <2 x i64>*
  %118 = load <2 x i64>, <2 x i64>* %117, align 8, !alias.scope !61
  %119 = bitcast %"class.cricket::Connection"** %112 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %119, align 8, !alias.scope !64, !noalias !61
  %120 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %112, i64 2
  %121 = bitcast %"class.cricket::Connection"** %120 to <2 x i64>*
  store <2 x i64> %118, <2 x i64>* %121, align 8, !alias.scope !64, !noalias !61
  %122 = or i64 %99, 8
  %123 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %122
  %124 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %30, i64 %122
  %125 = bitcast %"class.cricket::Connection"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !61
  %127 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %124, i64 2
  %128 = bitcast %"class.cricket::Connection"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !61
  %130 = bitcast %"class.cricket::Connection"** %123 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %130, align 8, !alias.scope !64, !noalias !61
  %131 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %123, i64 2
  %132 = bitcast %"class.cricket::Connection"** %131 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %132, align 8, !alias.scope !64, !noalias !61
  %133 = or i64 %99, 12
  %134 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %133
  %135 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %30, i64 %133
  %136 = bitcast %"class.cricket::Connection"** %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !61
  %138 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %135, i64 2
  %139 = bitcast %"class.cricket::Connection"** %138 to <2 x i64>*
  %140 = load <2 x i64>, <2 x i64>* %139, align 8, !alias.scope !61
  %141 = bitcast %"class.cricket::Connection"** %134 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %141, align 8, !alias.scope !64, !noalias !61
  %142 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %134, i64 2
  %143 = bitcast %"class.cricket::Connection"** %142 to <2 x i64>*
  store <2 x i64> %140, <2 x i64>* %143, align 8, !alias.scope !64, !noalias !61
  %144 = add i64 %99, 16
  %145 = add i64 %100, -4
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %98, !llvm.loop !66

147:                                              ; preds = %98, %87
  %148 = phi i64 [ 0, %87 ], [ %144, %98 ]
  %149 = icmp eq i64 %94, 0
  br i1 %149, label %166, label %150

150:                                              ; preds = %147, %150
  %151 = phi i64 [ %163, %150 ], [ %148, %147 ]
  %152 = phi i64 [ %164, %150 ], [ %94, %147 ]
  %153 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %151
  %154 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %30, i64 %151
  %155 = bitcast %"class.cricket::Connection"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !61
  %157 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %154, i64 2
  %158 = bitcast %"class.cricket::Connection"** %157 to <2 x i64>*
  %159 = load <2 x i64>, <2 x i64>* %158, align 8, !alias.scope !61
  %160 = bitcast %"class.cricket::Connection"** %153 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %160, align 8, !alias.scope !64, !noalias !61
  %161 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %153, i64 2
  %162 = bitcast %"class.cricket::Connection"** %161 to <2 x i64>*
  store <2 x i64> %159, <2 x i64>* %162, align 8, !alias.scope !64, !noalias !61
  %163 = add i64 %151, 4
  %164 = add i64 %152, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %150, !llvm.loop !67

166:                                              ; preds = %150, %147
  %167 = icmp eq i64 %44, %88
  br i1 %167, label %301, label %46

168:                                              ; preds = %29
  %169 = icmp eq %"class.cricket::Connection"** %16, %32
  br i1 %169, label %1037, label %170

170:                                              ; preds = %168
  %171 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %16, i64 -1
  %172 = bitcast %"class.cricket::Connection"** %171 to i8*
  %173 = sub i64 0, %19
  %174 = getelementptr i8, i8* %172, i64 %173
  %175 = ptrtoint i8* %174 to i64
  %176 = lshr i64 %175, 3
  %177 = add nuw nsw i64 %176, 1
  %178 = icmp ult i64 %177, 4
  br i1 %178, label %179, label %206

179:                                              ; preds = %299, %206, %170
  %180 = phi %"class.cricket::Connection"** [ %6, %206 ], [ %6, %170 ], [ %222, %299 ]
  %181 = phi %"class.cricket::Connection"** [ %32, %206 ], [ %32, %170 ], [ %223, %299 ]
  %182 = ptrtoint %"class.cricket::Connection"** %181 to i64
  %183 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %16, i64 -1
  %184 = ptrtoint %"class.cricket::Connection"** %183 to i64
  %185 = sub i64 %184, %182
  %186 = lshr i64 %185, 3
  %187 = add nuw nsw i64 %186, 1
  %188 = and i64 %187, 7
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %179, %190
  %191 = phi %"class.cricket::Connection"** [ %198, %190 ], [ %180, %179 ]
  %192 = phi %"class.cricket::Connection"** [ %197, %190 ], [ %181, %179 ]
  %193 = phi i64 [ %199, %190 ], [ %188, %179 ]
  %194 = bitcast %"class.cricket::Connection"** %192 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.cricket::Connection"** %191 to i64*
  store i64 %195, i64* %196, align 8
  %197 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %192, i64 1
  %198 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %191, i64 1
  %199 = add i64 %193, -1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %190, !llvm.loop !68

201:                                              ; preds = %190, %179
  %202 = phi %"class.cricket::Connection"** [ undef, %179 ], [ %198, %190 ]
  %203 = phi %"class.cricket::Connection"** [ %180, %179 ], [ %198, %190 ]
  %204 = phi %"class.cricket::Connection"** [ %181, %179 ], [ %197, %190 ]
  %205 = icmp ult i64 %185, 56
  br i1 %205, label %390, label %591

206:                                              ; preds = %170
  %207 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %16, i64 -1
  %208 = bitcast %"class.cricket::Connection"** %207 to i8*
  %209 = sub i64 0, %19
  %210 = getelementptr i8, i8* %208, i64 %209
  %211 = ptrtoint i8* %210 to i64
  %212 = lshr i64 %211, 3
  %213 = add nuw nsw i64 %212, 1
  %214 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %213
  %215 = bitcast %"class.cricket::Connection"** %214 to i8*
  %216 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %32, i64 %213
  %217 = icmp ugt %"class.cricket::Connection"** %216, %6
  %218 = icmp ult i8* %33, %215
  %219 = and i1 %217, %218
  br i1 %219, label %179, label %220

220:                                              ; preds = %206
  %221 = and i64 %177, 4611686018427387900
  %222 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %221
  %223 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %32, i64 %221
  %224 = add nsw i64 %221, -4
  %225 = lshr exact i64 %224, 2
  %226 = add nuw nsw i64 %225, 1
  %227 = and i64 %226, 3
  %228 = icmp ult i64 %224, 12
  br i1 %228, label %280, label %229

229:                                              ; preds = %220
  %230 = sub nsw i64 %226, %227
  br label %231

231:                                              ; preds = %231, %229
  %232 = phi i64 [ 0, %229 ], [ %277, %231 ]
  %233 = phi i64 [ %230, %229 ], [ %278, %231 ]
  %234 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %232
  %235 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %32, i64 %232
  %236 = bitcast %"class.cricket::Connection"** %235 to <2 x i64>*
  %237 = load <2 x i64>, <2 x i64>* %236, align 8, !alias.scope !69
  %238 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %235, i64 2
  %239 = bitcast %"class.cricket::Connection"** %238 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 8, !alias.scope !69
  %241 = bitcast %"class.cricket::Connection"** %234 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %241, align 8, !alias.scope !72, !noalias !69
  %242 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %234, i64 2
  %243 = bitcast %"class.cricket::Connection"** %242 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %243, align 8, !alias.scope !72, !noalias !69
  %244 = or i64 %232, 4
  %245 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %244
  %246 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %32, i64 %244
  %247 = bitcast %"class.cricket::Connection"** %246 to <2 x i64>*
  %248 = load <2 x i64>, <2 x i64>* %247, align 8, !alias.scope !69
  %249 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %246, i64 2
  %250 = bitcast %"class.cricket::Connection"** %249 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8, !alias.scope !69
  %252 = bitcast %"class.cricket::Connection"** %245 to <2 x i64>*
  store <2 x i64> %248, <2 x i64>* %252, align 8, !alias.scope !72, !noalias !69
  %253 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %245, i64 2
  %254 = bitcast %"class.cricket::Connection"** %253 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %254, align 8, !alias.scope !72, !noalias !69
  %255 = or i64 %232, 8
  %256 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %255
  %257 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %32, i64 %255
  %258 = bitcast %"class.cricket::Connection"** %257 to <2 x i64>*
  %259 = load <2 x i64>, <2 x i64>* %258, align 8, !alias.scope !69
  %260 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %257, i64 2
  %261 = bitcast %"class.cricket::Connection"** %260 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 8, !alias.scope !69
  %263 = bitcast %"class.cricket::Connection"** %256 to <2 x i64>*
  store <2 x i64> %259, <2 x i64>* %263, align 8, !alias.scope !72, !noalias !69
  %264 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %256, i64 2
  %265 = bitcast %"class.cricket::Connection"** %264 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %265, align 8, !alias.scope !72, !noalias !69
  %266 = or i64 %232, 12
  %267 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %266
  %268 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %32, i64 %266
  %269 = bitcast %"class.cricket::Connection"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !69
  %271 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %268, i64 2
  %272 = bitcast %"class.cricket::Connection"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !69
  %274 = bitcast %"class.cricket::Connection"** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !72, !noalias !69
  %275 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %267, i64 2
  %276 = bitcast %"class.cricket::Connection"** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !72, !noalias !69
  %277 = add i64 %232, 16
  %278 = add i64 %233, -4
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %231, !llvm.loop !74

280:                                              ; preds = %231, %220
  %281 = phi i64 [ 0, %220 ], [ %277, %231 ]
  %282 = icmp eq i64 %227, 0
  br i1 %282, label %299, label %283

283:                                              ; preds = %280, %283
  %284 = phi i64 [ %296, %283 ], [ %281, %280 ]
  %285 = phi i64 [ %297, %283 ], [ %227, %280 ]
  %286 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %6, i64 %284
  %287 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %32, i64 %284
  %288 = bitcast %"class.cricket::Connection"** %287 to <2 x i64>*
  %289 = load <2 x i64>, <2 x i64>* %288, align 8, !alias.scope !69
  %290 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %287, i64 2
  %291 = bitcast %"class.cricket::Connection"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !69
  %293 = bitcast %"class.cricket::Connection"** %286 to <2 x i64>*
  store <2 x i64> %289, <2 x i64>* %293, align 8, !alias.scope !72, !noalias !69
  %294 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %286, i64 2
  %295 = bitcast %"class.cricket::Connection"** %294 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %295, align 8, !alias.scope !72, !noalias !69
  %296 = add i64 %284, 4
  %297 = add i64 %285, -1
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %283, !llvm.loop !75

299:                                              ; preds = %283, %280
  %300 = icmp eq i64 %177, %221
  br i1 %300, label %390, label %179

301:                                              ; preds = %68, %346, %166
  %302 = phi %"class.cricket::Connection"** [ %89, %166 ], [ %69, %68 ], [ %388, %346 ]
  %303 = icmp eq %"class.cricket::Connection"** %302, %6
  br i1 %303, label %1037, label %304

304:                                              ; preds = %301, %341
  %305 = phi %"class.cricket::Connection"** [ %343, %341 ], [ %6, %301 ]
  %306 = phi %"class.cricket::Connection"** [ %344, %341 ], [ %30, %301 ]
  %307 = phi %"class.cricket::Connection"** [ %342, %341 ], [ %32, %301 ]
  %308 = icmp eq %"class.cricket::Connection"** %307, %16
  br i1 %308, label %309, label %317

309:                                              ; preds = %304
  %310 = ptrtoint %"class.cricket::Connection"** %302 to i64
  %311 = ptrtoint %"class.cricket::Connection"** %305 to i64
  %312 = sub i64 %310, %311
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %1037, label %314

314:                                              ; preds = %309
  %315 = bitcast %"class.cricket::Connection"** %306 to i8*
  %316 = bitcast %"class.cricket::Connection"** %305 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %315, i8* align 8 %316, i64 %312, i1 false) #12
  br label %1037

317:                                              ; preds = %304
  %318 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %307, align 8
  %319 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %305, align 8
  %320 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %14, align 8
  %321 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %320, %"class.cricket::Connection"* %318, %"class.cricket::Connection"* %319, i8 0, i64 undef, i8* null) #12
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %325, label %323

323:                                              ; preds = %317
  %324 = icmp sgt i32 %321, 0
  br i1 %324, label %331, label %336

325:                                              ; preds = %317
  %326 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %318, i64 0, i32 27
  %327 = load i32, i32* %326, align 8
  %328 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %319, i64 0, i32 27
  %329 = load i32, i32* %328, align 8
  %330 = icmp slt i32 %327, %329
  br i1 %330, label %331, label %336

331:                                              ; preds = %325, %323
  %332 = bitcast %"class.cricket::Connection"** %307 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = bitcast %"class.cricket::Connection"** %306 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %307, i64 1
  br label %341

336:                                              ; preds = %325, %323
  %337 = bitcast %"class.cricket::Connection"** %305 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"class.cricket::Connection"** %306 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %305, i64 1
  br label %341

341:                                              ; preds = %336, %331
  %342 = phi %"class.cricket::Connection"** [ %335, %331 ], [ %307, %336 ]
  %343 = phi %"class.cricket::Connection"** [ %305, %331 ], [ %340, %336 ]
  %344 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %306, i64 1
  %345 = icmp eq %"class.cricket::Connection"** %343, %302
  br i1 %345, label %1037, label %304

346:                                              ; preds = %68, %346
  %347 = phi %"class.cricket::Connection"** [ %388, %346 ], [ %70, %68 ]
  %348 = phi %"class.cricket::Connection"** [ %387, %346 ], [ %71, %68 ]
  %349 = bitcast %"class.cricket::Connection"** %348 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = bitcast %"class.cricket::Connection"** %347 to i64*
  store i64 %350, i64* %351, align 8
  %352 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %348, i64 1
  %353 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %347, i64 1
  %354 = bitcast %"class.cricket::Connection"** %352 to i64*
  %355 = load i64, i64* %354, align 8
  %356 = bitcast %"class.cricket::Connection"** %353 to i64*
  store i64 %355, i64* %356, align 8
  %357 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %348, i64 2
  %358 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %347, i64 2
  %359 = bitcast %"class.cricket::Connection"** %357 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = bitcast %"class.cricket::Connection"** %358 to i64*
  store i64 %360, i64* %361, align 8
  %362 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %348, i64 3
  %363 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %347, i64 3
  %364 = bitcast %"class.cricket::Connection"** %362 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = bitcast %"class.cricket::Connection"** %363 to i64*
  store i64 %365, i64* %366, align 8
  %367 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %348, i64 4
  %368 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %347, i64 4
  %369 = bitcast %"class.cricket::Connection"** %367 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = bitcast %"class.cricket::Connection"** %368 to i64*
  store i64 %370, i64* %371, align 8
  %372 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %348, i64 5
  %373 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %347, i64 5
  %374 = bitcast %"class.cricket::Connection"** %372 to i64*
  %375 = load i64, i64* %374, align 8
  %376 = bitcast %"class.cricket::Connection"** %373 to i64*
  store i64 %375, i64* %376, align 8
  %377 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %348, i64 6
  %378 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %347, i64 6
  %379 = bitcast %"class.cricket::Connection"** %377 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = bitcast %"class.cricket::Connection"** %378 to i64*
  store i64 %380, i64* %381, align 8
  %382 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %348, i64 7
  %383 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %347, i64 7
  %384 = bitcast %"class.cricket::Connection"** %382 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = bitcast %"class.cricket::Connection"** %383 to i64*
  store i64 %385, i64* %386, align 8
  %387 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %348, i64 8
  %388 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %347, i64 8
  %389 = icmp eq %"class.cricket::Connection"** %387, %32
  br i1 %389, label %301, label %346, !llvm.loop !76

390:                                              ; preds = %201, %591, %299
  %391 = phi %"class.cricket::Connection"** [ %222, %299 ], [ %202, %201 ], [ %633, %591 ]
  %392 = icmp eq %"class.cricket::Connection"** %391, %6
  br i1 %392, label %1037, label %393

393:                                              ; preds = %390, %581
  %394 = phi %"class.cricket::Connection"** [ %589, %581 ], [ %16, %390 ]
  %395 = phi %"class.cricket::Connection"** [ %584, %581 ], [ %391, %390 ]
  %396 = phi %"class.cricket::Connection"** [ %583, %581 ], [ %32, %390 ]
  %397 = icmp eq %"class.cricket::Connection"** %396, %30
  br i1 %397, label %398, label %564

398:                                              ; preds = %393
  %399 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %395, i64 -1
  %400 = ptrtoint %"class.cricket::Connection"** %399 to i64
  %401 = sub i64 %400, %9
  %402 = lshr i64 %401, 3
  %403 = add nuw nsw i64 %402, 1
  %404 = icmp ult i64 %403, 4
  br i1 %404, label %495, label %405

405:                                              ; preds = %398
  %406 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %395, i64 -1
  %407 = ptrtoint %"class.cricket::Connection"** %406 to i64
  %408 = sub i64 %407, %9
  %409 = lshr i64 %408, 3
  %410 = xor i64 %409, -1
  %411 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %394, i64 %410
  %412 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %395, i64 %410
  %413 = icmp ult %"class.cricket::Connection"** %411, %395
  %414 = icmp ult %"class.cricket::Connection"** %412, %394
  %415 = and i1 %413, %414
  br i1 %415, label %495, label %416

416:                                              ; preds = %405
  %417 = and i64 %403, 4611686018427387900
  %418 = sub nsw i64 0, %417
  %419 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %395, i64 %418
  %420 = sub nsw i64 0, %417
  %421 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %394, i64 %420
  %422 = add nsw i64 %417, -4
  %423 = lshr exact i64 %422, 2
  %424 = add nuw nsw i64 %423, 1
  %425 = and i64 %424, 1
  %426 = icmp eq i64 %422, 0
  br i1 %426, label %473, label %427

427:                                              ; preds = %416
  %428 = sub nuw nsw i64 %424, %425
  %429 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %395, i64 -1
  %430 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %394, i64 -1
  %431 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %395, i64 -1
  %432 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %394, i64 -1
  br label %433

433:                                              ; preds = %433, %427
  %434 = phi i64 [ 0, %427 ], [ %468, %433 ]
  %435 = phi i64 [ %428, %427 ], [ %469, %433 ]
  %436 = sub i64 0, %434
  %437 = sub i64 0, %434
  %438 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %429, i64 %436
  %439 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %438, i64 -1
  %440 = bitcast %"class.cricket::Connection"** %439 to <2 x i64>*
  %441 = load <2 x i64>, <2 x i64>* %440, align 8, !alias.scope !77
  %442 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %438, i64 -2
  %443 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %442, i64 -1
  %444 = bitcast %"class.cricket::Connection"** %443 to <2 x i64>*
  %445 = load <2 x i64>, <2 x i64>* %444, align 8, !alias.scope !77
  %446 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %430, i64 %437
  %447 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %446, i64 -1
  %448 = bitcast %"class.cricket::Connection"** %447 to <2 x i64>*
  store <2 x i64> %441, <2 x i64>* %448, align 8, !alias.scope !80, !noalias !77
  %449 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %446, i64 -2
  %450 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %449, i64 -1
  %451 = bitcast %"class.cricket::Connection"** %450 to <2 x i64>*
  store <2 x i64> %445, <2 x i64>* %451, align 8, !alias.scope !80, !noalias !77
  %452 = sub nuw nsw i64 -4, %434
  %453 = sub nuw nsw i64 -4, %434
  %454 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %431, i64 %452
  %455 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %454, i64 -1
  %456 = bitcast %"class.cricket::Connection"** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !77
  %458 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %454, i64 -2
  %459 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %458, i64 -1
  %460 = bitcast %"class.cricket::Connection"** %459 to <2 x i64>*
  %461 = load <2 x i64>, <2 x i64>* %460, align 8, !alias.scope !77
  %462 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %432, i64 %453
  %463 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %462, i64 -1
  %464 = bitcast %"class.cricket::Connection"** %463 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %464, align 8, !alias.scope !80, !noalias !77
  %465 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %462, i64 -2
  %466 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %465, i64 -1
  %467 = bitcast %"class.cricket::Connection"** %466 to <2 x i64>*
  store <2 x i64> %461, <2 x i64>* %467, align 8, !alias.scope !80, !noalias !77
  %468 = add i64 %434, 8
  %469 = add i64 %435, -2
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %471, label %433, !llvm.loop !82

471:                                              ; preds = %433
  %472 = sub nuw nsw i64 -8, %434
  br label %473

473:                                              ; preds = %471, %416
  %474 = phi i64 [ 0, %416 ], [ %472, %471 ]
  %475 = icmp eq i64 %425, 0
  br i1 %475, label %493, label %476

476:                                              ; preds = %473
  %477 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %395, i64 -1
  %478 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %394, i64 -1
  %479 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %477, i64 %474
  %480 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %479, i64 -1
  %481 = bitcast %"class.cricket::Connection"** %480 to <2 x i64>*
  %482 = load <2 x i64>, <2 x i64>* %481, align 8, !alias.scope !77
  %483 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %479, i64 -2
  %484 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %483, i64 -1
  %485 = bitcast %"class.cricket::Connection"** %484 to <2 x i64>*
  %486 = load <2 x i64>, <2 x i64>* %485, align 8, !alias.scope !77
  %487 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %478, i64 %474
  %488 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %487, i64 -1
  %489 = bitcast %"class.cricket::Connection"** %488 to <2 x i64>*
  store <2 x i64> %482, <2 x i64>* %489, align 8, !alias.scope !80, !noalias !77
  %490 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %487, i64 -2
  %491 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %490, i64 -1
  %492 = bitcast %"class.cricket::Connection"** %491 to <2 x i64>*
  store <2 x i64> %486, <2 x i64>* %492, align 8, !alias.scope !80, !noalias !77
  br label %493

493:                                              ; preds = %473, %476
  %494 = icmp eq i64 %403, %417
  br i1 %494, label %1037, label %495

495:                                              ; preds = %493, %405, %398
  %496 = phi %"class.cricket::Connection"** [ %395, %405 ], [ %395, %398 ], [ %419, %493 ]
  %497 = phi %"class.cricket::Connection"** [ %394, %405 ], [ %394, %398 ], [ %421, %493 ]
  %498 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %496, i64 -1
  %499 = ptrtoint %"class.cricket::Connection"** %498 to i64
  %500 = sub i64 %499, %9
  %501 = lshr i64 %500, 3
  %502 = add nuw nsw i64 %501, 1
  %503 = and i64 %502, 7
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %516, label %505

505:                                              ; preds = %495, %505
  %506 = phi %"class.cricket::Connection"** [ %509, %505 ], [ %496, %495 ]
  %507 = phi %"class.cricket::Connection"** [ %512, %505 ], [ %497, %495 ]
  %508 = phi i64 [ %514, %505 ], [ %503, %495 ]
  %509 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %506, i64 -1
  %510 = bitcast %"class.cricket::Connection"** %509 to i64*
  %511 = load i64, i64* %510, align 8
  %512 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %507, i64 -1
  %513 = bitcast %"class.cricket::Connection"** %512 to i64*
  store i64 %511, i64* %513, align 8
  %514 = add i64 %508, -1
  %515 = icmp eq i64 %514, 0
  br i1 %515, label %516, label %505, !llvm.loop !83

516:                                              ; preds = %505, %495
  %517 = phi %"class.cricket::Connection"** [ %496, %495 ], [ %509, %505 ]
  %518 = phi %"class.cricket::Connection"** [ %497, %495 ], [ %512, %505 ]
  %519 = icmp ult i64 %500, 56
  br i1 %519, label %1037, label %520

520:                                              ; preds = %516, %520
  %521 = phi %"class.cricket::Connection"** [ %558, %520 ], [ %517, %516 ]
  %522 = phi %"class.cricket::Connection"** [ %561, %520 ], [ %518, %516 ]
  %523 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %521, i64 -1
  %524 = bitcast %"class.cricket::Connection"** %523 to i64*
  %525 = load i64, i64* %524, align 8
  %526 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %522, i64 -1
  %527 = bitcast %"class.cricket::Connection"** %526 to i64*
  store i64 %525, i64* %527, align 8
  %528 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %521, i64 -2
  %529 = bitcast %"class.cricket::Connection"** %528 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %522, i64 -2
  %532 = bitcast %"class.cricket::Connection"** %531 to i64*
  store i64 %530, i64* %532, align 8
  %533 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %521, i64 -3
  %534 = bitcast %"class.cricket::Connection"** %533 to i64*
  %535 = load i64, i64* %534, align 8
  %536 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %522, i64 -3
  %537 = bitcast %"class.cricket::Connection"** %536 to i64*
  store i64 %535, i64* %537, align 8
  %538 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %521, i64 -4
  %539 = bitcast %"class.cricket::Connection"** %538 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %522, i64 -4
  %542 = bitcast %"class.cricket::Connection"** %541 to i64*
  store i64 %540, i64* %542, align 8
  %543 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %521, i64 -5
  %544 = bitcast %"class.cricket::Connection"** %543 to i64*
  %545 = load i64, i64* %544, align 8
  %546 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %522, i64 -5
  %547 = bitcast %"class.cricket::Connection"** %546 to i64*
  store i64 %545, i64* %547, align 8
  %548 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %521, i64 -6
  %549 = bitcast %"class.cricket::Connection"** %548 to i64*
  %550 = load i64, i64* %549, align 8
  %551 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %522, i64 -6
  %552 = bitcast %"class.cricket::Connection"** %551 to i64*
  store i64 %550, i64* %552, align 8
  %553 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %521, i64 -7
  %554 = bitcast %"class.cricket::Connection"** %553 to i64*
  %555 = load i64, i64* %554, align 8
  %556 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %522, i64 -7
  %557 = bitcast %"class.cricket::Connection"** %556 to i64*
  store i64 %555, i64* %557, align 8
  %558 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %521, i64 -8
  %559 = bitcast %"class.cricket::Connection"** %558 to i64*
  %560 = load i64, i64* %559, align 8
  %561 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %522, i64 -8
  %562 = bitcast %"class.cricket::Connection"** %561 to i64*
  store i64 %560, i64* %562, align 8
  %563 = icmp eq %"class.cricket::Connection"** %558, %6
  br i1 %563, label %1037, label %520, !llvm.loop !84

564:                                              ; preds = %393
  %565 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %396, i64 -1
  %566 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %395, i64 -1
  %567 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %566, align 8
  %568 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %565, align 8
  %569 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %14, align 8
  %570 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %569, %"class.cricket::Connection"* %567, %"class.cricket::Connection"* %568, i8 0, i64 undef, i8* null) #12
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %574, label %572

572:                                              ; preds = %564
  %573 = icmp sgt i32 %570, 0
  br i1 %573, label %581, label %580

574:                                              ; preds = %564
  %575 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %567, i64 0, i32 27
  %576 = load i32, i32* %575, align 8
  %577 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %568, i64 0, i32 27
  %578 = load i32, i32* %577, align 8
  %579 = icmp slt i32 %576, %578
  br i1 %579, label %581, label %580

580:                                              ; preds = %574, %572
  br label %581

581:                                              ; preds = %572, %574, %580
  %582 = phi %"class.cricket::Connection"** [ %566, %580 ], [ %565, %574 ], [ %565, %572 ]
  %583 = phi %"class.cricket::Connection"** [ %396, %580 ], [ %565, %574 ], [ %565, %572 ]
  %584 = phi %"class.cricket::Connection"** [ %566, %580 ], [ %395, %574 ], [ %395, %572 ]
  %585 = bitcast %"class.cricket::Connection"** %582 to i64*
  %586 = load i64, i64* %585, align 8
  %587 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %394, i64 -1
  %588 = bitcast %"class.cricket::Connection"** %587 to i64*
  store i64 %586, i64* %588, align 8
  %589 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %394, i64 -1
  %590 = icmp eq %"class.cricket::Connection"** %584, %6
  br i1 %590, label %1037, label %393

591:                                              ; preds = %201, %591
  %592 = phi %"class.cricket::Connection"** [ %633, %591 ], [ %203, %201 ]
  %593 = phi %"class.cricket::Connection"** [ %632, %591 ], [ %204, %201 ]
  %594 = bitcast %"class.cricket::Connection"** %593 to i64*
  %595 = load i64, i64* %594, align 8
  %596 = bitcast %"class.cricket::Connection"** %592 to i64*
  store i64 %595, i64* %596, align 8
  %597 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %593, i64 1
  %598 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %592, i64 1
  %599 = bitcast %"class.cricket::Connection"** %597 to i64*
  %600 = load i64, i64* %599, align 8
  %601 = bitcast %"class.cricket::Connection"** %598 to i64*
  store i64 %600, i64* %601, align 8
  %602 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %593, i64 2
  %603 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %592, i64 2
  %604 = bitcast %"class.cricket::Connection"** %602 to i64*
  %605 = load i64, i64* %604, align 8
  %606 = bitcast %"class.cricket::Connection"** %603 to i64*
  store i64 %605, i64* %606, align 8
  %607 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %593, i64 3
  %608 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %592, i64 3
  %609 = bitcast %"class.cricket::Connection"** %607 to i64*
  %610 = load i64, i64* %609, align 8
  %611 = bitcast %"class.cricket::Connection"** %608 to i64*
  store i64 %610, i64* %611, align 8
  %612 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %593, i64 4
  %613 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %592, i64 4
  %614 = bitcast %"class.cricket::Connection"** %612 to i64*
  %615 = load i64, i64* %614, align 8
  %616 = bitcast %"class.cricket::Connection"** %613 to i64*
  store i64 %615, i64* %616, align 8
  %617 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %593, i64 5
  %618 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %592, i64 5
  %619 = bitcast %"class.cricket::Connection"** %617 to i64*
  %620 = load i64, i64* %619, align 8
  %621 = bitcast %"class.cricket::Connection"** %618 to i64*
  store i64 %620, i64* %621, align 8
  %622 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %593, i64 6
  %623 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %592, i64 6
  %624 = bitcast %"class.cricket::Connection"** %622 to i64*
  %625 = load i64, i64* %624, align 8
  %626 = bitcast %"class.cricket::Connection"** %623 to i64*
  store i64 %625, i64* %626, align 8
  %627 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %593, i64 7
  %628 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %592, i64 7
  %629 = bitcast %"class.cricket::Connection"** %627 to i64*
  %630 = load i64, i64* %629, align 8
  %631 = bitcast %"class.cricket::Connection"** %628 to i64*
  store i64 %630, i64* %631, align 8
  %632 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %593, i64 8
  %633 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %592, i64 8
  %634 = icmp eq %"class.cricket::Connection"** %632, %16
  br i1 %634, label %390, label %591, !llvm.loop !85

635:                                              ; preds = %26, %652
  %636 = phi i64 [ %17, %26 ], [ %655, %652 ]
  %637 = phi i64 [ %20, %26 ], [ %654, %652 ]
  %638 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, align 8
  %639 = inttoptr i64 %637 to %"class.cricket::Connection"**
  %640 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %639, align 8
  %641 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %14, align 8
  %642 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %641, %"class.cricket::Connection"* %638, %"class.cricket::Connection"* %640, i8 0, i64 undef, i8* null) #12
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %646, label %644

644:                                              ; preds = %635
  %645 = icmp sgt i32 %642, 0
  br i1 %645, label %657, label %652

646:                                              ; preds = %635
  %647 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %638, i64 0, i32 27
  %648 = load i32, i32* %647, align 8
  %649 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %640, i64 0, i32 27
  %650 = load i32, i32* %649, align 8
  %651 = icmp slt i32 %648, %650
  br i1 %651, label %657, label %652

652:                                              ; preds = %644, %646
  %653 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %639, i64 1
  %654 = ptrtoint %"class.cricket::Connection"** %653 to i64
  %655 = add nsw i64 %636, -1
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %1037, label %635

657:                                              ; preds = %644, %646
  %658 = inttoptr i64 %637 to %"class.cricket::Connection"**
  %659 = icmp slt i64 %636, %18
  br i1 %659, label %660, label %699

660:                                              ; preds = %657
  %661 = sdiv i64 %18, 2
  %662 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 %661
  %663 = sub i64 %19, %637
  %664 = icmp eq i64 %663, 0
  br i1 %664, label %693, label %665

665:                                              ; preds = %660
  %666 = ashr exact i64 %663, 3
  br label %667

667:                                              ; preds = %689, %665
  %668 = phi %"class.cricket::Connection"** [ %658, %665 ], [ %691, %689 ]
  %669 = phi i64 [ %666, %665 ], [ %690, %689 ]
  %670 = lshr i64 %669, 1
  %671 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %668, i64 %670
  %672 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %662, align 8
  %673 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %671, align 8
  %674 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %14, align 8
  %675 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %674, %"class.cricket::Connection"* %672, %"class.cricket::Connection"* %673, i8 0, i64 undef, i8* null) #12
  %676 = icmp eq i32 %675, 0
  br i1 %676, label %679, label %677

677:                                              ; preds = %667
  %678 = icmp sgt i32 %675, 0
  br i1 %678, label %689, label %685

679:                                              ; preds = %667
  %680 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %672, i64 0, i32 27
  %681 = load i32, i32* %680, align 8
  %682 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %673, i64 0, i32 27
  %683 = load i32, i32* %682, align 8
  %684 = icmp slt i32 %681, %683
  br i1 %684, label %689, label %685

685:                                              ; preds = %679, %677
  %686 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %671, i64 1
  %687 = xor i64 %670, -1
  %688 = add i64 %669, %687
  br label %689

689:                                              ; preds = %685, %679, %677
  %690 = phi i64 [ %688, %685 ], [ %670, %679 ], [ %670, %677 ]
  %691 = phi %"class.cricket::Connection"** [ %686, %685 ], [ %668, %679 ], [ %668, %677 ]
  %692 = icmp eq i64 %690, 0
  br i1 %692, label %693, label %667

693:                                              ; preds = %689, %660
  %694 = phi %"class.cricket::Connection"** [ %658, %660 ], [ %691, %689 ]
  %695 = ptrtoint %"class.cricket::Connection"** %694 to i64
  %696 = sub i64 %695, %637
  %697 = ashr exact i64 %696, 3
  %698 = ptrtoint %"class.cricket::Connection"** %662 to i64
  br label %748

699:                                              ; preds = %657
  %700 = icmp eq i64 %636, 1
  br i1 %700, label %701, label %706

701:                                              ; preds = %699
  %702 = inttoptr i64 %637 to i64*
  %703 = load i64, i64* %702, align 8
  %704 = inttoptr i64 %19 to i64*
  %705 = load i64, i64* %704, align 8
  store i64 %705, i64* %702, align 8
  store i64 %703, i64* %704, align 8
  br label %1037

706:                                              ; preds = %699
  %707 = sdiv i64 %636, 2
  %708 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %658, i64 %707
  %709 = ptrtoint %"class.cricket::Connection"** %708 to i64
  %710 = ptrtoint %"class.cricket::Connection"** %16 to i64
  %711 = sub i64 %710, %19
  %712 = icmp eq i64 %711, 0
  br i1 %712, label %742, label %713

713:                                              ; preds = %706
  %714 = ashr exact i64 %711, 3
  br label %715

715:                                              ; preds = %738, %713
  %716 = phi i64 [ 0, %713 ], [ %740, %738 ]
  %717 = phi i64 [ %714, %713 ], [ %739, %738 ]
  %718 = lshr i64 %717, 1
  %719 = add nsw i64 %718, %716
  %720 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 %719
  %721 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %720, align 8
  %722 = load %"class.cricket::Connection"*, %"class.cricket::Connection"** %708, align 8
  %723 = load %"class.cricket::BasicIceController"*, %"class.cricket::BasicIceController"** %14, align 8
  %724 = tail call i32 @_ZNK7cricket18BasicIceController18CompareConnectionsEPKNS_10ConnectionES3_N4absl8optionalIlEEPb(%"class.cricket::BasicIceController"* %723, %"class.cricket::Connection"* %721, %"class.cricket::Connection"* %722, i8 0, i64 undef, i8* null) #12
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %728, label %726

726:                                              ; preds = %715
  %727 = icmp sgt i32 %724, 0
  br i1 %727, label %734, label %738

728:                                              ; preds = %715
  %729 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %721, i64 0, i32 27
  %730 = load i32, i32* %729, align 8
  %731 = getelementptr inbounds %"class.cricket::Connection", %"class.cricket::Connection"* %722, i64 0, i32 27
  %732 = load i32, i32* %731, align 8
  %733 = icmp slt i32 %730, %732
  br i1 %733, label %734, label %738

734:                                              ; preds = %728, %726
  %735 = add nsw i64 %719, 1
  %736 = xor i64 %718, -1
  %737 = add i64 %717, %736
  br label %738

738:                                              ; preds = %734, %728, %726
  %739 = phi i64 [ %737, %734 ], [ %718, %728 ], [ %718, %726 ]
  %740 = phi i64 [ %735, %734 ], [ %716, %728 ], [ %716, %726 ]
  %741 = icmp eq i64 %739, 0
  br i1 %741, label %742, label %715

742:                                              ; preds = %738, %706
  %743 = phi i64 [ 0, %706 ], [ %740, %738 ]
  %744 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 %743
  %745 = ptrtoint %"class.cricket::Connection"** %744 to i64
  %746 = sub i64 %745, %19
  %747 = ashr exact i64 %746, 3
  br label %748

748:                                              ; preds = %742, %693
  %749 = phi i64 [ %745, %742 ], [ %698, %693 ]
  %750 = phi i64 [ %709, %742 ], [ %695, %693 ]
  %751 = phi i64 [ %743, %742 ], [ %661, %693 ]
  %752 = phi i64 [ %747, %742 ], [ %661, %693 ]
  %753 = phi i64 [ %707, %742 ], [ %697, %693 ]
  %754 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 %751
  %755 = sub nsw i64 %636, %753
  %756 = sub nsw i64 %18, %752
  %757 = inttoptr i64 %750 to %"class.cricket::Connection"**
  %758 = inttoptr i64 %750 to i8*
  %759 = inttoptr i64 %750 to i8*
  %760 = inttoptr i64 %19 to i8*
  %761 = icmp eq %"class.cricket::Connection"** %757, %27
  br i1 %761, label %1022, label %762

762:                                              ; preds = %748
  %763 = icmp eq i64 %751, 0
  br i1 %763, label %1022, label %764

764:                                              ; preds = %762
  %765 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 1
  %766 = icmp eq %"class.cricket::Connection"** %765, %27
  br i1 %766, label %767, label %777

767:                                              ; preds = %764
  %768 = inttoptr i64 %750 to i64*
  %769 = load i64, i64* %768, align 8
  %770 = sub i64 %749, %19
  %771 = ashr exact i64 %770, 3
  %772 = icmp eq i64 %770, 0
  br i1 %772, label %774, label %773

773:                                              ; preds = %767
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %759, i8* align 8 %760, i64 %770, i1 false) #12
  br label %774

774:                                              ; preds = %773, %767
  %775 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 %771
  %776 = bitcast %"class.cricket::Connection"** %775 to i64*
  store i64 %769, i64* %776, align 8
  br label %1022

777:                                              ; preds = %764
  %778 = icmp eq i64 %751, 1
  br i1 %778, label %779, label %794

779:                                              ; preds = %777
  %780 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %754, i64 -1
  %781 = bitcast %"class.cricket::Connection"** %780 to i64*
  %782 = load i64, i64* %781, align 8
  %783 = ptrtoint %"class.cricket::Connection"** %780 to i64
  %784 = sub i64 %783, %750
  %785 = icmp eq i64 %784, 0
  br i1 %785, label %791, label %786

786:                                              ; preds = %779
  %787 = ashr exact i64 %784, 3
  %788 = sub nsw i64 0, %787
  %789 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %754, i64 %788
  %790 = bitcast %"class.cricket::Connection"** %789 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %790, i8* align 8 %759, i64 %784, i1 false) #12
  br label %791

791:                                              ; preds = %786, %779
  %792 = phi %"class.cricket::Connection"** [ %789, %786 ], [ %754, %779 ]
  %793 = inttoptr i64 %750 to i64*
  store i64 %782, i64* %793, align 8
  br label %1022

794:                                              ; preds = %777
  %795 = sub i64 %19, %750
  %796 = ashr exact i64 %795, 3
  %797 = sub i64 %749, %19
  %798 = ashr exact i64 %797, 3
  %799 = icmp eq i64 %796, %798
  br i1 %799, label %800, label %952

800:                                              ; preds = %794
  %801 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 -1
  %802 = bitcast %"class.cricket::Connection"** %801 to i8*
  %803 = sub i64 0, %750
  %804 = getelementptr i8, i8* %802, i64 %803
  %805 = ptrtoint i8* %804 to i64
  %806 = lshr i64 %805, 3
  %807 = add nuw nsw i64 %806, 1
  %808 = icmp ult i64 %807, 4
  br i1 %808, label %897, label %809

809:                                              ; preds = %800
  %810 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 1
  %811 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 -1
  %812 = bitcast %"class.cricket::Connection"** %811 to i8*
  %813 = sub i64 0, %750
  %814 = getelementptr i8, i8* %812, i64 %813
  %815 = ptrtoint i8* %814 to i64
  %816 = lshr i64 %815, 3
  %817 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %810, i64 %816
  %818 = bitcast %"class.cricket::Connection"** %817 to i8*
  %819 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 1
  %820 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %819, i64 %816
  %821 = bitcast %"class.cricket::Connection"** %820 to i8*
  %822 = icmp ult i8* %758, %821
  %823 = icmp ult i8* %28, %818
  %824 = and i1 %822, %823
  br i1 %824, label %897, label %825

825:                                              ; preds = %809
  %826 = and i64 %807, 4611686018427387900
  %827 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 %826
  %828 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 %826
  %829 = add nsw i64 %826, -4
  %830 = lshr exact i64 %829, 2
  %831 = add nuw nsw i64 %830, 1
  %832 = and i64 %831, 1
  %833 = icmp eq i64 %829, 0
  br i1 %833, label %875, label %834

834:                                              ; preds = %825
  %835 = sub nuw nsw i64 %831, %832
  br label %836

836:                                              ; preds = %836, %834
  %837 = phi i64 [ 0, %834 ], [ %872, %836 ]
  %838 = phi i64 [ %835, %834 ], [ %873, %836 ]
  %839 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 %837
  %840 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 %837
  %841 = bitcast %"class.cricket::Connection"** %840 to <2 x i64>*
  %842 = load <2 x i64>, <2 x i64>* %841, align 8, !alias.scope !86, !noalias !89
  %843 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %840, i64 2
  %844 = bitcast %"class.cricket::Connection"** %843 to <2 x i64>*
  %845 = load <2 x i64>, <2 x i64>* %844, align 8, !alias.scope !86, !noalias !89
  %846 = bitcast %"class.cricket::Connection"** %839 to <2 x i64>*
  %847 = load <2 x i64>, <2 x i64>* %846, align 8, !alias.scope !89
  %848 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %839, i64 2
  %849 = bitcast %"class.cricket::Connection"** %848 to <2 x i64>*
  %850 = load <2 x i64>, <2 x i64>* %849, align 8, !alias.scope !89
  %851 = bitcast %"class.cricket::Connection"** %840 to <2 x i64>*
  store <2 x i64> %847, <2 x i64>* %851, align 8, !alias.scope !86, !noalias !89
  %852 = bitcast %"class.cricket::Connection"** %843 to <2 x i64>*
  store <2 x i64> %850, <2 x i64>* %852, align 8, !alias.scope !86, !noalias !89
  %853 = bitcast %"class.cricket::Connection"** %839 to <2 x i64>*
  store <2 x i64> %842, <2 x i64>* %853, align 8, !alias.scope !89
  %854 = bitcast %"class.cricket::Connection"** %848 to <2 x i64>*
  store <2 x i64> %845, <2 x i64>* %854, align 8, !alias.scope !89
  %855 = or i64 %837, 4
  %856 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 %855
  %857 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 %855
  %858 = bitcast %"class.cricket::Connection"** %857 to <2 x i64>*
  %859 = load <2 x i64>, <2 x i64>* %858, align 8, !alias.scope !86, !noalias !89
  %860 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %857, i64 2
  %861 = bitcast %"class.cricket::Connection"** %860 to <2 x i64>*
  %862 = load <2 x i64>, <2 x i64>* %861, align 8, !alias.scope !86, !noalias !89
  %863 = bitcast %"class.cricket::Connection"** %856 to <2 x i64>*
  %864 = load <2 x i64>, <2 x i64>* %863, align 8, !alias.scope !89
  %865 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %856, i64 2
  %866 = bitcast %"class.cricket::Connection"** %865 to <2 x i64>*
  %867 = load <2 x i64>, <2 x i64>* %866, align 8, !alias.scope !89
  %868 = bitcast %"class.cricket::Connection"** %857 to <2 x i64>*
  store <2 x i64> %864, <2 x i64>* %868, align 8, !alias.scope !86, !noalias !89
  %869 = bitcast %"class.cricket::Connection"** %860 to <2 x i64>*
  store <2 x i64> %867, <2 x i64>* %869, align 8, !alias.scope !86, !noalias !89
  %870 = bitcast %"class.cricket::Connection"** %856 to <2 x i64>*
  store <2 x i64> %859, <2 x i64>* %870, align 8, !alias.scope !89
  %871 = bitcast %"class.cricket::Connection"** %865 to <2 x i64>*
  store <2 x i64> %862, <2 x i64>* %871, align 8, !alias.scope !89
  %872 = add i64 %837, 8
  %873 = add i64 %838, -2
  %874 = icmp eq i64 %873, 0
  br i1 %874, label %875, label %836, !llvm.loop !91

875:                                              ; preds = %836, %825
  %876 = phi i64 [ 0, %825 ], [ %872, %836 ]
  %877 = icmp eq i64 %832, 0
  br i1 %877, label %895, label %878

878:                                              ; preds = %875
  %879 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 %876
  %880 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 %876
  %881 = bitcast %"class.cricket::Connection"** %880 to <2 x i64>*
  %882 = load <2 x i64>, <2 x i64>* %881, align 8, !alias.scope !86, !noalias !89
  %883 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %880, i64 2
  %884 = bitcast %"class.cricket::Connection"** %883 to <2 x i64>*
  %885 = load <2 x i64>, <2 x i64>* %884, align 8, !alias.scope !86, !noalias !89
  %886 = bitcast %"class.cricket::Connection"** %879 to <2 x i64>*
  %887 = load <2 x i64>, <2 x i64>* %886, align 8, !alias.scope !89
  %888 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %879, i64 2
  %889 = bitcast %"class.cricket::Connection"** %888 to <2 x i64>*
  %890 = load <2 x i64>, <2 x i64>* %889, align 8, !alias.scope !89
  %891 = bitcast %"class.cricket::Connection"** %880 to <2 x i64>*
  store <2 x i64> %887, <2 x i64>* %891, align 8, !alias.scope !86, !noalias !89
  %892 = bitcast %"class.cricket::Connection"** %883 to <2 x i64>*
  store <2 x i64> %890, <2 x i64>* %892, align 8, !alias.scope !86, !noalias !89
  %893 = bitcast %"class.cricket::Connection"** %879 to <2 x i64>*
  store <2 x i64> %882, <2 x i64>* %893, align 8, !alias.scope !89
  %894 = bitcast %"class.cricket::Connection"** %888 to <2 x i64>*
  store <2 x i64> %885, <2 x i64>* %894, align 8, !alias.scope !89
  br label %895

895:                                              ; preds = %875, %878
  %896 = icmp eq i64 %807, %826
  br i1 %896, label %1022, label %897

897:                                              ; preds = %895, %809, %800
  %898 = phi %"class.cricket::Connection"** [ %27, %809 ], [ %27, %800 ], [ %827, %895 ]
  %899 = phi %"class.cricket::Connection"** [ %757, %809 ], [ %757, %800 ], [ %828, %895 ]
  %900 = ptrtoint %"class.cricket::Connection"** %899 to i64
  %901 = getelementptr %"class.cricket::Connection"*, %"class.cricket::Connection"** %27, i64 -1
  %902 = ptrtoint %"class.cricket::Connection"** %901 to i64
  %903 = sub i64 %902, %900
  %904 = lshr i64 %903, 3
  %905 = add nuw nsw i64 %904, 1
  %906 = and i64 %905, 3
  %907 = icmp eq i64 %906, 0
  br i1 %907, label %920, label %908

908:                                              ; preds = %897, %908
  %909 = phi %"class.cricket::Connection"** [ %917, %908 ], [ %898, %897 ]
  %910 = phi %"class.cricket::Connection"** [ %916, %908 ], [ %899, %897 ]
  %911 = phi i64 [ %918, %908 ], [ %906, %897 ]
  %912 = bitcast %"class.cricket::Connection"** %910 to i64*
  %913 = load i64, i64* %912, align 8
  %914 = bitcast %"class.cricket::Connection"** %909 to i64*
  %915 = load i64, i64* %914, align 8
  store i64 %915, i64* %912, align 8
  store i64 %913, i64* %914, align 8
  %916 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %910, i64 1
  %917 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %909, i64 1
  %918 = add i64 %911, -1
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %908, !llvm.loop !92

920:                                              ; preds = %908, %897
  %921 = phi %"class.cricket::Connection"** [ %898, %897 ], [ %917, %908 ]
  %922 = phi %"class.cricket::Connection"** [ %899, %897 ], [ %916, %908 ]
  %923 = icmp ult i64 %903, 24
  br i1 %923, label %1022, label %924

924:                                              ; preds = %920, %924
  %925 = phi %"class.cricket::Connection"** [ %950, %924 ], [ %921, %920 ]
  %926 = phi %"class.cricket::Connection"** [ %949, %924 ], [ %922, %920 ]
  %927 = bitcast %"class.cricket::Connection"** %926 to i64*
  %928 = load i64, i64* %927, align 8
  %929 = bitcast %"class.cricket::Connection"** %925 to i64*
  %930 = load i64, i64* %929, align 8
  store i64 %930, i64* %927, align 8
  store i64 %928, i64* %929, align 8
  %931 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %926, i64 1
  %932 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %925, i64 1
  %933 = bitcast %"class.cricket::Connection"** %931 to i64*
  %934 = load i64, i64* %933, align 8
  %935 = bitcast %"class.cricket::Connection"** %932 to i64*
  %936 = load i64, i64* %935, align 8
  store i64 %936, i64* %933, align 8
  store i64 %934, i64* %935, align 8
  %937 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %926, i64 2
  %938 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %925, i64 2
  %939 = bitcast %"class.cricket::Connection"** %937 to i64*
  %940 = load i64, i64* %939, align 8
  %941 = bitcast %"class.cricket::Connection"** %938 to i64*
  %942 = load i64, i64* %941, align 8
  store i64 %942, i64* %939, align 8
  store i64 %940, i64* %941, align 8
  %943 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %926, i64 3
  %944 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %925, i64 3
  %945 = bitcast %"class.cricket::Connection"** %943 to i64*
  %946 = load i64, i64* %945, align 8
  %947 = bitcast %"class.cricket::Connection"** %944 to i64*
  %948 = load i64, i64* %947, align 8
  store i64 %948, i64* %945, align 8
  store i64 %946, i64* %947, align 8
  %949 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %926, i64 4
  %950 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %925, i64 4
  %951 = icmp eq %"class.cricket::Connection"** %949, %27
  br i1 %951, label %1022, label %924, !llvm.loop !93

952:                                              ; preds = %794, %952
  %953 = phi i64 [ %955, %952 ], [ %798, %794 ]
  %954 = phi i64 [ %953, %952 ], [ %796, %794 ]
  %955 = srem i64 %954, %953
  %956 = icmp eq i64 %955, 0
  br i1 %956, label %957, label %952

957:                                              ; preds = %952
  %958 = icmp eq i64 %953, 0
  br i1 %958, label %991, label %959

959:                                              ; preds = %957
  %960 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 %953
  %961 = shl nsw i64 %953, 3
  %962 = add i64 %961, -8
  %963 = and i64 %962, 8
  %964 = icmp eq i64 %963, 0
  br i1 %964, label %965, label %988

965:                                              ; preds = %959
  %966 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %960, i64 -1
  %967 = ptrtoint %"class.cricket::Connection"** %966 to i64
  %968 = bitcast %"class.cricket::Connection"** %966 to i64*
  %969 = load i64, i64* %968, align 8
  %970 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %966, i64 %796
  br label %971

971:                                              ; preds = %971, %965
  %972 = phi i64 [ %967, %965 ], [ %974, %971 ]
  %973 = phi %"class.cricket::Connection"** [ %970, %965 ], [ %984, %971 ]
  %974 = ptrtoint %"class.cricket::Connection"** %973 to i64
  %975 = bitcast %"class.cricket::Connection"** %973 to i64*
  %976 = load i64, i64* %975, align 8
  %977 = inttoptr i64 %972 to i64*
  store i64 %976, i64* %977, align 8
  %978 = sub i64 %749, %974
  %979 = ashr exact i64 %978, 3
  %980 = icmp slt i64 %796, %979
  %981 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %973, i64 %796
  %982 = sub nsw i64 %796, %979
  %983 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 %982
  %984 = select i1 %980, %"class.cricket::Connection"** %981, %"class.cricket::Connection"** %983
  %985 = icmp eq %"class.cricket::Connection"** %984, %966
  br i1 %985, label %986, label %971

986:                                              ; preds = %971
  %987 = bitcast %"class.cricket::Connection"** %973 to i64*
  store i64 %969, i64* %987, align 8
  br label %988

988:                                              ; preds = %986, %959
  %989 = phi %"class.cricket::Connection"** [ %966, %986 ], [ %960, %959 ]
  %990 = icmp eq i64 %962, 0
  br i1 %990, label %991, label %993

991:                                              ; preds = %988, %1053, %957
  %992 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 %798
  br label %1022

993:                                              ; preds = %988, %1053
  %994 = phi %"class.cricket::Connection"** [ %1017, %1053 ], [ %989, %988 ]
  %995 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %994, i64 -1
  %996 = ptrtoint %"class.cricket::Connection"** %995 to i64
  %997 = bitcast %"class.cricket::Connection"** %995 to i64*
  %998 = load i64, i64* %997, align 8
  %999 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %995, i64 %796
  br label %1000

1000:                                             ; preds = %1000, %993
  %1001 = phi i64 [ %996, %993 ], [ %1003, %1000 ]
  %1002 = phi %"class.cricket::Connection"** [ %999, %993 ], [ %1013, %1000 ]
  %1003 = ptrtoint %"class.cricket::Connection"** %1002 to i64
  %1004 = bitcast %"class.cricket::Connection"** %1002 to i64*
  %1005 = load i64, i64* %1004, align 8
  %1006 = inttoptr i64 %1001 to i64*
  store i64 %1005, i64* %1006, align 8
  %1007 = sub i64 %749, %1003
  %1008 = ashr exact i64 %1007, 3
  %1009 = icmp slt i64 %796, %1008
  %1010 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %1002, i64 %796
  %1011 = sub nsw i64 %796, %1008
  %1012 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 %1011
  %1013 = select i1 %1009, %"class.cricket::Connection"** %1010, %"class.cricket::Connection"** %1012
  %1014 = icmp eq %"class.cricket::Connection"** %1013, %995
  br i1 %1014, label %1015, label %1000

1015:                                             ; preds = %1000
  %1016 = bitcast %"class.cricket::Connection"** %1002 to i64*
  store i64 %998, i64* %1016, align 8
  %1017 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %994, i64 -2
  %1018 = ptrtoint %"class.cricket::Connection"** %1017 to i64
  %1019 = bitcast %"class.cricket::Connection"** %1017 to i64*
  %1020 = load i64, i64* %1019, align 8
  %1021 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %1017, i64 %796
  br label %1038

1022:                                             ; preds = %920, %924, %895, %748, %762, %774, %791, %991
  %1023 = phi %"class.cricket::Connection"** [ %757, %762 ], [ %754, %748 ], [ %775, %774 ], [ %792, %791 ], [ %992, %991 ], [ %27, %895 ], [ %27, %924 ], [ %27, %920 ]
  %1024 = add nsw i64 %753, %752
  %1025 = add nsw i64 %755, %756
  %1026 = icmp slt i64 %1024, %1025
  br i1 %1026, label %1027, label %1029

1027:                                             ; preds = %1022
  %1028 = ptrtoint %"class.cricket::Connection"** %1023 to i64
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEl"(%"class.cricket::Connection"** %658, %"class.cricket::Connection"** %757, %"class.cricket::Connection"** %1023, %class.anon.241* dereferenceable(8) %3, i64 %753, i64 %752, %"class.cricket::Connection"** %6, i64 %7)
  br label %1030

1029:                                             ; preds = %1022
  tail call fastcc void @"_ZNSt3__115__inplace_mergeIRZN7cricket18BasicIceController23SortAndSwitchConnectionENS1_18IceControllerEventEE3$_8NS_11__wrap_iterIPPKNS1_10ConnectionEEEEEvT0_SC_SC_T_NS_15iterator_traitsISC_E15difference_typeESG_PNSF_10value_typeEl"(%"class.cricket::Connection"** %1023, %"class.cricket::Connection"** %754, %"class.cricket::Connection"** %16, %class.anon.241* dereferenceable(8) %3, i64 %755, i64 %756, %"class.cricket::Connection"** %6, i64 %7)
  br label %1030

1030:                                             ; preds = %1027, %1029
  %1031 = phi i64 [ %1028, %1027 ], [ %637, %1029 ]
  %1032 = phi i64 [ %749, %1027 ], [ %750, %1029 ]
  %1033 = phi i64 [ %756, %1027 ], [ %752, %1029 ]
  %1034 = phi i64 [ %755, %1027 ], [ %753, %1029 ]
  %1035 = phi %"class.cricket::Connection"** [ %16, %1027 ], [ %1023, %1029 ]
  %1036 = icmp eq i64 %1033, 0
  br i1 %1036, label %1037, label %15

1037:                                             ; preds = %1030, %24, %652, %341, %581, %516, %520, %493, %8, %701, %390, %314, %309, %301, %168, %35
  ret void

1038:                                             ; preds = %1038, %1015
  %1039 = phi i64 [ %1018, %1015 ], [ %1041, %1038 ]
  %1040 = phi %"class.cricket::Connection"** [ %1021, %1015 ], [ %1051, %1038 ]
  %1041 = ptrtoint %"class.cricket::Connection"** %1040 to i64
  %1042 = bitcast %"class.cricket::Connection"** %1040 to i64*
  %1043 = load i64, i64* %1042, align 8
  %1044 = inttoptr i64 %1039 to i64*
  store i64 %1043, i64* %1044, align 8
  %1045 = sub i64 %749, %1041
  %1046 = ashr exact i64 %1045, 3
  %1047 = icmp slt i64 %796, %1046
  %1048 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %1040, i64 %796
  %1049 = sub nsw i64 %796, %1046
  %1050 = getelementptr inbounds %"class.cricket::Connection"*, %"class.cricket::Connection"** %757, i64 %1049
  %1051 = select i1 %1047, %"class.cricket::Connection"** %1048, %"class.cricket::Connection"** %1050
  %1052 = icmp eq %"class.cricket::Connection"** %1051, %1017
  br i1 %1052, label %1053, label %1038

1053:                                             ; preds = %1038
  %1054 = bitcast %"class.cricket::Connection"** %1040 to i64*
  store i64 %1020, i64* %1054, align 8
  %1055 = icmp eq %"class.cricket::Connection"** %1017, %757
  br i1 %1055, label %991, label %993
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeIPKN7cricket10ConnectionENS_4lessIS4_EENS_9allocatorIS4_EEE16__construct_nodeIJRKS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_IST_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_IST_EEEEEEDpOT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJNS_4pairIS5_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISO_EEEEEEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJNS_4pairIS5_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_ISO_EEEEEEDpOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_IST_EEEEEEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__16__treeINS_12__value_typeIPKN3rtc7NetworkEPKN7cricket10ConnectionEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSF_IST_EEEEEEDpOT_"}
!23 = distinct !{!23, !10}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.isvectorized", i32 1}
!31 = distinct !{!31, !10}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !30}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !10}
!40 = distinct !{!40, !30}
!41 = distinct !{!41, !30}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !30}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !10}
!50 = distinct !{!50, !30}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !30}
!57 = distinct !{!57, !10}
!58 = distinct !{!58, !10}
!59 = distinct !{!59, !30}
!60 = distinct !{!60, !10}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !30}
!67 = distinct !{!67, !10}
!68 = distinct !{!68, !10}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !30}
!75 = distinct !{!75, !10}
!76 = distinct !{!76, !30}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !30}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !30}
!85 = distinct !{!85, !30}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !30}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !30}
