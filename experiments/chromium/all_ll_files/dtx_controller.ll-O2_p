; ModuleID = '../../third_party/webrtc/modules/audio_coding/audio_network_adaptor/dtx_controller.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/audio_network_adaptor/dtx_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webrtc::DtxController::Config" = type { i8, i32, i32 }
%"class.webrtc::DtxController" = type { %"class.webrtc::Controller", %"struct.webrtc::DtxController::Config", i8, %"class.absl::optional" }
%"class.webrtc::Controller" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"struct.webrtc::Controller::NetworkMetrics" = type { %"class.absl::optional", %"class.absl::optional.0", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.5" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { float }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { i64 }
%"struct.webrtc::AudioEncoderRuntimeConfig" = type <{ %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.0", %"class.absl::optional.10", %"class.absl::optional.10", [4 x i8], %"class.absl::optional.5", i8, [7 x i8] }>
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { i8 }

@_ZTVN6webrtc13DtxControllerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::DtxController"*)* @_ZN6webrtc13DtxControllerD2Ev to i8*), i8* bitcast (void (%"class.webrtc::DtxController"*)* @_ZN6webrtc13DtxControllerD0Ev to i8*), i8* bitcast (void (%"class.webrtc::DtxController"*, %"struct.webrtc::Controller::NetworkMetrics"*)* @_ZN6webrtc13DtxController20UpdateNetworkMetricsERKNS_10Controller14NetworkMetricsE to i8*), i8* bitcast (void (%"class.webrtc::DtxController"*, %"struct.webrtc::AudioEncoderRuntimeConfig"*)* @_ZN6webrtc13DtxController12MakeDecisionEPNS_25AudioEncoderRuntimeConfigE to i8*)] }, align 8

@_ZN6webrtc13DtxController6ConfigC1Ebii = hidden unnamed_addr alias void (%"struct.webrtc::DtxController::Config"*, i1, i32, i32), void (%"struct.webrtc::DtxController::Config"*, i1, i32, i32)* @_ZN6webrtc13DtxController6ConfigC2Ebii
@_ZN6webrtc13DtxControllerC1ERKNS0_6ConfigE = hidden unnamed_addr alias void (%"class.webrtc::DtxController"*, %"struct.webrtc::DtxController::Config"*), void (%"class.webrtc::DtxController"*, %"struct.webrtc::DtxController::Config"*)* @_ZN6webrtc13DtxControllerC2ERKNS0_6ConfigE
@_ZN6webrtc13DtxControllerD1Ev = hidden unnamed_addr alias void (%"class.webrtc::DtxController"*), void (%"class.webrtc::DtxController"*)* @_ZN6webrtc13DtxControllerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc13DtxController6ConfigC2Ebii(%"struct.webrtc::DtxController::Config"* nocapture, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %5 = zext i1 %1 to i8
  %6 = getelementptr inbounds %"struct.webrtc::DtxController::Config", %"struct.webrtc::DtxController::Config"* %0, i64 0, i32 0
  store i8 %5, i8* %6, align 4
  %7 = getelementptr inbounds %"struct.webrtc::DtxController::Config", %"struct.webrtc::DtxController::Config"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.webrtc::DtxController::Config", %"struct.webrtc::DtxController::Config"* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13DtxControllerC2ERKNS0_6ConfigE(%"class.webrtc::DtxController"* nocapture, %"struct.webrtc::DtxController::Config"* nocapture readonly dereferenceable(12)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::DtxController", %"class.webrtc::DtxController"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc13DtxControllerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::DtxController", %"class.webrtc::DtxController"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"struct.webrtc::DtxController::Config", %"struct.webrtc::DtxController::Config"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 12, i1 false)
  %6 = getelementptr inbounds %"class.webrtc::DtxController", %"class.webrtc::DtxController"* %0, i64 0, i32 2
  %7 = load i8, i8* %4, align 8, !range !2
  store i8 %7, i8* %6, align 4
  %8 = getelementptr inbounds %"class.webrtc::DtxController", %"class.webrtc::DtxController"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc13DtxControllerD2Ev(%"class.webrtc::DtxController"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13DtxControllerD0Ev(%"class.webrtc::DtxController"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.webrtc::DtxController"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc13DtxController20UpdateNetworkMetricsERKNS_10Controller14NetworkMetricsE(%"class.webrtc::DtxController"* nocapture, %"struct.webrtc::Controller::NetworkMetrics"* nocapture readonly dereferenceable(48)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::Controller::NetworkMetrics", %"struct.webrtc::Controller::NetworkMetrics"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::DtxController", %"class.webrtc::DtxController"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.webrtc::Controller::NetworkMetrics"* %1 to i64*
  %9 = bitcast i8* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 8
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13DtxController12MakeDecisionEPNS_25AudioEncoderRuntimeConfigE(%"class.webrtc::DtxController"* nocapture, %"struct.webrtc::AudioEncoderRuntimeConfig"* nocapture) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::DtxController", %"class.webrtc::DtxController"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.webrtc::DtxController", %"class.webrtc::DtxController"* %0, i64 0, i32 2
  br i1 %5, label %7, label %12

7:                                                ; preds = %2
  %8 = load i8, i8* %6, align 1, !range !2
  %9 = zext i8 %8 to i16
  %10 = shl nuw nsw i16 %9, 8
  %11 = or i16 %10, 1
  br label %27

12:                                               ; preds = %2
  %13 = load i8, i8* %6, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.webrtc::DtxController", %"class.webrtc::DtxController"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %22, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.webrtc::DtxController", %"class.webrtc::DtxController"* %0, i64 0, i32 1, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %16, %19
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  store i8 0, i8* %6, align 4
  br label %27

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.webrtc::DtxController", %"class.webrtc::DtxController"* %0, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %16, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  store i8 1, i8* %6, align 4
  br label %27

27:                                               ; preds = %7, %17, %22, %21, %26
  %28 = phi i16 [ %11, %7 ], [ 257, %17 ], [ 1, %22 ], [ 1, %21 ], [ 257, %26 ]
  %29 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast i8* %29 to i16*
  store i16 %28, i16* %30, align 2
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
