; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/cull_rect.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/cull_rect.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.8" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted", i8, i8, %class.scoped_refptr, i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.26", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.26" = type { %"class.WTF::RefCounted.27", i8, i8, %class.scoped_refptr.1, i32, i32 }
%"class.WTF::RefCounted.27" = type { %"class.base::RefCounted.28" }
%"class.base::RefCounted.28" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.29" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.32" }
%"class.blink::PaintPropertyNode.32" = type { %"class.WTF::RefCounted.33", i8, i8, %class.scoped_refptr.35, i32, i32 }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.35 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.36" }
%"class.blink::PaintPropertyNode.36" = type { %"class.WTF::RefCounted.37", i8, i8, %class.scoped_refptr.39, i32, i32 }
%"class.WTF::RefCounted.37" = type { %"class.base::RefCounted.38" }
%"class.base::RefCounted.38" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.39 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::GeometryMapper::Translation2DOrMatrix" = type { %"class.blink::FloatSize", %"class.absl::optional.118" }
%"class.absl::optional.118" = type { %"class.absl::optional_internal::optional_data.119" }
%"class.absl::optional_internal::optional_data.119" = type { %"class.absl::optional_internal::optional_data_base.120" }
%"class.absl::optional_internal::optional_data_base.120" = type { %"class.absl::optional_internal::optional_data_dtor_base.121" }
%"class.absl::optional_internal::optional_data_dtor_base.121" = type { i8, %union.anon.122 }
%union.anon.122 = type { %"class.blink::TransformationMatrix" }
%"class.absl::optional.40" = type { %"class.absl::optional_internal::optional_data.41" }
%"class.absl::optional_internal::optional_data.41" = type { %"class.absl::optional_internal::optional_data_base.42" }
%"class.absl::optional_internal::optional_data_base.42" = type { %"class.absl::optional_internal::optional_data_dtor_base.43" }
%"class.absl::optional_internal::optional_data_dtor_base.43" = type { i8, %union.anon.44 }
%union.anon.44 = type { %"class.blink::CullRect" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::TransformPaintPropertyNode"**, i32, i32 }
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47", [32 x i8] }
%"class.WTF::VectorBufferBase.47" = type { %"class.blink::ClipPaintPropertyNode"**, i32, i32 }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.69" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr, %"class.absl::optional.48", %class.scoped_refptr.53, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, [3 x i8], %union.anon.52 }
%union.anon.52 = type { %"class.blink::FloatClipRect" }
%class.scoped_refptr.53 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.67", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.57", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.55, %class.SkTDArray.56, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.55 = type { i8*, i32, i32 }
%class.SkTDArray.56 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.62 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.57" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.62 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.63", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i8 }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i8 }
%"class.WTF::RefCounted.67" = type { %"class.base::RefCounted.68" }
%"class.base::RefCounted.68" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.72", i32, [4 x i8] }>
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74" }
%"class.WTF::VectorBufferBase.74" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr, %class.scoped_refptr.35, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.103", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.82" }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.98" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.84, [20 x float], i32, [4 x i8], %"class.std::__1::vector.91", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.84 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.85, i32, %"class.absl::optional.86", i8, i32 }
%class.sk_sp.85 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.86" = type { %"class.absl::optional_internal::optional_data.87" }
%"class.absl::optional_internal::optional_data.87" = type { %"class.absl::optional_internal::optional_data_base.88" }
%"class.absl::optional_internal::optional_data_base.88" = type { %"class.absl::optional_internal::optional_data_dtor_base.89" }
%"class.absl::optional_internal::optional_data_dtor_base.89" = type { i8, %union.anon.90 }
%union.anon.90 = type { %struct.SkRect }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.93" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.109" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { i32*, i32*, %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { i32* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.127 }
%union.anon.127 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink14GeometryMapper23SourceToDestinationRectINS_7IntRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_ = comdat any

$_ZN5blink14GeometryMapper23SourceToDestinationRectINS_9FloatRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_ = comdat any

$_ZN3WTF12VectorBufferIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF12VectorBufferIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN5blink14GeometryMapper8MoveRectERNS_7IntRectERKNS_9FloatSizeE = comdat any

$_ZN3WTF6VectorIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink26TransformPaintPropertyNodeEEEmm = comdat any

$_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink21ClipPaintPropertyNodeEEEmm = comdat any

$_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = comdat any

$_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = comdat any

@_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = linkonce_odr hidden local_unnamed_addr global %"class.blink::IntRect" zeroinitializer, comdat, align 4
@_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = linkonce_odr hidden global i64 0, comdat, align 8
@.str = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink26TransformPaintPropertyNodeEEEPKcv = private unnamed_addr constant [89 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::TransformPaintPropertyNode *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink21ClipPaintPropertyNodeEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::ClipPaintPropertyNode *]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8CullRect10IntersectsERKNS_7IntRectE(%"class.blink::CullRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %1, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %1, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %47, label %10

10:                                               ; preds = %6
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  br label %17

17:                                               ; preds = %16, %13, %10
  %18 = load i64, i64* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i64*), align 4
  %19 = load i64, i64* bitcast (%"class.blink::IntSize"* getelementptr inbounds (%"class.blink::IntRect", %"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect, i64 0, i32 1) to i64*), align 4
  %20 = bitcast %"class.blink::CullRect"* %0 to i64*
  %21 = load i64, i64* %20, align 4
  %22 = trunc i64 %21 to i32
  %23 = lshr i64 %21, 32
  %24 = trunc i64 %23 to i32
  %25 = trunc i64 %18 to i32
  %26 = lshr i64 %18, 32
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %22, %25
  %29 = icmp eq i32 %24, %27
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %44

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1
  %33 = bitcast %"class.blink::IntSize"* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = trunc i64 %34 to i32
  %36 = trunc i64 %19 to i32
  %37 = icmp eq i32 %35, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %31
  %39 = lshr i64 %19, 32
  %40 = trunc i64 %39 to i32
  %41 = lshr i64 %34, 32
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %42, %40
  br i1 %43, label %47, label %44

44:                                               ; preds = %17, %31, %38
  %45 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0
  %46 = tail call zeroext i1 @_ZNK5blink7IntRect10IntersectsERKS0_(%"class.blink::IntRect"* %1, %"class.blink::IntRect"* dereferenceable(16) %45) #11
  br label %47

47:                                               ; preds = %2, %38, %44, %6
  %48 = phi i1 [ false, %6 ], [ true, %38 ], [ %46, %44 ], [ false, %2 ]
  ret i1 %48
}

declare zeroext i1 @_ZNK5blink7IntRect10IntersectsERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8CullRect21IntersectsTransformedERKNS_15AffineTransformERKNS_9FloatRectE(%"class.blink::CullRect"*, %"class.blink::AffineTransform"* dereferenceable(48), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  %6 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 0
  %7 = load float, float* %6, align 4
  %8 = fcmp ugt float %7, 0.000000e+00
  br i1 %8, label %9, label %62

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 1
  %11 = load float, float* %10, align 4
  %12 = fcmp ugt float %11, 0.000000e+00
  br i1 %12, label %13, label %62

13:                                               ; preds = %9
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20, !prof !2

16:                                               ; preds = %13
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  br label %20

20:                                               ; preds = %19, %16, %13
  %21 = load i64, i64* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i64*), align 4
  %22 = load i64, i64* bitcast (%"class.blink::IntSize"* getelementptr inbounds (%"class.blink::IntRect", %"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect, i64 0, i32 1) to i64*), align 4
  %23 = bitcast %"class.blink::CullRect"* %0 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = trunc i64 %24 to i32
  %26 = lshr i64 %24, 32
  %27 = trunc i64 %26 to i32
  %28 = trunc i64 %21 to i32
  %29 = lshr i64 %21, 32
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i32 %25, %28
  %32 = icmp eq i32 %27, %30
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %41

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1
  %36 = bitcast %"class.blink::IntSize"* %35 to i64*
  %37 = load i64, i64* %36, align 4
  %38 = trunc i64 %37 to i32
  %39 = trunc i64 %22 to i32
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %34, %20
  %42 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #11
  br label %50

43:                                               ; preds = %34
  %44 = lshr i64 %22, 32
  %45 = trunc i64 %44 to i32
  %46 = lshr i64 %37, 32
  %47 = trunc i64 %46 to i32
  %48 = icmp eq i32 %47, %45
  %49 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #11
  br i1 %48, label %59, label %50

50:                                               ; preds = %41, %43
  %51 = phi i8* [ %42, %41 ], [ %49, %43 ]
  %52 = tail call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* %1, %"class.blink::FloatRect"* dereferenceable(16) %2) #11
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %54 = extractvalue { <2 x float>, <2 x float> } %52, 0
  store <2 x float> %54, <2 x float>* %53, align 8
  %55 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %56 = extractvalue { <2 x float>, <2 x float> } %52, 1
  store <2 x float> %56, <2 x float>* %55, align 8
  %57 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0
  %58 = call zeroext i1 @_ZNK5blink9FloatRect10IntersectsERKNS_7IntRectE(%"class.blink::FloatRect"* nonnull %5, %"class.blink::IntRect"* dereferenceable(16) %57) #11
  br label %59

59:                                               ; preds = %50, %43
  %60 = phi i8* [ %49, %43 ], [ %51, %50 ]
  %61 = phi i1 [ true, %43 ], [ %58, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #11
  br label %62

62:                                               ; preds = %9, %3, %59
  %63 = phi i1 [ %61, %59 ], [ false, %9 ], [ false, %3 ]
  ret i1 %63
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9FloatRect10IntersectsERKNS_7IntRectE(%"class.blink::FloatRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8CullRect25IntersectsHorizontalRangeENS_10LayoutUnitES1_(%"class.blink::CullRect"* nocapture readonly, i32, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, %5
  %9 = icmp sgt i32 %8, 33554431
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = icmp slt i32 %8, -33554432
  %12 = shl i32 %8, 6
  %13 = select i1 %11, i32 -2147483648, i32 %12
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i32 [ 2147483647, %3 ], [ %13, %10 ]
  %16 = icmp sgt i32 %15, %1
  br i1 %16, label %17, label %26

17:                                               ; preds = %14
  %18 = icmp sgt i32 %5, 33554431
  br i1 %18, label %23, label %19

19:                                               ; preds = %17
  %20 = icmp slt i32 %5, -33554432
  %21 = shl i32 %5, 6
  %22 = select i1 %20, i32 -2147483648, i32 %21
  br label %23

23:                                               ; preds = %17, %19
  %24 = phi i32 [ 2147483647, %17 ], [ %22, %19 ]
  %25 = icmp slt i32 %24, %2
  br label %26

26:                                               ; preds = %14, %23
  %27 = phi i1 [ false, %14 ], [ %25, %23 ]
  ret i1 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink8CullRect23IntersectsVerticalRangeENS_10LayoutUnitES1_(%"class.blink::CullRect"* nocapture readonly, i32, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, %5
  %9 = icmp sgt i32 %8, 33554431
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = icmp slt i32 %8, -33554432
  %12 = shl i32 %8, 6
  %13 = select i1 %11, i32 -2147483648, i32 %12
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i32 [ 2147483647, %3 ], [ %13, %10 ]
  %16 = icmp sgt i32 %15, %1
  br i1 %16, label %17, label %26

17:                                               ; preds = %14
  %18 = icmp sgt i32 %5, 33554431
  br i1 %18, label %23, label %19

19:                                               ; preds = %17
  %20 = icmp slt i32 %5, -33554432
  %21 = shl i32 %5, 6
  %22 = select i1 %20, i32 -2147483648, i32 %21
  br label %23

23:                                               ; preds = %17, %19
  %24 = phi i32 [ 2147483647, %17 ], [ %22, %19 ]
  %25 = icmp slt i32 %24, %2
  br label %26

26:                                               ; preds = %14, %23
  %27 = phi i1 [ false, %14 ], [ %25, %23 ]
  ret i1 %27
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink8CullRect6MoveByERKNS_8IntPointE(%"class.blink::CullRect"* nocapture, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  br label %9

9:                                                ; preds = %8, %5, %2
  %10 = load i64, i64* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i64*), align 4
  %11 = load i64, i64* bitcast (%"class.blink::IntSize"* getelementptr inbounds (%"class.blink::IntRect", %"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect, i64 0, i32 1) to i64*), align 4
  %12 = bitcast %"class.blink::CullRect"* %0 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = trunc i64 %13 to i32
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  %17 = trunc i64 %10 to i32
  %18 = lshr i64 %10, 32
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %14, %17
  %21 = icmp eq i32 %16, %19
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %36

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1
  %25 = bitcast %"class.blink::IntSize"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = trunc i64 %26 to i32
  %28 = trunc i64 %11 to i32
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %23
  %31 = lshr i64 %11, 32
  %32 = trunc i64 %31 to i32
  %33 = lshr i64 %26, 32
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %34, %32
  br i1 %35, label %46, label %36

36:                                               ; preds = %9, %23, %30
  %37 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 0, i32 0
  %42 = add nsw i32 %38, %14
  store i32 %42, i32* %41, align 4
  %43 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, %40
  store i32 %45, i32* %43, align 4
  br label %46

46:                                               ; preds = %36, %30
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN5blink8CullRect4MoveERKNS_7IntSizeE(%"class.blink::CullRect"* nocapture, %"class.blink::IntSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  br label %9

9:                                                ; preds = %8, %5, %2
  %10 = load i64, i64* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i64*), align 4
  %11 = load i64, i64* bitcast (%"class.blink::IntSize"* getelementptr inbounds (%"class.blink::IntRect", %"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect, i64 0, i32 1) to i64*), align 4
  %12 = bitcast %"class.blink::CullRect"* %0 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = trunc i64 %13 to i32
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  %17 = trunc i64 %10 to i32
  %18 = lshr i64 %10, 32
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %14, %17
  %21 = icmp eq i32 %16, %19
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %36

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1
  %25 = bitcast %"class.blink::IntSize"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = trunc i64 %26 to i32
  %28 = trunc i64 %11 to i32
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %23
  %31 = lshr i64 %11, 32
  %32 = trunc i64 %31 to i32
  %33 = lshr i64 %26, 32
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %34, %32
  br i1 %35, label %46, label %36

36:                                               ; preds = %9, %23, %30
  %37 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %1, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 0, i32 0
  %42 = add nsw i32 %38, %14
  store i32 %42, i32* %41, align 4
  %43 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, %40
  store i32 %45, i32* %43, align 4
  br label %46

46:                                               ; preds = %36, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8CullRect4MoveERKNS_9FloatSizeE(%"class.blink::CullRect"* nocapture, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  br label %9

9:                                                ; preds = %8, %5, %2
  %10 = load i64, i64* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i64*), align 4
  %11 = load i64, i64* bitcast (%"class.blink::IntSize"* getelementptr inbounds (%"class.blink::IntRect", %"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect, i64 0, i32 1) to i64*), align 4
  %12 = bitcast %"class.blink::CullRect"* %0 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = trunc i64 %13 to i32
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  %17 = trunc i64 %10 to i32
  %18 = lshr i64 %10, 32
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %14, %17
  %21 = icmp eq i32 %16, %19
  %22 = and i1 %20, %21
  br i1 %22, label %26, label %23

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  br label %39

26:                                               ; preds = %9
  %27 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1
  %28 = bitcast %"class.blink::IntSize"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = trunc i64 %29 to i32
  %31 = trunc i64 %11 to i32
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %26
  %34 = lshr i64 %11, 32
  %35 = trunc i64 %34 to i32
  %36 = lshr i64 %29, 32
  %37 = trunc i64 %36 to i32
  %38 = icmp eq i32 %37, %35
  br i1 %38, label %118, label %39

39:                                               ; preds = %23, %26, %33
  %40 = phi i32 [ %25, %23 ], [ %30, %26 ], [ %30, %33 ]
  %41 = sitofp i32 %14 to float
  %42 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sitofp i32 %43 to float
  %45 = sitofp i32 %40 to float
  %46 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to float
  %49 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 0
  %50 = load float, float* %49, align 4
  %51 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = fadd float %50, %41
  %54 = fadd float %52, %44
  %55 = tail call float @llvm.floor.f32(float %53) #11
  %56 = fpext float %55 to double
  %57 = fcmp ult double %56, 0x41DFFFFFFFC00000
  br i1 %57, label %58, label %63

58:                                               ; preds = %39
  %59 = fcmp ugt float %55, 0xC1E0000000000000
  br i1 %59, label %60, label %63

60:                                               ; preds = %58
  %61 = fptosi float %55 to i32
  %62 = zext i32 %61 to i64
  br label %63

63:                                               ; preds = %60, %58, %39
  %64 = phi i64 [ %62, %60 ], [ 2147483647, %39 ], [ 2147483648, %58 ]
  %65 = tail call float @llvm.floor.f32(float %54) #11
  %66 = fpext float %65 to double
  %67 = fcmp ult double %66, 0x41DFFFFFFFC00000
  br i1 %67, label %68, label %74

68:                                               ; preds = %63
  %69 = fcmp ugt float %65, 0xC1E0000000000000
  br i1 %69, label %70, label %74

70:                                               ; preds = %68
  %71 = fptosi float %65 to i32
  %72 = zext i32 %71 to i64
  %73 = shl nuw i64 %72, 32
  br label %74

74:                                               ; preds = %70, %68, %63
  %75 = phi i64 [ %73, %70 ], [ 9223372032559808512, %63 ], [ -9223372036854775808, %68 ]
  %76 = trunc i64 %64 to i32
  %77 = lshr exact i64 %75, 32
  %78 = trunc i64 %77 to i32
  %79 = fadd float %53, %45
  %80 = fadd float %54, %48
  %81 = tail call float @llvm.ceil.f32(float %79) #11
  %82 = fpext float %81 to double
  %83 = fcmp ult double %82, 0x41DFFFFFFFC00000
  br i1 %83, label %84, label %88

84:                                               ; preds = %74
  %85 = fcmp ugt float %81, 0xC1E0000000000000
  br i1 %85, label %86, label %88

86:                                               ; preds = %84
  %87 = fptosi float %81 to i32
  br label %88

88:                                               ; preds = %86, %84, %74
  %89 = phi i32 [ %87, %86 ], [ 2147483647, %74 ], [ -2147483648, %84 ]
  %90 = tail call float @llvm.ceil.f32(float %80) #11
  %91 = fpext float %90 to double
  %92 = fcmp ult double %91, 0x41DFFFFFFFC00000
  br i1 %92, label %93, label %97

93:                                               ; preds = %88
  %94 = fcmp ugt float %90, 0xC1E0000000000000
  br i1 %94, label %95, label %97

95:                                               ; preds = %93
  %96 = fptosi float %90 to i32
  br label %97

97:                                               ; preds = %88, %93, %95
  %98 = phi i32 [ %96, %95 ], [ 2147483647, %88 ], [ -2147483648, %93 ]
  %99 = icmp sgt i32 %76, -1
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %89, i32 %76) #11
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %100, i32 %103, !prof !3
  %105 = icmp sgt i32 %78, -1
  %106 = select i1 %105, i32 -2147483648, i32 2147483647
  %107 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %98, i32 %78) #11
  %108 = extractvalue { i32, i1 } %107, 1
  %109 = extractvalue { i32, i1 } %107, 0
  %110 = select i1 %108, i32 %106, i32 %109, !prof !3
  %111 = or i64 %75, %64
  %112 = zext i32 %110 to i64
  %113 = shl nuw i64 %112, 32
  %114 = zext i32 %104 to i64
  %115 = or i64 %113, %114
  store i64 %111, i64* %12, align 4
  %116 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1
  %117 = bitcast %"class.blink::IntSize"* %116 to i64*
  store i64 %115, i64* %117, align 4
  br label %118

118:                                              ; preds = %33, %97
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8CullRect14ApplyTransformERKNS_26TransformPaintPropertyNodeE(%"class.blink::CullRect"*, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  br label %9

9:                                                ; preds = %8, %5, %2
  %10 = load i64, i64* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i64*), align 4
  %11 = load i64, i64* bitcast (%"class.blink::IntSize"* getelementptr inbounds (%"class.blink::IntRect", %"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect, i64 0, i32 1) to i64*), align 4
  %12 = bitcast %"class.blink::CullRect"* %0 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = trunc i64 %13 to i32
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  %17 = trunc i64 %10 to i32
  %18 = lshr i64 %10, 32
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %14, %17
  %21 = icmp eq i32 %16, %19
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %36

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1
  %25 = bitcast %"class.blink::IntSize"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = trunc i64 %26 to i32
  %28 = trunc i64 %11 to i32
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %23
  %31 = lshr i64 %11, 32
  %32 = trunc i64 %31 to i32
  %33 = lshr i64 %26, 32
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %34, %32
  br i1 %35, label %63, label %36

36:                                               ; preds = %9, %23, %30
  %37 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %38 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0
  br label %41

41:                                               ; preds = %46, %36
  %42 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %38, %36 ], [ %44, %46 ]
  %43 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %42, i64 0, i32 0, i32 3, i32 0
  %44 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %43, align 8
  %45 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %42, i64 0, i32 0, i32 1
  %48 = load i8, i8* %47, align 4, !range !4
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %41

50:                                               ; preds = %46, %41
  %51 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %42 to %"class.blink::TransformPaintPropertyNode"*
  br label %52

52:                                               ; preds = %57, %50
  %53 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %39, %50 ], [ %55, %57 ]
  %54 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %53, i64 0, i32 0, i32 3, i32 0
  %55 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %54, align 8
  %56 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %53, i64 0, i32 0, i32 1
  %59 = load i8, i8* %58, align 4, !range !4
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %52

61:                                               ; preds = %52, %57
  %62 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %53 to %"class.blink::TransformPaintPropertyNode"*
  tail call void @_ZN5blink14GeometryMapper23SourceToDestinationRectINS_7IntRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %51, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %62, %"class.blink::IntRect"* dereferenceable(16) %40) #11
  br label %63

63:                                               ; preds = %30, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink8CullRect22ApplyScrollTranslationERKNS_26TransformPaintPropertyNodeES3_(%"class.blink::CullRect"*, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %4 = alloca <4 x float>, align 16
  %5 = bitcast <4 x float>* %4 to %"class.blink::FloatRect"*
  %6 = alloca %"class.blink::IntRect", align 8
  %7 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %2, i64 0, i32 1, i32 1, i32 0
  %8 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %8, i64 0, i32 1, i32 0
  tail call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* %9, %"class.blink::IntRect"* dereferenceable(16) %10) #11
  %11 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %92, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %92, label %18

18:                                               ; preds = %14
  tail call void @_ZN5blink8CullRect14ApplyTransformERKNS_26TransformPaintPropertyNodeE(%"class.blink::CullRect"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %2)
  %19 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %2, i64 0, i32 1, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %92, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %8, i64 0, i32 1, i32 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %8, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %24, %27
  br i1 %28, label %35, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %8, i64 0, i32 1, i32 0, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %8, i64 0, i32 1, i32 1, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %31, %33
  br i1 %34, label %35, label %92

35:                                               ; preds = %29, %22
  %36 = bitcast <4 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 1
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4, align 16
  call void @_ZN5blink14GeometryMapper23SourceToDestinationRectINS_9FloatRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %1, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %2, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5) #11
  %39 = load float, float* %37, align 8
  %40 = load float, float* %38, align 4
  %41 = fcmp olt float %39, %40
  %42 = select i1 %41, float %40, float %39
  %43 = fcmp ogt float %42, 2.684350e+05
  %44 = fmul float %42, 4.000000e+03
  %45 = fptosi float %44 to i32
  %46 = select i1 %43, i32 4000, i32 %45
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  %47 = shl i32 %46, 1
  %48 = bitcast %"class.blink::CullRect"* %0 to <4 x i32>*
  %49 = load <4 x i32>, <4 x i32>* %48, align 4
  %50 = insertelement <2 x i32> undef, i32 %46, i32 0
  %51 = insertelement <2 x i32> %50, i32 %47, i32 1
  %52 = shufflevector <2 x i32> %51, <2 x i32> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %53 = sub nsw <4 x i32> %49, %52
  %54 = add <4 x i32> %49, %52
  %55 = shufflevector <4 x i32> %53, <4 x i32> %54, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %56 = bitcast %"class.blink::CullRect"* %0 to <4 x i32>*
  store <4 x i32> %55, <4 x i32>* %56, align 4
  %57 = bitcast %"class.blink::IntRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #11
  %58 = bitcast %"class.blink::IntRect"* %6 to i64*
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %6, i64 0, i32 1
  %60 = bitcast %"class.blink::IntSize"* %25 to i64*
  %61 = bitcast %"class.blink::IntSize"* %59 to i64*
  %62 = load i64, i64* %60, align 4
  store i64 %62, i64* %61, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* %9, %"class.blink::IntRect"* nonnull dereferenceable(16) %6) #11
  %63 = bitcast %"class.blink::CullRect"* %0 to i64*
  %64 = load i64, i64* %63, align 4
  %65 = trunc i64 %64 to i32
  %66 = lshr i64 %64, 32
  %67 = trunc i64 %66 to i32
  %68 = load i64, i64* %58, align 8
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %65, %69
  %73 = icmp eq i32 %67, %71
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %90

75:                                               ; preds = %35
  %76 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.blink::IntSize"* %76 to i64*
  %78 = load i64, i64* %77, align 4
  %79 = trunc i64 %78 to i32
  %80 = load i64, i64* %61, align 8
  %81 = trunc i64 %80 to i32
  %82 = icmp eq i32 %79, %81
  br i1 %82, label %83, label %90

83:                                               ; preds = %75
  %84 = lshr i64 %80, 32
  %85 = trunc i64 %84 to i32
  %86 = lshr i64 %78, 32
  %87 = trunc i64 %86 to i32
  %88 = icmp eq i32 %87, %85
  %89 = select i1 %88, i32 1, i32 2
  br label %90

90:                                               ; preds = %83, %35, %75
  %91 = phi i32 [ 2, %75 ], [ 2, %35 ], [ %89, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #11
  br label %92

92:                                               ; preds = %18, %3, %29, %14, %90
  %93 = phi i32 [ %91, %90 ], [ 0, %14 ], [ 0, %18 ], [ 0, %29 ], [ 0, %3 ]
  ret i32 %93
}

declare void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8CullRect36ApplyPaintPropertiesWithoutExpansionERKNS_17PropertyTreeStateES3_(%"class.blink::CullRect"*, %"class.blink::PropertyTreeState"* dereferenceable(24), %"class.blink::PropertyTreeState"* dereferenceable(24)) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.blink::FloatClipRect", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast %"class.blink::FloatClipRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %4, i64 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %4, i64 0, i32 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.blink::FloatClipRect", %"class.blink::FloatClipRect"* %4, i64 0, i32 1
  %11 = bitcast %"class.blink::FloatClipRect"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -1, i64 16, i1 false)
  %12 = bitcast i8* %10 to i32*
  store i32 -1431655766, i32* %12, align 8
  call void @_ZN5blink14GeometryMapper23LocalToAncestorClipRectERKNS_17PropertyTreeStateES3_NS_28OverlayScrollbarClipBehaviorE(%"class.blink::FloatClipRect"* nonnull sret %4, %"class.blink::PropertyTreeState"* dereferenceable(24) %2, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, i32 0) #11
  %13 = load i8, i8* %10, align 8
  %14 = and i8 %13, 4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %97

16:                                               ; preds = %3
  %17 = bitcast { i64, i64 }* %5 to %"class.blink::IntRect"*
  %18 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0
  %19 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  %20 = bitcast %"class.blink::FloatClipRect"* %4 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 8
  %22 = extractelement <2 x float> %21, i32 0
  %23 = call float @llvm.floor.f32(float %22) #11
  %24 = fpext float %23 to double
  %25 = fcmp ult double %24, 0x41DFFFFFFFC00000
  br i1 %25, label %26, label %31

26:                                               ; preds = %16
  %27 = fcmp ugt float %23, 0xC1E0000000000000
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  %29 = fptosi float %23 to i32
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %28, %26, %16
  %32 = phi i64 [ %30, %28 ], [ 2147483647, %16 ], [ 2147483648, %26 ]
  %33 = extractelement <2 x float> %21, i32 1
  %34 = call float @llvm.floor.f32(float %33) #11
  %35 = fpext float %34 to double
  %36 = fcmp ult double %35, 0x41DFFFFFFFC00000
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = fcmp ugt float %34, 0xC1E0000000000000
  br i1 %38, label %39, label %43

39:                                               ; preds = %37
  %40 = fptosi float %34 to i32
  %41 = zext i32 %40 to i64
  %42 = shl nuw i64 %41, 32
  br label %43

43:                                               ; preds = %39, %37, %31
  %44 = phi i64 [ %42, %39 ], [ 9223372032559808512, %31 ], [ -9223372036854775808, %37 ]
  %45 = trunc i64 %32 to i32
  %46 = lshr exact i64 %44, 32
  %47 = trunc i64 %46 to i32
  %48 = load float, float* %8, align 8
  %49 = fadd float %22, %48
  %50 = load float, float* %7, align 4
  %51 = load float, float* %9, align 4
  %52 = fadd float %50, %51
  %53 = call float @llvm.ceil.f32(float %49) #11
  %54 = fpext float %53 to double
  %55 = fcmp ult double %54, 0x41DFFFFFFFC00000
  br i1 %55, label %56, label %60

56:                                               ; preds = %43
  %57 = fcmp ugt float %53, 0xC1E0000000000000
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = fptosi float %53 to i32
  br label %60

60:                                               ; preds = %58, %56, %43
  %61 = phi i32 [ %59, %58 ], [ 2147483647, %43 ], [ -2147483648, %56 ]
  %62 = call float @llvm.ceil.f32(float %52) #11
  %63 = fpext float %62 to double
  %64 = fcmp ult double %63, 0x41DFFFFFFFC00000
  br i1 %64, label %65, label %69

65:                                               ; preds = %60
  %66 = fcmp ugt float %62, 0xC1E0000000000000
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  %68 = fptosi float %62 to i32
  br label %69

69:                                               ; preds = %60, %65, %67
  %70 = phi i32 [ %68, %67 ], [ 2147483647, %60 ], [ -2147483648, %65 ]
  %71 = icmp sgt i32 %45, -1
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %61, i32 %45) #11
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !3
  %77 = icmp sgt i32 %47, -1
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %70, i32 %47) #11
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !3
  %83 = or i64 %44, %32
  %84 = zext i32 %82 to i64
  %85 = shl nuw i64 %84, 32
  %86 = zext i32 %76 to i64
  %87 = or i64 %85, %86
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %83, i64* %88, align 8
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  store i64 %87, i64* %89, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* %18, %"class.blink::IntRect"* nonnull dereferenceable(16) %17) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  %90 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %91, 1
  br i1 %92, label %137, label %93

93:                                               ; preds = %69
  %94 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %95, 1
  br i1 %96, label %137, label %97

97:                                               ; preds = %3, %93
  %98 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %104, !prof !2

100:                                              ; preds = %97
  %101 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %104, label %103

103:                                              ; preds = %100
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  br label %104

104:                                              ; preds = %103, %100, %97
  %105 = load i64, i64* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i64*), align 4
  %106 = load i64, i64* bitcast (%"class.blink::IntSize"* getelementptr inbounds (%"class.blink::IntRect", %"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect, i64 0, i32 1) to i64*), align 4
  %107 = bitcast %"class.blink::CullRect"* %0 to i64*
  %108 = load i64, i64* %107, align 4
  %109 = trunc i64 %108 to i32
  %110 = lshr i64 %108, 32
  %111 = trunc i64 %110 to i32
  %112 = trunc i64 %105 to i32
  %113 = lshr i64 %105, 32
  %114 = trunc i64 %113 to i32
  %115 = icmp eq i32 %109, %112
  %116 = icmp eq i32 %111, %114
  %117 = and i1 %115, %116
  br i1 %117, label %118, label %131

118:                                              ; preds = %104
  %119 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1
  %120 = bitcast %"class.blink::IntSize"* %119 to i64*
  %121 = load i64, i64* %120, align 4
  %122 = trunc i64 %121 to i32
  %123 = trunc i64 %106 to i32
  %124 = icmp eq i32 %122, %123
  br i1 %124, label %125, label %131

125:                                              ; preds = %118
  %126 = lshr i64 %106, 32
  %127 = trunc i64 %126 to i32
  %128 = lshr i64 %121, 32
  %129 = trunc i64 %128 to i32
  %130 = icmp eq i32 %129, %127
  br i1 %130, label %137, label %131

131:                                              ; preds = %104, %118, %125
  %132 = bitcast %"class.blink::PropertyTreeState"* %1 to %"class.blink::TransformPaintPropertyNode"**
  %133 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %132, align 8
  %134 = bitcast %"class.blink::PropertyTreeState"* %2 to %"class.blink::TransformPaintPropertyNode"**
  %135 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0
  call void @_ZN5blink14GeometryMapper23SourceToDestinationRectINS_7IntRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %133, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %135, %"class.blink::IntRect"* dereferenceable(16) %136)
  br label %137

137:                                              ; preds = %69, %125, %131, %93
  %138 = phi i1 [ false, %93 ], [ true, %131 ], [ true, %125 ], [ false, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #11
  ret i1 %138
}

declare void @_ZN5blink14GeometryMapper23LocalToAncestorClipRectERKNS_17PropertyTreeStateES3_NS_28OverlayScrollbarClipBehaviorE(%"class.blink::FloatClipRect"* sret, %"class.blink::PropertyTreeState"* dereferenceable(24), %"class.blink::PropertyTreeState"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14GeometryMapper23SourceToDestinationRectINS_7IntRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.blink::FloatSize"*
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca %"class.blink::GeometryMapper::Translation2DOrMatrix", align 8
  %9 = icmp eq %"class.blink::TransformPaintPropertyNode"* %0, %1
  br i1 %9, label %57, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %13 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %12, align 8
  %14 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %16, align 8
  %18 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN5blink14GeometryMapper8MoveRectERNS_7IntRectERKNS_9FloatSizeE(%"class.blink::IntRect"* dereferenceable(16) %2, %"class.blink::FloatSize"* dereferenceable(8) %20)
  br label %57

21:                                               ; preds = %15, %10
  %22 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %24 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %23, align 8
  %25 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %22, %24
  br i1 %25, label %26, label %36

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %27, align 8
  %29 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %28, null
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = bitcast float* %32 to <2 x float>*
  %34 = load <2 x float>, <2 x float>* %33, align 4
  %35 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %34
  store <2 x float> %35, <2 x float>* %4, align 8
  call void @_ZN5blink14GeometryMapper8MoveRectERNS_7IntRectERKNS_9FloatSizeE(%"class.blink::IntRect"* dereferenceable(16) %2, %"class.blink::FloatSize"* nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %57

36:                                               ; preds = %26, %21
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  store i8 0, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 0, i8* %7, align 1
  %37 = bitcast %"class.blink::GeometryMapper::Translation2DOrMatrix"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %37) #11
  call void @_ZN5blink14GeometryMapper37SourceToDestinationProjectionInternalERKNS_26TransformPaintPropertyNodeES3_RbS4_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* nonnull sret %8, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %1, i8* nonnull dereferenceable(1) %6, i8* nonnull dereferenceable(1) %7) #11
  %38 = load i8, i8* %7, align 1, !range !4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::IntRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 16, i1 false)
  br label %56

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %44 = load i8, i8* %43, align 8, !range !4
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %48, !prof !5

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %8, i64 0, i32 0
  call void @_ZN5blink14GeometryMapper8MoveRectERNS_7IntRectERKNS_9FloatSizeE(%"class.blink::IntRect"* dereferenceable(16) %2, %"class.blink::FloatSize"* nonnull dereferenceable(8) %47) #11
  br label %56

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = call { i64, i64 } @_ZNK5blink20TransformationMatrix7MapRectERKNS_7IntRectE(%"class.blink::TransformationMatrix"* %49, %"class.blink::IntRect"* dereferenceable(16) %2) #11
  %51 = extractvalue { i64, i64 } %50, 0
  %52 = extractvalue { i64, i64 } %50, 1
  %53 = bitcast %"class.blink::IntRect"* %2 to i64*
  store i64 %51, i64* %53, align 4
  %54 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1
  %55 = bitcast %"class.blink::IntSize"* %54 to i64*
  store i64 %52, i64* %55, align 4
  br label %56

56:                                               ; preds = %48, %46, %40
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  br label %57

57:                                               ; preds = %3, %56, %30, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink8CullRect20ApplyPaintPropertiesERKNS_17PropertyTreeStateES3_S3_RKN4absl8optionalIS0_EE(%"class.blink::CullRect"*, %"class.blink::PropertyTreeState"* dereferenceable(24), %"class.blink::PropertyTreeState"* nocapture readonly dereferenceable(24), %"class.blink::PropertyTreeState"* dereferenceable(24), %"class.absl::optional.40"* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %6 = alloca <4 x float>, align 16
  %7 = bitcast <4 x float>* %6 to %"class.blink::FloatRect"*
  %8 = alloca %"class.WTF::Vector", align 8
  %9 = alloca %"class.WTF::Vector.45", align 8
  %10 = alloca %"class.blink::TransformPaintPropertyNode"*, align 8
  %11 = alloca %"class.blink::ClipPaintPropertyNode"*, align 8
  %12 = alloca %"class.blink::PropertyTreeState", align 8
  %13 = alloca %"class.blink::PropertyTreeState", align 8
  %14 = alloca %"class.blink::PropertyTreeState", align 8
  %15 = bitcast %"class.WTF::Vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 1, i64 0
  %18 = bitcast %"class.WTF::Vector"* %8 to i8**
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %19, align 8
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %20, align 4
  %21 = bitcast %"class.WTF::Vector.45"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %9, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  %23 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %9, i64 0, i32 0, i32 1, i64 0
  %24 = bitcast %"class.WTF::Vector.45"* %9 to i8**
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %9, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %9, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %26, align 4
  %27 = bitcast %"class.blink::TransformPaintPropertyNode"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = bitcast %"class.blink::PropertyTreeState"* %3 to %"class.blink::TransformPaintPropertyNode"**
  %29 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %28, align 8
  store %"class.blink::TransformPaintPropertyNode"* %29, %"class.blink::TransformPaintPropertyNode"** %10, align 8
  %30 = bitcast %"class.blink::PropertyTreeState"* %2 to %"class.blink::TransformPaintPropertyNode"**
  %31 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %30, align 8
  %32 = icmp eq %"class.blink::TransformPaintPropertyNode"* %29, %31
  br i1 %32, label %78, label %33

33:                                               ; preds = %5
  %34 = bitcast %"class.blink::PropertyTreeState"* %1 to %"class.blink::TransformPaintPropertyNode"**
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.blink::TransformPaintPropertyNode"** %10 to %"class.blink::PaintPropertyNode"**
  br label %37

37:                                               ; preds = %33, %74
  %38 = phi %"class.blink::TransformPaintPropertyNode"* [ %29, %33 ], [ %75, %74 ]
  %39 = ptrtoint %"class.blink::TransformPaintPropertyNode"* %38 to i64
  %40 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %34, align 8
  %41 = icmp eq %"class.blink::TransformPaintPropertyNode"* %38, %40
  br i1 %41, label %130, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %38, i64 0, i32 1, i32 1, i32 0
  %44 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %43, align 8
  %45 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = load i32, i32* %20, align 4
  %48 = load i32, i32* %19, align 8
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %57, label %50, !prof !3

50:                                               ; preds = %46
  %51 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %35, align 8
  %52 = zext i32 %47 to i64
  %53 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %51, i64 %52
  %54 = bitcast %"class.blink::TransformPaintPropertyNode"** %53 to i64*
  store i64 %39, i64* %54, align 8
  %55 = load i32, i32* %20, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %20, align 4
  br label %58

57:                                               ; preds = %46
  call void @_ZN3WTF6VectorIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector"* nonnull %8, %"class.blink::TransformPaintPropertyNode"** nonnull dereferenceable(8) %10) #11
  br label %58

58:                                               ; preds = %57, %50, %42
  %59 = load %"class.blink::PaintPropertyNode"*, %"class.blink::PaintPropertyNode"** %36, align 8
  %60 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %59, i64 0, i32 3, i32 0
  %61 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %60, align 8
  %62 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %61, null
  br i1 %62, label %74, label %63

63:                                               ; preds = %58, %68
  %64 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %66, %68 ], [ %61, %58 ]
  %65 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %64, i64 0, i32 0, i32 3, i32 0
  %66 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %65, align 8
  %67 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %64, i64 0, i32 0, i32 1
  %70 = load i8, i8* %69, align 4, !range !4
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %63

72:                                               ; preds = %68, %63
  %73 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %64 to %"class.blink::TransformPaintPropertyNode"*
  br label %74

74:                                               ; preds = %58, %72
  %75 = phi %"class.blink::TransformPaintPropertyNode"* [ %73, %72 ], [ null, %58 ]
  store %"class.blink::TransformPaintPropertyNode"* %75, %"class.blink::TransformPaintPropertyNode"** %10, align 8
  %76 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %30, align 8
  %77 = icmp eq %"class.blink::TransformPaintPropertyNode"* %75, %76
  br i1 %77, label %78, label %37

78:                                               ; preds = %74, %5
  %79 = phi %"class.blink::TransformPaintPropertyNode"* [ %29, %5 ], [ %75, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %80 = bitcast %"class.blink::ClipPaintPropertyNode"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #11
  %81 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %3, i64 0, i32 0, i32 1
  %82 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %81 to %"class.blink::ClipPaintPropertyNode"**
  %83 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %82, align 8
  store %"class.blink::ClipPaintPropertyNode"* %83, %"class.blink::ClipPaintPropertyNode"** %11, align 8
  %84 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %2, i64 0, i32 0, i32 1
  %85 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %84 to %"class.blink::ClipPaintPropertyNode"**
  %86 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %85, align 8
  %87 = icmp eq %"class.blink::ClipPaintPropertyNode"* %83, %86
  br i1 %87, label %144, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %1, i64 0, i32 0, i32 1
  %90 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %89 to %"class.blink::ClipPaintPropertyNode"**
  %91 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %9, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.blink::ClipPaintPropertyNode"** %11 to %"class.blink::PaintPropertyNode.32"**
  br label %93

93:                                               ; preds = %88, %126
  %94 = phi %"class.blink::ClipPaintPropertyNode"* [ %83, %88 ], [ %127, %126 ]
  %95 = ptrtoint %"class.blink::ClipPaintPropertyNode"* %94 to i64
  %96 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %90, align 8
  %97 = icmp eq %"class.blink::ClipPaintPropertyNode"* %94, %96
  br i1 %97, label %130, label %98

98:                                               ; preds = %93
  %99 = load i32, i32* %26, align 4
  %100 = load i32, i32* %25, align 8
  %101 = icmp eq i32 %99, %100
  br i1 %101, label %109, label %102, !prof !3

102:                                              ; preds = %98
  %103 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %91, align 8
  %104 = zext i32 %99 to i64
  %105 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %103, i64 %104
  %106 = bitcast %"class.blink::ClipPaintPropertyNode"** %105 to i64*
  store i64 %95, i64* %106, align 8
  %107 = load i32, i32* %26, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %26, align 4
  br label %110

109:                                              ; preds = %98
  call void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.45"* nonnull %9, %"class.blink::ClipPaintPropertyNode"** nonnull dereferenceable(8) %11) #11
  br label %110

110:                                              ; preds = %102, %109
  %111 = load %"class.blink::PaintPropertyNode.32"*, %"class.blink::PaintPropertyNode.32"** %92, align 8
  %112 = getelementptr inbounds %"class.blink::PaintPropertyNode.32", %"class.blink::PaintPropertyNode.32"* %111, i64 0, i32 3, i32 0
  %113 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %112, align 8
  %114 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %113, null
  br i1 %114, label %126, label %115

115:                                              ; preds = %110, %120
  %116 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %118, %120 ], [ %113, %110 ]
  %117 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %116, i64 0, i32 0, i32 3, i32 0
  %118 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %117, align 8
  %119 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %118, null
  br i1 %119, label %124, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %116, i64 0, i32 0, i32 1
  %122 = load i8, i8* %121, align 4, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %115

124:                                              ; preds = %120, %115
  %125 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"* %116 to %"class.blink::ClipPaintPropertyNode"*
  br label %126

126:                                              ; preds = %110, %124
  %127 = phi %"class.blink::ClipPaintPropertyNode"* [ %125, %124 ], [ null, %110 ]
  store %"class.blink::ClipPaintPropertyNode"* %127, %"class.blink::ClipPaintPropertyNode"** %11, align 8
  %128 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %85, align 8
  %129 = icmp eq %"class.blink::ClipPaintPropertyNode"* %127, %128
  br i1 %129, label %142, label %93

130:                                              ; preds = %37, %93
  %131 = phi i8* [ %80, %93 ], [ %27, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #11
  %132 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %138, !prof !2

134:                                              ; preds = %130
  %135 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %138, label %137

137:                                              ; preds = %134
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  br label %138

138:                                              ; preds = %130, %134, %137
  %139 = load <2 x i64>, <2 x i64>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <2 x i64>*), align 4
  %140 = bitcast %"class.blink::CullRect"* %0 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %140, align 4
  %141 = call zeroext i1 @_ZN5blink8CullRect20ApplyPaintPropertiesERKNS_17PropertyTreeStateES3_S3_RKN4absl8optionalIS0_EE(%"class.blink::CullRect"* %0, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.blink::PropertyTreeState"* dereferenceable(24) %1, %"class.blink::PropertyTreeState"* dereferenceable(24) %3, %"class.absl::optional.40"* dereferenceable(20) %4)
  br label %356

142:                                              ; preds = %126
  %143 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %30, align 8
  br label %144

144:                                              ; preds = %142, %78
  %145 = phi %"class.blink::ClipPaintPropertyNode"* [ %127, %142 ], [ %83, %78 ]
  %146 = phi %"class.blink::TransformPaintPropertyNode"* [ %143, %142 ], [ %79, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11
  %147 = call dereferenceable(152) %"class.blink::EffectPaintPropertyNode"* @_ZN5blink23EffectPaintPropertyNode4RootEv() #11
  %148 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %149 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %9, i64 0, i32 0, i32 0, i32 0
  %150 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %149, align 8
  %151 = load i32, i32* %26, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %220, label %153

153:                                              ; preds = %144
  %154 = load i32, i32* %20, align 4
  %155 = bitcast %"class.blink::PropertyTreeState"* %12 to i8*
  %156 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %147, i64 0, i32 0
  %157 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %12, i64 0, i32 0, i32 0
  %158 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %12, i64 0, i32 0, i32 1
  %159 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %12, i64 0, i32 0, i32 2
  %160 = bitcast %"class.blink::PropertyTreeState"* %13 to i8*
  %161 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %13, i64 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %13, i64 0, i32 0, i32 1
  %163 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %13, i64 0, i32 0, i32 2
  %164 = bitcast %"class.blink::PropertyTreeState"* %1 to %"class.blink::TransformPaintPropertyNode"**
  %165 = icmp eq i32 %154, 0
  br i1 %165, label %220, label %166

166:                                              ; preds = %153
  %167 = zext i32 %151 to i64
  %168 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %150, i64 %167
  %169 = zext i32 %154 to i64
  %170 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %148, align 8
  %171 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %170, i64 %169
  br label %172

172:                                              ; preds = %211, %166
  %173 = phi %"class.blink::ClipPaintPropertyNode"** [ %168, %166 ], [ %178, %211 ]
  %174 = phi %"class.blink::TransformPaintPropertyNode"** [ %171, %166 ], [ %212, %211 ]
  %175 = phi %"class.blink::TransformPaintPropertyNode"* [ %146, %166 ], [ %213, %211 ]
  %176 = phi %"class.blink::ClipPaintPropertyNode"* [ %145, %166 ], [ %214, %211 ]
  %177 = phi i32 [ 0, %166 ], [ %215, %211 ]
  %178 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %173, i64 -1
  %179 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %178, align 8
  %180 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %174, i64 -1
  %181 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %179, i64 0, i32 1, i32 0, i32 0
  %183 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %181, i64 0, i32 0, i32 0, i32 3, i32 0
  %185 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %184, align 8
  %186 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %183, %185
  br i1 %186, label %187, label %211

187:                                              ; preds = %172
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #11
  %188 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %175, i64 0, i32 0
  %189 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %176, i64 0, i32 0
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* %188, %"class.blink::TransformPaintPropertyNodeOrAlias"** %157, align 8
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* %189, %"class.blink::ClipPaintPropertyNodeOrAlias"** %158, align 8
  store %"class.blink::EffectPaintPropertyNodeOrAlias"* %156, %"class.blink::EffectPaintPropertyNodeOrAlias"** %159, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #11
  %190 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %184, align 8
  %191 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %190, null
  br i1 %191, label %203, label %192

192:                                              ; preds = %187, %197
  %193 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %195, %197 ], [ %190, %187 ]
  %194 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %193, i64 0, i32 0, i32 3, i32 0
  %195 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %194, align 8
  %196 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %195, null
  br i1 %196, label %201, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %193, i64 0, i32 0, i32 1
  %199 = load i8, i8* %198, align 4, !range !4
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %192

201:                                              ; preds = %197, %192
  %202 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"* %193 to %"class.blink::TransformPaintPropertyNode"*
  br label %203

203:                                              ; preds = %187, %201
  %204 = phi %"class.blink::TransformPaintPropertyNode"* [ %202, %201 ], [ null, %187 ]
  %205 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %204, i64 0, i32 0
  %206 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %179, i64 0, i32 0
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* %205, %"class.blink::TransformPaintPropertyNodeOrAlias"** %161, align 8
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* %206, %"class.blink::ClipPaintPropertyNodeOrAlias"** %162, align 8
  store %"class.blink::EffectPaintPropertyNodeOrAlias"* %156, %"class.blink::EffectPaintPropertyNodeOrAlias"** %163, align 8
  %207 = call zeroext i1 @_ZN5blink8CullRect36ApplyPaintPropertiesWithoutExpansionERKNS_17PropertyTreeStateES3_(%"class.blink::CullRect"* %0, %"class.blink::PropertyTreeState"* nonnull dereferenceable(24) %12, %"class.blink::PropertyTreeState"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #11
  br i1 %207, label %208, label %356

208:                                              ; preds = %203
  %209 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %164, align 8
  %210 = call i32 @_ZN5blink8CullRect22ApplyScrollTranslationERKNS_26TransformPaintPropertyNodeES3_(%"class.blink::CullRect"* %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %209, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %181)
  br label %211

211:                                              ; preds = %208, %172
  %212 = phi %"class.blink::TransformPaintPropertyNode"** [ %174, %172 ], [ %180, %208 ]
  %213 = phi %"class.blink::TransformPaintPropertyNode"* [ %175, %172 ], [ %181, %208 ]
  %214 = phi %"class.blink::ClipPaintPropertyNode"* [ %176, %172 ], [ %179, %208 ]
  %215 = phi i32 [ %177, %172 ], [ %210, %208 ]
  %216 = icmp eq %"class.blink::ClipPaintPropertyNode"** %178, %150
  %217 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %148, align 8
  %218 = icmp eq %"class.blink::TransformPaintPropertyNode"** %212, %217
  %219 = or i1 %216, %218
  br i1 %219, label %220, label %172

220:                                              ; preds = %211, %153, %144
  %221 = phi %"class.blink::TransformPaintPropertyNode"* [ %146, %144 ], [ %146, %153 ], [ %213, %211 ]
  %222 = phi %"class.blink::ClipPaintPropertyNode"* [ %145, %144 ], [ %145, %153 ], [ %214, %211 ]
  %223 = phi i32 [ 0, %144 ], [ 0, %153 ], [ %215, %211 ]
  %224 = bitcast %"class.blink::PropertyTreeState"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #11
  %225 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %221, i64 0, i32 0
  %226 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode", %"class.blink::ClipPaintPropertyNode"* %222, i64 0, i32 0
  %227 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %147, i64 0, i32 0
  %228 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %14, i64 0, i32 0, i32 0
  store %"class.blink::TransformPaintPropertyNodeOrAlias"* %225, %"class.blink::TransformPaintPropertyNodeOrAlias"** %228, align 8
  %229 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %14, i64 0, i32 0, i32 1
  store %"class.blink::ClipPaintPropertyNodeOrAlias"* %226, %"class.blink::ClipPaintPropertyNodeOrAlias"** %229, align 8
  %230 = getelementptr inbounds %"class.blink::PropertyTreeState", %"class.blink::PropertyTreeState"* %14, i64 0, i32 0, i32 2
  store %"class.blink::EffectPaintPropertyNodeOrAlias"* %227, %"class.blink::EffectPaintPropertyNodeOrAlias"** %230, align 8
  %231 = call zeroext i1 @_ZN5blink8CullRect36ApplyPaintPropertiesWithoutExpansionERKNS_17PropertyTreeStateES3_(%"class.blink::CullRect"* %0, %"class.blink::PropertyTreeState"* nonnull dereferenceable(24) %14, %"class.blink::PropertyTreeState"* dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #11
  br i1 %231, label %232, label %356

232:                                              ; preds = %220
  %233 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0
  %234 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = icmp slt i32 %235, -1073741823
  br i1 %236, label %237, label %238

237:                                              ; preds = %232
  store i32 -1073741823, i32* %234, align 4
  br label %238

238:                                              ; preds = %237, %232
  %239 = phi i32 [ -1073741823, %237 ], [ %235, %232 ]
  %240 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = icmp slt i32 %241, -1073741823
  br i1 %242, label %243, label %244

243:                                              ; preds = %238
  store i32 -1073741823, i32* %240, align 4
  br label %244

244:                                              ; preds = %243, %238
  %245 = phi i32 [ -1073741823, %243 ], [ %241, %238 ]
  %246 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 0
  %247 = load i32, i32* %246, align 4
  %248 = add nsw i32 %247, %239
  %249 = icmp sgt i32 %248, 1073741823
  br i1 %249, label %250, label %252

250:                                              ; preds = %244
  call void @_ZN5blink7IntRect15ShiftMaxXEdgeToEi(%"class.blink::IntRect"* %233, i32 1073741823) #11
  %251 = load i32, i32* %240, align 4
  br label %252

252:                                              ; preds = %250, %244
  %253 = phi i32 [ %251, %250 ], [ %245, %244 ]
  %254 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = add nsw i32 %255, %253
  %257 = icmp sgt i32 %256, 1073741823
  br i1 %257, label %258, label %259

258:                                              ; preds = %252
  call void @_ZN5blink7IntRect15ShiftMaxYEdgeToEi(%"class.blink::IntRect"* %233, i32 1073741823) #11
  br label %259

259:                                              ; preds = %258, %252
  %260 = icmp eq i32 %223, 2
  %261 = load %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %82, align 8
  %262 = icmp eq %"class.blink::ClipPaintPropertyNode"* %222, %261
  %263 = and i1 %260, %262
  br i1 %263, label %264, label %268

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %221, i64 0, i32 1, i32 1, i32 0
  %266 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %265, align 8
  %267 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %266, i64 0, i32 1, i32 1
  br label %341

268:                                              ; preds = %259
  %269 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %271, label %275, !prof !2

271:                                              ; preds = %268
  %272 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %275, label %274

274:                                              ; preds = %271
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #11
  br label %275

275:                                              ; preds = %274, %271, %268
  %276 = load i64, i64* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i64*), align 4
  %277 = load i64, i64* bitcast (%"class.blink::IntSize"* getelementptr inbounds (%"class.blink::IntRect", %"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect, i64 0, i32 1) to i64*), align 4
  %278 = bitcast %"class.blink::CullRect"* %0 to i64*
  %279 = load i64, i64* %278, align 4
  %280 = trunc i64 %279 to i32
  %281 = lshr i64 %279, 32
  %282 = trunc i64 %281 to i32
  %283 = trunc i64 %276 to i32
  %284 = lshr i64 %276, 32
  %285 = trunc i64 %284 to i32
  %286 = icmp eq i32 %280, %283
  %287 = icmp eq i32 %282, %285
  %288 = and i1 %286, %287
  br i1 %288, label %289, label %302

289:                                              ; preds = %275
  %290 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1
  %291 = bitcast %"class.blink::IntSize"* %290 to i64*
  %292 = load i64, i64* %291, align 4
  %293 = trunc i64 %292 to i32
  %294 = trunc i64 %277 to i32
  %295 = icmp eq i32 %293, %294
  br i1 %295, label %296, label %302

296:                                              ; preds = %289
  %297 = lshr i64 %277, 32
  %298 = trunc i64 %297 to i32
  %299 = lshr i64 %292, 32
  %300 = trunc i64 %299 to i32
  %301 = icmp eq i32 %300, %298
  br i1 %301, label %356, label %302

302:                                              ; preds = %275, %289, %296
  %303 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %28, align 8
  %304 = icmp eq %"class.blink::TransformPaintPropertyNode"* %221, %303
  br i1 %304, label %356, label %305

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %303, i64 0, i32 1, i32 5
  %307 = load i64, i64* %306, align 8
  %308 = and i64 %307, 824709497091
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %356, label %310

310:                                              ; preds = %305
  %311 = bitcast %"class.blink::PropertyTreeState"* %1 to %"class.blink::TransformPaintPropertyNode"**
  %312 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %311, align 8
  %313 = bitcast <4 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %313) #11
  %314 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 0, i32 1, i32 0
  %315 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %7, i64 0, i32 1, i32 1
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %6, align 16
  call void @_ZN5blink14GeometryMapper23SourceToDestinationRectINS_9FloatRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %312, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %303, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7) #11
  %316 = load float, float* %314, align 8
  %317 = load float, float* %315, align 4
  %318 = fcmp olt float %316, %317
  %319 = select i1 %318, float %317, float %316
  %320 = fcmp ogt float %319, 2.684350e+05
  %321 = fmul float %319, 4.000000e+03
  %322 = fptosi float %321 to i32
  %323 = select i1 %320, i32 4000, i32 %322
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313) #11
  %324 = load i32, i32* %246, align 4
  %325 = icmp slt i32 %324, %323
  br i1 %325, label %326, label %331

326:                                              ; preds = %310
  %327 = load i32, i32* %234, align 4
  %328 = sub nsw i32 %327, %323
  store i32 %328, i32* %234, align 4
  %329 = shl i32 %323, 1
  %330 = add i32 %329, %324
  store i32 %330, i32* %246, align 4
  br label %331

331:                                              ; preds = %326, %310
  %332 = phi i1 [ true, %326 ], [ false, %310 ]
  %333 = load i32, i32* %254, align 4
  %334 = icmp slt i32 %333, %323
  br i1 %334, label %335, label %340

335:                                              ; preds = %331
  %336 = load i32, i32* %240, align 4
  %337 = sub nsw i32 %336, %323
  store i32 %337, i32* %240, align 4
  %338 = shl i32 %323, 1
  %339 = add i32 %333, %338
  store i32 %339, i32* %254, align 4
  br label %341

340:                                              ; preds = %331
  br i1 %332, label %341, label %356

341:                                              ; preds = %335, %264, %340
  %342 = phi %"class.blink::IntSize"* [ null, %340 ], [ null, %335 ], [ %267, %264 ]
  %343 = getelementptr inbounds %"class.absl::optional.40", %"class.absl::optional.40"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %344 = load i8, i8* %343, align 4, !range !4
  %345 = icmp eq i8 %344, 0
  br i1 %345, label %356, label %346

346:                                              ; preds = %341
  %347 = getelementptr inbounds %"class.absl::optional.40", %"class.absl::optional.40"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %348 = call zeroext i1 @_ZNK5blink8CullRect13ChangedEnoughERKS0_PKNS_7IntSizeE(%"class.blink::CullRect"* %0, %"class.blink::CullRect"* dereferenceable(16) %347, %"class.blink::IntSize"* %342)
  br i1 %348, label %356, label %349

349:                                              ; preds = %346
  %350 = load i8, i8* %343, align 4, !range !4
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %352, label %353, !prof !3

352:                                              ; preds = %349
  call void @llvm.trap() #11
  unreachable

353:                                              ; preds = %349
  %354 = bitcast %"class.blink::CullRect"* %0 to i8*
  %355 = bitcast %"class.blink::CullRect"* %347 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %354, i8* align 4 %355, i64 16, i1 false)
  br label %356

356:                                              ; preds = %203, %341, %305, %302, %296, %220, %353, %346, %340, %138
  %357 = phi i1 [ %141, %138 ], [ false, %220 ], [ true, %353 ], [ true, %346 ], [ true, %341 ], [ false, %340 ], [ false, %296 ], [ false, %305 ], [ false, %302 ], [ false, %203 ]
  %358 = load i32, i32* %26, align 4
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %361, label %360, !prof !3

360:                                              ; preds = %356
  store i32 0, i32* %26, align 4
  br label %361

361:                                              ; preds = %360, %356
  %362 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %9, i64 0, i32 0, i32 0, i32 0
  %363 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %362, align 8
  %364 = bitcast i8* %23 to %"class.blink::ClipPaintPropertyNode"**
  %365 = icmp eq %"class.blink::ClipPaintPropertyNode"** %363, %364
  br i1 %365, label %368, label %366, !prof !5

366:                                              ; preds = %361
  %367 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %9, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.46"* nonnull %367, %"class.blink::ClipPaintPropertyNode"** %363) #11
  br label %368

368:                                              ; preds = %361, %366
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #11
  %369 = load i32, i32* %20, align 4
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %372, label %371, !prof !3

371:                                              ; preds = %368
  store i32 0, i32* %20, align 4
  br label %372

372:                                              ; preds = %371, %368
  %373 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0, i32 0, i32 0
  %374 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %373, align 8
  %375 = bitcast i8* %17 to %"class.blink::TransformPaintPropertyNode"**
  %376 = icmp eq %"class.blink::TransformPaintPropertyNode"** %374, %375
  br i1 %376, label %379, label %377, !prof !5

377:                                              ; preds = %372
  %378 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %8, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer"* nonnull %378, %"class.blink::TransformPaintPropertyNode"** %374) #11
  br label %379

379:                                              ; preds = %372, %377
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #11
  ret i1 %357
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(152) %"class.blink::EffectPaintPropertyNode"* @_ZN5blink23EffectPaintPropertyNode4RootEv() local_unnamed_addr #1

declare void @_ZN5blink7IntRect15ShiftMaxXEdgeToEi(%"class.blink::IntRect"*, i32) local_unnamed_addr #1

declare void @_ZN5blink7IntRect15ShiftMaxYEdgeToEi(%"class.blink::IntRect"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8CullRect13ChangedEnoughERKS0_PKNS_7IntSizeE(%"class.blink::CullRect"*, %"class.blink::CullRect"* dereferenceable(16), %"class.blink::IntSize"* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca <4 x i32>, align 16
  %5 = bitcast <4 x i32>* %4 to %"class.blink::IntRect"*
  %6 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %1, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"* %7, %"class.blink::IntRect"* dereferenceable(16) %6) #11
  br i1 %8, label %85, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %1, i64 0, i32 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %1, i64 0, i32 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %31

17:                                               ; preds = %9, %13
  %18 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %85, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, 1
  %25 = or i1 %12, %24
  %26 = xor i1 %24, true
  br i1 %25, label %85, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %1, i64 0, i32 0, i32 1, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %85, label %31

31:                                               ; preds = %13, %27
  %32 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %1, i64 0, i32 0, i32 1, i32 1
  %33 = bitcast <4 x i32>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  %34 = bitcast %"class.blink::CullRect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %33, i8* align 4 %34, i64 16, i1 false)
  %35 = load <4 x i32>, <4 x i32>* %4, align 16
  %36 = add <4 x i32> %35, <i32 -512, i32 -512, i32 1024, i32 1024>
  store <4 x i32> %36, <4 x i32>* %4, align 16
  %37 = call zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"* nonnull %5, %"class.blink::IntRect"* dereferenceable(16) %6) #11
  br i1 %37, label %38, label %83

38:                                               ; preds = %31
  %39 = icmp eq %"class.blink::IntSize"* %2, null
  br i1 %39, label %83, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %1, i64 0, i32 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %83

48:                                               ; preds = %44, %40
  %49 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %1, i64 0, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %83

56:                                               ; preds = %52, %48
  %57 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, %42
  %60 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %2, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %69

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %1, i64 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = load i32, i32* %10, align 4
  %67 = add nsw i32 %66, %65
  %68 = icmp eq i32 %67, %59
  br i1 %68, label %69, label %83

69:                                               ; preds = %63, %56
  %70 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %0, i64 0, i32 0, i32 1, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i32 %71, %50
  %73 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %2, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %72, %74
  br i1 %75, label %76, label %82

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.blink::CullRect", %"class.blink::CullRect"* %1, i64 0, i32 0, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = load i32, i32* %32, align 4
  %80 = add nsw i32 %79, %78
  %81 = icmp eq i32 %80, %72
  br i1 %81, label %82, label %83

82:                                               ; preds = %76, %69
  br label %83

83:                                               ; preds = %76, %63, %52, %44, %38, %31, %82
  %84 = phi i1 [ false, %82 ], [ true, %31 ], [ false, %38 ], [ true, %44 ], [ true, %52 ], [ true, %63 ], [ true, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  br label %85

85:                                               ; preds = %21, %17, %27, %3, %83
  %86 = phi i1 [ %84, %83 ], [ false, %3 ], [ %26, %21 ], [ true, %27 ], [ false, %17 ]
  ret i1 %86
}

declare zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14GeometryMapper23SourceToDestinationRectINS_9FloatRectEEEvRKNS_26TransformPaintPropertyNodeES5_RT_(%"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca %"class.blink::GeometryMapper::Translation2DOrMatrix", align 8
  %7 = icmp eq %"class.blink::TransformPaintPropertyNode"* %0, %1
  br i1 %7, label %78, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %11 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %10, align 8
  %12 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %9, %11
  br i1 %12, label %13, label %28

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %14, align 8
  %16 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %15, null
  br i1 %16, label %17, label %28

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = fadd float %19, %23
  store float %24, float* %22, align 4
  %25 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fadd float %21, %26
  store float %27, float* %25, align 4
  br label %78

28:                                               ; preds = %13, %8
  %29 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %0, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 0, i32 0, i32 3, i32 0
  %31 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %30, align 8
  %32 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %29, %31
  br i1 %32, label %33, label %48

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"*, %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"** %34, align 8
  %36 = icmp eq %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* %35, null
  br i1 %36, label %37, label %48

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %43 = load float, float* %42, align 4
  %44 = fsub float %43, %39
  store float %44, float* %42, align 4
  %45 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %46 = load float, float* %45, align 4
  %47 = fsub float %46, %41
  store float %47, float* %45, align 4
  br label %78

48:                                               ; preds = %33, %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 0, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 0, i8* %5, align 1
  %49 = bitcast %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %49) #11
  call void @_ZN5blink14GeometryMapper37SourceToDestinationProjectionInternalERKNS_26TransformPaintPropertyNodeES3_RbS4_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* nonnull sret %6, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %0, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96) %1, i8* nonnull dereferenceable(1) %4, i8* nonnull dereferenceable(1) %5) #11
  %50 = load i8, i8* %5, align 1, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %53, i8 0, i64 16, i1 false)
  br label %77

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !4
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %69, !prof !5

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 0, i32 0
  %60 = load float, float* %59, align 8
  %61 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 0, i32 1
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %64 = load float, float* %63, align 4
  %65 = fadd float %60, %64
  store float %65, float* %63, align 4
  %66 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %67 = load float, float* %66, align 4
  %68 = fadd float %62, %67
  store float %68, float* %66, align 4
  br label %77

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"class.blink::GeometryMapper::Translation2DOrMatrix", %"class.blink::GeometryMapper::Translation2DOrMatrix"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %71 = call { <2 x float>, <2 x float> } @_ZNK5blink20TransformationMatrix7MapRectERKNS_9FloatRectE(%"class.blink::TransformationMatrix"* %70, %"class.blink::FloatRect"* dereferenceable(16) %2) #11
  %72 = extractvalue { <2 x float>, <2 x float> } %71, 0
  %73 = extractvalue { <2 x float>, <2 x float> } %71, 1
  %74 = bitcast %"class.blink::FloatRect"* %2 to <2 x float>*
  store <2 x float> %72, <2 x float>* %74, align 4
  %75 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1
  %76 = bitcast %"class.blink::FloatSize"* %75 to <2 x float>*
  store <2 x float> %73, <2 x float>* %76, align 4
  br label %77

77:                                               ; preds = %69, %58, %52
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br label %78

78:                                               ; preds = %3, %77, %37, %17
  ret void
}

declare void @_ZN5blink14GeometryMapper37SourceToDestinationProjectionInternalERKNS_26TransformPaintPropertyNodeES3_RbS4_(%"class.blink::GeometryMapper::Translation2DOrMatrix"* sret, %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), %"class.blink::TransformPaintPropertyNode"* dereferenceable(96), i8* dereferenceable(1), i8* dereferenceable(1)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink20TransformationMatrix7MapRectERKNS_9FloatRectE(%"class.blink::TransformationMatrix"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.46"*, %"class.blink::ClipPaintPropertyNode"**) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"class.blink::ClipPaintPropertyNode"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer"*, %"class.blink::TransformPaintPropertyNode"**) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast %"class.blink::TransformPaintPropertyNode"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14GeometryMapper8MoveRectERNS_7IntRectERKNS_9FloatSizeE(%"class.blink::IntRect"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sitofp i32 %4 to float
  %6 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = sitofp i32 %7 to float
  %9 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %0, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to float
  %12 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %0, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = fadd float %16, %5
  %20 = fadd float %18, %8
  %21 = tail call float @llvm.floor.f32(float %19) #11
  %22 = fpext float %21 to double
  %23 = fcmp ult double %22, 0x41DFFFFFFFC00000
  br i1 %23, label %24, label %29

24:                                               ; preds = %2
  %25 = fcmp ugt float %21, 0xC1E0000000000000
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  %27 = fptosi float %21 to i32
  %28 = zext i32 %27 to i64
  br label %29

29:                                               ; preds = %26, %24, %2
  %30 = phi i64 [ %28, %26 ], [ 2147483647, %2 ], [ 2147483648, %24 ]
  %31 = tail call float @llvm.floor.f32(float %20) #11
  %32 = fpext float %31 to double
  %33 = fcmp ult double %32, 0x41DFFFFFFFC00000
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = fcmp ugt float %31, 0xC1E0000000000000
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = fptosi float %31 to i32
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 32
  br label %40

40:                                               ; preds = %36, %34, %29
  %41 = phi i64 [ %39, %36 ], [ 9223372032559808512, %29 ], [ -9223372036854775808, %34 ]
  %42 = trunc i64 %30 to i32
  %43 = lshr exact i64 %41, 32
  %44 = trunc i64 %43 to i32
  %45 = fadd float %19, %11
  %46 = fadd float %20, %14
  %47 = tail call float @llvm.ceil.f32(float %45) #11
  %48 = fpext float %47 to double
  %49 = fcmp ult double %48, 0x41DFFFFFFFC00000
  br i1 %49, label %50, label %54

50:                                               ; preds = %40
  %51 = fcmp ugt float %47, 0xC1E0000000000000
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = fptosi float %47 to i32
  br label %54

54:                                               ; preds = %52, %50, %40
  %55 = phi i32 [ %53, %52 ], [ 2147483647, %40 ], [ -2147483648, %50 ]
  %56 = tail call float @llvm.ceil.f32(float %46) #11
  %57 = fpext float %56 to double
  %58 = fcmp ult double %57, 0x41DFFFFFFFC00000
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = fcmp ugt float %56, 0xC1E0000000000000
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = fptosi float %56 to i32
  br label %63

63:                                               ; preds = %54, %59, %61
  %64 = phi i32 [ %62, %61 ], [ 2147483647, %54 ], [ -2147483648, %59 ]
  %65 = icmp sgt i32 %42, -1
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %55, i32 %42) #11
  %68 = extractvalue { i32, i1 } %67, 1
  %69 = extractvalue { i32, i1 } %67, 0
  %70 = select i1 %68, i32 %66, i32 %69, !prof !3
  %71 = icmp sgt i32 %44, -1
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %64, i32 %44) #11
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !3
  %77 = or i64 %41, %30
  %78 = zext i32 %76 to i64
  %79 = shl nuw i64 %78, 32
  %80 = zext i32 %70 to i64
  %81 = or i64 %79, %80
  %82 = bitcast %"class.blink::IntRect"* %0 to i64*
  store i64 %77, i64* %82, align 4
  %83 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %0, i64 0, i32 1
  %84 = bitcast %"class.blink::IntSize"* %83 to i64*
  store i64 %81, i64* %84, align 4
  ret void
}

declare { i64, i64 } @_ZNK5blink20TransformationMatrix7MapRectERKNS_7IntRectE(%"class.blink::TransformationMatrix"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector"*, %"class.blink::TransformPaintPropertyNode"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %6, align 8
  %8 = icmp ugt %"class.blink::TransformPaintPropertyNode"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %7, i64 %10
  %12 = icmp ugt %"class.blink::TransformPaintPropertyNode"** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #11
  %14 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::TransformPaintPropertyNode"** %1 to i64
  %17 = ptrtoint %"class.blink::TransformPaintPropertyNode"** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #11
  %20 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %6, align 8
  %21 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::TransformPaintPropertyNode"** [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::TransformPaintPropertyNode"** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %23, i64 %26
  %28 = bitcast %"class.blink::TransformPaintPropertyNode"** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::TransformPaintPropertyNode"** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %31, align 8
  %33 = icmp eq %"class.blink::TransformPaintPropertyNode"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink26TransformPaintPropertyNodeEEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink26TransformPaintPropertyNodeEEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #11
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %5, align 8
  %7 = icmp eq %"class.blink::TransformPaintPropertyNode"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::TransformPaintPropertyNode"**
  %10 = icmp eq %"class.blink::TransformPaintPropertyNode"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::TransformPaintPropertyNode"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #11
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer"* %19, %"class.blink::TransformPaintPropertyNode"** nonnull %6) #11
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink26TransformPaintPropertyNodeEEEmm(i64 %30) #11
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink26TransformPaintPropertyNodeEEEPKcv, i64 0, i64 0)) #11
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::TransformPaintPropertyNode"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !5

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::TransformPaintPropertyNode"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #11
  %46 = load %"class.blink::TransformPaintPropertyNode"**, %"class.blink::TransformPaintPropertyNode"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::TransformPaintPropertyNode"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::TransformPaintPropertyNode"**
  %51 = icmp eq %"class.blink::TransformPaintPropertyNode"** %48, %50
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPKN5blink26TransformPaintPropertyNodeELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer"* %53, %"class.blink::TransformPaintPropertyNode"** %48) #11
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink26TransformPaintPropertyNodeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS4_EEvOT_(%"class.WTF::Vector.45"*, %"class.blink::ClipPaintPropertyNode"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %6, align 8
  %8 = icmp ugt %"class.blink::ClipPaintPropertyNode"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %7, i64 %10
  %12 = icmp ugt %"class.blink::ClipPaintPropertyNode"** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.45"* %0, i32 %5) #11
  %14 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::ClipPaintPropertyNode"** %1 to i64
  %17 = ptrtoint %"class.blink::ClipPaintPropertyNode"** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.45"* %0, i32 %5) #11
  %20 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %6, align 8
  %21 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::ClipPaintPropertyNode"** [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::ClipPaintPropertyNode"** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::ClipPaintPropertyNode"*, %"class.blink::ClipPaintPropertyNode"** %23, i64 %26
  %28 = bitcast %"class.blink::ClipPaintPropertyNode"** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::ClipPaintPropertyNode"** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.45"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %31, align 8
  %33 = icmp eq %"class.blink::ClipPaintPropertyNode"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink21ClipPaintPropertyNodeEEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink21ClipPaintPropertyNodeEEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.45"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.45"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.45"* %0, i32 %27) #11
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.45"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %5, align 8
  %7 = icmp eq %"class.blink::ClipPaintPropertyNode"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::ClipPaintPropertyNode"**
  %10 = icmp eq %"class.blink::ClipPaintPropertyNode"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.45"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.45"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::ClipPaintPropertyNode"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #11
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.46"* %19, %"class.blink::ClipPaintPropertyNode"** nonnull %6) #11
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink21ClipPaintPropertyNodeEEEmm(i64 %30) #11
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink21ClipPaintPropertyNodeEEEPKcv, i64 0, i64 0)) #11
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::ClipPaintPropertyNode"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !5

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::ClipPaintPropertyNode"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #11
  %46 = load %"class.blink::ClipPaintPropertyNode"**, %"class.blink::ClipPaintPropertyNode"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::ClipPaintPropertyNode"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::ClipPaintPropertyNode"**
  %51 = icmp eq %"class.blink::ClipPaintPropertyNode"** %48, %50
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPKN5blink21ClipPaintPropertyNodeELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.46"* %53, %"class.blink::ClipPaintPropertyNode"** %48) #11
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.45"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink21ClipPaintPropertyNodeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2000, i32 1}
