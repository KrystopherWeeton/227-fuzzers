; ModuleID = '../../ui/base/ime/grammar_fragment.cc'
source_filename = "../../ui/base/ime/grammar_fragment.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.ui::GrammarFragment" = type { %"class.gfx::Range", %"class.std::__1::basic_string" }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN2ui15GrammarFragmentC1ERKN3gfx5RangeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE = hidden unnamed_addr alias void (%"struct.ui::GrammarFragment"*, %"class.gfx::Range"*, %"class.std::__1::basic_string"*), void (%"struct.ui::GrammarFragment"*, %"class.gfx::Range"*, %"class.std::__1::basic_string"*)* @_ZN2ui15GrammarFragmentC2ERKN3gfx5RangeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE
@_ZN2ui15GrammarFragmentC1ERKS0_ = hidden unnamed_addr alias void (%"struct.ui::GrammarFragment"*, %"struct.ui::GrammarFragment"*), void (%"struct.ui::GrammarFragment"*, %"struct.ui::GrammarFragment"*)* @_ZN2ui15GrammarFragmentC2ERKS0_
@_ZN2ui15GrammarFragmentD1Ev = hidden unnamed_addr alias void (%"struct.ui::GrammarFragment"*), void (%"struct.ui::GrammarFragment"*)* @_ZN2ui15GrammarFragmentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GrammarFragmentC2ERKN3gfx5RangeERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"struct.ui::GrammarFragment"*, %"class.gfx::Range"* nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.gfx::Range"* %1 to i64*
  %5 = bitcast %"struct.ui::GrammarFragment"* %0 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #6
  br label %20

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %7, i8* %17, i64 %19) #6
  br label %20

20:                                               ; preds = %12, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GrammarFragmentC2ERKS0_(%"struct.ui::GrammarFragment"*, %"struct.ui::GrammarFragment"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::GrammarFragment"* %1 to i64*
  %4 = bitcast %"struct.ui::GrammarFragment"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #6
  br label %20

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %17, i64 %19) #6
  br label %20

20:                                               ; preds = %12, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15GrammarFragmentD2Ev(%"struct.ui::GrammarFragment"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui15GrammarFragmenteqERKS0_(%"struct.ui::GrammarFragment"* nocapture readonly, %"struct.ui::GrammarFragment"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %66

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %66

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %1, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %24, %32
  br i1 %33, label %34, label %66

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %38 = select i1 %20, i8* %36, i8* %37
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %42 = select i1 %28, i8* %40, i8* %41
  %43 = icmp eq i64 %24, 0
  br i1 %20, label %50, label %44

44:                                               ; preds = %34
  br i1 %43, label %66, label %45

45:                                               ; preds = %44
  %46 = ptrtoint i8* %36 to i64
  %47 = trunc i64 %46 to i8
  %48 = load i8, i8* %42, align 1
  %49 = icmp eq i8 %48, %47
  br i1 %49, label %54, label %66

50:                                               ; preds = %34
  br i1 %43, label %66, label %51

51:                                               ; preds = %50
  %52 = tail call i32 @bcmp(i8* %38, i8* %42, i64 %24) #6
  %53 = icmp eq i32 %52, 0
  br label %66

54:                                               ; preds = %45, %61
  %55 = phi i64 [ %58, %61 ], [ %23, %45 ]
  %56 = phi i8* [ %59, %61 ], [ %37, %45 ]
  %57 = phi i8* [ %62, %61 ], [ %42, %45 ]
  %58 = add i64 %55, -1
  %59 = getelementptr inbounds i8, i8* %56, i64 1
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds i8, i8* %57, i64 1
  %63 = load i8, i8* %59, align 1
  %64 = load i8, i8* %62, align 1
  %65 = icmp eq i8 %63, %64
  br i1 %65, label %54, label %66

66:                                               ; preds = %61, %54, %45, %2, %51, %50, %44, %14, %8
  %67 = phi i1 [ false, %8 ], [ false, %14 ], [ %53, %51 ], [ true, %50 ], [ true, %44 ], [ false, %2 ], [ false, %45 ], [ true, %54 ], [ false, %61 ]
  ret i1 %67
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui15GrammarFragmentneERKS0_(%"struct.ui::GrammarFragment"* nocapture readonly, %"struct.ui::GrammarFragment"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %66

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %66

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %1, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"struct.ui::GrammarFragment", %"struct.ui::GrammarFragment"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %24, %32
  br i1 %33, label %34, label %66

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %38 = select i1 %20, i8* %36, i8* %37
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %42 = select i1 %28, i8* %40, i8* %41
  %43 = icmp eq i64 %24, 0
  br i1 %20, label %50, label %44

44:                                               ; preds = %34
  br i1 %43, label %66, label %45

45:                                               ; preds = %44
  %46 = ptrtoint i8* %36 to i64
  %47 = trunc i64 %46 to i8
  %48 = load i8, i8* %42, align 1
  %49 = icmp eq i8 %48, %47
  br i1 %49, label %54, label %66

50:                                               ; preds = %34
  br i1 %43, label %66, label %51

51:                                               ; preds = %50
  %52 = tail call i32 @bcmp(i8* %38, i8* %42, i64 %24) #6
  %53 = icmp ne i32 %52, 0
  br label %66

54:                                               ; preds = %45, %61
  %55 = phi i64 [ %58, %61 ], [ %23, %45 ]
  %56 = phi i8* [ %59, %61 ], [ %37, %45 ]
  %57 = phi i8* [ %62, %61 ], [ %42, %45 ]
  %58 = add i64 %55, -1
  %59 = getelementptr inbounds i8, i8* %56, i64 1
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds i8, i8* %57, i64 1
  %63 = load i8, i8* %59, align 1
  %64 = load i8, i8* %62, align 1
  %65 = icmp eq i8 %63, %64
  br i1 %65, label %54, label %66

66:                                               ; preds = %54, %61, %45, %2, %8, %14, %44, %50, %51
  %67 = phi i1 [ true, %8 ], [ true, %14 ], [ %53, %51 ], [ false, %50 ], [ false, %44 ], [ true, %2 ], [ true, %45 ], [ false, %54 ], [ true, %61 ]
  ret i1 %67
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
